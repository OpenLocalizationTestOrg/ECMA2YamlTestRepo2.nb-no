### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.RSACryptoServiceProvider
  id: RSACryptoServiceProvider
  children:
  - System.Security.Cryptography.RSACryptoServiceProvider.#ctor
  - System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)
  - System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)
  - System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)
  - System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo
  - System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)
  - System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(System.Byte[])
  - System.Security.Cryptography.RSACryptoServiceProvider.Dispose(System.Boolean)
  - System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)
  - System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(System.Byte[])
  - System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)
  - System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)
  - System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])
  - System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)
  - System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm
  - System.Security.Cryptography.RSACryptoServiceProvider.KeySize
  - System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp
  - System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly
  - System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm
  - System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)
  - System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)
  - System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)
  - System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)
  - System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore
  - System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])
  - System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])
  - System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  langs:
  - csharp
  name: RSACryptoServiceProvider
  nameWithType: RSACryptoServiceProvider
  fullName: System.Security.Cryptography.RSACryptoServiceProvider
  type: Class
  summary: "Utfører asymmetrisk kryptering og dekryptering som bruker implementeringen av den <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> algoritmen som er angitt av kryptografitjenesteleverandøren (CSP). Denne klassen kan ikke arves."
  remarks: "This is the default implementation of <xref:System.Security.Cryptography.RSA>.  \n  \n The RSACryptoServiceProvider supports key sizes from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed.  It supports key sizes from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed.  \n  \n Valid key sizes are dependent on the cryptographic service provider (CSP) that is used by the RSACryptoServiceProvider instance. Windows CSPs enable keys sizes of 384 to 16384 bits for Windows versions prior to [!INCLUDE[win81](~/add/includes/ajax-current-ext-md.md)], and key sizes of 512 to 16384 bits for [!INCLUDE[win81](~/add/includes/ajax-current-ext-md.md)]. For more information, see [CryptGenKey](http://msdn.microsoft.com/library/aa379941\\(v=vs.85\\).aspx) function in the Windows documentation.  \n  \n## Interoperation with the Microsoft Cryptographic API (CAPI)  \n Unlike the RSA implementation in unmanaged CAPI, the RSACryptoServiceProvider class reverses the order of an encrypted array of bytes after encryption and before decryption.  By default, data encrypted by the RSACryptoServiceProvider class cannot be decrypted by the CAPI `CryptDecrypt` function and data encrypted by the CAPI `CryptEncrypt` method cannot be decrypted by the RSACryptoServiceProvider class.  \n  \n If you do not compensate for the reverse ordering when interoperating between APIs, the RSACryptoServiceProvider class throws a <xref:System.Security.Cryptography.CryptographicException>.  \n  \n To interoperate with CAPI, you must manually reverse the order of encrypted bytes before the encrypted data interoperates with another API.  You can easily reverse the order of a managed byte array by calling the <xref:System.Array.Reverse%2A?displayProperty=fullName> method."
  example:
  - "The following code example uses the RSACryptoServiceProvider class to encrypt a string into an array of bytes and then decrypt the bytes back into a string.  \n  \n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider#1](~/add/codesnippet/cpp/t-system.security.crypto_34_1.cpp)]\n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider#1](~/add/codesnippet/csharp/t-system.security.crypto_34_1.cs)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider#1](~/add/codesnippet/visualbasic/t-system.security.crypto_34_1.vb)]  \n  \n The following code example exports the key information created using the RSACryptoServiceProvider into an <xref:System.Security.Cryptography.RSAParameters> object.  \n  \n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/add/codesnippet/csharp/t-system.security.crypto_34_2.cs)]\n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/add/codesnippet/cpp/t-system.security.crypto_34_2.cpp)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/add/codesnippet/visualbasic/t-system.security.crypto_34_2.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class RSACryptoServiceProvider : System.Security.Cryptography.RSA, System.Security.Cryptography.ICspAsymmetricAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.AsymmetricAlgorithm
  - System.Security.Cryptography.RSA
  implements:
  - System.Security.Cryptography.ICspAsymmetricAlgorithm
  inheritedMembers:
  - System.Security.Cryptography.AsymmetricAlgorithm.Clear
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.RSA.Create
  - System.Security.Cryptography.RSA.Create(System.String)
  - System.Security.Cryptography.RSA.FromXmlString(System.String)
  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.ToXmlString(System.Boolean)
  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: RSACryptoServiceProvider()
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider()
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.RSACryptoServiceProvider&quot;> </xref> klasse ved hjelp av standardnøkkelen for."
  remarks: "Hvis det finnes ingen standard nøkkel, opprettes en ny nøkkel.       Denne konstruktøren oppretter en <xref:System.Security.Cryptography.KeyNumber>nøkkelparet brukes til å kryptere økten nøkler slik at de kan trygt lagret og utveksles med andre brukere.</xref:System.Security.Cryptography.KeyNumber>  Nøkkelen genererte samsvarer med en nøkkel som er generert ved hjelp av `AT_KEYEXCHANGE` verdien som brukes i den uforvaltede Microsoft kryptografisk API (CAPI)."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class to encrypt a string into an array of bytes and then decrypt the bytes back into a string.  \n  \n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider#1](~/add/codesnippet/cpp/m-system.security.crypto_117_1.cpp)]\n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider#1](~/add/codesnippet/csharp/m-system.security.crypto_117_1.cs)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider#1](~/add/codesnippet/visualbasic/m-system.security.crypto_117_1.vb)]"
  syntax:
    content: public RSACryptoServiceProvider ();
    parameters: []
  overload: System.Security.Cryptography.RSACryptoServiceProvider.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Være kan ikke anskaffet kryptografitjenesteleverandør (CSP)."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: RSACryptoServiceProvider(Int32)
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(Int32)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.RSACryptoServiceProvider&quot;> </xref> klassen med den angitte nøkkelstørrelsen."
  remarks: "Hvis det finnes ingen standard nøkkel, opprettes en ny nøkkel.       Denne konstruktøren oppretter en <xref:System.Security.Cryptography.KeyNumber>nøkkelparet brukes til å kryptere økten nøkler slik at de kan trygt lagret og utveksles med andre brukere.</xref:System.Security.Cryptography.KeyNumber>  Nøkkelen genererte samsvarer med en nøkkel som er generert ved hjelp av `AT_KEYEXCHANGE` verdien som brukes i den uforvaltede Microsoft kryptografisk API (CAPI)."
  example:
  - "The following code example creates a <xref:System.Security.Cryptography.RSACryptoServiceProvider>, generates a new key, and stores it in a key container.  \n  \n [!code-cs[Cryptography.RSACSP.ctor-int32-2#1](~/add/codesnippet/csharp/m-system.security.crypto_54_1.cs)]\n [!code-cpp[Cryptography.RSACSP.ctor-int32-2#1](~/add/codesnippet/cpp/m-system.security.crypto_54_1.cpp)]\n [!code-vb[Cryptography.RSACSP.ctor-int32-2#1](~/add/codesnippet/visualbasic/m-system.security.crypto_54_1.vb)]"
  syntax:
    content: public RSACryptoServiceProvider (int dwKeySize);
    parameters:
    - id: dwKeySize
      type: System.Int32
      description: "Størrelsen på nøkkelen som brukes i biter."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Være kan ikke anskaffet kryptografitjenesteleverandør (CSP)."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)
  id: '#ctor(System.Security.Cryptography.CspParameters)'
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: RSACryptoServiceProvider(CspParameters)
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(CspParameters)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(CspParameters)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.RSACryptoServiceProvider&quot;> </xref> klassen med de angitte parameterne."
  remarks: "Denne konstruktøren oppretter eller blir brukt en nøkkelbeholderen angitt ved hjelp av den <xref:System.Security.Cryptography.CspParameters>felt for den `parameters` parameteren.</xref:System.Security.Cryptography.CspParameters>       Som standard denne konstruktøren oppretter en <xref:System.Security.Cryptography.KeyNumber>nøkkelparet brukes til å kryptere økten nøkler slik at de kan trygt lagret og utveksles med andre brukere.</xref:System.Security.Cryptography.KeyNumber>  Nøkkelen genererte samsvarer med en nøkkel som er generert ved hjelp av `AT_KEYEXCHANGE` verdien som brukes i den uforvaltede Microsoft kryptografisk API (CAPI).       Du kan opprette en <xref:System.Security.Cryptography.KeyNumber>nøkkel paret passende for godkjenning (digitalt signert) meldinger eller filer ved å angi den <xref:System.Security.Cryptography.CspParameters.KeyNumber>for den `parameters` parameter i <xref:System.Security.Cryptography.KeyNumber>verdien.</xref:System.Security.Cryptography.KeyNumber> </xref:System.Security.Cryptography.CspParameters.KeyNumber> </xref:System.Security.Cryptography.KeyNumber> Denne typen nøkkel som samsvarer med den `AT_SIGNATURE` verdien som brukes i CAPI.       Hvis du oppretter en <xref:System.Security.Cryptography.RSACryptoServiceProvider>objekt med den <xref:System.Security.Cryptography.KeyNumber>verdien angitt, og deretter opprette en annen <xref:System.Security.Cryptography.RSACryptoServiceProvider>objekt med den <xref:System.Security.Cryptography.KeyNumber>verdi angitt både nøkler vil bli plassert i en enkelt beholder Hvis begge objektene angir navnet på samme nøkkelbeholderen.</xref:System.Security.Cryptography.KeyNumber> </xref:System.Security.Cryptography.RSACryptoServiceProvider> </xref:System.Security.Cryptography.KeyNumber> </xref:System.Security.Cryptography.RSACryptoServiceProvider>       Å opprette en nøkkel som er kompatibel med stong-navn signering ved bruk av den <xref:System.Security.Cryptography.RSACryptoServiceProvider>klasse, må du opprette en <xref:System.Security.Cryptography.KeyNumber>nøkkel paret.</xref:System.Security.Cryptography.KeyNumber> </xref:System.Security.Cryptography.RSACryptoServiceProvider>"
  example:
  - "The following code example creates an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object, generates a new key, and stores it in a key container.  \n  \n [!code-cpp[Cryptography.RSACSP.ctor-csp#1](~/add/codesnippet/cpp/c05514b0-515d-4fa6-b581-_1.cpp)]\n [!code-vb[Cryptography.RSACSP.ctor-csp#1](~/add/codesnippet/visualbasic/c05514b0-515d-4fa6-b581-_1.vb)]\n [!code-cs[Cryptography.RSACSP.ctor-csp#1](~/add/codesnippet/csharp/c05514b0-515d-4fa6-b581-_1.cs)]"
  syntax:
    content: public RSACryptoServiceProvider (System.Security.Cryptography.CspParameters parameters);
    parameters:
    - id: parameters
      type: System.Security.Cryptography.CspParameters
      description: "Parametere som skal sendes til kryptografitjenesteleverandøren (CSP)."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Være kan ikke anskaffet CSP i."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)
  id: '#ctor(System.Int32,System.Security.Cryptography.CspParameters)'
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: RSACryptoServiceProvider(Int32,CspParameters)
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(Int32,CspParameters)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(Int32,CspParameters)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.RSACryptoServiceProvider&quot;> </xref> klassen med de angitte nøkkelstørrelsen og parameterne."
  remarks: "Denne konstruktøren oppretter eller blir brukt en nøkkelbeholderen angitt ved hjelp av den <xref:System.Security.Cryptography.CspParameters>felt for den `parameters` parameteren.</xref:System.Security.Cryptography.CspParameters>       Som standard denne konstruktøren oppretter en <xref:System.Security.Cryptography.KeyNumber>nøkkelparet brukes til å kryptere økten nøkler slik at de kan trygt lagret og utveksles med andre brukere.</xref:System.Security.Cryptography.KeyNumber>  Nøkkelen genererte samsvarer med en nøkkel som er generert ved hjelp av `AT_KEYEXCHANGE` verdien som brukes i den uforvaltede Microsoft kryptografisk API (CAPI).       Du kan opprette en <xref:System.Security.Cryptography.KeyNumber>nøkkel paret passende for godkjenning (digitalt signert) meldinger eller filer ved å angi den <xref:System.Security.Cryptography.CspParameters.KeyNumber>for den `parameters` parameter i <xref:System.Security.Cryptography.KeyNumber>verdien.</xref:System.Security.Cryptography.KeyNumber> </xref:System.Security.Cryptography.CspParameters.KeyNumber> </xref:System.Security.Cryptography.KeyNumber> Denne typen nøkkel som samsvarer med den `AT_SIGNATURE` verdien som brukes i CAPI.       Hvis du oppretter en <xref:System.Security.Cryptography.RSACryptoServiceProvider>objekt med den <xref:System.Security.Cryptography.KeyNumber>verdien angitt, og deretter opprette en annen <xref:System.Security.Cryptography.RSACryptoServiceProvider>objekt med den <xref:System.Security.Cryptography.KeyNumber>verdi angitt både nøkler vil bli plassert i en enkelt beholder Hvis begge objektene angir navnet på samme nøkkelbeholderen.</xref:System.Security.Cryptography.KeyNumber> </xref:System.Security.Cryptography.RSACryptoServiceProvider> </xref:System.Security.Cryptography.KeyNumber> </xref:System.Security.Cryptography.RSACryptoServiceProvider>       Å opprette en nøkkel som er kompatibel med stong-navn signering ved bruk av den <xref:System.Security.Cryptography.RSACryptoServiceProvider>klasse, må du opprette en <xref:System.Security.Cryptography.KeyNumber>nøkkel paret.</xref:System.Security.Cryptography.KeyNumber> </xref:System.Security.Cryptography.RSACryptoServiceProvider>"
  example:
  - "The following code example creates a <xref:System.Security.Cryptography.RSACryptoServiceProvider>, generates a new key, and stores it in a key container.  \n  \n [!code-cpp[Cryptography.RSACSP.ctor-int32-csp#1](~/add/codesnippet/cpp/d6fb023a-3018-4e24-9035-_1.cpp)]\n [!code-cs[Cryptography.RSACSP.ctor-int32-csp#1](~/add/codesnippet/csharp/d6fb023a-3018-4e24-9035-_1.cs)]\n [!code-vb[Cryptography.RSACSP.ctor-int32-csp#1](~/add/codesnippet/visualbasic/d6fb023a-3018-4e24-9035-_1.vb)]"
  syntax:
    content: public RSACryptoServiceProvider (int dwKeySize, System.Security.Cryptography.CspParameters parameters);
    parameters:
    - id: dwKeySize
      type: System.Int32
      description: "Størrelsen på nøkkelen som brukes i biter."
    - id: parameters
      type: System.Security.Cryptography.CspParameters
      description: "Parametere som skal sendes til kryptografitjenesteleverandøren (CSP)."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Være kan ikke anskaffet CSP i.       - eller - nøkkelen kan ikke opprettes."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo
  id: CspKeyContainerInfo
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: CspKeyContainerInfo
  nameWithType: RSACryptoServiceProvider.CspKeyContainerInfo
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Henter en <xref href=&quot;System.Security.Cryptography.CspKeyContainerInfo&quot;> </xref> -objektet som beskriver tilleggsinformasjon om et kryptografisk nøkkelpar."
  remarks: "Bruk CspKeyContainerInfo-egenskapen til å hente mer informasjon om et kryptografisk nøkkelpar.  Det returnerte <xref:System.Security.Cryptography.CspKeyContainerInfo>objektet beskriver om nøkkelen kan eksporteres, og angir navnet på nøkkelbeholderen, informasjon om leverandøren og annen informasjon.</xref:System.Security.Cryptography.CspKeyContainerInfo>       I tilfeller der en tilfeldig nøkkel er generert opprettes en nøkkelbeholderen ikke før du kaller en metode som bruker nøkkelen.  Noen egenskaper for det <xref:System.Security.Cryptography.CspKeyContainerInfo>objektet som ble returnert av den <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A>egenskapen vil throw en <xref:System.Security.Cryptography.CryptographicException>Hvis en nøkkelbeholderen ikke er opprettet.</xref:System.Security.Cryptography.CryptographicException> </xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> </xref:System.Security.Cryptography.CspKeyContainerInfo>  Hvis du vil forsikre deg om at en nøkkelbeholderen er opprettet, kan du kalle en metode for eksempel <xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A>, <xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A>, <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A>og så videre før du kaller den <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A>egenskapen.</xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> </xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A> </xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A> </xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A> </xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A>"
  example:
  - "The following code example demonstrates how to call the <xref:System.Security.Cryptography.CspKeyContainerInfo> property.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_35_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_35_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_35_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.CspKeyContainerInfo CspKeyContainerInfo { get; }
    return:
      type: System.Security.Cryptography.CspKeyContainerInfo
      description: "En <xref href=&quot;System.Security.Cryptography.CspKeyContainerInfo&quot;> </xref> -objektet som beskriver tilleggsinformasjon om et kryptografisk nøkkelpar."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)
  id: Decrypt(System.Byte[],System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: Decrypt(Byte[],Boolean)
  nameWithType: RSACryptoServiceProvider.Decrypt(Byte[],Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(Byte[],Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Dekrypterer data med den <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> algoritmen."
  remarks: "Bruk <xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A>datakrypteringsfeil for dekryptering med denne metoden.</xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A>"
  example:
  - "The following code example encrypts and decrypts data.  \n  \n This example uses the <xref:System.Text.ASCIIEncoding> class; however, the <xref:System.Text.UnicodeEncoding> class may be preferable in large data operations. The encrypted value can be saved as an `nvarchar` data type in Microsoft SQL Server 2005.  \n  \n [!code-cs[Cryptography.RSACSP.Decrypt#1](~/add/codesnippet/csharp/8cfd6fd2-9442-4043-ad36-_1.cs)]\n [!code-cpp[Cryptography.RSACSP.Decrypt#1](~/add/codesnippet/cpp/8cfd6fd2-9442-4043-ad36-_1.cpp)]\n [!code-vb[Cryptography.RSACSP.Decrypt#1](~/add/codesnippet/visualbasic/8cfd6fd2-9442-4043-ad36-_1.vb)]"
  syntax:
    content: public byte[] Decrypt (byte[] rgb, bool fOAEP);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "Å dekryptere dataene."
    - id: fOAEP
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>til å utføre direkte <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> dekryptering som bruker OAEP utfylling (bare tilgjengelig på en datamaskin som kjører Microsoft Windows XP eller nyere); ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> å bruke PKCS&#1; v1.5 utfylling."
    return:
      type: System.Byte[]
      description: "Den dekrypterte data som er den opprinnelige ren teksten før kryptering."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Være kan ikke anskaffet kryptografitjenesteleverandør (CSP).       - eller - <code> fOAEP </code> parameteren er <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> og lengden på den <code> rgb </code> parameteren er større enn <xref:System.Security.Cryptography.RSACryptoServiceProvider.KeySize*>.</xref:System.Security.Cryptography.RSACryptoServiceProvider.KeySize*>       - eller - <code> fOAEP </code> parameteren er <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> og OAEP støttes ikke.       - eller - nøkkelen samsvarer ikke med de krypterte dataene. Unntak ordlyden er imidlertid kanskje ikke nøyaktig. Det kan for eksempel si `Not enough storage is available to process this command`."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rgb </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  id: Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: Decrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSACryptoServiceProvider.Decrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(Byte[],RSAEncryptionPadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Dekrypterer data som tidligere ble kryptert med den <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> algoritmen ved hjelp av den angitte utfyllingen."
  remarks: '`padding`må være enten <xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=fullName>eller <xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=fullName>.</xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=fullName> </xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=fullName>'
  syntax:
    content: public override byte[] Decrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Dataene som skal dekrypteres."
    - id: padding
      type: System.Security.Cryptography.RSAEncryptionPadding
      description: "Utfyllingen."
    return:
      type: System.Byte[]
      description: "Den dekrypterte data."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Utfyllingsmodus støttes ikke."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(System.Byte[])
  id: DecryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: DecryptValue(Byte[])
  nameWithType: RSACryptoServiceProvider.DecryptValue(Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Denne metoden støttes ikke i den gjeldende versjonen."
  syntax:
    content: public override byte[] DecryptValue (byte[] rgb);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "Å dekryptere dataene."
    return:
      type: System.Byte[]
      description: "Den dekrypterte data som er den opprinnelige ren teksten før kryptering."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Denne metoden støttes ikke i den gjeldende versjonen."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: RSACryptoServiceProvider.Dispose(Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Som skal legges til."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)
  id: Encrypt(System.Byte[],System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: Encrypt(Byte[],Boolean)
  nameWithType: RSACryptoServiceProvider.Encrypt(Byte[],Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(Byte[],Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Krypterer data med den <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> algoritmen."
  remarks: "Tabellen nedenfor beskriver utfyllingen som støttes av forskjellige versjoner av Microsoft Windows og den maksimale lengden på `rgb` tillates av forskjellige kombinasjoner av operativsystemer og utfylling.      | Fylle | Operativsystemet støtter | Maksimal lengde på rgb parameteren |   |-------------|--------------------------------|-------------------------------------|   | OAEP utfylling (PKCS #1 v2) | Windows XP eller nyere. | Modulus størrelsen-2 -2 * hLen, der hLen er størrelsen på hash-koden. |   | Direkte kryptering (PKCS #1 v1.5) | Microsoft Windows 2000 eller senere med Krypteringspakker som er installert. | Modulus størrelse - 11. (11 byte er minimum fylle mulig.) |   | Direkte kryptering og OAEP utfylling støtter ikke | Microsoft Windows 98, installasjonen eller Windows 2000 eller senere uten Krypteringspakker som er installert. | Den maksimale størrelsen som er tillatt for en symmetrisk nøkkel. |       Bruk <xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A>dekryptere resultatet av denne metoden.</xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A>"
  example:
  - "The following code example initializes an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object to the value of a public key (sent by another party), generates a session key using the <xref:System.Security.Cryptography.RijndaelManaged> algorithm, and then encrypts the session key using the <xref:System.Security.Cryptography.RSACryptoServiceProvider> object.  Using this scheme, the session key could be sent back to the owner of the private RSA key and the two parties could use the session key to exchange encrypted data.  \n  \n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider.Encrypt#1](~/add/codesnippet/csharp/6b432226-1f8c-408d-a101-_1.cs)]\n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider.Encrypt#1](~/add/codesnippet/cpp/6b432226-1f8c-408d-a101-_1.cpp)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider.Encrypt#1](~/add/codesnippet/visualbasic/6b432226-1f8c-408d-a101-_1.vb)]"
  syntax:
    content: public byte[] Encrypt (byte[] rgb, bool fOAEP);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "Dataene krypteres."
    - id: fOAEP
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>til å utføre direkte <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> kryptering ved hjelp av OAEP utfylling (bare tilgjengelig på en datamaskin som kjører Windows XP eller nyere); ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> å bruke PKCS&#1; v1.5 utfylling."
    return:
      type: System.Byte[]
      description: "De krypterte dataene."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Være kan ikke anskaffet kryptografitjenesteleverandør (CSP).       - eller - lengden på den <code> rgb </code> parameteren er større enn maksimalt tillatte lengden.       - eller - <code> fOAEP </code> parameteren er <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> og OAEP utfylling støttes ikke."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rgb </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  id: Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: Encrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSACryptoServiceProvider.Encrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(Byte[],RSAEncryptionPadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Krypterer data med den <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> algoritmen ved hjelp av den angitte utfyllingen."
  remarks: '`padding`må være enten <xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=fullName>eller <xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=fullName>.</xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=fullName> </xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=fullName>'
  syntax:
    content: public override byte[] Encrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Dataene for å kryptere."
    - id: padding
      type: System.Security.Cryptography.RSAEncryptionPadding
      description: "Utfyllingen."
    return:
      type: System.Byte[]
      description: "De krypterte dataene."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Utfyllingsmodus støttes ikke."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(System.Byte[])
  id: EncryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: EncryptValue(Byte[])
  nameWithType: RSACryptoServiceProvider.EncryptValue(Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Denne metoden støttes ikke i den gjeldende versjonen."
  syntax:
    content: public override byte[] EncryptValue (byte[] rgb);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "Dataene krypteres."
    return:
      type: System.Byte[]
      description: "De krypterte dataene."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Denne metoden støttes ikke i den gjeldende versjonen."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)
  id: ExportCspBlob(System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: ExportCspBlob(Boolean)
  nameWithType: RSACryptoServiceProvider.ExportCspBlob(Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Eksporterer en blob som inneholder viktig informasjon knyttet til en <xref href=&quot;System.Security.Cryptography.RSACryptoServiceProvider&quot;> </xref> objektet."
  remarks: "Metoden ExportCspBlob returnerer en blob som inneholder viktig informasjon som er kompatibel med den uforvaltede Microsoft kryptografisk API (CAPI)."
  syntax:
    content: public byte[] ExportCspBlob (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>inkludere private nøkkelen. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Byte[]
      description: "En bytematrise som inneholder viktig informasjon knyttet til en <xref href=&quot;System.Security.Cryptography.RSACryptoServiceProvider&quot;> </xref> objektet."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)
  id: ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: ExportParameters(Boolean)
  nameWithType: RSACryptoServiceProvider.ExportParameters(Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Eksporter den <xref href=&quot;System.Security.Cryptography.RSAParameters&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example exports the key information created using the <xref:System.Security.Cryptography.RSACryptoServiceProvider> into an <xref:System.Security.Cryptography.RSAParameters> object.  \n  \n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/add/codesnippet/csharp/f018c1e5-b1fd-413d-8285-_1.cs)]\n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/add/codesnippet/cpp/f018c1e5-b1fd-413d-8285-_1.cpp)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/add/codesnippet/visualbasic/f018c1e5-b1fd-413d-8285-_1.vb)]"
  syntax:
    content: public override System.Security.Cryptography.RSAParameters ExportParameters (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>inkludere private parametere; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Security.Cryptography.RSAParameters
      description: "Parameterne for <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Nøkkelen kan ikke eksporteres."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: HashData(Stream,HashAlgorithmName)
  nameWithType: RSACryptoServiceProvider.HashData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.HashData(Stream,HashAlgorithmName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.IO.Stream
      description: "Som skal legges til."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "Som skal legges til."
    return:
      type: System.Byte[]
      description: "Som skal legges til."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.HashData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: RSACryptoServiceProvider.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Som skal legges til."
    - id: offset
      type: System.Int32
      description: "Som skal legges til."
    - id: count
      type: System.Int32
      description: "Som skal legges til."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "Som skal legges til."
    return:
      type: System.Byte[]
      description: "Som skal legges til."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.HashData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])
  id: ImportCspBlob(System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: ImportCspBlob(Byte[])
  nameWithType: RSACryptoServiceProvider.ImportCspBlob(Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Importerer en blob som representerer RSA viktig informasjon."
  remarks: "Metoden ImportCspBlob initialiserer viktige data for en <xref:System.Security.Cryptography.RSACryptoServiceProvider>objekt med en blob som er kompatibel med den uforvaltede Microsoft kryptografisk API (CAPI).</xref:System.Security.Cryptography.RSACryptoServiceProvider>"
  syntax:
    content: public void ImportCspBlob (byte[] keyBlob);
    parameters:
    - id: keyBlob
      type: System.Byte[]
      description: "En bytematrise som representerer en RSA-nøkkel-blob."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)
  id: ImportParameters(System.Security.Cryptography.RSAParameters)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: ImportParameters(RSAParameters)
  nameWithType: RSACryptoServiceProvider.ImportParameters(RSAParameters)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(RSAParameters)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Importerer den angitte <xref href=&quot;System.Security.Cryptography.RSAParameters&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example imports key information created from an <xref:System.Security.Cryptography.RSAParameters> object into an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object.  \n  \n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters#1](~/add/codesnippet/cpp/c5e7ebba-6f05-4c89-be06-_1.cpp)]\n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters#1](~/add/codesnippet/csharp/c5e7ebba-6f05-4c89-be06-_1.cs)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters#1](~/add/codesnippet/visualbasic/c5e7ebba-6f05-4c89-be06-_1.vb)]"
  syntax:
    content: public override void ImportParameters (System.Security.Cryptography.RSAParameters parameters);
    parameters:
    - id: parameters
      type: System.Security.Cryptography.RSAParameters
      description: "Parameterne for <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Være kan ikke anskaffet kryptografitjenesteleverandør (CSP).       - eller - <code> parameters </code> parameteren mangler feltene."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm
  id: KeyExchangeAlgorithm
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: KeyExchangeAlgorithm
  nameWithType: RSACryptoServiceProvider.KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Henter navn på algoritmen nøkkelutvekslingen tilgjengelig med denne implementeringen av <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>."
  remarks: "Egenskapen angir navnet på algoritmen, ikke av typen. RSA-av PKCS1 KeyEx er for eksempel et nøkkelutvekslingen algoritmenavn."
  syntax:
    content: public override string KeyExchangeAlgorithm { get; }
    return:
      type: System.String
      description: "Navnet på algoritmen nøkkelutvekslingen Hvis det finnes. Ellers <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.KeySize
  id: KeySize
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: KeySize
  nameWithType: RSACryptoServiceProvider.KeySize
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.KeySize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Henter størrelsen på gjeldende nøkkel."
  remarks: "The <xref:System.Security.Cryptography.RSACryptoServiceProvider> supports key sizes from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed.  It supports key sizes from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed.  \n  \n Valid key sizes are dependent on the cryptographic service provider (CSP) that is used by the <xref:System.Security.Cryptography.RSACryptoServiceProvider> instance. Windows CSPs enable key sizes of 384 to 16384 bits for Windows versions prior to [!INCLUDE[win81](~/add/includes/ajax-current-ext-md.md)], and key sizes of 512 to 16384 bits for [!INCLUDE[win81](~/add/includes/ajax-current-ext-md.md)]. For more information, see [CryptGenKey](http://msdn.microsoft.com/library/aa379941\\(v=vs.85\\).aspx) function in the Windows documentation.  \n  \n The <xref:System.Security.Cryptography.RSACryptoServiceProvider> class does not allow you to change key sizes using the KeySize property.  Any value written to this property will fail to update the property without error.  To change the key size, use one of the constructor overloads."
  syntax:
    content: public override int KeySize { get; }
    return:
      type: System.Int32
      description: "Størrelsen på nøkkelen i biter."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.KeySize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp
  id: PersistKeyInCsp
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: PersistKeyInCsp
  nameWithType: RSACryptoServiceProvider.PersistKeyInCsp
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Henter eller angir en verdi som angir om nøkkelen skal beholdes i kryptografitjenesteleverandøren (CSP)."
  remarks: "Bruk denne egenskapen til å gjøre en nøkkel i en beholder.       Egenskapen PersistKeyInCsp automatisk er satt til `true` når du angir et nøkkelbeholdernavn i den <xref:System.Security.Cryptography.CspParameters.KeyContainerName>felt av en <xref:System.Security.Cryptography.CspParameters>objekt og bruke den til å initialisere en <xref:System.Security.Cryptography.RSACryptoServiceProvider>objektet ved å kalle én av konstruktører med en `parameters` parameter.</xref:System.Security.Cryptography.RSACryptoServiceProvider> </xref:System.Security.Cryptography.CspParameters> </xref:System.Security.Cryptography.CspParameters.KeyContainerName>       Egenskapen PersistKeyInCsp har ingen virkning hvis det <xref:System.Security.Cryptography.RSACryptoServiceProvider>objekt er opprettet med en `null` key beholdernavn.</xref:System.Security.Cryptography.RSACryptoServiceProvider>"
  example:
  - "The following code example creates an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object and persists the key to a key container.  \n  \n [!code-cs[Cryptography.RSACSP.PersistKey#1](~/add/codesnippet/csharp/p-system.security.crypto_52_1.cs)]\n [!code-vb[Cryptography.RSACSP.PersistKey#1](~/add/codesnippet/visualbasic/p-system.security.crypto_52_1.vb)]\n [!code-cpp[Cryptography.RSACSP.PersistKey#1](~/add/codesnippet/cpp/p-system.security.crypto_52_1.cpp)]"
  syntax:
    content: public bool PersistKeyInCsp { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis nøkkelen skal beholdes i CSP; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly
  id: PublicOnly
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: PublicOnly
  nameWithType: RSACryptoServiceProvider.PublicOnly
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Henter en verdi som angir om den <xref href=&quot;System.Security.Cryptography.RSACryptoServiceProvider&quot;> </xref> objektet inneholder en fellesnøkkel."
  remarks: "Den <xref:System.Security.Cryptography.RSACryptoServiceProvider>klassen kan være initialisert enten fellesnøkkel bare eller med både offentlige og private nøkkelen.</xref:System.Security.Cryptography.RSACryptoServiceProvider>  Bruk PublicOnly-egenskapen til å avgjøre om den gjeldende forekomsten inneholder en fellesnøkkel eller både en offentlige og private nøkkelen."
  syntax:
    content: public bool PublicOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den <xref href=&quot;System.Security.Cryptography.RSACryptoServiceProvider&quot;> </xref> objektet inneholder bare et felles key; ellers, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: SignatureAlgorithm
  nameWithType: RSACryptoServiceProvider.SignatureAlgorithm
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Henter navn på signaturalgoritmen tilgjengelig med denne implementeringen av <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>."
  remarks: "Denne egenskapen brukes til å angi algoritmen URI i XML-digital signatur klasser. Denne egenskapen returnerer alltid http://www.w3.org/2000/09/xmldsig#rsa-sha1 i denne implementeringen."
  syntax:
    content: public override string SignatureAlgorithm { get; }
    return:
      type: System.String
      description: "Navnet på signaturalgoritmen."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)
  id: SignData(System.Byte[],System.Object)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: SignData(Byte[],Object)
  nameWithType: RSACryptoServiceProvider.SignData(Byte[],Object)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(Byte[],Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Beregner hash-verdien for den angitte Bytematrisen ved hjelp av den angitte nummeralgoritmen og logger den resulterende hash-verdien."
  remarks: "Denne metoden, oppretter en digital signatur som er bekreftet ved hjelp av den <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A>metoden.</xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A>       Den `halg` parameteren godtar en <xref:System.String>, en <xref:System.Security.Cryptography.HashAlgorithm>, eller <xref:System.Type>.</xref:System.Type> </xref:System.Security.Cryptography.HashAlgorithm> </xref:System.String>"
  example:
  - "The following code example signs and verifies data.  \n  \n [!code-cpp[Cryptography.RSACSP.SignData2#1](~/add/codesnippet/cpp/ad78ce39-1ac6-4acb-8c2f-_1.cpp)]\n [!code-cs[Cryptography.RSACSP.SignData2#1](~/add/codesnippet/csharp/ad78ce39-1ac6-4acb-8c2f-_1.cs)]\n [!code-vb[Cryptography.RSACSP.SignData2#1](~/add/codesnippet/visualbasic/ad78ce39-1ac6-4acb-8c2f-_1.vb)]"
  syntax:
    content: public byte[] SignData (byte[] buffer, object halg);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Inndataene som til å beregne hash-koden."
    - id: halg
      type: System.Object
      description: "Nummeralgoritme som brukes til å opprette hash-verdien."
    return:
      type: System.Byte[]
      description: "Den <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> signatur for de angitte dataene."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>halg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> halg </code> parameteren er ikke en gyldig type."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)
  id: SignData(System.IO.Stream,System.Object)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: SignData(Stream,Object)
  nameWithType: RSACryptoServiceProvider.SignData(Stream,Object)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(Stream,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Beregner hash-verdien for den angitte inngående dataflyten ved hjelp av den angitte nummeralgoritmen og logger den resulterende hash-verdien."
  remarks: "Den `halg` parameteren godtar en <xref:System.String>, en <xref:System.Security.Cryptography.HashAlgorithm>, eller <xref:System.Type>.</xref:System.Type> </xref:System.Security.Cryptography.HashAlgorithm> </xref:System.String>"
  example:
  - "The following code example signs and verifies data.  \n  \n [!code-cs[Cryptography.RSACSP.SignData3#1](~/add/codesnippet/csharp/35bfe7e1-edb8-40ab-9df0-_1.cs)]\n [!code-cpp[Cryptography.RSACSP.SignData3#1](~/add/codesnippet/cpp/35bfe7e1-edb8-40ab-9df0-_1.cpp)]\n [!code-vb[Cryptography.RSACSP.SignData3#1](~/add/codesnippet/visualbasic/35bfe7e1-edb8-40ab-9df0-_1.vb)]"
  syntax:
    content: public byte[] SignData (System.IO.Stream inputStream, object halg);
    parameters:
    - id: inputStream
      type: System.IO.Stream
      description: "Inndataene som til å beregne hash-koden."
    - id: halg
      type: System.Object
      description: "Nummeralgoritme som brukes til å opprette hash-verdien."
    return:
      type: System.Byte[]
      description: "Den <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> signatur for de angitte dataene."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>halg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> halg </code> parameteren er ikke en gyldig type."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)
  id: SignData(System.Byte[],System.Int32,System.Int32,System.Object)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: SignData(Byte[],Int32,Int32,Object)
  nameWithType: RSACryptoServiceProvider.SignData(Byte[],Int32,Int32,Object)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(Byte[],Int32,Int32,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Beregner hash-verdien av et delsett av den angitte Bytematrisen ved hjelp av den angitte nummeralgoritmen og logger den resulterende hash-verdien."
  remarks: "Denne metoden, oppretter en digital signatur som er bekreftet ved hjelp av den <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A>metoden.</xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A>       Den `halg` parameteren godtar en <xref:System.String>, en <xref:System.Security.Cryptography.HashAlgorithm>, eller <xref:System.Type>.</xref:System.Type> </xref:System.Security.Cryptography.HashAlgorithm> </xref:System.String> Strengverdien kan være én av følgende:-identifikator (objekt-ID) egendefinert objektnavnet i hash-algoritmen som skal brukes, enten et navn som er registrert i kryptografiske konfigurasjonsfilen eller én i tabellen API-objekt-ID for kryptering.      -Objekt-ID-verdi. Må være i objekt-ID gjenkjennes av kryptering-API.       Du kan for eksempel bruke SignData (nye byte [5], &quot;1.3.14.3.2.26&quot;) eller SignData (nye byte [5], &quot;sha1&quot;) eller SignData (nye byte [5], &quot;SHA1&quot;)."
  example:
  - "The following code example signs and verifies data.  \n  \n [!code-cpp[Cryptography.RSACSP.SignData1#1](~/add/codesnippet/cpp/7bb71f9b-03f8-4e5b-ab7e-_1.cpp)]\n [!code-cs[Cryptography.RSACSP.SignData1#1](~/add/codesnippet/csharp/7bb71f9b-03f8-4e5b-ab7e-_1.cs)]\n [!code-vb[Cryptography.RSACSP.SignData1#1](~/add/codesnippet/visualbasic/7bb71f9b-03f8-4e5b-ab7e-_1.vb)]"
  syntax:
    content: public byte[] SignData (byte[] buffer, int offset, int count, object halg);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Inndataene som til å beregne hash-koden."
    - id: offset
      type: System.Int32
      description: "Forskyvning i matrisen som starter ved hjelp av data."
    - id: count
      type: System.Int32
      description: "Antall byte i matrisen som brukes som data."
    - id: halg
      type: System.Object
      description: "Nummeralgoritme som brukes til å opprette hash-verdien."
    return:
      type: System.Byte[]
      description: "Den <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> signatur for de angitte dataene."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>halg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> halg </code> parameteren er ikke en gyldig type."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)
  id: SignHash(System.Byte[],System.String)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: SignHash(Byte[],String)
  nameWithType: RSACryptoServiceProvider.SignHash(Byte[],String)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(Byte[],String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Beregner signaturen for den angitte hash-verdien ved å kryptere den private nøkkelen."
  remarks: "Denne metoden, oppretter en digital signatur som er bekreftet ved hjelp av den <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash%2A>metoden.</xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash%2A>       Ugyldig hash-algoritmer er <xref:System.Security.Cryptography.SHA1>og <xref:System.Security.Cryptography.MD5>.</xref:System.Security.Cryptography.MD5> </xref:System.Security.Cryptography.SHA1> Algoritme-ID kan utledes fra hash-navn ved hjelp av den <xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A>metoden.</xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A>"
  example:
  - "The following code example encrypts some data, creates a hash of the encrypted data, and then signs hash with a digital signature.  \n  \n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#1](~/add/codesnippet/cpp/f4f73450-8212-4a5d-b1df-_1.cpp)]\n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#1](~/add/codesnippet/csharp/f4f73450-8212-4a5d-b1df-_1.cs)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#1](~/add/codesnippet/visualbasic/f4f73450-8212-4a5d-b1df-_1.vb)]"
  syntax:
    content: public byte[] SignHash (byte[] rgbHash, string str);
    parameters:
    - id: rgbHash
      type: System.Byte[]
      description: "Hash-verdien i signeres."
    - id: str
      type: System.String
      description: "Hash-algoritmen identifikator (objekt-ID) brukes til å opprette hash-verdien for dataene."
    return:
      type: System.Byte[]
      description: "Den <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> signaturen for den angitte hash-verdien."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.SignHash*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rgbHash</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Være kan ikke anskaffet kryptografitjenesteleverandør (CSP).       - eller - det finnes ingen privat nøkkel."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSACryptoServiceProvider.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Beregner signaturen for den angitte hash-verdien ved å kryptere den private nøkkelen med den angitte utfyllingen."
  syntax:
    content: public override byte[] SignHash (byte[] hash, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: hash
      type: System.Byte[]
      description: "Hash-verdien i signeres."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "Hash-algoritmen navnet brukes til å opprette hash-verdien for dataene."
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: "Utfyllingen."
    return:
      type: System.Byte[]
      description: "Den <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> signaturen for den angitte hash-verdien."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.SignHash*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hashAlgorithm</code>er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hash</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>padding</code>er ikke lik &lt;xref:System.Security.Cryptography.RSASignaturePadding.Pkcs1%2A?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore
  id: UseMachineKeyStore
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: UseMachineKeyStore
  nameWithType: RSACryptoServiceProvider.UseMachineKeyStore
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Henter eller angir en verdi som angir om nøkkelen skal beholdes i datamaskinens key store i stedet for brukeren profilen butikken."
  remarks: "Når egenskapen settes `true` tilsvarer sending av <xref:System.Security.Cryptography.CspProviderFlags>-flagget som en <xref:System.Security.Cryptography.CspParameters>objektet.</xref:System.Security.Cryptography.CspParameters> </xref:System.Security.Cryptography.CspProviderFlags> Egenskapen UseMachineKeyStore gjelder for alle koden i det gjeldende programdomenet mens <xref:System.Security.Cryptography.CspParameters>objektet gjelder bare for klasser som eksplisitt referere til det.</xref:System.Security.Cryptography.CspParameters> Disse innstillingene er nyttig når representerer eller kjører under en konto som har brukerprofil ikke er lastet inn. Angi UseMachineKeyStore påvirker key store plassering bare hvis <xref:System.Security.Cryptography.RSACryptoServiceProvider>er initialisert uten parametere.</xref:System.Security.Cryptography.RSACryptoServiceProvider>"
  example:
  - "The following code example creates an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object and sets the static UseMachineKeyStore property to use the machine key store instead of the user profile key store.  \n  \n [!code-cs[Cryptography.RSACSP.UseMachineKey#2](~/add/codesnippet/csharp/p-system.security.crypto_91_1.cs)]\n [!code-cpp[Cryptography.RSACSP.UseMachineKey#2](~/add/codesnippet/cpp/p-system.security.crypto_91_1.cpp)]\n [!code-vb[Cryptography.RSACSP.UseMachineKey#2](~/add/codesnippet/visualbasic/p-system.security.crypto_91_1.vb)]"
  syntax:
    content: public static bool UseMachineKeyStore { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis nøkkelen skal beholdes i datamaskinen key store; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])
  id: VerifyData(System.Byte[],System.Object,System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: VerifyData(Byte[],Object,Byte[])
  nameWithType: RSACryptoServiceProvider.VerifyData(Byte[],Object,Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(Byte[],Object,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Kontrollerer at en digital signatur er gyldig ved å fastsette i hash-verdi i signaturen ved bruk av den angitte fellesnøkkelen og sammenligne den hash-verdien for de angitte dataene."
  remarks: "Denne metoden bekrefter den <xref:System.Security.Cryptography.RSA>digitale signaturen som er generert av den <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A>metoden.</xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A> </xref:System.Security.Cryptography.RSA> Signaturen er bekreftet ved henting av hash-verdi fra signaturen med fellesnøkkelen signeringen med og sammenligne denne verdien til hash-verdien for de angitte dataene.       Den `halg` parameteren godtar en <xref:System.String>, en <xref:System.Security.Cryptography.HashAlgorithm>, eller <xref:System.Type>.</xref:System.Type> </xref:System.Security.Cryptography.HashAlgorithm> </xref:System.String>"
  example:
  - "The following example shows how to use the VerifyData method to verify a signature. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A> method.  \n  \n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/add/codesnippet/cpp/3df3f07d-a09f-413c-b97a-_1.cpp)]\n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/add/codesnippet/csharp/3df3f07d-a09f-413c-b97a-_1.cs)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/add/codesnippet/visualbasic/3df3f07d-a09f-413c-b97a-_1.vb)]"
  syntax:
    content: public bool VerifyData (byte[] buffer, object halg, byte[] signature);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Dataene som ble signert."
    - id: halg
      type: System.Object
      description: "Navnet på hash-algoritmen som brukes til å opprette hash-verdien for dataene."
    - id: signature
      type: System.Byte[]
      description: "Datatypen signaturen bekreftes."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis signaturen er ugyldig. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>halg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> halg </code> parameteren er ikke en gyldig type."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])
  id: VerifyHash(System.Byte[],System.String,System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: VerifyHash(Byte[],String,Byte[])
  nameWithType: RSACryptoServiceProvider.VerifyHash(Byte[],String,Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(Byte[],String,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Kontrollerer at en digital signatur er gyldig ved å fastsette i hash-verdi i signaturen ved bruk av den angitte fellesnøkkelen og sammenligne den angitte hash-verdien."
  remarks: "Denne metoden bekrefter den <xref:System.Security.Cryptography.RSA>digitale signaturen som er generert av den <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A>metoden.</xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A> </xref:System.Security.Cryptography.RSA> Signaturen er bekreftet ved henting av hash-verdi fra signaturen med fellesnøkkelen signeringen med og sammenligne denne verdien til hash-verdien for de angitte dataene.       Ugyldig hash-algoritmer er <xref:System.Security.Cryptography.SHA1>og <xref:System.Security.Cryptography.MD5>.</xref:System.Security.Cryptography.MD5> </xref:System.Security.Cryptography.SHA1> Algoritme-ID kan utledes fra hash-navn ved hjelp av den <xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A>metoden.</xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A>"
  example:
  - "The following example shows how to use the VerifyHash method to verify a signature. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A> method.  \n  \n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/add/codesnippet/cpp/2148dfcd-6562-4b9d-a47c-_1.cpp)]\n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/add/codesnippet/csharp/2148dfcd-6562-4b9d-a47c-_1.cs)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/add/codesnippet/visualbasic/2148dfcd-6562-4b9d-a47c-_1.vb)]"
  syntax:
    content: public bool VerifyHash (byte[] rgbHash, string str, byte[] rgbSignature);
    parameters:
    - id: rgbHash
      type: System.Byte[]
      description: "Hash-verdien for den signerte data."
    - id: str
      type: System.String
      description: "Hash-algoritmen identifikator (objekt-ID) brukes til å opprette hash-verdien for dataene."
    - id: rgbSignature
      type: System.Byte[]
      description: "Datatypen signaturen bekreftes."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis signaturen er ugyldig. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rgbHash</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <code>rgbSignature</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Være kan ikke anskaffet kryptografitjenesteleverandør (CSP).       - eller - signaturen bekreftes ikke."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSACryptoServiceProvider.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Kontrollerer at en digital signatur er gyldig ved å fastsette hash-verdien i signaturen ved hjelp av den angitte nummer algoritmen fylle og sammenligne den angitte hash-verdien."
  syntax:
    content: public override bool VerifyHash (byte[] hash, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: hash
      type: System.Byte[]
      description: "Hash-verdien for den signerte data."
    - id: signature
      type: System.Byte[]
      description: "Datatypen signaturen bekreftes."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "Hash-algoritmen navnet brukes til å opprette hash-verdien."
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: "Utfyllingen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis signaturen er ugyldig. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hashAlgorithm</code>er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hash</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>padding</code>er ikke lik &lt;xref:System.Security.Cryptography.RSASignaturePadding.Pkcs1%2A?displayProperty=fullName&gt;."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.RSA
  isExternal: false
  name: System.Security.Cryptography.RSA
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: RSACryptoServiceProvider()
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider()
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider()
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: RSACryptoServiceProvider(Int32)
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(Int32)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: RSACryptoServiceProvider(CspParameters)
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(CspParameters)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(CspParameters)
- uid: System.Security.Cryptography.CspParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: CspParameters
  nameWithType: CspParameters
  fullName: System.Security.Cryptography.CspParameters
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: RSACryptoServiceProvider(Int32,CspParameters)
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(Int32,CspParameters)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(Int32,CspParameters)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: CspKeyContainerInfo
  nameWithType: RSACryptoServiceProvider.CspKeyContainerInfo
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo
- uid: System.Security.Cryptography.CspKeyContainerInfo
  parent: System.Security.Cryptography
  isExternal: false
  name: CspKeyContainerInfo
  nameWithType: CspKeyContainerInfo
  fullName: System.Security.Cryptography.CspKeyContainerInfo
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: Decrypt(Byte[],Boolean)
  nameWithType: RSACryptoServiceProvider.Decrypt(Byte[],Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(Byte[],Boolean)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: Decrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSACryptoServiceProvider.Decrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(Byte[],RSAEncryptionPadding)
- uid: System.Security.Cryptography.RSAEncryptionPadding
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAEncryptionPadding
  nameWithType: RSAEncryptionPadding
  fullName: System.Security.Cryptography.RSAEncryptionPadding
- uid: System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: DecryptValue(Byte[])
  nameWithType: RSACryptoServiceProvider.DecryptValue(Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(Byte[])
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Dispose(System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: RSACryptoServiceProvider.Dispose(Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Dispose(Boolean)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: Encrypt(Byte[],Boolean)
  nameWithType: RSACryptoServiceProvider.Encrypt(Byte[],Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(Byte[],Boolean)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: Encrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSACryptoServiceProvider.Encrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(Byte[],RSAEncryptionPadding)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: EncryptValue(Byte[])
  nameWithType: RSACryptoServiceProvider.EncryptValue(Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(Byte[])
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: ExportCspBlob(Boolean)
  nameWithType: RSACryptoServiceProvider.ExportCspBlob(Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(Boolean)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: ExportParameters(Boolean)
  nameWithType: RSACryptoServiceProvider.ExportParameters(Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(Boolean)
- uid: System.Security.Cryptography.RSAParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAParameters
  nameWithType: RSAParameters
  fullName: System.Security.Cryptography.RSAParameters
- uid: System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: HashData(Stream,HashAlgorithmName)
  nameWithType: RSACryptoServiceProvider.HashData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.HashData(Stream,HashAlgorithmName)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: RSACryptoServiceProvider.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.HashData(Byte[],Int32,Int32,HashAlgorithmName)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: ImportCspBlob(Byte[])
  nameWithType: RSACryptoServiceProvider.ImportCspBlob(Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(Byte[])
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: ImportParameters(RSAParameters)
  nameWithType: RSACryptoServiceProvider.ImportParameters(RSAParameters)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(RSAParameters)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: RSACryptoServiceProvider.KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.RSACryptoServiceProvider.KeySize
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: KeySize
  nameWithType: RSACryptoServiceProvider.KeySize
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.KeySize
- uid: System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: PersistKeyInCsp
  nameWithType: RSACryptoServiceProvider.PersistKeyInCsp
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp
- uid: System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: PublicOnly
  nameWithType: RSACryptoServiceProvider.PublicOnly
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: RSACryptoServiceProvider.SignatureAlgorithm
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignData(Byte[],Object)
  nameWithType: RSACryptoServiceProvider.SignData(Byte[],Object)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(Byte[],Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignData(Stream,Object)
  nameWithType: RSACryptoServiceProvider.SignData(Stream,Object)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(Stream,Object)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignData(Byte[],Int32,Int32,Object)
  nameWithType: RSACryptoServiceProvider.SignData(Byte[],Int32,Int32,Object)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(Byte[],Int32,Int32,Object)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignHash(Byte[],String)
  nameWithType: RSACryptoServiceProvider.SignHash(Byte[],String)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(Byte[],String)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSACryptoServiceProvider.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
- uid: System.Security.Cryptography.RSASignaturePadding
  parent: System.Security.Cryptography
  isExternal: false
  name: RSASignaturePadding
  nameWithType: RSASignaturePadding
  fullName: System.Security.Cryptography.RSASignaturePadding
- uid: System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: UseMachineKeyStore
  nameWithType: RSACryptoServiceProvider.UseMachineKeyStore
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: VerifyData(Byte[],Object,Byte[])
  nameWithType: RSACryptoServiceProvider.VerifyData(Byte[],Object,Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(Byte[],Object,Byte[])
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: VerifyHash(Byte[],String,Byte[])
  nameWithType: RSACryptoServiceProvider.VerifyHash(Byte[],String,Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(Byte[],String,Byte[])
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSACryptoServiceProvider.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: RSACryptoServiceProvider
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider
- uid: System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: CspKeyContainerInfo
  nameWithType: RSACryptoServiceProvider.CspKeyContainerInfo
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: Decrypt
  nameWithType: RSACryptoServiceProvider.Decrypt
- uid: System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: DecryptValue
  nameWithType: RSACryptoServiceProvider.DecryptValue
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Dispose*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: Dispose
  nameWithType: RSACryptoServiceProvider.Dispose
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: Encrypt
  nameWithType: RSACryptoServiceProvider.Encrypt
- uid: System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: EncryptValue
  nameWithType: RSACryptoServiceProvider.EncryptValue
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: ExportCspBlob
  nameWithType: RSACryptoServiceProvider.ExportCspBlob
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: ExportParameters
  nameWithType: RSACryptoServiceProvider.ExportParameters
- uid: System.Security.Cryptography.RSACryptoServiceProvider.HashData*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: HashData
  nameWithType: RSACryptoServiceProvider.HashData
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: ImportCspBlob
  nameWithType: RSACryptoServiceProvider.ImportCspBlob
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: ImportParameters
  nameWithType: RSACryptoServiceProvider.ImportParameters
- uid: System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: RSACryptoServiceProvider.KeyExchangeAlgorithm
- uid: System.Security.Cryptography.RSACryptoServiceProvider.KeySize*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: KeySize
  nameWithType: RSACryptoServiceProvider.KeySize
- uid: System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: PersistKeyInCsp
  nameWithType: RSACryptoServiceProvider.PersistKeyInCsp
- uid: System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: PublicOnly
  nameWithType: RSACryptoServiceProvider.PublicOnly
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: RSACryptoServiceProvider.SignatureAlgorithm
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignData
  nameWithType: RSACryptoServiceProvider.SignData
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignHash*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignHash
  nameWithType: RSACryptoServiceProvider.SignHash
- uid: System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: UseMachineKeyStore
  nameWithType: RSACryptoServiceProvider.UseMachineKeyStore
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: VerifyData
  nameWithType: RSACryptoServiceProvider.VerifyData
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: VerifyHash
  nameWithType: RSACryptoServiceProvider.VerifyHash
