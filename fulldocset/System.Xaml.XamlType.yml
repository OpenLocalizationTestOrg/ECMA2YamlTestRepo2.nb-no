### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlType
  id: XamlType
  children:
  - System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)
  - System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlType.AllowedContentTypes
  - System.Xaml.XamlType.BaseType
  - System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)
  - System.Xaml.XamlType.ConstructionRequiresArguments
  - System.Xaml.XamlType.ContentProperty
  - System.Xaml.XamlType.ContentWrappers
  - System.Xaml.XamlType.DeferringLoader
  - System.Xaml.XamlType.Equals(System.Object)
  - System.Xaml.XamlType.Equals(System.Xaml.XamlType)
  - System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)
  - System.Xaml.XamlType.GetAllAttachableMembers
  - System.Xaml.XamlType.GetAllMembers
  - System.Xaml.XamlType.GetAttachableMember(System.String)
  - System.Xaml.XamlType.GetHashCode
  - System.Xaml.XamlType.GetMember(System.String)
  - System.Xaml.XamlType.GetPositionalParameters(System.Int32)
  - System.Xaml.XamlType.GetXamlNamespaces
  - System.Xaml.XamlType.Invoker
  - System.Xaml.XamlType.IsAmbient
  - System.Xaml.XamlType.IsArray
  - System.Xaml.XamlType.IsCollection
  - System.Xaml.XamlType.IsConstructible
  - System.Xaml.XamlType.IsDictionary
  - System.Xaml.XamlType.IsGeneric
  - System.Xaml.XamlType.IsMarkupExtension
  - System.Xaml.XamlType.IsNameScope
  - System.Xaml.XamlType.IsNameValid
  - System.Xaml.XamlType.IsNullable
  - System.Xaml.XamlType.IsPublic
  - System.Xaml.XamlType.IsUnknown
  - System.Xaml.XamlType.IsUsableDuringInitialization
  - System.Xaml.XamlType.IsWhitespaceSignificantCollection
  - System.Xaml.XamlType.IsXData
  - System.Xaml.XamlType.ItemType
  - System.Xaml.XamlType.KeyType
  - System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)
  - System.Xaml.XamlType.LookupAllAttachableMembers
  - System.Xaml.XamlType.LookupAllMembers
  - System.Xaml.XamlType.LookupAllowedContentTypes
  - System.Xaml.XamlType.LookupAttachableMember(System.String)
  - System.Xaml.XamlType.LookupBaseType
  - System.Xaml.XamlType.LookupCollectionKind
  - System.Xaml.XamlType.LookupConstructionRequiresArguments
  - System.Xaml.XamlType.LookupContentProperty
  - System.Xaml.XamlType.LookupContentWrappers
  - System.Xaml.XamlType.LookupCustomAttributeProvider
  - System.Xaml.XamlType.LookupDeferringLoader
  - System.Xaml.XamlType.LookupInvoker
  - System.Xaml.XamlType.LookupIsAmbient
  - System.Xaml.XamlType.LookupIsConstructible
  - System.Xaml.XamlType.LookupIsMarkupExtension
  - System.Xaml.XamlType.LookupIsNameScope
  - System.Xaml.XamlType.LookupIsNullable
  - System.Xaml.XamlType.LookupIsPublic
  - System.Xaml.XamlType.LookupIsUnknown
  - System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection
  - System.Xaml.XamlType.LookupIsXData
  - System.Xaml.XamlType.LookupItemType
  - System.Xaml.XamlType.LookupKeyType
  - System.Xaml.XamlType.LookupMarkupExtensionReturnType
  - System.Xaml.XamlType.LookupMember(System.String,System.Boolean)
  - System.Xaml.XamlType.LookupPositionalParameters(System.Int32)
  - System.Xaml.XamlType.LookupSetMarkupExtensionHandler
  - System.Xaml.XamlType.LookupSetTypeConverterHandler
  - System.Xaml.XamlType.LookupTrimSurroundingWhitespace
  - System.Xaml.XamlType.LookupTypeConverter
  - System.Xaml.XamlType.LookupUnderlyingType
  - System.Xaml.XamlType.LookupUsableDuringInitialization
  - System.Xaml.XamlType.LookupValueSerializer
  - System.Xaml.XamlType.MarkupExtensionReturnType
  - System.Xaml.XamlType.Name
  - System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)
  - System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)
  - System.Xaml.XamlType.PreferredXamlNamespace
  - System.Xaml.XamlType.SchemaContext
  - System.Xaml.XamlType.ToString
  - System.Xaml.XamlType.TrimSurroundingWhitespace
  - System.Xaml.XamlType.TypeArguments
  - System.Xaml.XamlType.TypeConverter
  - System.Xaml.XamlType.UnderlyingType
  - System.Xaml.XamlType.ValueSerializer
  langs:
  - csharp
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
  type: Class
  summary: "Informasjon om XAML typer som en del av den totale XAML som er implementert i .NET Framework XAML Services-rapporter."
  remarks: "Mange APIer i klassen XamlType gir informasjon om XAML typer, der begrep de rapportere om er lik bestemte deler av spesifikasjonen XAML [MS-XAML].       XamlType er mye brukt i .NET Framework XAML Services API for reporting informasjon om typen XAML. XamlType rapporter informasjonen som du skal kjenne typen XAML for å fungere med en forekomst eller få tilgang til medlemmer fra en XAML noden dataflyt eller lignende XAML representere. Den reporting ligner hvordan <xref:System.Type>CLR Skriv inn i systemet, sammen med gjenspeiling klasser eksempel <xref:System.Reflection.MemberInfo>, gir informasjon om en CLR-typen og bruken.</xref:System.Reflection.MemberInfo> </xref:System.Type>       Hvis du vil utvide XAML typen systemet, kan du utledet fra XamlType. Hvis du vil gjøre så effektivt, må du kanskje også implementere <xref:System.Xaml.Schema.XamlTypeInvoker>.</xref:System.Xaml.Schema.XamlTypeInvoker> Den <xref:System.Xaml.Schema.XamlTypeInvoker>aktiverer generell XAML typen systemet til å fungere med typen systemet sikkerhetskopiering du angi som en del av den aktivering.</xref:System.Xaml.Schema.XamlTypeInvoker> Det spesifikke egendefinert <xref:System.Xaml.Schema.XamlTypeInvoker>gjør det mulig å redusere avhengighetene på systemet for CLR-typen som brukes av XamlType standardvirkemåten.</xref:System.Xaml.Schema.XamlTypeInvoker>"
  syntax:
    content: 'public class XamlType : IEquatable<System.Xaml.XamlType>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Xaml.XamlType>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.Type,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: XamlType(Type,XamlSchemaContext)
  nameWithType: XamlType.XamlType(Type,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(Type,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> klassen basert på den underliggende informasjonen for CLR-typen."
  syntax:
    content: public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: underlyingType
      type: System.Type
      description: "Den underliggende CLR <xref:System.Type>for XAML som konstruere.</xref:System.Type>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "XAML skjemaet kontekst for XAML lesere eller XAML forfattere."
  overload: System.Xaml.XamlType.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One or more of <code>underlyingType</code> or <code>schemaContext</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  id: '#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: XamlType(String,IList<XamlType>,XamlSchemaContext)
  nameWithType: XamlType.XamlType(String,IList<XamlType>,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(String,IList<XamlType>,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> klassen basert på et navn på tilkoblingsstrengen for typen."
  remarks: "Dette er en beskyttet konstruktør. Det finnes ingen gjeldende offentlige avledede klasser som bruker denne bestemt bane for konstruksjon. Som forbruker av den eksisterende <xref:System.Xaml.XamlType>, må du bruke andre konstruktøren signaturer (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>, eller <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) til å initialisere en <xref:System.Xaml.XamlType>objektet.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> </xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29> </xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29> </xref:System.Xaml.XamlType>"
  syntax:
    content: protected XamlType (string typeName, System.Collections.Generic.IList<System.Xaml.XamlType> typeArguments, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: typeName
      type: System.String
      description: "Navnet på typen til å opprette."
    - id: typeArguments
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "Typen argumentene for en <xref href=&quot;System.Xaml.XamlType&quot;> </xref> som representerer en generell type. Kan (og er ofte) <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, noe som angir at representeres typen ikke er en generell type."
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "XAML skjemaet kontekst for XAML lesere og XAML skrivere."
  overload: System.Xaml.XamlType.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One or more of <code>typeName</code> or <code>schemaContext</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)
  id: '#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)'
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
  nameWithType: XamlType.XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
  fullName: System.Xaml.XamlType.XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> klassen basert på underliggende typen og et <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> implementering."
  syntax:
    content: public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlTypeInvoker invoker);
    parameters:
    - id: underlyingType
      type: System.Type
      description: "Den underliggende typen for XAML som konstruere."
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "XAML skjemaet kontekst for XAML-leseren."
    - id: invoker
      type: System.Xaml.Schema.XamlTypeInvoker
      description: "Den <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> implementering som behandler kjøretid gjenspeiling kaller mot den <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  overload: System.Xaml.XamlType.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One or more of <code>underlyingType</code> or <code>schemaContext</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  id: '#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: XamlType(String,String,IList<XamlType>,XamlSchemaContext)
  nameWithType: XamlType.XamlType(String,String,IList<XamlType>,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(String,String,IList<XamlType>,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> klassen basert på XAML-navneområde og navn på tilkoblingsstrengen for typen. Denne konstruktøren, er eksklusivt for analyse og XAML-node innspillingen av typen bruksområder som kan ikke ha sikkerhetskopiering i støttet typesystemet og XAML skjemaet kontekst."
  remarks: "Bruk denne konstruktøren bare for &quot;Ukjent&quot; typer der typen XAML som tilordnes til en underliggende typesystemet er utilgjengelig. Denne konstruktøren kan ikke produsere et resultat der <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=fullName>er `true`.</xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=fullName> I stedet rapporter standard reflektor logikken underliggende type som <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=fullName>.</xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=fullName> Dette kan imidlertid endre fordi den <xref:System.Xaml.XamlType.LookupIsUnknown%2A>overstyre.</xref:System.Xaml.XamlType.LookupIsUnknown%2A>"
  syntax:
    content: public XamlType (string unknownTypeNamespace, string unknownTypeName, System.Collections.Generic.IList<System.Xaml.XamlType> typeArguments, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: unknownTypeNamespace
      type: System.String
      description: "XAML-navneområde for typen, som en streng."
    - id: unknownTypeName
      type: System.String
      description: "Navnet på typen i den angitte `unknownTypeNamespace` XAML navneområde."
    - id: typeArguments
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "Typen argumentene for en <xref href=&quot;System.Xaml.XamlType&quot;> </xref> som representerer en generell type. Kan (og er ofte) <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, noe som angir at representeres typen ikke er en generell type."
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "XAML skjemaet kontekst for XAML lesere eller XAML forfattere."
  overload: System.Xaml.XamlType.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One or more of <code>unknownTypeNamespace</code>, <code>unknownTypeName</code>, or <code>schemaContext</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlType.AllowedContentTypes
  id: AllowedContentTypes
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: AllowedContentTypes
  nameWithType: XamlType.AllowedContentTypes
  fullName: System.Xaml.XamlType.AllowedContentTypes
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en skrivebeskyttet samling av typene som brukes som den <xref:System.Xaml.XamlType.ContentProperty*>verdi for dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Xaml.XamlType.ContentProperty*>"
  remarks: "Typer som kan tilordnes en bestemt innholdstype (for eksempel tilordnes til en basistype som er en tillatt innholdstype) regnes ikke med flere typer formålene AllowedContentTypes.       Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne egenskapen kan aktivere <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> </xref:System.Xaml.XamlType>"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.XamlType> AllowedContentTypes { get; }
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "En skrivebeskyttet samling mulig innholdstyper."
  overload: System.Xaml.XamlType.AllowedContentTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.BaseType
  id: BaseType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: BaseType
  nameWithType: XamlType.BaseType
  fullName: System.Xaml.XamlType.BaseType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> for umiddelbar basistypen for denne XAML. Forsøket på denne verdien er basert på den underliggende typen dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> og skjema."
  remarks: "Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne egenskapen kan aktivere <xref:System.Xaml.XamlType.LookupBaseType%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupBaseType%2A> </xref:System.Xaml.XamlType> Hvis du vil ha mer informasjon om returverdier og andre bruken, kan du se dokumentasjonen for <xref:System.Xaml.XamlType.LookupBaseType%2A>for denne typen.</xref:System.Xaml.XamlType.LookupBaseType%2A> Som standard BaseType returnerer en intern konstant som representerer en <xref:System.Object>Hvis <xref:System.Xaml.XamlType.UnderlyingType%2A>er `null`.</xref:System.Xaml.XamlType.UnderlyingType%2A> </xref:System.Object>      > [!IMPORTANT] > <xref:System.Xaml.XamlType.LookupBaseType%2A>er virtuell, og derfor kan overstyres.</xref:System.Xaml.XamlType.LookupBaseType%2A> Overstyringen har faren (om med onde hensikter eller ellers) endre rapporterte typen informasjon om typen XAML slik at det er ikke lenger justert på en måte som forventet til systemet typeinformasjonen av den underliggende CLR-typen. Bruk underliggende CLR-typen i stedet for en hvilken som helst security-kritiske sjekker tilordningen operasjoner og tilgang."
  syntax:
    content: public System.Xaml.XamlType BaseType { get; }
    return:
      type: System.Xaml.XamlType
      description: "Den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> for umiddelbar basistypen for denne XAML."
  overload: System.Xaml.XamlType.BaseType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)
  id: CanAssignTo(System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: CanAssignTo(XamlType)
  nameWithType: XamlType.CanAssignTo(XamlType)
  fullName: System.Xaml.XamlType.CanAssignTo(XamlType)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en verdi som angir om en forekomst av dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> har den angitte <xref href=&quot;System.Xaml.XamlType&quot;> </xref> i listen over typer som kan tilordnes."
  remarks: "Selv om tilordnes typen ikke har alle funksjonene for referansetypen, kan du bruke den for tildeling. Du kan for eksempel bruke tilordningen foreta typen treff for verdiene i en egenskap. Uttrykket kan tilordnes typene i XAML er lik begrep for endring av i systemet for CLR-typen. For eksempel under system en CLR-typen hver har en <xref:System.Object>i tilordnes typeliste.</xref:System.Object>       Hvis en av to <xref:System.Xaml.XamlType>forekomster som brukes for sammenligning er <xref:System.Xaml.XamlType.IsUnknown%2A>lik `true`, denne metoden er en spesiell ukjent modus som returnerer `true` Hvis to <xref:System.Xaml.XamlType>forekomster er like.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.IsUnknown%2A> </xref:System.Xaml.XamlType>       Standard implementering bruker CLR <xref:System.Type>fra <xref:System.Xaml.XamlType.UnderlyingType%2A>for denne <xref:System.Xaml.XamlType>og inndataene <xref:System.Xaml.XamlType>, og kall <xref:System.Type.IsAssignableFrom%2A>.</xref:System.Type.IsAssignableFrom%2A> </xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.UnderlyingType%2A> </xref:System.Type> Overstyre denne metoden hvis du vil bruke en annen fastsettelse tilordnes typer.       Sende en null `xamlType` ikke iverksette et unntak, og returnerer alltid `false`.      > [!IMPORTANT] > CanAssignTo er virtuell, og derfor kan overstyres. Overstyringen har faren (om med onde hensikter eller ellers) endre assignability XAML typen slik at det er ikke lenger justert på en måte som forventet til typen endring virkemåten for den underliggende CLR-typen. Bruk underliggende CLR-typen i stedet for en hvilken som helst security-kritiske sjekker tilordningen operasjoner og tilgang."
  syntax:
    content: public virtual bool CanAssignTo (System.Xaml.XamlType xamlType);
    parameters:
    - id: xamlType
      type: System.Xaml.XamlType
      description: "Typen for å se mot gjeldende <xref href=&quot;System.Xaml.XamlType&quot;> </xref> ."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <code> xamlType </code> i listen kan tilordnes typer; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.CanAssignTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ConstructionRequiresArguments
  id: ConstructionRequiresArguments
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ConstructionRequiresArguments
  nameWithType: XamlType.ConstructionRequiresArguments
  fullName: System.Xaml.XamlType.ConstructionRequiresArguments
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> må ha argumenter (generisk begrensninger via <xref uid=&quot;langword_csharp_x:TypeArguments&quot; name=&quot;x:TypeArguments&quot; href=&quot;&quot;> </xref>, initialisering tekst eller andre XAML teknikker) til å lage en gyldig forekomst av typen."
  remarks: "Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne egenskapen kan aktivere <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> </xref:System.Xaml.XamlType> Hvis du vil ha mer informasjon om returverdier og andre bruken, kan du se dokumentasjonen for <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A>for denne typen.</xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A>"
  syntax:
    content: public bool ConstructionRequiresArguments { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis konstruksjon av en forekomst krever noen argumentverdien; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.ConstructionRequiresArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ContentProperty
  id: ContentProperty
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ContentProperty
  nameWithType: XamlType.ContentProperty
  fullName: System.Xaml.XamlType.ContentProperty
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> informasjon for innholdsegenskapen dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Når du bruker bindingen eller sikkerhetskopiering av typen CLR, XAML innholdsegenskapen kan angis for en type ved å bruke <xref:System.Windows.Markup.ContentPropertyAttribute>typedefinisjonen.</xref:System.Windows.Markup.ContentPropertyAttribute>       Denne egenskapen justeres etter den `[content property]` informasjonselement i [MS-XAML]-spesifikasjonen.       Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne egenskapen kan aktivere <xref:System.Xaml.XamlType.LookupContentProperty%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupContentProperty%2A> </xref:System.Xaml.XamlType> Hvis du vil ha mer informasjon om returverdier og andre bruken, kan du se dokumentasjonen for <xref:System.Xaml.XamlType.LookupContentProperty%2A>for denne typen.</xref:System.Xaml.XamlType.LookupContentProperty%2A>"
  syntax:
    content: public System.Xaml.XamlMember ContentProperty { get; }
    return:
      type: System.Xaml.XamlMember
      description: "<xref href=&quot;System.Xaml.XamlMember&quot;></xref>informasjon om innholdsegenskapen dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>. Det kan hende <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis det finnes ingen innholdsegenskapen."
  overload: System.Xaml.XamlType.ContentProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ContentWrappers
  id: ContentWrappers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ContentWrappers
  nameWithType: XamlType.ContentWrappers
  fullName: System.Xaml.XamlType.ContentWrappers
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter typene som brukes til å utføre innholdet for en innholdsegenskapen når det ikke er en streng typen samsvarer, for eksempel strenger i en forespørselsparameter av sterk type <xref uid=&quot;langword_csharp_Collection&lt;T&gt;&quot; name=&quot;Collection&lt;T&gt;&quot; href=&quot;&quot;> </xref>."
  remarks: "Hvis det finnes ingen sikkerhetsgrupper å kompensere for typen samsvarer å øke, denne egenskapen er `null`.       Typer som kan evalueres som <xref:System.Xaml.XamlType.CanAssignTo%2A>for en bestemt innholdstype regnes ikke med flere typer formålene ContentWrappers.</xref:System.Xaml.XamlType.CanAssignTo%2A>       I CLR-bindingen for <xref:System.Xaml>og <xref:System.Xaml.XamlType>XAML innhold wrapper typen kan angis for en type som <xref:System.Windows.Markup.ContentWrapperAttribute>.</xref:System.Windows.Markup.ContentWrapperAttribute> </xref:System.Xaml.XamlType> </xref:System.Xaml>       Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne egenskapen kan aktivere <xref:System.Xaml.XamlType.LookupContentWrappers%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupContentWrappers%2A> </xref:System.Xaml.XamlType> Hvis du vil ha mer informasjon om returverdier og andre bruken, kan du se dokumentasjonen for <xref:System.Xaml.XamlType.LookupContentWrappers%2A>for denne typen.</xref:System.Xaml.XamlType.LookupContentWrappers%2A>"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.XamlType> ContentWrappers { get; }
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "En skrivebeskyttet samling av mulig innhold wrapper typer; Ellers <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Se kommentarer."
  overload: System.Xaml.XamlType.ContentWrappers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.DeferringLoader
  id: DeferringLoader
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: DeferringLoader
  nameWithType: XamlType.DeferringLoader
  fullName: System.Xaml.XamlType.DeferringLoader
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter den &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; som representerer den utsatte innlasting av konvertering virkemåte for denne typen."
  remarks: "XAML mal-virkemåte i WPF er et eksempel av utsatt innlasting.       Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne egenskapen kan aktivere <xref:System.Xaml.XamlType.LookupDeferringLoader%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupDeferringLoader%2A> </xref:System.Xaml.XamlType> Hvis du vil ha mer informasjon om returverdier og andre bruken, kan du se dokumentasjonen for <xref:System.Xaml.XamlType.LookupDeferringLoader%2A>for denne typen.</xref:System.Xaml.XamlType.LookupDeferringLoader%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> DeferringLoader { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
      description: "Den &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; med <xref href=&quot;System.Xaml.XamlDeferringLoader&quot;> </xref> begrensningen som representerer utsatt innlasting virkemåten for denne typen."
  overload: System.Xaml.XamlType.DeferringLoader*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: XamlType.Equals(Object)
  fullName: System.Xaml.XamlType.Equals(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Angir om det gjeldende objektet er lik et annet objekt."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Objektet som skal sammenlignes med dette objektet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis det gjeldende objektet er lik den <code> obj </code> parameteren; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.Equals(System.Xaml.XamlType)
  id: Equals(System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: Equals(XamlType)
  nameWithType: XamlType.Equals(XamlType)
  fullName: System.Xaml.XamlType.Equals(XamlType)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Angir om det gjeldende objektet er lik et annet objekt av samme type."
  syntax:
    content: public bool Equals (System.Xaml.XamlType other);
    parameters:
    - id: other
      type: System.Xaml.XamlType
      description: "Et objekt som skal sammenlignes med dette objektet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis det gjeldende objektet er lik den <code> other </code> parameteren; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)
  id: GetAliasedProperty(System.Xaml.XamlDirective)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetAliasedProperty(XamlDirective)
  nameWithType: XamlType.GetAliasedProperty(XamlDirective)
  fullName: System.Xaml.XamlType.GetAliasedProperty(XamlDirective)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer medlemmet XAML som alias til et XAML direktiv av dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne metoden kan aktivere <xref:System.Xaml.XamlType.LookupAliasedProperty%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupAliasedProperty%2A> </xref:System.Xaml.XamlType> Hvis du vil ha mer informasjon om returverdier og andre bruken, kan du se dokumentasjonen for <xref:System.Xaml.XamlType.LookupAliasedProperty%2A>for denne typen.</xref:System.Xaml.XamlType.LookupAliasedProperty%2A>"
  syntax:
    content: public System.Xaml.XamlMember GetAliasedProperty (System.Xaml.XamlDirective directive);
    parameters:
    - id: directive
      type: System.Xaml.XamlDirective
      description: "Direktivet å finne medlemmet alias."
    return:
      type: System.Xaml.XamlMember
      description: "Medlemmet alias hvis finnes. Ellers <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.GetAliasedProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetAllAttachableMembers
  id: GetAllAttachableMembers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetAllAttachableMembers()
  nameWithType: XamlType.GetAllAttachableMembers()
  fullName: System.Xaml.XamlType.GetAllAttachableMembers()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en samling som inneholder alle kan legges ved egenskaper som vises av dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Hver <xref:System.Xaml.XamlMember>i samlingen returnerte må inneholde verdier som støtter var som den <xref:System.Xaml.XamlMember>er et medlem som kan legges ved.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlMember> For eksempel medlemmer må returnere `true` for <xref:System.Xaml.XamlMember.IsAttachable%2A>, en type for <xref:System.Xaml.XamlMember.TargetType%2A>og så videre.</xref:System.Xaml.XamlMember.TargetType%2A> </xref:System.Xaml.XamlMember.IsAttachable%2A>       Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne metoden kan aktivere <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> </xref:System.Xaml.XamlType> Hvis du vil ha mer informasjon om returverdier og andre bruken, kan du se dokumentasjonen for <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A>for denne typen.</xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A>"
  syntax:
    content: public System.Collections.Generic.ICollection<System.Xaml.XamlMember> GetAllAttachableMembers ();
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.Xaml.XamlMember}
      description: "En samling som inneholder null eller flere <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> verdier."
  overload: System.Xaml.XamlType.GetAllAttachableMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetAllMembers
  id: GetAllMembers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetAllMembers()
  nameWithType: XamlType.GetAllMembers()
  fullName: System.Xaml.XamlType.GetAllMembers()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en samling som inneholder alle medlemmer vises av dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Kall til denne metoden kan aktivere <xref:System.Xaml.XamlType.LookupAllMembers%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupAllMembers%2A>"
  syntax:
    content: public System.Collections.Generic.ICollection<System.Xaml.XamlMember> GetAllMembers ();
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.Xaml.XamlMember}
      description: "En samling som inneholder null eller flere <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> verdier."
  overload: System.Xaml.XamlType.GetAllMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetAttachableMember(System.String)
  id: GetAttachableMember(System.String)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetAttachableMember(String)
  nameWithType: XamlType.GetAttachableMember(String)
  fullName: System.Xaml.XamlType.GetAttachableMember(String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> som representerer en bestemt navnet kan legges ved medlem av dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Kall til denne metoden kan aktivere <xref:System.Xaml.XamlType.LookupAttachableMember%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupAttachableMember%2A>      > [!IMPORTANT] > <xref:System.Xaml.XamlType.LookupAttachableMember%2A>er virtuell, og derfor kan overstyres.</xref:System.Xaml.XamlType.LookupAttachableMember%2A> Overstyringen har faren (om med onde hensikter eller ellers) til å endre rapporterte medlemmene av typen XAML slik at de ikke lenger justeres i en forventet måte med den <xref:System.ComponentModel.TypeDescriptor> `Get*` informasjon om underliggende CLR-typen.</xref:System.ComponentModel.TypeDescriptor> Bruk underliggende CLR-typen i stedet for en security-kritiske kontroll for reporting medlem."
  syntax:
    content: public System.Xaml.XamlMember GetAttachableMember (string name);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på medlemmet kan legges ved å hente i `ownerTypeName.MemberName` skjemaet."
    return:
      type: System.Xaml.XamlMember
      description: "En <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objekt for det forespurte kan legges ved medlemmet; ellers <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, hvis det finnes ingen kan legges ved medlem med samme navn."
  overload: System.Xaml.XamlType.GetAttachableMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetHashCode
  id: GetHashCode
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: XamlType.GetHashCode()
  fullName: System.Xaml.XamlType.GetHashCode()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer hashkoden for dette objektet."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Et heltall hash-kode."
  overload: System.Xaml.XamlType.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetMember(System.String)
  id: GetMember(System.String)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetMember(String)
  nameWithType: XamlType.GetMember(String)
  fullName: System.Xaml.XamlType.GetMember(String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> for en bestemt navngitt medlem fra dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Verdien for `name` er forventet å være ukvalifiserte. Typen kvalifisert navn som angir et vedlagte medlem som skal sendes til <xref:System.Xaml.XamlType.GetAttachableMember%2A>i stedet.</xref:System.Xaml.XamlType.GetAttachableMember%2A> Et prefiks medlem navn ikke må brukes; XAML typen systemet kan ikke vet konteksten for slik bruk og hvordan prefikset er tilordnet et prefiks er etter til en.       Kall til denne metoden kan aktivere <xref:System.Xaml.XamlType.LookupMember%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupMember%2A>      > [!IMPORTANT] > <xref:System.Xaml.XamlType.LookupMember%2A>er virtuell, og derfor kan overstyres.</xref:System.Xaml.XamlType.LookupMember%2A> Overstyringen har faren (om med onde hensikter eller ellers) til å endre rapporterte medlemmene av typen XAML slik at de ikke lenger justeres i en forventet måte med den <xref:System.ComponentModel.TypeDescriptor> `Get*` informasjon om underliggende CLR-typen.</xref:System.ComponentModel.TypeDescriptor> Bruk underliggende CLR-typen i stedet for en security-kritiske kontroll for reporting medlem."
  syntax:
    content: public System.Xaml.XamlMember GetMember (string name);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på medlemmet til å hente (som streng)."
    return:
      type: System.Xaml.XamlMember
      description: "Den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> informasjon for medlem, hvis slik medlem ble funnet; ellers, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetPositionalParameters(System.Int32)
  id: GetPositionalParameters(System.Int32)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetPositionalParameters(Int32)
  nameWithType: XamlType.GetPositionalParameters(Int32)
  fullName: System.Xaml.XamlType.GetPositionalParameters(Int32)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer typer posisjonelt parameterne som støttes i et bestemt markup utvidelsen bruksområde for dette for markup Utvidelsestyper <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Denne APIen. gjelder bare hvis <xref:System.Xaml.XamlType>representerer filtypen markup (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> er `true`).</xref:System.Xaml.XamlType.IsMarkupExtension%2A> </xref:System.Xaml.XamlType>       Inndataene `parameterCount` gjelder ikke ber om typen for en bestemt posisjonelt parameteren. Det er for å angi ariteten i en markup filtypen. Markup utvidelsen Bruk ofte har flere &quot;signaturer&quot; og bruker annen parameteren ariteten (antall) til posisjonelt parameterne til å skille. Du kan imidlertid konfigurere en kontekst som skjemaet for å tillate dupliserte arities og bruke posisjonelt parametertypene for differensiering. For mer informasjon, kan du se <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A> For en bestemt aritet (antall), kan det variere parameteren posisjonene og typer. For å få posisjonelt typen for en bestemt aritet markup utvidelsen bruk, kan du først kalle GetPositionalParameters angir antallet aritet. Anskaffe elementet på denne plasseringen fra returnerte samlingen.       Kall til denne metoden kan aktivere <xref:System.Xaml.XamlType.LookupPositionalParameters%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupPositionalParameters%2A>"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.XamlType> GetPositionalParameters (int parameterCount);
    parameters:
    - id: parameterCount
      type: System.Int32
      description: "Antall (aritet) bestemt syntaks eller konstruktøren modus du vil ha informasjon om."
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "En liste over <xref href=&quot;System.Xaml.XamlType&quot;> </xref> verdier, der hver <xref href=&quot;System.Xaml.XamlType&quot;> </xref> er type for denne plasseringen i syntaksen. Du må angi typene i samme rekkefølge når du angir markup inndata for markup filtypen."
  overload: System.Xaml.XamlType.GetPositionalParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetXamlNamespaces
  id: GetXamlNamespaces
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetXamlNamespaces()
  nameWithType: XamlType.GetXamlNamespaces()
  fullName: System.Xaml.XamlType.GetXamlNamespaces()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en liste over streng identifikatorer for XAML navneområder som typen er inkludert i."
  remarks: "Vanlige XAML navneområdet identifikatorer er strenger i URI-skjemaet.       Standard implementering kontrollerer følgende i denne rekkefølgen: XAML navneområdet som er oppgitt i konstruksjon (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> signatur bare); og navneområder som er tilgjengelig fra skjemaet konteksten.</xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> Hvis dette er hver `null`, genereres en ny liste som inneholder en enkelt tom streng. Du kan overstyre denne metoden hvis du vil endre oppslags-metoden."
  syntax:
    content: public virtual System.Collections.Generic.IList<string> GetXamlNamespaces ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "En liste over strengverdier, der hver streng er URI-IDen for et XAML navneområde."
  overload: System.Xaml.XamlType.GetXamlNamespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.Invoker
  id: Invoker
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: Invoker
  nameWithType: XamlType.Invoker
  fullName: System.Xaml.XamlType.Invoker
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter den <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> implementering som er forbundet med denne <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kaller anroperen kan aktivere enten <xref:System.Xaml.XamlType.LookupInvoker%2A>eller en bestemt overstyring av denne metoden.</xref:System.Xaml.XamlType.LookupInvoker%2A> </xref:System.Xaml.XamlType> Hvis du vil ha mer informasjon om returverdier og andre bruken, kan du se dokumentasjonen for <xref:System.Xaml.XamlType.LookupInvoker%2A>for denne typen.</xref:System.Xaml.XamlType.LookupInvoker%2A>       Hvis en <xref:System.Xaml.XamlType.LookupInvoker%2A>overstyre returnerer `null`, eller hvis standard implementering returnerer `null` på grunn av manglende <xref:System.Xaml.XamlType.UnderlyingType%2A>for denne <xref:System.Xaml.XamlType>returnerer anroperen <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName>.</xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName> </xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.UnderlyingType%2A> </xref:System.Xaml.XamlType.LookupInvoker%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlTypeInvoker Invoker { get; }
    return:
      type: System.Xaml.Schema.XamlTypeInvoker
      description: "Den <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> implementering som er forbundet med denne <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  overload: System.Xaml.XamlType.Invoker*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsAmbient
  id: IsAmbient
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsAmbient
  nameWithType: XamlType.IsAmbient
  fullName: System.Xaml.XamlType.IsAmbient
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer omsluttende typen, i henhold til XAML definisjonen."
  remarks: "Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne egenskapen kan aktivere <xref:System.Xaml.XamlType.LookupIsAmbient%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsAmbient%2A> </xref:System.Xaml.XamlType> Hvis du vil ha mer informasjon om returverdier og andre bruken, kan du se dokumentasjonen for <xref:System.Xaml.XamlType.LookupIsAmbient%2A>for denne typen.</xref:System.Xaml.XamlType.LookupIsAmbient%2A>"
  syntax:
    content: public bool IsAmbient { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer omsluttende typen; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsAmbient*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsArray
  id: IsArray
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsArray
  nameWithType: XamlType.IsArray
  fullName: System.Xaml.XamlType.IsArray
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en matrise."
  remarks: "Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne egenskapen kan aktivere <xref:System.Xaml.XamlType.LookupCollectionKind%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupCollectionKind%2A> </xref:System.Xaml.XamlType> Hvis du vil ha mer informasjon om returverdier og andre bruken, kan du se dokumentasjonen for <xref:System.Xaml.XamlType.LookupCollectionKind%2A>for denne typen.</xref:System.Xaml.XamlType.LookupCollectionKind%2A>"
  syntax:
    content: public bool IsArray { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en matrise; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsArray*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsCollection
  id: IsCollection
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsCollection
  nameWithType: XamlType.IsCollection
  fullName: System.Xaml.XamlType.IsCollection
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en samling."
  remarks: "Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne egenskapen kan aktivere <xref:System.Xaml.XamlType.LookupCollectionKind%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupCollectionKind%2A> </xref:System.Xaml.XamlType> Hvis du vil ha mer informasjon om returverdier og andre bruken, kan du se dokumentasjonen for <xref:System.Xaml.XamlType.LookupCollectionKind%2A>for denne typen.</xref:System.Xaml.XamlType.LookupCollectionKind%2A>"
  syntax:
    content: public bool IsCollection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en samling; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsConstructible
  id: IsConstructible
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsConstructible
  nameWithType: XamlType.IsConstructible
  fullName: System.Xaml.XamlType.IsConstructible
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en constructible type, i henhold til XAML definisjonen."
  remarks: "Denne egenskapen justeres etter den `[is default constructible]` informasjonselement i [MS-XAML]-spesifikasjonen.       Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne egenskapen kan aktivere <xref:System.Xaml.XamlType.LookupIsConstructible%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsConstructible%2A> </xref:System.Xaml.XamlType> Hvis du vil ha mer informasjon om returverdier og andre bruken, kan du se dokumentasjonen for <xref:System.Xaml.XamlType.LookupIsConstructible%2A>for denne typen.</xref:System.Xaml.XamlType.LookupIsConstructible%2A>"
  syntax:
    content: public bool IsConstructible { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer typen constructible; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsConstructible*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsDictionary
  id: IsDictionary
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsDictionary
  nameWithType: XamlType.IsDictionary
  fullName: System.Xaml.XamlType.IsDictionary
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en ordliste, i henhold til XAML definisjonen."
  remarks: "Denne egenskapen justeres etter den `[is dictionary]` informasjonselement i [MS-XAML]-spesifikasjonen.       Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne egenskapen kan aktivere <xref:System.Xaml.XamlType.LookupCollectionKind%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupCollectionKind%2A> </xref:System.Xaml.XamlType> Hvis du vil ha mer informasjon om returverdier og andre bruken, kan du se dokumentasjonen for <xref:System.Xaml.XamlType.LookupCollectionKind%2A>for denne typen.</xref:System.Xaml.XamlType.LookupCollectionKind%2A>"
  syntax:
    content: public bool IsDictionary { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en ordliste; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsDictionary*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsGeneric
  id: IsGeneric
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsGeneric
  nameWithType: XamlType.IsGeneric
  fullName: System.Xaml.XamlType.IsGeneric
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en generell type."
  remarks: "Denne egenskapen er en helper-egenskap som kontrollerer om en nullverdi for <xref:System.Xaml.XamlType.TypeArguments%2A>.</xref:System.Xaml.XamlType.TypeArguments%2A> Det er ingen `Lookup` metoden relatert til IsGeneric."
  syntax:
    content: public bool IsGeneric { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en generell type; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsGeneric*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsMarkupExtension
  id: IsMarkupExtension
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsMarkupExtension
  nameWithType: XamlType.IsMarkupExtension
  fullName: System.Xaml.XamlType.IsMarkupExtension
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en markup filtype."
  remarks: "XAML spesifikasjonen gjelder, denne typen må være tilordnes til `x:MarkupExtension` for å returnere `true` for IsMarkupExtension.       Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne egenskapen kan aktivere <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> </xref:System.Xaml.XamlType> Hvis du vil ha mer informasjon om returverdier og andre bruken, kan du se dokumentasjonen for <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A>for denne typen.</xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A>"
  syntax:
    content: public bool IsMarkupExtension { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer filtypen markup; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsMarkupExtension*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsNameScope
  id: IsNameScope
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsNameScope
  nameWithType: XamlType.IsNameScope
  fullName: System.Xaml.XamlType.IsNameScope
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en XAML namescope, i henhold til XAML definisjonen."
  remarks: "En XAML namescope fremtvinger navnet unikhet for egenskapen eller egenskaper som brukes `x:Name`  /  `[name property]`. Hvis IsNameScope `true`, en mekanisme for å fremheve unikhet skal finnes, og skal evalueres i forhold til denne typen eier en XAML namescope. XAML-namescope utvider deretter til innhold av typen til en annen XAML namescope eiende type inntreffer.       Denne egenskapen justeres etter den `[is name scope]` informasjonselement i [MS-XAML]-spesifikasjonen.       Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne egenskapen kan aktivere <xref:System.Xaml.XamlType.LookupIsNameScope%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsNameScope%2A> </xref:System.Xaml.XamlType>"
  syntax:
    content: public bool IsNameScope { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en XAML namescope; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsNameScope*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsNameValid
  id: IsNameValid
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsNameValid
  nameWithType: XamlType.IsNameValid
  fullName: System.Xaml.XamlType.IsNameValid
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> er initialisert ved hjelp av en gyldig <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> streng som den <xref:System.Xaml.XamlType.Name*>.</xref:System.Xaml.XamlType.Name*>"
  syntax:
    content: public bool IsNameValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> er initialisert ved hjelp av en gyldig <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> streng; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsNameValid*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsNullable
  id: IsNullable
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsNullable
  nameWithType: XamlType.IsNullable
  fullName: System.Xaml.XamlType.IsNullable
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en type som kan nullstilles, i henhold til XAML definisjonen."
  remarks: "Denne egenskapen justeres etter den `[is nullable]` informasjonselement i [MS-XAML]-spesifikasjonen.       Hvis du ikke bruker den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne egenskapen kan aktivere <xref:System.Xaml.XamlType.LookupIsNullable%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsNullable%2A> </xref:System.Xaml.XamlType>"
  syntax:
    content: public bool IsNullable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en type som kan nullstilles; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsNullable*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsPublic
  id: IsPublic
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsPublic
  nameWithType: XamlType.IsPublic
  fullName: System.Xaml.XamlType.IsPublic
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en fellestype i det aktuelle type-systemet."
  remarks: "Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne egenskapen kan aktivere <xref:System.Xaml.XamlType.LookupIsPublic%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsPublic%2A> </xref:System.Xaml.XamlType>      > [!IMPORTANT] > <xref:System.Xaml.XamlType.LookupIsPublic%2A>er virtuell, og derfor kan overstyres.</xref:System.Xaml.XamlType.LookupIsPublic%2A> Overstyringen har faren (om med onde hensikter eller ellers) endre rapporterte få informasjon om typen XAML slik at det er ikke lenger justert på en måte som forventet til systemet og tilgang typeinformasjonen av den underliggende CLR-typen. Bruk underliggende CLR-typen i stedet for en hvilken som helst security-kritiske sjekker tilordningen operasjoner og tilgang."
  syntax:
    content: public bool IsPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en fellestype; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsUnknown
  id: IsUnknown
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsUnknown
  nameWithType: XamlType.IsUnknown
  fullName: System.Xaml.XamlType.IsUnknown
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en type som ikke kan løses i det underliggende typesystemet."
  remarks: "Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne egenskapen kan aktivere <xref:System.Xaml.XamlType.LookupIsUnknown%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsUnknown%2A> </xref:System.Xaml.XamlType>       For en Last inn bane som involverer <xref:System.Xaml.XamlObjectWriter>, en <xref:System.Xaml.XamlType>som har `true` for IsUnknown ikke kan skrive til en.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlObjectWriter> Under standard implementeringer i <xref:System.Xaml>, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=fullName>kall kaster en <xref:System.Xaml.XamlObjectWriterException>når den aktuelle <xref:System.Xaml.XamlType>rapporter `true` for IsUnknown.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlObjectWriterException> </xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=fullName> </xref:System.Xaml> Du kan ikke sende en <xref:System.Xaml.XamlType>som har IsUnknown som `true` med mindre du er klar til å håndtere unntak fra <xref:System.Xaml.XamlObjectWriter>, eller du har andre måter å justere den <xref:System.Xaml.XamlObjectWriter>Virkemåte eller XAML noden dataflyten før skriving objektet diagrammet.</xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlType>"
  syntax:
    content: public bool IsUnknown { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer uløselig typen; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsUsableDuringInitialization
  id: IsUsableDuringInitialization
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsUsableDuringInitialization
  nameWithType: XamlType.IsUsableDuringInitialization
  fullName: System.Xaml.XamlType.IsUsableDuringInitialization
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> er bygd topp til bunn under initialisering av XAML."
  remarks: "Topp til bunn er en metafor som tilsvarer XAML prosessor virkemåten ved opprettelse av objekt-diagrammet. Når bygget topp til bunn, en type startes, kobles til overordnet og har egenskapene sett. Topp til bunn konstruksjon forhindrer aktivering endre egenskapen behandlingsprogrammer flere ganger. Slik behandler ripples opp objektet diagrammet og derfor fjerner flere behandlingsprogrammet kall og gir en optimalisering av ytelsen for oppstart av objekt-diagrammet.       Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne egenskapen kan aktivere <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> </xref:System.Xaml.XamlType> Hvis du vil ha mer informasjon om returverdier og andre bruken, kan du se dokumentasjonen for <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A>for denne typen.</xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A>"
  syntax:
    content: public bool IsUsableDuringInitialization { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> bygges topp til bunn under initialisering av XAML; ellers, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsUsableDuringInitialization*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsWhitespaceSignificantCollection
  id: IsWhitespaceSignificantCollection
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsWhitespaceSignificantCollection
  nameWithType: XamlType.IsWhitespaceSignificantCollection
  fullName: System.Xaml.XamlType.IsWhitespaceSignificantCollection
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en mellomrom betydelige samling, i henhold til XML-definisjonen."
  remarks: "Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne egenskapen kan aktivere <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> </xref:System.Xaml.XamlType> Hvis du vil ha mer informasjon om returverdier og andre bruken, kan du se dokumentasjonen for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>for denne typen.</xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>"
  syntax:
    content: public bool IsWhitespaceSignificantCollection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en betydelig samling mellomrom; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsWhitespaceSignificantCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsXData
  id: IsXData
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsXData
  nameWithType: XamlType.IsXData
  fullName: System.Xaml.XamlType.IsXData
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer XML <xref uid=&quot;langword_csharp_XDATA&quot; name=&quot;XDATA&quot; href=&quot;&quot;> </xref>, som per XAML definisjonen."
  remarks: "Denne egenskapen justeres etter den `[is xdata]` informasjonselement i [MS-XAML]-spesifikasjonen.       Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne egenskapen kan aktivere <xref:System.Xaml.XamlType.LookupIsXData%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsXData%2A> </xref:System.Xaml.XamlType> Hvis du vil ha mer informasjon om returverdier og andre bruken, kan du se dokumentasjonen for <xref:System.Xaml.XamlType.LookupIsXData%2A>for denne typen.</xref:System.Xaml.XamlType.LookupIsXData%2A>"
  syntax:
    content: public bool IsXData { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if this <xref href=&quot;System.Xaml.XamlType&quot;></xref> represents <xref uid=&quot;langword_csharp_XDATA&quot; name=&quot;XDATA&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.XamlType.IsXData*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ItemType
  id: ItemType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ItemType
  nameWithType: XamlType.ItemType
  fullName: System.Xaml.XamlType.ItemType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir typen informasjon for den <xref uid=&quot;langword_csharp_Items&quot; name=&quot;Items&quot; href=&quot;&quot;> </xref> for dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Denne egenskapen gjelder bare hvis <xref:System.Xaml.XamlType>representerer en samling (<xref:System.Xaml.XamlType.IsCollection%2A> er `true`).</xref:System.Xaml.XamlType.IsCollection%2A> </xref:System.Xaml.XamlType> Den `Items` egenskapen er det oppbevarer elementer i denne typen samlingen eller matrise.       Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne egenskapen kan aktivere <xref:System.Xaml.XamlType.LookupItemType%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupItemType%2A> </xref:System.Xaml.XamlType> Hvis du vil ha mer informasjon om returverdier og andre bruken, kan du se dokumentasjonen for <xref:System.Xaml.XamlType.LookupItemType%2A>for denne typen.</xref:System.Xaml.XamlType.LookupItemType%2A>"
  syntax:
    content: public System.Xaml.XamlType ItemType { get; }
    return:
      type: System.Xaml.XamlType
      description: "En <xref href=&quot;System.Xaml.XamlType&quot;> </xref> objekt for hva slags elementene i samlingen; ellers <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer ikke en samling."
  overload: System.Xaml.XamlType.ItemType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.KeyType
  id: KeyType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: KeyType
  nameWithType: XamlType.KeyType
  fullName: System.Xaml.XamlType.KeyType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir typen informasjon om nøkkelegenskapen for dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>, hvis den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en ordliste."
  remarks: "Denne egenskapen gjelder bare hvis <xref:System.Xaml.XamlType>representerer en ordliste (<xref:System.Xaml.XamlType.IsDictionary%2A> er `true`).</xref:System.Xaml.XamlType.IsDictionary%2A> </xref:System.Xaml.XamlType>       Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne egenskapen kan aktivere <xref:System.Xaml.XamlType.LookupKeyType%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupKeyType%2A> </xref:System.Xaml.XamlType> Hvis du vil ha mer informasjon om returverdier og andre bruken, kan du se dokumentasjonen for <xref:System.Xaml.XamlType.LookupKeyType%2A>for denne typen.</xref:System.Xaml.XamlType.LookupKeyType%2A>"
  syntax:
    content: public System.Xaml.XamlType KeyType { get; }
    return:
      type: System.Xaml.XamlType
      description: "En <xref href=&quot;System.Xaml.XamlType&quot;> </xref> objekt for nøkkeltypen for ordliste bruken, ellers, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer ikke en ordliste."
  overload: System.Xaml.XamlType.KeyType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)
  id: LookupAliasedProperty(System.Xaml.XamlDirective)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupAliasedProperty(XamlDirective)
  nameWithType: XamlType.LookupAliasedProperty(XamlDirective)
  fullName: System.Xaml.XamlType.LookupAliasedProperty(XamlDirective)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer medlemmet XAML som alias til et XAML direktiv av dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Denne metoden kan aktiveres når en oppringer henter en verdi fra <xref:System.Xaml.XamlType.GetAliasedProperty%2A>.</xref:System.Xaml.XamlType.GetAliasedProperty%2A>       Standard-implementering kan returnere resultater for følgende XAML direktivene: `Key`; `Name`; `Uid`; and `xml:lang`. Verdier for disse er avhengige av underliggende gjenspeiling og returnerer kanskje fortsatt `null` Hvis det finnes ingen alias-egenskap.       Overstyre denne metoden hvis du ikke stole på standard intern CLR gjenspeiling og bruker metadata eller andre teknikker for rapportering XAML system typeinformasjonen eller skjemainformasjon av en type."
  syntax:
    content: protected virtual System.Xaml.XamlMember LookupAliasedProperty (System.Xaml.XamlDirective directive);
    parameters:
    - id: directive
      type: System.Xaml.XamlDirective
      description: "Direktivet å finne medlemmet alias."
    return:
      type: System.Xaml.XamlMember
      description: "Medlemmet alias hvis finnes. Ellers <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupAliasedProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupAllAttachableMembers
  id: LookupAllAttachableMembers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupAllAttachableMembers()
  nameWithType: XamlType.LookupAllAttachableMembers()
  fullName: System.Xaml.XamlType.LookupAllAttachableMembers()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer et tallsett som inneholder alle kan legges ved egenskaper som vises av dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Denne metoden kan aktiveres når en oppringer henter en verdi fra <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>.</xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>       Selv om <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>returnerer en generell samling dette `Lookup` metoden returnerer en generisk tallsett.</xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>       Standard implementering bruker intern CLR-gjenspeiling. Når <xref:System.Xaml.XamlType.UnderlyingType%2A>er `null`, standard implementering kan bruke <xref:System.Xaml.XamlType.BaseType%2A>, hvis den er tilgjengelig.</xref:System.Xaml.XamlType.BaseType%2A> </xref:System.Xaml.XamlType.UnderlyingType%2A> Dette kaller LookupAllAttachableMembers rekursivt for å prøve å finne en gyldig grunntype, og returnerer `null` Hvis det finnes ingen gyldig grunntype.       Overstyre denne metoden hvis du ikke stole på standard intern CLR gjenspeiling og bruker metadata eller andre teknikker for rapportering XAML informasjon om system eller skjemainformasjon av en type. En null retur må være reservert for tilfeller der informasjon ikke kan fastslås på grunn av manglende typen system eller gjenspeiling støtte. Hvis en type er gyldig og gjenspeiling eller andre teknikker er tilgjengelige, men typen har ikke kan legges ved medlemmer, må du i stedet returnere et tomt <xref:System.Collections.Generic.IEnumerable%601>angitt.</xref:System.Collections.Generic.IEnumerable%601>"
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<System.Xaml.XamlMember> LookupAllAttachableMembers ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Xaml.XamlMember}
      description: "Et tallsett som inneholder null eller flere <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> verdier; ellers <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupAllAttachableMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupAllMembers
  id: LookupAllMembers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupAllMembers()
  nameWithType: XamlType.LookupAllMembers()
  fullName: System.Xaml.XamlType.LookupAllMembers()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer et tallsett som inneholder alle medlemmer vises av dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Denne metoden kan aktiveres når en oppringer henter en verdi fra <xref:System.Xaml.XamlType.GetAllMembers%2A>.</xref:System.Xaml.XamlType.GetAllMembers%2A>       Selv om <xref:System.Xaml.XamlType.GetAllMembers%2A>returnerer en generell samling dette `Lookup` metoden returnerer en generisk tallsett.</xref:System.Xaml.XamlType.GetAllMembers%2A>       Standard implementering bruker intern CLR-gjenspeiling. I tilfeller der <xref:System.Xaml.XamlType.UnderlyingType%2A>er `null`, standard implementering kan bruke <xref:System.Xaml.XamlType.BaseType%2A>, hvis den er tilgjengelig.</xref:System.Xaml.XamlType.BaseType%2A> </xref:System.Xaml.XamlType.UnderlyingType%2A> Dette kaller LookupAllMembers rekursivt for å prøve å finne en gyldig grunntype, og returnerer `null` Hvis det finnes ingen gyldig grunntype.       Overstyre denne metoden hvis du ikke stole på standard intern CLR gjenspeiling og bruker metadata eller andre teknikker for rapportering XAML informasjon om system eller skjemainformasjon av en type. En null retur må være reservert for tilfeller der informasjon ikke kan fastslås på grunn av manglende typen system eller gjenspeiling støtte. Hvis en type er gyldig, er gjenspeiling eller andre teknikker tilgjengelig. typen ikke har medlemmer, må du i stedet returnere et tomt <xref:System.Collections.Generic.IEnumerable%601>angitt.</xref:System.Collections.Generic.IEnumerable%601>       Returverdier for LookupAllMembers og <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A>skal utelukker hverandre.</xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> Hvis du har en løsning der en sikkerhetskopiering type system-egenskapen støtter bruk av en standard forekomster i tillegg til en kan legges ved bruk, medlemmet skal rapporteres som to forskjellige <xref:System.Xaml.XamlMember>verdier, med én verdi som vises i listen kan legges ved og en annen i standard medlemslisten.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<System.Xaml.XamlMember> LookupAllMembers ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Xaml.XamlMember}
      description: "Et tallsett som inneholder null eller flere <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> verdier."
  overload: System.Xaml.XamlType.LookupAllMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupAllowedContentTypes
  id: LookupAllowedContentTypes
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupAllowedContentTypes()
  nameWithType: XamlType.LookupAllowedContentTypes()
  fullName: System.Xaml.XamlType.LookupAllowedContentTypes()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en liste over filtyper som kan brukes som den <xref:System.Xaml.XamlType.ContentProperty*>verdi for dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Xaml.XamlType.ContentProperty*>"
  remarks: "Denne metoden kan aktiveres når en oppringer henter en verdi fra <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</xref:System.Xaml.XamlType.AllowedContentTypes%2A>       Typer som returnerer verdien <xref:System.Xaml.XamlType.CanAssignTo%2A>for en bestemt innholdstype regnes ikke med flere typer i forbindelse med <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</xref:System.Xaml.XamlType.AllowedContentTypes%2A> </xref:System.Xaml.XamlType.CanAssignTo%2A>       Standard-implementering kan bruke andre egenskaper for <xref:System.Xaml.XamlType>(<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A>, eller <xref:System.Xaml.XamlType.ItemType%2A>) til å hente et resultat.</xref:System.Xaml.XamlType.ItemType%2A> </xref:System.Xaml.XamlType.ContentProperty%2A> </xref:System.Xaml.XamlType.ContentWrappers%2A> </xref:System.Xaml.XamlType> Den `Lookup` overstyrer for foregående egenskapslisten kan også startes i denne fastsettelse.       Overstyre denne metoden hvis du ikke stole på standard intern CLR gjenspeiling og bruker metadata eller andre teknikker for rapportering XAML informasjon om system eller skjemainformasjon av en type."
  syntax:
    content: protected virtual System.Collections.Generic.IList<System.Xaml.XamlType> LookupAllowedContentTypes ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "En liste over mulige innholdstyper."
  overload: System.Xaml.XamlType.LookupAllowedContentTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupAttachableMember(System.String)
  id: LookupAttachableMember(System.String)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupAttachableMember(String)
  nameWithType: XamlType.LookupAttachableMember(String)
  fullName: System.Xaml.XamlType.LookupAttachableMember(String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> for en bestemt navnet kan legges ved fra dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Denne metoden kan aktiveres når en oppringer henter en verdi fra <xref:System.Xaml.XamlType.GetAttachableMember%2A>.</xref:System.Xaml.XamlType.GetAttachableMember%2A>       Standard implementering bruker intern CLR-gjenspeiling. Når <xref:System.Xaml.XamlType.UnderlyingType%2A>er `null`, standard implementering kan bruke <xref:System.Xaml.XamlType.BaseType%2A>, hvis den er tilgjengelig.</xref:System.Xaml.XamlType.BaseType%2A> </xref:System.Xaml.XamlType.UnderlyingType%2A> Dette kaller LookupAttachableMember rekursivt for å prøve å finne en gyldig grunntype, og returnerer `null` Hvis det finnes ingen gyldig grunntype.       Overstyre denne metoden hvis du ikke stole på standard intern CLR gjenspeiling og bruker metadata eller andre teknikker for rapportering XAML informasjon om system eller skjemainformasjon av en type.      > [!IMPORTANT] > LookupAttachableMember er virtuell, og derfor kan overstyres. Overstyringen har faren (om med onde hensikter eller ellers) til å endre rapporterte medlemmene av typen XAML slik at de ikke lenger justeres i en forventet måte med den <xref:System.ComponentModel.TypeDescriptor> `Get*` informasjon om underliggende CLR-typen.</xref:System.ComponentModel.TypeDescriptor> Bruk underliggende CLR-typen i stedet for en security-kritiske kontroll for reporting medlem."
  syntax:
    content: protected virtual System.Xaml.XamlMember LookupAttachableMember (string name);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på medlemmet kan legges ved å hente i `ownerTypeName.MemberName` skjemaet."
    return:
      type: System.Xaml.XamlMember
      description: "En <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objekt for det forespurte kan legges ved medlemmet; ellers <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, hvis det finnes ingen kan legges ved medlem med samme navn."
  overload: System.Xaml.XamlType.LookupAttachableMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupBaseType
  id: LookupBaseType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupBaseType()
  nameWithType: XamlType.LookupBaseType()
  fullName: System.Xaml.XamlType.LookupBaseType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> for umiddelbar basistypen for denne XAML. Forsøket på denne verdien er basert på den underliggende typen dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> og skjema."
  remarks: "Denne metoden kan aktiveres når en oppringer henter en verdi fra <xref:System.Xaml.XamlType.BaseType%2A>.</xref:System.Xaml.XamlType.BaseType%2A>       Standard-implementering kan returnere en intern konstant som representerer den <xref:System.Object>Hvis <xref:System.Xaml.XamlType.UnderlyingType%2A>er `null`.</xref:System.Xaml.XamlType.UnderlyingType%2A> </xref:System.Object>       Overstyre denne metoden hvis du ikke stole på standard intern CLR gjenspeiling og bruker metadata eller andre teknikker for rapportering XAML informasjon om system eller skjemainformasjon av en type.      > [!IMPORTANT] > LookupBaseType er virtuell, og derfor kan overstyres. Overstyringen har faren (om med onde hensikter eller ellers) endre rapporterte typen informasjon om typen XAML slik at det er ikke lenger justert på en måte som forventet til systemet typeinformasjonen av den underliggende CLR-typen. Bruk underliggende CLR-typen i stedet for en hvilken som helst security-kritiske sjekker tilordningen operasjoner og tilgang."
  syntax:
    content: protected virtual System.Xaml.XamlType LookupBaseType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "Den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> for umiddelbar basistypen for denne XAML."
  overload: System.Xaml.XamlType.LookupBaseType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupCollectionKind
  id: LookupCollectionKind
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupCollectionKind()
  nameWithType: XamlType.LookupCollectionKind()
  fullName: System.Xaml.XamlType.LookupCollectionKind()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en verdi for den <xref href=&quot;System.Xaml.Schema.XamlCollectionKind&quot;> </xref> som deklarerer som bestemt samling Opplistingstype dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> bruker."
  remarks: "Denne metoden kalles av en intern private metode (ingen felles `CollectionKind` eller `GetCollectionKind` API finnes på <xref:System.Xaml.XamlType>).</xref:System.Xaml.XamlType>       Standard implementering bruker intern CLR-gjenspeiling. I tilfeller der <xref:System.Xaml.XamlType.UnderlyingType%2A>er `null`, standard implementering kan bruke <xref:System.Xaml.XamlType.BaseType%2A>, hvis den er tilgjengelig.</xref:System.Xaml.XamlType.BaseType%2A> </xref:System.Xaml.XamlType.UnderlyingType%2A> Dette kaller indirekte LookupCollectionKind rekursivt for å prøve å finne en gyldig grunntype; Returnerer den <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>Hvis det finnes ingen gyldig grunntype.</xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName> Generelt standard implementering prøver å finne den `Add` metoden for den underliggende typen av gjenspeiling. Hvis finner den <xref:System.Reflection.MethodInfo>av den `Add` metoden er nok informasjon til å fastsette som <xref:System.Xaml.Schema.XamlCollectionKind>verdien skal returneres.</xref:System.Xaml.Schema.XamlCollectionKind> </xref:System.Reflection.MethodInfo> Ellers returneres <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>.</xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>       Overstyre denne metoden hvis du ikke stole på standard intern CLR gjenspeiling og bruker metadata eller andre teknikker for rapportering XAML informasjon om system eller skjemainformasjon av en type."
  syntax:
    content: protected virtual System.Xaml.Schema.XamlCollectionKind LookupCollectionKind ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlCollectionKind
      description: "Verdien av <xref href=&quot;System.Xaml.Schema.XamlCollectionKind&quot;> </xref> opplisting."
  overload: System.Xaml.XamlType.LookupCollectionKind*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupConstructionRequiresArguments
  id: LookupConstructionRequiresArguments
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupConstructionRequiresArguments()
  nameWithType: XamlType.LookupConstructionRequiresArguments()
  fullName: System.Xaml.XamlType.LookupConstructionRequiresArguments()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> må ha argumenter (generisk begrensninger via <xref uid=&quot;langword_csharp_x:TypeArguments&quot; name=&quot;x:TypeArguments&quot; href=&quot;&quot;> </xref>, initialisering tekst eller andre XAML teknikker) til å lage en gyldig forekomst av typen."
  remarks: "Denne metoden kan aktiveres når en oppringer henter en verdi fra <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>       Standard implementering returnerer `false` for typer regnes verdityper i CLR Skriv inn system. For andre enn verdityper, CLR gjenspeiling <xref:System.Reflection.ConstructorInfo>brukes til å fastsette om det finnes en standardkonstruktør.</xref:System.Reflection.ConstructorInfo>       Overstyre denne metoden hvis du ikke stole på standard intern CLR gjenspeiling og bruker metadata eller andre teknikker for rapportering XAML informasjon om system eller skjemainformasjon av en type."
  syntax:
    content: protected virtual bool LookupConstructionRequiresArguments ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis konstruksjon av en forekomst krever noen argumentverdien; Hvis ikke, og false."
  overload: System.Xaml.XamlType.LookupConstructionRequiresArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupContentProperty
  id: LookupContentProperty
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupContentProperty()
  nameWithType: XamlType.LookupContentProperty()
  fullName: System.Xaml.XamlType.LookupContentProperty()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> informasjon for innholdsegenskapen dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Denne metoden kan aktiveres når en oppringer henter en verdi fra <xref:System.Xaml.XamlType.ContentProperty%2A>.</xref:System.Xaml.XamlType.ContentProperty%2A>       Standard implementering søker etter <xref:System.Windows.Markup.ContentPropertyAttribute>i typedefinisjonen.</xref:System.Windows.Markup.ContentPropertyAttribute> Det kan også kontrollere <xref:System.Xaml.XamlType.BaseType%2A>for attributtet hvis det finnes ingen attributter for umiddelbar underliggende typen.</xref:System.Xaml.XamlType.BaseType%2A> Hvis ikke disse kontrollene oppdager en innholdstype, standard implementering returnerer `null`.       Overstyre denne metoden hvis du ikke stole på standard intern CLR gjenspeiling og bruker metadata eller andre teknikker for rapportering XAML informasjon om system eller skjemainformasjon av en type."
  syntax:
    content: protected virtual System.Xaml.XamlMember LookupContentProperty ();
    parameters: []
    return:
      type: System.Xaml.XamlMember
      description: "<xref href=&quot;System.Xaml.XamlMember&quot;></xref>informasjon om innholdsegenskapen dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>. May be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.XamlType.LookupContentProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupContentWrappers
  id: LookupContentWrappers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupContentWrappers()
  nameWithType: XamlType.LookupContentWrappers()
  fullName: System.Xaml.XamlType.LookupContentWrappers()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en liste over <xref href=&quot;System.Xaml.XamlType&quot;> </xref> verdier som representerer innhold-sikkerhetsgrupper for denne <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "En innhold tekstbryting er en klasse som representerer innhold Samlingstypen når typene som er brukt i samlingen ikke er sammenhengende type-systemet. Hvilke typer Samlingselementer for innhold wrapper forventes å være begrenset på ulike måter utover <xref:System.Object>eller et nøytralt objekt tilsvarende.</xref:System.Object> Denne begrensningen håndheves bare ved utformingen eller formålet med egenskapene som bruker dette, og ikke av typen-systemet. Mer enn én innhold wrapper kan finnes på en type.       Et eksempel klassen scenario fra WPF XAML implementeringen, og se <xref:System.Windows.Documents.InlineCollection>.</xref:System.Windows.Documents.InlineCollection>"
  syntax:
    content: protected virtual System.Collections.Generic.IList<System.Xaml.XamlType> LookupContentWrappers ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "En liste over <xref href=&quot;System.Xaml.XamlType&quot;> </xref> verdier som representerer innhold-sikkerhetsgrupper for denne <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupContentWrappers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupCustomAttributeProvider
  id: LookupCustomAttributeProvider
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupCustomAttributeProvider()
  nameWithType: XamlType.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlType.LookupCustomAttributeProvider()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Når implementert i en avledet klasse, returnerer en <xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref> implementering."
  remarks: "Overstyre denne metoden for å angi intern gjenspeilingen med en annen måte å hente CLR-attributtverdier. Overstyringer ikke finnes bruker den interne Reflektoren vanlige CLR gjenspeiling logic.       Standard implementering returnerer `null`."
  syntax:
    content: protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();
    parameters: []
    return:
      type: System.Reflection.ICustomAttributeProvider
      description: "En <xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref> implementering."
  overload: System.Xaml.XamlType.LookupCustomAttributeProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupDeferringLoader
  id: LookupDeferringLoader
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupDeferringLoader()
  nameWithType: XamlType.LookupDeferringLoader()
  fullName: System.Xaml.XamlType.LookupDeferringLoader()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; -objektet som brukes for utsatt innlasting av XAML deklarert objekter."
  remarks: "Denne metoden kan aktiveres når en oppringer henter en verdi fra <xref:System.Xaml.XamlType.DeferringLoader%2A>.</xref:System.Xaml.XamlType.DeferringLoader%2A> Overstyre denne metoden hvis du vil <xref:System.Xaml.XamlType.DeferringLoader%2A>å returnere en annen verdi enn er aktivert som standard intern gjenspeiling og tilbyr også egendefinerte <xref:System.Xaml.Schema.XamlTypeInvoker>informasjon.</xref:System.Xaml.Schema.XamlTypeInvoker> </xref:System.Xaml.XamlType.DeferringLoader%2A>       Standard implementering returnerer et objekt på grunnlag av lesing <xref:System.Windows.Markup.XamlDeferLoadAttribute>.</xref:System.Windows.Markup.XamlDeferLoadAttribute> Det kan også kontrollere <xref:System.Xaml.XamlType.BaseType%2A>for attributtet hvis det finnes ingen attributter for umiddelbar underliggende typen.</xref:System.Xaml.XamlType.BaseType%2A> Hvis en verdi ikke er tilgjengelig, metoden returnerer `null`."
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> LookupDeferringLoader ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
      description: "En &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; som har en <xref href=&quot;System.Xaml.XamlDeferringLoader&quot;> </xref> begrensning i generisk."
  overload: System.Xaml.XamlType.LookupDeferringLoader*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupInvoker
  id: LookupInvoker
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupInvoker()
  nameWithType: XamlType.LookupInvoker()
  fullName: System.Xaml.XamlType.LookupInvoker()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> som er knyttet til dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Denne metoden kan aktiveres ved kall til <xref:System.Xaml.XamlType.Invoker%2A>.</xref:System.Xaml.XamlType.Invoker%2A>       Standard implementering krever ikke som en <xref:System.Xaml.XamlType>konstrueres ved hjelp av konstruktører som sendes en opprinnelig <xref:System.Xaml.Schema.XamlTypeInvoker>.</xref:System.Xaml.Schema.XamlTypeInvoker> </xref:System.Xaml.XamlType> Imidlertid en <xref:System.Xaml.XamlType.UnderlyingType%2A>verdi må finnes for den <xref:System.Xaml.XamlType>; ellers standard implementering returnerer `null`.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.UnderlyingType%2A>       Overstyre denne metoden hvis du også opprette en klasse som er avledet fra <xref:System.Xaml.Schema.XamlTypeInvoker>og har tenkt å returnere den utledede klassen.</xref:System.Xaml.Schema.XamlTypeInvoker> Hvis du går tilbake `null`, <xref:System.Xaml.XamlType.Invoker%2A>returnerer <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName>til brukere.</xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName> </xref:System.Xaml.XamlType.Invoker%2A>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlTypeInvoker LookupInvoker ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlTypeInvoker
      description: "Den <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> informasjon om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>; ellers <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupInvoker*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsAmbient
  id: LookupIsAmbient
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsAmbient()
  nameWithType: XamlType.LookupIsAmbient()
  fullName: System.Xaml.XamlType.LookupIsAmbient()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer omsluttende typen, i henhold til XAML definisjonen."
  remarks: "Denne metoden kan aktiveres ved kall til <xref:System.Xaml.XamlType.IsAmbient%2A>.</xref:System.Xaml.XamlType.IsAmbient%2A>       Standard implementering bruker CLR gjenspeiling på den <xref:System.Xaml.XamlType.UnderlyingType%2A>og kan kontrollere enkle typer.</xref:System.Xaml.XamlType.UnderlyingType%2A> Denne implementeringen søker etter den <xref:System.Windows.Markup.AmbientAttribute>som er angitt for den aktuelle typen definisjonen på nivå klassen, og returnerer `true` i dette tilfellet.</xref:System.Windows.Markup.AmbientAttribute> Alle andre tilfeller returnere `false`.       Overstyre denne metoden hvis du vil <xref:System.Xaml.XamlType.IsAmbient%2A>å returnere en annen verdi enn er aktivert som standard intern gjenspeiling.</xref:System.Xaml.XamlType.IsAmbient%2A>"
  syntax:
    content: protected virtual bool LookupIsAmbient ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer omsluttende typen; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsAmbient*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsConstructible
  id: LookupIsConstructible
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsConstructible()
  nameWithType: XamlType.LookupIsConstructible()
  fullName: System.Xaml.XamlType.LookupIsConstructible()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en constructible type, i henhold til XAML definisjonen."
  remarks: "Denne metoden kan aktiveres ved kall til <xref:System.Xaml.XamlType.IsConstructible%2A>.</xref:System.Xaml.XamlType.IsConstructible%2A>       Standard implementering bruker CLR gjenspeiling på <xref:System.Xaml.XamlType.UnderlyingType%2A>.</xref:System.Xaml.XamlType.UnderlyingType%2A> Typen må være konkrete ikke nestet og lukket. Standard implementering kontrollerer om typen verditypen og retur av <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A> For en null <xref:System.Xaml.XamlType.UnderlyingType%2A>, metoden returnerer `true`.</xref:System.Xaml.XamlType.UnderlyingType%2A>       Overstyre denne metoden hvis du vil <xref:System.Xaml.XamlType.IsConstructible%2A>å returnere en annen verdi enn er aktivert som standard intern gjenspeiling.</xref:System.Xaml.XamlType.IsConstructible%2A>"
  syntax:
    content: protected virtual bool LookupIsConstructible ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer typen constructible; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsConstructible*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsMarkupExtension
  id: LookupIsMarkupExtension
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsMarkupExtension()
  nameWithType: XamlType.LookupIsMarkupExtension()
  fullName: System.Xaml.XamlType.LookupIsMarkupExtension()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en markup filtype."
  remarks: "Denne metoden kan aktiveres ved kall til <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</xref:System.Xaml.XamlType.IsMarkupExtension%2A>       Standard implementering består bare av dette kallet: `return CanAssignTo(XamlLanguage.MarkupExtension);` overstyre denne metoden hvis du vil <xref:System.Xaml.XamlType.IsMarkupExtension%2A>å bruke annen logic.</xref:System.Xaml.XamlType.IsMarkupExtension%2A>       XAML spesifikasjonen gjelder, denne typen må være tilordnes til `x:MarkupExtension` for å returnere `true` for <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</xref:System.Xaml.XamlType.IsMarkupExtension%2A>"
  syntax:
    content: protected virtual bool LookupIsMarkupExtension ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer filtypen markup; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsMarkupExtension*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsNameScope
  id: LookupIsNameScope
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsNameScope()
  nameWithType: XamlType.LookupIsNameScope()
  fullName: System.Xaml.XamlType.LookupIsNameScope()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en XAML namescope, i henhold til XAML definisjonen."
  remarks: "Denne metoden kan aktiveres ved kall til <xref:System.Xaml.XamlType.IsNameScope%2A>.</xref:System.Xaml.XamlType.IsNameScope%2A>       Standard implementering foretar en <xref:System.Xaml.XamlType.CanAssignTo%2A>kall indirekte mot typen <xref:System.Windows.Markup.INameScope>.</xref:System.Windows.Markup.INameScope> </xref:System.Xaml.XamlType.CanAssignTo%2A> <xref:System.Windows.Markup.INameScope>er et grensesnitt som er definert i samlingen WindowsBase.</xref:System.Windows.Markup.INameScope> Denne metoden for XAML namescope identifikasjon brukes begge av WPF og [!INCLUDE[TLA#tla_workflow](~/add/includes/tlasharptla-workflow-md.md)] implementeringer av XAML.       Overstyre denne metoden hvis du vil <xref:System.Xaml.XamlType.IsNameScope%2A>å bruke annen logic.</xref:System.Xaml.XamlType.IsNameScope%2A>       En XAML namescope fremtvinger navnet unikhet for egenskapen eller egenskaper som brukes for `x:Name`  /  `[name property]`. Hvis <xref:System.Xaml.XamlType.IsNameScope%2A>er `true`, og deretter en mekanisme for å fremheve unikhet skal finnes, og skal evalueres i forhold til denne typen eier en XAML namescope.</xref:System.Xaml.XamlType.IsNameScope%2A> XAML-namescope utvider deretter til innhold av typen til en annen XAML namescope eier type inntreffer."
  syntax:
    content: protected virtual bool LookupIsNameScope ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en XAML namescope; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsNameScope*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsNullable
  id: LookupIsNullable
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsNullable()
  nameWithType: XamlType.LookupIsNullable()
  fullName: System.Xaml.XamlType.LookupIsNullable()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en type som kan nullstilles, i henhold til XAML definisjonen."
  remarks: "Denne metoden kan aktiveres ved kall til <xref:System.Xaml.XamlType.IsNullable%2A>.</xref:System.Xaml.XamlType.IsNullable%2A>       Standard implementering foretar en fastsettelse basert på det CLR kjerner biblioteket kan nullstilles begrepet, kontrollert mot <xref:System.Xaml.XamlType.UnderlyingType%2A>.</xref:System.Xaml.XamlType.UnderlyingType%2A> For en null <xref:System.Xaml.XamlType.UnderlyingType%2A>, returneres `true`.</xref:System.Xaml.XamlType.UnderlyingType%2A>       Overstyre denne metoden hvis du vil <xref:System.Xaml.XamlType.IsNullable%2A>å bruke annen logic.</xref:System.Xaml.XamlType.IsNullable%2A>"
  syntax:
    content: protected virtual bool LookupIsNullable ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en type som kan nullstilles; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsNullable*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsPublic
  id: LookupIsPublic
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsPublic()
  nameWithType: XamlType.LookupIsPublic()
  fullName: System.Xaml.XamlType.LookupIsPublic()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en fellestype i det aktuelle type-systemet."
  remarks: "Denne metoden kan aktiveres ved kall til <xref:System.Xaml.XamlType.IsPublic%2A>.</xref:System.Xaml.XamlType.IsPublic%2A>       Standard implementering bruker CLR gjenspeiling mot en ikke-null <xref:System.Xaml.XamlType.UnderlyingType%2A>.</xref:System.Xaml.XamlType.UnderlyingType%2A> For en null <xref:System.Xaml.XamlType.UnderlyingType%2A>, returneres `true`.</xref:System.Xaml.XamlType.UnderlyingType%2A>       Overstyre denne metoden hvis du vil <xref:System.Xaml.XamlType.IsPublic%2A>å bruke annen logic.</xref:System.Xaml.XamlType.IsPublic%2A>      > [!IMPORTANT] > LookupIsPublic er virtuell, og derfor kan overstyres. Overstyringen har faren (om med onde hensikter eller ellers) endre rapporterte få informasjon om typen XAML slik at det er ikke lenger justert på en måte som forventet til systemet eller tilgang typeinformasjonen av den underliggende CLR-typen. Bruk underliggende CLR-typen i stedet for en hvilken som helst security-kritiske sjekker tilordningen operasjoner og tilgang."
  syntax:
    content: protected virtual bool LookupIsPublic ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en fellestype; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsUnknown
  id: LookupIsUnknown
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsUnknown()
  nameWithType: XamlType.LookupIsUnknown()
  fullName: System.Xaml.XamlType.LookupIsUnknown()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en type som ikke kan løses i det underliggende typesystemet."
  remarks: "Denne metoden kan aktiveres ved kall til <xref:System.Xaml.XamlType.IsUnknown%2A>.</xref:System.Xaml.XamlType.IsUnknown%2A>       Standard-implementering kan bruke CLR gjenspeiling. For en null <xref:System.Xaml.XamlType.UnderlyingType%2A>, returneres `true`.</xref:System.Xaml.XamlType.UnderlyingType%2A>       Overstyre denne metoden hvis du vil <xref:System.Xaml.XamlType.IsUnknown%2A>å bruke annen logic.</xref:System.Xaml.XamlType.IsUnknown%2A>"
  syntax:
    content: protected virtual bool LookupIsUnknown ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer typen nonresolvable; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection
  id: LookupIsWhitespaceSignificantCollection
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsWhitespaceSignificantCollection()
  nameWithType: XamlType.LookupIsWhitespaceSignificantCollection()
  fullName: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en mellomrom betydelige samling, i henhold til XML-definisjonen."
  remarks: "Denne metoden kan aktiveres ved kall til <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>.</xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>       Standard implementering returnerer en verdi som er basert på lesing <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>.</xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute> Det kan også kontrollere den <xref:System.Xaml.XamlType.BaseType%2A>for attributtet hvis det finnes ingen attributter for umiddelbar underliggende typen.</xref:System.Xaml.XamlType.BaseType%2A> Hvis en verdi ikke er tilgjengelig, returneres `false`.       Overstyre denne metoden hvis du vil <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>å bruke annen logic.</xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>"
  syntax:
    content: protected virtual bool LookupIsWhitespaceSignificantCollection ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en betydelig samling mellomrom; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsXData
  id: LookupIsXData
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsXData()
  nameWithType: XamlType.LookupIsXData()
  fullName: System.Xaml.XamlType.LookupIsXData()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer XML <xref uid=&quot;langword_csharp_XDATA&quot; name=&quot;XDATA&quot; href=&quot;&quot;> </xref>, som per XAML definisjonen."
  remarks: "Denne metoden kan aktiveres ved kall til <xref:System.Xaml.XamlType.IsXData%2A>.</xref:System.Xaml.XamlType.IsXData%2A>       Standard implementering foretar en <xref:System.Xaml.XamlType.CanAssignTo%2A>kall indirekte mot typen <xref:System.Xml.Serialization.IXmlSerializable>.</xref:System.Xml.Serialization.IXmlSerializable> </xref:System.Xaml.XamlType.CanAssignTo%2A>       Overstyre denne metoden hvis du vil <xref:System.Xaml.XamlType.IsXData%2A>å bruke annen logic.</xref:System.Xaml.XamlType.IsXData%2A>"
  syntax:
    content: protected virtual bool LookupIsXData ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if this <xref href=&quot;System.Xaml.XamlType&quot;></xref> represents <xref uid=&quot;langword_csharp_XDATA&quot; name=&quot;XDATA&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.XamlType.LookupIsXData*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupItemType
  id: LookupItemType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupItemType()
  nameWithType: XamlType.LookupItemType()
  fullName: System.Xaml.XamlType.LookupItemType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en verdi som angir typen informasjon for den <xref uid=&quot;langword_csharp_Items&quot; name=&quot;Items&quot; href=&quot;&quot;> </xref> for dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Denne metoden kan aktiveres ved kall til <xref:System.Xaml.XamlType.ItemType%2A>.</xref:System.Xaml.XamlType.ItemType%2A>       Standard-implementering kan bruke CLR gjenspeiling konsepter, for eksempel søk etter en `Add` metoden av <xref:System.Reflection.MethodInfo>og bruker den <xref:System.Reflection.ParameterInfo>; undersøker <xref:System.Xaml.XamlType.IsArray%2A>; og kontrollere <xref:System.Xaml.XamlType.BaseType%2A>og prøve det samme logikken.</xref:System.Xaml.XamlType.BaseType%2A> </xref:System.Xaml.XamlType.IsArray%2A> </xref:System.Reflection.ParameterInfo> </xref:System.Reflection.MethodInfo>       Overstyre denne metoden hvis du vil <xref:System.Xaml.XamlType.ItemType%2A>å bruke annen logic.</xref:System.Xaml.XamlType.ItemType%2A> Tilfeller der <xref:System.Xaml.XamlType.LookupCollectionKind%2A>returnerer <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>skal returnere `null`.</xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName> </xref:System.Xaml.XamlType.LookupCollectionKind%2A>"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupItemType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "En <xref href=&quot;System.Xaml.XamlType&quot;> </xref> objekt for hva slags elementene i samlingen; ellers <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer ikke en samling."
  overload: System.Xaml.XamlType.LookupItemType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupKeyType
  id: LookupKeyType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupKeyType()
  nameWithType: XamlType.LookupKeyType()
  fullName: System.Xaml.XamlType.LookupKeyType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en verdi som angir typen informasjon om nøkkelegenskapen for dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>, hvis den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en ordliste."
  remarks: "Denne metoden kan aktiveres ved kall til <xref:System.Xaml.XamlType.KeyType%2A>.</xref:System.Xaml.XamlType.KeyType%2A>       Standard-implementering kan bruke CLR gjenspeiling konsepter, for eksempel søk etter en `Add` metoden av <xref:System.Reflection.MethodInfo>og bruker den <xref:System.Reflection.ParameterInfo>; og kontrollere <xref:System.Xaml.XamlType.BaseType%2A>og prøve det samme logikken.</xref:System.Xaml.XamlType.BaseType%2A> </xref:System.Reflection.ParameterInfo> </xref:System.Reflection.MethodInfo>       Overstyre denne metoden hvis du vil <xref:System.Xaml.XamlType.KeyType%2A>å bruke annen logic.</xref:System.Xaml.XamlType.KeyType%2A> Tilfeller der <xref:System.Xaml.XamlType.LookupCollectionKind%2A>returnerer ikke <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>skal returnere `null`.</xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName> </xref:System.Xaml.XamlType.LookupCollectionKind%2A>"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupKeyType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "En <xref href=&quot;System.Xaml.XamlType&quot;> </xref> objekt for nøkkeltypen for ordliste bruk eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer ikke en ordliste"
  overload: System.Xaml.XamlType.LookupKeyType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupMarkupExtensionReturnType
  id: LookupMarkupExtensionReturnType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupMarkupExtensionReturnType()
  nameWithType: XamlType.LookupMarkupExtensionReturnType()
  fullName: System.Xaml.XamlType.LookupMarkupExtensionReturnType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en verdi som angir typen informasjon for den returnerte <xref uid=&quot;langword_csharp_ProvideValue&quot; name=&quot;ProvideValue&quot; href=&quot;&quot;> </xref> for dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>, hvis den representerer en markup filtype."
  remarks: "Denne metoden kan aktiveres ved kall til <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>.</xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>       Standard implementering returnerer en <xref:System.Xaml.XamlType>på grunnlag av lesing <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>.</xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> </xref:System.Xaml.XamlType> Det kan også kontrollere <xref:System.Xaml.XamlType.BaseType%2A>for attributtet hvis det finnes ingen attributter for umiddelbar underliggende typen.</xref:System.Xaml.XamlType.BaseType%2A> Hvis en verdi ikke er tilgjengelig, returneres `null`.       Overstyre denne metoden hvis du vil <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>å bruke annen logic.</xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupMarkupExtensionReturnType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "En <xref href=&quot;System.Xaml.XamlType&quot;> </xref> objekt for Returtypen for markup utvidelsen Bruk; ellers <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer ikke en markup filtype."
  overload: System.Xaml.XamlType.LookupMarkupExtensionReturnType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupMember(System.String,System.Boolean)
  id: LookupMember(System.String,System.Boolean)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupMember(String,Boolean)
  nameWithType: XamlType.LookupMember(String,Boolean)
  fullName: System.Xaml.XamlType.LookupMember(String,Boolean)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> for en bestemt navngitt medlem fra dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Denne metoden kan aktiveres ved kall til <xref:System.Xaml.XamlType.GetMember%2A>.</xref:System.Xaml.XamlType.GetMember%2A>       Standard implementering returnerer en <xref:System.Xaml.XamlType>basert på interne CLR-gjenspeiling og evalueringen mot skjema-kontekst.</xref:System.Xaml.XamlType>       Overstyre denne metoden hvis du vil <xref:System.Xaml.XamlType.GetMember%2A>å bruke annen logic.</xref:System.Xaml.XamlType.GetMember%2A>      > [!IMPORTANT] > LookupMember er virtuell, og derfor kan overstyres. Overstyringen har faren (om med onde hensikter eller ellers) til å endre rapporterte medlemmene av typen XAML slik at de ikke lenger justeres i en forventet måte med den <xref:System.ComponentModel.TypeDescriptor> `Get*` informasjon om underliggende CLR-typen.</xref:System.ComponentModel.TypeDescriptor> Bruk underliggende CLR-typen i stedet for en security-kritiske kontroll for reporting medlem."
  syntax:
    content: protected virtual System.Xaml.XamlMember LookupMember (string name, bool skipReadOnlyCheck);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på medlemmet til å hente (som streng)."
    - id: skipReadOnlyCheck
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Returnerer et medlem, selv om medlemmet er en <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> verdi &lt;xref:System.Xaml.XamlMember.IsReadOnly%2A?displayProperty=fullName&gt;; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> skal ikke returnere en &lt;xref:System.Xaml.XamlMember.IsReadOnly%2A?displayProperty=fullName&gt; medlem. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Xaml.XamlMember
      description: "Den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> informasjon for medlem, hvis et medlem som ble funnet; ellers, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupPositionalParameters(System.Int32)
  id: LookupPositionalParameters(System.Int32)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupPositionalParameters(Int32)
  nameWithType: XamlType.LookupPositionalParameters(Int32)
  fullName: System.Xaml.XamlType.LookupPositionalParameters(Int32)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer typer posisjonelt parameterne som støttes i et bestemt markup utvidelsen bruksområde for dette for markup Utvidelsestyper <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Denne metoden kan aktiveres ved kall til <xref:System.Xaml.XamlType.GetPositionalParameters%2A>.</xref:System.Xaml.XamlType.GetPositionalParameters%2A>       Standard implementering bruker intern gjenspeiling informasjonen basert på finne konstruktører og kontrollere ariteten. Overstyre denne metoden hvis du vil <xref:System.Xaml.XamlType.GetPositionalParameters%2A>å bruke annen logic.</xref:System.Xaml.XamlType.GetPositionalParameters%2A>       Denne APIen. gjelder bare hvis <xref:System.Xaml.XamlType>representerer filtypen markup (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> er `true`).</xref:System.Xaml.XamlType.IsMarkupExtension%2A> </xref:System.Xaml.XamlType>       Inndataene `parameterCount` gjelder ikke ber om typen for en bestemt posisjonelt parameteren. Det er for å angi ariteten i en markup filtypen. Markup utvidelsen Bruk ofte har flere signaturer og bruker annen parameteren ariteten (antall) til posisjonelt parameterne til å skille. Du kan imidlertid konfigurere en kontekst som skjemaet for å tillate dupliserte arities og bruke posisjonelt parametertypene for differensiering. For mer informasjon, kan du se <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A> For en bestemt aritet count parameteren posisjonene og typer, kan variere. Hvis du vil ha posisjonelt typen for en bestemt aritet markup utvidelsen bruk, kan du først kalle <xref:System.Xaml.XamlType.GetPositionalParameters%2A>med antallet aritet.</xref:System.Xaml.XamlType.GetPositionalParameters%2A> Anskaffe elementet på denne plasseringen fra returnerte samlingen."
  syntax:
    content: protected virtual System.Collections.Generic.IList<System.Xaml.XamlType> LookupPositionalParameters (int parameterCount);
    parameters:
    - id: parameterCount
      type: System.Int32
      description: "Antall (aritet) bestemt syntaks eller konstruktøren modus du vil ha informasjon om."
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "En liste over <xref href=&quot;System.Xaml.XamlType&quot;> </xref> verdier der hvert eksempel <xref href=&quot;System.Xaml.XamlType&quot;> </xref> er type for denne plasseringen i syntaksen. Du må angi disse typene i samme rekkefølge når du oppgir markup inndata for markup filtypen."
  overload: System.Xaml.XamlType.LookupPositionalParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupSetMarkupExtensionHandler
  id: LookupSetMarkupExtensionHandler
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupSetMarkupExtensionHandler()
  nameWithType: XamlType.LookupSetMarkupExtensionHandler()
  fullName: System.Xaml.XamlType.LookupSetMarkupExtensionHandler()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer et behandlingsprogram Tilbakekall skal brukes for set-operasjoner av markup utvidelser."
  remarks: "Standard implementering returnerer en verdi som er basert på lesing <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>.</xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> Det kan også kontrollere <xref:System.Xaml.XamlType.BaseType%2A>for attributtet hvis det finnes ingen attributter for umiddelbar underliggende typen.</xref:System.Xaml.XamlType.BaseType%2A> Hvis en verdi ikke er tilgjengelig, returneres `null`."
  syntax:
    content: protected virtual EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs> LookupSetMarkupExtensionHandler ();
    parameters: []
    return:
      type: System.EventHandler{System.Windows.Markup.XamlSetMarkupExtensionEventArgs}
      description: "Et behandlingsprogram Tilbakekall skal brukes for set-operasjoner av markup utvidelser."
  overload: System.Xaml.XamlType.LookupSetMarkupExtensionHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupSetTypeConverterHandler
  id: LookupSetTypeConverterHandler
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupSetTypeConverterHandler()
  nameWithType: XamlType.LookupSetTypeConverterHandler()
  fullName: System.Xaml.XamlType.LookupSetTypeConverterHandler()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer et behandlingsprogram skal brukes for typen konverteringsprogram innstillingen tilfeller."
  remarks: "Standard implementering returnerer en verdi som er basert på lesing <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>.</xref:System.Windows.Markup.XamlSetTypeConverterAttribute> Det kan også kontrollere <xref:System.Xaml.XamlType.BaseType%2A>for attributtet hvis det finnes ingen attributter for umiddelbar underliggende typen.</xref:System.Xaml.XamlType.BaseType%2A> Hvis en verdi ikke er tilgjengelig, returneres `null`."
  syntax:
    content: protected virtual EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs> LookupSetTypeConverterHandler ();
    parameters: []
    return:
      type: System.EventHandler{System.Windows.Markup.XamlSetTypeConverterEventArgs}
      description: "Et behandlingsprogram skal brukes for typen konverteringsprogram innstillingen tilfeller."
  overload: System.Xaml.XamlType.LookupSetTypeConverterHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupTrimSurroundingWhitespace
  id: LookupTrimSurroundingWhitespace
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupTrimSurroundingWhitespace()
  nameWithType: XamlType.LookupTrimSurroundingWhitespace()
  fullName: System.Xaml.XamlType.LookupTrimSurroundingWhitespace()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> skal serialiseres modus justerer omkringliggende mellomrom."
  remarks: "Denne metoden kan aktiveres ved kall til <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>.</xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>       Standard implementering returnerer en verdi som er basert på lesing <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>.</xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute> Det kan også kontrollere <xref:System.Xaml.XamlType.BaseType%2A>for attributtet hvis det finnes ingen attributter for umiddelbar underliggende typen.</xref:System.Xaml.XamlType.BaseType%2A> Hvis en verdi ikke er tilgjengelig, returneres `false`."
  syntax:
    content: protected virtual bool LookupTrimSurroundingWhitespace ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> skal serialiserte i en modus justerer omkringliggende mellomrom; ellers, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupTrimSurroundingWhitespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupTypeConverter
  id: LookupTypeConverter
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupTypeConverter()
  nameWithType: XamlType.LookupTypeConverter()
  fullName: System.Xaml.XamlType.LookupTypeConverter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; som har en <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> begrensningen, som representerer typekonvertering virkemåten for verdier for dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Denne metoden kan aktiveres ved kall til <xref:System.Xaml.XamlType.TypeConverter%2A>.</xref:System.Xaml.XamlType.TypeConverter%2A>       Standard implementering returnerer en verdi som er basert på lesing <xref:System.ComponentModel.TypeConverterAttribute>.</xref:System.ComponentModel.TypeConverterAttribute> Standard-implementering kan også kontrollere <xref:System.Xaml.XamlType.BaseType%2A>for attributtet hvis det finnes ingen attributter for umiddelbar underliggende typen.</xref:System.Xaml.XamlType.BaseType%2A> Den inneholder også spesielle logikken for standard konvertering av opplistingene, vanlige verdityper og generiske elementer. Hvis en verdi ikke er tilgjengelig, returneres `null`.       Overstyre denne metoden hvis du vil <xref:System.Xaml.XamlType.TypeConverter%2A>å bruke annen logic.</xref:System.Xaml.XamlType.TypeConverter%2A>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> LookupTypeConverter ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "En &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; med <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> begrensningen som representerer typekonvertering virkemåten for verdier for dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>; ellers <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupTypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupUnderlyingType
  id: LookupUnderlyingType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupUnderlyingType()
  nameWithType: XamlType.LookupUnderlyingType()
  fullName: System.Xaml.XamlType.LookupUnderlyingType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer CLR <xref:System.Type>som ligger under dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Type>"
  remarks: "Denne metoden kan aktiveres ved kall til <xref:System.Xaml.XamlType.UnderlyingType%2A>.</xref:System.Xaml.XamlType.UnderlyingType%2A>       Standard implementering returnerer et internt felt. Dette feltet er vanligvis initialisert under konstruksjon og verdien er basert på som konstruktøren ble kalt og informasjon som er angitt.       Overstyre denne metoden hvis du vil <xref:System.Xaml.XamlType.UnderlyingType%2A>å bruke annen logic.</xref:System.Xaml.XamlType.UnderlyingType%2A>"
  syntax:
    content: protected virtual Type LookupUnderlyingType ();
    parameters: []
    return:
      type: System.Type
      description: "CLR <xref:System.Type>som ligger under dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>; ellers <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Xaml.XamlType.LookupUnderlyingType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupUsableDuringInitialization
  id: LookupUsableDuringInitialization
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupUsableDuringInitialization()
  nameWithType: XamlType.LookupUsableDuringInitialization()
  fullName: System.Xaml.XamlType.LookupUsableDuringInitialization()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> er bygd topp til bunn under initialisering av XAML."
  remarks: "Topp til bunn er en metafor som tilsvarer XAML prosessor virkemåten ved oppretting av objektet diagrammet. Når bygget topp til bunn, en type som er koblet til overordnet, startes og er angitt for egenskapene. Topp til bunn konstruksjon forhindrer aktivering endre egenskapen behandlingsprogrammer flere ganger. Slik behandler ripples opp objektet diagrammet og derfor fjerner flere behandlingsprogrammet kall og gir en optimalisering av ytelsen for oppstart av objekt-diagrammet.       Denne metoden kan aktiveres ved kall til <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>.</xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>       Standard implementering returnerer en verdi som er basert på lesing <xref:System.Windows.Markup.UsableDuringInitializationAttribute>.</xref:System.Windows.Markup.UsableDuringInitializationAttribute> Det kan også kontrollere <xref:System.Xaml.XamlType.BaseType%2A>for attributtet hvis det finnes ingen attributter for umiddelbar underliggende typen.</xref:System.Xaml.XamlType.BaseType%2A> Hvis en verdi ikke er tilgjengelig, returneres `false`.       Overstyre denne metoden hvis du vil <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>å bruke annen logic.</xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>"
  syntax:
    content: protected virtual bool LookupUsableDuringInitialization ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> bygges topp til bunn under initialisering av XAML; ellers, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupUsableDuringInitialization*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupValueSerializer
  id: LookupValueSerializer
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupValueSerializer()
  nameWithType: XamlType.LookupValueSerializer()
  fullName: System.Xaml.XamlType.LookupValueSerializer()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; som har en <xref:System.Windows.Markup.ValueSerializer>begrensningen, som representerer verdien serialisering virkemåte for verdier for dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Windows.Markup.ValueSerializer>"
  remarks: "Denne metoden kan aktiveres ved kall til <xref:System.Xaml.XamlType.ValueSerializer%2A>.</xref:System.Xaml.XamlType.ValueSerializer%2A>       Standard implementering returnerer en verdi som er basert på lesing <xref:System.Windows.Markup.ValueSerializerAttribute>.</xref:System.Windows.Markup.ValueSerializerAttribute> Det kan også kontrollere <xref:System.Xaml.XamlType.BaseType%2A>for attributtet hvis det finnes ingen attributter for umiddelbar underliggende typen.</xref:System.Xaml.XamlType.BaseType%2A> Den inneholder også spesielle logikken for standard serialisering av opplistingene, vanlige verdityper eller generiske elementer. Hvis en verdi ikke er tilgjengelig, returneres `null`.       Overstyre denne metoden hvis du vil <xref:System.Xaml.XamlType.ValueSerializer%2A>å bruke annen logic.</xref:System.Xaml.XamlType.ValueSerializer%2A>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> LookupValueSerializer ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
      description: "En &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; med <xref:System.Windows.Markup.ValueSerializer>begrensningen som representerer verdien serialisering virkemåte for verdier for dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>; ellers <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Markup.ValueSerializer>"
  overload: System.Xaml.XamlType.LookupValueSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.MarkupExtensionReturnType
  id: MarkupExtensionReturnType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: MarkupExtensionReturnType
  nameWithType: XamlType.MarkupExtensionReturnType
  fullName: System.Xaml.XamlType.MarkupExtensionReturnType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir typen informasjon for den returnerte <xref uid=&quot;langword_csharp_ProvideValue&quot; name=&quot;ProvideValue&quot; href=&quot;&quot;> </xref> for dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>, hvis den representerer en markup filtype."
  remarks: "Denne egenskapen gjelder bare hvis <xref:System.Xaml.XamlType>representerer filtypen markup (`x:MarkupExtension` i listen typer som kan tilordnes).</xref:System.Xaml.XamlType>       Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne egenskapen kan aktivere <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> </xref:System.Xaml.XamlType> Hvis du vil ha mer informasjon om returverdier og andre bruken, kan du se dokumentasjonen for <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A>for denne typen.</xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A>"
  syntax:
    content: public System.Xaml.XamlType MarkupExtensionReturnType { get; }
    return:
      type: System.Xaml.XamlType
      description: "En <xref href=&quot;System.Xaml.XamlType&quot;> </xref> objekt for Returtypen for markup utvidelsen Bruk; ellers <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer ikke en markup filtype."
  overload: System.Xaml.XamlType.MarkupExtensionReturnType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.Name
  id: Name
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: Name
  nameWithType: XamlType.Name
  fullName: System.Xaml.XamlType.Name
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter navnet streng av typen som dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer."
  remarks: "Denne egenskapen vanligvis henter konstruert XML-navnet (per den <xref:System.Xaml.XamlType.%23ctor%2A>signatur), eller navnet på den <xref:System.Type>, hvis den bygges ved hjelp av relevant konstruktøren av typen CLR.</xref:System.Type> </xref:System.Xaml.XamlType.%23ctor%2A>"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Streng-navnet på denne XAML-typen."
  overload: System.Xaml.XamlType.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)
  id: op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: op_Equality(XamlType,XamlType)
  nameWithType: XamlType.op_Equality(XamlType,XamlType)
  fullName: System.Xaml.XamlType.op_Equality(XamlType,XamlType)
  type: Operator
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Bestemmer om to angitt <xref href=&quot;System.Xaml.XamlType&quot;> </xref> objekter har samme verdi."
  syntax:
    content: public static bool op_Equality (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);
    parameters:
    - id: xamlType1
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: xamlType2
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis verdien for <code> xamlType1 </code> er lik verdien for <code> xamlType2 </code>; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)
  id: op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: op_Inequality(XamlType,XamlType)
  nameWithType: XamlType.op_Inequality(XamlType,XamlType)
  fullName: System.Xaml.XamlType.op_Inequality(XamlType,XamlType)
  type: Operator
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Bestemmer om to angitt <xref href=&quot;System.Xaml.XamlType&quot;> </xref> objekter har forskjellige verdier."
  syntax:
    content: public static bool op_Inequality (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);
    parameters:
    - id: xamlType1
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: xamlType2
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis verdien for <code> xamlType1 </code> er forskjellig fra verdien for <code> xamlType2 </code>; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.PreferredXamlNamespace
  id: PreferredXamlNamespace
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: PreferredXamlNamespace
  nameWithType: XamlType.PreferredXamlNamespace
  fullName: System.Xaml.XamlType.PreferredXamlNamespace
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter enkelt XAML navneområdet som primær XAML navneområdet for denne <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Denne implementeringen gir samme verdi som kaller <xref:System.Xaml.XamlType.GetXamlNamespaces%2A>og henter den første Verdistrengen fra returnerte tallsett.</xref:System.Xaml.XamlType.GetXamlNamespaces%2A>"
  syntax:
    content: public string PreferredXamlNamespace { get; }
    return:
      type: System.String
      description: "Identifikator som en streng med primære XAML navneområdet for denne XAML."
  overload: System.Xaml.XamlType.PreferredXamlNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.SchemaContext
  id: SchemaContext
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: SchemaContext
  nameWithType: XamlType.SchemaContext
  fullName: System.Xaml.XamlType.SchemaContext
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter aktiv <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> for behandling av dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "<xref:System.Xaml.XamlSchemaContext>er et obligatorisk parameter oppføring når <xref:System.Xaml.XamlType>.</xref:System.Xaml.XamlType></xref:System.Xaml.XamlSchemaContext>"
  syntax:
    content: public System.Xaml.XamlSchemaContext SchemaContext { get; }
    return:
      type: System.Xaml.XamlSchemaContext
      description: "Aktiv <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> for behandling av dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  overload: System.Xaml.XamlType.SchemaContext*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ToString
  id: ToString
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ToString()
  nameWithType: XamlType.ToString()
  fullName: System.Xaml.XamlType.ToString()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en strengrepresentasjon av dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "<xref:System.Xaml.XamlType>Implementering av <xref:System.Object.ToString%2A>returnerer <xref:System.Xaml.XamlType.Name%2A>for <xref:System.Xaml.XamlType>.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.Name%2A> </xref:System.Object.ToString%2A> </xref:System.Xaml.XamlType>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "En strengrepresentasjon av dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  overload: System.Xaml.XamlType.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.TrimSurroundingWhitespace
  id: TrimSurroundingWhitespace
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: TrimSurroundingWhitespace
  nameWithType: XamlType.TrimSurroundingWhitespace
  fullName: System.Xaml.XamlType.TrimSurroundingWhitespace
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> har mellomrom behandler virkemåte for serialisering som justerer omkringliggende mellomrom i innholdet."
  remarks: "Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne egenskapen kan aktivere <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> </xref:System.Xaml.XamlType> Hvis du vil ha mer informasjon om returverdier og andre bruken, kan du se dokumentasjonen for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>for denne typen.</xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>"
  syntax:
    content: public bool TrimSurroundingWhitespace { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en type som bruker mellomrom beskjæring; ellers, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.TrimSurroundingWhitespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.TypeArguments
  id: TypeArguments
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: TypeArguments
  nameWithType: XamlType.TypeArguments
  fullName: System.Xaml.XamlType.TypeArguments
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en argumentliste type for tilfeller der dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer en generell."
  remarks: "Det finnes enkelte situasjoner for en <xref:System.Xaml.XamlType>der kaller parameteren TypeArguments returnerer en liste der typene er fremdeles åpen.</xref:System.Xaml.XamlType> I dette tilfellet, ett eller flere av de returnerte <xref:System.Xaml.XamlType>verdier får plassholder verdier for <xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName>, slik som `T`, til å representere at generisk er fremdeles åpen.</xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName> </xref:System.Xaml.XamlType> Denne situasjonen kan oppstå hvis du får en <xref:System.Xaml.XamlType>fra et kall til <xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>, i stedet for fra en XAML leseren implementering.</xref:System.Xaml.XamlSchemaContext.GetXamlType%2A> </xref:System.Xaml.XamlType>"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.XamlType> TypeArguments { get; }
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "En liste over typen argumenttyper; Ellers <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, hvis <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerer ikke en generell."
  overload: System.Xaml.XamlType.TypeArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.TypeConverter
  id: TypeConverter
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: TypeConverter
  nameWithType: XamlType.TypeConverter
  fullName: System.Xaml.XamlType.TypeConverter
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; med <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> begrensningen representerer typen konvertering virkemåte for verdier for dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne egenskapen kan aktivere <xref:System.Xaml.XamlType.LookupTypeConverter%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupTypeConverter%2A> </xref:System.Xaml.XamlType> Hvis du vil ha mer informasjon om returverdier og andre bruken, kan du se dokumentasjonen for <xref:System.Xaml.XamlType.LookupTypeConverter%2A>for denne typen.</xref:System.Xaml.XamlType.LookupTypeConverter%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> TypeConverter { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "En &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; med <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> begrensningen representerer typen konvertering virkemåte for verdier for dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  overload: System.Xaml.XamlType.TypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.UnderlyingType
  id: UnderlyingType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: UnderlyingType
  nameWithType: XamlType.UnderlyingType
  fullName: System.Xaml.XamlType.UnderlyingType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter CLR <xref:System.Type>som ligger under dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Type>"
  syntax:
    content: public Type UnderlyingType { get; }
    return:
      type: System.Type
      description: "CLR <xref:System.Type>som ligger under dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Type>"
  overload: System.Xaml.XamlType.UnderlyingType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ValueSerializer
  id: ValueSerializer
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ValueSerializer
  nameWithType: XamlType.ValueSerializer
  fullName: System.Xaml.XamlType.ValueSerializer
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; med <xref:System.Windows.Markup.ValueSerializer>begrensningen som representerer verdien serialisering virkemåte for verdier for dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Windows.Markup.ValueSerializer>"
  remarks: "Hvis du ikke bruke den standard interne CLR gjenspeiling fremgangsmåten en <xref:System.Xaml.XamlType>, kall til denne egenskapen kan aktivere <xref:System.Xaml.XamlType.LookupValueSerializer%2A>overstyrer på <xref:System.Xaml.XamlType>avledede klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupValueSerializer%2A> </xref:System.Xaml.XamlType> Hvis du vil ha mer informasjon om returverdier og andre bruken, kan du se dokumentasjonen for <xref:System.Xaml.XamlType.LookupValueSerializer%2A>for denne typen.</xref:System.Xaml.XamlType.LookupValueSerializer%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> ValueSerializer { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
      description: "En &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; med <xref:System.Windows.Markup.ValueSerializer>begrensningen som representerer verdien serialisering virkemåte for verdier for dette <xref href=&quot;System.Xaml.XamlType&quot;> </xref>; ellers <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Markup.ValueSerializer>"
  overload: System.Xaml.XamlType.ValueSerializer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlType
  isExternal: false
  name: XamlType(Type,XamlSchemaContext)
  nameWithType: XamlType.XamlType(Type,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(Type,XamlSchemaContext)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xaml.XamlSchemaContext
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
- uid: System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlType
  isExternal: false
  name: XamlType(String,IList<XamlType>,XamlSchemaContext)
  nameWithType: XamlType.XamlType(String,IList<XamlType>,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(String,IList<XamlType>,XamlSchemaContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{System.Xaml.XamlType}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<XamlType>
  nameWithType: IList<XamlType>
  fullName: System.Collections.Generic.IList<System.Xaml.XamlType>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Xaml.XamlType>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlType
    name: XamlType
    nameWithType: XamlType
    fullName: XamlType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)
  parent: System.Xaml.XamlType
  isExternal: false
  name: XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
  nameWithType: XamlType.XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
  fullName: System.Xaml.XamlType.XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
- uid: System.Xaml.Schema.XamlTypeInvoker
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlTypeInvoker
  nameWithType: XamlTypeInvoker
  fullName: System.Xaml.Schema.XamlTypeInvoker
- uid: System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlType
  isExternal: false
  name: XamlType(String,String,IList<XamlType>,XamlSchemaContext)
  nameWithType: XamlType.XamlType(String,String,IList<XamlType>,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(String,String,IList<XamlType>,XamlSchemaContext)
- uid: System.Xaml.XamlType.AllowedContentTypes
  parent: System.Xaml.XamlType
  isExternal: false
  name: AllowedContentTypes
  nameWithType: XamlType.AllowedContentTypes
  fullName: System.Xaml.XamlType.AllowedContentTypes
- uid: System.Xaml.XamlType.BaseType
  parent: System.Xaml.XamlType
  isExternal: false
  name: BaseType
  nameWithType: XamlType.BaseType
  fullName: System.Xaml.XamlType.BaseType
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  isExternal: false
  name: CanAssignTo(XamlType)
  nameWithType: XamlType.CanAssignTo(XamlType)
  fullName: System.Xaml.XamlType.CanAssignTo(XamlType)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlType.ConstructionRequiresArguments
  parent: System.Xaml.XamlType
  isExternal: false
  name: ConstructionRequiresArguments
  nameWithType: XamlType.ConstructionRequiresArguments
  fullName: System.Xaml.XamlType.ConstructionRequiresArguments
- uid: System.Xaml.XamlType.ContentProperty
  parent: System.Xaml.XamlType
  isExternal: false
  name: ContentProperty
  nameWithType: XamlType.ContentProperty
  fullName: System.Xaml.XamlType.ContentProperty
- uid: System.Xaml.XamlMember
  parent: System.Xaml
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
- uid: System.Xaml.XamlType.ContentWrappers
  parent: System.Xaml.XamlType
  isExternal: false
  name: ContentWrappers
  nameWithType: XamlType.ContentWrappers
  fullName: System.Xaml.XamlType.ContentWrappers
- uid: System.Xaml.XamlType.DeferringLoader
  parent: System.Xaml.XamlType
  isExternal: false
  name: DeferringLoader
  nameWithType: XamlType.DeferringLoader
  fullName: System.Xaml.XamlType.DeferringLoader
- uid: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<XamlDeferringLoader>
  nameWithType: XamlValueConverter<XamlDeferringLoader>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.Xaml.XamlDeferringLoader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlDeferringLoader
    name: XamlDeferringLoader
    nameWithType: XamlDeferringLoader
    fullName: XamlDeferringLoader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.Equals(System.Object)
  parent: System.Xaml.XamlType
  isExternal: false
  name: Equals(Object)
  nameWithType: XamlType.Equals(Object)
  fullName: System.Xaml.XamlType.Equals(Object)
- uid: System.Xaml.XamlType.Equals(System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  isExternal: false
  name: Equals(XamlType)
  nameWithType: XamlType.Equals(XamlType)
  fullName: System.Xaml.XamlType.Equals(XamlType)
- uid: System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAliasedProperty(XamlDirective)
  nameWithType: XamlType.GetAliasedProperty(XamlDirective)
  fullName: System.Xaml.XamlType.GetAliasedProperty(XamlDirective)
- uid: System.Xaml.XamlDirective
  parent: System.Xaml
  isExternal: false
  name: XamlDirective
  nameWithType: XamlDirective
  fullName: System.Xaml.XamlDirective
- uid: System.Xaml.XamlType.GetAllAttachableMembers
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAllAttachableMembers()
  nameWithType: XamlType.GetAllAttachableMembers()
  fullName: System.Xaml.XamlType.GetAllAttachableMembers()
- uid: System.Collections.Generic.ICollection{System.Xaml.XamlMember}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<XamlMember>
  nameWithType: ICollection<XamlMember>
  fullName: System.Collections.Generic.ICollection<System.Xaml.XamlMember>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Xaml.XamlMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlMember
    name: XamlMember
    nameWithType: XamlMember
    fullName: XamlMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.GetAllMembers
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAllMembers()
  nameWithType: XamlType.GetAllMembers()
  fullName: System.Xaml.XamlType.GetAllMembers()
- uid: System.Xaml.XamlType.GetAttachableMember(System.String)
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAttachableMember(String)
  nameWithType: XamlType.GetAttachableMember(String)
  fullName: System.Xaml.XamlType.GetAttachableMember(String)
- uid: System.Xaml.XamlType.GetHashCode
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetHashCode()
  nameWithType: XamlType.GetHashCode()
  fullName: System.Xaml.XamlType.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xaml.XamlType.GetMember(System.String)
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetMember(String)
  nameWithType: XamlType.GetMember(String)
  fullName: System.Xaml.XamlType.GetMember(String)
- uid: System.Xaml.XamlType.GetPositionalParameters(System.Int32)
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetPositionalParameters(Int32)
  nameWithType: XamlType.GetPositionalParameters(Int32)
  fullName: System.Xaml.XamlType.GetPositionalParameters(Int32)
- uid: System.Xaml.XamlType.GetXamlNamespaces
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetXamlNamespaces()
  nameWithType: XamlType.GetXamlNamespaces()
  fullName: System.Xaml.XamlType.GetXamlNamespaces()
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.Invoker
  parent: System.Xaml.XamlType
  isExternal: false
  name: Invoker
  nameWithType: XamlType.Invoker
  fullName: System.Xaml.XamlType.Invoker
- uid: System.Xaml.XamlType.IsAmbient
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsAmbient
  nameWithType: XamlType.IsAmbient
  fullName: System.Xaml.XamlType.IsAmbient
- uid: System.Xaml.XamlType.IsArray
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsArray
  nameWithType: XamlType.IsArray
  fullName: System.Xaml.XamlType.IsArray
- uid: System.Xaml.XamlType.IsCollection
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsCollection
  nameWithType: XamlType.IsCollection
  fullName: System.Xaml.XamlType.IsCollection
- uid: System.Xaml.XamlType.IsConstructible
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsConstructible
  nameWithType: XamlType.IsConstructible
  fullName: System.Xaml.XamlType.IsConstructible
- uid: System.Xaml.XamlType.IsDictionary
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsDictionary
  nameWithType: XamlType.IsDictionary
  fullName: System.Xaml.XamlType.IsDictionary
- uid: System.Xaml.XamlType.IsGeneric
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsGeneric
  nameWithType: XamlType.IsGeneric
  fullName: System.Xaml.XamlType.IsGeneric
- uid: System.Xaml.XamlType.IsMarkupExtension
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsMarkupExtension
  nameWithType: XamlType.IsMarkupExtension
  fullName: System.Xaml.XamlType.IsMarkupExtension
- uid: System.Xaml.XamlType.IsNameScope
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNameScope
  nameWithType: XamlType.IsNameScope
  fullName: System.Xaml.XamlType.IsNameScope
- uid: System.Xaml.XamlType.IsNameValid
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNameValid
  nameWithType: XamlType.IsNameValid
  fullName: System.Xaml.XamlType.IsNameValid
- uid: System.Xaml.XamlType.IsNullable
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNullable
  nameWithType: XamlType.IsNullable
  fullName: System.Xaml.XamlType.IsNullable
- uid: System.Xaml.XamlType.IsPublic
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsPublic
  nameWithType: XamlType.IsPublic
  fullName: System.Xaml.XamlType.IsPublic
- uid: System.Xaml.XamlType.IsUnknown
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsUnknown
  nameWithType: XamlType.IsUnknown
  fullName: System.Xaml.XamlType.IsUnknown
- uid: System.Xaml.XamlType.IsUsableDuringInitialization
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsUsableDuringInitialization
  nameWithType: XamlType.IsUsableDuringInitialization
  fullName: System.Xaml.XamlType.IsUsableDuringInitialization
- uid: System.Xaml.XamlType.IsWhitespaceSignificantCollection
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsWhitespaceSignificantCollection
  nameWithType: XamlType.IsWhitespaceSignificantCollection
  fullName: System.Xaml.XamlType.IsWhitespaceSignificantCollection
- uid: System.Xaml.XamlType.IsXData
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsXData
  nameWithType: XamlType.IsXData
  fullName: System.Xaml.XamlType.IsXData
- uid: System.Xaml.XamlType.ItemType
  parent: System.Xaml.XamlType
  isExternal: false
  name: ItemType
  nameWithType: XamlType.ItemType
  fullName: System.Xaml.XamlType.ItemType
- uid: System.Xaml.XamlType.KeyType
  parent: System.Xaml.XamlType
  isExternal: false
  name: KeyType
  nameWithType: XamlType.KeyType
  fullName: System.Xaml.XamlType.KeyType
- uid: System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAliasedProperty(XamlDirective)
  nameWithType: XamlType.LookupAliasedProperty(XamlDirective)
  fullName: System.Xaml.XamlType.LookupAliasedProperty(XamlDirective)
- uid: System.Xaml.XamlType.LookupAllAttachableMembers
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllAttachableMembers()
  nameWithType: XamlType.LookupAllAttachableMembers()
  fullName: System.Xaml.XamlType.LookupAllAttachableMembers()
- uid: System.Collections.Generic.IEnumerable{System.Xaml.XamlMember}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<XamlMember>
  nameWithType: IEnumerable<XamlMember>
  fullName: System.Collections.Generic.IEnumerable<System.Xaml.XamlMember>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Xaml.XamlMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlMember
    name: XamlMember
    nameWithType: XamlMember
    fullName: XamlMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.LookupAllMembers
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllMembers()
  nameWithType: XamlType.LookupAllMembers()
  fullName: System.Xaml.XamlType.LookupAllMembers()
- uid: System.Xaml.XamlType.LookupAllowedContentTypes
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllowedContentTypes()
  nameWithType: XamlType.LookupAllowedContentTypes()
  fullName: System.Xaml.XamlType.LookupAllowedContentTypes()
- uid: System.Xaml.XamlType.LookupAttachableMember(System.String)
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAttachableMember(String)
  nameWithType: XamlType.LookupAttachableMember(String)
  fullName: System.Xaml.XamlType.LookupAttachableMember(String)
- uid: System.Xaml.XamlType.LookupBaseType
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupBaseType()
  nameWithType: XamlType.LookupBaseType()
  fullName: System.Xaml.XamlType.LookupBaseType()
- uid: System.Xaml.XamlType.LookupCollectionKind
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupCollectionKind()
  nameWithType: XamlType.LookupCollectionKind()
  fullName: System.Xaml.XamlType.LookupCollectionKind()
- uid: System.Xaml.Schema.XamlCollectionKind
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlCollectionKind
  nameWithType: XamlCollectionKind
  fullName: System.Xaml.Schema.XamlCollectionKind
- uid: System.Xaml.XamlType.LookupConstructionRequiresArguments
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupConstructionRequiresArguments()
  nameWithType: XamlType.LookupConstructionRequiresArguments()
  fullName: System.Xaml.XamlType.LookupConstructionRequiresArguments()
- uid: System.Xaml.XamlType.LookupContentProperty
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupContentProperty()
  nameWithType: XamlType.LookupContentProperty()
  fullName: System.Xaml.XamlType.LookupContentProperty()
- uid: System.Xaml.XamlType.LookupContentWrappers
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupContentWrappers()
  nameWithType: XamlType.LookupContentWrappers()
  fullName: System.Xaml.XamlType.LookupContentWrappers()
- uid: System.Xaml.XamlType.LookupCustomAttributeProvider
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupCustomAttributeProvider()
  nameWithType: XamlType.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlType.LookupCustomAttributeProvider()
- uid: System.Reflection.ICustomAttributeProvider
  parent: System.Reflection
  isExternal: false
  name: ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
- uid: System.Xaml.XamlType.LookupDeferringLoader
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupDeferringLoader()
  nameWithType: XamlType.LookupDeferringLoader()
  fullName: System.Xaml.XamlType.LookupDeferringLoader()
- uid: System.Xaml.XamlType.LookupInvoker
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupInvoker()
  nameWithType: XamlType.LookupInvoker()
  fullName: System.Xaml.XamlType.LookupInvoker()
- uid: System.Xaml.XamlType.LookupIsAmbient
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsAmbient()
  nameWithType: XamlType.LookupIsAmbient()
  fullName: System.Xaml.XamlType.LookupIsAmbient()
- uid: System.Xaml.XamlType.LookupIsConstructible
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsConstructible()
  nameWithType: XamlType.LookupIsConstructible()
  fullName: System.Xaml.XamlType.LookupIsConstructible()
- uid: System.Xaml.XamlType.LookupIsMarkupExtension
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsMarkupExtension()
  nameWithType: XamlType.LookupIsMarkupExtension()
  fullName: System.Xaml.XamlType.LookupIsMarkupExtension()
- uid: System.Xaml.XamlType.LookupIsNameScope
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsNameScope()
  nameWithType: XamlType.LookupIsNameScope()
  fullName: System.Xaml.XamlType.LookupIsNameScope()
- uid: System.Xaml.XamlType.LookupIsNullable
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsNullable()
  nameWithType: XamlType.LookupIsNullable()
  fullName: System.Xaml.XamlType.LookupIsNullable()
- uid: System.Xaml.XamlType.LookupIsPublic
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsPublic()
  nameWithType: XamlType.LookupIsPublic()
  fullName: System.Xaml.XamlType.LookupIsPublic()
- uid: System.Xaml.XamlType.LookupIsUnknown
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsUnknown()
  nameWithType: XamlType.LookupIsUnknown()
  fullName: System.Xaml.XamlType.LookupIsUnknown()
- uid: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsWhitespaceSignificantCollection()
  nameWithType: XamlType.LookupIsWhitespaceSignificantCollection()
  fullName: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection()
- uid: System.Xaml.XamlType.LookupIsXData
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsXData()
  nameWithType: XamlType.LookupIsXData()
  fullName: System.Xaml.XamlType.LookupIsXData()
- uid: System.Xaml.XamlType.LookupItemType
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupItemType()
  nameWithType: XamlType.LookupItemType()
  fullName: System.Xaml.XamlType.LookupItemType()
- uid: System.Xaml.XamlType.LookupKeyType
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupKeyType()
  nameWithType: XamlType.LookupKeyType()
  fullName: System.Xaml.XamlType.LookupKeyType()
- uid: System.Xaml.XamlType.LookupMarkupExtensionReturnType
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupMarkupExtensionReturnType()
  nameWithType: XamlType.LookupMarkupExtensionReturnType()
  fullName: System.Xaml.XamlType.LookupMarkupExtensionReturnType()
- uid: System.Xaml.XamlType.LookupMember(System.String,System.Boolean)
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupMember(String,Boolean)
  nameWithType: XamlType.LookupMember(String,Boolean)
  fullName: System.Xaml.XamlType.LookupMember(String,Boolean)
- uid: System.Xaml.XamlType.LookupPositionalParameters(System.Int32)
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupPositionalParameters(Int32)
  nameWithType: XamlType.LookupPositionalParameters(Int32)
  fullName: System.Xaml.XamlType.LookupPositionalParameters(Int32)
- uid: System.Xaml.XamlType.LookupSetMarkupExtensionHandler
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupSetMarkupExtensionHandler()
  nameWithType: XamlType.LookupSetMarkupExtensionHandler()
  fullName: System.Xaml.XamlType.LookupSetMarkupExtensionHandler()
- uid: System.EventHandler{System.Windows.Markup.XamlSetMarkupExtensionEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<XamlSetMarkupExtensionEventArgs>
  nameWithType: EventHandler<XamlSetMarkupExtensionEventArgs>
  fullName: System.EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.XamlSetMarkupExtensionEventArgs
    name: XamlSetMarkupExtensionEventArgs
    nameWithType: XamlSetMarkupExtensionEventArgs
    fullName: XamlSetMarkupExtensionEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.LookupSetTypeConverterHandler
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupSetTypeConverterHandler()
  nameWithType: XamlType.LookupSetTypeConverterHandler()
  fullName: System.Xaml.XamlType.LookupSetTypeConverterHandler()
- uid: System.EventHandler{System.Windows.Markup.XamlSetTypeConverterEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<XamlSetTypeConverterEventArgs>
  nameWithType: EventHandler<XamlSetTypeConverterEventArgs>
  fullName: System.EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.XamlSetTypeConverterEventArgs
    name: XamlSetTypeConverterEventArgs
    nameWithType: XamlSetTypeConverterEventArgs
    fullName: XamlSetTypeConverterEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.LookupTrimSurroundingWhitespace
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupTrimSurroundingWhitespace()
  nameWithType: XamlType.LookupTrimSurroundingWhitespace()
  fullName: System.Xaml.XamlType.LookupTrimSurroundingWhitespace()
- uid: System.Xaml.XamlType.LookupTypeConverter
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupTypeConverter()
  nameWithType: XamlType.LookupTypeConverter()
  fullName: System.Xaml.XamlType.LookupTypeConverter()
- uid: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<TypeConverter>
  nameWithType: XamlValueConverter<TypeConverter>
  fullName: System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.ComponentModel.TypeConverter>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.TypeConverter
    name: TypeConverter
    nameWithType: TypeConverter
    fullName: TypeConverter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.LookupUnderlyingType
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupUnderlyingType()
  nameWithType: XamlType.LookupUnderlyingType()
  fullName: System.Xaml.XamlType.LookupUnderlyingType()
- uid: System.Xaml.XamlType.LookupUsableDuringInitialization
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupUsableDuringInitialization()
  nameWithType: XamlType.LookupUsableDuringInitialization()
  fullName: System.Xaml.XamlType.LookupUsableDuringInitialization()
- uid: System.Xaml.XamlType.LookupValueSerializer
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupValueSerializer()
  nameWithType: XamlType.LookupValueSerializer()
  fullName: System.Xaml.XamlType.LookupValueSerializer()
- uid: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<ValueSerializer>
  nameWithType: XamlValueConverter<ValueSerializer>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.Windows.Markup.ValueSerializer>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.ValueSerializer
    name: ValueSerializer
    nameWithType: ValueSerializer
    fullName: ValueSerializer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.MarkupExtensionReturnType
  parent: System.Xaml.XamlType
  isExternal: false
  name: MarkupExtensionReturnType
  nameWithType: XamlType.MarkupExtensionReturnType
  fullName: System.Xaml.XamlType.MarkupExtensionReturnType
- uid: System.Xaml.XamlType.Name
  parent: System.Xaml.XamlType
  isExternal: false
  name: Name
  nameWithType: XamlType.Name
  fullName: System.Xaml.XamlType.Name
- uid: System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  isExternal: false
  name: op_Equality(XamlType,XamlType)
  nameWithType: XamlType.op_Equality(XamlType,XamlType)
  fullName: System.Xaml.XamlType.op_Equality(XamlType,XamlType)
- uid: System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  isExternal: false
  name: op_Inequality(XamlType,XamlType)
  nameWithType: XamlType.op_Inequality(XamlType,XamlType)
  fullName: System.Xaml.XamlType.op_Inequality(XamlType,XamlType)
- uid: System.Xaml.XamlType.PreferredXamlNamespace
  parent: System.Xaml.XamlType
  isExternal: false
  name: PreferredXamlNamespace
  nameWithType: XamlType.PreferredXamlNamespace
  fullName: System.Xaml.XamlType.PreferredXamlNamespace
- uid: System.Xaml.XamlType.SchemaContext
  parent: System.Xaml.XamlType
  isExternal: false
  name: SchemaContext
  nameWithType: XamlType.SchemaContext
  fullName: System.Xaml.XamlType.SchemaContext
- uid: System.Xaml.XamlType.ToString
  parent: System.Xaml.XamlType
  isExternal: false
  name: ToString()
  nameWithType: XamlType.ToString()
  fullName: System.Xaml.XamlType.ToString()
- uid: System.Xaml.XamlType.TrimSurroundingWhitespace
  parent: System.Xaml.XamlType
  isExternal: false
  name: TrimSurroundingWhitespace
  nameWithType: XamlType.TrimSurroundingWhitespace
  fullName: System.Xaml.XamlType.TrimSurroundingWhitespace
- uid: System.Xaml.XamlType.TypeArguments
  parent: System.Xaml.XamlType
  isExternal: false
  name: TypeArguments
  nameWithType: XamlType.TypeArguments
  fullName: System.Xaml.XamlType.TypeArguments
- uid: System.Xaml.XamlType.TypeConverter
  parent: System.Xaml.XamlType
  isExternal: false
  name: TypeConverter
  nameWithType: XamlType.TypeConverter
  fullName: System.Xaml.XamlType.TypeConverter
- uid: System.Xaml.XamlType.UnderlyingType
  parent: System.Xaml.XamlType
  isExternal: false
  name: UnderlyingType
  nameWithType: XamlType.UnderlyingType
  fullName: System.Xaml.XamlType.UnderlyingType
- uid: System.Xaml.XamlType.ValueSerializer
  parent: System.Xaml.XamlType
  isExternal: false
  name: ValueSerializer
  nameWithType: XamlType.ValueSerializer
  fullName: System.Xaml.XamlType.ValueSerializer
- uid: System.Xaml.XamlType.#ctor*
  parent: System.Xaml.XamlType
  isExternal: false
  name: XamlType
  nameWithType: XamlType.XamlType
- uid: System.Xaml.XamlType.AllowedContentTypes*
  parent: System.Xaml.XamlType
  isExternal: false
  name: AllowedContentTypes
  nameWithType: XamlType.AllowedContentTypes
- uid: System.Xaml.XamlType.BaseType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: BaseType
  nameWithType: XamlType.BaseType
- uid: System.Xaml.XamlType.CanAssignTo*
  parent: System.Xaml.XamlType
  isExternal: false
  name: CanAssignTo
  nameWithType: XamlType.CanAssignTo
- uid: System.Xaml.XamlType.ConstructionRequiresArguments*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ConstructionRequiresArguments
  nameWithType: XamlType.ConstructionRequiresArguments
- uid: System.Xaml.XamlType.ContentProperty*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ContentProperty
  nameWithType: XamlType.ContentProperty
- uid: System.Xaml.XamlType.ContentWrappers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ContentWrappers
  nameWithType: XamlType.ContentWrappers
- uid: System.Xaml.XamlType.DeferringLoader*
  parent: System.Xaml.XamlType
  isExternal: false
  name: DeferringLoader
  nameWithType: XamlType.DeferringLoader
- uid: System.Xaml.XamlType.Equals*
  parent: System.Xaml.XamlType
  isExternal: false
  name: Equals
  nameWithType: XamlType.Equals
- uid: System.Xaml.XamlType.GetAliasedProperty*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAliasedProperty
  nameWithType: XamlType.GetAliasedProperty
- uid: System.Xaml.XamlType.GetAllAttachableMembers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAllAttachableMembers
  nameWithType: XamlType.GetAllAttachableMembers
- uid: System.Xaml.XamlType.GetAllMembers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAllMembers
  nameWithType: XamlType.GetAllMembers
- uid: System.Xaml.XamlType.GetAttachableMember*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAttachableMember
  nameWithType: XamlType.GetAttachableMember
- uid: System.Xaml.XamlType.GetHashCode*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetHashCode
  nameWithType: XamlType.GetHashCode
- uid: System.Xaml.XamlType.GetMember*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetMember
  nameWithType: XamlType.GetMember
- uid: System.Xaml.XamlType.GetPositionalParameters*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetPositionalParameters
  nameWithType: XamlType.GetPositionalParameters
- uid: System.Xaml.XamlType.GetXamlNamespaces*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetXamlNamespaces
  nameWithType: XamlType.GetXamlNamespaces
- uid: System.Xaml.XamlType.Invoker*
  parent: System.Xaml.XamlType
  isExternal: false
  name: Invoker
  nameWithType: XamlType.Invoker
- uid: System.Xaml.XamlType.IsAmbient*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsAmbient
  nameWithType: XamlType.IsAmbient
- uid: System.Xaml.XamlType.IsArray*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsArray
  nameWithType: XamlType.IsArray
- uid: System.Xaml.XamlType.IsCollection*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsCollection
  nameWithType: XamlType.IsCollection
- uid: System.Xaml.XamlType.IsConstructible*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsConstructible
  nameWithType: XamlType.IsConstructible
- uid: System.Xaml.XamlType.IsDictionary*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsDictionary
  nameWithType: XamlType.IsDictionary
- uid: System.Xaml.XamlType.IsGeneric*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsGeneric
  nameWithType: XamlType.IsGeneric
- uid: System.Xaml.XamlType.IsMarkupExtension*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsMarkupExtension
  nameWithType: XamlType.IsMarkupExtension
- uid: System.Xaml.XamlType.IsNameScope*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNameScope
  nameWithType: XamlType.IsNameScope
- uid: System.Xaml.XamlType.IsNameValid*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNameValid
  nameWithType: XamlType.IsNameValid
- uid: System.Xaml.XamlType.IsNullable*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNullable
  nameWithType: XamlType.IsNullable
- uid: System.Xaml.XamlType.IsPublic*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsPublic
  nameWithType: XamlType.IsPublic
- uid: System.Xaml.XamlType.IsUnknown*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsUnknown
  nameWithType: XamlType.IsUnknown
- uid: System.Xaml.XamlType.IsUsableDuringInitialization*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsUsableDuringInitialization
  nameWithType: XamlType.IsUsableDuringInitialization
- uid: System.Xaml.XamlType.IsWhitespaceSignificantCollection*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsWhitespaceSignificantCollection
  nameWithType: XamlType.IsWhitespaceSignificantCollection
- uid: System.Xaml.XamlType.IsXData*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsXData
  nameWithType: XamlType.IsXData
- uid: System.Xaml.XamlType.ItemType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ItemType
  nameWithType: XamlType.ItemType
- uid: System.Xaml.XamlType.KeyType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: KeyType
  nameWithType: XamlType.KeyType
- uid: System.Xaml.XamlType.LookupAliasedProperty*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAliasedProperty
  nameWithType: XamlType.LookupAliasedProperty
- uid: System.Xaml.XamlType.LookupAllAttachableMembers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllAttachableMembers
  nameWithType: XamlType.LookupAllAttachableMembers
- uid: System.Xaml.XamlType.LookupAllMembers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllMembers
  nameWithType: XamlType.LookupAllMembers
- uid: System.Xaml.XamlType.LookupAllowedContentTypes*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllowedContentTypes
  nameWithType: XamlType.LookupAllowedContentTypes
- uid: System.Xaml.XamlType.LookupAttachableMember*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAttachableMember
  nameWithType: XamlType.LookupAttachableMember
- uid: System.Xaml.XamlType.LookupBaseType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupBaseType
  nameWithType: XamlType.LookupBaseType
- uid: System.Xaml.XamlType.LookupCollectionKind*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupCollectionKind
  nameWithType: XamlType.LookupCollectionKind
- uid: System.Xaml.XamlType.LookupConstructionRequiresArguments*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupConstructionRequiresArguments
  nameWithType: XamlType.LookupConstructionRequiresArguments
- uid: System.Xaml.XamlType.LookupContentProperty*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupContentProperty
  nameWithType: XamlType.LookupContentProperty
- uid: System.Xaml.XamlType.LookupContentWrappers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupContentWrappers
  nameWithType: XamlType.LookupContentWrappers
- uid: System.Xaml.XamlType.LookupCustomAttributeProvider*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupCustomAttributeProvider
  nameWithType: XamlType.LookupCustomAttributeProvider
- uid: System.Xaml.XamlType.LookupDeferringLoader*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupDeferringLoader
  nameWithType: XamlType.LookupDeferringLoader
- uid: System.Xaml.XamlType.LookupInvoker*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupInvoker
  nameWithType: XamlType.LookupInvoker
- uid: System.Xaml.XamlType.LookupIsAmbient*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsAmbient
  nameWithType: XamlType.LookupIsAmbient
- uid: System.Xaml.XamlType.LookupIsConstructible*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsConstructible
  nameWithType: XamlType.LookupIsConstructible
- uid: System.Xaml.XamlType.LookupIsMarkupExtension*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsMarkupExtension
  nameWithType: XamlType.LookupIsMarkupExtension
- uid: System.Xaml.XamlType.LookupIsNameScope*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsNameScope
  nameWithType: XamlType.LookupIsNameScope
- uid: System.Xaml.XamlType.LookupIsNullable*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsNullable
  nameWithType: XamlType.LookupIsNullable
- uid: System.Xaml.XamlType.LookupIsPublic*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsPublic
  nameWithType: XamlType.LookupIsPublic
- uid: System.Xaml.XamlType.LookupIsUnknown*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsUnknown
  nameWithType: XamlType.LookupIsUnknown
- uid: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsWhitespaceSignificantCollection
  nameWithType: XamlType.LookupIsWhitespaceSignificantCollection
- uid: System.Xaml.XamlType.LookupIsXData*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsXData
  nameWithType: XamlType.LookupIsXData
- uid: System.Xaml.XamlType.LookupItemType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupItemType
  nameWithType: XamlType.LookupItemType
- uid: System.Xaml.XamlType.LookupKeyType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupKeyType
  nameWithType: XamlType.LookupKeyType
- uid: System.Xaml.XamlType.LookupMarkupExtensionReturnType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupMarkupExtensionReturnType
  nameWithType: XamlType.LookupMarkupExtensionReturnType
- uid: System.Xaml.XamlType.LookupMember*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupMember
  nameWithType: XamlType.LookupMember
- uid: System.Xaml.XamlType.LookupPositionalParameters*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupPositionalParameters
  nameWithType: XamlType.LookupPositionalParameters
- uid: System.Xaml.XamlType.LookupSetMarkupExtensionHandler*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupSetMarkupExtensionHandler
  nameWithType: XamlType.LookupSetMarkupExtensionHandler
- uid: System.Xaml.XamlType.LookupSetTypeConverterHandler*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupSetTypeConverterHandler
  nameWithType: XamlType.LookupSetTypeConverterHandler
- uid: System.Xaml.XamlType.LookupTrimSurroundingWhitespace*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupTrimSurroundingWhitespace
  nameWithType: XamlType.LookupTrimSurroundingWhitespace
- uid: System.Xaml.XamlType.LookupTypeConverter*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupTypeConverter
  nameWithType: XamlType.LookupTypeConverter
- uid: System.Xaml.XamlType.LookupUnderlyingType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupUnderlyingType
  nameWithType: XamlType.LookupUnderlyingType
- uid: System.Xaml.XamlType.LookupUsableDuringInitialization*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupUsableDuringInitialization
  nameWithType: XamlType.LookupUsableDuringInitialization
- uid: System.Xaml.XamlType.LookupValueSerializer*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupValueSerializer
  nameWithType: XamlType.LookupValueSerializer
- uid: System.Xaml.XamlType.MarkupExtensionReturnType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: MarkupExtensionReturnType
  nameWithType: XamlType.MarkupExtensionReturnType
- uid: System.Xaml.XamlType.Name*
  parent: System.Xaml.XamlType
  isExternal: false
  name: Name
  nameWithType: XamlType.Name
- uid: System.Xaml.XamlType.op_Equality*
  parent: System.Xaml.XamlType
  isExternal: false
  name: op_Equality
  nameWithType: XamlType.op_Equality
- uid: System.Xaml.XamlType.op_Inequality*
  parent: System.Xaml.XamlType
  isExternal: false
  name: op_Inequality
  nameWithType: XamlType.op_Inequality
- uid: System.Xaml.XamlType.PreferredXamlNamespace*
  parent: System.Xaml.XamlType
  isExternal: false
  name: PreferredXamlNamespace
  nameWithType: XamlType.PreferredXamlNamespace
- uid: System.Xaml.XamlType.SchemaContext*
  parent: System.Xaml.XamlType
  isExternal: false
  name: SchemaContext
  nameWithType: XamlType.SchemaContext
- uid: System.Xaml.XamlType.ToString*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ToString
  nameWithType: XamlType.ToString
- uid: System.Xaml.XamlType.TrimSurroundingWhitespace*
  parent: System.Xaml.XamlType
  isExternal: false
  name: TrimSurroundingWhitespace
  nameWithType: XamlType.TrimSurroundingWhitespace
- uid: System.Xaml.XamlType.TypeArguments*
  parent: System.Xaml.XamlType
  isExternal: false
  name: TypeArguments
  nameWithType: XamlType.TypeArguments
- uid: System.Xaml.XamlType.TypeConverter*
  parent: System.Xaml.XamlType
  isExternal: false
  name: TypeConverter
  nameWithType: XamlType.TypeConverter
- uid: System.Xaml.XamlType.UnderlyingType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: UnderlyingType
  nameWithType: XamlType.UnderlyingType
- uid: System.Xaml.XamlType.ValueSerializer*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ValueSerializer
  nameWithType: XamlType.ValueSerializer
