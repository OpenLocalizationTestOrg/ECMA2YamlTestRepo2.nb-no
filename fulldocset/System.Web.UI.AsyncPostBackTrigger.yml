### YamlMime:ManagedReference
items:
- uid: System.Web.UI.AsyncPostBackTrigger
  id: AsyncPostBackTrigger
  children:
  - System.Web.UI.AsyncPostBackTrigger.#ctor
  - System.Web.UI.AsyncPostBackTrigger.ControlID
  - System.Web.UI.AsyncPostBackTrigger.EventName
  - System.Web.UI.AsyncPostBackTrigger.HasTriggered
  - System.Web.UI.AsyncPostBackTrigger.Initialize
  - System.Web.UI.AsyncPostBackTrigger.OnEvent(System.Object,System.EventArgs)
  - System.Web.UI.AsyncPostBackTrigger.ToString
  langs:
  - csharp
  name: AsyncPostBackTrigger
  nameWithType: AsyncPostBackTrigger
  fullName: System.Web.UI.AsyncPostBackTrigger
  type: Class
  summary: "Definerer en kontroll og valgfri hendelsen for kontrollen som en asynkron sende tilbake kontroll-utløser som fører til at en <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> kontrollen skal oppdateres."
  remarks: "Bruk AsyncPostBackTrigger-kontroll for å aktivere kontroller utløsere for en <xref:System.Web.UI.UpdatePanel>kontroll.</xref:System.Web.UI.UpdatePanel> Kontroller som er utløsere for en update-panelet føre til at for panelets innhold etter en asynkron tilbakesending. Definerer en asynkron utløser kontroll er nyttig i følgende situasjoner: – For kolonner som er utenfor en panelet.      -For kontroller som er i et panel når den <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>egenskapen `false`.</xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>      -For kolonner som er i en nestet paneler for å få en oppdatering av overordnet paneler.       Kontrollen som refererer til AsyncPostBackTrigger-kontrollen må være i samme naming beholderen som panelet oppdateringen som det er en utløser. Utløsere som er basert på kontroller i andre naming beholdere støttes ikke.       Legg til AsyncPostBackTrigger kontrollerer ved å bruke den **UpdatePanelTrigger samlingen redigeringsprogrammet** i designer eller ved å opprette en `Triggers` elementet deklarativt i den <xref:System.Web.UI.UpdatePanel>kontroll.</xref:System.Web.UI.UpdatePanel> Den <xref:System.Web.UI.AsyncPostBackTrigger.ControlID%2A>egenskapen er obligatorisk, men <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A>er valgfrie.</xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> </xref:System.Web.UI.AsyncPostBackTrigger.ControlID%2A> Hvis den <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A>egenskapen er ikke angitt, den <xref:System.ComponentModel.DefaultEventAttribute>attributtet for kontrollen brukes til å fastsette standardhendelsen.</xref:System.ComponentModel.DefaultEventAttribute> </xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> For eksempel standardhendelsen for opprydding av <xref:System.Web.UI.WebControls.Button>kontrollen er den <xref:System.Web.UI.WebControls.Button.Click>hendelsen.</xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button> Den <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A>egenskapen skiller ikke mellom.</xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A>       Du kan også referere til en beholder for navngivning som utløser. I dette tilfellet alle underordnede-kontroller i beholderen som forårsaker en tilbakesending regnes utløsere for den <xref:System.Web.UI.UpdatePanel>kontroll.</xref:System.Web.UI.UpdatePanel>       Legger til AsyncPostBackTrigger Kontroller programmatisk støttes ikke. Hvis du vil registrere en sende tilbake kontroll programmatisk, kan du bruke den <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>metoden for den <xref:System.Web.UI.ScriptManager>kontroll.</xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> Kaller den <xref:System.Web.UI.UpdatePanel.Update%2A>metoden for den <xref:System.Web.UI.UpdatePanel>kontrollerer når kontrollen legger tilbake.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel.Update%2A>       Hvis du definerer en kontroll med både <xref:System.Web.UI.PostBackTrigger>og AsyncPostBackTrigger, et unntak.</xref:System.Web.UI.PostBackTrigger>"
  example:
  - "The following example shows how to add an AsyncPostBackTrigger control declaratively. A <xref:System.Web.UI.WebControls.Button> control that is outside an <xref:System.Web.UI.UpdatePanel> control lets users enter a search term to find in the `Products` table of the Northwind database. A <xref:System.Web.UI.WebControls.GridView> control that is inside the <xref:System.Web.UI.UpdatePanel> control shows the results. The <xref:System.Web.UI.WebControls.Button> control is specified as an asynchronous trigger for the <xref:System.Web.UI.UpdatePanel> control.  \n  \n [!code-vb[System.Web.UI.AsyncPostBackTrigger#1](~/add/codesnippet/visualbasic/t-system.web.ui.asyncpos_1.aspx)]\n [!code-cs[System.Web.UI.AsyncPostBackTrigger#1](~/add/codesnippet/csharp/t-system.web.ui.asyncpos_1.aspx)]"
  syntax:
    content: 'public class AsyncPostBackTrigger : System.Web.UI.UpdatePanelControlTrigger'
  inheritance:
  - System.Object
  - System.Web.UI.UpdatePanelTrigger
  - System.Web.UI.UpdatePanelControlTrigger
  implements: []
  inheritedMembers:
  - System.Web.UI.UpdatePanelControlTrigger.FindTargetControl(System.Boolean)
  - System.Web.UI.UpdatePanelTrigger.Owner
  platform:
  - net462
- uid: System.Web.UI.AsyncPostBackTrigger.#ctor
  id: '#ctor'
  parent: System.Web.UI.AsyncPostBackTrigger
  langs:
  - csharp
  name: AsyncPostBackTrigger()
  nameWithType: AsyncPostBackTrigger.AsyncPostBackTrigger()
  fullName: System.Web.UI.AsyncPostBackTrigger.AsyncPostBackTrigger()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Initialiserer en ny forekomst av en <xref href=&quot;System.Web.UI.AsyncPostBackTrigger&quot;> </xref> klasse."
  remarks: "Legg til <xref:System.Web.UI.AsyncPostBackTrigger>kontrollerer ved å bruke den **UpdatePanelTrigger samlingen redigeringsprogrammet** i designer eller ved å opprette en `Triggers` elementet deklarativt i den <xref:System.Web.UI.UpdatePanel>kontroll.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.AsyncPostBackTrigger>       Legger til <xref:System.Web.UI.AsyncPostBackTrigger>Kontroller programmatisk støttes ikke.</xref:System.Web.UI.AsyncPostBackTrigger>"
  syntax:
    content: public AsyncPostBackTrigger ();
    parameters: []
  overload: System.Web.UI.AsyncPostBackTrigger.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AsyncPostBackTrigger.ControlID
  id: ControlID
  parent: System.Web.UI.AsyncPostBackTrigger
  langs:
  - csharp
  name: ControlID
  nameWithType: AsyncPostBackTrigger.ControlID
  fullName: System.Web.UI.AsyncPostBackTrigger.ControlID
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Henter eller angir navnet på en kontroll som utløser en asynkron tilbakesending for en <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> kontrollen."
  syntax:
    content: public string ControlID { get; set; }
    return:
      type: System.String
      description: "En server kontroll-ID."
  overload: System.Web.UI.AsyncPostBackTrigger.ControlID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AsyncPostBackTrigger.EventName
  id: EventName
  parent: System.Web.UI.AsyncPostBackTrigger
  langs:
  - csharp
  name: EventName
  nameWithType: AsyncPostBackTrigger.EventName
  fullName: System.Web.UI.AsyncPostBackTrigger.EventName
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Henter eller angir den sende tilbake kontrollhendelsen som utløser en <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> kontrollen som skal oppdateres."
  remarks: "Egenskapen hendelsesnavn er valgfrie. Hvis den ikke er angitt i <xref:System.ComponentModel.DefaultEventAttribute>attributtet for kontrollen brukes til å fastsette standardhendelsen.</xref:System.ComponentModel.DefaultEventAttribute> Tabellen nedenfor viser standardhendelser som for noen vanlige kontroller i ASP.NET 2.0.      | Kontrollen | Standard hendelse |   |-------------|-------------------|   | <xref:System.Web.UI.WebControls.Button>| <xref:System.Web.UI.WebControls.Button.Click>|   | <xref:System.Web.UI.WebControls.Calendar>| <xref:System.Web.UI.WebControls.Calendar.SelectionChanged>|   | <xref:System.Web.UI.WebControls.CheckBox>| <xref:System.Web.UI.WebControls.CheckBox.CheckedChanged>|   | <xref:System.Web.UI.WebControls.GridView>| <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|   | <xref:System.Web.UI.WebControls.TextBox>| <xref:System.Web.UI.WebControls.TextBox.TextChanged>|</xref:System.Web.UI.WebControls.TextBox.TextChanged></xref:System.Web.UI.WebControls.TextBox></xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged></xref:System.Web.UI.WebControls.GridView></xref:System.Web.UI.WebControls.CheckBox.CheckedChanged></xref:System.Web.UI.WebControls.CheckBox></xref:System.Web.UI.WebControls.Calendar.SelectionChanged></xref:System.Web.UI.WebControls.Calendar></xref:System.Web.UI.WebControls.Button.Click></xref:System.Web.UI.WebControls.Button>"
  syntax:
    content: public string EventName { get; set; }
    return:
      type: System.String
      description: "Hendelsesnavnet på. Standardverdien er <xref:System.String>.</xref:System.String>"
  overload: System.Web.UI.AsyncPostBackTrigger.EventName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AsyncPostBackTrigger.HasTriggered
  id: HasTriggered
  parent: System.Web.UI.AsyncPostBackTrigger
  langs:
  - csharp
  name: HasTriggered()
  nameWithType: AsyncPostBackTrigger.HasTriggered()
  fullName: System.Web.UI.AsyncPostBackTrigger.HasTriggered()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Returnerer en verdi som angir om utløseren ble startet."
  remarks: "Kontrollutviklere kan overstyre HasTriggered-metoden for å angi tilpassede logikken for å bestemme om utløseren ble startet. For å vise en egendefinert utløser i den `Triggers` element av den <xref:System.Web.UI.UpdatePanel>kontrollen, kan du legge til et direktiv til siden eller til elementet i Web.config-filen.</xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: protected override bool HasTriggered ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis utløseren ble startet; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.AsyncPostBackTrigger.HasTriggered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AsyncPostBackTrigger.Initialize
  id: Initialize
  parent: System.Web.UI.AsyncPostBackTrigger
  langs:
  - csharp
  name: Initialize()
  nameWithType: AsyncPostBackTrigger.Initialize()
  fullName: System.Web.UI.AsyncPostBackTrigger.Initialize()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Initialiserer den <xref href=&quot;System.Web.UI.AsyncPostBackTrigger&quot;> </xref> kontrollere og bestemmer om hendelsen som er nevnt i utløseren finnes og er ugyldig."
  syntax:
    content: protected override void Initialize ();
    parameters: []
  overload: System.Web.UI.AsyncPostBackTrigger.Initialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "No <xref href=\"System.Web.UI.ScriptManager\"></xref> control was found on the page.  \n  \n \\- or -  \n  \n The event that is named in the <xref:System.Web.UI.AsyncPostBackTrigger.EventName*> property is not found for the control that is named in the <xref:System.Web.UI.UpdatePanelControlTrigger.ControlID*> property.  \n  \n \\- or -  \n  \n The event that is named in the <xref:System.Web.UI.AsyncPostBackTrigger.EventName*> property for the control that is named in the <xref:System.Web.UI.UpdatePanelControlTrigger.ControlID*> property does not match a standard event handler signature."
  platform:
  - net462
- uid: System.Web.UI.AsyncPostBackTrigger.OnEvent(System.Object,System.EventArgs)
  id: OnEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.AsyncPostBackTrigger
  langs:
  - csharp
  name: OnEvent(Object,EventArgs)
  nameWithType: AsyncPostBackTrigger.OnEvent(Object,EventArgs)
  fullName: System.Web.UI.AsyncPostBackTrigger.OnEvent(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Opphøyer hendelsen som utløser en tilbakesending og oppdatering av en <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> kontrollen."
  syntax:
    content: public void OnEvent (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "Avsenderen hendelsen."
    - id: e
      type: System.EventArgs
      description: "Hendelsesdata."
  overload: System.Web.UI.AsyncPostBackTrigger.OnEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AsyncPostBackTrigger.ToString
  id: ToString
  parent: System.Web.UI.AsyncPostBackTrigger
  langs:
  - csharp
  name: ToString()
  nameWithType: AsyncPostBackTrigger.ToString()
  fullName: System.Web.UI.AsyncPostBackTrigger.ToString()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Returnerer en streng som representerer gjeldende <xref href=&quot;System.Web.UI.AsyncPostBackTrigger&quot;> </xref> kontrollen."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "En streng som representerer gjeldende <xref href=&quot;System.Web.UI.AsyncPostBackTrigger&quot;> </xref> kontrollen."
  overload: System.Web.UI.AsyncPostBackTrigger.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.UpdatePanelControlTrigger
  isExternal: false
  name: System.Web.UI.UpdatePanelControlTrigger
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.AsyncPostBackTrigger.#ctor
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: AsyncPostBackTrigger()
  nameWithType: AsyncPostBackTrigger.AsyncPostBackTrigger()
  fullName: System.Web.UI.AsyncPostBackTrigger.AsyncPostBackTrigger()
- uid: System.Web.UI.AsyncPostBackTrigger.ControlID
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: ControlID
  nameWithType: AsyncPostBackTrigger.ControlID
  fullName: System.Web.UI.AsyncPostBackTrigger.ControlID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.AsyncPostBackTrigger.EventName
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: EventName
  nameWithType: AsyncPostBackTrigger.EventName
  fullName: System.Web.UI.AsyncPostBackTrigger.EventName
- uid: System.Web.UI.AsyncPostBackTrigger.HasTriggered
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: HasTriggered()
  nameWithType: AsyncPostBackTrigger.HasTriggered()
  fullName: System.Web.UI.AsyncPostBackTrigger.HasTriggered()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.AsyncPostBackTrigger.Initialize
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: Initialize()
  nameWithType: AsyncPostBackTrigger.Initialize()
  fullName: System.Web.UI.AsyncPostBackTrigger.Initialize()
- uid: System.Web.UI.AsyncPostBackTrigger.OnEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: OnEvent(Object,EventArgs)
  nameWithType: AsyncPostBackTrigger.OnEvent(Object,EventArgs)
  fullName: System.Web.UI.AsyncPostBackTrigger.OnEvent(Object,EventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.AsyncPostBackTrigger.ToString
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: ToString()
  nameWithType: AsyncPostBackTrigger.ToString()
  fullName: System.Web.UI.AsyncPostBackTrigger.ToString()
- uid: System.Web.UI.AsyncPostBackTrigger.#ctor*
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: AsyncPostBackTrigger
  nameWithType: AsyncPostBackTrigger.AsyncPostBackTrigger
- uid: System.Web.UI.AsyncPostBackTrigger.ControlID*
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: ControlID
  nameWithType: AsyncPostBackTrigger.ControlID
- uid: System.Web.UI.AsyncPostBackTrigger.EventName*
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: EventName
  nameWithType: AsyncPostBackTrigger.EventName
- uid: System.Web.UI.AsyncPostBackTrigger.HasTriggered*
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: HasTriggered
  nameWithType: AsyncPostBackTrigger.HasTriggered
- uid: System.Web.UI.AsyncPostBackTrigger.Initialize*
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: Initialize
  nameWithType: AsyncPostBackTrigger.Initialize
- uid: System.Web.UI.AsyncPostBackTrigger.OnEvent*
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: OnEvent
  nameWithType: AsyncPostBackTrigger.OnEvent
- uid: System.Web.UI.AsyncPostBackTrigger.ToString*
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: ToString
  nameWithType: AsyncPostBackTrigger.ToString
