### YamlMime:ManagedReference
items:
- uid: System.Security.SecurityContext
  id: SecurityContext
  children:
  - System.Security.SecurityContext.Capture
  - System.Security.SecurityContext.CreateCopy
  - System.Security.SecurityContext.Dispose
  - System.Security.SecurityContext.IsFlowSuppressed
  - System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed
  - System.Security.SecurityContext.RestoreFlow
  - System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)
  - System.Security.SecurityContext.SuppressFlow
  - System.Security.SecurityContext.SuppressFlowWindowsIdentity
  langs:
  - csharp
  name: SecurityContext
  nameWithType: SecurityContext
  fullName: System.Security.SecurityContext
  type: Class
  summary: "Innkapsler og overfører alle sikkerhetsrelaterte data for kjøring av kontekster overføres på tvers av tråder. Denne klassen kan ikke arves."
  remarks: "A SecurityContext object captures all security-related information for a logical thread, including the information contained in the <xref:System.Security.Principal.WindowsIdentity> and <xref:System.Threading.CompressedStack> objects.  This configuration allows the Windows identity and the security elements on the stack to be propagated automatically when the SecurityContext is copied and transferred across asynchronous threads.  \n  \n> [!NOTE]\n>  The common language runtime (CLR) is aware of impersonation operations performed using only managed code, not of impersonation performed outside of managed code, such as through platform invoke to unmanaged code or through direct calls to Win32 functions. Only managed <xref:System.Security.Principal.WindowsIdentity> objects can flow across asynchronous points, unless the `alwaysFlowImpersonationPolicy` element has been set to `true` (`<alwaysFlowImpersonationPolicy enabled=\"true\"/>`). Setting the `alwaysFlowImpersonationPolicy` element to `true` specifies that the Windows identity always flows across asynchronous points, regardless of how impersonation was performed. For more information about flowing unmanaged impersonation across asynchronous points, see [\\&lt;alwaysFlowImpersonationPolicy\\&gt; Element](../Topic/%3CalwaysFlowImpersonationPolicy%3E%20Element.md).  \n  \n The SecurityContext is part of the larger <xref:System.Threading.ExecutionContext> and flows or migrates when the <xref:System.Threading.ExecutionContext> flows or migrates.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic."
  syntax:
    content: 'public sealed class SecurityContext : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.SecurityContext.Capture
  id: Capture
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: Capture()
  nameWithType: SecurityContext.Capture()
  fullName: System.Security.SecurityContext.Capture()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Registrerer sikkerhetskonteksten for gjeldende tråd."
  remarks: "Opphentede sikkerhetskonteksten kan brukes på en annen tråd. Den <xref:System.Security.SecurityContext>består av det <xref:System.Threading.CompressedStack>og <xref:System.Security.Principal.WindowsIdentity>for kjøres tråden.</xref:System.Security.Principal.WindowsIdentity> </xref:System.Threading.CompressedStack> </xref:System.Security.SecurityContext>"
  syntax:
    content: public static System.Security.SecurityContext Capture ();
    parameters: []
    return:
      type: System.Security.SecurityContext
      description: "Sikkerhetskonteksten for gjeldende tråd."
  overload: System.Security.SecurityContext.Capture*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityContext.CreateCopy
  id: CreateCopy
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: CreateCopy()
  nameWithType: SecurityContext.CreateCopy()
  fullName: System.Security.SecurityContext.CreateCopy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Oppretter en kopi av den gjeldende sikkerhetskonteksten."
  remarks: "Gjeldende kontekst må er anskaffet via en capture eller en kopieringen. Denne metoden er nyttig for å bruke en opphentede <xref:System.Security.SecurityContext>til flere tråder.</xref:System.Security.SecurityContext>"
  syntax:
    content: public System.Security.SecurityContext CreateCopy ();
    parameters: []
    return:
      type: System.Security.SecurityContext
      description: "Sikkerhetskonteksten for gjeldende tråd."
  overload: System.Security.SecurityContext.CreateCopy*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den gjeldende sikkerhetskonteksten er brukt tidligere ble formidlet på tvers av programdomener eller ikke ble kjøpt via den <xref:System.Security.SecurityContext.Capture*>metoden.</xref:System.Security.SecurityContext.Capture*>"
  platform:
  - net462
- uid: System.Security.SecurityContext.Dispose
  id: Dispose
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: Dispose()
  nameWithType: SecurityContext.Dispose()
  fullName: System.Security.SecurityContext.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Frigir alle ressursene som brukes av den gjeldende forekomsten av den <xref href=&quot;System.Security.SecurityContext&quot;> </xref> klasse."
  remarks: "Kall `Dispose` når du er ferdig med <xref:System.Security.SecurityContext>.</xref:System.Security.SecurityContext> Den `Dispose` metoden forlater den <xref:System.Security.SecurityContext>i en ubrukelig tilstand.</xref:System.Security.SecurityContext> Etter kall `Dispose`, må du frigi alle referanser til den <xref:System.Security.SecurityContext>Slik saneringsoppsamlingen kan gjenvinne minnet som den <xref:System.Security.SecurityContext>ble bruker.</xref:System.Security.SecurityContext> </xref:System.Security.SecurityContext>       Hvis du vil ha mer informasjon, se [Rydder opp uforvaltede ressurser](~/add/includes/ajax-current-ext-md.md) og [implementere metoden fjerne](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Alltid kall `Dispose` før du slipper siste referanse til <xref:System.Security.SecurityContext>.</xref:System.Security.SecurityContext> Ellers ressurser den bruker vil ikke bli frigjort før saneringsoppsamling kall av <xref:System.Security.SecurityContext>objektets `Finalize` metode.</xref:System.Security.SecurityContext>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.SecurityContext.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityContext.IsFlowSuppressed
  id: IsFlowSuppressed
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: IsFlowSuppressed()
  nameWithType: SecurityContext.IsFlowSuppressed()
  fullName: System.Security.SecurityContext.IsFlowSuppressed()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Bestemmer om flyten av sikkerhetskonteksten er deaktivert."
  remarks: "Metoden IsFlowSuppressed brukes av infrastruktur komponentene til å overføre bestemme om den <xref:System.Security.SecurityContext>informasjon under asynkrone operasjoner.</xref:System.Security.SecurityContext>"
  syntax:
    content: public static bool IsFlowSuppressed ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis flyten er undertrykt; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.SecurityContext.IsFlowSuppressed*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed
  id: IsWindowsIdentityFlowSuppressed
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: IsWindowsIdentityFlowSuppressed()
  nameWithType: SecurityContext.IsWindowsIdentityFlowSuppressed()
  fullName: System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Bestemmer om flyten av Windows identiteten den gjeldende sikkerhetskonteksten er deaktivert."
  remarks: "Metoden IsWindowsIdentityFlowSuppressed brukes av infrastrukturkomponenter å finne ut om du vil overføre informasjon om Windows-ID når den <xref:System.Security.SecurityContext>overfører under asynkrone operasjoner.</xref:System.Security.SecurityContext>"
  syntax:
    content: public static bool IsWindowsIdentityFlowSuppressed ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis flyten er undertrykt; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityContext.RestoreFlow
  id: RestoreFlow
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: RestoreFlow()
  nameWithType: SecurityContext.RestoreFlow()
  fullName: System.Security.SecurityContext.RestoreFlow()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Gjenoppretter flyten av sikkerhetskontekst på tvers av asynkron tråder."
  remarks: "Metoden RestoreFlow kalles av den <xref:System.Threading.AsyncFlowControl.Undo%2A?displayProperty=fullName>metode for å reversere effekten av en tidligere <xref:System.Security.SecurityContext.SuppressFlow%2A>metodekallet.</xref:System.Security.SecurityContext.SuppressFlow%2A> </xref:System.Threading.AsyncFlowControl.Undo%2A?displayProperty=fullName>"
  syntax:
    content: public static void RestoreFlow ();
    parameters: []
  overload: System.Security.SecurityContext.RestoreFlow*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Sikkerhetskonteksten er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en tom streng."
  platform:
  - net462
- uid: System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)
  id: Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: Run(SecurityContext,ContextCallback,Object)
  nameWithType: SecurityContext.Run(SecurityContext,ContextCallback,Object)
  fullName: System.Security.SecurityContext.Run(SecurityContext,ContextCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Kjører den angitte metoden i den angitte sikkerhetskonteksten på gjeldende tråd."
  remarks: "Sikkerhetskonteksten for gjeldende tråd returneres til sin opprinnelige tilstand når metodekallet er fullført."
  example:
  - "The following code example shows how to use the Run method to execute a method in a specified security context.  \n  \n [!code-cs[System.Security.SecurityContext.Run#1](~/add/codesnippet/csharp/f32751be-87d3-46b4-a1da-_1.cs)]\n [!code-vb[System.Security.SecurityContext.Run#1](~/add/codesnippet/visualbasic/f32751be-87d3-46b4-a1da-_1.vb)]"
  syntax:
    content: public static void Run (System.Security.SecurityContext securityContext, System.Threading.ContextCallback callback, object state);
    parameters:
    - id: securityContext
      type: System.Security.SecurityContext
      description: "Sikkerhetskonteksten angitt."
    - id: callback
      type: System.Threading.ContextCallback
      description: "Representanten som representerer metoden til å kjøre i den angitte sikkerhetskonteksten."
    - id: state
      type: System.Object
      description: "Objektet som skal sendes til metoden tilbakeringing."
  overload: System.Security.SecurityContext.Run*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>securityContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - <code>securityContext</code> ikke ble kjøpt via en capture-operasjon.       - eller - <code>securityContext</code> er allerede brukt som argument til et metodekall for å bli kjørt."
  platform:
  - net462
- uid: System.Security.SecurityContext.SuppressFlow
  id: SuppressFlow
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: SuppressFlow()
  nameWithType: SecurityContext.SuppressFlow()
  fullName: System.Security.SecurityContext.SuppressFlow()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Ignorerer flyten av sikkerhetskontekst på tvers av asynkron tråder."
  remarks: "Bruk denne metoden skal skjules flyten av <xref:System.Security.SecurityContext>informasjon om gjeldende tråd for asynkrone operasjoner.</xref:System.Security.SecurityContext>       Common language runtime (CLR) kjenner bare representasjon operasjon som utføres ved hjelp av behandlet kode. CLR har ingen kunnskap om representasjon utføres utenfor forvaltet kode, for eksempel plattformen aktiverer til ubehandlet kode som tillater representasjonen eller via kall til Win32-funksjoner. Til flyten ID på tvers av asynkron punkt må du bruke den forvaltede <xref:System.Security.Principal.WindowsIdentity>og <xref:System.Security.Principal.WindowsImpersonationContext>metoder.</xref:System.Security.Principal.WindowsImpersonationContext> </xref:System.Security.Principal.WindowsIdentity>       Bruk av <xref:System.Threading.AsyncFlowControl.Undo%2A>-metoden på den returnerte <xref:System.Threading.AsyncFlowControl>strukturen til å returnere den <xref:System.Security.SecurityContext>objektet til sin opprinnelige tilstand.</xref:System.Security.SecurityContext> </xref:System.Threading.AsyncFlowControl> </xref:System.Threading.AsyncFlowControl.Undo%2A>       Denne metoden er beskyttet med en <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName>for <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>tillatelse.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> En fullstendig klarerte komponent kan kalle denne metoden hvis du vil skjule flyten av den <xref:System.Security.SecurityContext>informasjon under asynkrone kall.</xref:System.Security.SecurityContext> Når flyten utelatt, den <xref:System.Security.SecurityContext.Capture%2A>metoden returnerer `null`.</xref:System.Security.SecurityContext.Capture%2A>"
  syntax:
    content: public static System.Threading.AsyncFlowControl SuppressFlow ();
    parameters: []
    return:
      type: System.Threading.AsyncFlowControl
      description: "En <xref href=&quot;System.Threading.AsyncFlowControl&quot;> </xref> strukturen for gjenoppretting dataflyten."
  overload: System.Security.SecurityContext.SuppressFlow*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityContext.SuppressFlowWindowsIdentity
  id: SuppressFlowWindowsIdentity
  parent: System.Security.SecurityContext
  langs:
  - csharp
  name: SuppressFlowWindowsIdentity()
  nameWithType: SecurityContext.SuppressFlowWindowsIdentity()
  fullName: System.Security.SecurityContext.SuppressFlowWindowsIdentity()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Ignorerer flyten av Windows identiteten gjeldende sikkerhetskontekst på tvers av asynkron tråder."
  remarks: "Use this method to suppress the flow of the Windows identity when the <xref:System.Security.SecurityContext> migrates across asynchronous threads.  \n  \n Use the <xref:System.Threading.AsyncFlowControl.Undo%2A> method on the returned <xref:System.Threading.AsyncFlowControl> structure to return the <xref:System.Security.SecurityContext> object to its previous state.  \n  \n> [!NOTE]\n>  The common language runtime (CLR) is aware of impersonation operations performed using only managed code, not of impersonation performed outside of managed code, such as through platform invoke to unmanaged code or through direct calls to Win32 functions. Only managed <xref:System.Security.Principal.WindowsIdentity> objects can flow across asynchronous points, unless the `alwaysFlowImpersonationPolicy` element has been set to `true` (`<alwaysFlowImpersonationPolicy enabled=\"true\"/>`). Setting the `alwaysFlowImpersonationPolicy` element to `true` specifies that the Windows identity always flows across asynchronous points, regardless of how impersonation was performed. For more information about flowing unmanaged impersonation across asynchronous points, see [\\<alwaysFlowImpersonationPolicy> Element](../Topic/%3CalwaysFlowImpersonationPolicy%3E%20Element.md)."
  syntax:
    content: public static System.Threading.AsyncFlowControl SuppressFlowWindowsIdentity ();
    parameters: []
    return:
      type: System.Threading.AsyncFlowControl
      description: "En struktur for gjenoppretting dataflyten."
  overload: System.Security.SecurityContext.SuppressFlowWindowsIdentity*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.SecurityContext.Capture
  parent: System.Security.SecurityContext
  isExternal: false
  name: Capture()
  nameWithType: SecurityContext.Capture()
  fullName: System.Security.SecurityContext.Capture()
- uid: System.Security.SecurityContext
  parent: System.Security
  isExternal: false
  name: SecurityContext
  nameWithType: SecurityContext
  fullName: System.Security.SecurityContext
- uid: System.Security.SecurityContext.CreateCopy
  parent: System.Security.SecurityContext
  isExternal: false
  name: CreateCopy()
  nameWithType: SecurityContext.CreateCopy()
  fullName: System.Security.SecurityContext.CreateCopy()
- uid: System.Security.SecurityContext.Dispose
  parent: System.Security.SecurityContext
  isExternal: false
  name: Dispose()
  nameWithType: SecurityContext.Dispose()
  fullName: System.Security.SecurityContext.Dispose()
- uid: System.Security.SecurityContext.IsFlowSuppressed
  parent: System.Security.SecurityContext
  isExternal: false
  name: IsFlowSuppressed()
  nameWithType: SecurityContext.IsFlowSuppressed()
  fullName: System.Security.SecurityContext.IsFlowSuppressed()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed
  parent: System.Security.SecurityContext
  isExternal: false
  name: IsWindowsIdentityFlowSuppressed()
  nameWithType: SecurityContext.IsWindowsIdentityFlowSuppressed()
  fullName: System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed()
- uid: System.Security.SecurityContext.RestoreFlow
  parent: System.Security.SecurityContext
  isExternal: false
  name: RestoreFlow()
  nameWithType: SecurityContext.RestoreFlow()
  fullName: System.Security.SecurityContext.RestoreFlow()
- uid: System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)
  parent: System.Security.SecurityContext
  isExternal: false
  name: Run(SecurityContext,ContextCallback,Object)
  nameWithType: SecurityContext.Run(SecurityContext,ContextCallback,Object)
  fullName: System.Security.SecurityContext.Run(SecurityContext,ContextCallback,Object)
- uid: System.Threading.ContextCallback
  parent: System.Threading
  isExternal: true
  name: ContextCallback
  nameWithType: ContextCallback
  fullName: System.Threading.ContextCallback
- uid: System.Security.SecurityContext.SuppressFlow
  parent: System.Security.SecurityContext
  isExternal: false
  name: SuppressFlow()
  nameWithType: SecurityContext.SuppressFlow()
  fullName: System.Security.SecurityContext.SuppressFlow()
- uid: System.Threading.AsyncFlowControl
  parent: System.Threading
  isExternal: false
  name: AsyncFlowControl
  nameWithType: AsyncFlowControl
  fullName: System.Threading.AsyncFlowControl
- uid: System.Security.SecurityContext.SuppressFlowWindowsIdentity
  parent: System.Security.SecurityContext
  isExternal: false
  name: SuppressFlowWindowsIdentity()
  nameWithType: SecurityContext.SuppressFlowWindowsIdentity()
  fullName: System.Security.SecurityContext.SuppressFlowWindowsIdentity()
- uid: System.Security.SecurityContext.Capture*
  parent: System.Security.SecurityContext
  isExternal: false
  name: Capture
  nameWithType: SecurityContext.Capture
- uid: System.Security.SecurityContext.CreateCopy*
  parent: System.Security.SecurityContext
  isExternal: false
  name: CreateCopy
  nameWithType: SecurityContext.CreateCopy
- uid: System.Security.SecurityContext.Dispose*
  parent: System.Security.SecurityContext
  isExternal: false
  name: Dispose
  nameWithType: SecurityContext.Dispose
- uid: System.Security.SecurityContext.IsFlowSuppressed*
  parent: System.Security.SecurityContext
  isExternal: false
  name: IsFlowSuppressed
  nameWithType: SecurityContext.IsFlowSuppressed
- uid: System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed*
  parent: System.Security.SecurityContext
  isExternal: false
  name: IsWindowsIdentityFlowSuppressed
  nameWithType: SecurityContext.IsWindowsIdentityFlowSuppressed
- uid: System.Security.SecurityContext.RestoreFlow*
  parent: System.Security.SecurityContext
  isExternal: false
  name: RestoreFlow
  nameWithType: SecurityContext.RestoreFlow
- uid: System.Security.SecurityContext.Run*
  parent: System.Security.SecurityContext
  isExternal: false
  name: Run
  nameWithType: SecurityContext.Run
- uid: System.Security.SecurityContext.SuppressFlow*
  parent: System.Security.SecurityContext
  isExternal: false
  name: SuppressFlow
  nameWithType: SecurityContext.SuppressFlow
- uid: System.Security.SecurityContext.SuppressFlowWindowsIdentity*
  parent: System.Security.SecurityContext
  isExternal: false
  name: SuppressFlowWindowsIdentity
  nameWithType: SecurityContext.SuppressFlowWindowsIdentity
