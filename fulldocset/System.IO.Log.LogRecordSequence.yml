### YamlMime:ManagedReference
items:
- uid: System.IO.Log.LogRecordSequence
  id: LogRecordSequence
  children:
  - System.IO.Log.LogRecordSequence.#ctor(System.IO.Log.LogStore)
  - System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode)
  - System.IO.Log.LogRecordSequence.#ctor(System.IO.Log.LogStore,System.Int32,System.Int32)
  - System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  - System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Int32)
  - System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Int32,System.Security.AccessControl.FileSecurity)
  - System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)
  - System.IO.Log.LogRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)
  - System.IO.Log.LogRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)
  - System.IO.Log.LogRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)
  - System.IO.Log.LogRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)
  - System.IO.Log.LogRecordSequence.BaseSequenceNumber
  - System.IO.Log.LogRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)
  - System.IO.Log.LogRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)
  - System.IO.Log.LogRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  - System.IO.Log.LogRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  - System.IO.Log.LogRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)
  - System.IO.Log.LogRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)
  - System.IO.Log.LogRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)
  - System.IO.Log.LogRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  - System.IO.Log.LogRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  - System.IO.Log.LogRecordSequence.CreateReservationCollection
  - System.IO.Log.LogRecordSequence.Dispose
  - System.IO.Log.LogRecordSequence.EndAppend(System.IAsyncResult)
  - System.IO.Log.LogRecordSequence.EndFlush(System.IAsyncResult)
  - System.IO.Log.LogRecordSequence.EndReserveAndAppend(System.IAsyncResult)
  - System.IO.Log.LogRecordSequence.EndWriteRestartArea(System.IAsyncResult)
  - System.IO.Log.LogRecordSequence.Flush
  - System.IO.Log.LogRecordSequence.Flush(System.IO.Log.SequenceNumber)
  - System.IO.Log.LogRecordSequence.LastSequenceNumber
  - System.IO.Log.LogRecordSequence.LogStore
  - System.IO.Log.LogRecordSequence.MaximumRecordLength
  - System.IO.Log.LogRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)
  - System.IO.Log.LogRecordSequence.ReadRestartAreas
  - System.IO.Log.LogRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])
  - System.IO.Log.LogRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])
  - System.IO.Log.LogRecordSequence.ReservedBytes
  - System.IO.Log.LogRecordSequence.RestartSequenceNumber
  - System.IO.Log.LogRecordSequence.RetryAppend
  - System.IO.Log.LogRecordSequence.SetLastRecord(System.IO.Log.SequenceNumber)
  - System.IO.Log.LogRecordSequence.TailPinned
  - System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})
  - System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})
  - System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)
  - System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)
  - System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)
  - System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)
  langs:
  - csharp
  name: LogRecordSequence
  nameWithType: LogRecordSequence
  fullName: System.IO.Log.LogRecordSequence
  type: Class
  summary: "Representerer en sekvensnummeret lagret i en <xref href=&quot;System.IO.Log.LogStore&quot;> </xref>."
  remarks: "Klassen LogRecordSequence gir en implementering av grensesnittet sekvensnummeret på en vanlig Log File System (CLFS) logg. I tillegg til standard post orientert funksjonene gir det en policy-modell for unngå loggen full betingelser og multipleksing klienter på den samme fysiske filen. Prosessen fungerer med den <xref:System.IO.Log.LogStore>klassen som gir et grensesnitt for direkte redigering og administrasjon av en CLFS loggfil.</xref:System.IO.Log.LogStore> Relasjonen mellom de <xref:System.IO.Log.LogStore>klassen og klassen LogRecordSequence ligner relasjonen mellom en diskfil, og en <xref:System.IO.FileStream>objektet.</xref:System.IO.FileStream> </xref:System.IO.Log.LogStore> Den eksisterende filen omfatter konkrete lagring, og har attributter som lengde og tidspunkt for siste tilgang; under <xref:System.IO.FileStream>objektet gir en visning for filen som kan brukes til å lese fra den og skrive til det.</xref:System.IO.FileStream> På samme måte i <xref:System.IO.Log.LogStore>klassen har attributter som en policy og en samling av disk-omfang; og klassen LogRecordSequence inneholder en post-orientert mekanisme for lesing og skriving av data.</xref:System.IO.Log.LogStore>"
  example:
  - "This example shows how to use the LogRecordSequence class:  \n  \n [!code-cs[S_UELogRecordSequence#0](~/add/codesnippet/csharp/t-system.io.log.logrecor_1.cs)]\n [!code-vb[S_UELogRecordSequence#0](~/add/codesnippet/visualbasic/t-system.io.log.logrecor_1.vb)]"
  syntax:
    content: 'public sealed class LogRecordSequence : IDisposable, System.IO.Log.IRecordSequence'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.IO.Log.IRecordSequence
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.#ctor(System.IO.Log.LogStore)
  id: '#ctor(System.IO.Log.LogStore)'
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: LogRecordSequence(LogStore)
  nameWithType: LogRecordSequence.LogRecordSequence(LogStore)
  fullName: System.IO.Log.LogRecordSequence.LogRecordSequence(LogStore)
  type: Constructor
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.IO.Log.LogRecordSequence&quot;> </xref> klasse angitte loggen-butikken."
  remarks: "Bufferstørrelsen bestemmer den maksimale størrelsen på posten som kan legges til eller lese. Standardverdien 64 er angitt i denne konstruktøren. Ønsket antall bufferne er satt til 10."
  syntax:
    content: public LogRecordSequence (System.IO.Log.LogStore logStore);
    parameters:
    - id: logStore
      type: System.IO.Log.LogStore
      description: "Den <xref href=&quot;System.IO.Log.LogStore&quot;> </xref> som skal bruke denne sekvensnummeret."
  overload: System.IO.Log.LogRecordSequence.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>logStore</code>er ugyldig."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode)
  id: '#ctor(System.String,System.IO.FileMode)'
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: LogRecordSequence(String,FileMode)
  nameWithType: LogRecordSequence.LogRecordSequence(String,FileMode)
  fullName: System.IO.Log.LogRecordSequence.LogRecordSequence(String,FileMode)
  type: Constructor
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.IO.Log.LogRecordSequence&quot;> </xref> klassen med en angitt bane til butikken loggen og tilgangsmodus."
  remarks: "Denne konstruktøren initialiserer en ny <xref:System.IO.Log.LogRecordSequence>i en ny <xref:System.IO.Log.LogStore>objektet som åpnes det med den angitte banen og modus.</xref:System.IO.Log.LogStore> </xref:System.IO.Log.LogRecordSequence> Det er angitt lese-/ skrivetilgang til butikken, og lageret åpnes deling lesetilgang."
  syntax:
    content: public LogRecordSequence (string path, System.IO.FileMode mode);
    parameters:
    - id: path
      type: System.String
      description: "En relativ eller absolutt bane for filen base av loggen store til å åpne."
    - id: mode
      type: System.IO.FileMode
      description: "Én av de <xref href=&quot;System.IO.FileMode&quot;> </xref> verdiene som avgjør hvordan å åpne eller opprette lageret."
  overload: System.IO.Log.LogRecordSequence.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>en tom streng (&quot;&quot;).       - eller - <code>path</code> inneholder bare mellomrom.       - eller - <code>path</code> inneholder én eller flere ugyldige tegn."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>inneholder en ugyldig verdi."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Finner ikke filen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstår en i/u-feil under åpning Logglageret."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Denne operasjonen støttes ikke."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref href=&quot;System.IO.Log.LogRecordSequence&quot;></xref>kan ikke brukes fordi den nødvendige vanlige Log File System (CLFS)-komponenten ikke er installert. Installer CLFS-komponenten hvis den er tilgjengelig for plattformen, eller bruk av <xref href=&quot;System.IO.Log.FileRecordSequence&quot;> </xref> klasse."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.#ctor(System.IO.Log.LogStore,System.Int32,System.Int32)
  id: '#ctor(System.IO.Log.LogStore,System.Int32,System.Int32)'
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: LogRecordSequence(LogStore,Int32,Int32)
  nameWithType: LogRecordSequence.LogRecordSequence(LogStore,Int32,Int32)
  fullName: System.IO.Log.LogRecordSequence.LogRecordSequence(LogStore,Int32,Int32)
  type: Constructor
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.IO.Log.LogRecordSequence&quot;> </xref> klasse med det angitte Logglageret, bufferstørrelse for hver oppføring, og buffer tall."
  remarks: "Bruk denne konstruktøren Hvis du vil angi verdier for `bufferSize` og `bufferCount` og ikke vil bruke standardverdien for 64 for `bufferSize` og 10 for `bufferCount`."
  syntax:
    content: public LogRecordSequence (System.IO.Log.LogStore logStore, int bufferSize, int bufferCount);
    parameters:
    - id: logStore
      type: System.IO.Log.LogStore
      description: "Den <xref href=&quot;System.IO.Log.LogStore&quot;> </xref> som skal bruke denne sekvensnummeret."
    - id: bufferSize
      type: System.Int32
      description: "Den ønskede bufferstørrelsen i byte. Bufferstørrelsen bestemmer den maksimale størrelsen på posten som kan legges til eller lese."
    - id: bufferCount
      type: System.Int32
      description: "Ønsket antall buffere."
  overload: System.IO.Log.LogRecordSequence.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>logStore</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>bufferSize </code>er negativ eller null.       - eller - <code>bufferCount</code> er negativ eller null."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)
  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)'
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: LogRecordSequence(String,FileMode,FileAccess)
  nameWithType: LogRecordSequence.LogRecordSequence(String,FileMode,FileAccess)
  fullName: System.IO.Log.LogRecordSequence.LogRecordSequence(String,FileMode,FileAccess)
  type: Constructor
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.IO.Log.LogRecordSequence&quot;> </xref> klassen med en angitt bane til butikken loggen og Tilgangsmodi og delte modi."
  remarks: "Denne konstruktøren initialiserer en ny <xref:System.IO.Log.LogRecordSequence>i en ny <xref:System.IO.Log.LogStore>objektet som åpnes det med den angitte banen modus og tilgang.</xref:System.IO.Log.LogStore> </xref:System.IO.Log.LogRecordSequence> Lageret åpnes deling lesetilgang."
  syntax:
    content: public LogRecordSequence (string path, System.IO.FileMode mode, System.IO.FileAccess access);
    parameters:
    - id: path
      type: System.String
      description: "En relativ eller absolutt bane for filen base av loggen store til å åpne."
    - id: mode
      type: System.IO.FileMode
      description: "Én av de <xref href=&quot;System.IO.FileMode&quot;> </xref> verdiene som avgjør hvordan å åpne eller opprette lageret."
    - id: access
      type: System.IO.FileAccess
      description: "Én av de <xref href=&quot;System.IO.FileAccess&quot;> </xref> verdier som bestemmer hvordan filen kan få tilgang til den <xref href=&quot;System.IO.Log.LogStore&quot;> </xref>."
  overload: System.IO.Log.LogRecordSequence.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>en tom streng (&quot;&quot;).       - eller - <code>path</code> inneholder bare mellomrom.       - eller - <code>path</code> inneholder én eller flere ugyldige tegn."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>inneholder en ugyldig verdi."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Finner ikke filen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstår en i/u-feil under åpning Logglageret."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Denne operasjonen støttes ikke."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref href=&quot;System.IO.Log.LogRecordSequence&quot;></xref>kan ikke brukes fordi den nødvendige vanlige Log File System (CLFS)-komponenten ikke er installert. Installer CLFS-komponenten hvis den er tilgjengelig for plattformen, eller bruk av <xref href=&quot;System.IO.Log.FileRecordSequence&quot;> </xref> klasse."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)'
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: LogRecordSequence(String,FileMode,FileAccess,FileShare)
  nameWithType: LogRecordSequence.LogRecordSequence(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.Log.LogRecordSequence.LogRecordSequence(String,FileMode,FileAccess,FileShare)
  type: Constructor
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.IO.Log.LogRecordSequence&quot;> </xref> klassen med en angitt bane til butikken loggen og tilgangsmodus."
  remarks: "Denne konstruktøren initialiserer en ny <xref:System.IO.Log.LogRecordSequence>i en ny <xref:System.IO.Log.LogStore>objektet som åpnes det med den angitte banen modus og tilgang.</xref:System.IO.Log.LogStore> </xref:System.IO.Log.LogRecordSequence> Lageret åpnes deling av den angitte tilgangen."
  example:
  - "This example shows how to use this <xref:System.IO.Log.LogRecordSequence> constructor:  \n  \n [!code-cs[S_UELogRecordSequence#1](~/add/codesnippet/csharp/5a33f64b-b9a0-4b07-9df4-_1.cs)]\n [!code-vb[S_UELogRecordSequence#1](~/add/codesnippet/visualbasic/5a33f64b-b9a0-4b07-9df4-_1.vb)]"
  syntax:
    content: public LogRecordSequence (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);
    parameters:
    - id: path
      type: System.String
      description: "En relativ eller absolutt bane for filen base av loggen store til å åpne."
    - id: mode
      type: System.IO.FileMode
      description: "Én av de <xref href=&quot;System.IO.FileMode&quot;> </xref> verdiene som avgjør hvordan å åpne eller opprette lageret."
    - id: access
      type: System.IO.FileAccess
      description: "Én av de <xref href=&quot;System.IO.FileAccess&quot;> </xref> verdier som bestemmer hvordan filen kan få tilgang til den <xref href=&quot;System.IO.Log.LogStore&quot;> </xref>."
    - id: share
      type: System.IO.FileShare
      description: "Én av de <xref href=&quot;System.IO.FileShare&quot;> </xref> verdiene som avgjør hvordan log-butikken deler prosesser."
  overload: System.IO.Log.LogRecordSequence.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>en tom streng (&quot;&quot;).       - eller - <code>path</code> inneholder bare mellomrom.       - eller - <code>path</code> inneholder én eller flere ugyldige tegn."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>inneholder en ugyldig verdi."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Finner ikke filen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstår en i/u-feil under åpning Logglageret."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Denne operasjonen støttes ikke."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref href=&quot;System.IO.Log.LogRecordSequence&quot;></xref>kan ikke brukes fordi den nødvendige vanlige Log File System (CLFS)-komponenten ikke er installert. Installer CLFS-komponenten hvis den er tilgjengelig for plattformen, eller bruk av <xref href=&quot;System.IO.Log.FileRecordSequence&quot;> </xref> klasse."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Int32)
  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Int32)'
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: LogRecordSequence(String,FileMode,FileAccess,FileShare,Int32,Int32)
  nameWithType: LogRecordSequence.LogRecordSequence(String,FileMode,FileAccess,FileShare,Int32,Int32)
  fullName: System.IO.Log.LogRecordSequence.LogRecordSequence(String,FileMode,FileAccess,FileShare,Int32,Int32)
  type: Constructor
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.IO.Log.LogRecordSequence&quot;> </xref> klassen med en angitt bane til butikken loggen, fil-tillatelse, Tilgangsmodi og delte modi og bufferstørrelsen og antall arkivet."
  remarks: "Denne konstruktøren initialiserer en ny <xref:System.IO.Log.LogRecordSequence>i en ny <xref:System.IO.Log.LogStore>objektet som åpnes det med den angitte banen modus og tilgang.</xref:System.IO.Log.LogStore> </xref:System.IO.Log.LogRecordSequence> Lageret åpnes deling av den angitte tilgangen."
  syntax:
    content: public LogRecordSequence (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, int bufferSize, int bufferCount);
    parameters:
    - id: path
      type: System.String
      description: "En relativ eller absolutt bane for filen base av loggen store til å åpne."
    - id: mode
      type: System.IO.FileMode
      description: "Én av de <xref href=&quot;System.IO.FileMode&quot;> </xref> verdiene som avgjør hvordan å åpne eller opprette lageret."
    - id: access
      type: System.IO.FileAccess
      description: "Én av de <xref href=&quot;System.IO.FileAccess&quot;> </xref> verdier som bestemmer hvordan filen kan få tilgang til den <xref href=&quot;System.IO.Log.LogStore&quot;> </xref>."
    - id: share
      type: System.IO.FileShare
      description: "Én av de <xref href=&quot;System.IO.FileShare&quot;> </xref> verdiene som avgjør hvordan log-butikken deler prosesser."
    - id: bufferSize
      type: System.Int32
      description: "Den ønskede bufferstørrelsen i byte. Bufferstørrelsen bestemmer den maksimale størrelsen på posten som kan legges til eller lese."
    - id: bufferCount
      type: System.Int32
      description: "Ønsket antall buffere."
  overload: System.IO.Log.LogRecordSequence.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>en tom streng (&quot;&quot;).       - eller - <code>path</code> inneholder bare mellomrom.       - eller - <code>path</code> inneholder én eller flere ugyldige tegn."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>inneholder en ugyldig verdi."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Finner ikke filen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstår en i/u-feil under åpning Logglageret."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Denne operasjonen støttes ikke."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref href=&quot;System.IO.Log.LogRecordSequence&quot;></xref>kan ikke brukes fordi den nødvendige vanlige Log File System (CLFS)-komponenten ikke er installert. Installer CLFS-komponenten hvis den er tilgjengelig for plattformen, eller bruk av <xref href=&quot;System.IO.Log.FileRecordSequence&quot;> </xref> klasse."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Int32,System.Security.AccessControl.FileSecurity)
  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Int32,System.Security.AccessControl.FileSecurity)'
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: LogRecordSequence(String,FileMode,FileAccess,FileShare,Int32,Int32,FileSecurity)
  nameWithType: LogRecordSequence.LogRecordSequence(String,FileMode,FileAccess,FileShare,Int32,Int32,FileSecurity)
  fullName: System.IO.Log.LogRecordSequence.LogRecordSequence(String,FileMode,FileAccess,FileShare,Int32,Int32,FileSecurity)
  type: Constructor
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.IO.Log.LogRecordSequence&quot;> </xref> klasse."
  syntax:
    content: public LogRecordSequence (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, int bufferSize, int bufferCount, System.Security.AccessControl.FileSecurity fileSecurity);
    parameters:
    - id: path
      type: System.String
      description: "En relativ eller absolutt bane for filen base av loggen store til å åpne."
    - id: mode
      type: System.IO.FileMode
      description: "En gyldig <xref href=&quot;System.IO.FileMode&quot;> </xref> verdi som bestemmer hvordan å åpne eller opprette lageret."
    - id: access
      type: System.IO.FileAccess
      description: "En gyldig <xref href=&quot;System.IO.FileAccess&quot;> </xref> verdi som bestemmer hvordan du får tilgang til loggen-butikken."
    - id: share
      type: System.IO.FileShare
      description: "En gyldig <xref href=&quot;System.IO.FileShare&quot;> </xref> verdi som bestemmer hvordan log-butikken deler prosesser."
    - id: bufferSize
      type: System.Int32
      description: "Den ønskede bufferstørrelsen i byte. Bufferstørrelsen bestemmer den maksimale størrelsen på posten som kan legges til eller lese."
    - id: bufferCount
      type: System.Int32
      description: "Ønsket antall buffere."
    - id: fileSecurity
      type: System.Security.AccessControl.FileSecurity
      description: "En gyldig <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> verdi som angir sikkerhet for å angi for nyopprettede lageret hvis lageret må opprettes."
  overload: System.IO.Log.LogRecordSequence.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Filen fra <code> path </code> er ikke gyldig.       - eller - angitte store loggfilnavnet er ikke gyldig.       - eller - <code> mode </code> har verdien <xref href=&quot;System.IO.FileMode&quot;> </xref>, og kan ikke brukes uten skrivetilgang.       - eller - <code> mode </code> har verdien <xref href=&quot;System.IO.FileMode&quot;> </xref>, og kan ikke brukes uten skrivetilgang."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Ett eller flere av argumentene er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Én eller flere av argumentene er utenfor området."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen fra <code> path </code> finnes ikke."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke utføre forespørselen på grunn av et uventet unntak av i/u.       - eller - filen fra <code> path </code> kan ikke åpnes fordi den er i bruk av en annen prosess.       - eller - filen fra <code> path </code> kan ikke opprettes fordi filen eller mappen finnes allerede.       - eller - håndtaket loggen kan ikke bindes til trådutvalget.       - eller den angitte loggfilformat eller versjonen er ugyldig."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Denne operasjonen støttes ikke."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref href=&quot;System.IO.Log.LogRecordSequence&quot;></xref>kan ikke brukes fordi den nødvendige vanlige Log File System (CLFS)-komponenten ikke er installert. Installer CLFS-komponenten hvis den er tilgjengelig for plattformen, eller bruk av <xref href=&quot;System.IO.Log.FileRecordSequence&quot;> </xref> klasse."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen er full."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)
  id: AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: AdvanceBaseSequenceNumber(SequenceNumber)
  nameWithType: LogRecordSequence.AdvanceBaseSequenceNumber(SequenceNumber)
  fullName: System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber(SequenceNumber)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Flytter sekvensnummeret base av loggen fremover. Denne metoden kan ikke arves."
  remarks: "Denne metoden brukes ofte med den <xref:System.IO.Log.LogRecordSequence.TailPinned>-hendelsen for å frigjøre plass i en oppføring.</xref:System.IO.Log.LogRecordSequence.TailPinned> Den <xref:System.IO.Log.LogRecordSequence.TailPinned>hendelse angir at slutten på sekvensen (det vil si base sekvensnummeret) må flytte fremover for å frigjøre plass.</xref:System.IO.Log.LogRecordSequence.TailPinned> Frigjøre plass kan gjøres ved enten skriving starte områder ved hjelp av den <xref:System.IO.Log.LogRecordSequence.WriteRestartArea%2A>metode, eller avkorte loggen og med metoden AdvanceBaseSequenceNumber for å flytte base sekvensnummeret for en logg til det som er angitt av den `newBaseSequenceNumber` parameteren.</xref:System.IO.Log.LogRecordSequence.WriteRestartArea%2A> Kodeeksempel i delen eksemplet viser den andre fremgangsmåten.       Merk at denne metoden er den samme som å angi en ny base sekvens tallet med det <xref:System.IO.Log.LogRecordSequence.WriteRestartArea%2A>metode, bortsett fra at ingen omstart post skrives til.</xref:System.IO.Log.LogRecordSequence.WriteRestartArea%2A>"
  example:
  - "This example shows how to use the AdvanceBaseSequenceNumber method with the <xref:System.IO.Log.LogRecordSequence.TailPinned> event to free up space in a log sequence.  \n  \n```  \nrecordSequence.RetryAppend = true;  \nrecordSequence.TailPinned += new EventHandler<TailPinnedEventArgs>(HandleTailPinned);  \n  \nvoid HandleTailPinned(object sender, TailPinnedEventArgs tailPinnedEventArgs)  \n{  \n   // tailPinnedEventArgs.TargetSequenceNumber is the target   \n   // sequence number to free up space to.    \n   // However, this sequence number is not necessarily valid.  We have  \n   // to use this sequence number as a starting point for finding a  \n   // valid point within the log to advance toward. You need to  \n   // identify a record with a sequence number equal to, or greater  \n   // than TargetSequenceNumber; let's call this   \n   // realTargetSequenceNumber. Once found, move the base  \n  \n   recordSequence.AdvanceBaseSequenceNumber(realTargetSequenceNumber);  \n  \n}  \n```"
  syntax:
    content: public void AdvanceBaseSequenceNumber (System.IO.Log.SequenceNumber newBaseSequenceNumber);
    parameters:
    - id: newBaseSequenceNumber
      type: System.IO.Log.SequenceNumber
      description: "Angir ny base <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> for loggen. Dette må være mellom det gjeldende base sekvensnummeret og det siste sekvensnummeret av loggen fra."
  overload: System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>newBaseSequenceNumber</code>er ikke gyldig for denne sekvensen."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "En ny eller eksisterende arkivslutt eller grunntallet for den aktive loggen er ugyldig.       - eller - <code> newBaseSequenceNumber </code> er ikke mellom basistypen og den siste sekvensnummeret til denne sekvensen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke utføre forespørselen på grunn av et uventet unntak av i/u.       - eller - kan ikke utføre forespørselen på grunn av en i/u enheten."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den angitte loggen har ikke noen omfang. Én eller flere omfang må opprettes før en post-sekvens kan brukes."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen er full."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)
  id: Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: Append(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions)
  nameWithType: LogRecordSequence.Append(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions)
  fullName: System.IO.Log.LogRecordSequence.Append(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Skriver en loggpost til den <xref href=&quot;System.IO.Log.LogRecordSequence&quot;> </xref>. Denne metoden kan ikke arves."
  remarks: "Dataene i den `data` parameteren settes sammen til én bytematrise for tilføying som oppføringen. Ingen bestemmelser er imidlertid gjort for å dele data tilbake i matrisen segmenter når oppføringen er lest.       Denne metoden er vanligvis fullført før oppføringen er skrevet. For å sikre at en oppføring er skrevet, enten angi den <xref:System.IO.Log.RecordAppendOptions>flagget ved hjelp av den `recordAppendOptions` parameteren eller kall av <xref:System.IO.Log.LogRecordSequence.Flush%2A>metode.</xref:System.IO.Log.LogRecordSequence.Flush%2A> </xref:System.IO.Log.RecordAppendOptions>"
  example:
  - "The following example demonstrates how to use this method to append a log record to the sequence.  \n  \n [!code-cs[S_UELogRecordSequence#13](~/add/codesnippet/csharp/11cb4ef9-9d52-4994-983c-_1.cs)]\n [!code-vb[S_UELogRecordSequence#13](~/add/codesnippet/visualbasic/11cb4ef9-9d52-4994-983c-_1.vb)]"
  syntax:
    content: public System.IO.Log.SequenceNumber Append (ArraySegment<byte> data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);
    parameters:
    - id: data
      type: System.ArraySegment{System.Byte}
      description: "En liste over byte matrise segmenter som skal settes sammen og legges som oppføringen."
    - id: nextUndoRecord
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for neste post i rekkefølgen som angis av brukeren."
    - id: previousRecord
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for neste post i forrige rekkefølge."
    - id: recordAppendOptions
      type: System.IO.Log.RecordAppendOptions
      description: "En gyldig verdi for <xref href=&quot;System.IO.Log.RecordAppendOptions&quot;> </xref> som angir hvor dataene skal skrives."
    return:
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for føyer loggposten."
  overload: System.IO.Log.LogRecordSequence.Append*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>userRecord</code>eller <code>previousRecord</code> er ikke gyldig for denne sekvensen.       - eller - <code>data</code> kan ikke legges fordi den er større enn maksimalt antall poster.       - eller - <code>reservations</code> ikke ble opprettet av denne sekvensnummeret."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Ett eller flere av argumentene er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>userRecord</code>eller <code>previousRecord</code> er ikke mellom basistypen og den siste sekvensnummeret til denne sekvensen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke utføre forespørselen på grunn av et uventet unntak av i/u.       - eller - kan ikke utføre forespørselen på grunn av en i/u enheten."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Operasjonen kan ikke utføres fordi oppføringssekvensen ble åpnet med lesetilgang."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen er full."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)
  id: Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: Append(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions)
  nameWithType: LogRecordSequence.Append(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions)
  fullName: System.IO.Log.LogRecordSequence.Append(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Tilføyer en loggpost til den <xref href=&quot;System.IO.Log.IRecordSequence&quot;> </xref>. Denne metoden kan ikke arves."
  remarks: "Dataene i den `data` parameteren settes sammen til én bytematrise for tilføying som oppføringen. Ingen bestemmelser er imidlertid gjort for å dele data tilbake i matrisen segmenter når oppføringen er lest.       Denne metoden er vanligvis fullført før oppføringen er skrevet. For å sikre at en oppføring er skrevet, enten angi den <xref:System.IO.Log.RecordAppendOptions>flagget ved hjelp av den `recordAppendOptions` parameteren eller kall av <xref:System.IO.Log.LogRecordSequence.Flush%2A>metode.</xref:System.IO.Log.LogRecordSequence.Flush%2A> </xref:System.IO.Log.RecordAppendOptions>"
  syntax:
    content: public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList<ArraySegment<byte>> data, System.IO.Log.SequenceNumber userRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);
    parameters:
    - id: data
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: "En liste over byte matrise segmenter som skal settes sammen og legges som oppføringen."
    - id: userRecord
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for neste post i rekkefølgen som angis av brukeren."
    - id: previousRecord
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for neste post i forrige rekkefølge."
    - id: recordAppendOptions
      type: System.IO.Log.RecordAppendOptions
      description: "En gyldig verdi for <xref href=&quot;System.IO.Log.RecordAppendOptions&quot;> </xref> som angir hvor dataene skal skrives."
    return:
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for føyer loggposten."
  overload: System.IO.Log.LogRecordSequence.Append*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>userRecord</code>eller <code>previousRecord</code> er ikke gyldig for denne sekvensen.       - eller - <code>data</code> kan ikke legges fordi den er større enn maksimalt antall poster.       - eller - <code>reservations</code> ikke ble opprettet av denne sekvensnummeret."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Ett eller flere av argumentene er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>userRecord</code>eller <code>previousRecord</code> er ikke mellom basistypen og den siste sekvensnummeret til denne sekvensen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke utføre forespørselen på grunn av et uventet unntak av i/u.       - eller - kan ikke utføre forespørselen på grunn av en i/u enheten."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Operasjonen kan ikke utføres fordi oppføringssekvensen ble åpnet med lesetilgang."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen er full."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)
  id: Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: Append(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection)
  nameWithType: LogRecordSequence.Append(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection)
  fullName: System.IO.Log.LogRecordSequence.Append(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Tilføyer en loggpost til den <xref href=&quot;System.IO.Log.IRecordSequence&quot;> </xref>, ved hjelp av mellomrom som er reservert tidligere i sekvensen. Denne metoden kan ikke arves."
  remarks: "Dataene i den `data` parameteren settes sammen til én bytematrise for tilføying som oppføringen. Ingen bestemmelser er imidlertid gjort for å dele data tilbake i matrisen segmenter når oppføringen er lest.       Føyer oppføringen vil bruke plassen som er tidligere reservert, ved hjelp av en reservasjon angitt av den `reservations` parameteren. Hvis append lykkes, vil den bruke minste reservasjon området som kan inneholde dataene, og at reservasjon området vil bli fjernet fra samlingen.       Denne metoden er vanligvis fullført før oppføringen er skrevet. For å sikre at en oppføring er skrevet, enten angi den <xref:System.IO.Log.RecordAppendOptions>flagget ved hjelp av den `recordAppendOptions` parameteren eller kall av <xref:System.IO.Log.LogRecordSequence.Flush%2A>metode.</xref:System.IO.Log.LogRecordSequence.Flush%2A> </xref:System.IO.Log.RecordAppendOptions>"
  syntax:
    content: public System.IO.Log.SequenceNumber Append (ArraySegment<byte> data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);
    parameters:
    - id: data
      type: System.ArraySegment{System.Byte}
      description: "En liste over byte matrise segmenter som skal settes sammen og legges som oppføringen."
    - id: nextUndoRecord
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for neste post i rekkefølgen som angis av brukeren."
    - id: previousRecord
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for neste post i forrige rekkefølge."
    - id: recordAppendOptions
      type: System.IO.Log.RecordAppendOptions
      description: "En gyldig verdi for <xref href=&quot;System.IO.Log.RecordAppendOptions&quot;> </xref> som angir hvor dataene skal skrives."
    - id: reservations
      type: System.IO.Log.ReservationCollection
      description: "En <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref> som inneholder reservasjonen som skal brukes for denne oppføring."
    return:
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for føyer loggposten."
  overload: System.IO.Log.LogRecordSequence.Append*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>userRecord</code>eller <code>previousRecord</code> er ikke gyldig for denne sekvensen.       - eller - <code>data</code> kan ikke legges fordi den er større enn maksimalt antall poster.       - eller - <code>reservations</code> ikke ble opprettet av denne sekvensnummeret."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Ett eller flere av argumentene er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>userRecord</code>eller <code>previousRecord</code> er ikke mellom basistypen og den siste sekvensnummeret til denne sekvensen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke utføre forespørselen på grunn av et uventet unntak av i/u.       - eller - kan ikke utføre forespørselen på grunn av en i/u enheten."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Operasjonen kan ikke utføres fordi oppføringssekvensen ble åpnet med lesetilgang."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen er full."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  - type: System.IO.Log.ReservationNotFoundException
    commentId: T:System.IO.Log.ReservationNotFoundException
    description: "Ingen reservasjon stort nok til å få plass <code> data </code> finnes i <code> reservations </code>."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)
  id: Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: Append(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection)
  nameWithType: LogRecordSequence.Append(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection)
  fullName: System.IO.Log.LogRecordSequence.Append(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Tilføyer en loggpost til den <xref href=&quot;System.IO.Log.IRecordSequence&quot;> </xref>, ved hjelp av mellomrom som er reservert tidligere i sekvensen. Denne metoden kan ikke arves."
  remarks: "Dataene i den `data` parameteren settes sammen til én bytematrise for tilføying som oppføringen. Ingen bestemmelser er imidlertid gjort for å dele data tilbake i matrisen segmenter når oppføringen er lest.       Føyer oppføringen vil bruke plassen som er tidligere reservert, ved hjelp av en reservasjon angitt av den `reservations` parameteren. Hvis append lykkes, vil den bruke minste reservasjon området som kan inneholde dataene, og at reservasjon området vil bli fjernet fra samlingen.       Denne metoden er vanligvis fullført før oppføringen er skrevet. For å sikre at en oppføring er skrevet, enten angi den <xref:System.IO.Log.RecordAppendOptions>flagget ved hjelp av den `recordAppendOptions` parameteren eller kall av <xref:System.IO.Log.IRecordSequence.Flush%2A>metode.</xref:System.IO.Log.IRecordSequence.Flush%2A> </xref:System.IO.Log.RecordAppendOptions>"
  syntax:
    content: public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList<ArraySegment<byte>> data, System.IO.Log.SequenceNumber userRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);
    parameters:
    - id: data
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: "En liste over byte matrise segmenter som skal settes sammen og legges som oppføringen."
    - id: userRecord
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for neste post i rekkefølgen som angis av brukeren."
    - id: previousRecord
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for neste post i forrige rekkefølge."
    - id: recordAppendOptions
      type: System.IO.Log.RecordAppendOptions
      description: "En gyldig verdi for <xref href=&quot;System.IO.Log.RecordAppendOptions&quot;> </xref> som angir hvor dataene skal skrives."
    - id: reservations
      type: System.IO.Log.ReservationCollection
      description: "En <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref> som inneholder reservasjonen som skal brukes for denne oppføring."
    return:
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for føyer loggposten."
  overload: System.IO.Log.LogRecordSequence.Append*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>userRecord</code>eller <code>previousRecord</code> er ikke gyldig for denne sekvensen.       - eller - <code>data</code> kan ikke legges fordi den er større enn maksimalt antall poster.       - eller - <code>reservations</code> ikke ble opprettet av denne sekvensnummeret."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Ett eller flere av argumentene er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>userRecord</code>eller <code>previousRecord</code> er ikke mellom basistypen og den siste sekvensnummeret til denne sekvensen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke utføre forespørselen på grunn av et uventet unntak av i/u.       - eller - kan ikke utføre forespørselen på grunn av en i/u enheten."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Operasjonen kan ikke utføres fordi oppføringssekvensen ble åpnet med lesetilgang."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen er full."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  - type: System.IO.Log.ReservationNotFoundException
    commentId: T:System.IO.Log.ReservationNotFoundException
    description: "Ingen reservasjon stort nok til å få plass <code> data </code> finnes i <code> reservations </code>."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.BaseSequenceNumber
  id: BaseSequenceNumber
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: BaseSequenceNumber
  nameWithType: LogRecordSequence.BaseSequenceNumber
  fullName: System.IO.Log.LogRecordSequence.BaseSequenceNumber
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Henter sekvensnummeret for den første gyldige posten i gjeldende <xref href=&quot;System.IO.Log.LogRecordSequence&quot;> </xref>."
  remarks: "Ugyldig serienumre er større enn eller lik BaseSequenceNumber og mindre enn <xref:System.IO.Log.LogRecordSequence.LastSequenceNumber%2A>.</xref:System.IO.Log.LogRecordSequence.LastSequenceNumber%2A>       Verdien for denne egenskapen kan endres ved å kalle den <xref:System.IO.Log.LogRecordSequence.WriteRestartArea%2A>metoden eller <xref:System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber%2A>metode.</xref:System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber%2A> </xref:System.IO.Log.LogRecordSequence.WriteRestartArea%2A>"
  example:
  - "This example shows how to use the BaseSequenceNumber member in a loop.  \n  \n [!code-cs[S_UELogRecordSequence#10](~/add/codesnippet/csharp/p-system.io.log.logrecor_2_1.cs)]\n [!code-vb[S_UELogRecordSequence#10](~/add/codesnippet/visualbasic/p-system.io.log.logrecor_2_1.vb)]"
  syntax:
    content: public System.IO.Log.SequenceNumber BaseSequenceNumber { get; }
    return:
      type: System.IO.Log.SequenceNumber
      description: "Det laveste sekvensnummeret som svarer til en gyldig oppføring i den <xref href=&quot;System.IO.Log.LogRecordSequence&quot;> </xref>."
  overload: System.IO.Log.LogRecordSequence.BaseSequenceNumber*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Egenskapen ble åpnet etter sekvensen har blitt fjernet av."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)
  id: BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: BeginAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,AsyncCallback,Object)
  nameWithType: LogRecordSequence.BeginAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,AsyncCallback,Object)
  fullName: System.IO.Log.LogRecordSequence.BeginAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Starter en asynkron tilføye operasjonen. Denne metoden kan ikke arves."
  remarks: "Du må sende den <xref:System.IAsyncResult>returneres av denne metoden hvis den <xref:System.IO.Log.LogRecordSequence.EndAppend%2A>metode for å sikre at append-operasjonen er fullført og ressurser blir frigjort på riktig måte.</xref:System.IO.Log.LogRecordSequence.EndAppend%2A> </xref:System.IAsyncResult> Hvis det oppstod en feil under en asynkron append, en ikke unntak før den <xref:System.IO.Log.LogRecordSequence.EndAppend%2A>metoden med den <xref:System.IAsyncResult>returneres av denne metoden.</xref:System.IAsyncResult> </xref:System.IO.Log.LogRecordSequence.EndAppend%2A>       Dataene i den `data` parameteren settes sammen til én bytematrise for tilføying som oppføringen. Ingen bestemmelser er imidlertid gjort for å dele data tilbake i matrisen segmenter når oppføringen er lest.       Denne metoden er vanligvis fullført før oppføringen er skrevet. For å sikre at en oppføring er skrevet, enten angi den <xref:System.IO.Log.RecordAppendOptions>flagget ved hjelp av den `recordAppendOptions` parameteren eller kall av <xref:System.IO.Log.LogRecordSequence.Flush%2A>metode.</xref:System.IO.Log.LogRecordSequence.Flush%2A> </xref:System.IO.Log.RecordAppendOptions>"
  syntax:
    content: public IAsyncResult BeginAppend (ArraySegment<byte> data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);
    parameters:
    - id: data
      type: System.ArraySegment{System.Byte}
      description: "En liste over byte matrise segmenter som skal settes sammen og legges som oppføringen."
    - id: nextUndoRecord
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for neste post i rekkefølgen som angis av brukeren."
    - id: previousRecord
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for neste post i forrige rekkefølge."
    - id: recordAppendOptions
      type: System.IO.Log.RecordAppendOptions
      description: "En gyldig verdi for <xref href=&quot;System.IO.Log.RecordAppendOptions&quot;> </xref> som angir hvor dataene skal skrives."
    - id: callback
      type: System.AsyncCallback
      description: "En valgfri asynkrone Tilbakekall kalles når alternativet Legg er fullført."
    - id: state
      type: System.Object
      description: "Et gitt objekt som skiller denne bestemte asynkrone Tilføy forespørselen fra andre forespørsler."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>som representerer asynkrone append, som fortsatt kan ventende.</xref:System.IAsyncResult>"
  overload: System.IO.Log.LogRecordSequence.BeginAppend*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>nextUndoRecord</code>eller <code>previousRecord</code> er ikke gyldig for denne sekvensen.       - eller - <code>data</code> kan ikke legges fordi den er større enn maksimalt antall poster.       - eller - <code>reservations</code> ikke ble opprettet av denne sekvensnummeret."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Ett eller flere av argumentene er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>nextUndoRecord</code>eller <code>previousRecord</code> er ikke mellom basistypen og den siste sekvensnummeret til denne sekvensen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke utføre forespørselen på grunn av et uventet unntak av i/u.       - eller - kan ikke utføre forespørselen på grunn av en i/u enheten."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Operasjonen kan ikke utføres fordi oppføringssekvensen ble åpnet med lesetilgang."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen er full."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)
  id: BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: BeginAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,AsyncCallback,Object)
  nameWithType: LogRecordSequence.BeginAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,AsyncCallback,Object)
  fullName: System.IO.Log.LogRecordSequence.BeginAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Starter en asynkron tilføye operasjonen. Denne metoden kan ikke arves."
  remarks: "Du må sende den <xref:System.IAsyncResult>returneres av denne metoden hvis den <xref:System.IO.Log.LogRecordSequence.EndAppend%2A>metode for å sikre at append-operasjonen er fullført og ressurser blir frigjort på riktig måte.</xref:System.IO.Log.LogRecordSequence.EndAppend%2A> </xref:System.IAsyncResult> Hvis det oppstod en feil under en asynkron append, en ikke unntak før den <xref:System.IO.Log.LogRecordSequence.EndAppend%2A>metoden med den <xref:System.IAsyncResult>returneres av denne metoden.</xref:System.IAsyncResult> </xref:System.IO.Log.LogRecordSequence.EndAppend%2A>       Dataene i den `data` parameteren settes sammen til én bytematrise for tilføying som oppføringen. Ingen bestemmelser er imidlertid gjort for å dele data tilbake i matrisen segmenter når oppføringen er lest.       Denne metoden er vanligvis fullført før oppføringen er skrevet. For å sikre at en oppføring er skrevet, enten angi den <xref:System.IO.Log.RecordAppendOptions>flagget ved hjelp av den `recordAppendOptions` parameteren eller kall av <xref:System.IO.Log.LogRecordSequence.Flush%2A>metode.</xref:System.IO.Log.LogRecordSequence.Flush%2A> </xref:System.IO.Log.RecordAppendOptions>"
  syntax:
    content: public IAsyncResult BeginAppend (System.Collections.Generic.IList<ArraySegment<byte>> data, System.IO.Log.SequenceNumber userRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);
    parameters:
    - id: data
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: "En liste over byte matrise segmenter som skal settes sammen og legges som oppføringen."
    - id: userRecord
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for neste post i rekkefølgen som angis av brukeren."
    - id: previousRecord
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for neste post i forrige rekkefølge."
    - id: recordAppendOptions
      type: System.IO.Log.RecordAppendOptions
      description: "En gyldig verdi for <xref href=&quot;System.IO.Log.RecordAppendOptions&quot;> </xref> som angir hvor dataene skal skrives."
    - id: callback
      type: System.AsyncCallback
      description: "En valgfri asynkrone Tilbakekall kalles når alternativet Legg er fullført."
    - id: state
      type: System.Object
      description: "Et gitt objekt som skiller denne bestemte asynkrone Tilføy forespørselen fra andre forespørsler."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>som representerer asynkrone append, som fortsatt kan ventende.</xref:System.IAsyncResult>"
  overload: System.IO.Log.LogRecordSequence.BeginAppend*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>userRecord</code>eller <code>previousRecord</code> er ikke gyldig for denne sekvensen.       - eller - <code>data</code> kan ikke legges fordi den er større enn maksimalt antall poster.       - eller - <code>reservations</code> ikke ble opprettet av denne sekvensnummeret."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Ett eller flere av argumentene er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>userRecord</code>eller <code>previousRecord</code> er ikke mellom basistypen og den siste sekvensnummeret til denne sekvensen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke utføre forespørselen på grunn av et uventet unntak av i/u.       - eller - kan ikke utføre forespørselen på grunn av en i/u enheten."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Operasjonen kan ikke utføres fordi oppføringssekvensen ble åpnet med lesetilgang."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen er full."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  id: BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: BeginAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,AsyncCallback,Object)
  nameWithType: LogRecordSequence.BeginAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,AsyncCallback,Object)
  fullName: System.IO.Log.LogRecordSequence.BeginAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Starter en asynkron tilføye operasjonen. Denne metoden kan ikke arves."
  remarks: "Du må sende den <xref:System.IAsyncResult>returneres av denne metoden hvis den <xref:System.IO.Log.LogRecordSequence.EndAppend%2A>metode for å sikre at append-operasjonen er fullført og ressurser blir frigjort på riktig måte.</xref:System.IO.Log.LogRecordSequence.EndAppend%2A> </xref:System.IAsyncResult> Hvis det oppstod en feil under en asynkron append, en ikke unntak før den <xref:System.IO.Log.LogRecordSequence.EndAppend%2A>metoden med den <xref:System.IAsyncResult>returneres av denne metoden.</xref:System.IAsyncResult> </xref:System.IO.Log.LogRecordSequence.EndAppend%2A>       Dataene i den `data` parameteren settes sammen til én bytematrise for tilføying som oppføringen. Ingen bestemmelser er imidlertid gjort for å dele data tilbake i matrisen segmenter når oppføringen er lest.       Føyer oppføringen vil bruke plassen som er tidligere reservert, ved hjelp av en reservasjon angitt av den `reservations` parameteren. Hvis append lykkes, vil den bruke minste reservasjon området som kan inneholde dataene, og at reservasjon området vil bli fjernet fra samlingen.       Denne metoden er vanligvis fullført før oppføringen er skrevet. For å sikre at en oppføring er skrevet, enten angi den <xref:System.IO.Log.RecordAppendOptions>flagget ved hjelp av den `recordAppendOptions` parameteren eller kall av <xref:System.IO.Log.LogRecordSequence.Flush%2A>metode.</xref:System.IO.Log.LogRecordSequence.Flush%2A> </xref:System.IO.Log.RecordAppendOptions>"
  syntax:
    content: public IAsyncResult BeginAppend (ArraySegment<byte> data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);
    parameters:
    - id: data
      type: System.ArraySegment{System.Byte}
      description: "En liste over byte matrise segmenter som skal settes sammen og legges som oppføringen."
    - id: nextUndoRecord
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for neste post i rekkefølgen som angis av brukeren."
    - id: previousRecord
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for neste post i forrige rekkefølge."
    - id: recordAppendOptions
      type: System.IO.Log.RecordAppendOptions
      description: "En gyldig verdi for <xref href=&quot;System.IO.Log.RecordAppendOptions&quot;> </xref> som angir hvor dataene skal skrives."
    - id: reservations
      type: System.IO.Log.ReservationCollection
      description: "En <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref> som inneholder reservasjonen som skal brukes for denne oppføring."
    - id: callback
      type: System.AsyncCallback
      description: "En valgfri asynkrone Tilbakekall kalles når alternativet Legg er fullført."
    - id: state
      type: System.Object
      description: "Et gitt objekt som skiller denne bestemte asynkrone Tilføy forespørselen fra andre forespørsler."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>som representerer asynkrone append, som fortsatt kan ventende.</xref:System.IAsyncResult>"
  overload: System.IO.Log.LogRecordSequence.BeginAppend*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>userRecord</code>eller <code>previousRecord</code> er ikke gyldig for denne sekvensen.       - eller - <code>data</code> kan ikke legges fordi den er større enn maksimalt antall poster.       - eller - <code>reservations</code> ikke ble opprettet av denne sekvensnummeret."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Ett eller flere av argumentene er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>userRecord</code>eller <code>previousRecord</code> er ikke mellom basistypen og den siste sekvensnummeret til denne sekvensen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke utføre forespørselen på grunn av et uventet unntak av i/u.       - eller - kan ikke utføre forespørselen på grunn av en i/u enheten."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Operasjonen kan ikke utføres fordi oppføringssekvensen ble åpnet med lesetilgang."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen er full."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  - type: System.IO.Log.ReservationNotFoundException
    commentId: T:System.IO.Log.ReservationNotFoundException
    description: "Ingen reservasjon stort nok til å få plass <code> data </code> finnes i <code> reservations </code>."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  id: BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: BeginAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,AsyncCallback,Object)
  nameWithType: LogRecordSequence.BeginAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,AsyncCallback,Object)
  fullName: System.IO.Log.LogRecordSequence.BeginAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Starter en asynkron tilføye operasjonen. Denne metoden kan ikke arves."
  remarks: "Du må sende den <xref:System.IAsyncResult>returneres av denne metoden hvis den <xref:System.IO.Log.LogRecordSequence.EndAppend%2A>metode for å sikre at append-operasjonen er fullført og ressurser blir frigjort på riktig måte.</xref:System.IO.Log.LogRecordSequence.EndAppend%2A> </xref:System.IAsyncResult> Hvis det oppstod en feil under en asynkron append, en ikke unntak før den <xref:System.IO.Log.LogRecordSequence.EndAppend%2A>metoden med den <xref:System.IAsyncResult>returneres av denne metoden.</xref:System.IAsyncResult> </xref:System.IO.Log.LogRecordSequence.EndAppend%2A>       Dataene i den `data` parameteren settes sammen til én bytematrise for tilføying som oppføringen. Ingen bestemmelser er imidlertid gjort for å dele data tilbake i matrisen segmenter når oppføringen er lest.       Føyer oppføringen vil bruke plassen som er tidligere reservert, ved hjelp av en reservasjon angitt av den `reservations` parameteren. Hvis append lykkes, vil den bruke minste reservasjon området som kan inneholde dataene, og at reservasjon området vil bli fjernet fra samlingen.       Denne metoden er vanligvis fullført før oppføringen er skrevet. For å sikre at en oppføring er skrevet, enten angi den <xref:System.IO.Log.RecordAppendOptions>flagget ved hjelp av den `recordAppendOptions` parameteren eller kall av <xref:System.IO.Log.LogRecordSequence.Flush%2A>metode.</xref:System.IO.Log.LogRecordSequence.Flush%2A> </xref:System.IO.Log.RecordAppendOptions>"
  syntax:
    content: public IAsyncResult BeginAppend (System.Collections.Generic.IList<ArraySegment<byte>> data, System.IO.Log.SequenceNumber userRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);
    parameters:
    - id: data
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: "En liste over byte matrise segmenter som skal settes sammen og legges som oppføringen."
    - id: userRecord
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for neste post i rekkefølgen som angis av brukeren."
    - id: previousRecord
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for neste post i forrige rekkefølge."
    - id: recordAppendOptions
      type: System.IO.Log.RecordAppendOptions
      description: "En gyldig verdi for <xref href=&quot;System.IO.Log.RecordAppendOptions&quot;> </xref> som angir hvor dataene skal skrives."
    - id: reservations
      type: System.IO.Log.ReservationCollection
      description: "En <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref> som inneholder reservasjonen som skal brukes for denne oppføring."
    - id: callback
      type: System.AsyncCallback
      description: "En valgfri asynkrone Tilbakekall kalles når alternativet Legg er fullført."
    - id: state
      type: System.Object
      description: "Et gitt objekt som skiller denne bestemte asynkrone Tilføy forespørselen fra andre forespørsler."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>som representerer asynkrone append, som fortsatt kan ventende.</xref:System.IAsyncResult>"
  overload: System.IO.Log.LogRecordSequence.BeginAppend*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>userRecord</code>eller <code>previousRecord</code> er ikke gyldig for denne sekvensen.       - eller - <code>data</code> kan ikke legges fordi den er større enn maksimalt antall poster.       - eller - <code>reservations</code> ikke ble opprettet av denne sekvensnummeret."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Ett eller flere av argumentene er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>userRecord</code>eller <code>previousRecord</code> er ikke mellom basistypen og den siste sekvensnummeret til denne sekvensen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke utføre forespørselen på grunn av et uventet unntak av i/u.       - eller - kan ikke utføre forespørselen på grunn av en i/u enheten."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Operasjonen kan ikke utføres fordi oppføringssekvensen ble åpnet med lesetilgang."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen er full."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  - type: System.IO.Log.ReservationNotFoundException
    commentId: T:System.IO.Log.ReservationNotFoundException
    description: "Ingen reservasjon stort nok til å få plass <code> data </code> finnes i <code> reservations </code>."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)
  id: BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: BeginFlush(SequenceNumber,AsyncCallback,Object)
  nameWithType: LogRecordSequence.BeginFlush(SequenceNumber,AsyncCallback,Object)
  fullName: System.IO.Log.LogRecordSequence.BeginFlush(SequenceNumber,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Starter en asynkron skriveoperasjon, ved hjelp av mellomrom som er reservert tidligere i sekvensen. Denne metoden kan ikke arves."
  remarks: "Du må sende den <xref:System.IAsyncResult>returnert av metoden gjeldende til den <xref:System.IO.Log.LogRecordSequence.EndFlush%2A>metode for å sikre at tømming er fullført og frigis ressurser på riktig måte.</xref:System.IO.Log.LogRecordSequence.EndFlush%2A> </xref:System.IAsyncResult> Hvis det oppstår en feil under en asynkron tømming, en ikke unntak før den <xref:System.IO.Log.LogRecordSequence.EndFlush%2A>metoden med den <xref:System.IAsyncResult>returneres av denne metoden.</xref:System.IAsyncResult> </xref:System.IO.Log.LogRecordSequence.EndFlush%2A>       Kaller denne metoden sikrer at alle poster som har blitt lagt til i <xref:System.IO.Log.LogRecordSequence>skrives robust.</xref:System.IO.Log.LogRecordSequence>       Hvis en sekvensnummeret har blitt fjernet av, eller hvis du sender et ugyldig argument, er unntak oppstod umiddelbart i denne operasjonen. Feil som oppstod under en asynkron tømming forespørsel, for eksempel diskfeil under i/u-forespørselen fører unntak som når den <xref:System.IO.Log.LogRecordSequence.EndFlush%2A>-metoden.</xref:System.IO.Log.LogRecordSequence.EndFlush%2A>"
  syntax:
    content: public IAsyncResult BeginFlush (System.IO.Log.SequenceNumber sequenceNumber, AsyncCallback callback, object state);
    parameters:
    - id: sequenceNumber
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for den nyeste posten må være skrevet. Hvis <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> er ugyldig, og alle poster må være skrevet."
    - id: callback
      type: System.AsyncCallback
      description: "En valgfri asynkrone Tilbakekall kalles når tømming er fullført."
    - id: state
      type: System.Object
      description: "Et gitt objekt som skiller bestemt asynkron tømming forespørselen fra andre forespørsler."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>som representerer den asynkrone tømme operasjon som kan fortsatt være ventende.</xref:System.IAsyncResult>"
  overload: System.IO.Log.LogRecordSequence.BeginFlush*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sequenceNumber</code>er ikke gyldig for denne sekvensen."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>sequenceNumber</code>er ikke mellom basistypen og den siste sekvensnummeret til denne sekvensen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke utføre forespørselen på grunn av et uventet unntak av i/u."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den angitte loggen har ikke noen omfang. Én eller flere omfang må opprettes før du kan bruke en post-sekvens."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Operasjonen kan ikke utføres fordi oppføringssekvensen ble åpnet med lesetilgang."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen er full."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)
  id: BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: BeginReserveAndAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[],AsyncCallback,Object)
  nameWithType: LogRecordSequence.BeginReserveAndAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[],AsyncCallback,Object)
  fullName: System.IO.Log.LogRecordSequence.BeginReserveAndAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[],AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Starter en asynkron reserver, og tilføyer operasjonen. Denne metoden kan ikke arves."
  remarks: "Du må sende den <xref:System.IAsyncResult>returneres av denne metoden hvis den <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A>metode for å sikre at append-operasjonen er fullført og ressurser blir frigjort på riktig måte.</xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> </xref:System.IAsyncResult> Hvis det oppstod en feil under en asynkron append, en ikke unntak før den <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A>metoden med den <xref:System.IAsyncResult>returneres av denne metoden.</xref:System.IAsyncResult> </xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A>       Dataene i den `data` parameteren settes sammen til én bytematrise for tilføying som oppføringen. Ingen bestemmelser er imidlertid gjort for å dele data tilbake i matrisen segmenter når oppføringen er lest.       De angitte adressereservasjonene er lagt til den angitte reservasjonen tilføye samlingen i en udelelig operasjon med en post operasjonen. Hvis append mislykkes, er ikke nok plass reservert.       Denne metoden kan vanligvis fullføres før oppføringen er skrevet. For å sikre at en oppføring er skrevet, enten angi den <xref:System.IO.Log.RecordAppendOptions>flagget ved hjelp av den `recordAppendOptions` parameteren eller kall av <xref:System.IO.Log.LogRecordSequence.Flush%2A>metode.</xref:System.IO.Log.LogRecordSequence.Flush%2A> </xref:System.IO.Log.RecordAppendOptions>       Hvis en sekvensnummeret har blitt fjernet av, eller hvis du sender et ugyldig argument, er unntak oppstod umiddelbart i denne operasjonen. Feil som oppstod under en asynkron append-forespørsel, for eksempel diskfeil under i/u-forespørselen fører unntak som når den <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A>-metoden.</xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A>"
  syntax:
    content: public IAsyncResult BeginReserveAndAppend (ArraySegment<byte> data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);
    parameters:
    - id: data
      type: System.ArraySegment{System.Byte}
      description: "En liste over byte matrise segmenter som skal settes sammen og legges som oppføringen."
    - id: nextUndoRecord
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for neste post i rekkefølgen som angis av brukeren."
    - id: previousRecord
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for neste post i forrige rekkefølge."
    - id: recordAppendOptions
      type: System.IO.Log.RecordAppendOptions
      description: "En gyldig verdi for <xref href=&quot;System.IO.Log.RecordAppendOptions&quot;> </xref> som angir hvor dataene skal skrives."
    - id: reservationCollection
      type: System.IO.Log.ReservationCollection
      description: "Reservasjonssamlingen å reservere i."
    - id: reservations
      type: System.Int64[]
      description: "Adressereservasjonene foreta, i byte."
    - id: callback
      type: System.AsyncCallback
      description: "En valgfri asynkrone Tilbakekall kalles når alternativet Legg er fullført."
    - id: state
      type: System.Object
      description: "Et gitt objekt som skiller denne bestemte asynkrone Tilføy forespørselen fra andre forespørsler."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>som representerer denne asynkron operasjon kan fremdeles være ventende.</xref:System.IAsyncResult>"
  overload: System.IO.Log.LogRecordSequence.BeginReserveAndAppend*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>userRecord</code>eller <code>previousRecord</code> er ikke gyldig for denne sekvensen.       - eller - <code>data</code> kan ikke legges fordi den er større enn maksimalt antall poster.       - eller - <code>reservations</code> ikke ble opprettet av denne sekvensnummeret."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Ett eller flere av argumentene er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>userRecord</code>eller <code>previousRecord</code> er ikke mellom basistypen og den siste sekvensnummeret til denne sekvensen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke utføre forespørselen på grunn av et uventet unntak av i/u.       - eller - kan ikke utføre forespørselen på grunn av en i/u enheten."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Operasjonen kan ikke utføres fordi oppføringssekvensen ble åpnet med lesetilgang."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen er full."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  - type: System.IO.Log.ReservationNotFoundException
    commentId: T:System.IO.Log.ReservationNotFoundException
    description: "Ingen reservasjon stort nok til å få plass <code> data </code> finnes i <code> reservations </code>."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)
  id: BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: BeginReserveAndAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[],AsyncCallback,Object)
  nameWithType: LogRecordSequence.BeginReserveAndAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[],AsyncCallback,Object)
  fullName: System.IO.Log.LogRecordSequence.BeginReserveAndAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[],AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Starter en asynkron reserver, og tilføyer operasjonen. Denne metoden kan ikke arves."
  remarks: "Du må sende den <xref:System.IAsyncResult>returneres av denne metoden hvis den <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A>metode for å sikre at append-operasjonen er fullført og ressurser blir frigjort på riktig måte.</xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A> </xref:System.IAsyncResult> Hvis det oppstod en feil under en asynkron append, en ikke unntak før den <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A>metoden med den <xref:System.IAsyncResult>returneres av denne metoden.</xref:System.IAsyncResult> </xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A>       Dataene i den `data` parameteren settes sammen til én bytematrise for tilføying som oppføringen. Ingen bestemmelser er imidlertid gjort for å dele data tilbake i matrisen segmenter når oppføringen er lest.       De angitte adressereservasjonene er lagt til den angitte reservasjonen tilføye samlingen i en udelelig operasjon med en post operasjonen. Hvis append mislykkes, er ikke nok plass reservert.       Denne metoden kan vanligvis fullføres før oppføringen er skrevet. For å sikre at en oppføring er skrevet, enten angi den <xref:System.IO.Log.RecordAppendOptions>flagget ved hjelp av den `recordAppendOptions` parameteren eller kall av <xref:System.IO.Log.LogRecordSequence.Flush%2A>metode.</xref:System.IO.Log.LogRecordSequence.Flush%2A> </xref:System.IO.Log.RecordAppendOptions>       Hvis en sekvensnummeret har blitt fjernet av, eller hvis du sender et ugyldig argument, er unntak oppstod umiddelbart i denne operasjonen. Feil som oppstod under en asynkron append-forespørsel, for eksempel diskfeil under i/u-forespørselen fører unntak som når den <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A>-metoden.</xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A>"
  syntax:
    content: public IAsyncResult BeginReserveAndAppend (System.Collections.Generic.IList<ArraySegment<byte>> data, System.IO.Log.SequenceNumber userRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);
    parameters:
    - id: data
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: "En liste over byte matrise segmenter som skal settes sammen og legges som oppføringen."
    - id: userRecord
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for neste post i rekkefølgen som angis av brukeren."
    - id: previousRecord
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for neste post i forrige rekkefølge."
    - id: recordAppendOptions
      type: System.IO.Log.RecordAppendOptions
      description: "En gyldig verdi for <xref href=&quot;System.IO.Log.RecordAppendOptions&quot;> </xref> som angir hvor dataene skal skrives."
    - id: reservationCollection
      type: System.IO.Log.ReservationCollection
      description: "Reservasjonssamlingen å reservere i."
    - id: reservations
      type: System.Int64[]
      description: "Adressereservasjonene foreta, i byte."
    - id: callback
      type: System.AsyncCallback
      description: "En valgfri asynkrone Tilbakekall kalles når alternativet Legg er fullført."
    - id: state
      type: System.Object
      description: "Et gitt objekt som skiller denne bestemte asynkrone Tilføy forespørselen fra andre forespørsler."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>som representerer denne asynkron operasjon kan fremdeles være ventende.</xref:System.IAsyncResult>"
  overload: System.IO.Log.LogRecordSequence.BeginReserveAndAppend*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Én eller flere av argumentene er ugyldig."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil under tilføying oppføringen."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen kan ikke lage plass til å inneholde den nye oppføringen, eller foreta reservasjonen."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  id: BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: BeginWriteRestartArea(ArraySegment<Byte>,SequenceNumber,ReservationCollection,AsyncCallback,Object)
  nameWithType: LogRecordSequence.BeginWriteRestartArea(ArraySegment<Byte>,SequenceNumber,ReservationCollection,AsyncCallback,Object)
  fullName: System.IO.Log.LogRecordSequence.BeginWriteRestartArea(ArraySegment<Byte>,SequenceNumber,ReservationCollection,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Starter en asynkron Start området skriveoperasjon ved hjelp av mellomrom som er reservert tidligere i sekvensen. Denne metoden kan ikke arves."
  remarks: "Du må sende den <xref:System.IAsyncResult>returneres av denne metoden hvis den <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A>metode for å sikre at Skriveoperasjonen omstart område er fullført og ressurser blir frigjort på riktig måte.</xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> </xref:System.IAsyncResult> Hvis det oppstod en feil under en asynkron området skrive omstarten, en ikke unntak før den <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A>metoden med den <xref:System.IAsyncResult>returneres av denne metoden.</xref:System.IAsyncResult> </xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A>       Dataene i den `data` parameteren settes sammen til én bytematrise for tilføying som oppføringen. Ingen bestemmelser er imidlertid gjort for å dele data tilbake i matrisen segmenter når oppføringen er lest.       Når operasjonen er fullført, er base sekvensnummeret oppdatert. Alle loggposter med serienumre under ny base sekvensnummeret er utilgjengelige.       Hvis en <xref:System.IO.Log.ReservationCollection>er angitt, skriftlig Start området vil bruke plassen som er tidligere reservert, ved hjelp av en reservasjon i samlingen.</xref:System.IO.Log.ReservationCollection> Hvis metoden lykkes, vil den bruke minste reservasjonen som kan inneholde dataene, og at reservasjon fjernes fra samlingen.       Hvis en sekvensnummeret har blitt fjernet av, eller hvis du sender et ugyldig argument, er unntak oppstod umiddelbart i denne operasjonen. Feil som oppstod under en asynkron append-forespørsel, for eksempel diskfeil under i/u-forespørselen fører unntak som når den <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A>-metoden.</xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A>"
  syntax:
    content: public IAsyncResult BeginWriteRestartArea (ArraySegment<byte> data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservation, AsyncCallback callback, object state);
    parameters:
    - id: data
      type: System.ArraySegment{System.Byte}
      description: "Matrise segmenter for byte som skal settes sammen og legges som oppføringen."
    - id: newBaseSeqNum
      type: System.IO.Log.SequenceNumber
      description: "Ny base serienummeret. Det angitte sekvensnummeret må være større enn eller lik gjeldende base sekvensnummeret."
    - id: reservation
      type: System.IO.Log.ReservationCollection
      description: "En <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref> som inneholder reservasjonen som skal brukes for dette området for omstart."
    - id: callback
      type: System.AsyncCallback
      description: "En valgfri asynkrone Tilbakekall kalles når Start området skriving er fullført."
    - id: state
      type: System.Object
      description: "Et gitt objekt som skiller skriveforespørselen denne bestemt asynkrone Start området fra andre forespørsler."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>som representerer den asynkrone Start området skriveoperasjon som kan fortsatt være ventende.</xref:System.IAsyncResult>"
  overload: System.IO.Log.LogRecordSequence.BeginWriteRestartArea*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>newBaseSeqNum</code>er ikke gyldig for denne sekvensen.       - eller det angitte opplisting start loggsekvensnummeret er ugyldig.       - eller - <code>data</code> kan ikke legges fordi den er større enn maksimalt antall poster.       - eller - <code>reservation</code> ikke ble opprettet av denne sekvensnummeret."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Én eller flere av parameterne er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "En ny eller eksisterende arkivslutt eller grunntallet for den aktive loggen er ugyldig.       - eller - <code> newBaseSeqNum </code> er ikke mellom basistypen og den siste sekvensnummeret til denne sekvensen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke utføre forespørselen på grunn av et uventet unntak av i/u.       - eller - kan ikke utføre forespørselen på grunn av en i/u enheten."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen er full."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  id: BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: BeginWriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber,ReservationCollection,AsyncCallback,Object)
  nameWithType: LogRecordSequence.BeginWriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber,ReservationCollection,AsyncCallback,Object)
  fullName: System.IO.Log.LogRecordSequence.BeginWriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber,ReservationCollection,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Starter en asynkron Start området skriveoperasjon ved hjelp av mellomrom som er reservert tidligere i sekvensen. Denne metoden kan ikke arves."
  remarks: "Du må sende den <xref:System.IAsyncResult>returneres av denne metoden hvis den <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A>metode for å sikre at Skriveoperasjonen omstart område er fullført og ressurser blir frigjort på riktig måte.</xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A> </xref:System.IAsyncResult> Hvis det oppstod en feil under en asynkron området skrive omstarten, en ikke unntak før den <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A>metoden med den <xref:System.IAsyncResult>returneres av denne metoden.</xref:System.IAsyncResult> </xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A>       Dataene i den `data` parameteren settes sammen til én bytematrise for tilføying som oppføringen. Ingen bestemmelser er imidlertid gjort for å dele data tilbake i matrisen segmenter når oppføringen er lest.       Når operasjonen er fullført, er base sekvensnummeret oppdatert. Alle loggposter med serienumre under ny base sekvensnummeret er utilgjengelige.       Hvis en <xref:System.IO.Log.ReservationCollection>er angitt, skriftlig Start området vil bruke plassen som er tidligere reservert, ved hjelp av en reservasjon i samlingen.</xref:System.IO.Log.ReservationCollection> Hvis metoden lykkes, vil den bruke minste reservasjonen som kan inneholde dataene, og at reservasjon fjernes fra samlingen.       Hvis en sekvensnummeret har blitt fjernet av, eller hvis du sender et ugyldig argument, er unntak oppstod umiddelbart i denne operasjonen. Feil som oppstod under en asynkron append-forespørsel, for eksempel diskfeil under i/u-forespørselen fører unntak som når den <xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A>-metoden.</xref:System.IO.Log.LogRecordSequence.EndWriteRestartArea%2A>"
  syntax:
    content: public IAsyncResult BeginWriteRestartArea (System.Collections.Generic.IList<ArraySegment<byte>> data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservationCollection, AsyncCallback callback, object state);
    parameters:
    - id: data
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: "En liste over byte matrise segmenter som skal settes sammen og legges som oppføringen."
    - id: newBaseSeqNum
      type: System.IO.Log.SequenceNumber
      description: "Ny base serienummeret. Det angitte sekvensnummeret må være større enn eller lik gjeldende base sekvensnummeret."
    - id: reservationCollection
      type: System.IO.Log.ReservationCollection
      description: "En <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref> som inneholder reservasjonen som skal brukes for dette området for omstart."
    - id: callback
      type: System.AsyncCallback
      description: "En valgfri asynkrone Tilbakekall kalles når Start området skriving er fullført."
    - id: state
      type: System.Object
      description: "Et gitt objekt som skiller skriveforespørselen denne bestemt asynkrone Start området fra andre forespørsler."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>som representerer den asynkrone Start området skriveoperasjon som kan fortsatt være ventende.</xref:System.IAsyncResult>"
  overload: System.IO.Log.LogRecordSequence.BeginWriteRestartArea*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>newBaseSeqNum</code>er ikke gyldig for denne sekvensen.       - eller det angitte opplisting start loggsekvensnummeret er ugyldig.       - eller - <code>data</code> kan ikke legges fordi den er større enn maksimalt antall poster.       - eller - <code>reservationCollection</code> ikke ble opprettet av denne sekvensnummeret."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Én eller flere av parameterne er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "En ny eller eksisterende arkivslutt eller grunntallet for den aktive loggen er ugyldig.       - eller - <code> newBaseSeqNum </code> er ikke mellom basistypen og den siste sekvensnummeret til denne sekvensen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke utføre forespørselen på grunn av et uventet unntak av i/u.       - eller - kan ikke utføre forespørselen på grunn av en i/u enheten."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen er full."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.CreateReservationCollection
  id: CreateReservationCollection
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: CreateReservationCollection()
  nameWithType: LogRecordSequence.CreateReservationCollection()
  fullName: System.IO.Log.LogRecordSequence.CreateReservationCollection()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Oppretter en ny <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref>. Denne metoden kan ikke arves."
  remarks: ''
  example:
  - "Reservations can be performed in two ways as shown in the following examples. You can adopt the practices in the samples for robust processing. Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.  \n  \n```  \n//Using the ReserveAndAppend Method  \nReservationCollection reservations = recordSequence.CreateReservationCollection();  \nlong[] lengthOfUndoRecords = new long[] { 1000 };  \nrecordSequence.ReserveAndAppend(recordData,  \n                                                     userSqn,  \n                                                     previousSqn,  \n                                                     RecordSequenceAppendOptions.None,  \n                                                     reservations,  \n                                                     lengthOfUndoRecords);  \nrecordSequence.Append(undoRecordData,    // If necessary …  \n                                    userSqn,  \n                                    previousSqn,  \n                                    RecordSequenceAppendOptions.ForceFlush,  \n                                    reservations);  \n  \n// Using the Manual Approach  \nReservationCollection reservations = recordSequence.CreateReservationCollection();  \nreservations.Add(lengthOfUndoRecord);  \ntry  \n{  \n   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  \n}  \ncatch (Exception)  \n{  \n   reservations.Remove(lengthOfUndoRecord);  \n   throw;  \n}  \n  \nrecordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  \n```"
  syntax:
    content: public System.IO.Log.ReservationCollection CreateReservationCollection ();
    parameters: []
    return:
      type: System.IO.Log.ReservationCollection
      description: "Den nyopprettede <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref>."
  overload: System.IO.Log.LogRecordSequence.CreateReservationCollection*
  exceptions:
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.Dispose
  id: Dispose
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: Dispose()
  nameWithType: LogRecordSequence.Dispose()
  fullName: System.IO.Log.LogRecordSequence.Dispose()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Frigir ressursene som brukes av komponenten."
  remarks: ''
  example:
  - "This example shows how to use Dispose to release resource:  \n  \n [!code-cs[S_UELogRecordSequence#11](~/add/codesnippet/csharp/m-system.io.log.logrecor_1.cs)]\n [!code-vb[S_UELogRecordSequence#11](~/add/codesnippet/visualbasic/m-system.io.log.logrecor_1.vb)]  \n  \n [!code-cs[S_UELogRecordSequence#12](~/add/codesnippet/csharp/m-system.io.log.logrecor_2.cs)]\n [!code-vb[S_UELogRecordSequence#12](~/add/codesnippet/visualbasic/m-system.io.log.logrecor_2.vb)]"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.IO.Log.LogRecordSequence.Dispose*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.EndAppend(System.IAsyncResult)
  id: EndAppend(System.IAsyncResult)
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: EndAppend(IAsyncResult)
  nameWithType: LogRecordSequence.EndAppend(IAsyncResult)
  fullName: System.IO.Log.LogRecordSequence.EndAppend(IAsyncResult)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Endene en asynkron Tilføy operasjonen. Denne metoden kan ikke arves."
  remarks: "Denne metoden blokkerer til at i/u-operasjonen er fullført. Feil som oppstår under en asynkron skriveforespørselen, for eksempel diskfeil under i/u-forespørselen blir synlige når EndAppend kalles.       Denne metoden må kalles nøyaktig én gang for hver <xref:System.IAsyncResult>returnert av den <xref:System.IO.Log.LogRecordSequence.BeginAppend%2A>metoden.</xref:System.IO.Log.LogRecordSequence.BeginAppend%2A> </xref:System.IAsyncResult>"
  syntax:
    content: public System.IO.Log.SequenceNumber EndAppend (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "En referanse til utestående asynkront i/u-forespørselen."
    return:
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for føyer loggposten."
  overload: System.IO.Log.LogRecordSequence.EndAppend*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>result</code>er ugyldig."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke utføre forespørselen på grunn av et uventet unntak av i/u.       - eller - kan ikke utføre forespørselen på grunn av en i/u enheten."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref uid=&quot;langword_csharp_End &quot; name=&quot;End &quot; href=&quot;&quot;></xref>er allerede blitt kalt for denne asynkrone operasjonen."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Operasjonen kan ikke utføres fordi oppføringssekvensen ble åpnet med lesetilgang."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen er full."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.EndFlush(System.IAsyncResult)
  id: EndFlush(System.IAsyncResult)
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: EndFlush(IAsyncResult)
  nameWithType: LogRecordSequence.EndFlush(IAsyncResult)
  fullName: System.IO.Log.LogRecordSequence.EndFlush(IAsyncResult)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Avslutter en asynkron skriveoperasjon. Denne metoden kan ikke arves."
  remarks: "Denne metoden blokkerer til at i/u-operasjonen er fullført. Feil som oppstår under en asynkron tømming forespørsel, for eksempel diskfeil under i/u-forespørselen blir synlige når EndFlush kalles.       Denne metoden må kalles nøyaktig én gang for hver <xref:System.IAsyncResult>returnert av den <xref:System.IO.Log.LogRecordSequence.BeginFlush%2A>metoden.</xref:System.IO.Log.LogRecordSequence.BeginFlush%2A> </xref:System.IAsyncResult>"
  syntax:
    content: public System.IO.Log.SequenceNumber EndFlush (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "En referanse til utestående asynkront i/u-forespørselen."
    return:
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for den forrige posten skrevet."
  overload: System.IO.Log.LogRecordSequence.EndFlush*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>result</code>er ugyldig."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke utføre forespørselen på grunn av et uventet unntak av i/u."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref uid=&quot;langword_csharp_End&quot; name=&quot;End&quot; href=&quot;&quot;></xref>er allerede blitt kalt for denne asynkrone operasjonen."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Operasjonen kan ikke utføres fordi oppføringssekvensen ble åpnet med lesetilgang."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen er full."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.EndReserveAndAppend(System.IAsyncResult)
  id: EndReserveAndAppend(System.IAsyncResult)
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: EndReserveAndAppend(IAsyncResult)
  nameWithType: LogRecordSequence.EndReserveAndAppend(IAsyncResult)
  fullName: System.IO.Log.LogRecordSequence.EndReserveAndAppend(IAsyncResult)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Endene en asynkron reservere, og Legg til operasjonen. Denne metoden kan ikke arves."
  remarks: "Denne metoden blokkerer til at i/u-operasjonen er fullført. Feil som oppstår under en asynkron skriveforespørselen, for eksempel diskfeil under i/u-forespørselen blir synlige når EndReserveAndAppend kalles.       Denne metoden må kalles nøyaktig én gang for hver <xref:System.IAsyncResult>returnert av den <xref:System.IO.Log.LogRecordSequence.BeginReserveAndAppend%2A>metoden.</xref:System.IO.Log.LogRecordSequence.BeginReserveAndAppend%2A> </xref:System.IAsyncResult>"
  syntax:
    content: public System.IO.Log.SequenceNumber EndReserveAndAppend (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "En referanse til utestående asynkront i/u-forespørselen."
    return:
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for føyer loggposten."
  overload: System.IO.Log.LogRecordSequence.EndReserveAndAppend*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>result</code>er ugyldig."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke utføre forespørselen på grunn av et uventet unntak av i/u.       - eller - kan ikke utføre forespørselen på grunn av en i/u enheten."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref uid=&quot;langword_csharp_End&quot; name=&quot;End&quot; href=&quot;&quot;></xref>er allerede blitt kalt for denne asynkrone operasjonen."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Operasjonen kan ikke utføres fordi oppføringssekvensen ble åpnet med lesetilgang."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen er full."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.EndWriteRestartArea(System.IAsyncResult)
  id: EndWriteRestartArea(System.IAsyncResult)
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: EndWriteRestartArea(IAsyncResult)
  nameWithType: LogRecordSequence.EndWriteRestartArea(IAsyncResult)
  fullName: System.IO.Log.LogRecordSequence.EndWriteRestartArea(IAsyncResult)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Avslutter en asynkron Start området skriveoperasjon. Denne metoden kan ikke arves."
  remarks: "Denne metoden blokkerer til at i/u-operasjonen er fullført. Feil som oppstår under en asynkron skriveforespørselen, for eksempel diskfeil under i/u-forespørselen blir synlige når EndWriteRestartArea kalles.       Denne metoden må kalles nøyaktig én gang for hver <xref:System.IAsyncResult>returnert av den <xref:System.IO.Log.LogRecordSequence.BeginWriteRestartArea%2A>metoden.</xref:System.IO.Log.LogRecordSequence.BeginWriteRestartArea%2A> </xref:System.IAsyncResult>"
  syntax:
    content: public System.IO.Log.SequenceNumber EndWriteRestartArea (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "En referanse til utestående asynkront i/u-forespørselen."
    return:
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for skriftlig loggposten."
  overload: System.IO.Log.LogRecordSequence.EndWriteRestartArea*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>result</code>er ikke gyldig."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "En ny eller eksisterende arkivslutt eller grunntallet for den aktive loggen er ugyldig."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke utføre forespørselen på grunn av et uventet unntak av i/u."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref uid=&quot;langword_csharp_End&quot; name=&quot;End&quot; href=&quot;&quot;></xref>er allerede blitt kalt for denne asynkrone operasjonen."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen er full."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.Flush
  id: Flush
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: Flush()
  nameWithType: LogRecordSequence.Flush()
  fullName: System.IO.Log.LogRecordSequence.Flush()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Sikrer at alle nye oppføringer er skrevet. Denne metoden kan ikke arves."
  remarks: "Kaller denne metoden sikrer at alle poster som har blitt lagt til i <xref:System.IO.Log.LogRecordSequence>er skrevet robust.</xref:System.IO.Log.LogRecordSequence>"
  syntax:
    content: public System.IO.Log.SequenceNumber Flush ();
    parameters: []
    return:
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for den forrige posten skrevet."
  overload: System.IO.Log.LogRecordSequence.Flush*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil under skriving av data."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Denne operasjonen støttes ikke."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen kan ikke lage nok ledig plass til å inneholde det nye området for omstart."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den angitte loggen har ikke noen omfang. Én eller flere omfang må opprettes før du kan bruke en post-sekvens."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.Flush(System.IO.Log.SequenceNumber)
  id: Flush(System.IO.Log.SequenceNumber)
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: Flush(SequenceNumber)
  nameWithType: LogRecordSequence.Flush(SequenceNumber)
  fullName: System.IO.Log.LogRecordSequence.Flush(SequenceNumber)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Sikrer at alle nye poster til og med post med det angitte sekvensnummeret robust skrevet. Denne metoden kan ikke arves."
  remarks: "Kaller denne metoden sikrer at alle poster med sekvens tall opp til og med det angitte sekvensnummeret er robust skrevet."
  syntax:
    content: public System.IO.Log.SequenceNumber Flush (System.IO.Log.SequenceNumber sequenceNumber);
    parameters:
    - id: sequenceNumber
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for den nyeste posten må være skrevet. Hvis <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> er ugyldig, og alle poster må være skrevet."
    return:
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for den forrige posten skrevet."
  overload: System.IO.Log.LogRecordSequence.Flush*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sequenceNumber</code>er ikke gyldig for denne sekvensen."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>sequenceNumber</code>er ikke mellom basistypen og den siste sekvensnummeret til denne sekvensen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke utføre forespørselen på grunn av et uventet unntak av i/u."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den angitte loggen har ikke noen omfang. Én eller flere omfang må opprettes før du kan bruke en post-sekvens."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Operasjonen kan ikke utføres fordi oppføringssekvensen ble åpnet med lesetilgang."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen er full."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.LastSequenceNumber
  id: LastSequenceNumber
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: LastSequenceNumber
  nameWithType: LogRecordSequence.LastSequenceNumber
  fullName: System.IO.Log.LogRecordSequence.LastSequenceNumber
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Henter serienummeret som er større enn den siste posten legges"
  remarks: "Denne egenskapen inneholder et sekvensnummer som vil være større enn sekvensnummeret for sist legges post. Ugyldig serienumre er større enn eller lik <xref:System.IO.Log.LogRecordSequence.BaseSequenceNumber%2A>, og mindre enn LastSequenceNumber.</xref:System.IO.Log.LogRecordSequence.BaseSequenceNumber%2A> Alle andre serienumre er ugyldig."
  syntax:
    content: public System.IO.Log.SequenceNumber LastSequenceNumber { get; }
    return:
      type: System.IO.Log.SequenceNumber
      description: "Et sekvensnummer som er større enn den siste posten legges."
  overload: System.IO.Log.LogRecordSequence.LastSequenceNumber*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Egenskapen ble åpnet etter sekvensen har blitt fjernet av."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.LogStore
  id: LogStore
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: LogStore
  nameWithType: LogRecordSequence.LogStore
  fullName: System.IO.Log.LogRecordSequence.LogStore
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Henter den <xref href=&quot;System.IO.Log.LogStore&quot;> </xref> som inneholder dataene for denne sekvensnummeret. Denne metoden kan ikke arves."
  remarks: ''
  example:
  - "This example shows how to use the LogStore member to add extents.  \n  \n [!code-cs[S_UELogRecordSequence#11](~/add/codesnippet/csharp/p-system.io.log.logrecor_1_1.cs)]\n [!code-vb[S_UELogRecordSequence#11](~/add/codesnippet/visualbasic/p-system.io.log.logrecor_1_1.vb)]"
  syntax:
    content: public System.IO.Log.LogStore LogStore { get; }
    return:
      type: System.IO.Log.LogStore
      description: "Den <xref href=&quot;System.IO.Log.LogStore&quot;> </xref> som inneholder dataene for denne sekvensnummeret."
  overload: System.IO.Log.LogRecordSequence.LogStore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.MaximumRecordLength
  id: MaximumRecordLength
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: MaximumRecordLength
  nameWithType: LogRecordSequence.MaximumRecordLength
  fullName: System.IO.Log.LogRecordSequence.MaximumRecordLength
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Henter den maksimale størrelsen på en oppføring som kan legges til denne sekvensnummeret."
  syntax:
    content: public long MaximumRecordLength { get; }
    return:
      type: System.Int64
      description: "Den maksimale størrelsen på en oppføring som kan legges til denne sekvensnummeret."
  overload: System.IO.Log.LogRecordSequence.MaximumRecordLength*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)
  id: ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: ReadLogRecords(SequenceNumber,LogRecordEnumeratorType)
  nameWithType: LogRecordSequence.ReadLogRecords(SequenceNumber,LogRecordEnumeratorType)
  fullName: System.IO.Log.LogRecordSequence.ReadLogRecords(SequenceNumber,LogRecordEnumeratorType)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Returnerer en et tallsett samling poster i sekvensen. Denne metoden kan ikke arves."
  remarks: "Denne metoden returnerer et tallsett samling poster i sekvensen. Rekkefølgen på nummererte postene, avhengig av verdien for den `logRecordEnum` parameteren."
  example:
  - "This example shows how to use ReadLogRecords in a loop.  \n  \n [!code-cs[S_UELogRecordSequence#10](~/add/codesnippet/csharp/65162f37-dafe-4315-8e44-_1.cs)]\n [!code-vb[S_UELogRecordSequence#10](~/add/codesnippet/visualbasic/65162f37-dafe-4315-8e44-_1.vb)]"
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.IO.Log.LogRecord> ReadLogRecords (System.IO.Log.SequenceNumber start, System.IO.Log.LogRecordEnumeratorType logRecordEnum);
    parameters:
    - id: start
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for den første posten der skrivebeskyttede starter."
    - id: logRecordEnum
      type: System.IO.Log.LogRecordEnumeratorType
      description: "En gyldig <xref href=&quot;System.IO.Log.LogRecordEnumeratorType&quot;> </xref> verdi som angir måten (det vil si fremover eller bakover) i hvilke poster bør du lese fra en <xref href=&quot;System.IO.Log.LogRecordSequence&quot;> </xref>."
    return:
      type: System.Collections.Generic.IEnumerable{System.IO.Log.LogRecord}
      description: "En et tallsett samling med oppføringer i sekvensen."
  overload: System.IO.Log.LogRecordSequence.ReadLogRecords*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>start</code>er ikke gyldig for denne sekvensen.       - eller - <code>logRecordEnum</code> er ugyldig.       - eller - det angitte elementet ble ikke funnet i samlingen."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>start</code>er ikke mellom basistypen og den siste sekvensnummeret til denne sekvensen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke utføre forespørselen på grunn av et uventet unntak av i/u.       - eller - kan ikke utføre forespørselen på grunn av en i/u enheten.       - eller bufferstørrelsen brukes til å skrive loggposten er større enn bufferstørrelsen brukes til å lese den.       - eller - Oppføringssekvensen er skadet.       - eller den angitte loggfilformat eller versjonen er ugyldig.       - eller - posten ble skrevet med en inkompatibel versjon av post-sekvensen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Operasjonen er ugyldig fordi opplistingen ikke er startet. Et kall til <xref:System.Collections.IEnumerator.MoveNext*>må gjøres.</xref:System.Collections.IEnumerator.MoveNext*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.ReadRestartAreas
  id: ReadRestartAreas
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: ReadRestartAreas()
  nameWithType: LogRecordSequence.ReadRestartAreas()
  fullName: System.IO.Log.LogRecordSequence.ReadRestartAreas()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Returnerer en et tallsett samling av omstart-områder i sekvensen. Denne metoden kan ikke arves."
  remarks: "Start-områder listes opp i omvendt rekkefølge tallet rekkefølgen som er fra høyeste sekvensnummer til sekvensnummeret laveste. Start bare områder med serienumre mellom det siste sekvensnummeret og listes opp sekvensnummeret base."
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.IO.Log.LogRecord> ReadRestartAreas ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.IO.Log.LogRecord}
      description: "En et tallsett samling av omstart områder i sekvensen."
  overload: System.IO.Log.LogRecordSequence.ReadRestartAreas*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>start</code>er ikke mellom basistypen og den siste sekvensnummeret til denne sekvensen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke utføre forespørselen på grunn av et uventet unntak av i/u.       - eller - kan ikke utføre forespørselen på grunn av en i/u enheten.       - eller bufferstørrelsen brukes til å skrive loggposten er større enn bufferstørrelsen brukes til å lese den.       - eller - Oppføringssekvensen er skadet.       - eller den angitte loggfilformat eller versjonen er ugyldig.       - eller - posten ble skrevet med en inkompatibel versjon av post-sekvensen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Operasjonen er ugyldig fordi opplistingen ikke er startet. Et kall til <xref:System.Collections.IEnumerator.MoveNext*>må gjøres.</xref:System.Collections.IEnumerator.MoveNext*>       - eller opplistingen er avsluttet."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])
  id: ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: ReserveAndAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[])
  nameWithType: LogRecordSequence.ReserveAndAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[])
  fullName: System.IO.Log.LogRecordSequence.ReserveAndAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[])
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Gjør en enkelt reservasjon og legger til en oppføring i sekvensen automatisk. Denne metoden kan ikke arves."
  remarks: "Dataene i den `data` parameteren settes sammen til én bytematrise for tilføying som oppføringen. Ingen bestemmelser er imidlertid gjort for å dele data tilbake i matrisen segmenter når oppføringen er lest.       De angitte adressereservasjonene er lagt til den angitte reservasjonen tilføye samlingen i en udelelig operasjon med en post operasjonen. Hvis append mislykkes, er ikke nok plass reservert.       Denne metoden kan vanligvis fullføres før oppføringen er skrevet. For å sikre at en oppføring er skrevet, enten angi den <xref:System.IO.Log.RecordAppendOptions>flagget ved hjelp av den `recordAppendOptions` parameteren eller kall av <xref:System.IO.Log.LogRecordSequence.Flush%2A>metode.</xref:System.IO.Log.LogRecordSequence.Flush%2A> </xref:System.IO.Log.RecordAppendOptions>"
  example:
  - "The following example shows how to use this method to make reservations. Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.  \n  \n```  \nReservationCollection reservations = recordSequence.CreateReservationCollection();  \nlong[] lengthOfUndoRecords = new long[] { 1000 };  \nrecordSequence.ReserveAndAppend(recordData,  \n                                                     userSqn,  \n                                                     previousSqn,  \n                                                     RecordSequenceAppendOptions.None,  \n                                                     reservations,  \n                                                     lengthOfUndoRecords);  \nrecordSequence.Append(undoRecordData,    // If necessary …  \n                                    userSqn,  \n                                    previousSqn,  \n                                    RecordSequenceAppendOptions.ForceFlush,  \n                                    reservations);  \n```"
  syntax:
    content: public System.IO.Log.SequenceNumber ReserveAndAppend (ArraySegment<byte> data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations);
    parameters:
    - id: data
      type: System.ArraySegment{System.Byte}
      description: "En liste over byte matrise segmenter som skal settes sammen og legges som oppføringen."
    - id: nextUndoRecord
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for neste post i rekkefølgen som angis av brukeren."
    - id: previousRecord
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for neste post i forrige rekkefølge."
    - id: recordAppendOptions
      type: System.IO.Log.RecordAppendOptions
      description: "En gyldig verdi for <xref href=&quot;System.IO.Log.RecordAppendOptions&quot;> </xref> som angir hvor dataene skal skrives."
    - id: reservationCollection
      type: System.IO.Log.ReservationCollection
      description: "En <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref> som inneholder samlingen å reservere i."
    - id: reservations
      type: System.Int64[]
      description: "Adressereservasjonene foreta, i byte."
    return:
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for føyer loggposten."
  overload: System.IO.Log.LogRecordSequence.ReserveAndAppend*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>nextUndoRecord</code>eller <code>previousRecord</code> er ikke gyldig for denne sekvensen.       - eller - <code>data</code> kan ikke legges fordi den er større enn maksimalt antall poster.       - eller - <code>reservations</code> ikke ble opprettet av denne sekvensnummeret."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Ett eller flere av argumentene er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>nextUndoRecord</code>eller <code>previousRecord</code> er ikke mellom basistypen og den siste sekvensnummeret til denne sekvensen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke utføre forespørselen på grunn av et uventet unntak av i/u.       - eller - kan ikke utføre forespørselen på grunn av en i/u enheten."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Operasjonen kan ikke utføres fordi oppføringssekvensen ble åpnet med lesetilgang."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen er full."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  - type: System.IO.Log.ReservationNotFoundException
    commentId: T:System.IO.Log.ReservationNotFoundException
    description: "Ingen reservasjon stort nok til å få plass <code> data </code> finnes i <code> reservations </code>."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])
  id: ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: ReserveAndAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[])
  nameWithType: LogRecordSequence.ReserveAndAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[])
  fullName: System.IO.Log.LogRecordSequence.ReserveAndAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[])
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Gjør en enkelt reservasjon og legger til en oppføring i sekvensen automatisk. Denne metoden kan ikke arves."
  remarks: "Dataene i den `data` parameteren settes sammen til én bytematrise for tilføying som oppføringen. Ingen bestemmelser er imidlertid gjort for å dele data tilbake i matrisen segmenter når oppføringen er lest.       De angitte adressereservasjonene er lagt til den angitte reservasjonen tilføye samlingen i en udelelig operasjon med en post operasjonen. Hvis append mislykkes, er ikke nok plass reservert.       Denne metoden kan vanligvis fullføres før oppføringen er skrevet. For å sikre at en oppføring er skrevet, enten angi den <xref:System.IO.Log.RecordAppendOptions>flagget ved hjelp av den `recordAppendOptions` parameteren eller kall av <xref:System.IO.Log.LogRecordSequence.Flush%2A>metode.</xref:System.IO.Log.LogRecordSequence.Flush%2A> </xref:System.IO.Log.RecordAppendOptions>"
  syntax:
    content: public System.IO.Log.SequenceNumber ReserveAndAppend (System.Collections.Generic.IList<ArraySegment<byte>> data, System.IO.Log.SequenceNumber userRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations);
    parameters:
    - id: data
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: "En liste over byte matrise segmenter som skal settes sammen og legges som oppføringen."
    - id: userRecord
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for neste post i rekkefølgen som angis av brukeren."
    - id: previousRecord
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for neste post i forrige rekkefølge."
    - id: recordAppendOptions
      type: System.IO.Log.RecordAppendOptions
      description: "En gyldig verdi for <xref href=&quot;System.IO.Log.RecordAppendOptions&quot;> </xref> som angir hvor dataene skal skrives."
    - id: reservationCollection
      type: System.IO.Log.ReservationCollection
      description: "Reservasjonssamlingen å reservere i."
    - id: reservations
      type: System.Int64[]
      description: "Adressereservasjonene foreta, i byte."
    return:
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for føyer loggposten."
  overload: System.IO.Log.LogRecordSequence.ReserveAndAppend*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Én eller flere av argumentene er ugyldig."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil under tilføying oppføringen."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen kan ikke lage plass til å inneholde den nye oppføringen, eller foreta reservasjonen."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Ett eller flere av argumentene er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>userRecord</code>eller <code>previousRecord</code> er ikke mellom basistypen og den siste sekvensnummeret til denne sekvensen."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Operasjonen kan ikke utføres fordi oppføringssekvensen ble åpnet med lesetilgang."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  - type: System.IO.Log.ReservationNotFoundException
    commentId: T:System.IO.Log.ReservationNotFoundException
    description: "Ingen reservasjon stort nok til å få plass <code> data </code> finnes i <code> reservations </code>."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.ReservedBytes
  id: ReservedBytes
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: ReservedBytes
  nameWithType: LogRecordSequence.ReservedBytes
  fullName: System.IO.Log.LogRecordSequence.ReservedBytes
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Henter Totalt antall byte som er reservert."
  syntax:
    content: public long ReservedBytes { get; }
    return:
      type: System.Int64
      description: "Den totale størrelsen på alle adressereservasjonene som er gjort i denne sekvensnummeret."
  overload: System.IO.Log.LogRecordSequence.ReservedBytes*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Egenskapen ble åpnet etter sekvensen har blitt fjernet av."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.RestartSequenceNumber
  id: RestartSequenceNumber
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: RestartSequenceNumber
  nameWithType: LogRecordSequence.RestartSequenceNumber
  fullName: System.IO.Log.LogRecordSequence.RestartSequenceNumber
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Henter serienummeret for området omstart nærmest slutten av loggen."
  remarks: "En omstart av området brukes til å lagre informasjon som inneholder en klient siste kontrollpunktoperasjon. Vanlige Log File System (CLFS) opprettholder to Start områder for å garantere at minst én gyldig område er alltid tilgjengelig. Når en gjenoppretting er nødvendig, leser CLFS det Start området og alle data fra forrige kontrollpunkt for operasjonen. Disse dataene initialiserer transaksjonstabell-, endret sider tabellen, og åpne filtabellen slik at de kan brukes i gjenopprettingsprosessen.       Ved hjelp av den <xref:System.IO.Log.LogRecordSequence.SetLastRecord%2A>metoden, kan du fjerne de mest nylig er skrevet starte området.</xref:System.IO.Log.LogRecordSequence.SetLastRecord%2A>"
  syntax:
    content: public System.IO.Log.SequenceNumber RestartSequenceNumber { get; }
    return:
      type: System.IO.Log.SequenceNumber
      description: "Serienummeret for omstart området nærmest slutten av loggen."
  overload: System.IO.Log.LogRecordSequence.RestartSequenceNumber*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Egenskapen ble åpnet etter sekvensen har blitt fjernet av."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.RetryAppend
  id: RetryAppend
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: RetryAppend
  nameWithType: LogRecordSequence.RetryAppend
  fullName: System.IO.Log.LogRecordSequence.RetryAppend
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Henter eller angir en verdi som angir om tilføyer automatisk på nytt hvis loggen er full."
  remarks: "Hvis verdien for denne egenskapen `true`, og en <xref:System.IO.Log.LogRecordSequence.Append%2A>kallet mislykkes fordi det ikke er nok plass i sekvensen, post rekkefølgen vil prøve å ledig plass og prøv på nytt i append.</xref:System.IO.Log.LogRecordSequence.Append%2A>"
  example:
  - "This example shows how to use the RetryAppend property.  \n  \n [!code-cs[S_UELogRecordSequence#3](~/add/codesnippet/csharp/p-system.io.log.logrecor_0_1.cs)]\n [!code-vb[S_UELogRecordSequence#3](~/add/codesnippet/visualbasic/p-system.io.log.logrecor_0_1.vb)]"
  syntax:
    content: public bool RetryAppend { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis tilføyer automatisk på nytt hvis loggen er full. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Log.LogRecordSequence.RetryAppend*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Egenskapen ble åpnet etter sekvensen har blitt fjernet av."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.SetLastRecord(System.IO.Log.SequenceNumber)
  id: SetLastRecord(System.IO.Log.SequenceNumber)
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: SetLastRecord(SequenceNumber)
  nameWithType: LogRecordSequence.SetLastRecord(SequenceNumber)
  fullName: System.IO.Log.LogRecordSequence.SetLastRecord(SequenceNumber)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Angir den siste posten i den <xref href=&quot;System.IO.Log.LogRecordSequence&quot;> </xref>."
  remarks: "Det angitte sekvensnummeret må være større enn sekvensnummeret base.       Når denne metoden er fullført, vil alle poster som tidligere har blitt legges til serienumre større enn det angitte sekvensnummeret er utilgjengelige."
  syntax:
    content: public void SetLastRecord (System.IO.Log.SequenceNumber sequenceNumber);
    parameters:
    - id: sequenceNumber
      type: System.IO.Log.SequenceNumber
      description: "Den nye siste sekvens number i den <xref href=&quot;System.IO.Log.LogRecordSequence&quot;> </xref>.       Dette må referere til en gyldig gjeldende oppføring i loggen for øyeblikket."
  overload: System.IO.Log.LogRecordSequence.SetLastRecord*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sequenceNumber</code>er ikke gyldig for denne sekvensen."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "En ny eller eksisterende arkivslutt eller grunntallet for den aktive loggen er ugyldig.       - eller - <code> sequenceNumber </code> er ikke mellom basistypen og den siste sekvensnummeret til denne sekvensen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke utføre forespørselen på grunn av et uventet unntak av i/u.       - eller - slutten av loggen er nådd.       - eller den angitte loggfilformat eller versjonen er ugyldig."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.TailPinned
  id: TailPinned
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: TailPinned
  nameWithType: LogRecordSequence.TailPinned
  fullName: System.IO.Log.LogRecordSequence.TailPinned
  type: Event
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Signaliserer trenger å flytte slutten på sekvensen."
  remarks: "Du kan starte denne hendelsen når sekvensen post har gått tom for plass. Når denne hendelsen starter, flyttes slutten på sekvensen (det vil si base sekvensnummeret) Videresend å frigjøre plass.       Hendelsen kan starte når som helst når den registrere sekvensen avgjør at den må frigjøre plass, uansett årsak. CLFS policymotoren kan for eksempel velge å Start hendelsen å fastsette endene på to log-klienter som deler samme loggfilen er for langt fra hverandre. Frigjøre plass kan gjøres ved å skrive omstart områder, eller avkorte loggen og bruke den <xref:System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber%2A>metoden vil frigjøre plass.</xref:System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber%2A> Kodeeksempel i delen eksemplet viser den andre fremgangsmåten.       Du kan også kalle den <xref:System.IO.Log.FileRecordSequence.WriteRestartArea%2A>metoden utenfor TailPinned-hendelsen for å frigjøre plass.</xref:System.IO.Log.FileRecordSequence.WriteRestartArea%2A> Et omstartsområde er lik et kontrollpunkt i andre tjenestetråden systemer. Kaller denne metoden indikerer at programmet vurderer alle tidligere poster før start området som fullført, og brukes for fremtidige post tilføyer. I likhet med andre oppføringer, oppføringen skrevet av denne metoden krever faktisk ledig plass i loggen skal fungere."
  example:
  - "This example shows how to use the TailPinned event.  \n  \n```  \nrecordSequence.RetryAppend = true;  \nrecordSequence.TailPinned += new EventHandler<TailPinnedEventArgs>(HandleTailPinned);  \n  \nvoid HandleTailPinned(object sender, TailPinnedEventArgs tailPinnedEventArgs)  \n{  \n   // tailPinnedEventArgs.TargetSequenceNumber is the target   \n   // sequence number to free up space to.    \n   // However, this sequence number is not necessarily valid.  We have  \n   // to use this sequence number as a starting point for finding a  \n   // valid point within the log to advance toward. You need to  \n   // identify a record with a sequence number equal to, or greater  \n   // than TargetSequenceNumber; let's call this   \n   // realTargetSequenceNumber. Once found, move the base  \n  \n   recordSequence.AdvanceBaseSequenceNumber(realTargetSequenceNumber);  \n  \n}  \n```"
  syntax:
    content: public event EventHandler<System.IO.Log.TailPinnedEventArgs> TailPinned;
    return:
      type: System.EventHandler{System.IO.Log.TailPinnedEventArgs}
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})
  id: WriteRestartArea(System.ArraySegment{System.Byte})
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: WriteRestartArea(ArraySegment<Byte>)
  nameWithType: LogRecordSequence.WriteRestartArea(ArraySegment<Byte>)
  fullName: System.IO.Log.LogRecordSequence.WriteRestartArea(ArraySegment<Byte>)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Skriver en omstart av området til den <xref href=&quot;System.IO.Log.LogRecordSequence&quot;> </xref>. Denne metoden kan ikke arves."
  remarks: "En omstart av området brukes til å lagre informasjon som inneholder en klient siste kontrollpunktoperasjon. Vanlige Log File System (CLFS) opprettholder to Start områder for å garantere at minst én gyldig område er alltid tilgjengelig. Når en gjenoppretting er nødvendig, leser CLFS det Start området og alle data fra forrige kontrollpunkt for operasjonen. Disse dataene initialiserer transaksjonstabell-, endret sider tabellen, og åpne filtabellen slik at de kan brukes i gjenopprettingsprosessen.       En omstart av området kan leses ved hjelp av <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A>metode.</xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A>       Dataene i byte matrise segmenter skal settes sammen til én bytematrise for tilføying som oppføringen. Ingen bestemmelser gjøres for å dele data tilbake i matrisen segmenter når Start-området er lest."
  syntax:
    content: public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment<byte> data);
    parameters:
    - id: data
      type: System.ArraySegment{System.Byte}
      description: "En matrise segment som skal settes sammen og legges som oppføringen."
    return:
      type: System.IO.Log.SequenceNumber
      description: "Sekvensnummeret for den skriftlig starte området."
  overload: System.IO.Log.LogRecordSequence.WriteRestartArea*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Én eller flere av argumentene er ugyldig."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil under skriving området omstart."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen kan ikke lage nok ledig plass til å inneholde det nye området for omstart."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Ett eller flere av argumentene er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})
  id: WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: WriteRestartArea(IList<ArraySegment<Byte>>)
  nameWithType: LogRecordSequence.WriteRestartArea(IList<ArraySegment<Byte>>)
  fullName: System.IO.Log.LogRecordSequence.WriteRestartArea(IList<ArraySegment<Byte>>)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Skriver en omstart av området til den <xref href=&quot;System.IO.Log.LogRecordSequence&quot;> </xref>. Denne metoden kan ikke arves."
  remarks: "En omstart av området brukes til å lagre informasjon som inneholder en klient siste kontrollpunktoperasjon. Vanlige Log File System (CLFS) opprettholder to Start områder for å garantere at minst én gyldig område er alltid tilgjengelig. Når en gjenoppretting er nødvendig, leser CLFS det Start området og alle data fra forrige kontrollpunkt for operasjonen. Disse dataene initialiserer transaksjonstabell-, endret sider tabellen, og åpne filtabellen slik at de kan brukes i gjenopprettingsprosessen.       En omstart av området kan leses ved hjelp av <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A>metode.</xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A>       Dataene i byte matrise segmenter skal settes sammen til én bytematrise for tilføying som oppføringen. Ingen bestemmelser gjøres for å dele data tilbake i matrisen segmenter når Start-området er lest."
  syntax:
    content: public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList<ArraySegment<byte>> data);
    parameters:
    - id: data
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: "En liste over byte matrise segmenter som skal settes sammen og legges som oppføringen."
    return:
      type: System.IO.Log.SequenceNumber
      description: "Sekvensnummeret for den skriftlig starte området."
  overload: System.IO.Log.LogRecordSequence.WriteRestartArea*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Én eller flere av argumentene er ugyldig."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil under skriving området omstart."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen kan ikke lage nok ledig plass til å inneholde det nye området for omstart."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Ett eller flere av argumentene er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)
  id: WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: WriteRestartArea(ArraySegment<Byte>,SequenceNumber)
  nameWithType: LogRecordSequence.WriteRestartArea(ArraySegment<Byte>,SequenceNumber)
  fullName: System.IO.Log.LogRecordSequence.WriteRestartArea(ArraySegment<Byte>,SequenceNumber)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Skriver en omstart av området til den <xref href=&quot;System.IO.Log.LogRecordSequence&quot;> </xref> og oppdatere base serienummeret. Denne metoden kan ikke arves."
  remarks: "En omstart av området brukes til å lagre informasjon som inneholder en klient siste kontrollpunktoperasjon. Vanlige Log File System (CLFS) opprettholder to Start områder for å garantere at minst én gyldig område er alltid tilgjengelig. Når en gjenoppretting er nødvendig, leser CLFS det Start området og alle data fra forrige kontrollpunkt for operasjonen. Disse dataene initialiserer transaksjonstabell-, endret sider tabellen, og åpne filtabellen slik at de kan brukes i gjenopprettingsprosessen.       En omstart av området kan leses ved hjelp av <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A>metode.</xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A>       Når et omstartsområde er skrevet, satt dataene i byte matrise segmenter til en enkelt bytematrise for tilføying som oppføringen. Ingen bestemmelser gjøres for å dele data tilbake i matrisen segmenter når Start-området er lest.       Når denne metoden er fullført, er base sekvensnummeret oppdatert. Alle loggposter med serienumre under ny base sekvensnummeret er utilgjengelige.       Hvis en sekvensnummeret har blitt fjernet av, eller hvis du sender et ugyldig argument, er unntak oppstod umiddelbart i denne operasjonen. Feil som oppstod under en asynkron append-forespørsel, for eksempel diskfeil under i/u-forespørselen fører unntak som når den <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A>-metoden.</xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A>"
  syntax:
    content: public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment<byte> data, System.IO.Log.SequenceNumber newBaseSeqNum);
    parameters:
    - id: data
      type: System.ArraySegment{System.Byte}
      description: "En liste over byte matrise segmenter som skal settes sammen og legges som oppføringen."
    - id: newBaseSeqNum
      type: System.IO.Log.SequenceNumber
      description: "Ny base serienummeret. Det angitte sekvensnummeret må være større enn eller lik gjeldende base sekvensnummeret."
    return:
      type: System.IO.Log.SequenceNumber
      description: "Sekvensnummeret for den skriftlig starte området."
  overload: System.IO.Log.LogRecordSequence.WriteRestartArea*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Én eller flere av argumentene er ugyldig."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil under skriving området omstart."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen kan ikke lage nok ledig plass til å inneholde det nye området for omstart."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)
  id: WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: WriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber)
  nameWithType: LogRecordSequence.WriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber)
  fullName: System.IO.Log.LogRecordSequence.WriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Skriver en omstart av området til den <xref href=&quot;System.IO.Log.LogRecordSequence&quot;> </xref> og oppdatere base serienummeret. Denne metoden kan ikke arves."
  remarks: "En omstart av området brukes til å lagre informasjon som inneholder en klient siste kontrollpunktoperasjon. Vanlige Log File System (CLFS) opprettholder to Start områder for å garantere at minst én gyldig område er alltid tilgjengelig. Når en gjenoppretting er nødvendig, leser CLFS det Start området og alle data fra forrige kontrollpunkt for operasjonen. Disse dataene initialiserer transaksjonstabell-, endret sider tabellen, og åpne filtabellen slik at de kan brukes i gjenopprettingsprosessen.       En omstart av området kan leses ved hjelp av <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A>metode.</xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A>       Når et omstartsområde er skrevet, satt dataene i byte matrise segmenter til en enkelt bytematrise for tilføying som oppføringen. Ingen bestemmelser gjøres for å dele data tilbake i matrisen segmenter når Start-området er lest.       Når denne metoden er fullført, er base sekvensnummeret oppdatert. Alle loggposter med serienumre under ny base sekvensnummeret er utilgjengelige.       Hvis en sekvensnummeret har blitt fjernet av, eller hvis du sender et ugyldig argument, er unntak oppstod umiddelbart i denne operasjonen. Feil som oppstod under en asynkron append-forespørsel, for eksempel diskfeil under i/u-forespørselen fører unntak som når den <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A>-metoden.</xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A>"
  syntax:
    content: public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList<ArraySegment<byte>> data, System.IO.Log.SequenceNumber newBaseSeqNum);
    parameters:
    - id: data
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: "En liste over byte matrise segmenter som skal settes sammen og legges som oppføringen."
    - id: newBaseSeqNum
      type: System.IO.Log.SequenceNumber
      description: "Ny base serienummeret. Det angitte sekvensnummeret må være større enn eller lik gjeldende base sekvensnummeret."
    return:
      type: System.IO.Log.SequenceNumber
      description: "Sekvensnummeret for den skriftlig starte området."
  overload: System.IO.Log.LogRecordSequence.WriteRestartArea*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Én eller flere av argumentene er ugyldig."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil under skriving området omstart."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen kan ikke lage nok ledig plass til å inneholde det nye området for omstart."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)
  id: WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: WriteRestartArea(ArraySegment<Byte>,SequenceNumber,ReservationCollection)
  nameWithType: LogRecordSequence.WriteRestartArea(ArraySegment<Byte>,SequenceNumber,ReservationCollection)
  fullName: System.IO.Log.LogRecordSequence.WriteRestartArea(ArraySegment<Byte>,SequenceNumber,ReservationCollection)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Skriver en omstart av området til den <xref href=&quot;System.IO.Log.LogRecordSequence&quot;> </xref> bruker en reservasjon, og oppdatere base serienummeret. Denne metoden kan ikke arves."
  remarks: "En omstart av området brukes til å lagre informasjon som inneholder en klient siste kontrollpunktoperasjon. Vanlige Log File System (CLFS) opprettholder to Start områder for å garantere at minst én gyldig område er alltid tilgjengelig. Når en gjenoppretting er nødvendig, leser CLFS det Start området og alle data fra forrige kontrollpunkt for operasjonen. Disse dataene initialiserer transaksjonstabell-, endret sider tabellen, og åpne filtabellen slik at de kan brukes i gjenopprettingsprosessen.       En omstart av området kan leses ved hjelp av <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A>metode.</xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A>       Når et omstartsområde er skrevet, satt dataene i byte matrise segmenter til en enkelt bytematrise for tilføying som oppføringen. Ingen bestemmelser gjøres for å dele data tilbake i matrisen segmenter når Start-området er lest.       Hvis en reservasjon er angitt, bruke området skriftlig omstart plassen som er tidligere reservert, ved hjelp av en reservasjon i samlingen. Hvis metoden lykkes, vil den bruke minste reservasjonen som kan inneholde dataene, og at reservasjon fjernes fra samlingen.       Når denne metoden er fullført, er base sekvensnummeret oppdatert. Alle loggposter med serienumre under ny base sekvensnummeret er utilgjengelige.       Hvis en sekvensnummeret har blitt fjernet av, eller hvis du sender et ugyldig argument, er unntak oppstod umiddelbart i denne operasjonen. Feil som oppstod under en asynkron append-forespørsel, for eksempel diskfeil under i/u-forespørselen fører unntak som når den <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A>-metoden.</xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A>"
  syntax:
    content: public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment<byte> data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservations);
    parameters:
    - id: data
      type: System.ArraySegment{System.Byte}
      description: "En liste over byte matrise segmenter som skal settes sammen og legges som oppføringen."
    - id: newBaseSeqNum
      type: System.IO.Log.SequenceNumber
      description: "Ny base serienummeret. Det angitte sekvensnummeret må være større enn eller lik gjeldende base sekvensnummeret."
    - id: reservations
      type: System.IO.Log.ReservationCollection
      description: "En <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref> som inneholder reservasjonen som skal brukes for dette området for omstart."
    return:
      type: System.IO.Log.SequenceNumber
      description: "Sekvensnummeret for den skriftlig starte området."
  overload: System.IO.Log.LogRecordSequence.WriteRestartArea*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Én eller flere av argumentene er ugyldig."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil under skriving området omstart."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen kan ikke lage nok ledig plass til å inneholde det nye området for omstart."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  platform:
  - net462
- uid: System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)
  id: WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)
  parent: System.IO.Log.LogRecordSequence
  langs:
  - csharp
  name: WriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber,ReservationCollection)
  nameWithType: LogRecordSequence.WriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber,ReservationCollection)
  fullName: System.IO.Log.LogRecordSequence.WriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber,ReservationCollection)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Skriver en omstart av området til den <xref href=&quot;System.IO.Log.LogRecordSequence&quot;> </xref> bruker en reservasjon, og oppdatere base serienummeret. Denne metoden kan ikke arves."
  remarks: "En omstart av området brukes til å lagre informasjon som inneholder en klient siste kontrollpunktoperasjon. Vanlige Log File System (CLFS) opprettholder to Start områder for å garantere at minst én gyldig område er alltid tilgjengelig. Når en gjenoppretting er nødvendig, leser CLFS det Start området og alle data fra forrige kontrollpunkt for operasjonen. Disse dataene initialiserer transaksjonstabell-, endret sider tabellen, og åpne filtabellen slik at de kan brukes i gjenopprettingsprosessen.       En omstart av området kan leses ved hjelp av <xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A>metode.</xref:System.IO.Log.LogRecordSequence.ReadRestartAreas%2A>       Når et omstartsområde er skrevet, satt dataene i byte matrise segmenter til en enkelt bytematrise for tilføying som oppføringen. Ingen bestemmelser gjøres for å dele data tilbake i matrisen segmenter når Start-området er lest.       Hvis en reservasjon er angitt, bruke området skriftlig omstart plassen som er tidligere reservert, ved hjelp av en reservasjon i samlingen. Hvis metoden lykkes, vil den bruke minste reservasjonen som kan inneholde dataene, og at reservasjon fjernes fra samlingen.       Når denne metoden er fullført, er base sekvensnummeret oppdatert. Alle loggposter med serienumre under ny base sekvensnummeret er utilgjengelige.       Hvis en sekvensnummeret har blitt fjernet av, eller hvis du sender et ugyldig argument, er unntak oppstod umiddelbart i denne operasjonen. Feil som oppstod under en asynkron append-forespørsel, for eksempel diskfeil under i/u-forespørselen fører unntak som når den <xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A>-metoden.</xref:System.IO.Log.LogRecordSequence.EndReserveAndAppend%2A>"
  syntax:
    content: public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList<ArraySegment<byte>> data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservationCollection);
    parameters:
    - id: data
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: "En liste over byte matrise segmenter som skal settes sammen og legges som oppføringen."
    - id: newBaseSeqNum
      type: System.IO.Log.SequenceNumber
      description: "Ny base serienummeret. Det angitte sekvensnummeret må være større enn eller lik gjeldende base sekvensnummeret."
    - id: reservationCollection
      type: System.IO.Log.ReservationCollection
      description: "En <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref> som inneholder reservasjonen som skal brukes for dette området for omstart."
    return:
      type: System.IO.Log.SequenceNumber
      description: "Sekvensnummeret for den skriftlig starte området."
  overload: System.IO.Log.LogRecordSequence.WriteRestartArea*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>newBaseSeqNum</code>er ikke gyldig for denne sekvensen.       - eller det angitte opplisting start loggsekvensnummeret er ugyldig.       - eller - <code>data</code> kan ikke legges fordi den er større enn maksimalt antall poster.       - eller - <code>reservationCollection</code> ikke ble opprettet av denne sekvensnummeret."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Én eller flere av parameterne er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "En ny eller eksisterende arkivslutt eller grunntallet for den aktive loggen er ugyldig.       - eller - <code> newBaseSeqNum </code> er ikke mellom basistypen og den siste sekvensnummeret til denne sekvensen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke utføre forespørselen på grunn av et uventet unntak av i/u.       - eller - kan ikke utføre forespørselen på grunn av en i/u enheten."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden ble kalt etter sekvensen har blitt fjernet av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til å fortsette kjøringen av programmet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ingen tilgang for den angitte Logg sekvensen av operativsystemet."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Oppføringssekvensen er full."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IO.Log.SequenceFullException
  parent: System.IO.Log
  isExternal: false
  name: SequenceFullException
  nameWithType: SequenceFullException
  fullName: System.IO.Log.SequenceFullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.Log.ReservationNotFoundException
  parent: System.IO.Log
  isExternal: false
  name: ReservationNotFoundException
  nameWithType: ReservationNotFoundException
  fullName: System.IO.Log.ReservationNotFoundException
- uid: System.IO.Log.LogRecordSequence.#ctor(System.IO.Log.LogStore)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: LogRecordSequence(LogStore)
  nameWithType: LogRecordSequence.LogRecordSequence(LogStore)
  fullName: System.IO.Log.LogRecordSequence.LogRecordSequence(LogStore)
- uid: System.IO.Log.LogStore
  parent: System.IO.Log
  isExternal: false
  name: LogStore
  nameWithType: LogStore
  fullName: System.IO.Log.LogStore
- uid: System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: LogRecordSequence(String,FileMode)
  nameWithType: LogRecordSequence.LogRecordSequence(String,FileMode)
  fullName: System.IO.Log.LogRecordSequence.LogRecordSequence(String,FileMode)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.Log.LogRecordSequence.#ctor(System.IO.Log.LogStore,System.Int32,System.Int32)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: LogRecordSequence(LogStore,Int32,Int32)
  nameWithType: LogRecordSequence.LogRecordSequence(LogStore,Int32,Int32)
  fullName: System.IO.Log.LogRecordSequence.LogRecordSequence(LogStore,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: LogRecordSequence(String,FileMode,FileAccess)
  nameWithType: LogRecordSequence.LogRecordSequence(String,FileMode,FileAccess)
  fullName: System.IO.Log.LogRecordSequence.LogRecordSequence(String,FileMode,FileAccess)
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: LogRecordSequence(String,FileMode,FileAccess,FileShare)
  nameWithType: LogRecordSequence.LogRecordSequence(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.Log.LogRecordSequence.LogRecordSequence(String,FileMode,FileAccess,FileShare)
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
- uid: System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Int32)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: LogRecordSequence(String,FileMode,FileAccess,FileShare,Int32,Int32)
  nameWithType: LogRecordSequence.LogRecordSequence(String,FileMode,FileAccess,FileShare,Int32,Int32)
  fullName: System.IO.Log.LogRecordSequence.LogRecordSequence(String,FileMode,FileAccess,FileShare,Int32,Int32)
- uid: System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Int32,System.Security.AccessControl.FileSecurity)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: LogRecordSequence(String,FileMode,FileAccess,FileShare,Int32,Int32,FileSecurity)
  nameWithType: LogRecordSequence.LogRecordSequence(String,FileMode,FileAccess,FileShare,Int32,Int32,FileSecurity)
  fullName: System.IO.Log.LogRecordSequence.LogRecordSequence(String,FileMode,FileAccess,FileShare,Int32,Int32,FileSecurity)
- uid: System.Security.AccessControl.FileSecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSecurity
  nameWithType: FileSecurity
  fullName: System.Security.AccessControl.FileSecurity
- uid: System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: AdvanceBaseSequenceNumber(SequenceNumber)
  nameWithType: LogRecordSequence.AdvanceBaseSequenceNumber(SequenceNumber)
  fullName: System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber(SequenceNumber)
- uid: System.IO.Log.SequenceNumber
  parent: System.IO.Log
  isExternal: false
  name: SequenceNumber
  nameWithType: SequenceNumber
  fullName: System.IO.Log.SequenceNumber
- uid: System.IO.Log.LogRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: Append(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions)
  nameWithType: LogRecordSequence.Append(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions)
  fullName: System.IO.Log.LogRecordSequence.Append(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions)
- uid: System.ArraySegment{System.Byte}
  parent: System
  isExternal: true
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment<System.Byte>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Log.RecordAppendOptions
  parent: System.IO.Log
  isExternal: false
  name: RecordAppendOptions
  nameWithType: RecordAppendOptions
  fullName: System.IO.Log.RecordAppendOptions
- uid: System.IO.Log.LogRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: Append(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions)
  nameWithType: LogRecordSequence.Append(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions)
  fullName: System.IO.Log.LogRecordSequence.Append(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions)
- uid: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<ArraySegment<Byte>>
  nameWithType: IList<ArraySegment<Byte>>
  fullName: System.Collections.Generic.IList<System.ArraySegment<System.Byte>>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.ArraySegment<System.Byte>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment<System.Byte>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Log.LogRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: Append(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection)
  nameWithType: LogRecordSequence.Append(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection)
  fullName: System.IO.Log.LogRecordSequence.Append(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection)
- uid: System.IO.Log.ReservationCollection
  parent: System.IO.Log
  isExternal: false
  name: ReservationCollection
  nameWithType: ReservationCollection
  fullName: System.IO.Log.ReservationCollection
- uid: System.IO.Log.LogRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: Append(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection)
  nameWithType: LogRecordSequence.Append(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection)
  fullName: System.IO.Log.LogRecordSequence.Append(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection)
- uid: System.IO.Log.LogRecordSequence.BaseSequenceNumber
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: BaseSequenceNumber
  nameWithType: LogRecordSequence.BaseSequenceNumber
  fullName: System.IO.Log.LogRecordSequence.BaseSequenceNumber
- uid: System.IO.Log.LogRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: BeginAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,AsyncCallback,Object)
  nameWithType: LogRecordSequence.BeginAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,AsyncCallback,Object)
  fullName: System.IO.Log.LogRecordSequence.BeginAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IO.Log.LogRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: BeginAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,AsyncCallback,Object)
  nameWithType: LogRecordSequence.BeginAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,AsyncCallback,Object)
  fullName: System.IO.Log.LogRecordSequence.BeginAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,AsyncCallback,Object)
- uid: System.IO.Log.LogRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: BeginAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,AsyncCallback,Object)
  nameWithType: LogRecordSequence.BeginAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,AsyncCallback,Object)
  fullName: System.IO.Log.LogRecordSequence.BeginAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,AsyncCallback,Object)
- uid: System.IO.Log.LogRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: BeginAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,AsyncCallback,Object)
  nameWithType: LogRecordSequence.BeginAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,AsyncCallback,Object)
  fullName: System.IO.Log.LogRecordSequence.BeginAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,AsyncCallback,Object)
- uid: System.IO.Log.LogRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: BeginFlush(SequenceNumber,AsyncCallback,Object)
  nameWithType: LogRecordSequence.BeginFlush(SequenceNumber,AsyncCallback,Object)
  fullName: System.IO.Log.LogRecordSequence.BeginFlush(SequenceNumber,AsyncCallback,Object)
- uid: System.IO.Log.LogRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: BeginReserveAndAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[],AsyncCallback,Object)
  nameWithType: LogRecordSequence.BeginReserveAndAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[],AsyncCallback,Object)
  fullName: System.IO.Log.LogRecordSequence.BeginReserveAndAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[],AsyncCallback,Object)
- uid: System.Int64[]
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64[]
  spec.csharp:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: Int64[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Log.LogRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: BeginReserveAndAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[],AsyncCallback,Object)
  nameWithType: LogRecordSequence.BeginReserveAndAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[],AsyncCallback,Object)
  fullName: System.IO.Log.LogRecordSequence.BeginReserveAndAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[],AsyncCallback,Object)
- uid: System.IO.Log.LogRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: BeginWriteRestartArea(ArraySegment<Byte>,SequenceNumber,ReservationCollection,AsyncCallback,Object)
  nameWithType: LogRecordSequence.BeginWriteRestartArea(ArraySegment<Byte>,SequenceNumber,ReservationCollection,AsyncCallback,Object)
  fullName: System.IO.Log.LogRecordSequence.BeginWriteRestartArea(ArraySegment<Byte>,SequenceNumber,ReservationCollection,AsyncCallback,Object)
- uid: System.IO.Log.LogRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: BeginWriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber,ReservationCollection,AsyncCallback,Object)
  nameWithType: LogRecordSequence.BeginWriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber,ReservationCollection,AsyncCallback,Object)
  fullName: System.IO.Log.LogRecordSequence.BeginWriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber,ReservationCollection,AsyncCallback,Object)
- uid: System.IO.Log.LogRecordSequence.CreateReservationCollection
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: CreateReservationCollection()
  nameWithType: LogRecordSequence.CreateReservationCollection()
  fullName: System.IO.Log.LogRecordSequence.CreateReservationCollection()
- uid: System.IO.Log.LogRecordSequence.Dispose
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: Dispose()
  nameWithType: LogRecordSequence.Dispose()
  fullName: System.IO.Log.LogRecordSequence.Dispose()
- uid: System.IO.Log.LogRecordSequence.EndAppend(System.IAsyncResult)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: EndAppend(IAsyncResult)
  nameWithType: LogRecordSequence.EndAppend(IAsyncResult)
  fullName: System.IO.Log.LogRecordSequence.EndAppend(IAsyncResult)
- uid: System.IO.Log.LogRecordSequence.EndFlush(System.IAsyncResult)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: EndFlush(IAsyncResult)
  nameWithType: LogRecordSequence.EndFlush(IAsyncResult)
  fullName: System.IO.Log.LogRecordSequence.EndFlush(IAsyncResult)
- uid: System.IO.Log.LogRecordSequence.EndReserveAndAppend(System.IAsyncResult)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: EndReserveAndAppend(IAsyncResult)
  nameWithType: LogRecordSequence.EndReserveAndAppend(IAsyncResult)
  fullName: System.IO.Log.LogRecordSequence.EndReserveAndAppend(IAsyncResult)
- uid: System.IO.Log.LogRecordSequence.EndWriteRestartArea(System.IAsyncResult)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: EndWriteRestartArea(IAsyncResult)
  nameWithType: LogRecordSequence.EndWriteRestartArea(IAsyncResult)
  fullName: System.IO.Log.LogRecordSequence.EndWriteRestartArea(IAsyncResult)
- uid: System.IO.Log.LogRecordSequence.Flush
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: Flush()
  nameWithType: LogRecordSequence.Flush()
  fullName: System.IO.Log.LogRecordSequence.Flush()
- uid: System.IO.Log.LogRecordSequence.Flush(System.IO.Log.SequenceNumber)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: Flush(SequenceNumber)
  nameWithType: LogRecordSequence.Flush(SequenceNumber)
  fullName: System.IO.Log.LogRecordSequence.Flush(SequenceNumber)
- uid: System.IO.Log.LogRecordSequence.LastSequenceNumber
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: LastSequenceNumber
  nameWithType: LogRecordSequence.LastSequenceNumber
  fullName: System.IO.Log.LogRecordSequence.LastSequenceNumber
- uid: System.IO.Log.LogRecordSequence.LogStore
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: LogStore
  nameWithType: LogRecordSequence.LogStore
  fullName: System.IO.Log.LogRecordSequence.LogStore
- uid: System.IO.Log.LogRecordSequence.MaximumRecordLength
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: MaximumRecordLength
  nameWithType: LogRecordSequence.MaximumRecordLength
  fullName: System.IO.Log.LogRecordSequence.MaximumRecordLength
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Log.LogRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: ReadLogRecords(SequenceNumber,LogRecordEnumeratorType)
  nameWithType: LogRecordSequence.ReadLogRecords(SequenceNumber,LogRecordEnumeratorType)
  fullName: System.IO.Log.LogRecordSequence.ReadLogRecords(SequenceNumber,LogRecordEnumeratorType)
- uid: System.Collections.Generic.IEnumerable{System.IO.Log.LogRecord}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<LogRecord>
  nameWithType: IEnumerable<LogRecord>
  fullName: System.Collections.Generic.IEnumerable<System.IO.Log.LogRecord>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IO.Log.LogRecord>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Log.LogRecord
    name: LogRecord
    nameWithType: LogRecord
    fullName: LogRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Log.LogRecordEnumeratorType
  parent: System.IO.Log
  isExternal: false
  name: LogRecordEnumeratorType
  nameWithType: LogRecordEnumeratorType
  fullName: System.IO.Log.LogRecordEnumeratorType
- uid: System.IO.Log.LogRecordSequence.ReadRestartAreas
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: ReadRestartAreas()
  nameWithType: LogRecordSequence.ReadRestartAreas()
  fullName: System.IO.Log.LogRecordSequence.ReadRestartAreas()
- uid: System.IO.Log.LogRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: ReserveAndAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[])
  nameWithType: LogRecordSequence.ReserveAndAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[])
  fullName: System.IO.Log.LogRecordSequence.ReserveAndAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[])
- uid: System.IO.Log.LogRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: ReserveAndAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[])
  nameWithType: LogRecordSequence.ReserveAndAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[])
  fullName: System.IO.Log.LogRecordSequence.ReserveAndAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[])
- uid: System.IO.Log.LogRecordSequence.ReservedBytes
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: ReservedBytes
  nameWithType: LogRecordSequence.ReservedBytes
  fullName: System.IO.Log.LogRecordSequence.ReservedBytes
- uid: System.IO.Log.LogRecordSequence.RestartSequenceNumber
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: RestartSequenceNumber
  nameWithType: LogRecordSequence.RestartSequenceNumber
  fullName: System.IO.Log.LogRecordSequence.RestartSequenceNumber
- uid: System.IO.Log.LogRecordSequence.RetryAppend
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: RetryAppend
  nameWithType: LogRecordSequence.RetryAppend
  fullName: System.IO.Log.LogRecordSequence.RetryAppend
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Log.LogRecordSequence.SetLastRecord(System.IO.Log.SequenceNumber)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: SetLastRecord(SequenceNumber)
  nameWithType: LogRecordSequence.SetLastRecord(SequenceNumber)
  fullName: System.IO.Log.LogRecordSequence.SetLastRecord(SequenceNumber)
- uid: System.IO.Log.LogRecordSequence.TailPinned
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: TailPinned
  nameWithType: LogRecordSequence.TailPinned
  fullName: System.IO.Log.LogRecordSequence.TailPinned
- uid: System.EventHandler{System.IO.Log.TailPinnedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<TailPinnedEventArgs>
  nameWithType: EventHandler<TailPinnedEventArgs>
  fullName: System.EventHandler<System.IO.Log.TailPinnedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.IO.Log.TailPinnedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Log.TailPinnedEventArgs
    name: TailPinnedEventArgs
    nameWithType: TailPinnedEventArgs
    fullName: TailPinnedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: WriteRestartArea(ArraySegment<Byte>)
  nameWithType: LogRecordSequence.WriteRestartArea(ArraySegment<Byte>)
  fullName: System.IO.Log.LogRecordSequence.WriteRestartArea(ArraySegment<Byte>)
- uid: System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: WriteRestartArea(IList<ArraySegment<Byte>>)
  nameWithType: LogRecordSequence.WriteRestartArea(IList<ArraySegment<Byte>>)
  fullName: System.IO.Log.LogRecordSequence.WriteRestartArea(IList<ArraySegment<Byte>>)
- uid: System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: WriteRestartArea(ArraySegment<Byte>,SequenceNumber)
  nameWithType: LogRecordSequence.WriteRestartArea(ArraySegment<Byte>,SequenceNumber)
  fullName: System.IO.Log.LogRecordSequence.WriteRestartArea(ArraySegment<Byte>,SequenceNumber)
- uid: System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: WriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber)
  nameWithType: LogRecordSequence.WriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber)
  fullName: System.IO.Log.LogRecordSequence.WriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber)
- uid: System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: WriteRestartArea(ArraySegment<Byte>,SequenceNumber,ReservationCollection)
  nameWithType: LogRecordSequence.WriteRestartArea(ArraySegment<Byte>,SequenceNumber,ReservationCollection)
  fullName: System.IO.Log.LogRecordSequence.WriteRestartArea(ArraySegment<Byte>,SequenceNumber,ReservationCollection)
- uid: System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: WriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber,ReservationCollection)
  nameWithType: LogRecordSequence.WriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber,ReservationCollection)
  fullName: System.IO.Log.LogRecordSequence.WriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber,ReservationCollection)
- uid: System.IO.Log.LogRecordSequence.#ctor*
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: LogRecordSequence
  nameWithType: LogRecordSequence.LogRecordSequence
- uid: System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber*
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: AdvanceBaseSequenceNumber
  nameWithType: LogRecordSequence.AdvanceBaseSequenceNumber
- uid: System.IO.Log.LogRecordSequence.Append*
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: Append
  nameWithType: LogRecordSequence.Append
- uid: System.IO.Log.LogRecordSequence.BaseSequenceNumber*
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: BaseSequenceNumber
  nameWithType: LogRecordSequence.BaseSequenceNumber
- uid: System.IO.Log.LogRecordSequence.BeginAppend*
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: BeginAppend
  nameWithType: LogRecordSequence.BeginAppend
- uid: System.IO.Log.LogRecordSequence.BeginFlush*
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: BeginFlush
  nameWithType: LogRecordSequence.BeginFlush
- uid: System.IO.Log.LogRecordSequence.BeginReserveAndAppend*
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: BeginReserveAndAppend
  nameWithType: LogRecordSequence.BeginReserveAndAppend
- uid: System.IO.Log.LogRecordSequence.BeginWriteRestartArea*
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: BeginWriteRestartArea
  nameWithType: LogRecordSequence.BeginWriteRestartArea
- uid: System.IO.Log.LogRecordSequence.CreateReservationCollection*
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: CreateReservationCollection
  nameWithType: LogRecordSequence.CreateReservationCollection
- uid: System.IO.Log.LogRecordSequence.Dispose*
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: Dispose
  nameWithType: LogRecordSequence.Dispose
- uid: System.IO.Log.LogRecordSequence.EndAppend*
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: EndAppend
  nameWithType: LogRecordSequence.EndAppend
- uid: System.IO.Log.LogRecordSequence.EndFlush*
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: EndFlush
  nameWithType: LogRecordSequence.EndFlush
- uid: System.IO.Log.LogRecordSequence.EndReserveAndAppend*
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: EndReserveAndAppend
  nameWithType: LogRecordSequence.EndReserveAndAppend
- uid: System.IO.Log.LogRecordSequence.EndWriteRestartArea*
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: EndWriteRestartArea
  nameWithType: LogRecordSequence.EndWriteRestartArea
- uid: System.IO.Log.LogRecordSequence.Flush*
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: Flush
  nameWithType: LogRecordSequence.Flush
- uid: System.IO.Log.LogRecordSequence.LastSequenceNumber*
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: LastSequenceNumber
  nameWithType: LogRecordSequence.LastSequenceNumber
- uid: System.IO.Log.LogRecordSequence.LogStore*
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: LogStore
  nameWithType: LogRecordSequence.LogStore
- uid: System.IO.Log.LogRecordSequence.MaximumRecordLength*
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: MaximumRecordLength
  nameWithType: LogRecordSequence.MaximumRecordLength
- uid: System.IO.Log.LogRecordSequence.ReadLogRecords*
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: ReadLogRecords
  nameWithType: LogRecordSequence.ReadLogRecords
- uid: System.IO.Log.LogRecordSequence.ReadRestartAreas*
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: ReadRestartAreas
  nameWithType: LogRecordSequence.ReadRestartAreas
- uid: System.IO.Log.LogRecordSequence.ReserveAndAppend*
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: ReserveAndAppend
  nameWithType: LogRecordSequence.ReserveAndAppend
- uid: System.IO.Log.LogRecordSequence.ReservedBytes*
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: ReservedBytes
  nameWithType: LogRecordSequence.ReservedBytes
- uid: System.IO.Log.LogRecordSequence.RestartSequenceNumber*
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: RestartSequenceNumber
  nameWithType: LogRecordSequence.RestartSequenceNumber
- uid: System.IO.Log.LogRecordSequence.RetryAppend*
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: RetryAppend
  nameWithType: LogRecordSequence.RetryAppend
- uid: System.IO.Log.LogRecordSequence.SetLastRecord*
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: SetLastRecord
  nameWithType: LogRecordSequence.SetLastRecord
- uid: System.IO.Log.LogRecordSequence.WriteRestartArea*
  parent: System.IO.Log.LogRecordSequence
  isExternal: false
  name: WriteRestartArea
  nameWithType: LogRecordSequence.WriteRestartArea
