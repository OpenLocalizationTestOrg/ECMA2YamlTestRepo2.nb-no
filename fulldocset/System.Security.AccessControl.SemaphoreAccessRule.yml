### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.SemaphoreAccessRule
  id: SemaphoreAccessRule
  children:
  - System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights
  langs:
  - csharp
  name: SemaphoreAccessRule
  nameWithType: SemaphoreAccessRule
  fullName: System.Security.AccessControl.SemaphoreAccessRule
  type: Class
  summary: "Representerer et sett med tilgangsrettigheter gitt eller nektet for en bruker eller gruppe. Denne klassen kan ikke arves."
  remarks: "Klassen SemaphoreAccessRule er blant et sett med klasser som .NET Framework gir for å administrere Windows access control sikkerhet på navngitte system semaforer. Hvis du vil se en oversikt over disse klassene og deres forhold til den underliggende Windows access control-strukturen kan <xref:System.Security.AccessControl.SemaphoreSecurity>.</xref:System.Security.AccessControl.SemaphoreSecurity>      > [!NOTE] > Windows access control sikkerhet er betydning bare for navnet system semaforer. Hvis en <xref:System.Threading.Semaphore>objektet representerer en lokal semafor, tilgangskontroll er relevant.</xref:System.Threading.Semaphore>       For å hente en liste over regler som er aktivert for en navngitt semafor, kan du bruke den <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName>metode for å få en <xref:System.Security.AccessControl.SemaphoreSecurity>objekt, og bruk den <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A>metode for å hente en samling SemaphoreAccessRule objekter.</xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> </xref:System.Security.AccessControl.SemaphoreSecurity> </xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName>       SemaphoreAccessRule objekter tilordner ikke en med tilgangskontrolloppføringer i den underliggende detaljert tilgangskontrollisten (DACL). Når du får settet med alle tilgangsregler for en semafor, inneholder settet det minste antallet regler for øyeblikket må express alle tilgangskontrolloppføringer.      > [!NOTE] > Underliggende tilgangskontrolloppføringer endre som du bruker, og Fjern regler. Informasjonen i regler slås sammen hvis mulig hvis du vil beholde det minste antallet tilgangskontrolloppføringer. Derfor når du leser gjeldende liste over regler, kan den ikke se nøyaktig som listen over alle regler som du har lagt til.       Bruk SemaphoreAccessRule objekter til å angi tilgangsrettigheter til å tillate eller avslå for en bruker eller gruppe. En SemaphoreAccessRule objektet alltid representerer tilgang eller nektet tilgang aldri begge.       Du kan bruke en regel til en navngitt systemsemafor ved bruk av <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName>metode for å få den <xref:System.Security.AccessControl.SemaphoreSecurity>objektet.</xref:System.Security.AccessControl.SemaphoreSecurity> </xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName> Endre den <xref:System.Security.AccessControl.SemaphoreSecurity>objektet ved hjelp av metodene å legge til regelen, og deretter bruke den <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName>metode for å knytte security-objektet.</xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName> </xref:System.Security.AccessControl.SemaphoreSecurity>      > [!IMPORTANT] > Du endrer en <xref:System.Security.AccessControl.SemaphoreSecurity>objektet påvirker ikke rettigheter til en navngitt semaforen før du kaller den <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName>metode for å tilordne det endrede sikkerhetsobjektet til navngitt semaforen.</xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName> </xref:System.Security.AccessControl.SemaphoreSecurity>       SemaphoreAccessRule objekter er uforanderlig. Sikkerhet for en semafor er endret ved hjelp av metodene for den <xref:System.Security.AccessControl.SemaphoreSecurity>klassen for å legge til eller Fjern regler; som du gjør dette, underliggende tilgangskontrolloppføringer er endret.</xref:System.Security.AccessControl.SemaphoreSecurity>      > [!NOTE] > Sikkerhet på synkroniseringsobjektene støttes ikke for Windows 98 eller installasjonen."
  example:
  - "The following code example demonstrates the separation between <xref:System.Security.AccessControl.AccessControlType> rules and <xref:System.Security.AccessControl.AccessControlType> rules, and shows the combination of rights in compatible rules. The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules. The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType> rule.  \n  \n> [!NOTE]\n>  This example does not attach the security object to a <xref:System.Threading.Semaphore> object. Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName>.  \n  \n [!code-cs[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/add/codesnippet/csharp/t-system.security.access_3_1.cs)]\n [!code-vb[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/add/codesnippet/visualbasic/t-system.security.access_3_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class SemaphoreAccessRule : System.Security.AccessControl.AccessRule
  inheritance:
  - System.Object
  - System.Security.AccessControl.AuthorizationRule
  - System.Security.AccessControl.AccessRule
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.AccessRule.AccessControlType
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.SemaphoreAccessRule
  langs:
  - csharp
  name: SemaphoreAccessRule(IdentityReference,SemaphoreRights,AccessControlType)
  nameWithType: SemaphoreAccessRule.SemaphoreAccessRule(IdentityReference,SemaphoreRights,AccessControlType)
  fullName: System.Security.AccessControl.SemaphoreAccessRule.SemaphoreAccessRule(IdentityReference,SemaphoreRights,AccessControlType)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.AccessControl.SemaphoreAccessRule&quot;> </xref> klasse, angi brukeren eller gruppen som regelen gjelder for tilgangsrettigheter, og om de angitte tilgangsrettighetene er gitt eller nektet."
  remarks: "Angi en <xref:System.Threading.Semaphore>, for eksempel ved å kalle den <xref:System.Threading.WaitHandle.WaitOne%2A>metoden, må du ha <xref:System.Security.AccessControl.SemaphoreRights?displayProperty=fullName>tilgang.</xref:System.Security.AccessControl.SemaphoreRights?displayProperty=fullName> </xref:System.Threading.WaitHandle.WaitOne%2A> </xref:System.Threading.Semaphore> Avslutte semaforen, ved å kalle den <xref:System.Threading.Semaphore.Release%2A>metoden, må brukeren ha <xref:System.Security.AccessControl.SemaphoreRights?displayProperty=fullName>tilgang.</xref:System.Security.AccessControl.SemaphoreRights?displayProperty=fullName> </xref:System.Threading.Semaphore.Release%2A>"
  syntax:
    content: public SemaphoreAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.SemaphoreRights eventRights, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "Brukeren eller gruppen som regelen gjelder for. Må være av typen <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> eller en type som <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> som kan konverteres til typen <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
    - id: eventRights
      type: System.Security.AccessControl.SemaphoreRights
      description: "En bitvis kombinasjon av <xref href=&quot;System.Security.AccessControl.SemaphoreRights&quot;> </xref> verdier som angir rettighetene gitt eller nektet."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "Én av de <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> verdier som angir om rettighetene som er gitt eller nektet."
  overload: System.Security.AccessControl.SemaphoreAccessRule.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>eventRights</code>angir en ugyldig verdi.       - eller - <code>type</code> angir en ugyldig verdi."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - <code>eventRights</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>identity</code>verken typen <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> eller en type som <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> som kan konverteres til typen <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.SemaphoreAccessRule
  langs:
  - csharp
  name: SemaphoreAccessRule(String,SemaphoreRights,AccessControlType)
  nameWithType: SemaphoreAccessRule.SemaphoreAccessRule(String,SemaphoreRights,AccessControlType)
  fullName: System.Security.AccessControl.SemaphoreAccessRule.SemaphoreAccessRule(String,SemaphoreRights,AccessControlType)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.AccessControl.SemaphoreAccessRule&quot;> </xref> klasse, angir navnet på brukeren eller gruppen som regelen gjelder for tilgangsrettigheter, og om de angitte tilgangsrettighetene er gitt eller nektet."
  remarks: "Angi en <xref:System.Threading.Semaphore>, for eksempel ved å kalle den <xref:System.Threading.WaitHandle.WaitOne%2A>metoden, må du ha <xref:System.Security.AccessControl.SemaphoreRights?displayProperty=fullName>tilgang.</xref:System.Security.AccessControl.SemaphoreRights?displayProperty=fullName> </xref:System.Threading.WaitHandle.WaitOne%2A> </xref:System.Threading.Semaphore> Avslutte semaforen, ved å kalle den <xref:System.Threading.Semaphore.Release%2A>metoden, må brukeren ha <xref:System.Security.AccessControl.SemaphoreRights?displayProperty=fullName>tilgang.</xref:System.Security.AccessControl.SemaphoreRights?displayProperty=fullName> </xref:System.Threading.Semaphore.Release%2A>       Denne konstruktøren, tilsvarer oppretting av en <xref:System.Security.Principal.NTAccount>objektet ved å sende `identity` til den <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=fullName>konstruktøren og sende den nyopprettede <xref:System.Security.Principal.NTAccount>objekt i <xref:System.Security.AccessControl.SemaphoreAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.SemaphoreRights%2CSystem.Security.AccessControl.AccessControlType%29>konstruktør.</xref:System.Security.AccessControl.SemaphoreAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.SemaphoreRights%2CSystem.Security.AccessControl.AccessControlType%29> </xref:System.Security.Principal.NTAccount> </xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=fullName> </xref:System.Security.Principal.NTAccount>"
  example:
  - "The following code example demonstrates the use of this constructor to create <xref:System.Security.AccessControl.SemaphoreAccessRule> objects. The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules. The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType> rule.  \n  \n> [!NOTE]\n>  This example does not attach the security object to a <xref:System.Threading.Semaphore> object. Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName>.  \n  \n [!code-cs[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/add/codesnippet/csharp/09c19b7f-c894-4d29-aa9f-_1.cs)]\n [!code-vb[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/add/codesnippet/visualbasic/09c19b7f-c894-4d29-aa9f-_1.vb)]"
  syntax:
    content: public SemaphoreAccessRule (string identity, System.Security.AccessControl.SemaphoreRights eventRights, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identity
      type: System.String
      description: "Navnet på brukeren eller gruppen regelen gjelder for."
    - id: eventRights
      type: System.Security.AccessControl.SemaphoreRights
      description: "En bitvis kombinasjon av <xref href=&quot;System.Security.AccessControl.SemaphoreRights&quot;> </xref> verdier som angir rettighetene gitt eller nektet."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "Én av de <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> verdier som angir om rettighetene som er gitt eller nektet."
  overload: System.Security.AccessControl.SemaphoreAccessRule.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>eventRights</code>angir en ugyldig verdi.       - eller - <code>type</code> angir en ugyldig verdi."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>eventRights</code>er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - <code>identity</code> er en tom streng.       - eller - <code>identity</code> inneholder over 512 tegn."
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights
  id: SemaphoreRights
  parent: System.Security.AccessControl.SemaphoreAccessRule
  langs:
  - csharp
  name: SemaphoreRights
  nameWithType: SemaphoreAccessRule.SemaphoreRights
  fullName: System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights
  type: Property
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "Henter rettighetene gitt eller nektet ved tilgangsregelen."
  remarks: "<xref:System.Security.AccessControl.SemaphoreAccessRule>objektene er uforanderlig.</xref:System.Security.AccessControl.SemaphoreAccessRule> Du kan opprette en ny tilgangsregel som representerer en annen bruker annen rettigheter eller en annen <xref:System.Security.AccessControl.AccessControlType>, men du kan ikke endre en eksisterende tilgangsregel.</xref:System.Security.AccessControl.AccessControlType>"
  example:
  - "The following code example demonstrates the use of the SemaphoreRights property to display the rights in the set of rules contained in a <xref:System.Security.AccessControl.SemaphoreSecurity> object. The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules. The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType> rule.  \n  \n> [!NOTE]\n>  This example does not attach the security object to a <xref:System.Threading.Semaphore> object. Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName>.  \n  \n [!code-cs[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/add/codesnippet/csharp/p-system.security.access_1_1.cs)]\n [!code-vb[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/add/codesnippet/visualbasic/p-system.security.access_1_1.vb)]"
  syntax:
    content: public System.Security.AccessControl.SemaphoreRights SemaphoreRights { get; }
    return:
      type: System.Security.AccessControl.SemaphoreRights
      description: "En bitvis kombinasjon av <xref href=&quot;System.Security.AccessControl.SemaphoreRights&quot;> </xref> verdier som angir rettighetene gitt eller nektet ved tilgangsregelen."
  overload: System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.AccessRule
  isExternal: false
  name: System.Security.AccessControl.AccessRule
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.SemaphoreAccessRule
  isExternal: false
  name: SemaphoreAccessRule(IdentityReference,SemaphoreRights,AccessControlType)
  nameWithType: SemaphoreAccessRule.SemaphoreAccessRule(IdentityReference,SemaphoreRights,AccessControlType)
  fullName: System.Security.AccessControl.SemaphoreAccessRule.SemaphoreAccessRule(IdentityReference,SemaphoreRights,AccessControlType)
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.AccessControl.SemaphoreRights
  parent: System.Security.AccessControl
  isExternal: false
  name: SemaphoreRights
  nameWithType: SemaphoreRights
  fullName: System.Security.AccessControl.SemaphoreRights
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.SemaphoreAccessRule
  isExternal: false
  name: SemaphoreAccessRule(String,SemaphoreRights,AccessControlType)
  nameWithType: SemaphoreAccessRule.SemaphoreAccessRule(String,SemaphoreRights,AccessControlType)
  fullName: System.Security.AccessControl.SemaphoreAccessRule.SemaphoreAccessRule(String,SemaphoreRights,AccessControlType)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights
  parent: System.Security.AccessControl.SemaphoreAccessRule
  isExternal: false
  name: SemaphoreRights
  nameWithType: SemaphoreAccessRule.SemaphoreRights
  fullName: System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights
- uid: System.Security.AccessControl.SemaphoreAccessRule.#ctor*
  parent: System.Security.AccessControl.SemaphoreAccessRule
  isExternal: false
  name: SemaphoreAccessRule
  nameWithType: SemaphoreAccessRule.SemaphoreAccessRule
- uid: System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights*
  parent: System.Security.AccessControl.SemaphoreAccessRule
  isExternal: false
  name: SemaphoreRights
  nameWithType: SemaphoreAccessRule.SemaphoreRights
