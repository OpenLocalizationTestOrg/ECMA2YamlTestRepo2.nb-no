### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.MetadataResolver
  id: MetadataResolver
  children:
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  langs:
  - csharp
  name: MetadataResolver
  nameWithType: MetadataResolver
  fullName: System.ServiceModel.Description.MetadataResolver
  type: Class
  summary: "Henter og importerer metadata som <xref:System.ServiceModel.Description.ServiceEndpoint>objekter.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Bruk MetadataResolver klassen raskt importere endepunkt for en tjeneste fra metadata. Denne klassen ned og konverterer metadata i <xref:System.ServiceModel.Description.ServiceEndpoint>objekter.</xref:System.ServiceModel.Description.ServiceEndpoint> Last ned metadata for å behandle denne informasjonen som en <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>kan du se <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>"
  example:
  - "The following code example shows the use of the MetadataResolver class to return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects that are then used to connect to a service instance.  \n  \n [!code-cs[MetadataResolver#1](~/add/codesnippet/csharp/metadataresolver.client/client.cs#1)]  \n  \n The following code example shows the use of the MetadataResolver to download and return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects using an HTTP GET request rather than WS-Transfer.  \n  \n [!code-cs[MetadataResolver#2](~/add/codesnippet/csharp/metadataresolver.client/client.cs#2)]"
  syntax:
    content: public static class MetadataResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Starter et asynkront kall som løser Metadataadressen til den <xref:System.ServiceModel.Description.ServiceEndpoint>objekter for de angitte avtaler, ved hjelp av angitte adressen og asynkrone tilstand og representant.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Standardinnstillingene i <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>brukes til å hente metadata og standard <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>er <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Last ned metadata, men ikke løse informasjonen inn i <xref:System.ServiceModel.Description.ServiceEndpoint>objektene, brukes den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direkte.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] >, Returneres en tom samling hvis ingen endepunkter ble importert, eller hvis ingen endepunkter sammenlignet kontrakten. Hvis det returneres en tom samling, skrives det en advarsel-sporing."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Kontrakter vil laste ned og løse metadata."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Metadataadressen."
    - id: callback
      type: System.AsyncCallback
      description: "Asynkron tilbakeringing representanten aktiveres når kallet er fullført."
    - id: asyncState
      type: System.Object
      description: "Tilstanden tilknyttet asynkront kall."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som refererer til asynkrone Løs-operasjonen.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adressen, kontrakten eller tilbakeringing er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>er tom, må ha minst ett medlem av <code>contracts</code> er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, eller <code>contracts</code> inneholder mer enn én kontrakt med samme navn og navneområde."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Starter et asynkront kall som løser Metadataadressen til den <xref:System.ServiceModel.Description.ServiceEndpoint>objekter for den angitte kontrakten ved hjelp av angitte adressen og asynkrone tilstand og representant.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Standardinnstillingene i <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>brukes til å hente metadata og standard <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>er <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Last ned metadata, men ikke løse informasjonen inn i <xref:System.ServiceModel.Description.ServiceEndpoint>objektene, brukes den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direkte.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] >, Returneres en tom samling hvis ingen endepunkter ble importert, eller hvis ingen endepunkter sammenlignet kontrakten. Hvis det returneres en tom samling, skrives det en advarsel-sporing.       Denne metoden krever at du angir Kontrakttypen. Du kan angi kontrakten ved deklarerer grensesnittet tjenesten i Klientkoden eller en [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] klienten som er generert av Svcutil.exe. Hvis grensesnittet endres (å legge til en ny operasjon, for eksempel) du må oppdatere grensesnittet i Klientkoden eller generere en ny [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] klienten. Hvis du ikke gjør dette, er det et unntaket. Du har for eksempel en tjeneste som implementerer kontrakten kalles ICalculator som definerer Add(), Sub(), Mult() og Div(). Du oppretter et klientprogram og generere [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] klienten. Du deretter legge til en annen metode ICalculator kalt Echo(). Hvis du deretter skriver et program som kaller <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29>uten å generere en ny [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] klienten du får unntaket.</xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29>       `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`."
  syntax:
    content: public static IAsyncResult BeginResolve (Type contract, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);
    parameters:
    - id: contract
      type: System.Type
      description: "Kontrakten vil laste ned og løse metadata."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Metadataadressen."
    - id: callback
      type: System.AsyncCallback
      description: "Asynkron tilbakeringing representanten aktiveres når kallet er fullført."
    - id: asyncState
      type: System.Object
      description: "Tilstanden tilknyttet asynkront kall."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som refererer til asynkrone Løs-operasjonen.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adressen, kontrakten eller tilbakeringing er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Starter et asynkront kall som løser Metadataadressen til den <xref:System.ServiceModel.Description.ServiceEndpoint>objekter for de angitte avtaler, ved hjelp av den angitte adressen <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref>, asynkrone tilstand og representant.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Standard <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>er <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>       Last ned metadata, men ikke løse informasjonen inn i <xref:System.ServiceModel.Description.ServiceEndpoint>objektene, brukes den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direkte.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] >, Returneres en tom samling hvis ingen endepunkter ble importert, eller hvis ingen endepunkter sammenlignet kontrakten. Hvis det returneres en tom samling, skrives det en advarsel-sporing."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Kontrakter vil laste ned og løse metadata."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Metadataadressen."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "Den <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> brukes til å hente metadata."
    - id: callback
      type: System.AsyncCallback
      description: "Asynkron tilbakeringing representanten aktiveres når kallet er fullført."
    - id: asyncState
      type: System.Object
      description: "Tilstanden tilknyttet asynkront kall."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som refererer til asynkrone Løs-operasjonen.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adressen, kontrakten, klienten eller tilbakeringing er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>er tom, må ha minst ett medlem av <code>contracts</code> er null, eller <code>contracts</code> inneholder mer enn én kontrakt med samme navn og navneområde."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Starter et asynkront kall som løser Metadataadressen til den <xref:System.ServiceModel.Description.ServiceEndpoint>objekter for de angitte avtaler, ved hjelp av den angitte adressen <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClientMode&quot;> </xref> verdi, asynkrone tilstand og representant.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Standardinnstillingene i den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>brukes til å hente metadataene.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Last ned metadata, men ikke løse informasjonen inn i <xref:System.ServiceModel.Description.ServiceEndpoint>objektene, brukes den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direkte.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] >, Returneres en tom samling hvis ingen endepunkter ble importert, eller hvis ingen endepunkter sammenlignet kontrakten. Hvis det returneres en tom samling, skrives det en advarsel-sporing."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Kontrakter vil laste ned og løse metadata."
    - id: address
      type: System.Uri
      description: "Metadataadressen."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Modusen for henting av."
    - id: callback
      type: System.AsyncCallback
      description: "Asynkron tilbakeringing representanten aktiveres når kallet er fullført."
    - id: asyncState
      type: System.Object
      description: "Tilstanden tilknyttet asynkront kall."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som refererer til asynkrone Løs-operasjonen.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adressen, kontrakten eller tilbakeringing er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>er tom, må ha minst ett medlem av <code>contracts</code> er null, eller <code>contracts</code> inneholder mer enn én kontrakt med samme navn og navneområde."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Starter et asynkront kall som løser Metadataadressen til den <xref:System.ServiceModel.Description.ServiceEndpoint>objekter for den angitte kontrakten, ved hjelp av den angitte adressen <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClientMode&quot;> </xref>, asynkrone tilstand og representant.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Standardinnstillingene i den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>brukes til å hente metadataene.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Last ned metadata, men ikke løse informasjonen inn i <xref:System.ServiceModel.Description.ServiceEndpoint>objektene, brukes den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direkte.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] >, Returneres en tom samling hvis ingen endepunkter ble importert, eller hvis ingen endepunkter sammenlignet kontrakten. Hvis det returneres en tom samling, skrives det en advarsel-sporing."
  syntax:
    content: public static IAsyncResult BeginResolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);
    parameters:
    - id: contract
      type: System.Type
      description: "Kontrakten vil laste ned og løse metadata."
    - id: address
      type: System.Uri
      description: "Metadataadressen."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Modusen for henting av."
    - id: callback
      type: System.AsyncCallback
      description: "Asynkron tilbakeringing representanten aktiveres når kallet er fullført."
    - id: asyncState
      type: System.Object
      description: "Tilstanden tilknyttet asynkront kall."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som refererer til asynkrone Løs-operasjonen.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adressen, kontrakten eller tilbakeringing er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Starter et asynkront kall som løser Metadataadressen til den <xref:System.ServiceModel.Description.ServiceEndpoint>objekter for de angitte avtaler, ved hjelp av den angitte adressen <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref>, <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClientMode&quot;> </xref>, asynkrone tilstand og representant.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Last ned metadata, men ikke løse informasjonen inn i <xref:System.ServiceModel.Description.ServiceEndpoint>objektene, brukes den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direkte.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] >, Returneres en tom samling hvis ingen endepunkter ble importert, eller hvis ingen endepunkter sammenlignet kontrakten. Hvis det returneres en tom samling, skrives det en advarsel-sporing."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Kontrakter vil laste ned og løse metadata."
    - id: address
      type: System.Uri
      description: "Metadataadressen."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Modusen for henting av."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "Den <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> brukes til å hente metadata."
    - id: callback
      type: System.AsyncCallback
      description: "Asynkron tilbakeringing representanten aktiveres når kallet er fullført."
    - id: asyncState
      type: System.Object
      description: "Tilstanden tilknyttet asynkront kall."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som refererer til asynkrone Løs-operasjonen.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adressen, kontrakten eller tilbakeringing er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>er tom, må ha minst ett medlem av <code>contracts</code> er null, eller <code>contracts</code> inneholder mer enn én kontrakt med samme navn og navneområde."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)
  id: EndResolve(System.IAsyncResult)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: EndResolve(IAsyncResult)
  nameWithType: MetadataResolver.EndResolve(IAsyncResult)
  fullName: System.ServiceModel.Description.MetadataResolver.EndResolve(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Er et asynkront kall å løse metadata i en samling med endepunkt."
  remarks: "Slutter et asynkront kall til en av de <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A>metoder.</xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A>"
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection EndResolve (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>objektet som ble mottatt fra et kall til den <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve*>metoden.</xref:System.ServiceModel.Description.MetadataResolver.BeginResolve*> </xref:System.IAsyncResult>"
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "En samling av <xref:System.ServiceModel.Description.ServiceEndpoint>objekter for endepunkt i metadataene.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.EndResolve*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Løser Metadataadressen til den <xref:System.ServiceModel.Description.ServiceEndpoint>objekter for de angitte avtaler bruker adressen til angitte metadataene.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Standardinnstillingene i <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>brukes til å hente metadata og standard <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>er <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Last ned metadata, men ikke løse informasjonen inn i <xref:System.ServiceModel.Description.ServiceEndpoint>objektene, brukes den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direkte.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] >, Returneres en tom samling hvis ingen endepunkter ble importert, eller hvis ingen endepunkter sammenlignet kontrakten. Hvis det returneres en tom samling, skrives det en advarsel-sporing."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Kontrakter vil laste ned og løse metadata."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Metadataadressen."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "En samling av <xref:System.ServiceModel.Description.ServiceEndpoint>objekter for den angitte kontrakten.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adressen eller kontrakter samlingen er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>er tom, må ha minst ett medlem av <code>contracts</code> er null, eller <code>contracts</code> inneholder mer enn én kontrakt med samme navn og navneområde."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)
  id: Resolve(System.Type,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(Type,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(Type,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,EndpointAddress)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Laster ned og løser en postadresse for metadata i en samling med <xref:System.ServiceModel.Description.ServiceEndpoint>objekter for en angitt kontrakt på en angitt adresse.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Bruk Løs-metoden til å angi kontrakten og metadata for postadressen skal brukes når du laster ned og løse metadata.       Standardinnstillingene i <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>brukes til å hente metadata og standard <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>er <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Last ned metadata, men ikke løse informasjonen inn i <xref:System.ServiceModel.Description.ServiceEndpoint>objektene, brukes den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direkte.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] >, Returneres en tom samling hvis ingen endepunkter ble importert, eller hvis ingen endepunkter sammenlignet kontrakten. Hvis det returneres en tom samling, skrives det en advarsel-sporing.       Denne metoden krever at du angir Kontrakttypen. Du kan angi kontrakten ved deklarerer grensesnittet tjenesten i Klientkoden eller en [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] klienten som er generert av Svcutil.exe. Hvis grensesnittet endres (å legge til en ny operasjon, for eksempel) du må oppdatere grensesnittet i Klientkoden eller generere en ny [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] klienten. Hvis du ikke gjør dette, er det et unntaket. Du har for eksempel en tjeneste som implementerer kontrakten kalles ICalculator som definerer Add(), Sub(), Mult() og Div(). Du oppretter et klientprogram og generere [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] klienten. Du deretter legge til en annen metode ICalculator kalt Echo(). Hvis du deretter skrive en applikasjon som kall løse uten å generere en ny [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] klienten du får unntaket.       `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> class to return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects that are then used to connect to a service instance.  \n  \n [!code-cs[MetadataResolver#1](~/add/codesnippet/csharp/metadataresolver.client/client.cs#1)]"
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, System.ServiceModel.EndpointAddress address);
    parameters:
    - id: contract
      type: System.Type
      description: "Kontrakter vil laste ned og løse metadata."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Metadataadressen."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "En samling av <xref:System.ServiceModel.Description.ServiceEndpoint>objekter for den angitte kontrakten.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adressen eller kontrakten er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Løser Metadataadressen til den <xref:System.ServiceModel.Description.ServiceEndpoint>objekter for de angitte avtaler ved hjelp av angitte metadataene-adressen og <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref>.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Standard <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>er <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>       Last ned metadata, men ikke løse informasjonen inn i <xref:System.ServiceModel.Description.ServiceEndpoint>objektene, brukes den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direkte.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] >, Returneres en tom samling hvis ingen endepunkter ble importert, eller hvis ingen endepunkter sammenlignet kontrakten. Hvis det returneres en tom samling, skrives det en advarsel-sporing."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Kontrakter vil laste ned og løse metadata."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Metadataadressen."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "Den <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> brukes til å hente metadata."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "En samling av <xref:System.ServiceModel.Description.ServiceEndpoint>objekter for den angitte kontrakten.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Reduseres samling for postadressen, og klienten <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>er tom, må ha minst ett medlem av <code>contracts</code> er null, eller <code>contracts</code> inneholder mer enn én kontrakt med samme navn og navneområde."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Løser Metadataadressen til den <xref:System.ServiceModel.Description.ServiceEndpoint>objekter for de angitte avtaler ved hjelp av den angitte adresse og overføre modusen.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Standardinnstillingene i den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>brukes til å hente metadataene.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Last ned metadata, men ikke løse informasjonen inn i <xref:System.ServiceModel.Description.ServiceEndpoint>objektene, brukes den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direkte.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] >, Returneres en tom samling hvis ingen endepunkter ble importert, eller hvis ingen endepunkter sammenlignet kontrakten. Hvis det returneres en tom samling, skrives det en advarsel-sporing."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Kontrakter vil laste ned og løse metadata."
    - id: address
      type: System.Uri
      description: "Metadataadressen."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Modusen for henting av."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "En samling av <xref:System.ServiceModel.Description.ServiceEndpoint>objekter for den angitte kontrakten.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adressen eller kontrakter samlingen er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>er tom, må ha minst ett medlem av <code>contracts</code> er null, eller <code>contracts</code> inneholder mer enn én kontrakt med samme navn og navneområde."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  id: Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(Type,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Løser Metadataadressen til den <xref:System.ServiceModel.Description.ServiceEndpoint>objekter for den angitte kontrakten ved hjelp av den angitte adresse og overføre modusen.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Bruk Løs-metoden til å angi en kontrakt og og Last nedlastingsmekanisme å bruke.       Standardinnstillingene i den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>brukes til å hente metadataene.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Last ned metadata, men ikke løse informasjonen inn i <xref:System.ServiceModel.Description.ServiceEndpoint>objektene, brukes den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direkte.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] >, Returneres en tom samling hvis ingen endepunkter ble importert, eller hvis ingen endepunkter sammenlignet kontrakten. Hvis det returneres en tom samling, skrives det en advarsel-sporing."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects using an HTTP GET request rather than WS-Transfer.  \n  \n [!code-cs[MetadataResolver#2](~/add/codesnippet/csharp/metadataresolver.client/client.cs#2)]"
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);
    parameters:
    - id: contract
      type: System.Type
      description: "Kontrakten vil laste ned og løse metadata."
    - id: address
      type: System.Uri
      description: "Metadataadressen."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Modusen for henting av."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "En samling av <xref:System.ServiceModel.Description.ServiceEndpoint>objekter for den angitte kontrakten.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adressen eller kontrakten er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Løser Metadataadressen til den <xref:System.ServiceModel.Description.ServiceEndpoint>objekter for de angitte avtaler ved hjelp av angitte adressen, overføringsmodus og overføring av klienten.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Last ned metadata, men ikke løse informasjonen inn i <xref:System.ServiceModel.Description.ServiceEndpoint>objektene, brukes den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direkte.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] >, Returneres en tom samling hvis ingen endepunkter ble importert, eller hvis ingen endepunkter sammenlignet kontrakten. Hvis det returneres en tom samling, skrives det en advarsel-sporing."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Kontrakter vil laste ned og løse metadata."
    - id: address
      type: System.Uri
      description: "Metadataadressen."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Modusen for henting av."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "Den <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> brukes til å hente metadata."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "En samling av <xref:System.ServiceModel.Description.ServiceEndpoint>objekter for den angitte kontrakten.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Reduseres samling for postadressen, og klienten <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>er tom, må ha minst ett medlem av <code>contracts</code> er null, eller <code>contracts</code> inneholder mer enn én kontrakt med samme navn og navneområde."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ContractDescription>
  nameWithType: IEnumerable<ContractDescription>
  fullName: System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.ServiceModel.Description.ContractDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ContractDescription
    name: ContractDescription
    nameWithType: ContractDescription
    fullName: ContractDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
- uid: System.ServiceModel.Description.MetadataExchangeClient
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExchangeClient
  nameWithType: MetadataExchangeClient
  fullName: System.ServiceModel.Description.MetadataExchangeClient
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Description.MetadataExchangeClientMode
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExchangeClientMode
  nameWithType: MetadataExchangeClientMode
  fullName: System.ServiceModel.Description.MetadataExchangeClientMode
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
- uid: System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: EndResolve(IAsyncResult)
  nameWithType: MetadataResolver.EndResolve(IAsyncResult)
  fullName: System.ServiceModel.Description.MetadataResolver.EndResolve(IAsyncResult)
- uid: System.ServiceModel.Description.ServiceEndpointCollection
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceEndpointCollection
  nameWithType: ServiceEndpointCollection
  fullName: System.ServiceModel.Description.ServiceEndpointCollection
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(Type,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(Type,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,EndpointAddress)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(Type,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve
  nameWithType: MetadataResolver.BeginResolve
- uid: System.ServiceModel.Description.MetadataResolver.EndResolve*
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: EndResolve
  nameWithType: MetadataResolver.EndResolve
- uid: System.ServiceModel.Description.MetadataResolver.Resolve*
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve
  nameWithType: MetadataResolver.Resolve
