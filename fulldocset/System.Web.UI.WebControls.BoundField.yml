### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.BoundField
  id: BoundField
  children:
  - System.Web.UI.WebControls.BoundField.#ctor
  - System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  - System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  - System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.BoundField.CreateField
  - System.Web.UI.WebControls.BoundField.DataField
  - System.Web.UI.WebControls.BoundField.DataFormatString
  - System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)
  - System.Web.UI.WebControls.BoundField.GetDesignTimeValue
  - System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)
  - System.Web.UI.WebControls.BoundField.HeaderText
  - System.Web.UI.WebControls.BoundField.HtmlEncode
  - System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  - System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  - System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.BoundField.NullDisplayText
  - System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.BoundField.ReadOnly
  - System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  - System.Web.UI.WebControls.BoundField.ThisExpression
  - System.Web.UI.WebControls.BoundField.ValidateRequestMode
  - System.Web.UI.WebControls.BoundField.ValidateSupportsCallback
  langs:
  - csharp
  name: BoundField
  nameWithType: BoundField
  fullName: System.Web.UI.WebControls.BoundField
  type: Class
  summary: "Representerer et felt som vises som tekst i en databundet-kontroll."
  remarks: "Klassen BoundField brukes av databundet kontroller (eksempel <xref:System.Web.UI.WebControls.GridView>og <xref:System.Web.UI.WebControls.DetailsView>) til å vise verdien til et felt som tekst.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Objektet BoundField vises forskjellig avhengig databundet kontrollen den brukes. For eksempel den <xref:System.Web.UI.WebControls.GridView>kontrollen viser en BoundField-objektet som en kolonne, mens den <xref:System.Web.UI.WebControls.DetailsView>kontrollen viser som en rad.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       Angi felt skal vises i et BoundField-objekt, kan du angi den <xref:System.Web.UI.WebControls.BoundField.DataField%2A>egenskapen feltnavnet.</xref:System.Web.UI.WebControls.BoundField.DataField%2A> Feltverdien kan være HTML-kodet før den vises ved å angi den <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>egenskapen `true`.</xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> Du kan bruke en egendefinert formatering streng feltverdien ved å angi den <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>egenskapen.</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> Når den <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>egenskapen `true`, kodet strengverdien i feltet brukes i den egendefinerte Formatstrengen.</xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> Som standard brukes formatering strengen feltverdier bare når kontrollen databundet er i skrivebeskyttet modus. For å bruke formatering strengen verdiene som vises under databundet kontrollen i redigeringsmodus, kan du angi den <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>egenskapen `true`.</xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> Verdien for et felt er null, kan du vise en egendefinert tekst ved å angi den <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>egenskapen.</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> BoundField-objektet kan også automatisk konvertere tom streng (&quot;&quot;) feltet verdier null-verdier ved å angi den <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>egenskapen `true`.</xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>       Du kan skjule et BoundField objekt i en databundet-kontroll ved å angi den <xref:System.Web.UI.WebControls.DataControlField.Visible%2A>egenskapen `false`.</xref:System.Web.UI.WebControls.DataControlField.Visible%2A> For å hindre at verdien for et felt som endres i redigeringsmodus, kan du angi den <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A>egenskapen `true`.</xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> Kontrollerer som støtter poster i databindingselementer (som den <xref:System.Web.UI.WebControls.DetailsView>kontrollen), kan du skjule et BoundField objekt ved å angi den <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A>egenskapen `false`.</xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> </xref:System.Web.UI.WebControls.DetailsView> Dette skjer vanligvis når du vil skjule en automatisk generert nøkkelfelt i insert-modus.       Du kan tilpasse topp- og bunntekst delene av et BoundField-objekt. For å vise en tekst i toppteksten eller bunnteksten deler, kan du angi den <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>eller <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>Egenskaper henholdsvis.</xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> Du kan vise et bilde i stedet for å vise tekst i toppteksten, ved å angi den <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>egenskapen.</xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> Toppteksten kan skjules i BoundField-objektet ved å angi den <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>egenskapen `false`.</xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>      > [!NOTE] > Noen databundet kontroller (slik som den <xref:System.Web.UI.WebControls.GridView>kontrollen) kan vise eller skjule bare delen hele topp kontrollens.</xref:System.Web.UI.WebControls.GridView> Disse databundet kontroller støtter ikke den <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>egenskapen for et enkelt bundne.</xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> Vis eller Skjul delen hele overskrift for en databundet kontroll (hvis tilgjengelig), bruker kontrollens `ShowHeader` egenskapen.       Du kan også tilpasse utseendet til BoundField objektet (skriftfarge bakgrunnsfarge og så videre) ved å angi stilegenskaper for de ulike delene av feltet. Tabellen nedenfor viser egenskapene annen stil.      | Style-egenskapen | Beskrivelse |   |--------------------|-----------------|   | <xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>| Stilinnstillingene for de underordnede server webkontroller for BoundField-objektet. |   | <xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>| Stilinnstillingene for bunnteksten for BoundField-objektet. |   | <xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>| Stilinnstillingene for delen topptekst for BoundField-objektet. |   | <xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>| Stilinnstillingene for dataelementer i BoundField-objektet. |</xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>"
  example:
  - "The following code example demonstrates how to use a BoundField object to display the values of a field in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[BoundField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_236_1.aspx)]\n [!code-cs[BoundField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_236_1.aspx)]"
  syntax:
    content: 'public class BoundField : System.Web.UI.WebControls.DataControlField'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.ShowHeader
  - System.Web.UI.WebControls.DataControlField.SortExpression
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: BoundField()
  nameWithType: BoundField.BoundField()
  fullName: System.Web.UI.WebControls.BoundField.BoundField()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> klasse."
  remarks: "Bruk denne konstruktøren til å initialisere en ny forekomst av <xref:System.Web.UI.WebControls.BoundField>klassen.</xref:System.Web.UI.WebControls.BoundField> Denne konstruktøren brukes vanligvis når du legger til felt til en dynamisk opprettet databundet-kontroll.       Dynamisk legge til en <xref:System.Web.UI.WebControls.BoundField>objekt til en databundet kontroll, Opprett en ny <xref:System.Web.UI.WebControls.BoundField>objekt, angi egenskapene og deretter legge den til databindingselementer kontrollens feltet samlingen.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.BoundField> Hvis du bruker for eksempel den <xref:System.Web.UI.WebControls.GridView>styre, legge til den <xref:System.Web.UI.WebControls.BoundField>objekt i <xref:System.Web.UI.WebControls.GridView.Columns%2A>samlingen.</xref:System.Web.UI.WebControls.GridView.Columns%2A> </xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > Selv om dynamisk kan du legge til felt i en databundet, det anbefales at feltene statisk deklarert og deretter vises eller skjules, etter behov. Statisk deklarerer alle feltene reduserer størrelsen på visningsstatusen for den overordnede databundet kontrollen."
  example:
  - "The following code example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.BoundField> object to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[BoundFieldCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_150_1.aspx)]\n [!code-vb[BoundFieldCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_150_1.aspx)]"
  syntax:
    content: public BoundField ();
    parameters: []
  overload: System.Web.UI.WebControls.BoundField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  id: ApplyFormatInEditMode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ApplyFormatInEditMode
  nameWithType: BoundField.ApplyFormatInEditMode
  fullName: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir en verdi som angir om formatering strengen angitt av den <xref:System.Web.UI.WebControls.BoundField.DataFormatString*>egenskapen skal brukes på feltverdier når kontrollen databundet som inneholder den <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> objektet er i redigeringsmodus.</xref:System.Web.UI.WebControls.BoundField.DataFormatString*>"
  remarks: "Databundet kontroller (eksempel <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.FormView>, og <xref:System.Web.UI.WebControls.GridView>) har ulike visningsmodus som tillater brukeren å lese, redigere eller sette inn poster.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> Som standard formatering strengen som er angitt av den <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>egenskapen skal brukes på feltverdier bare når kontrollen databundet er i skrivebeskyttet modus.</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> For å bruke formatering strengen verdiene som vises under databundet kontrollen i redigeringsmodus, angi ApplyFormatInEditMode egenskapen `true`.      > [!NOTE] > En <xref:System.Web.UI.WebControls.BoundField>objektet automatisk fjernes ikke formateringen når oppdateres feltet i datakilden.</xref:System.Web.UI.WebControls.BoundField> Hvis du vil formatere som en del av verdien som er lagret, må du fjerne formateringen programmatisk."
  example:
  - "The following code example demonstrates how to use the ApplyFormatInEditMode property to apply the formatting string to field values while a <xref:System.Web.UI.WebControls.GridView> control is in edit mode. The formatting is then programmatically removed before the value is updated in the data source.  \n  \n [!code-vb[BoundFieldApplyFormatInEditMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1333_1.aspx)]\n [!code-cs[BoundFieldApplyFormatInEditMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1333_1.aspx)]"
  syntax:
    content: public virtual bool ApplyFormatInEditMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>å formatere streng feltverdiene i redigeringsmodus; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: BoundField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir en verdi som angir om tomme strengverdier (&quot;&quot;) automatisk konverteres til null-verdier når oppdateres data-feltet i datakilden."
  remarks: "Noen ganger kan brukeren angi en tom streng for verdi for feltet når du oppdaterer eller setter inn poster. Bruk ConvertEmptyStringToNull-egenskapen til å angi om en tom strengverdi konverteres automatisk til null når oppdateres data-feltet i datakilden.      > [!NOTE] > Som standard en <xref:System.Web.UI.WebControls.BoundField>objektet viser nullverdier som tomme strenger.</xref:System.Web.UI.WebControls.BoundField> For å vise en annen verdi, kan du angi den <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>egenskapen.</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>"
  example:
  - "The following code example demonstrates how to use the ConvertEmptyStringToNull property to specify that an empty string (\"\") field value should automatically be converted to null.  \n  \n [!code-vb[BoundFieldConvertEmptyStringToNull#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1108_1.aspx)]\n [!code-cs[BoundFieldConvertEmptyStringToNull#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1108_1.aspx)]"
  syntax:
    content: public virtual bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>automatisk konvertere tomme strengverdier til null-verdier. Hvis ikke, den <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: BoundField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.BoundField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Overfører egenskaper for gjeldende <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> objektet til den angitte <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> objektet."
  remarks: "Metoden CopyProperties er helper metode som brukes av den <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>metode for å kopiere egenskaper for gjeldende <xref:System.Web.UI.WebControls.BoundField>objekt i <xref:System.Web.UI.WebControls.DataControlField>objektet er opprettet av metoden.</xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>"
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "Den <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> å kopiere egenskaper for gjeldende <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> til."
  overload: System.Web.UI.WebControls.BoundField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.CreateField
  id: CreateField
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: CreateField()
  nameWithType: BoundField.CreateField()
  fullName: System.Web.UI.WebControls.BoundField.CreateField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Oppretter et tomt <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> objektet."
  remarks: "Metoden CreateField er helper metode som brukes av den <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>metode for å opprette en tom <xref:System.Web.UI.WebControls.BoundField>objektet du vil kopiere egenskaper for gjeldende <xref:System.Web.UI.WebControls.BoundField>objekt.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>"
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "An empty <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>."
  overload: System.Web.UI.WebControls.BoundField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.DataField
  id: DataField
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: DataField
  nameWithType: BoundField.DataField
  fullName: System.Web.UI.WebControls.BoundField.DataField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir navnet på datafeltet skal bindes til det <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> objektet."
  remarks: "Bruk DataField-egenskapen til å angi navnet på datafeltet skal bindes til det <xref:System.Web.UI.WebControls.BoundField>objektet.</xref:System.Web.UI.WebControls.BoundField> Verdiene i det angitte feltet skal vises i den <xref:System.Web.UI.WebControls.BoundField>objektet som tekst.</xref:System.Web.UI.WebControls.BoundField> Du kan eventuelt formatere teksten som vises ved å angi den <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>egenskapen.</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>      > [!NOTE] > Hvis verdien for et felt er null, en tom streng (&quot;&quot;) vises for verdien som standard. Hvis du vil angi en alternativ teksten, kan du angi den <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>egenskapen.</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>"
  example:
  - "The following code example demonstrates how to use the DataField property to specify which field to display in a <xref:System.Web.UI.WebControls.BoundField> field column of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[BoundField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_680_1.aspx)]\n [!code-cs[BoundField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_680_1.aspx)]"
  syntax:
    content: public virtual string DataField { get; set; }
    return:
      type: System.String
      description: "Navnet på feltet dataene skal bindes til det <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>. Standarden er en tom streng (&quot;&quot;), noe som angir at denne egenskapen ikke er angitt."
  overload: System.Web.UI.WebControls.BoundField.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.DataFormatString
  id: DataFormatString
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: DataFormatString
  nameWithType: BoundField.DataFormatString
  fullName: System.Web.UI.WebControls.BoundField.DataFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir strengen som angir visningsformatet for verdien i feltet."
  remarks: "Bruk DataFormatString-egenskapen til å angi et egendefinert visningsformat for verdiene som vises i den <xref:System.Web.UI.WebControls.BoundField>objektet.</xref:System.Web.UI.WebControls.BoundField> Hvis egenskapen DataFormatString ikke er angitt, vises feltverdien uten formatering.      > [!NOTE] > I ASP.NET-versjoner som er eldre enn 3.5, må du angi den <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>egenskapen `false` for å formatere streng felt som ikke datatyper.</xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> Ellers konverteres feltverdien til en streng med standard konverteringsmetoden før Formatstrengen som er lagret i egenskapen DataFormatString brukes.       Som standard formatering strengen brukes på feltverdien bare når kontrollen databundet som inneholder den <xref:System.Web.UI.WebControls.BoundField>objektet er i skrivebeskyttet modus.</xref:System.Web.UI.WebControls.BoundField> For å bruke formatering strengen feltverdiene i redigeringsmodus, kan du angi den <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>egenskapen `true`.</xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>       Formatering strengen kan være en strenglitteral og inkluderer vanligvis en plassholder for feltverdien. For eksempel i formatering strengen `Item Value: {0}`, feltverdien blir erstattet for plassholderen {0} når strengen vises i den <xref:System.Web.UI.WebControls.BoundField>objektet.</xref:System.Web.UI.WebControls.BoundField> Resten av formatering strengen vises som litteral tekst.       Hvis formatering strengen ikke inneholder en plassholder, inkludert bare formatering strengen seg selv i endelig teksten (feltverdien fra datakilden ikke er inkludert). Hvis plassholderen er 0 (null) omsluttet klammeparenteser som vist i det forrige eksemplet, konverteres feltverdien til en streng med standardmetoden. Du kan legge til nullen en streng som angir hvordan feltverdien skal formateres. For eksempel plassholderen `{0:C}` for et numerisk felt angir at verdien i feltet skal konverteres til et valutaformat.       Formateringen ved hjelp av den <xref:System.String.Format%2A>metoden.</xref:System.String.Format%2A> Tallet som følger det venstre klammeparentes er en del av syntaksen som brukes med denne metoden, og angir som en av en serie med verdier plassholderen skal bruke. Fordi det er bare én verdi for feltet i hver celle, kan bare tall som følger det venstre klammeparentes angis til 0.       Tabellen nedenfor viser standard format tegnene for numeriske felt. Disse format-tegn er bokstaver, bortsett fra for `X`, som viser heksadesimale tegn i tilfelle som er angitt. Du kan legge til et tall til lengst format for å angi hvor mange signifikante sifre eller desimaler du vil vise.      > [!NOTE] > I de fleste tilfeller formatering avhenger av serverens kultur. Eksemplene er for kulturen innstillingen `en-US`.      | Formater tegnet | Beskrivelse | Eksempel |   |----------------------|-----------------|-------------|   | `C` or `c`| Viser numeriske verdier i valutaformat. Du kan angi antallet desimaler. | Format:`{0:C}`<br /><br /> 123.456 -> $123.46<br /><br /> Format:`{0:C3}`<br /><br /> 123.456-> $123.456 |   | `D` or `d`| Viser heltallsverdier i desimalformat. Du kan angi antallet sifre. (Selv om typen kalles &quot;decimal&quot;, tallene er formatert som heltall.) | Format:`{0:D}`<br /><br /> 1234 -> 1234<br /><br /> Format:`{0:D6}`<br /><br /> 1234-> 001234 |   | `E` or `e`| Viser numeriske verdier i eksponentielt format (eksponentiell). Du kan angi antallet desimaler. | Format:`{0:E}`<br /><br /> 1052.0329112756-> 1.052033E + 003<br /><br /> Format:`{0:E2}`<br /><br /> -1052.0329112756-> -&1;.05e +&003; |   | `F` or `f`| Viser numeriske verdier med fast format. Du kan angi antallet desimaler. | Format:`{0:F}`<br /><br /> 1234.567 -> 1234.57<br /><br /> Format:`{0:F3}`<br /><br /> 1234.567-> 1234.567 |   | `G` or `g`| Viser numeriske verdier i formatet (mest CD-ROM faste punkt eller vitenskapelig notasjon). Du kan angi antall signifikante sifre. | Format:`{0:G}`<br /><br /> -123.456 -> -123.456<br /><br /> Format:`{0:G2}`<br /><br /> -123.456->-120 |   | `N` or `n`| Viser numeriske verdier i tallformat (inkludert Gruppeskilletegn og valgfri minustegn). Du kan angi antallet desimaler. | Format:`{0:N}`<br /><br /> 1234.567 -> 1,234.57<br /><br /> Format:`{0:N4}`<br /><br /> 1234.567-> 1,234.5670 |   | `P` or `p`| Viser numeriske verdier i prosent format. Du kan angi antallet desimaler. | Format:`{0:P}`<br /><br /> 1 -> 100.00%<br /><br /> Format:`{0:P1}`<br /><br /> .5-> 50,0% | | `R` or `r`| Viser <xref:System.Single>, <xref:System.Double>, eller `BigInteger` verdier i gå i retur-format. | Format: `{0:R}`</xref:System.Double></xref:System.Single><br /><br /> 123456789.12345678-> 123456789.12345678 |   | `X` or `x`| Viser heltallsverdier i heksadesimalt format. Du kan angi antallet sifre. | Format:`{0:X}`<br /><br /> 255-> FF<br /><br /> Format:`{0:x4}`<br /><br /> 255-> 00ff |       Du finner mer informasjon og eksempler som viser formatering for andre kultur verdier, se [Standard numerisk formatstrenger](~/add/includes/ajax-current-ext-md.md). Du kan også opprette egendefinerte tallformatstrenger. Hvis du vil ha mer informasjon, se [egendefinert numerisk formatstrenger](~/add/includes/ajax-current-ext-md.md).       Tabellen nedenfor viser format tegn for <xref:System.DateTime>felt.</xref:System.DateTime> De fleste av disse formatering spesifikasjonene føre til en annen utdata avhengig av kulturen innstillinger. Eksemplene er en <xref:System.DateTime>6/15/2009 verdien 1:45:30 PM med kulturen innstillingen `en-US`.</xref:System.DateTime>      | Formater tegnet | Beskrivelse | Eksempel |   |----------------------|-----------------|-------------|   | `d`| Korte datoformatet mønsteret. | Format:`{0:d}`<br /><br /> 6/15/2009 1:45:30 PM-> 6/15/2009 |   | `D`| Mønstret for lang dato. | Format:`{0:D}`<br /><br /> 6/15/2009 1:45:30 PM-> mandag 15. juni 2009 |   | `f`| Fullstendig dato/klokkeslett mønsteret (kort tid). | Format:`{0:f}`<br /><br /> 6/15/2009 1:45:30 PM-> mandag juni 15, 2009 1:45 PM |   | `F`| Fullstendig dato/klokkeslett mønsteret (lang tid). | Format:`{0:F}`<br /><br /> 6/15/2009 1:45:30 PM-> mandag juni 15, 2009 1:45:30 PM |   | `g`| Generell dato/klokkeslett mønsteret (kort tid). | Format:`{0:g}`<br /><br /> 6/15/2009 1:45:30 PM-> 6/15/2009 1:45 PM |   | `G`| Generell dato/klokkeslett mønsteret (lang tid). | Format:`{0:G}`<br /><br /> 6/15/2009 1:45:30 PM-> 6/15/2009 1:45:30 PM |   | `M` or `m`| Måned/dag mønsteret. | Format:`{0:M}`<br /><br /> 6/15/2009 1:45:30 PM-> juni 15 |   | `O` or `o`| Rundtur dato/klokkeslett mønsteret. | Format:`{0:o}`<br /><br /> 6/15/2009 1:45:30 PM-> 2009 – 06-15T13:45:30.0900000 |   | `R` or `r`| RFC1123 mønsteret (se <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=fullName>for informasjon). | Format: `{0:R}` </xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=fullName><br /><br /> 6/15/2009 1:45:30 PM-> man 15 juni 2009 20:45:30 GMT |   | `s`| Sorterbar dato/klokkeslett mønsteret. | Format:`{0:s}`<br /><br /> 6/15/2009 1:45:30 PM-> 2009 – 06-15T13:45:30 |   | `t`| Mønstret for kort tid. | Format:`{0:t}`<br /><br /> 6/15/2009 1:45:30 PM-> 1:45 PM |   | `T`| Lang Tidsmønsteret. | Format:`{0:T}`<br /><br /> 6/15/2009 1:45:30 PM-> 1:45:30 PM |   | `u`| Mønstret for Universal sorterbar dato/klokkeslett. | Format:`{0:u}`<br /><br /> 6/15/2009 1:45:30 PM-> 2009-06-15 20:45:30Z |   | `U`| Mønstret for Universal fullstendig dato/klokkeslett. | Format:`{0:U}`<br /><br /> 6/15/2009 1:45:30 PM-> mandag juni 15, 2009 8:45:30 PM |   | `Y` or `y`| Året måned mønsteret. | Format:`{0:Y}`<br /><br /> 6/15/2009 1:45:30 PM-> juni 2009 |       Du finner mer informasjon og eksempler som viser formatering for andre kultur verdier, se [Standard dato og klokkeslett-formatstrenger](~/add/includes/ajax-current-ext-md.md). Du kan også opprette egendefinerte dato og klokkeslett-formatstrenger. Hvis du vil ha mer informasjon, se [egendefinert dato og klokkeslett-formatstrenger](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191889).  \n  \n The following example shows how to use the DataFormatString property to specify a custom display format for the values of a field.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following example shows one row of the output that is produced by this example.  \n  \n|ProductID|Name|ProductNumber|ListPrice|Weight|ModifiedDate|  \n|---------------|----------|-------------------|---------------|------------|------------------|  \n|`000680`|`HL Road Frame - Black, 58`|`#FR-R92B-58`|`$1,431.50`|`1016.040`|`3/11/2004`|"
  syntax:
    content: public virtual string DataFormatString { get; set; }
    return:
      type: System.String
      description: "En formatering tekststreng som angir visningsformatet for verdien i feltet. Standarden er en tom streng (&quot;&quot;), noe som angir at ingen spesielle formateringen til feltverdien."
  overload: System.Web.UI.WebControls.BoundField.DataFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  id: ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Fyller den angitte &lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt; objektet med verdiene fra den angitte <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> objektet."
  remarks: "Metoden ExtractValuesFromCell er angitt som en enkel måte å hente verdier for feltene fra den angitte <xref:System.Web.UI.WebControls.TableCell>objekt i en <xref:System.Web.UI.WebControls.BoundField>objektet.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.TableCell>      > [!NOTE] > Denne metoden brukes hovedsakelig av kontrollutviklere.       Denne metoden har ikke en returverdi. I stedet feltverdiene returneres av referansen via den <xref:System.Collections.IDictionary?displayProperty=fullName>objekt sendt for den `dictionary` parameteren.</xref:System.Collections.IDictionary?displayProperty=fullName> Etter at den har blitt kalt, gå gjennom den <xref:System.Collections.IDictionary?displayProperty=fullName>objekt for å få tilgang til feltverdiene.</xref:System.Collections.IDictionary?displayProperty=fullName>      > [!NOTE] > Hvis den <xref:System.Web.UI.WebControls.TableCell>objektet inneholder skrivebeskyttede feltverdier, må du sende i `true` for den `includeReadOnly` parameteren inkludere verdiene.</xref:System.Web.UI.WebControls.TableCell>"
  syntax:
    content: public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);
    parameters:
    - id: dictionary
      type: System.Collections.Specialized.IOrderedDictionary
      description: "En &lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt; brukes til å lagre verdiene i den angitte cellen."
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "Den <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> som inneholder verdiene du vil hente."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Én av de <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> verdier."
    - id: includeReadOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>å ta med verdier skrivebeskyttet feltene. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)
  id: FormatDataValue(System.Object,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: FormatDataValue(Object,Boolean)
  nameWithType: BoundField.FormatDataValue(Object,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.FormatDataValue(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Formaterer den angitte feltverdien for en celle i den <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> objektet."
  remarks: "Metoden FormatDataValue er helper metode som brukes til å gjøre en verdi for feltet til formatet som er angitt av den <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>egenskapen.</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> Hvis en verdi for feltet er null, verdien for den <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>egenskapen returneres.</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>      > [!NOTE] > Denne metoden brukes hovedsakelig av kontrollutviklere."
  syntax:
    content: protected virtual string FormatDataValue (object dataValue, bool encode);
    parameters:
    - id: dataValue
      type: System.Object
      description: "Feltverdien til å formatere."
    - id: encode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>kode verdien. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Verdien i feltet konverteres til formatet som er angitt av <xref:System.Web.UI.WebControls.BoundField.DataFormatString*>.</xref:System.Web.UI.WebControls.BoundField.DataFormatString*>"
  overload: System.Web.UI.WebControls.BoundField.FormatDataValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue
  id: GetDesignTimeValue
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: GetDesignTimeValue()
  nameWithType: BoundField.GetDesignTimeValue()
  fullName: System.Web.UI.WebControls.BoundField.GetDesignTimeValue()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter verdien brukt for en feltverdien ved gjengivelse av <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> objekt i en designer."
  remarks: "Metoden GetDesignTimeValue er en helper brukes til å bestemme hva verdien skal vises for et felt ved gjengivelse av <xref:System.Web.UI.WebControls.BoundField>objekt i en designer.</xref:System.Web.UI.WebControls.BoundField> Hvis ikke kan hente reelle data fra datakilden på utformingstidspunktet, vises verdien som returneres av denne metoden i stedet.      > [!NOTE] > Denne metoden brukes hovedsakelig av kontrollutviklere."
  syntax:
    content: protected virtual object GetDesignTimeValue ();
    parameters: []
    return:
      type: System.Object
      description: "Verdien som skal vises i designer som feltverdien."
  overload: System.Web.UI.WebControls.BoundField.GetDesignTimeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)
  id: GetValue(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: GetValue(Control)
  nameWithType: BoundField.GetValue(Control)
  fullName: System.Web.UI.WebControls.BoundField.GetValue(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter verdien av feltet som er bundet til den <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> objektet."
  remarks: "GetValue-metoden er en helper brukes til å bestemme verdien for et felt. Hvis det <xref:System.Web.UI.WebControls.BoundField>objektet vises i en designer og feltverdien kan ikke fastslås på utformingstidspunktet, returneres verdien fra det <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A>metoden returnert i stedet for den faktiske feltverdien.</xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> </xref:System.Web.UI.WebControls.BoundField>      > [!NOTE] > Denne metoden brukes hovedsakelig av kontrollutviklere."
  syntax:
    content: protected virtual object GetValue (System.Web.UI.Control controlContainer);
    parameters:
    - id: controlContainer
      type: System.Web.UI.Control
      description: "Beholder for feltverdien."
    return:
      type: System.Object
      description: "Verdien i feltet som er bundet til den <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.GetValue*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The container specified by the <code>controlContainer</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The container specified by the <code>controlContainer</code> parameter does not have a data item.  \n  \n \\- or -  \n  \n The data field was not found."
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.HeaderText
  id: HeaderText
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: HeaderText
  nameWithType: BoundField.HeaderText
  fullName: System.Web.UI.WebControls.BoundField.HeaderText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir teksten som vises i hodet til en kontroll av data."
  remarks: "Bruke egenskapen HeaderText identifiserer et felt i et data-kontroll med et egendefinert navn. Vanligste programmet for egenskapen HeaderText er å angi betydning kolonnenavn til databindingselementer feltene i en <xref:System.Web.UI.WebControls.GridView>eller <xref:System.Web.UI.WebControls.DetailsView>kontroll.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: public override string HeaderText { get; set; }
    return:
      type: System.String
      description: "Teksten som vises i hodet til en kontroll av data. Standardverdien er en tom streng (&quot;&quot;)."
  overload: System.Web.UI.WebControls.BoundField.HeaderText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.HtmlEncode
  id: HtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: HtmlEncode
  nameWithType: BoundField.HtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir en verdi som angir om feltverdier er HTML-kodet før de vises i en <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> objektet."
  remarks: "Use the HtmlEncode property to specify whether field values are HTML-encoded to their respective string representations before they are displayed in a <xref:System.Web.UI.WebControls.BoundField> object. For example, if this property is `true`, a string value of \"\\<script>\" would be rendered as \"&lt;script&gt;\". If this property is `false`, the string would be rendered unchanged.  \n  \n> [!NOTE]\n>  HTML-encoding field values helps to prevent cross-site scripting attacks and malicious content from being displayed. This property should be enabled whenever possible."
  example:
  - "The following code example demonstrates how to use the HtmlEncode property to prevent field values from being HTML-encoded before being displayed in a <xref:System.Web.UI.WebControls.BoundField> object.  \n  \n [!code-cs[BoundFieldHtmlEncode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_606_1.aspx)]\n [!code-vb[BoundFieldHtmlEncode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_606_1.aspx)]"
  syntax:
    content: public virtual bool HtmlEncode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis verdiene er HTML-kodet før de vises i en <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> objekt; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  id: HtmlEncodeFormatString
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: HtmlEncodeFormatString
  nameWithType: BoundField.HtmlEncodeFormatString
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir en verdi som angir om teksten som er opprettet ved å bruke den <xref:System.Web.UI.WebControls.BoundField.DataFormatString*>egenskapen til den <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> verdien må være HTML-kodede når den vises.</xref:System.Web.UI.WebControls.BoundField.DataFormatString*>"
  remarks: "HTML-encoding values can help prevent cross-site scripting attacks and malicious content from being displayed. HTML encoding is also useful when you want to display HTML code in the browser, such as displaying the string \"\\<br/>\" instead of inserting a line break (`<br/>` element) in the page.  \n  \n> [!NOTE]\n>  This property is new in ASP.NET 3.5. Setting this property to `false` restores the default behavior of the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property in versions of ASP.NET earlier than 3.5. For more information, see the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property."
  syntax:
    content: public virtual bool HtmlEncodeFormatString { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis det skal stå HTML-kodet; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)
  id: Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: Initialize(Boolean,Control)
  nameWithType: BoundField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.BoundField.Initialize(Boolean,Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initialiserer den <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> objektet."
  remarks: "I initialiseringsmetoden kalles av datakontrollen som den <xref:System.Web.UI.WebControls.BoundField>objektet som er knyttet til å utføre grunnleggende objektet initialisering for forekomster av feltet før feltet noensinne lagt til i en samling med rader.</xref:System.Web.UI.WebControls.BoundField> Data kontroller for eksempel <xref:System.Web.UI.WebControls.DetailsView>og <xref:System.Web.UI.WebControls.GridView>kalle den <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A>metoden i sine `CreateChildControls` metodene før andre metoder som `CreateRow` kalles for å opprette bestemte rader med data.</xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView>       Kall denne metoden når du skriver et egendefinert databundet kontrollere som bruker <xref:System.Web.UI.WebControls.TableCell>objekter til å utføre grunnleggende initialisering for en <xref:System.Web.UI.WebControls.BoundField>objektet.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.TableCell> Implementer denne metoden hvis din <xref:System.Web.UI.WebControls.BoundField>-avledet type krever en objekt-initialisering før den fyller ut <xref:System.Web.UI.WebControls.TableCell>objekter med data, eller kontroller i den <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A>metoden.</xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: public override bool Initialize (bool enableSorting, System.Web.UI.Control control);
    parameters:
    - id: enableSorting
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis sortering støttes. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: control
      type: System.Web.UI.Control
      description: "Datakontrollen som eier den <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>i alle tilfeller."
  overload: System.Web.UI.WebControls.BoundField.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initialiserer angitt <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> objektet til den angitte rad-tilstanden."
  remarks: "Metoden InitializeCell implementeres av <xref:System.Web.UI.WebControls.BoundField>-avledede typer for å legge til tekst og kontroller til en <xref:System.Web.UI.WebControls.TableCell>objekt til en kontroll med data som bruker tabeller til å vise brukergrensesnittet (UI).</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.BoundField> Disse Kontroller opprette hele tabellen strukturen rad-av-raden når kontrollens `CreateChildControls` -metoden. Metoden InitializeCell kalles av den `InitializeRow` -metoden til kontroller for eksempel <xref:System.Web.UI.WebControls.DetailsView>og <xref:System.Web.UI.WebControls.GridView>.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView>       Kall denne metoden når du skriver et egendefinert databundet kontrollere som bruker <xref:System.Web.UI.WebControls.TableCell>objekter initialisere cellene i tabellstrukturen med data eller kontroller.</xref:System.Web.UI.WebControls.TableCell> Implementer denne metoden når du skriver et <xref:System.Web.UI.WebControls.BoundField>-avledet klasse.</xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "Den <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> ikke initialisert."
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "Én av de <xref href=&quot;System.Web.UI.WebControls.DataControlCellType&quot;> </xref> verdier."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Én av de <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> verdier."
    - id: rowIndex
      type: System.Int32
      description: "Den nullbaserte indeksen for raden."
  overload: System.Web.UI.WebControls.BoundField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  id: InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: InitializeDataCell(DataControlFieldCell,DataControlRowState)
  nameWithType: BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  fullName: System.Web.UI.WebControls.BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initialiserer angitt <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> objektet til den angitte rad-tilstanden."
  remarks: "Metoden InitializeDataCell er en helper brukes til å initialisere en celle i den <xref:System.Web.UI.WebControls.BoundField>objektet.</xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: protected virtual void InitializeDataCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "Den <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> ikke initialisert."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Én av de <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> verdier."
  overload: System.Web.UI.WebControls.BoundField.InitializeDataCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: BoundField.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.BoundField.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gjenoppretter tidligere lagret visningsstatus informasjon for dette feltet."
  syntax:
    content: protected override void LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "Representerer tilstanden kontrollen skal gjenopprettes."
  overload: System.Web.UI.WebControls.BoundField.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.NullDisplayText
  id: NullDisplayText
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: NullDisplayText
  nameWithType: BoundField.NullDisplayText
  fullName: System.Web.UI.WebControls.BoundField.NullDisplayText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir teksten som vises for et felt når feltverdien er null."
  remarks: "Noen ganger lagres verdien for et felt som null i datakilden. Du kan angi en egendefinert tekst som vises for felt som har en nullverdi ved å angi egenskapen NullDisplayText. Hvis denne egenskapen ikke er angitt, null feltverdier vises som tomme strenger (&quot;&quot;). Når en post angis blir oppdatert eller er satt inn i en databundet kontroll hvis brukeren angir verdien av denne egenskapen (bortsett fra en tom streng) for et felt i en databundet kontroll at verdien automatisk konverteres til null i datakilden.      > [!NOTE] > For å konvertere en verdi for feltet for tom streng til en null-verdi, kan du angi den <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>egenskapen `true`.</xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>"
  example:
  - "The following code example demonstrates how to use the NullDisplayText property to specify a custom caption to display for null field values.  \n  \n [!code-vb[BoundFieldNullDisplayText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1327_1.aspx)]\n [!code-cs[BoundFieldNullDisplayText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1327_1.aspx)]"
  syntax:
    content: public virtual string NullDisplayText { get; set; }
    return:
      type: System.String
      description: "Teksten som vises for et felt når feltverdien er null. Standarden er en tom streng (&quot;&quot;), noe som angir at denne egenskapen ikke er angitt."
  overload: System.Web.UI.WebControls.BoundField.NullDisplayText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)
  id: OnDataBindField(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: OnDataBindField(Object,EventArgs)
  nameWithType: BoundField.OnDataBindField(Object,EventArgs)
  fullName: System.Web.UI.WebControls.BoundField.OnDataBindField(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Binding verdien for et felt i <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> objektet."
  remarks: "Den <xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A>metoden er en helper brukes til å binde verdien av feltet i datakilden til en tilsvarende celle i den <xref:System.Web.UI.WebControls.BoundField>objektet.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A>"
  syntax:
    content: protected virtual void OnDataBindField (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "Kilden for hendelsen."
    - id: e
      type: System.EventArgs
      description: "En <xref:System.EventArgs>som inneholder Hendelsesdata.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.BoundField.OnDataBindField*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Kontrollen feltverdien er bundet til er ikke en <xref href=&quot;System.Web.UI.WebControls.TextBox&quot;> </xref> eller <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ReadOnly
  id: ReadOnly
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ReadOnly
  nameWithType: BoundField.ReadOnly
  fullName: System.Web.UI.WebControls.BoundField.ReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir en verdi som angir om verdien i feltet kan endres i redigeringsmodus."
  remarks: "Bruk ReadOnly-egenskapen for å hindre verdiene som vises i en <xref:System.Web.UI.WebControls.BoundField>objektet blir endret.</xref:System.Web.UI.WebControls.BoundField> Når en databundet kontroll i redigeringsmodus, vises feltene som er skrivebeskyttet som ren tekst, uten noen redigering kontroller.      > [!NOTE] > I ReadOnly-egenskapen gjelder bare for redigeringsmodusen. For å hindre at vises i insert-modus, kan du bruke den <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A>egenskapen.</xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A>"
  example:
  - "The following code example demonstrates how to use the ReadOnly property to prevent the values of the key field displayed in a <xref:System.Web.UI.WebControls.BoundField> object from being modified in edit mode.  \n  \n [!code-vb[BoundField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_208_1.aspx)]\n [!code-cs[BoundField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_208_1.aspx)]"
  syntax:
    content: public virtual bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>å hindre at verdien i feltet endres i redigeringsmodus; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.ReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  id: SupportsHtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: SupportsHtmlEncode
  nameWithType: BoundField.SupportsHtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter en verdi som angir om HTML-kode som støttes av en <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> objektet."
  remarks: "Egenskapen SupportsHtmlEncode er en helper-egenskap som brukes av <xref:System.Web.UI.WebControls.BoundField>klassen og avledede klasser å finne ut om HTML-kode som støttes av klassen.</xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: protected virtual bool SupportsHtmlEncode { get; }
    return:
      type: System.Boolean
      description: "Returnerer alltid <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> til å angi at HTML-kode som støttes av en <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ThisExpression
  id: ThisExpression
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ThisExpression
  nameWithType: BoundField.ThisExpression
  fullName: System.Web.UI.WebControls.BoundField.ThisExpression
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Representerer &quot;this&quot; uttrykket."
  remarks: "Dette feltet brukes til å angi at den <xref:System.Web.UI.WebControls.BoundField>objektet skal bindes mot datakilden seg selv i stedet for et felt for datakilden.</xref:System.Web.UI.WebControls.BoundField> I dette tilfellet objektets `ToString` vises verdien i feltet.       Dette feltet brukes hovedsakelig av kontrollutviklere."
  syntax:
    content: public static readonly string ThisExpression;
    return:
      type: System.String
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: BoundField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.BoundField.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir en verdi som bestemmer om kontrollen validerer klienten inndata eller ikke."
  syntax:
    content: public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "En verdi som bestemmer om kontrollen validerer klienten inndata eller ikke. Standard <xref href=&quot;System.Web.UI.ValidateRequestMode&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback
  id: ValidateSupportsCallback
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ValidateSupportsCallback()
  nameWithType: BoundField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Bestemmer om kontrollene finnes i en <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> objekt støtte tilbakeringinger."
  remarks: "Metoden ValidateSupportsCallback er en helper brukes til å bestemme om kontrollene finnes i en <xref:System.Web.UI.WebControls.BoundField>objekt støtte tilbakeringinger.</xref:System.Web.UI.WebControls.BoundField> Denne metoden er implementert som en tom metode (en metode som ikke inneholder kode) til å angi at tilbakeringinger støttes.      > [!NOTE] > Denne metoden brukes hovedsakelig av kontrollutviklere."
  syntax:
    content: public override void ValidateSupportsCallback ();
    parameters: []
  overload: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.WebControls.DataControlField
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.BoundField.#ctor
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: BoundField()
  nameWithType: BoundField.BoundField()
  fullName: System.Web.UI.WebControls.BoundField.BoundField()
- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: BoundField.ApplyFormatInEditMode
  fullName: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: BoundField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
- uid: System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: BoundField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.BoundField.CopyProperties(DataControlField)
- uid: System.Web.UI.WebControls.BoundField.CreateField
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CreateField()
  nameWithType: BoundField.CreateField()
  fullName: System.Web.UI.WebControls.BoundField.CreateField()
- uid: System.Web.UI.WebControls.BoundField.DataField
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataField
  nameWithType: BoundField.DataField
  fullName: System.Web.UI.WebControls.BoundField.DataField
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.BoundField.DataFormatString
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataFormatString
  nameWithType: BoundField.DataFormatString
  fullName: System.Web.UI.WebControls.BoundField.DataFormatString
- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: FormatDataValue(Object,Boolean)
  nameWithType: BoundField.FormatDataValue(Object,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.FormatDataValue(Object,Boolean)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetDesignTimeValue()
  nameWithType: BoundField.GetDesignTimeValue()
  fullName: System.Web.UI.WebControls.BoundField.GetDesignTimeValue()
- uid: System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetValue(Control)
  nameWithType: BoundField.GetValue(Control)
  fullName: System.Web.UI.WebControls.BoundField.GetValue(Control)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.BoundField.HeaderText
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HeaderText
  nameWithType: BoundField.HeaderText
  fullName: System.Web.UI.WebControls.BoundField.HeaderText
- uid: System.Web.UI.WebControls.BoundField.HtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncode
  nameWithType: BoundField.HtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncode
- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncodeFormatString
  nameWithType: BoundField.HtmlEncodeFormatString
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
- uid: System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: Initialize(Boolean,Control)
  nameWithType: BoundField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.BoundField.Initialize(Boolean,Control)
- uid: System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeDataCell(DataControlFieldCell,DataControlRowState)
  nameWithType: BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  fullName: System.Web.UI.WebControls.BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
- uid: System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: BoundField.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.BoundField.LoadViewState(Object)
- uid: System.Web.UI.WebControls.BoundField.NullDisplayText
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: NullDisplayText
  nameWithType: BoundField.NullDisplayText
  fullName: System.Web.UI.WebControls.BoundField.NullDisplayText
- uid: System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: OnDataBindField(Object,EventArgs)
  nameWithType: BoundField.OnDataBindField(Object,EventArgs)
  fullName: System.Web.UI.WebControls.BoundField.OnDataBindField(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.BoundField.ReadOnly
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ReadOnly
  nameWithType: BoundField.ReadOnly
  fullName: System.Web.UI.WebControls.BoundField.ReadOnly
- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: SupportsHtmlEncode
  nameWithType: BoundField.SupportsHtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
- uid: System.Web.UI.WebControls.BoundField.ThisExpression
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ThisExpression
  nameWithType: BoundField.ThisExpression
  fullName: System.Web.UI.WebControls.BoundField.ThisExpression
- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: BoundField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.BoundField.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateSupportsCallback()
  nameWithType: BoundField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback()
- uid: System.Web.UI.WebControls.BoundField.#ctor*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: BoundField
  nameWithType: BoundField.BoundField
- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: BoundField.ApplyFormatInEditMode
- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: BoundField.ConvertEmptyStringToNull
- uid: System.Web.UI.WebControls.BoundField.CopyProperties*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CopyProperties
  nameWithType: BoundField.CopyProperties
- uid: System.Web.UI.WebControls.BoundField.CreateField*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CreateField
  nameWithType: BoundField.CreateField
- uid: System.Web.UI.WebControls.BoundField.DataField*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataField
  nameWithType: BoundField.DataField
- uid: System.Web.UI.WebControls.BoundField.DataFormatString*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataFormatString
  nameWithType: BoundField.DataFormatString
- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ExtractValuesFromCell
  nameWithType: BoundField.ExtractValuesFromCell
- uid: System.Web.UI.WebControls.BoundField.FormatDataValue*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: FormatDataValue
  nameWithType: BoundField.FormatDataValue
- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetDesignTimeValue
  nameWithType: BoundField.GetDesignTimeValue
- uid: System.Web.UI.WebControls.BoundField.GetValue*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetValue
  nameWithType: BoundField.GetValue
- uid: System.Web.UI.WebControls.BoundField.HeaderText*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HeaderText
  nameWithType: BoundField.HeaderText
- uid: System.Web.UI.WebControls.BoundField.HtmlEncode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncode
  nameWithType: BoundField.HtmlEncode
- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncodeFormatString
  nameWithType: BoundField.HtmlEncodeFormatString
- uid: System.Web.UI.WebControls.BoundField.Initialize*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: Initialize
  nameWithType: BoundField.Initialize
- uid: System.Web.UI.WebControls.BoundField.InitializeCell*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeCell
  nameWithType: BoundField.InitializeCell
- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeDataCell
  nameWithType: BoundField.InitializeDataCell
- uid: System.Web.UI.WebControls.BoundField.LoadViewState*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: LoadViewState
  nameWithType: BoundField.LoadViewState
- uid: System.Web.UI.WebControls.BoundField.NullDisplayText*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: NullDisplayText
  nameWithType: BoundField.NullDisplayText
- uid: System.Web.UI.WebControls.BoundField.OnDataBindField*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: OnDataBindField
  nameWithType: BoundField.OnDataBindField
- uid: System.Web.UI.WebControls.BoundField.ReadOnly*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ReadOnly
  nameWithType: BoundField.ReadOnly
- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: SupportsHtmlEncode
  nameWithType: BoundField.SupportsHtmlEncode
- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: BoundField.ValidateRequestMode
- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateSupportsCallback
  nameWithType: BoundField.ValidateSupportsCallback
