### YamlMime:ManagedReference
items:
- uid: System.Globalization.EastAsianLunisolarCalendar
  id: EastAsianLunisolarCalendar
  children:
  - System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
  - System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  langs:
  - csharp
  name: EastAsianLunisolarCalendar
  nameWithType: EastAsianLunisolarCalendar
  fullName: System.Globalization.EastAsianLunisolarCalendar
  type: Class
  summary: "Representerer en kalender som deler tid til måneder, dager, år og perioder og har datoer som er basert på sykluser Solen og Månen."
  remarks: "Klassen EastAsianLunisolarCalendar støtter sexagenary syklus år (som gjentas på hver 60 år) i tillegg til oppretting år og lunar måneder. Hvert oppretting år i kalenderen er knyttet til et Sexagenary år (se <xref:System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear%2A>), en større stamme (se <xref:System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem%2A>), og en bakkesendt gren (se <xref:System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch%2A>).</xref:System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch%2A> </xref:System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem%2A> </xref:System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear%2A>      > [!NOTE] > For informasjon om hvordan du bruker den <xref:System.Globalization.HebrewCalendar>klassen og andre kalender klasser i .NET Framework, kan du se [arbeide med kalendere](~/add/includes/ajax-current-ext-md.md).</xref:System.Globalization.HebrewCalendar>       Et år kan ha et skuddår måned, etter noen måneden i året, og en måned kan ha skuddår daglig. For eksempel den <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>metoden returnerer et positivt heltall som angir måneden knyttet til en angitt dato.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> Hvis det er et skuddår måned mellom åttende og niende måned i året, den <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>8-metoden for den åttende måneden, 9 for skuddår åttende måneden og 10 for niende måneden.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>       Hver <xref:System.Globalization.CultureInfo>støtter en rekke kalendere.</xref:System.Globalization.CultureInfo> For øyeblikket brukes ingen av lunisolar kalender klassene som er avledet fra EastAsianLunisolarCalendar av en av kulturene støttes av <xref:System.Globalization.CultureInfo>klasse.</xref:System.Globalization.CultureInfo> Denne klassen, og de som er avledet fra den kan derfor brukes bare til å beregne datoer i østasiatiske lunisolar kalendere. Denne klassen støtter flere &quot;hente&quot; metoder for å beskrive en <xref:System.DateTime>i begrepene av lunisolar kalendere og <xref:System.Globalization.EastAsianLunisolarCalendar.ToDateTime%2A>til å konvertere fra lunisolar kalenderdata til en <xref:System.DateTime>.</xref:System.DateTime> </xref:System.Globalization.EastAsianLunisolarCalendar.ToDateTime%2A> </xref:System.DateTime>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class EastAsianLunisolarCalendar : System.Globalization.Calendar
  inheritance:
  - System.Globalization.Calendar
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: AddMonths(DateTime,Int32)
  nameWithType: EastAsianLunisolarCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.AddMonths(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beregner datoen som er angitt antall måneder fra den angitte datoen."
  remarks: "En dagdel av den resulterende <xref:System.DateTime>påvirkes hvis den resulterende dagen ikke er en gyldig dag i den resulterende måneden i året resulterende.</xref:System.DateTime> I dette tilfellet er del av dagen endret til den siste gyldige dagen i året resulterende resulterende måned. Året som en del av den resulterende <xref:System.DateTime>påvirkes hvis resulterende måneden er utenfor året for den angitte <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> Denne implementeringen støtter bare gjeldende epoke. Derfor <xref:System.ArgumentException>oppstår hvis resulterende året er utenfor området for den angitte <xref:System.DateTime>.</xref:System.DateTime> </xref:System.ArgumentException> Tidspunkt-på-dagen-del av den resulterende <xref:System.DateTime>forblir det samme som den angitte <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       For eksempel hvis den angitte måneden oktober, som har 31 dager, den angitte dagen er tretti første dag denne måneden, og verdien for den `months` parameteren er 6, resulterende året er én mer enn det angitte året, måneden resulterende er April, og den resulterende dagen thirtieth dag, som er den siste dagen i April.       Hvis verdien for den `months` parameteren er negativ, den resulterende som <xref:System.DateTime>er eldre enn den angitte <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       <xref:System.DateTime.Kind%2A>Egenskapen for den returnerte <xref:System.DateTime>verdien alltid er lik <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> Kan du beholde den <xref:System.DateTime.Kind%2A>for den `time` parameteren ved å kalle den <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>metoden som i dette eksemplet.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#5](~/add/codesnippet/visualbasic/d86a04c2-1ef4-4a8d-ab7c-_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#5  ](~/add/codesnippet/csharp/d86a04c2-1ef4-4a8d-ab7c-_1.cs)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>du vil legge til `months`.</xref:System.DateTime>"
    - id: months
      type: System.Int32
      description: "Antall måneder du skal legge til."
    return:
      type: System.DateTime
      description: "En ny <xref:System.DateTime>som et resultat av å legge til det angitte antallet måneder til den <code> time </code> parameteren.</xref:System.DateTime>"
  overload: System.Globalization.EastAsianLunisolarCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Resultatet er utenfor området som støttes av <xref:System.DateTime>.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code>er mindre enn-120000 eller større enn 120000.       - eller - <code>time</code> er mindre enn <xref:System.Globalization.Calendar.MinSupportedDateTime*> eller større enn <xref:System.Globalization.Calendar.MaxSupportedDateTime*>."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: AddYears(DateTime,Int32)
  nameWithType: EastAsianLunisolarCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.AddYears(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beregner datoen som er angitt antall år fra den angitte datoen."
  remarks: "En dagdel av den resulterende <xref:System.DateTime>påvirkes hvis den resulterende dagen ikke er en gyldig dag i den resulterende måneden i året resulterende.</xref:System.DateTime> I dette tilfellet er del av dagen endret til den siste gyldige dagen i året resulterende resulterende måned. Måned en del av den resulterende <xref:System.DateTime>forblir det samme som den angitte <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> Denne implementeringen støtter bare gjeldende epoke. Derfor <xref:System.ArgumentException>oppstår hvis resulterende året er utenfor området for den angitte <xref:System.DateTime>.</xref:System.DateTime> </xref:System.ArgumentException> Tidspunkt-på-dagen-del av den resulterende <xref:System.DateTime>forblir det samme som den angitte <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       For eksempel har februar 28 dager, unntatt under skuddår når den har 29 dager. Hvis den angitte datoen er twenty ninth dagen i februar i et skuddår og verdien for den `years` parameteren er 1, resulterende datoen blir twenty / 8 dagen i februar i følgende året.       Hvis `years` er negativ, den resulterende som <xref:System.DateTime>er eldre enn den angitte <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       <xref:System.DateTime.Kind%2A>Egenskapen for den returnerte <xref:System.DateTime>verdien alltid er lik <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> Kan du beholde den <xref:System.DateTime.Kind%2A>for den `time` parameteren ved å kalle den <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>metoden som i dette eksemplet.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#8](~/add/codesnippet/visualbasic/6f9d0244-83a4-4a86-acea-_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#8  ](~/add/codesnippet/csharp/6f9d0244-83a4-4a86-acea-_1.cs)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>du vil legge til `years`.</xref:System.DateTime>"
    - id: years
      type: System.Int32
      description: "Antall år til å legge til."
    return:
      type: System.DateTime
      description: "En ny <xref:System.DateTime>som et resultat av å legge til den angitte årene til den <code> time </code> parameteren.</xref:System.DateTime>"
  overload: System.Globalization.EastAsianLunisolarCalendar.AddYears*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Resultatet er utenfor området som støttes av <xref:System.DateTime>.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>er mindre enn <xref:System.Globalization.Calendar.MinSupportedDateTime*> eller større enn <xref:System.Globalization.Calendar.MaxSupportedDateTime*>."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: EastAsianLunisolarCalendar.AlgorithmType
  fullName: System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Henter en verdi som angir om gjeldende kalender er sol- og månekalender-baserte eller en kombinasjon av begge."
  syntax:
    content: public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: "Returnerer alltid <xref href=&quot;System.Globalization.CalendarAlgorithmType&quot;> </xref>."
  overload: System.Globalization.EastAsianLunisolarCalendar.AlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  id: GetCelestialStem(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetCelestialStem(Int32)
  nameWithType: EastAsianLunisolarCalendar.GetCelestialStem(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beregner større stamme for det angitte året syklusen sexagenary (60 år)."
  syntax:
    content: public int GetCelestialStem (int sexagenaryYear);
    parameters:
    - id: sexagenaryYear
      type: System.Int32
      description: "Et heltall fra 1 til 60 som representerer et år i sexagenary syklus."
    return:
      type: System.Int32
      description: "Et tall fra 1 til 10."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>sexagenaryYear</code>er mindre enn 1 eller større enn 60."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beregner dagen i måneden i den angitte datoen."
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>til å lese.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Et heltall fra 1 til 31 som representerer dagen i måneden som er angitt i den <code> time </code> parameteren."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beregner dagen i uken i den angitte datoen."
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>til å lese.</xref:System.DateTime>"
    return:
      type: System.DayOfWeek
      description: "Én av de <xref:System.DayOfWeek>verdier som representerer dagen i uken som er angitt i den <code> time </code> parameteren.</xref:System.DayOfWeek>"
  overload: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>er mindre enn <xref:System.Globalization.Calendar.MinSupportedDateTime*> eller større enn <xref:System.Globalization.Calendar.MaxSupportedDateTime*>."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beregner dagen i året i den angitte datoen."
  remarks: "Dagen i året som er definert som antall dager fra den første dagen i året. For eksempel GetDayOfYear for den første dagen i måneden som første returnerer 1 og GetDayOfYear for den siste dagen i måneden siste Totalt antall dager i dette året er den samme verdien som returneres av <xref:System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear%2A>.</xref:System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear%2A>"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>til å lese.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Et heltall fra 1 til 354 i et vanlig år eller 1 til 384 i et skuddår som representerer dagen i året som er angitt i den <code> time </code> parameteren."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beregner antall dager i måneden som er angitt av det angitte året og epoke."
  remarks: "Ifthe `month` parameteren er den andre måneden, metoden GetDaysInMonth returnerer 28 eller 29, avhengig av om den `year` parameteren er et skuddår."
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Et heltall som representerer året."
    - id: month
      type: System.Int32
      description: "Et heltall mellom 1 og 12 i et vanlig år, eller 1 til 13 i et skuddår, som representerer måneden."
    - id: era
      type: System.Int32
      description: "Et heltall som representerer epoken."
    return:
      type: System.Int32
      description: "Antall dager i måneden som er angitt av det angitte året og epoke."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, eller <code>era</code> er utenfor området som støttes av denne kalenderen."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beregner antall dager i angitt år og epoke."
  remarks: "Metoden GetDaysInYear returnerer 365 eller 366, avhengig av om den `year` parameteren er et skuddår."
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Et heltall som representerer året."
    - id: era
      type: System.Int32
      description: "Et heltall som representerer epoken."
    return:
      type: System.Int32
      description: "Antall dager i angitt år og epoke."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>eller <code>era</code> er utenfor området som støttes av denne kalenderen."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beregner skuddår måneden for angitt år og epoke."
  remarks: "I en kalender som støtter en skuddår måned, kan måneden skuddår forekomme etter en bestemt måned eller etter noen måneden i året. For eksempel den <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>metoden returnerer et tall fra 1 til 13 som angir måneden knyttet til en angitt dato.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> Hvis det er et skuddår måned mellom åttende og niende måned i året, den <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>8-metoden for den åttende måneden, 9 for skuddår åttende måneden og 10 for niende måneden.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>"
  syntax:
    content: public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Et heltall som representerer året."
    - id: era
      type: System.Int32
      description: "Et heltall som representerer epoken."
    return:
      type: System.Int32
      description: "Et positivt heltall mellom 1 og 13 som angir skuddår måned i angitt år og epoke.       - eller - null Hvis denne kalenderen ikke støtter en skuddår måned, eller hvis den <code> year </code> og <code> era </code> parametere som ikke angir et skuddår."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetMonth(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerer måneden i den angitte datoen."
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>til å lese.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Et heltall fra 1 til 13 som representerer måneden angitt i den <code> time </code> parameteren."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beregner antall måneder i angitt år og epoke."
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Et heltall som representerer året."
    - id: era
      type: System.Int32
      description: "Et heltall som representerer epoken."
    return:
      type: System.Int32
      description: "Antall måneder i det angitte året i det angitte området. Verdien som returneres er 12 måneder i et vanlig år eller 13 måneder i et skuddår."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>eller <code>era</code> er utenfor området som støttes av denne kalenderen."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  id: GetSexagenaryYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetSexagenaryYear(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetSexagenaryYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beregner året i sexagenary (60 år) syklusen som tilsvarer den angitte datoen."
  syntax:
    content: public virtual int GetSexagenaryYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "En <xref:System.DateTime>til å lese.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Et tall fra 1 til 60 sexagenary syklusen som tilsvarer det <code> date </code> parameteren."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  id: GetTerrestrialBranch(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetTerrestrialBranch(Int32)
  nameWithType: EastAsianLunisolarCalendar.GetTerrestrialBranch(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beregner bakkesendt del av det angitte året syklusen sexagenary (60 år)."
  syntax:
    content: public int GetTerrestrialBranch (int sexagenaryYear);
    parameters:
    - id: sexagenaryYear
      type: System.Int32
      description: "Et heltall fra 1 til 60 som representerer et år i sexagenary syklus."
    return:
      type: System.Int32
      description: "Et heltall fra 1 til 12."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>sexagenaryYear</code>er mindre enn 1 eller større enn 60."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerer året i den angitte datoen."
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>til å lese.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Et heltall som representerer året i den angitte <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.EastAsianLunisolarCalendar.GetYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Bestemmer om den angitte datoen i angitte epoke skuddår daglig."
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Et heltall som representerer året."
    - id: month
      type: System.Int32
      description: "Et heltall mellom 1 og 13 som representerer måneden."
    - id: day
      type: System.Int32
      description: "Et heltall fra 1 til 31 som representerer dagen."
    - id: era
      type: System.Int32
      description: "Et heltall som representerer epoken."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den angitte dagen er et skuddår dagen. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, <code>day</code>, eller <code>era</code> er utenfor området som støttes av denne kalenderen."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Bestemmer om den angitte måneden i angitt år og epoke er et skuddår måned."
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Et heltall som representerer året."
    - id: month
      type: System.Int32
      description: "Et heltall mellom 1 og 13 som representerer måneden."
    - id: era
      type: System.Int32
      description: "Et heltall som representerer epoken."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den <code> month </code> parameteren er et skuddår måned; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, eller <code>era</code> er utenfor området som støttes av denne kalenderen."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Bestemmer om det angitte året i den angitte epoken er et skuddår."
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Et heltall som representerer året."
    - id: era
      type: System.Int32
      description: "Et heltall som representerer epoken."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis det angitte året er et skuddår; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>eller <code>era</code> er utenfor området som støttes av denne kalenderen."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerer en <xref:System.DateTime>som er satt til det angitte date, time og epoke.</xref:System.DateTime>"
  remarks: "Metoden ToDateTime kan konvertere en dato i gjeldende kalender hittil gregoriansk kalender. Datoen gregoriansk kan deretter brukes, for eksempel til å sammenligne datoer i forskjellige kalendere eller opprette en tilsvarende datoen i en bestemt kalender."
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Et heltall som representerer året."
    - id: month
      type: System.Int32
      description: "Et heltall mellom 1 og 13 som representerer måneden."
    - id: day
      type: System.Int32
      description: "Et heltall fra 1 til 31 som representerer dagen."
    - id: hour
      type: System.Int32
      description: "Et heltall fra 0 til 23 som representerer timen."
    - id: minute
      type: System.Int32
      description: "Et heltall fra 0 til 59 som representerer minuttet."
    - id: second
      type: System.Int32
      description: "Et heltall fra 0 til 59 som representerer sekundet."
    - id: millisecond
      type: System.Int32
      description: "Et heltall mellom 0 og 999 som representerer millisekundet."
    - id: era
      type: System.Int32
      description: "Et heltall som representerer epoken."
    return:
      type: System.DateTime
      description: "En <xref:System.DateTime>som er satt til det angitte date, time og epoke.</xref:System.DateTime>"
  overload: System.Globalization.EastAsianLunisolarCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, <code>day</code>, <code>hour</code>, <code>minute</code>, <code>second</code>, <code>millisecond</code>, eller <code>era</code> er utenfor området som støttes av denne kalenderen."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: EastAsianLunisolarCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Konverterer angitt år til et årstall med fire sifre."
  remarks: "Metoden ToFourDigitYear bruker den <xref:System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax%2A>til å fastslå den aktuelle innstillingene.</xref:System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax%2A>       ToFourDigitYear støtter to årstall eller et årstall med fire sifre. Sende en verdi med to sifre (mindre enn 100) fører til at metoden ikke konvertere verdien til en firesifret-verdi i henhold til den <xref:System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax%2A>verdien som representerer den aktuelle innstillingene.</xref:System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax%2A> Hvis programmet oppgir en firesifret årstall-verdi som er innenfor støttet kalender til ToFourDigitYear, returnerer metoden faktiske inndataverdien. Hvis programmet inneholder en firesifret-verdi som er utenfor området støttet kalender, eller hvis den inneholder en negativ verdi, oppstår det et unntak i metoden."
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "Et to sifre eller firesifret heltall som representerer året til å konvertere."
    return:
      type: System.Int32
      description: "Et heltall med fire sifre-representasjon av den <code> year </code> parameteren."
  overload: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>er utenfor området som støttes av denne kalenderen."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: EastAsianLunisolarCalendar.TwoDigitYearMax
  fullName: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Henter eller angir det siste året av et intervall på 100 år som representeres av et årstall med 2."
  remarks: "Denne egenskapen kan et 2 årstall som skal riktig oversettes til et årstall med 4. For eksempel i gregoriansk kalender er Hvis denne egenskapen settes til 2029 100 år-område fra 1930 til 2029. Verdien 2 siffer 30 tolkes derfor som 1930, mens verdien 2 siffer 29 tolkes som 2029.       Startverdien for denne egenskapen er avledet av innstillingene i den region og språk alternativer-delen i Kontrollpanel. Denne informasjonen kan imidlertid endre under levetid <xref:System.AppDomain>.</xref:System.AppDomain> Den <xref:System.Globalization.EastAsianLunisolarCalendar>klassen gjenkjenner ikke endringer i systeminnstillingene automatisk.</xref:System.Globalization.EastAsianLunisolarCalendar>"
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: "Det siste året av et intervall på 100 år som representeres av et årstall med 2."
  overload: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Gjeldende <xref href=&quot;System.Globalization.EastAsianLunisolarCalendar&quot;> </xref> er skrivebeskyttet."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Verdien i en set-operasjon er mindre enn 99 eller større enn maksimalt antall støttede året i gjeldende kalender."
  platform:
  - net462
references:
- uid: System.Globalization.Calendar
  isExternal: false
  name: System.Globalization.Calendar
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: AddMonths(DateTime,Int32)
  nameWithType: EastAsianLunisolarCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.AddMonths(DateTime,Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: AddYears(DateTime,Int32)
  nameWithType: EastAsianLunisolarCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.AddYears(DateTime,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: EastAsianLunisolarCalendar.AlgorithmType
  fullName: System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetCelestialStem(Int32)
  nameWithType: EastAsianLunisolarCalendar.GetCelestialStem(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(Int32,Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDaysInYear(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetLeapMonth(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetMonth(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetMonth(DateTime)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetSexagenaryYear(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetSexagenaryYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(DateTime)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetTerrestrialBranch(Int32)
  nameWithType: EastAsianLunisolarCalendar.GetTerrestrialBranch(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetYear(DateTime)
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(Int32,Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: IsLeapYear(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: EastAsianLunisolarCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: EastAsianLunisolarCalendar.TwoDigitYearMax
  fullName: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
- uid: System.Globalization.EastAsianLunisolarCalendar.AddMonths*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: AddMonths
  nameWithType: EastAsianLunisolarCalendar.AddMonths
- uid: System.Globalization.EastAsianLunisolarCalendar.AddYears*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: AddYears
  nameWithType: EastAsianLunisolarCalendar.AddYears
- uid: System.Globalization.EastAsianLunisolarCalendar.AlgorithmType*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: EastAsianLunisolarCalendar.AlgorithmType
- uid: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetCelestialStem
  nameWithType: EastAsianLunisolarCalendar.GetCelestialStem
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: EastAsianLunisolarCalendar.GetDayOfMonth
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: EastAsianLunisolarCalendar.GetDayOfWeek
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: EastAsianLunisolarCalendar.GetDayOfYear
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: EastAsianLunisolarCalendar.GetDaysInMonth
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: EastAsianLunisolarCalendar.GetDaysInYear
- uid: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: EastAsianLunisolarCalendar.GetLeapMonth
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonth*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetMonth
  nameWithType: EastAsianLunisolarCalendar.GetMonth
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: EastAsianLunisolarCalendar.GetMonthsInYear
- uid: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetSexagenaryYear
  nameWithType: EastAsianLunisolarCalendar.GetSexagenaryYear
- uid: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetTerrestrialBranch
  nameWithType: EastAsianLunisolarCalendar.GetTerrestrialBranch
- uid: System.Globalization.EastAsianLunisolarCalendar.GetYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetYear
  nameWithType: EastAsianLunisolarCalendar.GetYear
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: EastAsianLunisolarCalendar.IsLeapDay
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: EastAsianLunisolarCalendar.IsLeapMonth
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: EastAsianLunisolarCalendar.IsLeapYear
- uid: System.Globalization.EastAsianLunisolarCalendar.ToDateTime*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: EastAsianLunisolarCalendar.ToDateTime
- uid: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: EastAsianLunisolarCalendar.ToFourDigitYear
- uid: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: EastAsianLunisolarCalendar.TwoDigitYearMax
