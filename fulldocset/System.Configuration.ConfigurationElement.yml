### YamlMime:ManagedReference
items:
- uid: System.Configuration.ConfigurationElement
  id: ConfigurationElement
  children:
  - System.Configuration.ConfigurationElement.#ctor
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Properties
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  langs:
  - csharp
  name: ConfigurationElement
  nameWithType: ConfigurationElement
  fullName: System.Configuration.ConfigurationElement
  type: Class
  summary: "Representerer en konfigurasjonselementet i en konfigurasjonsfil."
  remarks: "ConfigurationElement er en abstrakt klasse som representerer et XML-element i en konfigurasjonsfil (for eksempel Web.config). Et element i en konfigurasjonsfil kan inneholde null, en eller flere underordnede elementer.       Fordi ConfigurationElement klassen er definert som abstrakt, kan du opprette en forekomst av den. Du kan bare avledes klasser fra den. .NET Framework inkluderer klasser som er avledet fra klassen ConfigurationElement for å representere standard XML-konfigurasjonen elementer, for eksempel <xref:System.Configuration.ConfigurationSection>.</xref:System.Configuration.ConfigurationSection> Du kan også utvide ConfigurationElement klassen for å få tilgang til egendefinert konfigurasjon elementer og -inndelingene dine. Eksemplet inkludert senere i dette emnet viser hvordan tilgang egendefinert konfigurasjon elementer og -inndelingene dine ved hjelp av egendefinerte klasser som er avledet fra ConfigurationElement.       Du kan også utvide standard konfigurasjonen typene som ConfigurationElement, <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>, og <xref:System.Configuration.ConfigurationSection>.</xref:System.Configuration.ConfigurationSection> </xref:System.Configuration.ConfigurationProperty> </xref:System.Configuration.ConfigurationElementCollection> For mer informasjon, kan du se dokumentasjonen for disse klasser.       Hvis du vil ha mer informasjon om hvordan du tilgang til informasjon i konfigurasjonsfiler, se <xref:System.Configuration.ConfigurationManager>klassen og <xref:System.Web.Configuration.WebConfigurationManager>klasse.</xref:System.Web.Configuration.WebConfigurationManager> </xref:System.Configuration.ConfigurationManager>"
  example:
  - "The following code example shows how to implement a custom ConfigurationElement both as an individual element in a custom section and as a collection of elements in a custom section. The example consists of the following files:  \n  \n-   An app.config file that contains a custom section that is named `MyUrls`. This section contains a simple element (it does not contain any other elements) and a collection of elements. The simple element is named `simple` and the collection is named `urls`.  \n  \n-   A console application. The application reads the contents of the app.config file and writes the information to the console. It uses classes that derive from ConfigurationElement, <xref:System.Configuration.ConfigurationElementCollection>, and <xref:System.Configuration.ConfigurationSection>.  \n  \n-   A class named `UrlsSection` that derives from the <xref:System.Configuration.ConfigurationSection> class. This class is used to access the `MyUrls` section in the configuration file.  \n  \n-   A class named `UrlsCollection` that derives from the <xref:System.Configuration.ConfigurationElementCollection> class. This class is used to access the `urls` collection in the configuration file.  \n  \n-   A class named `UrlConfigElement` that derives from the ConfigurationElement class. This class is used to access the `simple` element and the members of the `urls` collection in the configuration file.  \n  \n To run the example, perform the following steps:  \n  \n1.  Create a solution that has a console application project and a class library project that is named `ConfigurationElement`.  \n  \n2.  Put the three class files in the class library project and put the other files in the console library project.  \n  \n3.  In both projects set a reference to `System.Configuration`.  \n  \n4.  In the console application project set a project reference to the class library project.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n [!code-cs[System.Configuration.ConfigurationElement#151](~/add/codesnippet/csharp/t-system.configuration.c_8_2.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#151](~/add/codesnippet/visualbasic/t-system.configuration.c_8_2.vb)]  \n  \n [!code-cs[System.Configuration.ConfigurationElement#71](~/add/codesnippet/csharp/t-system.configuration.c_8_3.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#71](~/add/codesnippet/visualbasic/t-system.configuration.c_8_3.vb)]  \n  \n [!code-vb[System.Configuration.ConfigurationElement#51](~/add/codesnippet/visualbasic/t-system.configuration.c_8_4.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#51](~/add/codesnippet/csharp/t-system.configuration.c_8_4.cs)]  \n  \n [!code-cs[System.Configuration.ConfigurationElement#31](~/add/codesnippet/csharp/t-system.configuration.c_8_5.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#31](~/add/codesnippet/visualbasic/t-system.configuration.c_8_5.vb)]"
  syntax:
    content: public abstract class ConfigurationElement
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.#ctor
  id: '#ctor'
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: ConfigurationElement()
  nameWithType: ConfigurationElement.ConfigurationElement()
  fullName: System.Configuration.ConfigurationElement.ConfigurationElement()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> klasse."
  remarks: "Du oppretter en ny forekomst av den <xref:System.Configuration.ConfigurationElement>klasse, for eksempel hver gang programmet må legge til et nytt element til den tilknyttede <xref:System.Configuration.ConfigurationElementCollection>samlingen.</xref:System.Configuration.ConfigurationElementCollection> </xref:System.Configuration.ConfigurationElement>"
  example:
  - "The following example shows how to use a customized constructor.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#32](~/add/codesnippet/csharp/m-system.configuration.c_36_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#32](~/add/codesnippet/visualbasic/m-system.configuration.c_36_1.vb)]"
  syntax:
    content: protected ConfigurationElement ();
    parameters: []
  overload: System.Configuration.ConfigurationElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.CurrentConfiguration
  id: CurrentConfiguration
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: CurrentConfiguration
  nameWithType: ConfigurationElement.CurrentConfiguration
  fullName: System.Configuration.ConfigurationElement.CurrentConfiguration
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Henter en referanse til det øverste nivået <xref href=&quot;System.Configuration.Configuration&quot;> </xref> -forekomst som representerer i konfigurasjonshierarkiet som gjeldende <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> forekomsten tilhører."
  remarks: "Egenskapen CurrentConfiguration gjør det enkelt å finne ut hvilken versjon av den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] er angitt. Den <xref:System.Configuration.Configuration.TargetFramework%2A>-egenskapen til det øverste nivået <xref:System.Configuration.Configuration>forekomsten angir mål framework-versjonen.</xref:System.Configuration.Configuration> </xref:System.Configuration.Configuration.TargetFramework%2A>"
  syntax:
    content: public System.Configuration.Configuration CurrentConfiguration { get; }
    return:
      type: System.Configuration.Configuration
      description: "Det øverste nivået <xref href=&quot;System.Configuration.Configuration&quot;> </xref> serverforekomsten som gjeldende <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> forekomsten tilhører."
  overload: System.Configuration.ConfigurationElement.CurrentConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  id: DeserializeElement(System.Xml.XmlReader,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: DeserializeElement(XmlReader,Boolean)
  nameWithType: ConfigurationElement.DeserializeElement(XmlReader,Boolean)
  fullName: System.Configuration.ConfigurationElement.DeserializeElement(XmlReader,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Leser XML fra konfigurasjonsfilen."
  remarks: ''
  example:
  - "The following example demonstrates how to extend the DeserializeElement method.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#33](~/add/codesnippet/csharp/6dc9ac84-77cf-449c-b380-_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#33](~/add/codesnippet/visualbasic/6dc9ac84-77cf-449c-b380-_1.vb)]"
  syntax:
    content: protected virtual void DeserializeElement (System.Xml.XmlReader reader, bool serializeCollectionKey);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Den <xref:System.Xml.XmlReader>som leser fra konfigurasjonsfilen.</xref:System.Xml.XmlReader>"
    - id: serializeCollectionKey
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>til å serialisere bare samlingen Nøkkelegenskapene; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.DeserializeElement*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The element to read is locked.  \n  \n \\- or -  \n  \n An attribute of the current node is not recognized.  \n  \n \\- or -  \n  \n The lock status of the current node cannot be determined."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.ElementInformation
  id: ElementInformation
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: ElementInformation
  nameWithType: ConfigurationElement.ElementInformation
  fullName: System.Configuration.ConfigurationElement.ElementInformation
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Henter en <xref href=&quot;System.Configuration.ElementInformation&quot;> </xref> objekt som inneholder ikke kan tilpasses informasjon og funksjonaliteten til de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> objektet."
  remarks: ''
  example:
  - "The following example shows how to use the ElementInformation property.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#80](~/add/codesnippet/csharp/p-system.configuration.c_48_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#80](~/add/codesnippet/visualbasic/p-system.configuration.c_48_1.vb)]"
  syntax:
    content: public System.Configuration.ElementInformation ElementInformation { get; }
    return:
      type: System.Configuration.ElementInformation
      description: "En <xref href=&quot;System.Configuration.ElementInformation&quot;> </xref> som inneholder ikke kan tilpasses informasjon og funksjonaliteten til de <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.ElementInformation*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.ElementProperty
  id: ElementProperty
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: ElementProperty
  nameWithType: ConfigurationElement.ElementProperty
  fullName: System.Configuration.ConfigurationElement.ElementProperty
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Henter den <xref href=&quot;System.Configuration.ConfigurationElementProperty&quot;> </xref> objektet som representerer den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> selve objektet."
  syntax:
    content: protected virtual System.Configuration.ConfigurationElementProperty ElementProperty { get; }
    return:
      type: System.Configuration.ConfigurationElementProperty
      description: "Den <xref href=&quot;System.Configuration.ConfigurationElementProperty&quot;> </xref> som representerer den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> seg selv."
  overload: System.Configuration.ConfigurationElement.ElementProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ConfigurationElement.Equals(Object)
  fullName: System.Configuration.ConfigurationElement.Equals(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Sammenligner gjeldende <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> forekomsten til det angitte objektet."
  syntax:
    content: public override bool Equals (object compareTo);
    parameters:
    - id: compareTo
      type: System.Object
      description: "Objektet som skal sammenlignes med."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis objektet som skal sammenlignes med er lik gjeldende <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> serverforekomsten; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.EvaluationContext
  id: EvaluationContext
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: EvaluationContext
  nameWithType: ConfigurationElement.EvaluationContext
  fullName: System.Configuration.ConfigurationElement.EvaluationContext
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Henter den <xref href=&quot;System.Configuration.ContextInformation&quot;> </xref> objekt den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> objektet."
  remarks: "En <xref:System.Configuration.ContextInformation>objektet gir kontekst som er nødvendig for et <xref:System.Configuration.ConfigurationElement>objekt for å bestemme basert på hvor den evalueres.</xref:System.Configuration.ConfigurationElement> </xref:System.Configuration.ContextInformation>       Den <xref:System.Configuration.ContextInformation>objektet inneholder miljøet detaljer knyttet til et element av konfigurasjonen.</xref:System.Configuration.ContextInformation> Du kan for eksempel bruke den <xref:System.Configuration.ContextInformation.IsMachineLevel%2A>til å fastslå om en <xref:System.Configuration.ConfigurationElement>ble angitt i Machine.config eller du kan fastslå hvilke hierarkiet en <xref:System.Configuration.ConfigurationElement>elementet tilhører ved hjelp av den <xref:System.Configuration.ContextInformation.HostingContext%2A>egenskapen.</xref:System.Configuration.ContextInformation.HostingContext%2A> </xref:System.Configuration.ConfigurationElement> </xref:System.Configuration.ConfigurationElement> </xref:System.Configuration.ContextInformation.IsMachineLevel%2A>"
  syntax:
    content: protected System.Configuration.ContextInformation EvaluationContext { get; }
    return:
      type: System.Configuration.ContextInformation
      description: "The <xref href=&quot;System.Configuration.ContextInformation&quot;></xref> for the <xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>."
  overload: System.Configuration.ConfigurationElement.EvaluationContext*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Gjeldende element, er ikke knyttet til en kontekst."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.GetHashCode
  id: GetHashCode
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ConfigurationElement.GetHashCode()
  fullName: System.Configuration.ConfigurationElement.GetHashCode()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Henter en unik verdi som representerer gjeldende <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> forekomsten."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "En unik verdi som representerer gjeldende <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> forekomsten."
  overload: System.Configuration.ConfigurationElement.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  id: GetTransformedAssemblyString(System.String)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: GetTransformedAssemblyString(String)
  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)
  fullName: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Returnerer den transformerte versjonen av det angitte samlingsnavnet."
  remarks: "Den <xref:System.Configuration.ConfigurationElement.SerializeElement%2A>metoden og <xref:System.Configuration.ConfigurationElement.SerializeToXmlElement%2A>metoden kalle denne metoden for å gjøre et samlingsnavn når en tidligere versjon av den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] er angitt.</xref:System.Configuration.ConfigurationElement.SerializeToXmlElement%2A> </xref:System.Configuration.ConfigurationElement.SerializeElement%2A>"
  syntax:
    content: protected virtual string GetTransformedAssemblyString (string assemblyName);
    parameters:
    - id: assemblyName
      type: System.String
      description: "Navnet på samlingen."
    return:
      type: System.String
      description: "Transformert versjonen av navnet på samlingen. Hvis ingen transformeringen er tilgjengelig, den <code> assemblyName </code> parameterverdien returneres uendret. Den <xref:System.Configuration.Configuration.TypeStringTransformer*>egenskapen <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis ingen transformeringen er tilgjengelig.</xref:System.Configuration.Configuration.TypeStringTransformer*>"
  overload: System.Configuration.ConfigurationElement.GetTransformedAssemblyString*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  id: GetTransformedTypeString(System.String)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: GetTransformedTypeString(String)
  nameWithType: ConfigurationElement.GetTransformedTypeString(String)
  fullName: System.Configuration.ConfigurationElement.GetTransformedTypeString(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Returnerer den transformerte versjonen av navnet på angitte typen."
  remarks: "Den <xref:System.Configuration.ConfigurationElement.SerializeElement%2A>metoden og <xref:System.Configuration.ConfigurationElement.SerializeToXmlElement%2A>metoden kalle denne metoden for å gjøre et typenavn når en tidligere versjon av den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] er angitt.</xref:System.Configuration.ConfigurationElement.SerializeToXmlElement%2A> </xref:System.Configuration.ConfigurationElement.SerializeElement%2A>"
  syntax:
    content: protected virtual string GetTransformedTypeString (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "Navnet på typen."
    return:
      type: System.String
      description: "Transformert versjonen av navnet på angitte typen. Hvis ingen transformeringen er tilgjengelig, den <code> typeName </code> parameterverdien returneres uendret. Den <xref:System.Configuration.Configuration.TypeStringTransformer*>egenskapen <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis ingen transformeringen er tilgjengelig.</xref:System.Configuration.Configuration.TypeStringTransformer*>"
  overload: System.Configuration.ConfigurationElement.GetTransformedTypeString*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.HasContext
  id: HasContext
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: HasContext
  nameWithType: ConfigurationElement.HasContext
  fullName: System.Configuration.ConfigurationElement.HasContext
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Henter en verdi som angir om den <xref:System.Configuration.ConfigurationElement.CurrentConfiguration*>egenskapen <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Configuration.ConfigurationElement.CurrentConfiguration*>"
  syntax:
    content: protected bool HasContext { get; }
    return:
      type: System.Boolean
      description: "FALSE hvis den <xref:System.Configuration.ConfigurationElement.CurrentConfiguration*>egenskapen <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; ellers <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Configuration.ConfigurationElement.CurrentConfiguration*>"
  overload: System.Configuration.ConfigurationElement.HasContext*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.Init
  id: Init
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: Init()
  nameWithType: ConfigurationElement.Init()
  fullName: System.Configuration.ConfigurationElement.Init()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Angir den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> objektet til sin opprinnelige tilstand."
  syntax:
    content: protected virtual void Init ();
    parameters: []
  overload: System.Configuration.ConfigurationElement.Init*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.InitializeDefault
  id: InitializeDefault
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: InitializeDefault()
  nameWithType: ConfigurationElement.InitializeDefault()
  fullName: System.Configuration.ConfigurationElement.InitializeDefault()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Brukes til å starte et standardsett med verdier for den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> objektet."
  remarks: "Kalles for å angi den interne tilstanden for objektet til riktige standardverdier."
  syntax:
    content: protected virtual void InitializeDefault ();
    parameters: []
  overload: System.Configuration.ConfigurationElement.InitializeDefault*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.IsModified
  id: IsModified
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: IsModified()
  nameWithType: ConfigurationElement.IsModified()
  fullName: System.Configuration.ConfigurationElement.IsModified()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Angir om denne konfigurasjonselementet er endret siden den ble lagret sist eller lastet inn, når implementert i en avledet klasse."
  remarks: "Metoden IsModified bestemmer om dette <xref:System.Configuration.ConfigurationElement>objekt skrives til konfigurasjonen når den <xref:System.Configuration.Configuration.Save%2A>-metoden.</xref:System.Configuration.Configuration.Save%2A> </xref:System.Configuration.ConfigurationElement> Hvis returverdien `false`, antas det at konfigurasjonsfilen representerer gjeldende status for elementet.       Som standard IsModified returnerer `true` når en egenskap er satt til indeksering til dette <xref:System.Configuration.ConfigurationElement>objektet.</xref:System.Configuration.ConfigurationElement>       Overstyr IsModified-metoden for å angi egendefinerte angivelse av tilstanden for dette <xref:System.Configuration.ConfigurationElement>element.</xref:System.Configuration.ConfigurationElement>"
  example:
  - "The following example shows how to extend IsModified.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#35](~/add/codesnippet/csharp/m-system.configuration.c_9_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#35](~/add/codesnippet/visualbasic/m-system.configuration.c_9_1.vb)]  \n  \n The method shown in the previous example is called when a configuration element is modified, as in the following example.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#6](~/add/codesnippet/csharp/m-system.configuration.c_9_2.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#6](~/add/codesnippet/visualbasic/m-system.configuration.c_9_2.vb)]"
  syntax:
    content: protected virtual bool IsModified ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis elementet er endret; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.IsModified*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.IsReadOnly
  id: IsReadOnly
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: IsReadOnly()
  nameWithType: ConfigurationElement.IsReadOnly()
  fullName: System.Configuration.ConfigurationElement.IsReadOnly()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Henter en verdi som angir om den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> objektet er skrivebeskyttet."
  remarks: "Systemet definerer konfigurasjonen elementer som ikke kan endres.       Bruk IsReadOnly-metoden til å fastslå hvilke elementer kan endres."
  example:
  - "The following example shows how to use the IsReadOnly method. It is used on a custom section and returns `false`.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#7](~/add/codesnippet/csharp/m-system.configuration.c_12_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#7](~/add/codesnippet/visualbasic/m-system.configuration.c_12_1.vb)]"
  syntax:
    content: public virtual bool IsReadOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> objektet er skrivebeskyttet; ellers, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  id: Item(System.Configuration.ConfigurationProperty)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: Item(ConfigurationProperty)
  nameWithType: ConfigurationElement.Item(ConfigurationProperty)
  fullName: System.Configuration.ConfigurationElement.Item(ConfigurationProperty)
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Henter eller angir en egenskap eller attributtet for denne konfigurasjonselementet."
  remarks: "Bruk elementegenskapen til å hente eller angi verdiene i en <xref:System.Configuration.ConfigurationProperty>objektet.</xref:System.Configuration.ConfigurationProperty>       Denne egenskapen er i C#, indekserer for <xref:System.Configuration.ConfigurationSectionCollection>klasse.</xref:System.Configuration.ConfigurationSectionCollection>"
  syntax:
    content: protected object this[System.Configuration.ConfigurationProperty prop] { get; set; }
    parameters:
    - id: prop
      type: System.Configuration.ConfigurationProperty
      description: "Egenskapen for å få tilgang til."
    return:
      type: System.Object
      description: "Det angitte egenskapen attributt eller underordnet elementet."
  overload: System.Configuration.ConfigurationElement.Item*
  exceptions:
  - type: System.Configuration.ConfigurationException
    commentId: T:System.Configuration.ConfigurationException
    description: "<code>prop</code>er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller finnes ikke i elementet."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "<code>prop</code>leses bare eller låst."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.Item(System.String)
  id: Item(System.String)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: Item(String)
  nameWithType: ConfigurationElement.Item(String)
  fullName: System.Configuration.ConfigurationElement.Item(String)
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Henter eller angir et egenskapen attributt eller underordnet element av denne konfigurasjonselementet."
  remarks: "Bruk elementegenskapen til å hente eller angi verdiene i en <xref:System.Configuration.ConfigurationProperty>objektet.</xref:System.Configuration.ConfigurationProperty>       Denne egenskapen er i C#, indekserer for <xref:System.Configuration.ConfigurationSectionCollection>klasse.</xref:System.Configuration.ConfigurationSectionCollection>"
  syntax:
    content: protected object this[string propertyName] { get; set; }
    parameters:
    - id: propertyName
      type: System.String
      description: "Navnet på den <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> Access."
    return:
      type: System.Object
      description: "Det angitte egenskapen attributt eller underordnet elementet"
  overload: System.Configuration.ConfigurationElement.Item*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "<code>prop</code>er skrivebeskyttet eller låst."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  id: ListErrors(System.Collections.IList)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: ListErrors(IList)
  nameWithType: ConfigurationElement.ListErrors(IList)
  fullName: System.Configuration.ConfigurationElement.ListErrors(IList)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Legger til de ugyldige egenskapen feilene i dette <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> objekt, og i alle underelementene til den angitte listen."
  syntax:
    content: protected virtual void ListErrors (System.Collections.IList errorList);
    parameters:
    - id: errorList
      type: System.Collections.IList
      description: "Et objekt som implementerer den <xref:System.Collections.IList>grensesnittet.</xref:System.Collections.IList>"
  overload: System.Configuration.ConfigurationElement.ListErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept
  id: LockAllAttributesExcept
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: LockAllAttributesExcept
  nameWithType: ConfigurationElement.LockAllAttributesExcept
  fullName: System.Configuration.ConfigurationElement.LockAllAttributesExcept
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Henter samlingen av låst attributter."
  remarks: "Egenskapen LockAllAttributesExcept kan du låse alle attributtene samtidig, unntatt for det du angir. Hvis du vil gjøre dette, bruker du den <xref:System.Configuration.ConfigurationLockCollection.Contains%2A>metoden, som beskrevet i delen eksempel.</xref:System.Configuration.ConfigurationLockCollection.Contains%2A>      > [!NOTE] > I LockAllAttributesExcept-egenskapen kan du hindre at barnet konfigurasjonen elementer for elementet du vil bruke regelen blir endret. Bruk av <xref:System.Configuration.ConfigurationElement.LockItem%2A>egenskapen Hvis du vil sette en generell låse på det overordnede elementet selve og de underordnede elementene.</xref:System.Configuration.ConfigurationElement.LockItem%2A>"
  example:
  - "The following example shows how to use the LockAllAttributesExcept.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#9](~/add/codesnippet/csharp/p-system.configuration.c_59_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#9](~/add/codesnippet/visualbasic/p-system.configuration.c_59_1.vb)]"
  syntax:
    content: public System.Configuration.ConfigurationLockCollection LockAllAttributesExcept { get; }
    return:
      type: System.Configuration.ConfigurationLockCollection
      description: "Den <xref href=&quot;System.Configuration.ConfigurationLockCollection&quot;> </xref> for låst attributter (egenskaper) for elementet."
  overload: System.Configuration.ConfigurationElement.LockAllAttributesExcept*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept
  id: LockAllElementsExcept
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: LockAllElementsExcept
  nameWithType: ConfigurationElement.LockAllElementsExcept
  fullName: System.Configuration.ConfigurationElement.LockAllElementsExcept
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Henter samling av låst elementer."
  remarks: "Egenskapen LockAllElementsExcept kan du låse alle elementer samtidig, bortsett fra den du angir.      > [!NOTE] > I LockAllElementsExcept-egenskapen kan du hindre at barnet konfigurasjonen elementer for elementet du vil bruke regelen blir endret. Bruk av <xref:System.Configuration.ConfigurationElement.LockItem%2A>egenskapen Hvis du vil sette en generell låse for elementet selve og de underordnede elementene.</xref:System.Configuration.ConfigurationElement.LockItem%2A>"
  example:
  - "The following example shows how to use the LockAllElementsExcept property.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#5](~/add/codesnippet/csharp/p-system.configuration.c_3_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#5](~/add/codesnippet/visualbasic/p-system.configuration.c_3_1.vb)]"
  syntax:
    content: public System.Configuration.ConfigurationLockCollection LockAllElementsExcept { get; }
    return:
      type: System.Configuration.ConfigurationLockCollection
      description: "Den <xref href=&quot;System.Configuration.ConfigurationLockCollection&quot;> </xref> låst elementer."
  overload: System.Configuration.ConfigurationElement.LockAllElementsExcept*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.LockAttributes
  id: LockAttributes
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: LockAttributes
  nameWithType: ConfigurationElement.LockAttributes
  fullName: System.Configuration.ConfigurationElement.LockAttributes
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Henter samlingen av låst attributter"
  remarks: "Egenskapen LockAttributes kan du låse alle attributtene du angir.       Du gjør at du bruker den <xref:System.Configuration.ConfigurationLockCollection.Contains%2A>metoden, som beskrevet i delen eksempel.</xref:System.Configuration.ConfigurationLockCollection.Contains%2A>      > [!NOTE] > I LockAttributes-egenskapen kan du hindre at barnet konfigurasjonen elementer for elementet du vil bruke regelen blir endret. Bruk <xref:System.Configuration.ConfigurationElement.LockItem%2A>Hvis du vil legge en generell lås på selve elementet, og de underordnede elementene.</xref:System.Configuration.ConfigurationElement.LockItem%2A>"
  example:
  - "The following example shows how to use the LockAttributes property.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#8](~/add/codesnippet/csharp/p-system.configuration.c_45_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#8](~/add/codesnippet/visualbasic/p-system.configuration.c_45_1.vb)]"
  syntax:
    content: public System.Configuration.ConfigurationLockCollection LockAttributes { get; }
    return:
      type: System.Configuration.ConfigurationLockCollection
      description: "Den <xref href=&quot;System.Configuration.ConfigurationLockCollection&quot;> </xref> for låst attributter (egenskaper) for elementet."
  overload: System.Configuration.ConfigurationElement.LockAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.LockElements
  id: LockElements
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: LockElements
  nameWithType: ConfigurationElement.LockElements
  fullName: System.Configuration.ConfigurationElement.LockElements
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Henter samling av låst elementer."
  remarks: "Egenskapen LockElements kan du låse alle elementer som du angir.       Hvis du vil gjøre dette, bruker du den <xref:System.Configuration.ConfigurationLockCollection.Contains%2A>metoden, som beskrevet i neste eksempel.</xref:System.Configuration.ConfigurationLockCollection.Contains%2A>      > [!NOTE] > I LockElements-egenskapen kan du hindre at barnet konfigurasjon elementer for elementet du vil bruke regelen blir endret. Bruk <xref:System.Configuration.ConfigurationElement.LockItem%2A>Hvis du vil legge en generell lås på selve elementet, og de underordnede elementene.</xref:System.Configuration.ConfigurationElement.LockItem%2A>"
  example:
  - "The following example shows how to use the LockElements property.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#4](~/add/codesnippet/csharp/p-system.configuration.c_11_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#4](~/add/codesnippet/visualbasic/p-system.configuration.c_11_1.vb)]"
  syntax:
    content: public System.Configuration.ConfigurationLockCollection LockElements { get; }
    return:
      type: System.Configuration.ConfigurationLockCollection
      description: "Den <xref href=&quot;System.Configuration.ConfigurationLockCollection&quot;> </xref> låst elementer."
  overload: System.Configuration.ConfigurationElement.LockElements*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.LockItem
  id: LockItem
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: LockItem
  nameWithType: ConfigurationElement.LockItem
  fullName: System.Configuration.ConfigurationElement.LockItem
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Henter eller angir en verdi som angir om elementet er låst."
  remarks: "Bruk LockItem-egenskapen Hvis du vil legge en generell lås på selve elementet, og de underordnede elementene."
  example:
  - "The following example shows how to use the LockItem.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#3](~/add/codesnippet/csharp/p-system.configuration.c_20_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#3](~/add/codesnippet/visualbasic/p-system.configuration.c_20_1.vb)]"
  syntax:
    content: public bool LockItem { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis elementet er låst. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.LockItem*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Elementet er allerede låst på et høyere konfigurasjonsnivå."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  id: OnDeserializeUnrecognizedAttribute(System.String,System.String)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: OnDeserializeUnrecognizedAttribute(String,String)
  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String,String)
  fullName: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(String,String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Henter en verdi som angir om ukjent attributt oppstår under deserialisering."
  remarks: "OnDeserializeUnrecognizedAttribute aktiveres når det oppstår en ukjent attributt under deserialisering av det <xref:System.Configuration.ConfigurationElement>objektet.</xref:System.Configuration.ConfigurationElement>"
  syntax:
    content: protected virtual bool OnDeserializeUnrecognizedAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på det ukjente attributtet."
    - id: value
      type: System.String
      description: "Verdien for det ukjente attributtet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Når et ukjent attributt oppstår under deserialisering av; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  id: OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: OnDeserializeUnrecognizedElement(String,XmlReader)
  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String,XmlReader)
  fullName: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(String,XmlReader)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Henter en verdi som angir om et ukjent element oppstår under deserialisering."
  remarks: "OnDeserializeUnrecognizedElement aktiveres når det oppstår en ukjent attributt under deserialisering av det <xref:System.Configuration.ConfigurationElement>objektet.</xref:System.Configuration.ConfigurationElement>"
  syntax:
    content: protected virtual bool OnDeserializeUnrecognizedElement (string elementName, System.Xml.XmlReader reader);
    parameters:
    - id: elementName
      type: System.String
      description: "Navnet på den ukjente delelement."
    - id: reader
      type: System.Xml.XmlReader
      description: "Den <xref:System.Xml.XmlReader>som brukes for deserialisering.</xref:System.Xml.XmlReader>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Når et ukjent element oppstår under deserialisering av; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The element identified by <code>elementName</code> is locked.  \n  \n \\- or -  \n  \n One or more of the element's attributes is locked.  \n  \n \\- or -  \n  \n <code>elementName</code> is unrecognized, or the element has an unrecognized attribute.  \n  \n \\- or -  \n  \n The element has a Boolean attribute with an invalid value.  \n  \n \\- or -  \n  \n An attempt was made to deserialize a property more than once.  \n  \n \\- or -  \n  \n An attempt was made to deserialize a property that is not a valid member of the element.  \n  \n \\- or -  \n  \n The element cannot contain a CDATA or text element."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  id: OnRequiredPropertyNotFound(System.String)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: OnRequiredPropertyNotFound(String)
  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)
  fullName: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Oppstår det et unntak under ikke finner en obligatorisk egenskap."
  remarks: "Den <xref:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement%2A>aktiveres når det oppstår en ukjent attributt under deserialisering av det <xref:System.Configuration.ConfigurationElement>objektet.</xref:System.Configuration.ConfigurationElement> </xref:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement%2A>"
  syntax:
    content: protected virtual object OnRequiredPropertyNotFound (string name);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på det obligatoriske attributtet som ikke ble funnet."
    return:
      type: System.Object
      description: "Ingen."
  overload: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "I alle tilfeller."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.PostDeserialize
  id: PostDeserialize
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: PostDeserialize()
  nameWithType: ConfigurationElement.PostDeserialize()
  fullName: System.Configuration.ConfigurationElement.PostDeserialize()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Kalles etter deserialisering."
  syntax:
    content: protected virtual void PostDeserialize ();
    parameters: []
  overload: System.Configuration.ConfigurationElement.PostDeserialize*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  id: PreSerialize(System.Xml.XmlWriter)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: PreSerialize(XmlWriter)
  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)
  fullName: System.Configuration.ConfigurationElement.PreSerialize(XmlWriter)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Kalles før serialisering."
  syntax:
    content: protected virtual void PreSerialize (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Den <xref:System.Xml.XmlWriter>som skal brukes til å serialisere den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>.</xref:System.Xml.XmlWriter>"
  overload: System.Configuration.ConfigurationElement.PreSerialize*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.Properties
  id: Properties
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: Properties
  nameWithType: ConfigurationElement.Properties
  fullName: System.Configuration.ConfigurationElement.Properties
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Henter samling med egenskaper for."
  remarks: "Egenskapen egenskaper, også kalt egenskapssamlingen, inneholder alle egenskaper (attributter) som gjelder for elementet."
  example:
  - For an example that shows how to use the Properties property, refer to the <xref:System.Configuration.ConfigurationProperty> class.
  syntax:
    content: protected virtual System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "Den <xref href=&quot;System.Configuration.ConfigurationPropertyCollection&quot;> </xref> av egenskaper for elementet."
  overload: System.Configuration.ConfigurationElement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  id: Reset(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: Reset(ConfigurationElement)
  nameWithType: ConfigurationElement.Reset(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElement.Reset(ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Tilbakestiller den interne tilstanden til den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> objekt, inkludert låsene og egenskaper-samlinger."
  syntax:
    content: protected virtual void Reset (System.Configuration.ConfigurationElement parentElement);
    parameters:
    - id: parentElement
      type: System.Configuration.ConfigurationElement
      description: "Den overordnede noden for konfigurasjonselementet."
  overload: System.Configuration.ConfigurationElement.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.ResetModified
  id: ResetModified
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: ResetModified()
  nameWithType: ConfigurationElement.ResetModified()
  fullName: System.Configuration.ConfigurationElement.ResetModified()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Tilbakestiller verdien for den <xref:System.Configuration.ConfigurationElement.IsModified*>metoden <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> når implementert i en avledet klasse.</xref:System.Configuration.ConfigurationElement.IsModified*>"
  remarks: "Metoden ResetModified kalles automatisk etter endringer på denne <xref:System.Configuration.ConfigurationElement>objektet er skrevet til konfigurasjonsfilen.</xref:System.Configuration.ConfigurationElement>"
  syntax:
    content: protected virtual void ResetModified ();
    parameters: []
  overload: System.Configuration.ConfigurationElement.ResetModified*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  id: SerializeElement(System.Xml.XmlWriter,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: SerializeElement(XmlWriter,Boolean)
  nameWithType: ConfigurationElement.SerializeElement(XmlWriter,Boolean)
  fullName: System.Configuration.ConfigurationElement.SerializeElement(XmlWriter,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Skriver innholdet i denne konfigurasjonselementet konfigurasjonsfilen når implementert i en avledet klasse."
  remarks: ''
  example:
  - "The following example shows how to extend the SerializeElement method.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#34](~/add/codesnippet/csharp/640dc581-4dbf-4d04-aba6-_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#34](~/add/codesnippet/visualbasic/640dc581-4dbf-4d04-aba6-_1.vb)]"
  syntax:
    content: protected virtual bool SerializeElement (System.Xml.XmlWriter writer, bool serializeCollectionKey);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Den <xref:System.Xml.XmlWriter>som skriver til konfigurasjonsfilen.</xref:System.Xml.XmlWriter>"
    - id: serializeCollectionKey
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>til å serialisere bare samlingen Nøkkelegenskapene; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis noen av dataene ble serialisert faktisk; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.SerializeElement*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Det gjeldende attributtet er låst på et høyere konfigurasjonsnivå."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  id: SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: SerializeToXmlElement(XmlWriter,String)
  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter,String)
  fullName: System.Configuration.ConfigurationElement.SerializeToXmlElement(XmlWriter,String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Skriver ytre kodene i dette konfigurasjonselementet konfigurasjonsfilen når implementert i en avledet klasse."
  remarks: "Metoden SerializeToXmlElement kalles etter kall til den <xref:System.Configuration.ConfigurationElement.Unmerge%2A>metoden under serialisering.</xref:System.Configuration.ConfigurationElement.Unmerge%2A> Metoden SerializeToXmlElement skriver ut innholdet i konfigurasjonselementet mellom start- og slutt koder for elementet. Overstyre SerializeToXmlElement for å angi en egendefinert serialisering-metode."
  syntax:
    content: protected virtual bool SerializeToXmlElement (System.Xml.XmlWriter writer, string elementName);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Den <xref:System.Xml.XmlWriter>som skriver til konfigurasjonsfilen.</xref:System.Xml.XmlWriter>"
    - id: elementName
      type: System.String
      description: "Navnet på den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> skrives."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis skriving var vellykket. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.SerializeToXmlElement*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Elementet har flere underordnede elementer."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  id: SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: SetPropertyValue(ConfigurationProperty,Object,Boolean)
  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty,Object,Boolean)
  fullName: System.Configuration.ConfigurationElement.SetPropertyValue(ConfigurationProperty,Object,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Angir en egenskap til den angitte verdien."
  syntax:
    content: protected void SetPropertyValue (System.Configuration.ConfigurationProperty prop, object value, bool ignoreLocks);
    parameters:
    - id: prop
      type: System.Configuration.ConfigurationProperty
      description: "Egenskapen element som angis."
    - id: value
      type: System.Object
      description: "Verdien som skal tilordnes til egenskapen."
    - id: ignoreLocks
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis låser på egenskapen skal ignoreres; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.SetPropertyValue*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Oppstår hvis elementet er skrivebeskyttet eller <code> ignoreLocks </code> er <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> , men låsene ikke kan ignoreres."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.SetReadOnly
  id: SetReadOnly
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: SetReadOnly()
  nameWithType: ConfigurationElement.SetReadOnly()
  fullName: System.Configuration.ConfigurationElement.SetReadOnly()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Angir den <xref:System.Configuration.ConfigurationElement.IsReadOnly*>egenskapen for den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> objektet og alle underelementene.</xref:System.Configuration.ConfigurationElement.IsReadOnly*>"
  remarks: "Denne metoden brukes internt sette til side disse systemkonfigurasjonen elementer som ikke kan endres.       For å fastslå hvilke elementer kan endres, kan du bruke den <xref:System.Configuration.ConfigurationElement.IsReadOnly%2A>metoden.</xref:System.Configuration.ConfigurationElement.IsReadOnly%2A>"
  syntax:
    content: protected virtual void SetReadOnly ();
    parameters: []
  overload: System.Configuration.ConfigurationElement.SetReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  id: Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  fullName: System.Configuration.ConfigurationElement.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Endrer den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> objektet til å fjerne alle verdier som ikke skal lagres."
  remarks: "Denne metoden kalles før den <xref:System.Configuration.ConfigurationElement>objektet lagres av den <xref:System.Configuration.Configuration>objekt for å fjerne alle unødvendige egenskaper.</xref:System.Configuration.Configuration> </xref:System.Configuration.ConfigurationElement>"
  syntax:
    content: protected virtual void Unmerge (System.Configuration.ConfigurationElement sourceElement, System.Configuration.ConfigurationElement parentElement, System.Configuration.ConfigurationSaveMode saveMode);
    parameters:
    - id: sourceElement
      type: System.Configuration.ConfigurationElement
      description: "En <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> på dette nivået som inneholder en sammenslått visning av egenskaper."
    - id: parentElement
      type: System.Configuration.ConfigurationElement
      description: "Overordnet <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis dette er det øverste nivået."
    - id: saveMode
      type: System.Configuration.ConfigurationSaveMode
      description: "En <xref href=&quot;System.Configuration.ConfigurationSaveMode&quot;> </xref> som bestemmer hvilken egenskap verdier som skal inkluderes."
  overload: System.Configuration.ConfigurationElement.Unmerge*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Configuration.ConfigurationException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationException
  nameWithType: ConfigurationException
  fullName: System.Configuration.ConfigurationException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Configuration.ConfigurationElement.#ctor
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ConfigurationElement()
  nameWithType: ConfigurationElement.ConfigurationElement()
  fullName: System.Configuration.ConfigurationElement.ConfigurationElement()
- uid: System.Configuration.ConfigurationElement.CurrentConfiguration
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: CurrentConfiguration
  nameWithType: ConfigurationElement.CurrentConfiguration
  fullName: System.Configuration.ConfigurationElement.CurrentConfiguration
- uid: System.Configuration.Configuration
  parent: System.Configuration
  isExternal: false
  name: Configuration
  nameWithType: Configuration
  fullName: System.Configuration.Configuration
- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: DeserializeElement(XmlReader,Boolean)
  nameWithType: ConfigurationElement.DeserializeElement(XmlReader,Boolean)
  fullName: System.Configuration.ConfigurationElement.DeserializeElement(XmlReader,Boolean)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.ConfigurationElement.ElementInformation
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ElementInformation
  nameWithType: ConfigurationElement.ElementInformation
  fullName: System.Configuration.ConfigurationElement.ElementInformation
- uid: System.Configuration.ElementInformation
  parent: System.Configuration
  isExternal: false
  name: ElementInformation
  nameWithType: ElementInformation
  fullName: System.Configuration.ElementInformation
- uid: System.Configuration.ConfigurationElement.ElementProperty
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ElementProperty
  nameWithType: ConfigurationElement.ElementProperty
  fullName: System.Configuration.ConfigurationElement.ElementProperty
- uid: System.Configuration.ConfigurationElementProperty
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElementProperty
  nameWithType: ConfigurationElementProperty
  fullName: System.Configuration.ConfigurationElementProperty
- uid: System.Configuration.ConfigurationElement.Equals(System.Object)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Equals(Object)
  nameWithType: ConfigurationElement.Equals(Object)
  fullName: System.Configuration.ConfigurationElement.Equals(Object)
- uid: System.Configuration.ConfigurationElement.EvaluationContext
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: EvaluationContext
  nameWithType: ConfigurationElement.EvaluationContext
  fullName: System.Configuration.ConfigurationElement.EvaluationContext
- uid: System.Configuration.ContextInformation
  parent: System.Configuration
  isExternal: false
  name: ContextInformation
  nameWithType: ContextInformation
  fullName: System.Configuration.ContextInformation
- uid: System.Configuration.ConfigurationElement.GetHashCode
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: GetHashCode()
  nameWithType: ConfigurationElement.GetHashCode()
  fullName: System.Configuration.ConfigurationElement.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: GetTransformedAssemblyString(String)
  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)
  fullName: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: GetTransformedTypeString(String)
  nameWithType: ConfigurationElement.GetTransformedTypeString(String)
  fullName: System.Configuration.ConfigurationElement.GetTransformedTypeString(String)
- uid: System.Configuration.ConfigurationElement.HasContext
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: HasContext
  nameWithType: ConfigurationElement.HasContext
  fullName: System.Configuration.ConfigurationElement.HasContext
- uid: System.Configuration.ConfigurationElement.Init
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Init()
  nameWithType: ConfigurationElement.Init()
  fullName: System.Configuration.ConfigurationElement.Init()
- uid: System.Configuration.ConfigurationElement.InitializeDefault
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: InitializeDefault()
  nameWithType: ConfigurationElement.InitializeDefault()
  fullName: System.Configuration.ConfigurationElement.InitializeDefault()
- uid: System.Configuration.ConfigurationElement.IsModified
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: IsModified()
  nameWithType: ConfigurationElement.IsModified()
  fullName: System.Configuration.ConfigurationElement.IsModified()
- uid: System.Configuration.ConfigurationElement.IsReadOnly
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: IsReadOnly()
  nameWithType: ConfigurationElement.IsReadOnly()
  fullName: System.Configuration.ConfigurationElement.IsReadOnly()
- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Item(ConfigurationProperty)
  nameWithType: ConfigurationElement.Item(ConfigurationProperty)
  fullName: System.Configuration.ConfigurationElement.Item(ConfigurationProperty)
- uid: System.Configuration.ConfigurationProperty
  parent: System.Configuration
  isExternal: false
  name: ConfigurationProperty
  nameWithType: ConfigurationProperty
  fullName: System.Configuration.ConfigurationProperty
- uid: System.Configuration.ConfigurationElement.Item(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Item(String)
  nameWithType: ConfigurationElement.Item(String)
  fullName: System.Configuration.ConfigurationElement.Item(String)
- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ListErrors(IList)
  nameWithType: ConfigurationElement.ListErrors(IList)
  fullName: System.Configuration.ConfigurationElement.ListErrors(IList)
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockAllAttributesExcept
  nameWithType: ConfigurationElement.LockAllAttributesExcept
  fullName: System.Configuration.ConfigurationElement.LockAllAttributesExcept
- uid: System.Configuration.ConfigurationLockCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationLockCollection
  nameWithType: ConfigurationLockCollection
  fullName: System.Configuration.ConfigurationLockCollection
- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockAllElementsExcept
  nameWithType: ConfigurationElement.LockAllElementsExcept
  fullName: System.Configuration.ConfigurationElement.LockAllElementsExcept
- uid: System.Configuration.ConfigurationElement.LockAttributes
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockAttributes
  nameWithType: ConfigurationElement.LockAttributes
  fullName: System.Configuration.ConfigurationElement.LockAttributes
- uid: System.Configuration.ConfigurationElement.LockElements
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockElements
  nameWithType: ConfigurationElement.LockElements
  fullName: System.Configuration.ConfigurationElement.LockElements
- uid: System.Configuration.ConfigurationElement.LockItem
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockItem
  nameWithType: ConfigurationElement.LockItem
  fullName: System.Configuration.ConfigurationElement.LockItem
- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: OnDeserializeUnrecognizedAttribute(String,String)
  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String,String)
  fullName: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(String,String)
- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: OnDeserializeUnrecognizedElement(String,XmlReader)
  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String,XmlReader)
  fullName: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(String,XmlReader)
- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: OnRequiredPropertyNotFound(String)
  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)
  fullName: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(String)
- uid: System.Configuration.ConfigurationElement.PostDeserialize
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: PostDeserialize()
  nameWithType: ConfigurationElement.PostDeserialize()
  fullName: System.Configuration.ConfigurationElement.PostDeserialize()
- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: PreSerialize(XmlWriter)
  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)
  fullName: System.Configuration.ConfigurationElement.PreSerialize(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Configuration.ConfigurationElement.Properties
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Properties
  nameWithType: ConfigurationElement.Properties
  fullName: System.Configuration.ConfigurationElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Reset(ConfigurationElement)
  nameWithType: ConfigurationElement.Reset(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElement.Reset(ConfigurationElement)
- uid: System.Configuration.ConfigurationElement
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElement
  nameWithType: ConfigurationElement
  fullName: System.Configuration.ConfigurationElement
- uid: System.Configuration.ConfigurationElement.ResetModified
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ResetModified()
  nameWithType: ConfigurationElement.ResetModified()
  fullName: System.Configuration.ConfigurationElement.ResetModified()
- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SerializeElement(XmlWriter,Boolean)
  nameWithType: ConfigurationElement.SerializeElement(XmlWriter,Boolean)
  fullName: System.Configuration.ConfigurationElement.SerializeElement(XmlWriter,Boolean)
- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SerializeToXmlElement(XmlWriter,String)
  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter,String)
  fullName: System.Configuration.ConfigurationElement.SerializeToXmlElement(XmlWriter,String)
- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SetPropertyValue(ConfigurationProperty,Object,Boolean)
  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty,Object,Boolean)
  fullName: System.Configuration.ConfigurationElement.SetPropertyValue(ConfigurationProperty,Object,Boolean)
- uid: System.Configuration.ConfigurationElement.SetReadOnly
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SetReadOnly()
  nameWithType: ConfigurationElement.SetReadOnly()
  fullName: System.Configuration.ConfigurationElement.SetReadOnly()
- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  fullName: System.Configuration.ConfigurationElement.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
- uid: System.Configuration.ConfigurationSaveMode
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSaveMode
  nameWithType: ConfigurationSaveMode
  fullName: System.Configuration.ConfigurationSaveMode
- uid: System.Configuration.ConfigurationElement.#ctor*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ConfigurationElement
  nameWithType: ConfigurationElement.ConfigurationElement
- uid: System.Configuration.ConfigurationElement.CurrentConfiguration*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: CurrentConfiguration
  nameWithType: ConfigurationElement.CurrentConfiguration
- uid: System.Configuration.ConfigurationElement.DeserializeElement*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: DeserializeElement
  nameWithType: ConfigurationElement.DeserializeElement
- uid: System.Configuration.ConfigurationElement.ElementInformation*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ElementInformation
  nameWithType: ConfigurationElement.ElementInformation
- uid: System.Configuration.ConfigurationElement.ElementProperty*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ElementProperty
  nameWithType: ConfigurationElement.ElementProperty
- uid: System.Configuration.ConfigurationElement.Equals*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Equals
  nameWithType: ConfigurationElement.Equals
- uid: System.Configuration.ConfigurationElement.EvaluationContext*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: EvaluationContext
  nameWithType: ConfigurationElement.EvaluationContext
- uid: System.Configuration.ConfigurationElement.GetHashCode*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: GetHashCode
  nameWithType: ConfigurationElement.GetHashCode
- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: GetTransformedAssemblyString
  nameWithType: ConfigurationElement.GetTransformedAssemblyString
- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: GetTransformedTypeString
  nameWithType: ConfigurationElement.GetTransformedTypeString
- uid: System.Configuration.ConfigurationElement.HasContext*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: HasContext
  nameWithType: ConfigurationElement.HasContext
- uid: System.Configuration.ConfigurationElement.Init*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Init
  nameWithType: ConfigurationElement.Init
- uid: System.Configuration.ConfigurationElement.InitializeDefault*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: InitializeDefault
  nameWithType: ConfigurationElement.InitializeDefault
- uid: System.Configuration.ConfigurationElement.IsModified*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: IsModified
  nameWithType: ConfigurationElement.IsModified
- uid: System.Configuration.ConfigurationElement.IsReadOnly*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: IsReadOnly
  nameWithType: ConfigurationElement.IsReadOnly
- uid: System.Configuration.ConfigurationElement.Item*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Item
  nameWithType: ConfigurationElement.Item
- uid: System.Configuration.ConfigurationElement.ListErrors*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ListErrors
  nameWithType: ConfigurationElement.ListErrors
- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockAllAttributesExcept
  nameWithType: ConfigurationElement.LockAllAttributesExcept
- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockAllElementsExcept
  nameWithType: ConfigurationElement.LockAllElementsExcept
- uid: System.Configuration.ConfigurationElement.LockAttributes*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockAttributes
  nameWithType: ConfigurationElement.LockAttributes
- uid: System.Configuration.ConfigurationElement.LockElements*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockElements
  nameWithType: ConfigurationElement.LockElements
- uid: System.Configuration.ConfigurationElement.LockItem*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockItem
  nameWithType: ConfigurationElement.LockItem
- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: OnDeserializeUnrecognizedAttribute
  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute
- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: OnDeserializeUnrecognizedElement
  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement
- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: OnRequiredPropertyNotFound
  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound
- uid: System.Configuration.ConfigurationElement.PostDeserialize*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: PostDeserialize
  nameWithType: ConfigurationElement.PostDeserialize
- uid: System.Configuration.ConfigurationElement.PreSerialize*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: PreSerialize
  nameWithType: ConfigurationElement.PreSerialize
- uid: System.Configuration.ConfigurationElement.Properties*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Properties
  nameWithType: ConfigurationElement.Properties
- uid: System.Configuration.ConfigurationElement.Reset*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Reset
  nameWithType: ConfigurationElement.Reset
- uid: System.Configuration.ConfigurationElement.ResetModified*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ResetModified
  nameWithType: ConfigurationElement.ResetModified
- uid: System.Configuration.ConfigurationElement.SerializeElement*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SerializeElement
  nameWithType: ConfigurationElement.SerializeElement
- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SerializeToXmlElement
  nameWithType: ConfigurationElement.SerializeToXmlElement
- uid: System.Configuration.ConfigurationElement.SetPropertyValue*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SetPropertyValue
  nameWithType: ConfigurationElement.SetPropertyValue
- uid: System.Configuration.ConfigurationElement.SetReadOnly*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SetReadOnly
  nameWithType: ConfigurationElement.SetReadOnly
- uid: System.Configuration.ConfigurationElement.Unmerge*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Unmerge
  nameWithType: ConfigurationElement.Unmerge
