### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ReliableSession
  id: ReliableSession
  children:
  - System.ServiceModel.ReliableSession.#ctor
  - System.ServiceModel.ReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)
  - System.ServiceModel.ReliableSession.InactivityTimeout
  - System.ServiceModel.ReliableSession.Ordered
  langs:
  - csharp
  name: ReliableSession
  nameWithType: ReliableSession
  fullName: System.ServiceModel.ReliableSession
  type: Class
  summary: "Gir enkel tilgang til egenskaper for et pålitelig økt Bindingselement som er tilgjengelig når du bruker en angitt system-bindinger."
  remarks: "Egenskapene i klassen ReliableSession er delsettet med de som finnes i den <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>som er tilgjengelig fra en forhåndsdefinert binding.</xref:System.ServiceModel.Channels.ReliableSessionBindingElement> Dette delsettet består av det <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A>og <xref:System.ServiceModel.ReliableSession.Ordered%2A>Egenskaper.</xref:System.ServiceModel.ReliableSession.Ordered%2A> </xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> Klassen ReliableSession refererer til de samme objektene som finnes i <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>, så endre verdien for en endrer verdien for den andre for.</xref:System.ServiceModel.Channels.ReliableSessionBindingElement> Denne klassen samler disse to egenskaper for pålitelig økt bindingselementet sammen for bedre synlig."
  example:
  - "The following example shows how to create a new reliable session, and access and change the property values of that session. The ReliableSession class allows you to write:  \n  \n [!code-cs[UEReliableSession#1](~/add/codesnippet/csharp/t-system.servicemodel.re_0_1.cs)]\n [!code-vb[UEReliableSession#1](~/add/codesnippet/visualbasic/t-system.servicemodel.re_0_1.vb)]"
  syntax:
    content: public class ReliableSession
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.ReliableSession.#ctor
  id: '#ctor'
  parent: System.ServiceModel.ReliableSession
  langs:
  - csharp
  name: ReliableSession()
  nameWithType: ReliableSession.ReliableSession()
  fullName: System.ServiceModel.ReliableSession.ReliableSession()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.ServiceModel.ReliableSession&quot;> </xref> klasse."
  syntax:
    content: public ReliableSession ();
    parameters: []
  overload: System.ServiceModel.ReliableSession.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)
  id: '#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)'
  parent: System.ServiceModel.ReliableSession
  langs:
  - csharp
  name: ReliableSession(ReliableSessionBindingElement)
  nameWithType: ReliableSession.ReliableSession(ReliableSessionBindingElement)
  fullName: System.ServiceModel.ReliableSession.ReliableSession(ReliableSessionBindingElement)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.ServiceModel.ReliableSession&quot;> </xref> klassen fra en pålitelig økt bindingselementet."
  remarks: ''
  example:
  - >-
    [!code-cs[UEReliableSession#1](~/add/codesnippet/csharp/80f1598c-ddfc-4656-a81f-_1.cs)]
     [!code-vb[UEReliableSession#1](~/add/codesnippet/visualbasic/80f1598c-ddfc-4656-a81f-_1.vb)]
  syntax:
    content: public ReliableSession (System.ServiceModel.Channels.ReliableSessionBindingElement reliableSessionBindingElement);
    parameters:
    - id: reliableSessionBindingElement
      type: System.ServiceModel.Channels.ReliableSessionBindingElement
      description: "Den <xref href=&quot;System.ServiceModel.Channels.ReliableSessionBindingElement&quot;> </xref> med egenskapsverdier brukes til å initialisere den pålitelige økten."
  overload: System.ServiceModel.ReliableSession.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>reliableSessionBindingElement</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.ReliableSession.InactivityTimeout
  id: InactivityTimeout
  parent: System.ServiceModel.ReliableSession
  langs:
  - csharp
  name: InactivityTimeout
  nameWithType: ReliableSession.InactivityTimeout
  fullName: System.ServiceModel.ReliableSession.InactivityTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Henter eller angir en tidsintervallet som en tjeneste kan være inaktiv før du lukker."
  remarks: "Egenskapen får og angir verdien for den <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout%2A>egenskapen.</xref:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout%2A>       Aktiviteten på en kanal er definert som mottak av et program eller infrastruktur melding. Aktivitet timeout-egenskapen kontrollerer maksimal tid til å gjøre en inaktiv økt aktiv. Hvis mer enn det angitte tidsintervallet for InactivityTimeout sender uten aktivitet, ble økten avbrutt av infrastrukturen og kanal-feil. Den pålitelige økten er brutt ned Ensidig.       Hvis avsenderprogrammet har ingen meldinger for å sende deretter pålitelig mislyktes vanligvis ikke på grunn av inaktivitet; i stedet holder en Behold aktiv-mekanisme økten aktiv på ubestemt tid. Vær oppmerksom på at dispatcher uavhengig kan avbryte pålitelig økt Hvis ingen programmet-meldinger sendes eller mottas. Tidsavbrudd for inaktivitet utløper derfor vanligvis hvis nettverksbetingelser er slik at ingen meldinger i det hele tatt mottas, eller hvis det oppstår en feil på avsenderen.       Angi tidsavbrudd for denne, hindrer du at serveren holde på en hvis klienten ikke lukker den. Hvis sikkerhetsøkten ikke har mottatt en melding på aktivitet tidsintervallet, kan den er lukket av serveren. Dette begrenser en potensiell avslått av tjenesteforespørsler.       Når du bruker en pålitelig økt, er det to ulike aktivitet tidtakerne som må oppfylles holde tilkoblingen aktiv. Hvis en av disse aktivitet tidtakerne går, slettet tilkoblingen.      -Kalles i InactivityTimeout første aktivitet tidtakeren er i pålitelig økten. Denne tidtakeren for aktivitet starter Hvis ingen meldinger, program eller infrastruktur, mottas innen tidsavbruddsperioden. Meldingen infrastruktur er en melding som er generert for en av protokoller i for eksempel en aktiv beholde stakken kanal eller en bekreftelse, i stedet som inneholder programdata.      -Andre aktivitet tidtakeren for tjenesten, og bruker den <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A>innstillingen for bindingen.</xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> Denne tidtakeren for aktivitet starter Hvis ingen programmet-meldinger mottas innen tidsavbruddsperioden.       Etter at tilkoblingen hvis enten aktivitet tidtakeren starter, øke InactivityTimeout når den er større enn <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A>har ingen virkning.</xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> Standardverdien for begge disse tidsavbrudd er 10 minutter, slik at du alltid har til å øke både dem for å sikre en forskjell når du bruker en pålitelig økt."
  example:
  - >-
    [!code-cs[UEReliableSession#2](~/add/codesnippet/csharp/p-system.servicemodel.re_0_1.cs)]
     [!code-vb[UEReliableSession#2](~/add/codesnippet/visualbasic/p-system.servicemodel.re_0_1.vb)]
  syntax:
    content: public TimeSpan InactivityTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "Den <xref:System.TimeSpan>som angir hvor lang tid en tjeneste forblir inaktiv før du lukker.</xref:System.TimeSpan> Standardverdien er 10 minutter."
  overload: System.ServiceModel.ReliableSession.InactivityTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Verdien er mindre enn eller lik null."
  platform:
  - net462
- uid: System.ServiceModel.ReliableSession.Ordered
  id: Ordered
  parent: System.ServiceModel.ReliableSession
  langs:
  - csharp
  name: Ordered
  nameWithType: ReliableSession.Ordered
  fullName: System.ServiceModel.ReliableSession.Ordered
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Henter eller angir en verdi som angir om meldingslevering må beholde rekkefølgen-meldinger sendes."
  remarks: "Egenskapen får og angir verdien for den <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered%2A>egenskapen.</xref:System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered%2A>"
  example:
  - >-
    [!code-cs[UEReliableSession#2](~/add/codesnippet/csharp/p-system.servicemodel.re_1_1.cs)]
     [!code-vb[UEReliableSession#2](~/add/codesnippet/visualbasic/p-system.servicemodel.re_1_1.vb)]
  syntax:
    content: public bool Ordered { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis meldinger må leveres i rekkefølgen som de sendes; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardverdien er <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.ReliableSession.Ordered*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.ReliableSession.#ctor
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: ReliableSession()
  nameWithType: ReliableSession.ReliableSession()
  fullName: System.ServiceModel.ReliableSession.ReliableSession()
- uid: System.ServiceModel.ReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: ReliableSession(ReliableSessionBindingElement)
  nameWithType: ReliableSession.ReliableSession(ReliableSessionBindingElement)
  fullName: System.ServiceModel.ReliableSession.ReliableSession(ReliableSessionBindingElement)
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement
  parent: System.ServiceModel.Channels
  isExternal: false
  name: ReliableSessionBindingElement
  nameWithType: ReliableSessionBindingElement
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement
- uid: System.ServiceModel.ReliableSession.InactivityTimeout
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: InactivityTimeout
  nameWithType: ReliableSession.InactivityTimeout
  fullName: System.ServiceModel.ReliableSession.InactivityTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.ReliableSession.Ordered
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: Ordered
  nameWithType: ReliableSession.Ordered
  fullName: System.ServiceModel.ReliableSession.Ordered
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.ReliableSession.#ctor*
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: ReliableSession
  nameWithType: ReliableSession.ReliableSession
- uid: System.ServiceModel.ReliableSession.InactivityTimeout*
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: InactivityTimeout
  nameWithType: ReliableSession.InactivityTimeout
- uid: System.ServiceModel.ReliableSession.Ordered*
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: Ordered
  nameWithType: ReliableSession.Ordered
