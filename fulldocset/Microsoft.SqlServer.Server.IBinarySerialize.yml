### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlServer.Server.IBinarySerialize
  id: IBinarySerialize
  children:
  - Microsoft.SqlServer.Server.IBinarySerialize.Read(System.IO.BinaryReader)
  - Microsoft.SqlServer.Server.IBinarySerialize.Write(System.IO.BinaryWriter)
  langs:
  - csharp
  name: IBinarySerialize
  nameWithType: IBinarySerialize
  fullName: Microsoft.SqlServer.Server.IBinarySerialize
  type: Interface
  summary: "Gir egendefinert implementering for en brukerdefinert type (UDT) og brukerdefinert aggregate serialisering og deserialisering."
  remarks: "Brukerdefinerte typer (UDTs) og brukerdefinerte aggregater kreves for å definere en Lagringsformat som kan være enten <xref:Microsoft.SqlServer.Server.Format>.`Native` </xref:Microsoft.SqlServer.Server.Format> or <xref:Microsoft.SqlServer.Server.Format>.`UserDefined`.</xref:Microsoft.SqlServer.Server.Format>       <xref:Microsoft.SqlServer.Server.Format>.`Native`</xref:Microsoft.SqlServer.Server.Format> tillater at SQL Server til å håndtere serialisering og deserialization automatisk, men formatet har begrensninger for hva slags typer den kan håndtere. <xref:Microsoft.SqlServer.Server.Format>.`UserDefined`</xref:Microsoft.SqlServer.Server.Format> tillater brukerdefinerte typer og aggregater å håndtere sin egen serialisering. Brukerdefinerte typer og aggregater må være merket med <xref:Microsoft.SqlServer.Server.Format>.`UserDefined` </xref:Microsoft.SqlServer.Server.Format> i de `SqlUserDefinedType` eller `SqlUserDefinedAggregate` attributt og må implementere grensesnittet IBinarySerialize.       Merk at selv med egendefinerte serialisering den totale størrelsen på hver forekomst, må være under maksimalt tillatt grense for øyeblikket 8000 byte."
  syntax:
    content: public interface IBinarySerialize
  implements: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.IBinarySerialize.Read(System.IO.BinaryReader)
  id: Read(System.IO.BinaryReader)
  parent: Microsoft.SqlServer.Server.IBinarySerialize
  langs:
  - csharp
  name: Read(BinaryReader)
  nameWithType: IBinarySerialize.Read(BinaryReader)
  fullName: Microsoft.SqlServer.Server.IBinarySerialize.Read(BinaryReader)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Genererer en brukerdefinert type (UDT) eller brukerdefinerte mengden fra det binære formatet."
  remarks: "Read-metoden må reconstitute objektet ved hjelp av informasjonen som er skrevet av den <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A>metoden.</xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A>"
  example:
  - "The following example shows the implementation of the Read method of a UDT, which uses a <xref:System.IO.BinaryReader> to de-serialize a previously persisted UDT. This example assumes that the UDT has two data properties: `StringValue` and `DoubleValue`.  \n  \n [!code-cs[DataWorks IBinarySerialize Samples#1](~/add/codesnippet/csharp/m-microsoft.sqlserver.se_1_1.cs)]\n [!code-vb[DataWorks IBinarySerialize Samples#1](~/add/codesnippet/visualbasic/m-microsoft.sqlserver.se_1_1.vb)]"
  syntax:
    content: public void Read (System.IO.BinaryReader r);
    parameters:
    - id: r
      type: System.IO.BinaryReader
      description: "Den <xref:System.IO.BinaryReader>flyten fra objektet er deserialiseres.</xref:System.IO.BinaryReader>"
  overload: Microsoft.SqlServer.Server.IBinarySerialize.Read*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.IBinarySerialize.Write(System.IO.BinaryWriter)
  id: Write(System.IO.BinaryWriter)
  parent: Microsoft.SqlServer.Server.IBinarySerialize
  langs:
  - csharp
  name: Write(BinaryWriter)
  nameWithType: IBinarySerialize.Write(BinaryWriter)
  fullName: Microsoft.SqlServer.Server.IBinarySerialize.Write(BinaryWriter)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Konverterer en brukerdefinert type (UDT) eller brukerdefinerte mengden til det binære formatet slik at det gjøres fast."
  remarks: "Skrive nok informasjon til binærstrøm slik at den <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A>metoden reconstitute UDT eller brukerdefinerte mengden.</xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A>"
  example:
  - "The following example shows the implementation of the Writemethod of a UDT, which uses a <xref:System.IO.BinaryWriter> to serialize the UDT in the user-defined binary format. The purpose of the null character padding is to ensure that the string value is completely separated from the double value, so that one UDT is compared to another in Transact-SQL code, string bytes are compared to string bytes and double bytes are compared to double bytes.  \n  \n [!code-cs[DataWorks IBinarySerialize Samples#2](~/add/codesnippet/csharp/m-microsoft.sqlserver.se_0_1.cs)]\n [!code-vb[DataWorks IBinarySerialize Samples#2](~/add/codesnippet/visualbasic/m-microsoft.sqlserver.se_0_1.vb)]"
  syntax:
    content: public void Write (System.IO.BinaryWriter w);
    parameters:
    - id: w
      type: System.IO.BinaryWriter
      description: "Den <xref:System.IO.BinaryWriter>som UDT eller brukerdefinerte mengden er serialisert dataflyt.</xref:System.IO.BinaryWriter>"
  overload: Microsoft.SqlServer.Server.IBinarySerialize.Write*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.SqlServer.Server.IBinarySerialize.Read(System.IO.BinaryReader)
  parent: Microsoft.SqlServer.Server.IBinarySerialize
  isExternal: false
  name: Read(BinaryReader)
  nameWithType: IBinarySerialize.Read(BinaryReader)
  fullName: Microsoft.SqlServer.Server.IBinarySerialize.Read(BinaryReader)
- uid: System.IO.BinaryReader
  parent: System.IO
  isExternal: true
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader
- uid: Microsoft.SqlServer.Server.IBinarySerialize.Write(System.IO.BinaryWriter)
  parent: Microsoft.SqlServer.Server.IBinarySerialize
  isExternal: false
  name: Write(BinaryWriter)
  nameWithType: IBinarySerialize.Write(BinaryWriter)
  fullName: Microsoft.SqlServer.Server.IBinarySerialize.Write(BinaryWriter)
- uid: System.IO.BinaryWriter
  parent: System.IO
  isExternal: true
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
- uid: Microsoft.SqlServer.Server.IBinarySerialize.Read*
  parent: Microsoft.SqlServer.Server.IBinarySerialize
  isExternal: false
  name: Read
  nameWithType: IBinarySerialize.Read
- uid: Microsoft.SqlServer.Server.IBinarySerialize.Write*
  parent: Microsoft.SqlServer.Server.IBinarySerialize
  isExternal: false
  name: Write
  nameWithType: IBinarySerialize.Write
