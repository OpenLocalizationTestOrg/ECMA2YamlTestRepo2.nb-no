### YamlMime:ManagedReference
items:
- uid: System.Windows.DependencyPropertyKey
  id: DependencyPropertyKey
  children:
  - System.Windows.DependencyPropertyKey.DependencyProperty
  - System.Windows.DependencyPropertyKey.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)
  langs:
  - csharp
  name: DependencyPropertyKey
  nameWithType: DependencyPropertyKey
  fullName: System.Windows.DependencyPropertyKey
  type: Class
  summary: "Inneholder en avhengighet egenskapsidentifikator for begrenset skrivetilgang til en skrivebeskyttet avhengighetsegenskapen."
  remarks: "Forekomster av DependencyPropertyKey hentes som returverdi av avhengighet egenskapen registrering samtaler med metoder <xref:System.Windows.DependencyProperty.RegisterReadOnly%2A>eller <xref:System.Windows.DependencyProperty.RegisterAttachedReadOnly%2A>.</xref:System.Windows.DependencyProperty.RegisterAttachedReadOnly%2A> </xref:System.Windows.DependencyProperty.RegisterReadOnly%2A>       Typene som registrerer en avhengighetsegenskapen kan bruke DependencyPropertyKey i kall til <xref:System.Windows.DependencyObject.SetValue%2A>og <xref:System.Windows.DependencyObject.ClearValue%2A>som justerer egenskapsverdien som en del av klassen logic.</xref:System.Windows.DependencyObject.ClearValue%2A> </xref:System.Windows.DependencyObject.SetValue%2A> Hvis tillatt av tilgangsnivå for nøkkelen, kan relaterte klassene bruke nøkkelen og avhengighetsegenskapen også. For eksempel kan du deklarere nøkkelen som intern, og andre typer i samme samling kan også angi at avhengighetsegenskapen.       DependencyPropertyKey ble returnert av skrivebeskyttet avhengighet egenskapen registrering bør ikke bli offentliggjort, fordi at nøkkelen gjør egenskapen angis, noe som dermed oppveier punktet med å registrere den som en skrivebeskyttet avhengighetsegenskap. Også at nøkkelen får ikke samsvar mellom tilgjengelig avhengigheten egenskapen virkemåter og [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] egenskapen wrapper implementeringer, som er utformet for ugyldig klasse.       I stedet for at selve nøkkelen, må du i stedet utsette den <xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A>verdien for DependencyPropertyKey som en `public static readonly` <xref:System.Windows.DependencyProperty>på din klasse.</xref:System.Windows.DependencyProperty> </xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A> Det gjør det til å returnere en ugyldig avhengighet egenskapsidentifikator for en bestemt egenskapen systemoperasjoner, for eksempel opplisting av lokalt sett verdier. Identifikatoren dermed hente har imidlertid ikke alle egenskapene i en <xref:System.Windows.DependencyProperty>for mange egenskapen systemoperasjoner.</xref:System.Windows.DependencyProperty>"
  example:
  - "The following example registers a read-only dependency property, and also uses the key for two purposes in other class members: implementing the get \"wrapper\", and as the identifier for a protected determination operation that sets the value based on calculations of other property values.  \n  \n [!code-cs[WPFAquariumSln#RODP](~/add/codesnippet/csharp/WPFAquariumSln/WPFAquariumObjects/Class1.cs#rodp)]\n [!code-vb[WPFAquariumSln#RODP](~/add/codesnippet/visualbasic/wpfaquariumobjects/class1.vb#rodp)]"
  syntax:
    content: public sealed class DependencyPropertyKey
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyKey.DependencyProperty
  id: DependencyProperty
  parent: System.Windows.DependencyPropertyKey
  langs:
  - csharp
  name: DependencyProperty
  nameWithType: DependencyPropertyKey.DependencyProperty
  fullName: System.Windows.DependencyPropertyKey.DependencyProperty
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Henter avhengighet egenskapsidentifikator som er tilknyttet denne egenskapsidentifikator for spesialiserte skrivebeskyttet avhengighet."
  remarks: "Verdien for DependencyProperty aktiverer en skrivebeskyttet egenskapen ID til å delta i felles egenskapen systemoperasjoner bruker noen av de samme grensesnittene som brukes for lese-/ avhengighetsegenskaper.       For å implementere get Egenskapsaksessor for et skrivebeskyttet avhengighetsegenskapen, må du opprette og vise en <xref:System.Windows.DependencyProperty>ID for din klasse.</xref:System.Windows.DependencyProperty> Dette fungerer to formål: – din eier klassen må den <xref:System.Windows.DependencyProperty>identifikator for å implementere get-aksessor for den egenskap wrapperen.</xref:System.Windows.DependencyProperty> Du bruker den <xref:System.Windows.DependencyProperty>som en parameter for de <xref:System.Windows.DependencyObject.GetValue%2A>oppringing som implementerer get-aksessor.</xref:System.Windows.DependencyObject.GetValue%2A> </xref:System.Windows.DependencyProperty>      - <xref:System.Windows.DependencyProperty>identifikatorer vise din avhengighetsegenskapen egenskapen systemet slik at andre metoder som avhenger av metadata kan få tilgang til den i et standard skjema.</xref:System.Windows.DependencyProperty> For eksempel hvis du kalte <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A>på noen <xref:System.Windows.DependencyObject>og anskaffet en opplisting av lokalt angi egenskaper (verdiene og identifikatorer) i identifikator som ble returnert for en skrivebeskyttet avhengighetsegenskapen ville bli din <xref:System.Windows.DependencyProperty>verdi i stedet for nøkkelen.</xref:System.Windows.DependencyProperty> </xref:System.Windows.DependencyObject> </xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> Ikke at en <xref:System.Windows.DependencyProperty>identifikator øker ikke sikkerheten for din skrivebeskyttet avhengighetsegenskapen på noen måte, gjør det bare operasjoner som involverer egenskapen mer ubeleilige både etterfølgende avledede klasser og klasseforekomster.</xref:System.Windows.DependencyProperty>       Vise den <xref:System.Windows.DependencyProperty>ID for klassen du kaller DependencyProperty direkte i nøkkelen.</xref:System.Windows.DependencyProperty> Bruk denne verdien til å opprette en `public static readonly` <xref:System.Windows.DependencyProperty>identifikator i klassen som parallels <xref:System.Windows.DependencyPropertyKey>.</xref:System.Windows.DependencyPropertyKey> </xref:System.Windows.DependencyProperty>"
  example:
  - "The following example calls DependencyProperty to expose the <xref:System.Windows.DependencyProperty> identifier (`AquariumGraphicProperty`) for the `AquariumGraphic` read-only dependency property on a class. The example also shows the <xref:System.Windows.DependencyPropertyKey> creation (as an internal member) and the get accessor for `AquariumGraphic`.  \n  \n [!code-cs[WPFAquariumSln#RODP](~/add/codesnippet/csharp/WPFAquariumSln/WPFAquariumObjects/Class1.cs#rodp)]\n [!code-vb[WPFAquariumSln#RODP](~/add/codesnippet/visualbasic/wpfaquariumobjects/class1.vb#rodp)]"
  syntax:
    content: public System.Windows.DependencyProperty DependencyProperty { get; }
    return:
      type: System.Windows.DependencyProperty
      description: "Relevante avhengighet egenskapsidentifikator."
  overload: System.Windows.DependencyPropertyKey.DependencyProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyKey.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)
  id: OverrideMetadata(System.Type,System.Windows.PropertyMetadata)
  parent: System.Windows.DependencyPropertyKey
  langs:
  - csharp
  name: OverrideMetadata(Type,PropertyMetadata)
  nameWithType: DependencyPropertyKey.OverrideMetadata(Type,PropertyMetadata)
  fullName: System.Windows.DependencyPropertyKey.OverrideMetadata(Type,PropertyMetadata)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Overstyrer metadataene i en skrivebeskyttet avhengighetsegenskapen som representeres av egenskapsidentifikator denne avhengighet."
  remarks: "Overstyrer metadata på en skrivebeskyttet avhengighetsegenskapen gjøres lignende grunner som overstyrer metadata på en skrivebeskyttet avhengighetsegenskapen og er begrenset til tilgang på key nivå fordi virkemåter som er angitt i metadata kan endre virkemåten sett (standardverdien, for eksempel).       Som med lese-/ avhengighetsegenskaper bør overstyrer metadata på en skrivebeskyttet avhengighetsegenskapen bare gjøres før denne egenskapen er plassert i bruk av egenskapen systemet (dette lik klokkeslettet bestemte forekomster av objekter som registrerer egenskapen startes). Kall til OverrideMetadata kan bare utføres i statiske konstruktører av typen som gir seg selv som den `forType` -parameteren for denne metoden eller tilsvarende initialisering for denne klassen.       Denne metoden videresender effektivt til den <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>metoden sending av <xref:System.Windows.DependencyPropertyKey>forekomsten som parameteren key.</xref:System.Windows.DependencyPropertyKey> </xref:System.Windows.DependencyProperty.OverrideMetadata%2A>"
  example:
  - "The following example overrides metadata for an existing read-only dependency property that a class inherits. In this case, the scenario goal was to add a coerce value callback that the base property metadata did not have. You could also override metadata for any of the other reasons that overriding metadata is typically appropriate (changing default value, adding <xref:System.Windows.FrameworkPropertyMetadataOptions> values, etc.)  \n  \n [!code-cs[WPFAquariumSln#RODPOverride](~/add/codesnippet/csharp/WPFAquariumSln/WPFAquariumObjects/Class1.cs#rodpoverride)]\n [!code-vb[WPFAquariumSln#RODPOverride](~/add/codesnippet/visualbasic/wpfaquariumobjects/class1.vb#rodpoverride)]"
  syntax:
    content: public void OverrideMetadata (Type forType, System.Windows.PropertyMetadata typeMetadata);
    parameters:
    - id: forType
      type: System.Type
      description: "Typen som denne avhengighetsegenskapen finnes, og metadata skal overstyres."
    - id: typeMetadata
      type: System.Windows.PropertyMetadata
      description: "Metadata som er angitt for denne typen."
  overload: System.Windows.DependencyPropertyKey.OverrideMetadata*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Forsøkt metadata override i en skrivebeskyttet avhengighetsegenskapen (kan ikke utføres ved hjelp av denne signaturen)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Metadata ble allerede opprettet for egenskapen som det finnes på den angitte typen."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.DependencyPropertyKey.DependencyProperty
  parent: System.Windows.DependencyPropertyKey
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyPropertyKey.DependencyProperty
  fullName: System.Windows.DependencyPropertyKey.DependencyProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.DependencyPropertyKey.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)
  parent: System.Windows.DependencyPropertyKey
  isExternal: false
  name: OverrideMetadata(Type,PropertyMetadata)
  nameWithType: DependencyPropertyKey.OverrideMetadata(Type,PropertyMetadata)
  fullName: System.Windows.DependencyPropertyKey.OverrideMetadata(Type,PropertyMetadata)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.PropertyMetadata
  parent: System.Windows
  isExternal: false
  name: PropertyMetadata
  nameWithType: PropertyMetadata
  fullName: System.Windows.PropertyMetadata
- uid: System.Windows.DependencyPropertyKey.DependencyProperty*
  parent: System.Windows.DependencyPropertyKey
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyPropertyKey.DependencyProperty
- uid: System.Windows.DependencyPropertyKey.OverrideMetadata*
  parent: System.Windows.DependencyPropertyKey
  isExternal: false
  name: OverrideMetadata
  nameWithType: DependencyPropertyKey.OverrideMetadata
