### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  id: X509CertificateRecipientClientCredential
  children:
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  langs:
  - csharp
  name: X509CertificateRecipientClientCredential
  nameWithType: X509CertificateRecipientClientCredential
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  type: Class
  summary: "Representerer innstillingene brukes av klienten til å validere sertifikatet fra tjenesten ved hjelp av SSL-godkjenning. Det inneholder et sertifikat for tjenester som eksplisitt er konfigurert på klienten skal bruke til å kryptere meldinger til tjenesten ved hjelp av sikkerhet for melding."
  remarks: "Denne klassen brukes av <xref:System.ServiceModel.Description.ClientCredentials.ServiceCertificate%2A>egenskap i <xref:System.ServiceModel.Description.ClientCredentials>klasse.</xref:System.ServiceModel.Description.ClientCredentials> </xref:System.ServiceModel.Description.ClientCredentials.ServiceCertificate%2A>"
  example:
  - "This code shows one way to create an instance of this class.  \n  \n [!code-vb[c_CreateSTS#18](~/add/codesnippet/visualbasic/t-system.servicemodel.se_15_1.vb)]\n [!code-cs[c_CreateSTS#18](~/add/codesnippet/csharp/t-system.servicemodel.se_15_1.cs)]"
  syntax:
    content: public sealed class X509CertificateRecipientClientCredential
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  id: Authentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: Authentication
  nameWithType: X509CertificateRecipientClientCredential.Authentication
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Henter innstillinger som brukes til å validere service-sertifikatet som ble hentet ved hjelp av SSL-godkjenning."
  remarks: "Den <xref:System.ServiceModel.Security.X509ClientCertificateAuthentication>klassen representerer innstillingene brukes av klient-proxy til å godkjenne tjenesten sertifikater som er hentet ved hjelp av SSL/TLS-forhandlingen.</xref:System.ServiceModel.Security.X509ClientCertificateAuthentication>"
  example:
  - "This code shows how to access this property.  \n  \n [!code-cs[c_CreateSTS#21](~/add/codesnippet/csharp/d04fd5a9-6333-4d5a-92f2-_1.cs)]"
  syntax:
    content: public System.ServiceModel.Security.X509ServiceCertificateAuthentication Authentication { get; }
    return:
      type: System.ServiceModel.Security.X509ServiceCertificateAuthentication
      description: "Innstillinger som brukes til å validere service-sertifikatet som ble hentet ved hjelp av SSL-godkjenning."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  id: DefaultCertificate
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: DefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.DefaultCertificate
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Henter eller angir standardsertifikatet som skal brukes for tjenesten."
  remarks: "Dette sertifikatet brukes til å kryptere meldinger til tjenesten for bindinger som bruker sertifikatbasert meldingen sikkerhet, og som skal brukes av tjenesten for signering svar til klienten."
  example:
  - "This code shows how to access this property.  \n  \n [!code-cs[c_CreateSTS#24](~/add/codesnippet/csharp/3f3eeba7-32c2-4573-9477-_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 DefaultCertificate { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "Standardsertifikat som skal brukes for tjenesten."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Forsøk på å angi når legitimasjonen er skrivebeskyttet."
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  id: ScopedCertificates
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: ScopedCertificates
  nameWithType: X509CertificateRecipientClientCredential.ScopedCertificates
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Henter en omfattede sertifikat som skal brukes til å representere tjenesten som klienten kommuniserer med."
  remarks: "Denne egenskapen kan klienten til å konfigurere Tjenestesertifikatet som skal brukes basert på URL-adressen for den kommuniserer med tjenesten. Dette er spesielt nyttig i utstedte token scenarioer der en klient kan være under kommunikasjon med flere tjenester (den Avslutt tjeneste samt mellomliggende sikkerhet token services). Dette sertifikatet for bindinger som bruker sertifikatbasert meldingen sikkerhet, brukes til å kryptere meldinger til tjenesten, og som skal brukes av tjenesten for signering svar til klienten.       Hvis en binding krever et sertifikat for tjenesten, og ingen bestemt sertifikat for URL-adresse tjenesten finnes i den `ScopedCertificates`, standardsertifikatet brukes."
  example:
  - "This code shows how to set this property.  \n  \n [!code-cs[c_CreateSTS#33](~/add/codesnippet/csharp/bcde5385-8f2b-4da9-a779-_1.cs)]"
  syntax:
    content: public System.Collections.Generic.Dictionary<Uri,System.Security.Cryptography.X509Certificates.X509Certificate2> ScopedCertificates { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2}
      description: "En omfattede sertifikat som skal brukes til å representere tjenesten som klienten kommuniserer med."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Forsøk på å angi når legitimasjonen er skrivebeskyttet."
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  id: SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetDefaultCertificate(String,StoreLocation,StoreName)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(String,StoreLocation,StoreName)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(String,StoreLocation,StoreName)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Angir standardsertifikatet som skal brukes for tjenesten. Dette sertifikatet brukes til å kryptere meldinger til tjenesten for bindinger som bruker sertifikatbasert meldingen sikkerhet, og som skal brukes av tjenesten for signering svar til klienten."
  remarks: "Denne metoden henter et sertifikat fra butikken i den angitte plasseringen som samsvarer med den `subjectName` parameteren.       Verdier for `storeLocation` er inkludert i den <xref:System.Security.Cryptography.X509Certificates.StoreLocation>opplisting:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: sertifikatlageret tilordnet til den lokale maskinen.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: sertifikatlageret brukes av den gjeldende brukeren (standard).</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Hvis programmet kjører under en systemkonto, deretter er sertifikatet vanligvis i <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> Hvis programmet kjører under en brukerkonto, deretter er sertifikatet vanligvis i <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Verdier for `storeName` er inkludert i den <xref:System.Security.Cryptography.X509Certificates.StoreName>opplisting.</xref:System.Security.Cryptography.X509Certificates.StoreName>"
  example:
  - "The following code uses this method to specify an X.509 certificate to use.  \n  \n [!code-cs[c_CreateSTS#23](~/add/codesnippet/csharp/1bf14924-d231-4bf6-a178-_1.cs)]"
  syntax:
    content: public void SetDefaultCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);
    parameters:
    - id: subjectName
      type: System.String
      description: "Det unike navnet for emne."
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "Plasseringen av sertifikatlageret som tjenesten bruker til å hente service-sertifikatet."
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "Navnet på X.509-sertifikatet lagre for å åpne."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subjectName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Forsøk på å angi når legitimasjonen er skrivebeskyttet."
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  id: SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Angir standardsertifikatet som skal brukes for tjenesten. Dette sertifikatet brukes til å kryptere meldinger til tjenesten for bindinger som bruker sertifikatbasert meldingen sikkerhet, og som skal brukes av tjenesten for signering svar til klienten."
  remarks: "Denne metoden henter et sertifikat fra butikken i den angitte plasseringen som samsvarer med den `findType` og `findValue` parametere.       Verdier for `storeLocation` er inkludert i den <xref:System.Security.Cryptography.X509Certificates.StoreLocation>opplisting:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: sertifikatlageret tilordnet til den lokale maskinen.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: sertifikatlageret brukes av den gjeldende brukeren (standard).</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Hvis programmet kjører under en systemkonto, deretter er sertifikatet vanligvis i <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> Hvis programmet kjører under en brukerkonto, deretter er sertifikatet vanligvis i <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Verdier for `storeName` er inkludert i den <xref:System.Security.Cryptography.X509Certificates.StoreName>opplisting.</xref:System.Security.Cryptography.X509Certificates.StoreName>       Verdier for `findType` er inkludert i den <xref:System.Security.Cryptography.X509Certificates.X509FindType>opplisting.</xref:System.Security.Cryptography.X509Certificates.X509FindType>       Mest brukte opplistingen er <xref:System.Security.Cryptography.X509Certificates.X509FindType>, som har et samlingstype Søk etter navn for emne sertifikater i den angitte lageret.</xref:System.Security.Cryptography.X509Certificates.X509FindType> Dette kan være en unøyaktig søk. Hvis det finnes ingen sertifikater eller flere sertifikater som samsvarer med vilkårene, en <xref:System.InvalidOperationException>forårsakes.</xref:System.InvalidOperationException>"
  example:
  - "The following code uses this method to specify an X.509 certificate to use.  \n  \n [!code-cs[c_CreateSTS#22](~/add/codesnippet/csharp/7f0910fb-b496-4487-b49c-_1.cs)]"
  syntax:
    content: public void SetDefaultCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);
    parameters:
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "Plasseringen av sertifikatlageret tjenesten bruker til å hente service-sertifikatet."
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "Navnet på X.509-sertifikatet lagre for å åpne."
    - id: findType
      type: System.Security.Cryptography.X509Certificates.X509FindType
      description: "Typen X.509 søk kjøres."
    - id: findValue
      type: System.Object
      description: "Verdien til å søke etter i X.509 sertifikatlageret."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>findValue</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Forsøk på å angi når legitimasjonen er skrivebeskyttet."
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  id: SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Angir et sertifikat etter navn for emne, sertifikatet lagringsplasseringen og sertifikatet store navn, og lagrer den i en samling som skal brukes for URL-adressen som angir omfanget."
  remarks: "Verdier for `storeLocation` er inkludert i den <xref:System.Security.Cryptography.X509Certificates.StoreLocation>opplisting:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: sertifikatlageret tilordnet til den lokale maskinen.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: sertifikatlageret brukes av den gjeldende brukeren (standard).</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Hvis programmet kjører under en systemkonto, deretter er sertifikatet vanligvis i <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> Hvis programmet kjører under en brukerkonto, deretter er sertifikatet vanligvis i <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Verdier for `storeName` er inkludert i den <xref:System.Security.Cryptography.X509Certificates.StoreName>opplisting.</xref:System.Security.Cryptography.X509Certificates.StoreName>"
  example:
  - "This code shows how to call this method.  \n  \n [!code-cs[c_CreateSTS#25](~/add/codesnippet/csharp/7ddc79f9-f97b-42fb-ab5a-_1.cs)]"
  syntax:
    content: public void SetScopedCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, Uri targetService);
    parameters:
    - id: subjectName
      type: System.String
      description: "Det fullstendige emnenavnet."
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "Plasseringen av sertifikatlageret som tjenesten bruker til å hente service-sertifikatet."
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "Navnet på X.509-sertifikatet lagre for å åpne."
    - id: targetService
      type: System.Uri
      description: "URL-adressen som angir omfanget."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetService</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Forsøk på å angi når legitimasjonen er skrivebeskyttet."
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  id: SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Angir sertifikatet av sertifikatlageret plassering navn for sertifikatet lager, X.509 Søk og søkeverdi og lagrer den i en samling som skal brukes for URL-adressen som angir omfanget."
  remarks: "Verdier for `storeLocation` er inkludert i den <xref:System.Security.Cryptography.X509Certificates.StoreLocation>opplisting:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: sertifikatlageret tilordnet til den lokale maskinen.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: sertifikatlageret brukes av den gjeldende brukeren (standard).</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Hvis programmet kjører under en systemkonto, deretter er sertifikatet vanligvis i <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> Hvis programmet kjører under en brukerkonto, deretter er sertifikatet vanligvis i <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Verdier for `storeName` er inkludert i den <xref:System.Security.Cryptography.X509Certificates.StoreName>opplisting.</xref:System.Security.Cryptography.X509Certificates.StoreName>       Verdier for `findType` er inkludert i den <xref:System.Security.Cryptography.X509Certificates.X509FindType>opplisting.</xref:System.Security.Cryptography.X509Certificates.X509FindType>       Mest brukte opplistingen er <xref:System.Security.Cryptography.X509Certificates.X509FindType>, som har et samlingstype Søk etter navn for emne sertifikater i den angitte lageret.</xref:System.Security.Cryptography.X509Certificates.X509FindType> Dette kan være en unøyaktig søk. Hvis det finnes ingen sertifikater eller flere sertifikater som samsvarer med vilkårene, en <xref:System.InvalidOperationException>vil bli utløst.</xref:System.InvalidOperationException>"
  example:
  - "This code shows how to call this method.  \n  \n [!code-vb[c_CreateSTS#20](~/add/codesnippet/visualbasic/75f932c5-822c-4f8b-9c16-_1.vb)]\n [!code-cs[c_CreateSTS#20](~/add/codesnippet/csharp/75f932c5-822c-4f8b-9c16-_1.cs)]"
  syntax:
    content: public void SetScopedCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue, Uri targetService);
    parameters:
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "Plasseringen av sertifikatlageret som tjenesten bruker til å hente service-sertifikatet."
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "Navnet på X.509-sertifikatet lagre for å åpne."
    - id: findType
      type: System.Security.Cryptography.X509Certificates.X509FindType
      description: "Typen X.509 søk kjøres."
    - id: findValue
      type: System.Object
      description: "Verdien til å søke etter i X.509 sertifikatlageret."
    - id: targetService
      type: System.Uri
      description: "URL-adressen som angir omfanget."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetService</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Forsøk på å angi når legitimasjonen er skrivebeskyttet."
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  id: SslCertificateAuthentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SslCertificateAuthentication
  nameWithType: X509CertificateRecipientClientCredential.SslCertificateAuthentication
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Henter eller angir validerer for SSL-sertifikatet til å bruke."
  remarks: "Denne egenskapen kan du bruke WCF X509CertificateValidator til å validere serversertifikatet i en WCF-klient."
  syntax:
    content: public System.ServiceModel.Security.X509ServiceCertificateAuthentication SslCertificateAuthentication { get; set; }
    return:
      type: System.ServiceModel.Security.X509ServiceCertificateAuthentication
      description: "En <xref href=&quot;System.ServiceModel.Security.X509ServiceCertificateAuthentication&quot;> </xref> forekomsten."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: Authentication
  nameWithType: X509CertificateRecipientClientCredential.Authentication
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
- uid: System.ServiceModel.Security.X509ServiceCertificateAuthentication
  parent: System.ServiceModel.Security
  isExternal: false
  name: X509ServiceCertificateAuthentication
  nameWithType: X509ServiceCertificateAuthentication
  fullName: System.ServiceModel.Security.X509ServiceCertificateAuthentication
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: DefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.DefaultCertificate
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: ScopedCertificates
  nameWithType: X509CertificateRecipientClientCredential.ScopedCertificates
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
- uid: System.Collections.Generic.Dictionary{System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<Uri,X509Certificate2>
  nameWithType: Dictionary<Uri,X509Certificate2>
  fullName: System.Collections.Generic.Dictionary<System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: X509Certificate2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetDefaultCertificate(String,StoreLocation,StoreName)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(String,StoreLocation,StoreName)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(String,StoreLocation,StoreName)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreLocation
  nameWithType: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
- uid: System.Security.Cryptography.X509Certificates.StoreName
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreName
  nameWithType: StoreName
  fullName: System.Security.Cryptography.X509Certificates.StoreName
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
- uid: System.Security.Cryptography.X509Certificates.X509FindType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509FindType
  nameWithType: X509FindType
  fullName: System.Security.Cryptography.X509Certificates.X509FindType
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(String,StoreLocation,StoreName,Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SslCertificateAuthentication
  nameWithType: X509CertificateRecipientClientCredential.SslCertificateAuthentication
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: Authentication
  nameWithType: X509CertificateRecipientClientCredential.Authentication
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: DefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.DefaultCertificate
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: ScopedCertificates
  nameWithType: X509CertificateRecipientClientCredential.ScopedCertificates
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetDefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetScopedCertificate
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SslCertificateAuthentication
  nameWithType: X509CertificateRecipientClientCredential.SslCertificateAuthentication
