### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Scope
  id: Scope
  children:
  - System.IdentityModel.Scope.#ctor
  - System.IdentityModel.Scope.#ctor(System.String)
  - System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.EncryptingCredentials)
  - System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)
  - System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.IdentityModel.Tokens.EncryptingCredentials)
  - System.IdentityModel.Scope.AppliesToAddress
  - System.IdentityModel.Scope.EncryptingCredentials
  - System.IdentityModel.Scope.Properties
  - System.IdentityModel.Scope.ReplyToAddress
  - System.IdentityModel.Scope.SigningCredentials
  - System.IdentityModel.Scope.SymmetricKeyEncryptionRequired
  - System.IdentityModel.Scope.TokenEncryptionRequired
  langs:
  - csharp
  name: Scope
  nameWithType: Scope
  fullName: System.IdentityModel.Scope
  type: Class
  summary: "Representerer konfigurasjonen for token endring av forespørselen."
  remarks: "Klassen omfanget innkapsler informasjon om en beroende krever (RP) tilknyttet sikkerhet token forespørsel (første). Denne informasjonen brukes av implementeringer av den <xref:System.IdentityModel.SecurityTokenService>klassen (STS) i pipeline-token utstedelse å returnere et svar (RSTR) på en token forespørsel for sikkerhet (første).</xref:System.IdentityModel.SecurityTokenService>       Omfanget objekter inneholder informasjon om adressen for RP av kryptering og logger legitimasjonen som skal brukes med utstedte sikkerhetstokenet, og om token seg selv eller symmetriske nøkler som er utstedt med tokenet må krypteres. Som standard krypteres begge token og symmetriske nøkler. Du kan utvide omfanget klassen for å utføre mer informasjon om forespørselen, for eksempel token typer godtatt av RP, standard token levetid, maksimal token levetid, algoritmen serier brukes av RP og så videre. informasjonen innkapslet i denne klassen skal avhenger imidlertid ikke for enkelte forespørsler.       Token utstedelse pipeline er implementert i den <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metoden og denne metoden aktiverer den <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>metode for å hente konfigurasjonen for første.</xref:System.IdentityModel.SecurityTokenService.GetScope%2A> </xref:System.IdentityModel.SecurityTokenService.Issue%2A> Du må implementere en <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>-metoden i den egendefinerte STS og returnerer et omfang-objekt til RP og STS implementeringen.</xref:System.IdentityModel.SecurityTokenService.GetScope%2A>"
  syntax:
    content: public class Scope
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: Scope()
  nameWithType: Scope.Scope()
  fullName: System.IdentityModel.Scope.Scope()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> klasse."
  remarks: "Tabellen nedenfor viser første egenskapsverdiene for den nye <xref:System.IdentityModel.Scope>forekomsten.</xref:System.IdentityModel.Scope>      | Egenskapen | Verdien. |   |--------------|------------|   | <xref:System.IdentityModel.Scope.AppliesToAddress%2A>| `null` .|   | <xref:System.IdentityModel.Scope.EncryptingCredentials%2A>| `null`.|   | <xref:System.IdentityModel.Scope.Properties%2A>| En tom liste. |   | <xref:System.IdentityModel.Scope.ReplyToAddress%2A>| `null`.|   | <xref:System.IdentityModel.Scope.SigningCredentials%2A>| `null`.|   | <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>| `true`.|   | <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>| `true`.|</xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A></xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A></xref:System.IdentityModel.Scope.SigningCredentials%2A></xref:System.IdentityModel.Scope.ReplyToAddress%2A></xref:System.IdentityModel.Scope.Properties%2A></xref:System.IdentityModel.Scope.EncryptingCredentials%2A></xref:System.IdentityModel.Scope.AppliesToAddress%2A>"
  syntax:
    content: public Scope ();
    parameters: []
  overload: System.IdentityModel.Scope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: Scope(String)
  nameWithType: Scope.Scope(String)
  fullName: System.IdentityModel.Scope.Scope(String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> klassen med den angitte appliesTo-adressen."
  remarks: "Tabellen nedenfor viser første egenskapsverdiene for den nye <xref:System.IdentityModel.Scope>forekomsten.</xref:System.IdentityModel.Scope>      | Egenskapen | Verdien. |   |--------------|------------|   | <xref:System.IdentityModel.Scope.AppliesToAddress%2A>| Verdien for den `appliesToAddress` parameteren. |   | <xref:System.IdentityModel.Scope.EncryptingCredentials%2A>| `null`.|   | <xref:System.IdentityModel.Scope.Properties%2A>| En tom liste. |   | <xref:System.IdentityModel.Scope.ReplyToAddress%2A>| `null`.|   | <xref:System.IdentityModel.Scope.SigningCredentials%2A>| `null`.|   | <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>| `true`.|   | <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>| `true`.|</xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A></xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A></xref:System.IdentityModel.Scope.SigningCredentials%2A></xref:System.IdentityModel.Scope.ReplyToAddress%2A></xref:System.IdentityModel.Scope.Properties%2A></xref:System.IdentityModel.Scope.EncryptingCredentials%2A></xref:System.IdentityModel.Scope.AppliesToAddress%2A>"
  syntax:
    content: public Scope (string appliesToAddress);
    parameters:
    - id: appliesToAddress
      type: System.String
      description: "AppliesTo-adressen til en beroende krever. Dette er vanligvis en URI."
  overload: System.IdentityModel.Scope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.EncryptingCredentials)
  id: '#ctor(System.String,System.IdentityModel.Tokens.EncryptingCredentials)'
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: Scope(String,EncryptingCredentials)
  nameWithType: Scope.Scope(String,EncryptingCredentials)
  fullName: System.IdentityModel.Scope.Scope(String,EncryptingCredentials)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> klasse med den angitte appliesTo-adressen og kryptering av legitimasjon."
  remarks: "Tabellen nedenfor viser første egenskapsverdiene for den nye <xref:System.IdentityModel.Scope>forekomsten.</xref:System.IdentityModel.Scope>      | Egenskapen | Verdien. |   |--------------|------------|   | <xref:System.IdentityModel.Scope.AppliesToAddress%2A>| Verdien for den `appliesToAddress` parameteren. |   | <xref:System.IdentityModel.Scope.EncryptingCredentials%2A>| `null`.|   | <xref:System.IdentityModel.Scope.Properties%2A>| En tom liste. |   | <xref:System.IdentityModel.Scope.ReplyToAddress%2A>| `null`.|   | <xref:System.IdentityModel.Scope.SigningCredentials%2A>| Verdien for den `signingCredentials` parameteren. |   | <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>| `true`.|   | <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>| `true`.|</xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A></xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A></xref:System.IdentityModel.Scope.SigningCredentials%2A></xref:System.IdentityModel.Scope.ReplyToAddress%2A></xref:System.IdentityModel.Scope.Properties%2A></xref:System.IdentityModel.Scope.EncryptingCredentials%2A></xref:System.IdentityModel.Scope.AppliesToAddress%2A>"
  syntax:
    content: public Scope (string appliesToAddress, System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);
    parameters:
    - id: appliesToAddress
      type: System.String
      description: "AppliesTo-adressen til en beroende krever. Dette er vanligvis en URI."
    - id: encryptingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "Kryptering legitimasjonen for den som part."
  overload: System.IdentityModel.Scope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)
  id: '#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)'
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: Scope(String,SigningCredentials)
  nameWithType: Scope.Scope(String,SigningCredentials)
  fullName: System.IdentityModel.Scope.Scope(String,SigningCredentials)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> klasse med den angitte appliesTo-adressen og logge legitimasjon."
  remarks: "Tabellen nedenfor viser første egenskapsverdiene for den nye <xref:System.IdentityModel.Scope>forekomsten.</xref:System.IdentityModel.Scope>      | Egenskapen | Verdien. |   |--------------|------------|   | <xref:System.IdentityModel.Scope.AppliesToAddress%2A>| Verdien for den `appliesToAddress` parameteren. |   | <xref:System.IdentityModel.Scope.EncryptingCredentials%2A>| `null`.|   | <xref:System.IdentityModel.Scope.Properties%2A>| En tom liste. |   | <xref:System.IdentityModel.Scope.ReplyToAddress%2A>| `null`.|   | <xref:System.IdentityModel.Scope.SigningCredentials%2A>| Verdien for den `signingCredentials` parameteren. |   | <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>| `true`.|   | <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>| `true`.|</xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A></xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A></xref:System.IdentityModel.Scope.SigningCredentials%2A></xref:System.IdentityModel.Scope.ReplyToAddress%2A></xref:System.IdentityModel.Scope.Properties%2A></xref:System.IdentityModel.Scope.EncryptingCredentials%2A></xref:System.IdentityModel.Scope.AppliesToAddress%2A>"
  syntax:
    content: public Scope (string appliesToAddress, System.IdentityModel.Tokens.SigningCredentials signingCredentials);
    parameters:
    - id: appliesToAddress
      type: System.String
      description: "AppliesTo-adressen til en beroende krever. Dette er vanligvis en URI."
    - id: signingCredentials
      type: System.IdentityModel.Tokens.SigningCredentials
      description: "Signering legitimasjonen for den som part."
  overload: System.IdentityModel.Scope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.IdentityModel.Tokens.EncryptingCredentials)
  id: '#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.IdentityModel.Tokens.EncryptingCredentials)'
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: Scope(String,SigningCredentials,EncryptingCredentials)
  nameWithType: Scope.Scope(String,SigningCredentials,EncryptingCredentials)
  fullName: System.IdentityModel.Scope.Scope(String,SigningCredentials,EncryptingCredentials)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> klassen med den angitte appliesTo adressen logger legitimasjonen, og kryptering av legitimasjon."
  remarks: "Tabellen nedenfor viser første egenskapsverdiene for den nye <xref:System.IdentityModel.Scope>forekomsten.</xref:System.IdentityModel.Scope>      | Egenskapen | Verdien |   |--------------|-----------|   | <xref:System.IdentityModel.Scope.AppliesToAddress%2A>| Verdien for den `appliesToAddress` parameteren. |   | <xref:System.IdentityModel.Scope.EncryptingCredentials%2A>| Verdien for den `encryptingCredentials` parameteren. |   | <xref:System.IdentityModel.Scope.Properties%2A>| En tom liste. |   | <xref:System.IdentityModel.Scope.ReplyToAddress%2A>| `null`.|   | <xref:System.IdentityModel.Scope.SigningCredentials%2A>| Verdien for den `signingCredentials` parameteren. |   | <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>| `true`.|   | <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>| `true`.|</xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A></xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A></xref:System.IdentityModel.Scope.SigningCredentials%2A></xref:System.IdentityModel.Scope.ReplyToAddress%2A></xref:System.IdentityModel.Scope.Properties%2A></xref:System.IdentityModel.Scope.EncryptingCredentials%2A></xref:System.IdentityModel.Scope.AppliesToAddress%2A>"
  syntax:
    content: public Scope (string appliesToAddress, System.IdentityModel.Tokens.SigningCredentials signingCredentials, System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);
    parameters:
    - id: appliesToAddress
      type: System.String
      description: "AppliesTo-adressen til en beroende krever. Dette er vanligvis en URI."
    - id: signingCredentials
      type: System.IdentityModel.Tokens.SigningCredentials
      description: "Signering legitimasjonen for den som part."
    - id: encryptingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "Kryptering legitimasjonen for den som part."
  overload: System.IdentityModel.Scope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.AppliesToAddress
  id: AppliesToAddress
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: AppliesToAddress
  nameWithType: Scope.AppliesToAddress
  fullName: System.IdentityModel.Scope.AppliesToAddress
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Henter eller angir appliesTo-adressen til en beroende krever."
  syntax:
    content: public virtual string AppliesToAddress { get; set; }
    return:
      type: System.String
      description: "AppliesTo-adressen til en beroende krever. Dette er vanligvis en URI."
  overload: System.IdentityModel.Scope.AppliesToAddress*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.EncryptingCredentials
  id: EncryptingCredentials
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: EncryptingCredentials
  nameWithType: Scope.EncryptingCredentials
  fullName: System.IdentityModel.Scope.EncryptingCredentials
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Henter eller angir kryptering legitimasjonen for beroende part."
  remarks: "Hvis den <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>egenskapen `true`, legitimasjonen som brukes til å kryptere utstedte sikkerhetstokener.</xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> Hvis den <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>egenskapen `true`, legitimasjonen som brukes til å kryptere symmetriske nøkler som er utstedt med sikkerhetstokener.</xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>"
  syntax:
    content: public virtual System.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials { get; set; }
    return:
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "Kryptering legitimasjonen som skal brukes for det som part."
  overload: System.IdentityModel.Scope.EncryptingCredentials*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.Properties
  id: Properties
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: Properties
  nameWithType: Scope.Properties
  fullName: System.IdentityModel.Scope.Properties
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Henter egenskaper egenskapssamling å utvide objektet."
  syntax:
    content: public virtual System.Collections.Generic.Dictionary<string,object> Properties { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "Egenskapssamling."
  overload: System.IdentityModel.Scope.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.ReplyToAddress
  id: ReplyToAddress
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: ReplyToAddress
  nameWithType: Scope.ReplyToAddress
  fullName: System.IdentityModel.Scope.ReplyToAddress
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Henter eller angir replyTo-adressen til en beroende krever."
  syntax:
    content: public virtual string ReplyToAddress { get; set; }
    return:
      type: System.String
      description: "ReplyTo-adressen til en beroende krever. Dette er vanligvis en URI."
  overload: System.IdentityModel.Scope.ReplyToAddress*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.SigningCredentials
  id: SigningCredentials
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: SigningCredentials
  nameWithType: Scope.SigningCredentials
  fullName: System.IdentityModel.Scope.SigningCredentials
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Henter eller angir signering legitimasjonen for beroende part."
  syntax:
    content: public virtual System.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; set; }
    return:
      type: System.IdentityModel.Tokens.SigningCredentials
      description: "Signering legitimasjonen som skal brukes for det som part."
  overload: System.IdentityModel.Scope.SigningCredentials*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.SymmetricKeyEncryptionRequired
  id: SymmetricKeyEncryptionRequired
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: SymmetricKeyEncryptionRequired
  nameWithType: Scope.SymmetricKeyEncryptionRequired
  fullName: System.IdentityModel.Scope.SymmetricKeyEncryptionRequired
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Henter eller angir en verdi som angir om utstedte symmetriske nøkler må være kryptert."
  remarks: "Hvis egenskapen SymmetricKeyEncryptionRequired `true`, symmetriske nøkler er kryptert ved hjelp av legitimasjonen i den <xref:System.IdentityModel.Scope.EncryptingCredentials%2A>egenskapen.</xref:System.IdentityModel.Scope.EncryptingCredentials%2A>"
  syntax:
    content: public virtual bool SymmetricKeyEncryptionRequired { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis symmetriske nøkler må være kryptert; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Scope.SymmetricKeyEncryptionRequired*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.TokenEncryptionRequired
  id: TokenEncryptionRequired
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: TokenEncryptionRequired
  nameWithType: Scope.TokenEncryptionRequired
  fullName: System.IdentityModel.Scope.TokenEncryptionRequired
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Henter eller angir en verdi som angir om utstedte sikkerhetstokener må krypteres."
  remarks: "Hvis egenskapen TokenEncryptionRequired `true`, sikkerhetstokener er kryptert ved hjelp av legitimasjonen i den <xref:System.IdentityModel.Scope.EncryptingCredentials%2A>egenskapen.</xref:System.IdentityModel.Scope.EncryptingCredentials%2A>"
  syntax:
    content: public virtual bool TokenEncryptionRequired { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis sikkerhetstokener må være kryptert; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Scope.TokenEncryptionRequired*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Scope.#ctor
  parent: System.IdentityModel.Scope
  isExternal: false
  name: Scope()
  nameWithType: Scope.Scope()
  fullName: System.IdentityModel.Scope.Scope()
- uid: System.IdentityModel.Scope.#ctor(System.String)
  parent: System.IdentityModel.Scope
  isExternal: false
  name: Scope(String)
  nameWithType: Scope.Scope(String)
  fullName: System.IdentityModel.Scope.Scope(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.EncryptingCredentials)
  parent: System.IdentityModel.Scope
  isExternal: false
  name: Scope(String,EncryptingCredentials)
  nameWithType: Scope.Scope(String,EncryptingCredentials)
  fullName: System.IdentityModel.Scope.Scope(String,EncryptingCredentials)
- uid: System.IdentityModel.Tokens.EncryptingCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: EncryptingCredentials
  nameWithType: EncryptingCredentials
  fullName: System.IdentityModel.Tokens.EncryptingCredentials
- uid: System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)
  parent: System.IdentityModel.Scope
  isExternal: false
  name: Scope(String,SigningCredentials)
  nameWithType: Scope.Scope(String,SigningCredentials)
  fullName: System.IdentityModel.Scope.Scope(String,SigningCredentials)
- uid: System.IdentityModel.Tokens.SigningCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SigningCredentials
  nameWithType: SigningCredentials
  fullName: System.IdentityModel.Tokens.SigningCredentials
- uid: System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.IdentityModel.Tokens.EncryptingCredentials)
  parent: System.IdentityModel.Scope
  isExternal: false
  name: Scope(String,SigningCredentials,EncryptingCredentials)
  nameWithType: Scope.Scope(String,SigningCredentials,EncryptingCredentials)
  fullName: System.IdentityModel.Scope.Scope(String,SigningCredentials,EncryptingCredentials)
- uid: System.IdentityModel.Scope.AppliesToAddress
  parent: System.IdentityModel.Scope
  isExternal: false
  name: AppliesToAddress
  nameWithType: Scope.AppliesToAddress
  fullName: System.IdentityModel.Scope.AppliesToAddress
- uid: System.IdentityModel.Scope.EncryptingCredentials
  parent: System.IdentityModel.Scope
  isExternal: false
  name: EncryptingCredentials
  nameWithType: Scope.EncryptingCredentials
  fullName: System.IdentityModel.Scope.EncryptingCredentials
- uid: System.IdentityModel.Scope.Properties
  parent: System.IdentityModel.Scope
  isExternal: false
  name: Properties
  nameWithType: Scope.Properties
  fullName: System.IdentityModel.Scope.Properties
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<String,Object>
  nameWithType: Dictionary<String,Object>
  fullName: System.Collections.Generic.Dictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Scope.ReplyToAddress
  parent: System.IdentityModel.Scope
  isExternal: false
  name: ReplyToAddress
  nameWithType: Scope.ReplyToAddress
  fullName: System.IdentityModel.Scope.ReplyToAddress
- uid: System.IdentityModel.Scope.SigningCredentials
  parent: System.IdentityModel.Scope
  isExternal: false
  name: SigningCredentials
  nameWithType: Scope.SigningCredentials
  fullName: System.IdentityModel.Scope.SigningCredentials
- uid: System.IdentityModel.Scope.SymmetricKeyEncryptionRequired
  parent: System.IdentityModel.Scope
  isExternal: false
  name: SymmetricKeyEncryptionRequired
  nameWithType: Scope.SymmetricKeyEncryptionRequired
  fullName: System.IdentityModel.Scope.SymmetricKeyEncryptionRequired
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Scope.TokenEncryptionRequired
  parent: System.IdentityModel.Scope
  isExternal: false
  name: TokenEncryptionRequired
  nameWithType: Scope.TokenEncryptionRequired
  fullName: System.IdentityModel.Scope.TokenEncryptionRequired
- uid: System.IdentityModel.Scope.#ctor*
  parent: System.IdentityModel.Scope
  isExternal: false
  name: Scope
  nameWithType: Scope.Scope
- uid: System.IdentityModel.Scope.AppliesToAddress*
  parent: System.IdentityModel.Scope
  isExternal: false
  name: AppliesToAddress
  nameWithType: Scope.AppliesToAddress
- uid: System.IdentityModel.Scope.EncryptingCredentials*
  parent: System.IdentityModel.Scope
  isExternal: false
  name: EncryptingCredentials
  nameWithType: Scope.EncryptingCredentials
- uid: System.IdentityModel.Scope.Properties*
  parent: System.IdentityModel.Scope
  isExternal: false
  name: Properties
  nameWithType: Scope.Properties
- uid: System.IdentityModel.Scope.ReplyToAddress*
  parent: System.IdentityModel.Scope
  isExternal: false
  name: ReplyToAddress
  nameWithType: Scope.ReplyToAddress
- uid: System.IdentityModel.Scope.SigningCredentials*
  parent: System.IdentityModel.Scope
  isExternal: false
  name: SigningCredentials
  nameWithType: Scope.SigningCredentials
- uid: System.IdentityModel.Scope.SymmetricKeyEncryptionRequired*
  parent: System.IdentityModel.Scope
  isExternal: false
  name: SymmetricKeyEncryptionRequired
  nameWithType: Scope.SymmetricKeyEncryptionRequired
- uid: System.IdentityModel.Scope.TokenEncryptionRequired*
  parent: System.IdentityModel.Scope
  isExternal: false
  name: TokenEncryptionRequired
  nameWithType: Scope.TokenEncryptionRequired
