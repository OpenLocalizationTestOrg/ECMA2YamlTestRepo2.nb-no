### YamlMime:ManagedReference
items:
- uid: System.Data.Objects.ObjectParameterCollection
  id: ObjectParameterCollection
  children:
  - System.Data.Objects.ObjectParameterCollection.Add(System.Data.Objects.ObjectParameter)
  - System.Data.Objects.ObjectParameterCollection.Clear
  - System.Data.Objects.ObjectParameterCollection.Contains(System.Data.Objects.ObjectParameter)
  - System.Data.Objects.ObjectParameterCollection.Contains(System.String)
  - System.Data.Objects.ObjectParameterCollection.CopyTo(System.Data.Objects.ObjectParameter[],System.Int32)
  - System.Data.Objects.ObjectParameterCollection.Count
  - System.Data.Objects.ObjectParameterCollection.Item(System.String)
  - System.Data.Objects.ObjectParameterCollection.Remove(System.Data.Objects.ObjectParameter)
  - System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#ICollection{System#Data#Objects#ObjectParameter}#IsReadOnly
  - System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#IEnumerable{System#Data#Objects#ObjectParameter}#GetEnumerator
  - System.Data.Objects.ObjectParameterCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: ObjectParameterCollection
  nameWithType: ObjectParameterCollection
  fullName: System.Data.Objects.ObjectParameterCollection
  type: Class
  summary: "Representerer spørringsparametere som <xref href=&quot;System.Data.Objects.ObjectParameter&quot;> </xref> objekter som er definert i en &lt;xref:System.Data.Objects.ObjectQuery%601&gt;."
  remarks: "Representerer spørringsparameterne som <xref:System.Data.Objects.ObjectParameter>objekter som er definert i en <xref:System.Data.Objects.ObjectQuery%601>.</xref:System.Data.Objects.ObjectQuery%601> </xref:System.Data.Objects.ObjectParameter>       Denne klassen kan ikke arves.       Parameterne som sendes til spørreverktøymetoder aggregeres fra etterfølgende forekomster av en <xref:System.Data.Objects.ObjectQuery%601>i sekvensen.</xref:System.Data.Objects.ObjectQuery%601> De kan nås ved hjelp av <xref:System.Data.Objects.ObjectQuery.Parameters%2A>egenskap, som returnerer ObjectParameterCollection.</xref:System.Data.Objects.ObjectQuery.Parameters%2A> Når du har blitt lagt til parametere, de kan fjernes fra samlingen og samlingen kan tømmes, så lenge spørringen ikke er kompilert eller utføres. Parameternavn kan ikke endres, men verdier kan endres når som helst.       Parametere må være unike i ObjectParameterCollection. Kan ikke to parametere i samlingen med samme navn.       Når du bruker metodene, slik som <xref:System.Data.Objects.ObjectQuery%601.Union%2A>, <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A>, <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A>og <xref:System.Data.Objects.ObjectQuery%601.Except%2A>, parameterne er slått sammen.</xref:System.Data.Objects.ObjectQuery%601.Except%2A> </xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> </xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> </xref:System.Data.Objects.ObjectQuery%601.Union%2A> Et unntak under settene parametere som er kompatibel eller. Hvis du vil ha mer informasjon, se [Spørreverktøymetoder](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0)."
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example adds new parameters to the collection and gets the count of the parameters in the collection. Then it iterates through the ObjectParameterCollection and displays the name, type, and value of each parameter in the collection.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectparametercollection_count_add_indexer)]\n [!code-cs[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectparametercollection_count_add_indexer)]"
  syntax:
    content: 'public sealed class ObjectParameterCollection : System.Collections.Generic.ICollection<System.Data.Objects.ObjectParameter>, System.Collections.Generic.IEnumerable<System.Data.Objects.ObjectParameter>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<System.Data.Objects.ObjectParameter>
  - System.Collections.Generic.IEnumerable<System.Data.Objects.ObjectParameter>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectParameterCollection.Add(System.Data.Objects.ObjectParameter)
  id: Add(System.Data.Objects.ObjectParameter)
  parent: System.Data.Objects.ObjectParameterCollection
  langs:
  - csharp
  name: Add(ObjectParameter)
  nameWithType: ObjectParameterCollection.Add(ObjectParameter)
  fullName: System.Data.Objects.ObjectParameterCollection.Add(ObjectParameter)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Legger til den angitte <xref href=&quot;System.Data.Objects.ObjectParameter&quot;> </xref> i samlingen."
  remarks: "Når du har blitt lagt til parametere, de kan fjernes fra samlingen og samlingen kan tømmes, så lenge spørringen ikke er kompilert eller utføres. Parameternavn kan ikke endres, men verdier kan endres når som helst.       Parametere må være unike i <xref:System.Data.Objects.ObjectParameterCollection>.</xref:System.Data.Objects.ObjectParameterCollection> Kan ikke to parametere i samlingen med samme navn. Hvis du vil ha mer informasjon, se [Spørreverktøymetoder](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0)."
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example adds new parameters to the collection. It iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectparametercollection_count_add_indexer)]\n [!code-cs[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectparametercollection_count_add_indexer)]"
  syntax:
    content: public void Add (System.Data.Objects.ObjectParameter parameter);
    parameters:
    - id: parameter
      type: System.Data.Objects.ObjectParameter
      description: "Parameteren til å legge til i samlingen."
  overload: System.Data.Objects.ObjectParameterCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The<code> parameter</code> argument is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> parameter </code> argumentet finnes allerede i samlingen. Dette er forskjellig fra de fleste samlinger som tillater duplikatoppføringer.       - eller - en annen parameter med samme navn som den <code> parameter </code> argumentet finnes allerede i samlingen. Legg merke til at oppslaget skiller ikke mellom. Dette er forskjellig fra de fleste samlinger, og er mer som <xref:System.Collections.Generic.Dictionary>.</xref:System.Collections.Generic.Dictionary>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Typen for den <code> parameter </code> er ikke gyldig."
  platform:
  - net462
- uid: System.Data.Objects.ObjectParameterCollection.Clear
  id: Clear
  parent: System.Data.Objects.ObjectParameterCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ObjectParameterCollection.Clear()
  fullName: System.Data.Objects.ObjectParameterCollection.Clear()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Sletter alle <xref href=&quot;System.Data.Objects.ObjectParameter&quot;> </xref> forekomster fra samlingen."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Data.Objects.ObjectParameterCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectParameterCollection.Contains(System.Data.Objects.ObjectParameter)
  id: Contains(System.Data.Objects.ObjectParameter)
  parent: System.Data.Objects.ObjectParameterCollection
  langs:
  - csharp
  name: Contains(ObjectParameter)
  nameWithType: ObjectParameterCollection.Contains(ObjectParameter)
  fullName: System.Data.Objects.ObjectParameterCollection.Contains(ObjectParameter)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Søker etter et angitt <xref href=&quot;System.Data.Objects.ObjectParameter&quot;> </xref> i samlingen av referanse."
  remarks: "Dette er en referanse kodebasert sjekk. Det vil si hvis en <xref:System.Data.Objects.ObjectParameter>er angitt som inneholder det samme navnet som en parameter-objektet i samlingen, denne metoden tilbakestiller bare `true` hvis den er det samme objektet.</xref:System.Data.Objects.ObjectParameter>"
  syntax:
    content: public bool Contains (System.Data.Objects.ObjectParameter parameter);
    parameters:
    - id: parameter
      type: System.Data.Objects.ObjectParameter
      description: "Den <xref href=&quot;System.Data.Objects.ObjectParameter&quot;> </xref> skal finnes i samlingen."
    return:
      type: System.Boolean
      description: "Returnerer <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Hvis parameter-objektet ble funnet i samlingen; ellers, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Objects.ObjectParameterCollection.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>parameter</code> argument is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Data.Objects.ObjectParameterCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.Objects.ObjectParameterCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: ObjectParameterCollection.Contains(String)
  fullName: System.Data.Objects.ObjectParameterCollection.Contains(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Bestemmer om en <xref href=&quot;System.Data.Objects.ObjectParameter&quot;> </xref> med det angitte navnet finnes i samlingen."
  remarks: ''
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example uses the <xref:System.Data.Objects.ObjectParameterCollection.Contains%2A> method to determine whether the specified parameter is in the collection.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_StringArg](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectparametercollection_stringarg)]\n [!code-cs[DP ObjectServices Concepts#ObjectParameterCollection_StringArg](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectparametercollection_stringarg)]"
  syntax:
    content: public bool Contains (string name);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på parameteren skal søkes etter i samlingen. Dette navnet må ikke samtidig inneholde den &quot;@&quot; parameteren indikatoren som brukes i den [!INCLUDE[esql](~/add/includes/ajax-current-ext-md.md)] setninger det faktiske navnet."
    return:
      type: System.Boolean
      description: "Returnerer <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Hvis en parameter med det angitte navnet ble funnet i samlingen; ellers, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Objects.ObjectParameterCollection.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Data.Objects.ObjectParameterCollection.CopyTo(System.Data.Objects.ObjectParameter[],System.Int32)
  id: CopyTo(System.Data.Objects.ObjectParameter[],System.Int32)
  parent: System.Data.Objects.ObjectParameterCollection
  langs:
  - csharp
  name: CopyTo(ObjectParameter[],Int32)
  nameWithType: ObjectParameterCollection.CopyTo(ObjectParameter[],Int32)
  fullName: System.Data.Objects.ObjectParameterCollection.CopyTo(ObjectParameter[],Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Tillater at parameterne i objektsamlingen som skal kopieres til en angitt matrise som begynner med objektet i den angitte indeksen."
  remarks: ''
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example copies the parameters into the specified array.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_CopyTo](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectparametercollection_copyto)]\n [!code-cs[DP ObjectServices Concepts#ObjectParameterCollection_CopyTo](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectparametercollection_copyto)]"
  syntax:
    content: public void CopyTo (System.Data.Objects.ObjectParameter[] array, int index);
    parameters:
    - id: array
      type: System.Data.Objects.ObjectParameter[]
      description: "Matrisen som skal kopieres parameterne."
    - id: index
      type: System.Int32
      description: "Indeksen i matrisen vil starte kopiering av parameterne."
  overload: System.Data.Objects.ObjectParameterCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectParameterCollection.Count
  id: Count
  parent: System.Data.Objects.ObjectParameterCollection
  langs:
  - csharp
  name: Count
  nameWithType: ObjectParameterCollection.Count
  fullName: System.Data.Objects.ObjectParameterCollection.Count
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Henter antall parametere for øyeblikket i samlingen."
  remarks: ''
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example adds new parameters to the collection and gets the count of the parameters in the collection. Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectparametercollection_count_add_indexer)]\n [!code-cs[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectparametercollection_count_add_indexer)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Antall <xref href=&quot;System.Data.Objects.ObjectParameter&quot;> </xref> objekter som finnes i samlingen."
  overload: System.Data.Objects.ObjectParameterCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectParameterCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.Objects.ObjectParameterCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: ObjectParameterCollection.Item(String)
  fullName: System.Data.Objects.ObjectParameterCollection.Item(String)
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Inneholder en indekserer som gjør det mulig for brukere å hente parametere med navn."
  syntax:
    content: public System.Data.Objects.ObjectParameter this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "Navnet på parameteren til å søke etter. Dette navnet må ikke samtidig inneholde den &quot;@&quot; parameteren indikatoren som brukes i den [!INCLUDE[esql](~/add/includes/ajax-current-ext-md.md)] setninger det faktiske navnet."
    return:
      type: System.Data.Objects.ObjectParameter
      description: "Den <xref href=&quot;System.Data.Objects.ObjectParameter&quot;> </xref> forekomsten."
  overload: System.Data.Objects.ObjectParameterCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Ingen parameter med det angitte navnet finnes i samlingen."
  platform:
  - net462
- uid: System.Data.Objects.ObjectParameterCollection.Remove(System.Data.Objects.ObjectParameter)
  id: Remove(System.Data.Objects.ObjectParameter)
  parent: System.Data.Objects.ObjectParameterCollection
  langs:
  - csharp
  name: Remove(ObjectParameter)
  nameWithType: ObjectParameterCollection.Remove(ObjectParameter)
  fullName: System.Data.Objects.ObjectParameterCollection.Remove(ObjectParameter)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Fjerner en forekomst av en <xref href=&quot;System.Data.Objects.ObjectParameter&quot;> </xref> fra samlingen av referanse hvis den finnes i samlingen."
  remarks: "Dette er en referanse kodebasert sammenligning. Det vil si hvis et spørringsobjekt parameter er angitt som inneholder det samme navnet som en parameter-objektet i samlingen, fjernes parameteren i samlingen bare hvis den er det samme objektet. Hvis du vil fjerne et objekt med navnet, først Bruk indekserer til å hente parameterforekomsten, og fjerner den ved hjelp av denne metoden."
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example adds two parameters to the collection and then removes the parameters.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Remove](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectparametercollection_remove)]\n [!code-cs[DP ObjectServices Concepts#ObjectParameterCollection_Remove](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectparametercollection_remove)]"
  syntax:
    content: public bool Remove (System.Data.Objects.ObjectParameter parameter);
    parameters:
    - id: parameter
      type: System.Data.Objects.ObjectParameter
      description: "Et objekt som skal fjernes fra samlingen."
    return:
      type: System.Boolean
      description: "Returnerer <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Hvis parameter-objektet ble funnet og fjernes fra samlingen; ellers, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Objects.ObjectParameterCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>parameter</code> argument is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#ICollection{System#Data#Objects#ObjectParameter}#IsReadOnly
  id: System#Collections#Generic#ICollection{System#Data#Objects#ObjectParameter}#IsReadOnly
  isEii: true
  parent: System.Data.Objects.ObjectParameterCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection
  nameWithType: ObjectParameterCollection.System.Collections.Generic.ICollection
  fullName: System.Data.Objects.ObjectParameterCollection.System.Collections.Generic.ICollection
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  syntax:
    content: bool System.Collections.Generic.ICollection<System.Data.Objects.ObjectParameter>.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Som skal legges til."
  overload: System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#ICollection<System#Data#Objects#ObjectParameter>#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#IEnumerable{System#Data#Objects#ObjectParameter}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Data#Objects#ObjectParameter}#GetEnumerator
  isEii: true
  parent: System.Data.Objects.ObjectParameterCollection
  langs:
  - csharp
  name: System.Collections.Generic.IEnumerable()
  nameWithType: ObjectParameterCollection.System.Collections.Generic.IEnumerable()
  fullName: System.Data.Objects.ObjectParameterCollection.System.Collections.Generic.IEnumerable()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  syntax:
    content: System.Collections.Generic.IEnumerator<System.Data.Objects.ObjectParameter> IEnumerable<ObjectParameter>.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Data.Objects.ObjectParameter}
      description: "Som skal legges til."
  overload: System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#IEnumerable<System#Data#Objects#ObjectParameter>#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectParameterCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Data.Objects.ObjectParameterCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ObjectParameterCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Data.Objects.ObjectParameterCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Returnerer en ikke-typeangitt opplisting over innsamlingen."
  remarks: "Returnerer en ikke-typeangitt opplisting over innsamlingen. Dette gjør at samlingen iterated gjennom og traversert."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "En <xref:System.Collections.IEnumerator>forekomsten.</xref:System.Collections.IEnumerator>"
  overload: System.Data.Objects.ObjectParameterCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Data.Objects.ObjectParameterCollection.Add(System.Data.Objects.ObjectParameter)
  parent: System.Data.Objects.ObjectParameterCollection
  isExternal: false
  name: Add(ObjectParameter)
  nameWithType: ObjectParameterCollection.Add(ObjectParameter)
  fullName: System.Data.Objects.ObjectParameterCollection.Add(ObjectParameter)
- uid: System.Data.Objects.ObjectParameter
  parent: System.Data.Objects
  isExternal: false
  name: ObjectParameter
  nameWithType: ObjectParameter
  fullName: System.Data.Objects.ObjectParameter
- uid: System.Data.Objects.ObjectParameterCollection.Clear
  parent: System.Data.Objects.ObjectParameterCollection
  isExternal: false
  name: Clear()
  nameWithType: ObjectParameterCollection.Clear()
  fullName: System.Data.Objects.ObjectParameterCollection.Clear()
- uid: System.Data.Objects.ObjectParameterCollection.Contains(System.Data.Objects.ObjectParameter)
  parent: System.Data.Objects.ObjectParameterCollection
  isExternal: false
  name: Contains(ObjectParameter)
  nameWithType: ObjectParameterCollection.Contains(ObjectParameter)
  fullName: System.Data.Objects.ObjectParameterCollection.Contains(ObjectParameter)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Objects.ObjectParameterCollection.Contains(System.String)
  parent: System.Data.Objects.ObjectParameterCollection
  isExternal: false
  name: Contains(String)
  nameWithType: ObjectParameterCollection.Contains(String)
  fullName: System.Data.Objects.ObjectParameterCollection.Contains(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.ObjectParameterCollection.CopyTo(System.Data.Objects.ObjectParameter[],System.Int32)
  parent: System.Data.Objects.ObjectParameterCollection
  isExternal: false
  name: CopyTo(ObjectParameter[],Int32)
  nameWithType: ObjectParameterCollection.CopyTo(ObjectParameter[],Int32)
  fullName: System.Data.Objects.ObjectParameterCollection.CopyTo(ObjectParameter[],Int32)
- uid: System.Data.Objects.ObjectParameter[]
  parent: System.Data.Objects
  isExternal: false
  name: ObjectParameter
  nameWithType: ObjectParameter
  fullName: System.Data.Objects.ObjectParameter[]
  spec.csharp:
  - uid: System.Data.Objects.ObjectParameter
    name: ObjectParameter
    nameWithType: ObjectParameter
    fullName: ObjectParameter[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Objects.ObjectParameterCollection.Count
  parent: System.Data.Objects.ObjectParameterCollection
  isExternal: false
  name: Count
  nameWithType: ObjectParameterCollection.Count
  fullName: System.Data.Objects.ObjectParameterCollection.Count
- uid: System.Data.Objects.ObjectParameterCollection.Item(System.String)
  parent: System.Data.Objects.ObjectParameterCollection
  isExternal: false
  name: Item(String)
  nameWithType: ObjectParameterCollection.Item(String)
  fullName: System.Data.Objects.ObjectParameterCollection.Item(String)
- uid: System.Data.Objects.ObjectParameterCollection.Remove(System.Data.Objects.ObjectParameter)
  parent: System.Data.Objects.ObjectParameterCollection
  isExternal: false
  name: Remove(ObjectParameter)
  nameWithType: ObjectParameterCollection.Remove(ObjectParameter)
  fullName: System.Data.Objects.ObjectParameterCollection.Remove(ObjectParameter)
- uid: System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#ICollection{System#Data#Objects#ObjectParameter}#IsReadOnly
  parent: System.Data.Objects.ObjectParameterCollection
  isExternal: false
  name: System.Collections.Generic.ICollection
  nameWithType: ObjectParameterCollection.System.Collections.Generic.ICollection
  fullName: System.Data.Objects.ObjectParameterCollection.System.Collections.Generic.ICollection
- uid: System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#IEnumerable{System#Data#Objects#ObjectParameter}#GetEnumerator
  parent: System.Data.Objects.ObjectParameterCollection
  isExternal: false
  name: System.Collections.Generic.IEnumerable()
  nameWithType: ObjectParameterCollection.System.Collections.Generic.IEnumerable()
  fullName: System.Data.Objects.ObjectParameterCollection.System.Collections.Generic.IEnumerable()
- uid: System.Collections.Generic.IEnumerator{System.Data.Objects.ObjectParameter}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<ObjectParameter>
  nameWithType: IEnumerator<ObjectParameter>
  fullName: System.Collections.Generic.IEnumerator<System.Data.Objects.ObjectParameter>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Data.Objects.ObjectParameter>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Objects.ObjectParameter
    name: ObjectParameter
    nameWithType: ObjectParameter
    fullName: ObjectParameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.ObjectParameterCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Data.Objects.ObjectParameterCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ObjectParameterCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Data.Objects.ObjectParameterCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Objects.ObjectParameterCollection.Add*
  parent: System.Data.Objects.ObjectParameterCollection
  isExternal: false
  name: Add
  nameWithType: ObjectParameterCollection.Add
- uid: System.Data.Objects.ObjectParameterCollection.Clear*
  parent: System.Data.Objects.ObjectParameterCollection
  isExternal: false
  name: Clear
  nameWithType: ObjectParameterCollection.Clear
- uid: System.Data.Objects.ObjectParameterCollection.Contains*
  parent: System.Data.Objects.ObjectParameterCollection
  isExternal: false
  name: Contains
  nameWithType: ObjectParameterCollection.Contains
- uid: System.Data.Objects.ObjectParameterCollection.CopyTo*
  parent: System.Data.Objects.ObjectParameterCollection
  isExternal: false
  name: CopyTo
  nameWithType: ObjectParameterCollection.CopyTo
- uid: System.Data.Objects.ObjectParameterCollection.Count*
  parent: System.Data.Objects.ObjectParameterCollection
  isExternal: false
  name: Count
  nameWithType: ObjectParameterCollection.Count
- uid: System.Data.Objects.ObjectParameterCollection.Item*
  parent: System.Data.Objects.ObjectParameterCollection
  isExternal: false
  name: Item
  nameWithType: ObjectParameterCollection.Item
- uid: System.Data.Objects.ObjectParameterCollection.Remove*
  parent: System.Data.Objects.ObjectParameterCollection
  isExternal: false
  name: Remove
  nameWithType: ObjectParameterCollection.Remove
- uid: System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#ICollection<System#Data#Objects#ObjectParameter>#IsReadOnly*
  parent: System.Data.Objects.ObjectParameterCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Data.Objects.ObjectParameter>.IsReadOnly
  nameWithType: ObjectParameterCollection.System.Collections.Generic.ICollection<System.Data.Objects.ObjectParameter>.IsReadOnly
- uid: System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#IEnumerable<System#Data#Objects#ObjectParameter>#GetEnumerator*
  parent: System.Data.Objects.ObjectParameterCollection
  isExternal: false
  name: System.Collections.Generic.IEnumerable<System.Data.Objects.ObjectParameter>.GetEnumerator
  nameWithType: ObjectParameterCollection.System.Collections.Generic.IEnumerable<System.Data.Objects.ObjectParameter>.GetEnumerator
- uid: System.Data.Objects.ObjectParameterCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Data.Objects.ObjectParameterCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ObjectParameterCollection.System.Collections.IEnumerable.GetEnumerator
