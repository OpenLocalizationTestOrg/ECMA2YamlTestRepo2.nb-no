### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.EncryptedKey
  id: EncryptedKey
  children:
  - System.Security.Cryptography.Xml.EncryptedKey.#ctor
  - System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.DataReference)
  - System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.KeyReference)
  - System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName
  - System.Security.Cryptography.Xml.EncryptedKey.GetXml
  - System.Security.Cryptography.Xml.EncryptedKey.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.EncryptedKey.Recipient
  - System.Security.Cryptography.Xml.EncryptedKey.ReferenceList
  langs:
  - csharp
  name: EncryptedKey
  nameWithType: EncryptedKey
  fullName: System.Security.Cryptography.Xml.EncryptedKey
  type: Class
  summary: "Representerer den <xref uid=&quot;langword_csharp_&lt;EncryptedKey&gt;&quot; name=&quot;&lt;EncryptedKey&gt;&quot; href=&quot;&quot;> </xref> element i XML-kryptering. Denne klassen kan ikke arves."
  remarks: "Denne klassen representerer den `<EncryptedKey>` element i XML-kryptering. Den `<EncryptedKey>` elementet brukes til å sende krypteringsnøkler. Det kan opprettes i en frittstående XML-dokumentet, plasseres i en applikasjon dokumentet, eller være i en `<EncryptedData>` elementet som en underordnet av en `<KeyInfo>` elementet. Nøkkelverdien krypteres alltid til mottakeren. Når `<EncryptedKey>` er dekrypteres, nøkkelen gjøres tilgjengelig for den `<EncryptionMethod>` algoritmen uten noen ytterligere behandling.       Den `<EncryptedKey>` elementet er lik den `<EncryptedData>` element av den <xref:System.Security.Cryptography.Xml.EncryptedData>klasse bortsett fra at data som er kryptert er alltid nøkkelverdien.</xref:System.Security.Cryptography.Xml.EncryptedData>"
  example:
  - "The following example illustrates how to encrypt and decrypt an XML element by using the EncryptedKey class. This example then displays the values of various properties of the EncryptedKey class to the console.  \n  \n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/t-system.security.crypto_46_1.cs)]\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/t-system.security.crypto_46_1.vb)]"
  syntax:
    content: 'public sealed class EncryptedKey : System.Security.Cryptography.Xml.EncryptedType'
  inheritance:
  - System.Object
  - System.Security.Cryptography.Xml.EncryptedType
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)
  - System.Security.Cryptography.Xml.EncryptedType.CipherData
  - System.Security.Cryptography.Xml.EncryptedType.Encoding
  - System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod
  - System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties
  - System.Security.Cryptography.Xml.EncryptedType.Id
  - System.Security.Cryptography.Xml.EncryptedType.KeyInfo
  - System.Security.Cryptography.Xml.EncryptedType.MimeType
  - System.Security.Cryptography.Xml.EncryptedType.Type
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: EncryptedKey()
  nameWithType: EncryptedKey.EncryptedKey()
  fullName: System.Security.Cryptography.Xml.EncryptedKey.EncryptedKey()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.Xml.EncryptedKey&quot;> </xref> klasse."
  remarks: "Denne konstruktøren oppretter en ny forekomst av <xref:System.Security.Cryptography.Xml.EncryptedKey>klassen.</xref:System.Security.Cryptography.Xml.EncryptedKey> For mer informasjon om XML-krypteringsstandarder, kan du se XML-kryptering syntaksen og all behandling dokumentet på http://www.w3.org/TR/xmlenc-core/."
  example:
  - "The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.  \n  \n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/m-system.security.crypto_82_1.cs)]\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_82_1.vb)]"
  syntax:
    content: public EncryptedKey ();
    parameters: []
  overload: System.Security.Cryptography.Xml.EncryptedKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.DataReference)
  id: AddReference(System.Security.Cryptography.Xml.DataReference)
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: AddReference(DataReference)
  nameWithType: EncryptedKey.AddReference(DataReference)
  fullName: System.Security.Cryptography.Xml.EncryptedKey.AddReference(DataReference)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Legger til en <xref uid=&quot;langword_csharp_&lt;DataReference&gt; &quot; name=&quot;&lt;DataReference&gt; &quot; href=&quot;&quot;> </xref>elementet som den <xref uid=&quot;langword_csharp_&lt;ReferenceList&gt;&quot; name=&quot;&lt;ReferenceList&gt;&quot; href=&quot;&quot;> </xref> elementet."
  remarks: "Denne metoden legger til en <xref:System.Security.Cryptography.Xml.DataReference>objekt i <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A>-egenskapen for den <xref:System.Security.Cryptography.Xml.EncryptedKey>objektet.</xref:System.Security.Cryptography.Xml.EncryptedKey> </xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A> </xref:System.Security.Cryptography.Xml.DataReference> Den `<DataReference>` elementet peker til krypterte data som ble kryptert ved hjelp av nøkkelen som er angitt i den `<EncryptedKey>` elementet."
  syntax:
    content: public void AddReference (System.Security.Cryptography.Xml.DataReference dataReference);
    parameters:
    - id: dataReference
      type: System.Security.Cryptography.Xml.DataReference
      description: "En <xref href=&quot;System.Security.Cryptography.Xml.DataReference&quot;> </xref> objektet til å legge til den <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*>egenskapen.</xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*>"
  overload: System.Security.Cryptography.Xml.EncryptedKey.AddReference*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.KeyReference)
  id: AddReference(System.Security.Cryptography.Xml.KeyReference)
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: AddReference(KeyReference)
  nameWithType: EncryptedKey.AddReference(KeyReference)
  fullName: System.Security.Cryptography.Xml.EncryptedKey.AddReference(KeyReference)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Legger til en <xref uid=&quot;langword_csharp_&lt;KeyReference&gt; &quot; name=&quot;&lt;KeyReference&gt; &quot; href=&quot;&quot;> </xref>elementet som den <xref uid=&quot;langword_csharp_&lt;ReferenceList&gt;&quot; name=&quot;&lt;ReferenceList&gt;&quot; href=&quot;&quot;> </xref> elementet."
  remarks: "Denne metoden legger til en <xref:System.Security.Cryptography.Xml.KeyReference>objekt i <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A>-egenskapen til det <xref:System.Security.Cryptography.Xml.EncryptedKey>objektet.</xref:System.Security.Cryptography.Xml.EncryptedKey> </xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A> </xref:System.Security.Cryptography.Xml.KeyReference> Den `<KeyReference>` elementet peker til en kryptert nøkkel som ble kryptert ved hjelp av nøkkelen som er angitt i den `<EncryptedKey>` elementet."
  syntax:
    content: public void AddReference (System.Security.Cryptography.Xml.KeyReference keyReference);
    parameters:
    - id: keyReference
      type: System.Security.Cryptography.Xml.KeyReference
      description: "En <xref href=&quot;System.Security.Cryptography.Xml.KeyReference&quot;> </xref> objektet til å legge til den <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*>egenskapen.</xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*>"
  overload: System.Security.Cryptography.Xml.EncryptedKey.AddReference*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName
  id: CarriedKeyName
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: CarriedKeyName
  nameWithType: EncryptedKey.CarriedKeyName
  fullName: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Henter eller angir den valgfrie <xref uid=&quot;langword_csharp_&lt;CarriedKeyName&gt;&quot; name=&quot;&lt;CarriedKeyName&gt;&quot; href=&quot;&quot;> </xref> element i XML-kryptering."
  remarks: "Den `<CarriedKeyName>` elementet er et valgfritt element som knytter lesbare navn nøkkelverdien. Dette navnet kan deretter brukes til å referere til nøkkelen bruker den `<KeyName>` elementet i den `<KeyInfo>` elementet. Den samme `<CarriedKeyName>` elementverdi, i motsetning til ID-verdien, kan oppstå flere ganger i et enkelt dokument. Verdien for nøkkelen må være lik i alle `<EncryptedKey>` elementer med samme `<CarriedKeyName>` navnet i et XML-dokument. Legg merke til at fordi mellomrom betydelige i verdien for den `<KeyName>` elementet mellomrom er også viktig i verdien for den `<CarriedKeyName>` elementet."
  example:
  - "The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.  \n  \n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/p-system.security.crypto_109_1.cs)]\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/p-system.security.crypto_109_1.vb)]"
  syntax:
    content: public string CarriedKeyName { get; set; }
    return:
      type: System.String
      description: "En streng som representerer et navn for nøkkelverdien."
  overload: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: GetXml()
  nameWithType: EncryptedKey.GetXml()
  fullName: System.Security.Cryptography.Xml.EncryptedKey.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Returnerer XML-representasjon av den <xref href=&quot;System.Security.Cryptography.Xml.EncryptedKey&quot;> </xref> objektet."
  remarks: "Bruk denne metoden til å sende den `<EncryptedKey>` element i XML."
  syntax:
    content: public override System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "En <xref href=&quot;System.Xml.XmlElement&quot;> </xref> som representerer den <xref uid=&quot;langword_csharp_&lt;EncryptedKey&gt;&quot; name=&quot;&lt;EncryptedKey&gt;&quot; href=&quot;&quot;> </xref> element i XML-kryptering."
  overload: System.Security.Cryptography.Xml.EncryptedKey.GetXml*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <xref href=&quot;System.Security.Cryptography.Xml.EncryptedKey&quot;></xref> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: EncryptedKey.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.EncryptedKey.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Laster inn den angitte XML-informasjonen til den <xref uid=&quot;langword_csharp_&lt;EncryptedKey&gt;&quot; name=&quot;&lt;EncryptedKey&gt;&quot; href=&quot;&quot;> </xref> element i XML-kryptering."
  remarks: "Bruk denne metoden til å laste inn en eksisterende XML-elementet i den `<EncryptedKey>` elementet representert av den <xref:System.Security.Cryptography.Xml.EncryptedData>objektet.</xref:System.Security.Cryptography.Xml.EncryptedData>"
  example:
  - "The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.  \n  \n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/m-system.security.crypto_79_1.cs)]\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_79_1.vb)]"
  syntax:
    content: public override void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "En <xref href=&quot;System.Xml.XmlElement&quot;> </xref> som representerer en XML-elementet skal brukes for det <xref uid=&quot;langword_csharp_&lt;EncryptedKey&gt;&quot; name=&quot;&lt;EncryptedKey&gt;&quot; href=&quot;&quot;> </xref> elementet."
  overload: System.Security.Cryptography.Xml.EncryptedKey.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Den <code> value </code> parameteren inneholder ikke en <xref href=&quot;System.Security.Cryptography.Xml.CipherData&quot;> </xref> elementet."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.Recipient
  id: Recipient
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: Recipient
  nameWithType: EncryptedKey.Recipient
  fullName: System.Security.Cryptography.Xml.EncryptedKey.Recipient
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Henter eller angir den valgfrie <xref uid=&quot;langword_csharp_Recipient&quot; name=&quot;Recipient&quot; href=&quot;&quot;> </xref> attributtet i XML-kryptering."
  remarks: "Den `<Recipient>` valgfrie attributtet som inneholder informasjon om hvilke mottaker denne krypterte nøkkelverdien er ment for. Innholdet er programmer som er avhengig."
  example:
  - "The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.  \n  \n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/p-system.security.crypto_92_1.cs)]\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/p-system.security.crypto_92_1.vb)]"
  syntax:
    content: public string Recipient { get; set; }
    return:
      type: System.String
      description: "En streng som representerer verdien for den <xref uid=&quot;langword_csharp_Recipient&quot; name=&quot;Recipient&quot; href=&quot;&quot;> </xref> attributtet."
  overload: System.Security.Cryptography.Xml.EncryptedKey.Recipient*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList
  id: ReferenceList
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: ReferenceList
  nameWithType: EncryptedKey.ReferenceList
  fullName: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Henter eller angir den <xref uid=&quot;langword_csharp_&lt;ReferenceList&gt;&quot; name=&quot;&lt;ReferenceList&gt;&quot; href=&quot;&quot;> </xref> element i XML-kryptering."
  remarks: "Den `<ReferenceList>` elementet er et valgfritt element som inneholder pekere til data og nøkler som er kryptert ved hjelp av denne nøkkelen. Referanselisten kan inneholde flere referanser til den `<EncryptedKey>`og `<EncryptedData>` elementer ved hjelp av den `<KeyReference>` og `<DataReference>` elementer henholdsvis."
  example:
  - "The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.  \n  \n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/p-system.security.crypto_50_1.cs)]\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/p-system.security.crypto_50_1.vb)]"
  syntax:
    content: public System.Security.Cryptography.Xml.ReferenceList ReferenceList { get; }
    return:
      type: System.Security.Cryptography.Xml.ReferenceList
      description: "A <xref href=&quot;System.Security.Cryptography.Xml.ReferenceList&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: System.Security.Cryptography.Xml.EncryptedType
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.Xml.EncryptedKey.#ctor
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: EncryptedKey()
  nameWithType: EncryptedKey.EncryptedKey()
  fullName: System.Security.Cryptography.Xml.EncryptedKey.EncryptedKey()
- uid: System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.DataReference)
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: AddReference(DataReference)
  nameWithType: EncryptedKey.AddReference(DataReference)
  fullName: System.Security.Cryptography.Xml.EncryptedKey.AddReference(DataReference)
- uid: System.Security.Cryptography.Xml.DataReference
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: DataReference
  nameWithType: DataReference
  fullName: System.Security.Cryptography.Xml.DataReference
- uid: System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.KeyReference)
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: AddReference(KeyReference)
  nameWithType: EncryptedKey.AddReference(KeyReference)
  fullName: System.Security.Cryptography.Xml.EncryptedKey.AddReference(KeyReference)
- uid: System.Security.Cryptography.Xml.KeyReference
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: KeyReference
  nameWithType: KeyReference
  fullName: System.Security.Cryptography.Xml.KeyReference
- uid: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: CarriedKeyName
  nameWithType: EncryptedKey.CarriedKeyName
  fullName: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.EncryptedKey.GetXml
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: GetXml()
  nameWithType: EncryptedKey.GetXml()
  fullName: System.Security.Cryptography.Xml.EncryptedKey.GetXml()
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.EncryptedKey.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: EncryptedKey.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.EncryptedKey.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.EncryptedKey.Recipient
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: Recipient
  nameWithType: EncryptedKey.Recipient
  fullName: System.Security.Cryptography.Xml.EncryptedKey.Recipient
- uid: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: ReferenceList
  nameWithType: EncryptedKey.ReferenceList
  fullName: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList
- uid: System.Security.Cryptography.Xml.ReferenceList
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: ReferenceList
  nameWithType: ReferenceList
  fullName: System.Security.Cryptography.Xml.ReferenceList
- uid: System.Security.Cryptography.Xml.EncryptedKey.#ctor*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: EncryptedKey
  nameWithType: EncryptedKey.EncryptedKey
- uid: System.Security.Cryptography.Xml.EncryptedKey.AddReference*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: AddReference
  nameWithType: EncryptedKey.AddReference
- uid: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: CarriedKeyName
  nameWithType: EncryptedKey.CarriedKeyName
- uid: System.Security.Cryptography.Xml.EncryptedKey.GetXml*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: GetXml
  nameWithType: EncryptedKey.GetXml
- uid: System.Security.Cryptography.Xml.EncryptedKey.LoadXml*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: LoadXml
  nameWithType: EncryptedKey.LoadXml
- uid: System.Security.Cryptography.Xml.EncryptedKey.Recipient*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: Recipient
  nameWithType: EncryptedKey.Recipient
- uid: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: ReferenceList
  nameWithType: EncryptedKey.ReferenceList
