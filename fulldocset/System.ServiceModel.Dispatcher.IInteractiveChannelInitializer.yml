### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  id: IInteractiveChannelInitializer
  children:
  - System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)
  - System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)
  langs:
  - csharp
  name: IInteractiveChannelInitializer
  nameWithType: IInteractiveChannelInitializer
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  type: Interface
  summary: "Definerer metoder som gjør at et klientprogram til å vise et brukergrensesnitt for å samle inn identitetsinformasjon før oppretting av kanalen."
  remarks: "Implementere grensesnittet IInteractiveChannelInitializer for å aktivere et klientprogram til å vise et brukergrensesnitt som lar brukeren for applikasjonen Opprett eller velg legitimasjon før du åpner en kanal.       For å implementere IInteractiveChannelInitializer, kan du utføre følgende i <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=fullName>: 1.</xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=fullName>  Spør brukeren og skaffe en passende <xref:System.Net.NetworkCredential?displayProperty=fullName>.</xref:System.Net.NetworkCredential?displayProperty=fullName>      2.  Legg til en egendefinert kanal parameter-objektet i samlingen ble returnert av <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName>metoden på <xref:System.ServiceModel.IClientChannel>objektet med en typeparameter for <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName>.</xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName> </xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName> Denne kanalen parameter-objektet er brukt av egendefinert <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName>å opprette sikkerhetstokener for kanalen.</xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName>      3.  Returner.       Å sette inn IInteractiveChannelInitializer: 1.  Overstyr <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=fullName>-metoden på <xref:System.ServiceModel.Description.ClientCredentials?displayProperty=fullName>klasse.</xref:System.ServiceModel.Description.ClientCredentials?displayProperty=fullName> </xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=fullName>      2.  Denne metoden fastslå om endepunktet krever en IInteractiveChannelInitializer, og Legg til i IInteractiveChannelInitializer til den <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=fullName>samlingen.</xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=fullName>       Det er to måter utviklere programmer kan benytte en innsatte IInteractiveChannelInitializer. Klientprogrammet kan ringe enten <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName>eller <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName>(eller en asynkron) før åpning av kanalen (den *eksplisitt* fremgangsmåten), eller Ring bare den første operasjonen (den *implisitt* fremgangsmåten).</xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName> </xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName>       Hvis du bruker implisitt tilnærmingen, programmet må kalle den første operasjonen på en <xref:System.ServiceModel.ClientBase%601>eller <xref:System.ServiceModel.IClientChannel>utvidelsen.</xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.ClientBase%601> Hvis den kaller noe annet enn den første operasjonen, er det et unntak som er registrert.       Hvis du bruker eksplisitt tilnærmingen, programmet må Utfør følgende trinn i rekkefølgen: 1.  Kall enten <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName>eller <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName>(eller en asynkron).</xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName> </xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName>      2.  Når startere har returnert, kaller enten den <xref:System.ServiceModel.ICommunicationObject.Open%2A>-metoden på den <xref:System.ServiceModel.IClientChannel>objektet eller på den <xref:System.ServiceModel.IClientChannel>objektet som ble returnert fra den <xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=fullName>egenskapen.</xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=fullName> </xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.ICommunicationObject.Open%2A>      3.  Kall operasjoner.       Det anbefales at kvalitet programmer kontroll over brukergrensesnittet prosessen tar i bruk eksplisitt tilnærmingen.       Programmer som bruker den implisitte fremgangsmåten opp brukergrensesnittet startere, men hvis brukeren for applikasjonen som ikke svarer innen tidsavbruddsperioden for sending av bindingen, et unntak låse brukergrensesnittet."
  syntax:
    content: public interface IInteractiveChannelInitializer
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)
  id: BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  langs:
  - csharp
  name: BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  nameWithType: IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Et asynkront kall å begynne å bruke et brukergrensesnitt ikke hente legitimasjon."
  remarks: "Implementere <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, gjør du følgende i BeginDisplayInitializationUI: 1.</xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>  Be brukeren om hvordan du ønsker, og få en passende <xref:System.Net.NetworkCredential?displayProperty=fullName>.</xref:System.Net.NetworkCredential?displayProperty=fullName>      2.  Legg til en egendefinert kanal parameter-objektet i samlingen ble returnert av <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName>metoden på <xref:System.ServiceModel.IClientChannel>objektet med en typeparameter for <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName>.</xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName> </xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName> Denne kanalen parameter-objektet er brukt av egendefinert <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName>å opprette sikkerhetstokener for kanalen.</xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName>      3.  Returner."
  syntax:
    content: public IAsyncResult BeginDisplayInitializationUI (System.ServiceModel.IClientChannel channel, AsyncCallback callback, object state);
    parameters:
    - id: channel
      type: System.ServiceModel.IClientChannel
      description: "Klient-kanal."
    - id: callback
      type: System.AsyncCallback
      description: "Tilbakekall-objekt."
    - id: state
      type: System.Object
      description: "Tilstanden data."
    return:
      type: System.IAsyncResult
      description: "Den &lt;xref:System.IAsyncResult?displayProperty=fullName&gt; skal brukes til å kalle tilbake under behandling er fullført."
  overload: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)
  id: EndDisplayInitializationUI(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  langs:
  - csharp
  name: EndDisplayInitializationUI(IAsyncResult)
  nameWithType: IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Kalles når den <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI*>er fullført.</xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI*>"
  syntax:
    content: public void EndDisplayInitializationUI (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Den &lt;xref:System.IAsyncResult?displayProperty=fullName&gt;."
  overload: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  isExternal: false
  name: BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  nameWithType: IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.ServiceModel.IClientChannel
  parent: System.ServiceModel
  isExternal: true
  name: IClientChannel
  nameWithType: IClientChannel
  fullName: System.ServiceModel.IClientChannel
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  isExternal: false
  name: EndDisplayInitializationUI(IAsyncResult)
  nameWithType: IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI*
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  isExternal: false
  name: BeginDisplayInitializationUI
  nameWithType: IInteractiveChannelInitializer.BeginDisplayInitializationUI
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI*
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  isExternal: false
  name: EndDisplayInitializationUI
  nameWithType: IInteractiveChannelInitializer.EndDisplayInitializationUI
