### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.SecurityTokenService
  id: SecurityTokenService
  children:
  - System.IdentityModel.SecurityTokenService.#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)
  - System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)
  - System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.SecurityTokenService.Cancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  - System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  - System.IdentityModel.SecurityTokenService.EndCancel(System.IAsyncResult)
  - System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(System.IAsyncResult)
  - System.IdentityModel.SecurityTokenService.EndGetScope(System.IAsyncResult)
  - System.IdentityModel.SecurityTokenService.EndIssue(System.IAsyncResult)
  - System.IdentityModel.SecurityTokenService.EndRenew(System.IAsyncResult)
  - System.IdentityModel.SecurityTokenService.EndValidate(System.IAsyncResult)
  - System.IdentityModel.SecurityTokenService.GetIssuerName
  - System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  - System.IdentityModel.SecurityTokenService.GetProofToken(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  - System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  - System.IdentityModel.SecurityTokenService.GetResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  - System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(System.String)
  - System.IdentityModel.SecurityTokenService.GetTokenLifetime(System.IdentityModel.Protocols.WSTrust.Lifetime)
  - System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  - System.IdentityModel.SecurityTokenService.Principal
  - System.IdentityModel.SecurityTokenService.Renew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  - System.IdentityModel.SecurityTokenService.Request
  - System.IdentityModel.SecurityTokenService.Scope
  - System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor
  - System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration
  - System.IdentityModel.SecurityTokenService.Validate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  - System.IdentityModel.SecurityTokenService.ValidateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  langs:
  - csharp
  name: SecurityTokenService
  nameWithType: SecurityTokenService
  fullName: System.IdentityModel.SecurityTokenService
  type: Class
  summary: "Abstrakte basisklassen som definerer egenskaper og metoder for sikkerhetstokentjenesten (STS)."
  remarks: "Du må være avledet fra klassen SecurityTokenService for å opprette en STS. I den egendefinerte klassen må du, som et minimum overstyre den <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>og <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>metoder.</xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> </xref:System.IdentityModel.SecurityTokenService.GetScope%2A> Disse overstyringer STS opprettet ved hjelp av standard implementering av alle andre metoder definert i klassen er kan utstede sikkerhetstokener som svar på sikkerhet token forespørsler (første). Det vil si implementeres problemet bindingen er definert i WS-Trust-spesifikasjonen. Denne bindingen er implementert i den <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metoden.</xref:System.IdentityModel.SecurityTokenService.Issue%2A> Ingen av de andre WS-Trust bindingene (Forny Avbryt og Valider) er implementert i standard tilfeller og en passende feil returnert til oppkalleren Hvis det oppstår en første tilsvarer en av disse bindinger. Du kan overstyre metodene som er nødvendig selvfølgelig (<xref:System.IdentityModel.SecurityTokenService.Renew%2A>, <xref:System.IdentityModel.SecurityTokenService.Cancel%2A>, og <xref:System.IdentityModel.SecurityTokenService.Validate%2A>) til å implementere disse bindinger i din STS.</xref:System.IdentityModel.SecurityTokenService.Validate%2A> </xref:System.IdentityModel.SecurityTokenService.Cancel%2A> </xref:System.IdentityModel.SecurityTokenService.Renew%2A>      > [!IMPORTANT] > Implementere produksjons-klar medfører STS nøye planlegging og betydelig ressurser til å redusere potensielle sikkerhet risikoene innebygd i at denne tjenesten. De fleste utviklere ved hjelp av Windows Identity Foundation (WIF) vil være utvikler programmer som ekstern Identitetsbehandling til en STS i stedet utvikler en STS seg selv. WIF gir filtypen Visual Studio identitet og tilgang verktøyet for Visual Studio 2012 for å teste løsninger i utviklingsmiljøet utviklere. Dette verktøyet inkluderer en STS `LocalSTS`, du kan konfigurere for å betjene bestemte krav til programmet som du utvikler. Hvis du vil ha mer informasjon om verktøyet identitet og tilgang, se [identitet og tilgang til verktøy for Visual Studio 2012](~/add/includes/ajax-current-ext-md.md). I noen tilfeller `LocalSTS` kan ikke gi funksjonalitet som er nødvendig for å teste tilstrekkelig programmet; for eksempel i et scenario som involverer utvikler et egendefinert token behandlingsprogram for bruk av en applikasjon. I slike tilfeller kan du utledet fra SecurityTokenService til å opprette en eller flere enkle STSs som kan distribueres i utviklingsmiljøet, og som kan brukes til å teste funksjoner i programmet. Resten av denne delen fokuserer på metodene som vises av klassen SecurityTokenService som gjør det mulig å implementere et enkelt STS og utvide token utstedelse pipeline.       Følgende liste gir en kort oversikt over metoder viktigste punkt til utvikleren for bruk i en test eller utviklingsmiljø.      - <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>Metode.</xref:System.IdentityModel.SecurityTokenService.GetScope%2A> Denne metoden returnerer en <xref:System.IdentityModel.Scope>objekt som inneholder informasjon om RP.</xref:System.IdentityModel.Scope> Dette objektet er brukt i resten av token utstedelse pipeline og inneholder informasjon om de logger og kryptering av legitimasjon for bruk i svaret, i tillegg til `AppliesTo` og `ReplyTo` (om nødvendig) adresser. Du må overstyre denne metoden.      - <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>Metode.</xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> Denne metoden returnerer en <xref:System.Security.Claims.ClaimsIdentity>objekt som inneholder krav til gå tilbake til RP.</xref:System.Security.Claims.ClaimsIdentity> Du må overstyre denne metoden.      - <xref:System.IdentityModel.SecurityTokenService.Issue%2A>Metode.</xref:System.IdentityModel.SecurityTokenService.Issue%2A> Denne metoden implementerer token forespørselsforløpet, som behandler en innkommende sikkerhet token forespørsel (første) og returnerer et svar (RSTR) til oppkalleren som inneholder et token som kan brukes til å godkjenne med en RP. Mange av de andre metodene som er definert i klassen SecurityTokenService kalles fra denne metoden, inkludert de <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>og <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>metoder.</xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> </xref:System.IdentityModel.SecurityTokenService.GetScope%2A> Du trenger ikke å overstyre denne metoden, men en forståelse av token forespørselen pipeline den implementerer kan være nyttig.       En STS konfigureres via <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration>klasse.</xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration>"
  example:
  - "The code examples that are used in the SecurityTokenService topics are taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token. For an example of how to implement an active STS, you can see the `Federation Metadata` sample. For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/add/includes/ajax-current-ext-md.md). The following code shows the implementation of a passive STS using the SecurityTokenService class.  \n  \n [!code-cs[WIFCustomTokenSTS#3](~/add/codesnippet/csharp/passivests/customsecuritytokenservice.cs#3)]  \n  \n The following code shows how to invoke a custom passive STS to process a WS-Federation request by calling the <xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest%28System.Web.HttpRequest%2CSystem.Security.Claims.ClaimsPrincipal%2CSystem.IdentityModel.SecurityTokenService%2CSystem.Web.HttpResponse%29?displayProperty=fullName> method from the code behind in the `default.aspx.cs` file.  \n  \n [!code-cs[WIFCustomTokenSTS#1](~/add/codesnippet/csharp/passivests/default.aspx.cs#1)]"
  syntax:
    content: public abstract class SecurityTokenService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)
  id: '#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)'
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: SecurityTokenService(SecurityTokenServiceConfiguration)
  nameWithType: SecurityTokenService.SecurityTokenService(SecurityTokenServiceConfiguration)
  fullName: System.IdentityModel.SecurityTokenService.SecurityTokenService(SecurityTokenServiceConfiguration)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Kalles fra avledede klasser initialisere den <xref href=&quot;System.IdentityModel.SecurityTokenService&quot;> </xref> klasse ved hjelp av de angitte konfigurasjonsinnstillingene."
  remarks: "Bruk denne konstruktøren initialisere omfanget leverandør og token utsteder sertifikatet."
  syntax:
    content: protected SecurityTokenService (System.IdentityModel.Configuration.SecurityTokenServiceConfiguration securityTokenServiceConfiguration);
    parameters:
    - id: securityTokenServiceConfiguration
      type: System.IdentityModel.Configuration.SecurityTokenServiceConfiguration
      description: "En <xref href=&quot;System.IdentityModel.Configuration.SecurityTokenServiceConfiguration&quot;> </xref> som inneholder innstillingene for STS."
  overload: System.IdentityModel.SecurityTokenService.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityTokenServiceConfiguration</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  id: BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: BeginCancel(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginCancel(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginCancel(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Når overstyrt i en avledet klasse, starter du en asynkron WS-Trust Avbryt forespørsel."
  remarks: "Standard implementering av denne metoden oppstår en <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual IAsyncResult BeginCancel (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "En <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> som representerer identiteten til token anmoder."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerer sikkerhet token forespørselen. Dette omfatter forespørselen relatert informasjon for eksempel godkjenningskonteksten melding i tillegg til andre klienter."
    - id: callback
      type: System.AsyncCallback
      description: "Den <xref:System.AsyncCallback>representant får beskjed om asynkrone Avbryt-operasjonen er fullført.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Et objekt som inneholder informasjon om tilknyttet asynkrone Avbryt-operasjonen."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som refererer til asynkrone Avbryt-operasjonen.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.SecurityTokenService.BeginCancel*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)
  id: BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: BeginGetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginGetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Når overstyrt i en avledet klasse, starter et asynkront kall til den <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity*>metoden.</xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity*>"
  remarks: "Standard implementering av denne metoden oppstår <xref:System.NotImplementedException>.</xref:System.NotImplementedException>"
  syntax:
    content: protected virtual IAsyncResult BeginGetOutputClaimsIdentity (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope, AsyncCallback callback, object state);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "En <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> som representerer identiteten til token anmoder."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerer sikkerhet token forespørselen. Dette omfatter forespørselen relatert informasjon for eksempel godkjenningskonteksten melding i tillegg til andre klienter."
    - id: scope
      type: System.IdentityModel.Scope
      description: "Den <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> som inneholder informasjon om beroende part tilknyttet forespørselen."
    - id: callback
      type: System.AsyncCallback
      description: "Den <xref:System.AsyncCallback>representant får beskjed om den asynkrone operasjonen er fullført.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Et objekt som inneholder informasjon om knyttet til den asynkrone operasjonen."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som refererer til den asynkrone operasjonen.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  id: BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: BeginGetScope(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginGetScope(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginGetScope(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Når overstyrt i en avledet klasse, starter et asynkront kall for den <xref:System.IdentityModel.SecurityTokenService.GetScope*>metoden.</xref:System.IdentityModel.SecurityTokenService.GetScope*>"
  remarks: "Standard implementering av denne metoden oppstår <xref:System.NotImplementedException>.</xref:System.NotImplementedException>"
  syntax:
    content: protected virtual IAsyncResult BeginGetScope (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "En <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> som representerer identiteten til token anmoder."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerer sikkerhet token forespørselen. Dette omfatter forespørselen relatert informasjon for eksempel godkjenningskonteksten melding i tillegg til andre klienter."
    - id: callback
      type: System.AsyncCallback
      description: "Den <xref:System.AsyncCallback>representant får beskjed om den asynkrone operasjonen er fullført.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Et objekt som inneholder informasjon om knyttet til den asynkrone operasjonen."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som refererer til asynkrone Avbryt-operasjonen.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.SecurityTokenService.BeginGetScope*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  id: BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: BeginIssue(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginIssue(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginIssue(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Når overstyrt i en avledet klasse, starter du en asynkron WS-Trust problemet-forespørsel."
  remarks: "Standard implementering av denne metoden oppstår en <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual IAsyncResult BeginIssue (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "En <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> som representerer identiteten til token anmoder."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerer sikkerhet token forespørselen. Dette omfatter forespørselen relatert informasjon for eksempel godkjenningskonteksten melding i tillegg til andre klienter."
    - id: callback
      type: System.AsyncCallback
      description: "Den <xref:System.AsyncCallback>representant får beskjed om problemet asynkrone operasjonen er fullført.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Et objekt som inneholder informasjon om tilstanden for asynkrone problemet-operasjonen."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som refererer til den asynkrone problem-operasjonen.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.SecurityTokenService.BeginIssue*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  id: BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: BeginRenew(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginRenew(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginRenew(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Når overstyrt i en avledet klasse, starter du en asynkron WS-Trust fornye forespørsel."
  remarks: "Standard implementering av denne metoden oppstår en <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual IAsyncResult BeginRenew (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "En <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> som representerer identiteten til token anmoder."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerer sikkerhet token forespørselen. Dette omfatter forespørselen relatert informasjon for eksempel godkjenningskonteksten melding i tillegg til andre klienter."
    - id: callback
      type: System.AsyncCallback
      description: "Den <xref:System.AsyncCallback>fornye representant får beskjed om fullføringen av den asynkrone operasjonen.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Et objekt som inneholder informasjon om knyttet til den asynkrone fornye operasjonen."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>refererer til den asynkrone fornye operasjonen.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.SecurityTokenService.BeginRenew*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  id: BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: BeginValidate(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginValidate(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginValidate(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Når overstyrt i en avledet klasse, starter du en asynkron WS-Trust validere forespørsel."
  remarks: "Standard implementering av denne metoden oppstår en <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual IAsyncResult BeginValidate (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "En <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> som representerer identiteten til token anmoder."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerer sikkerhet token forespørselen. Dette omfatter forespørselen relatert informasjon for eksempel godkjenningskonteksten melding i tillegg til andre klienter."
    - id: callback
      type: System.AsyncCallback
      description: "Den <xref:System.AsyncCallback>validere representant får beskjed om fullføringen av den asynkrone operasjonen.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Et objekt som inneholder informasjon om knyttet til den asynkrone validere operasjonen."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>refererer til den asynkrone validere operasjonen.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.SecurityTokenService.BeginValidate*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.Cancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  id: Cancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: Cancel(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.Cancel(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.Cancel(ClaimsPrincipal,RequestSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Når overstyrt i en avledet klasse, behandler en WS-Trust Avbryt forespørsel."
  remarks: "Standard implementering av denne metoden oppstår en <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Cancel (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "En <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> som representerer identiteten til token anmoder."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerer sikkerhet token forespørselen. Dette omfatter forespørselen relatert informasjon for eksempel godkjenningskonteksten melding i tillegg til andre klienter."
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref> som representerer RSTR å gå tilbake til oppkalleren."
  overload: System.IdentityModel.SecurityTokenService.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  id: CreateSecurityTokenDescriptor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: CreateSecurityTokenDescriptor(RequestSecurityToken,Scope)
  nameWithType: SecurityTokenService.CreateSecurityTokenDescriptor(RequestSecurityToken,Scope)
  fullName: System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(RequestSecurityToken,Scope)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Oppretter en forekomst av en <xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*>.</xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*>"
  remarks: "Aktiveres under token utstedelse etter <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>.</xref:System.IdentityModel.SecurityTokenService.GetScope%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityTokenDescriptor CreateSecurityTokenDescriptor (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);
    parameters:
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "Innkommende token forespørselen."
    - id: scope
      type: System.IdentityModel.Scope
      description: "Den <> </> *> objektet som ble returnert fra <> </> *>."
    return:
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "<xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*>.</xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*>"
  overload: System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>request</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>scope</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.EndCancel(System.IAsyncResult)
  id: EndCancel(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: EndCancel(IAsyncResult)
  nameWithType: SecurityTokenService.EndCancel(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndCancel(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Når overstyrt i en avledet klasse, er asynkront WS-Trust avbryte forespørselen."
  remarks: "Standard implementering av denne metoden oppstår en <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndCancel (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som returneres av et kall til den <xref:System.IdentityModel.SecurityTokenService.BeginCancel*>metoden.</xref:System.IdentityModel.SecurityTokenService.BeginCancel*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref> som representerer RSTR å gå tilbake til oppkalleren."
  overload: System.IdentityModel.SecurityTokenService.EndCancel*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(System.IAsyncResult)
  id: EndGetOutputClaimsIdentity(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: EndGetOutputClaimsIdentity(IAsyncResult)
  nameWithType: SecurityTokenService.EndGetOutputClaimsIdentity(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Når overstyrt i en avledet klasse, er asynkront kallet til den <xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*>metoden.</xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*>"
  remarks: "Standard implementering av denne metoden oppstår <xref:System.NotImplementedException>.</xref:System.NotImplementedException>"
  syntax:
    content: protected virtual System.Security.Claims.ClaimsIdentity EndGetOutputClaimsIdentity (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som returneres av et kall til den <xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*>metoden.</xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*> </xref:System.IAsyncResult>"
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: "En <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> som inneholder samlingen av krav som skal plasseres i utstedte sikkerhetstokenet."
  overload: System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.EndGetScope(System.IAsyncResult)
  id: EndGetScope(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: EndGetScope(IAsyncResult)
  nameWithType: SecurityTokenService.EndGetScope(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndGetScope(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Når overstyrt i en avledet klasse, er asynkront kallet til den <xref:System.IdentityModel.SecurityTokenService.BeginGetScope*>metoden.</xref:System.IdentityModel.SecurityTokenService.BeginGetScope*>"
  remarks: "Standard implementering av denne metoden oppstår <xref:System.NotImplementedException>.</xref:System.NotImplementedException>"
  syntax:
    content: protected virtual System.IdentityModel.Scope EndGetScope (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som returneres av et kall til den <xref:System.IdentityModel.SecurityTokenService.BeginGetScope*>metoden.</xref:System.IdentityModel.SecurityTokenService.BeginGetScope*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Scope
      description: "En <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> som innkapsler beroende part (RP) informasjon knyttet til forespørselen (første) som er angitt i kallet til den <xref:System.IdentityModel.SecurityTokenService.BeginGetScope*>metoden.</xref:System.IdentityModel.SecurityTokenService.BeginGetScope*>"
  overload: System.IdentityModel.SecurityTokenService.EndGetScope*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.EndIssue(System.IAsyncResult)
  id: EndIssue(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: EndIssue(IAsyncResult)
  nameWithType: SecurityTokenService.EndIssue(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndIssue(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Når overstyrt i en avledet klasse, er asynkront WS-Trust problemet forespørselen."
  remarks: "Standard implementering av denne metoden oppstår en <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndIssue (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som returneres av et kall til den <xref:System.IdentityModel.SecurityTokenService.BeginIssue*>metoden.</xref:System.IdentityModel.SecurityTokenService.BeginIssue*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref> som representerer RSTR å gå tilbake til oppkalleren."
  overload: System.IdentityModel.SecurityTokenService.EndIssue*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.EndRenew(System.IAsyncResult)
  id: EndRenew(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: EndRenew(IAsyncResult)
  nameWithType: SecurityTokenService.EndRenew(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndRenew(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Når overstyrt i en avledet klasse, er asynkront WS-Trust fornye forespørselen."
  remarks: "Standard implementering av denne metoden oppstår en <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndRenew (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som returneres av et kall til den <xref:System.IdentityModel.SecurityTokenService.BeginRenew*>metoden.</xref:System.IdentityModel.SecurityTokenService.BeginRenew*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref> som representerer RSTR å gå tilbake til oppkalleren."
  overload: System.IdentityModel.SecurityTokenService.EndRenew*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.EndValidate(System.IAsyncResult)
  id: EndValidate(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: EndValidate(IAsyncResult)
  nameWithType: SecurityTokenService.EndValidate(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndValidate(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Når overstyrt i en avledet klasse, er asynkront WS-Trust validere forespørselen."
  remarks: "Standard implementering av denne metoden oppstår en <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndValidate (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som returneres av et kall til den <xref:System.IdentityModel.SecurityTokenService.BeginValidate*>metoden.</xref:System.IdentityModel.SecurityTokenService.BeginValidate*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref> som representerer RSTR å gå tilbake til oppkalleren."
  overload: System.IdentityModel.SecurityTokenService.EndValidate*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.GetIssuerName
  id: GetIssuerName
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: GetIssuerName()
  nameWithType: SecurityTokenService.GetIssuerName()
  fullName: System.IdentityModel.SecurityTokenService.GetIssuerName()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Henter navnet på sikkerhetstokentjenesten (STS)."
  remarks: "Denne metoden kalles fra standard token utstedelse pipeline implementert i den <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metoden.</xref:System.IdentityModel.SecurityTokenService.Issue%2A>       Returnerer standard implementering av <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A>egenskapen fra konfigurasjonen som er tilgjengelig via den <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A>egenskapen.</xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> </xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A>"
  syntax:
    content: protected virtual string GetIssuerName ();
    parameters: []
    return:
      type: System.String
      description: "Utstedernavn."
  overload: System.IdentityModel.SecurityTokenService.GetIssuerName*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  id: GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: GetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope)
  nameWithType: SecurityTokenService.GetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope)
  fullName: System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Når overstyrt i en avledet klasse, returnerer metoden en samling av utdata emner som skal inkluderes i utstedt token."
  remarks: "Metoden GetOutputClaimsIdentity kalles fra tokenet utstedelse pipeline, som er implementert i den <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metoden.</xref:System.IdentityModel.SecurityTokenService.Issue%2A> Returnerer en <xref:System.Security.Claims.ClaimsIdentity>som inneholder krav til inkludere i utstedte sikkerhetstokenet basert på personen som sendte forespørselen for tokenet (den `principal` parameteren), innkommende første (den `request` parameteren), og som part for tokenet er beregnet (den `scope` parameteren).</xref:System.Security.Claims.ClaimsIdentity> Logikken i denne metoden gjelder først og fremst svarer på følgende spørsmål:- **som Domenekrav typer som skal inkluderes i svar basert på RP den er ment?** Dette er vanligvis valgt per RP fra en liste med kravet typene som er nødvendig for hver RP eller på basis per forespørselen ved å undersøke den <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A>for forespørselen.</xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A> Imidlertid er logikken og informasjon for å bestemme krav til inkludere i svaret fullstendig implementeringen din.      - **Som Domenekrav verdier skal tilordnes krav i svaret?** For en identitetsleverandør (IP-STS) Dette betyr vanligvis ved hjelp av én eller flere krav i anmoderens <xref:System.Security.Claims.ClaimsPrincipal>(angitt av den `principal` parameteren) til å få tilgang til en butikk (eller en annen enhet) for å returnere verdier for obligatoriske kravtyper.</xref:System.Security.Claims.ClaimsPrincipal> For en leverandør med Federation (R-STS) betyr dette vanligvis utfører en form for behandling for anmoderens innkommende krav for å fullføre forespørselen; utfører kanskje filtrering eller transformering på noen krav vises av personen som sendte forespørselen, under sending av andre via uendret. Selvfølgelig som tilfelle bestemme som krav inkludere i svaret er detaljer og logikken for fastslå verdiene i disse krav implementeringen din."
  example:
  - "The code example that is used in this topic is taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token. For an example of how to implement an active STS, you can see the `Federation Metadata` sample. For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/add/includes/ajax-current-ext-md.md). The following code shows how to override the GetOutputClaimsIdentity method to return claims for your STS. In this example, the Request Security Token (RST) message is ignored and a collection of claims based on the user as authenticated at the STS is returned.  \n  \n [!code-cs[WIFCustomTokenSTS#6](~/add/codesnippet/csharp/passivests/customsecuritytokenservice.cs#6)]"
  syntax:
    content: protected abstract System.Security.Claims.ClaimsIdentity GetOutputClaimsIdentity (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "En <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> som representerer identiteten til token anmoder."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerer sikkerhet token forespørselen. Dette omfatter forespørselen relatert informasjon for eksempel godkjenningskonteksten melding i tillegg til andre klienter."
    - id: scope
      type: System.IdentityModel.Scope
      description: "Den <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> som inneholder informasjon om beroende part tilknyttet forespørselen. Dette er den <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> objektet som ble returnert av den <xref:System.IdentityModel.SecurityTokenService.GetScope*>metoden.</xref:System.IdentityModel.SecurityTokenService.GetScope*>"
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: "En <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> som inneholder samlingen av krav som skal plasseres i utstedte sikkerhetstokenet."
  overload: System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.GetProofToken(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  id: GetProofToken(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: GetProofToken(RequestSecurityToken,Scope)
  nameWithType: SecurityTokenService.GetProofToken(RequestSecurityToken,Scope)
  fullName: System.IdentityModel.SecurityTokenService.GetProofToken(RequestSecurityToken,Scope)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Henter Bevistokenet som skal inkluderes i svar (RSTR)."
  remarks: "Denne metoden kalles fra standard token utstedelse pipeline implementert i den <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metoden.</xref:System.IdentityModel.SecurityTokenService.Issue%2A>       Standard implementering returnerer en Korrekturutskrift beskrivelse eller oppstår det et unntak som er nødvendig."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.ProofDescriptor GetProofToken (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);
    parameters:
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerer den innkommende token forespørselen (første)."
    - id: scope
      type: System.IdentityModel.Scope
      description: "Den <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> -forekomst som innkapsler informasjon om beroende tredjeparter."
    return:
      type: System.IdentityModel.Tokens.ProofDescriptor
      description: "En <xref href=&quot;System.IdentityModel.Tokens.ProofDescriptor&quot;> </xref> som representerer nyopprettede Korrekturutskrift beskrivelsen. Korrekturutskrift sikkerhetsbeskrivelse kan være en asymmetrisk Korrekturutskrift sikkerhetsbeskrivelse, en symmetrisk Korrekturutskrift beskrivelse eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> i bæreren token tilfeller."
  overload: System.IdentityModel.SecurityTokenService.GetProofToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>request</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>scope</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  id: GetRequestorProofEncryptingCredentials(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: GetRequestorProofEncryptingCredentials(RequestSecurityToken)
  nameWithType: SecurityTokenService.GetRequestorProofEncryptingCredentials(RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(RequestSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Henter anmoderens bevis kryptering av legitimasjon."
  remarks: "Denne metoden kalles fra den <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A>metoden.</xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A>       Standard implementering støtter følgende. Returnerer `null` Hvis det er ingen kryptering token som er angitt i forespørselen (den <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=fullName>egenskapen `null`).</xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=fullName> Ellers, hvis den kan hente token som en <xref:System.IdentityModel.Tokens.X509SecurityToken>, returneres legitimasjonen som er basert på denne token.</xref:System.IdentityModel.Tokens.X509SecurityToken> Hvis den ikke kan løse token som en <xref:System.IdentityModel.Tokens.X509SecurityToken>, en <xref:System.IdentityModel.RequestFailedException>forårsakes.</xref:System.IdentityModel.RequestFailedException> </xref:System.IdentityModel.Tokens.X509SecurityToken>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.EncryptingCredentials GetRequestorProofEncryptingCredentials (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);
    parameters:
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerer den innkommende token forespørselen (første)."
    return:
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "En <xref href=&quot;System.IdentityModel.Tokens.EncryptingCredentials&quot;> </xref> objektet som representerer anmoderen for kryptering av legitimasjon."
  overload: System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>request</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.GetResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: GetResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: GetResponse(RequestSecurityToken,SecurityTokenDescriptor)
  nameWithType: SecurityTokenService.GetResponse(RequestSecurityToken,SecurityTokenDescriptor)
  fullName: System.IdentityModel.SecurityTokenService.GetResponse(RequestSecurityToken,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Oppretter svaret (RSTR) som inneholder det utstedte tokenet ved hjelp av angitte forespørselen (første) og token sikkerhetsbeskriveren."
  remarks: "Metoden GetResponse kalles som det siste trinnet fra tokenet utstedelse pipeline, som er implementert i den <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metoden.</xref:System.IdentityModel.SecurityTokenService.Issue%2A> Den oppretter og returnerer svaret (RSTR) ved hjelp av den opprinnelige innkommende forespørselen (første) og token beskrivelsen som er bygget under trinnene i pipeline-token utstedelse.       Standard implementering oppretter RSTR ved å sende den første angitt i forespørselsparameteren til <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=fullName>-konstruktøren aktivering av metoden <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=fullName>på token sikkerhetsbeskrivelse ble sendt til GetResponse gjelder egenskapene for nyopprettede RSTR, angir egenskapen <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A>på RSTR ved å bruke egenskapen <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A>på token sikkerhetsbeskrivelse og til slutt egenskapen <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A>på RSTR i henhold til følgende tabell :      | `RST.ReplyTo` egenskapen | egenskapen <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName>. | `RSTR.ReplyTo` egenskapen |   |----------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|   | Angi | Ikke angi | Ikke angi |   | Angi | Angi | <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName>|   | Ikke angi | Angi | Ikke angi |   | Ikke angi | Ikke angi | Not Set|</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName></xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName></xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A></xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A></xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A></xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=fullName></xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=fullName>"
  syntax:
    content: protected virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse GetResponse (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "Den første som inneholder token forespørselen."
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "Token beskrivelsen som inneholder informasjonen som skal brukes for det utstedte tokenet."
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "Svaret (RSTR) eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis ikke kan opprette et svar fra den angitte forespørselen og token sikkerhetsbeskrivelse. Standard implementering returnerer <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> hvis den <code> tokenDescriptor </code> parameteren er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.SecurityTokenService.GetResponse*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  id: GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: GetScope(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.GetScope(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.GetScope(ClaimsPrincipal,RequestSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Henter en <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> objekt som inneholder informasjon om en beroende krever (RP) som er forbundet med den angitte forespørselen (første). Du må overstyre denne metoden i implementeringen din av den <xref href=&quot;System.IdentityModel.SecurityTokenService&quot;> </xref> klasse."
  remarks: "Metoden GetScope kalles fra tokenet utstedelse pipeline etter den <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A>metoden og skal returnere en <xref:System.IdentityModel.Scope>objektet som er konfigurert for den innkommende forespørselen.</xref:System.IdentityModel.Scope> </xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> (Token utstedelse pipeline er implementert i den <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metoden.)</xref:System.IdentityModel.SecurityTokenService.Issue%2A> Den <xref:System.IdentityModel.Scope>objektet innkapsler informasjon om RP tilknyttet sikkerhet token forespørselen (første).</xref:System.IdentityModel.Scope> Dette inkluderer informasjon om kryptering og signering legitimasjonen som skal brukes med RP og hvorvidt til å kryptere en utstedte token og/eller symmetriske nøkler i svaret. Noen vanlige oppgaver som utføres i metoden GetScope er:-finne ut om RP tokenet er ment som er en gjenkjent RP. Hvordan dette gjøres avhenger av implementeringen din. Hvis den tiltenkte RP ikke er en gyldig RP for denne STS, bør deretter metoden iverksette <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>      -Fastslå den logger legitimasjon som skal brukes i svaret (RSTR) og angi den <xref:System.IdentityModel.Scope.SigningCredentials%2A>egenskapen tilsvarende.</xref:System.IdentityModel.Scope.SigningCredentials%2A>      -Angi om svaret og/eller noen inkludert symmetrisk nøkler må være kryptert og legitimasjonen som brukes til kryptering. Angi den <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>, <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>, og <xref:System.IdentityModel.Scope.EncryptingCredentials%2A>Egenskaper tilsvarende.</xref:System.IdentityModel.Scope.EncryptingCredentials%2A> </xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> </xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>          > [!IMPORTANT] > Som standard i <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>og <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>egenskapene er angitt `true` å hindre at STS utstedes tokener som ikke er sikker.</xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> </xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> Det anbefales at disse egenskapene aldri settes til `false` i et miljø.      -Finne adressen svaret skal returneres. Angi enten den <xref:System.IdentityModel.Scope.AppliesToAddress%2A>eller <xref:System.IdentityModel.Scope.ReplyToAddress%2A>egenskapen tilsvarende.</xref:System.IdentityModel.Scope.ReplyToAddress%2A> </xref:System.IdentityModel.Scope.AppliesToAddress%2A>"
  example:
  - "The code example that is used in this topic is taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token. For an example of how to implement an active STS, you can see the `Federation Metadata` sample. For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/add/includes/ajax-current-ext-md.md).  \n  \n The following code example shows an implementation of the GetScope method. This implementation verifies that the RP is recognized by the STS, validates the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A> address in the request and sets the <xref:System.IdentityModel.Scope.ReplyToAddress%2A?displayProperty=fullName> property accordingly, and sets the signing and encrypting credentials to use with the RP based on certificates that are hard-coded in the file.  \n  \n [!code-cs[WIFCustomTokenSTS#4](~/add/codesnippet/csharp/passivests/customsecuritytokenservice.cs#4)]  \n[!code-cs[WIFCustomTokenSTS#5](~/add/codesnippet/csharp/passivests/customsecuritytokenservice.cs#5)]  \n[!code-cs[WIFCustomTokenSTS#7](~/add/codesnippet/csharp/passivests/customsecuritytokenservice.cs#7)]"
  syntax:
    content: protected abstract System.IdentityModel.Scope GetScope (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "En <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> som representerer klienten sender forespørselen."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerer den innkommende forespørselen (første)."
    return:
      type: System.IdentityModel.Scope
      description: "En <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> som innkapsler RP informasjon som er knyttet til forespørselen."
  overload: System.IdentityModel.SecurityTokenService.GetScope*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(System.String)
  id: GetSecurityTokenHandler(System.String)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: GetSecurityTokenHandler(String)
  nameWithType: SecurityTokenService.GetSecurityTokenHandler(String)
  fullName: System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Henter riktig sikkerhet token behandlingsprogrammet for utsteder en sikkerhetskode for den angitte typen."
  remarks: "I standard implementering Hvis `requestedTokenType` er `null` eller en tom streng, standard tokentypen fra konfigurasjon brukes. Dette er angitt i den <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A>for STS konfigurasjonsobjektet tilgjengelig via den <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A>egenskapen.</xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> </xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A>       Denne metoden kalles fra standard token utstedelse pipeline implementert i den <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metoden.</xref:System.IdentityModel.SecurityTokenService.Issue%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityTokenHandler GetSecurityTokenHandler (string requestedTokenType);
    parameters:
    - id: requestedTokenType
      type: System.String
      description: "En streng som inneholder den forespurte tokentypen URI."
    return:
      type: System.IdentityModel.Tokens.SecurityTokenHandler
      description: "En <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandler&quot;> </xref> som representerer token behandlingsprogrammet som skal brukes for oppretting av utstedte sikkerhetstokenet. Returnerer <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> hvis den forespurte tokentypen ikke støttes (det er noe behandlingsprogram konfigurert for den angitte tokentypen)."
  overload: System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.GetTokenLifetime(System.IdentityModel.Protocols.WSTrust.Lifetime)
  id: GetTokenLifetime(System.IdentityModel.Protocols.WSTrust.Lifetime)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: GetTokenLifetime(Lifetime)
  nameWithType: SecurityTokenService.GetTokenLifetime(Lifetime)
  fullName: System.IdentityModel.SecurityTokenService.GetTokenLifetime(Lifetime)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Henter levetiden for utstedte tokenet."
  remarks: "Denne metoden kalles vanligvis med levetid som ble mottatt i første. I standard implementering beregnes token levetiden tabellen nedenfor.      | Opprettet (i) | Utgår () | Opprettet (i) | Utløper (ut) |   |--------------------|--------------------|--------------------|---------------------|   | `null`|`null`|<xref:System.DateTime.UtcNow%2A?displayProperty=fullName>| <xref:System.DateTime.UtcNow%2A?displayProperty=fullName> + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName>|   | C | `null`| C | C + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName>|   | `null`| E | <xref:System.DateTime.UtcNow%2A?displayProperty=fullName>| E |   | C | E | C | E |       Denne metoden kalles fra standard token utstedelse pipeline implementert i den <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metoden.</xref:System.IdentityModel.SecurityTokenService.Issue%2A> </xref:System.DateTime.UtcNow%2A?displayProperty=fullName> </xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName> </xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName> </xref:System.DateTime.UtcNow%2A?displayProperty=fullName> </xref:System.DateTime.UtcNow%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual System.IdentityModel.Protocols.WSTrust.Lifetime GetTokenLifetime (System.IdentityModel.Protocols.WSTrust.Lifetime requestLifetime);
    parameters:
    - id: requestLifetime
      type: System.IdentityModel.Protocols.WSTrust.Lifetime
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.Lifetime&quot;> </xref> som representerer den forespurte levetiden."
    return:
      type: System.IdentityModel.Protocols.WSTrust.Lifetime
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.Lifetime&quot;> </xref> som representerer gitt levetid."
  overload: System.IdentityModel.SecurityTokenService.GetTokenLifetime*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  id: Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: Issue(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.Issue(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.Issue(ClaimsPrincipal,RequestSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Utsteder en sikkerhetskode."
  remarks: "Denne metoden implementerer problemet bindingen er definert i WS-Trust-spesifikasjonen. Standard implementering av metoden problemet behandler innkommende forespørselen (første) gjennom pipeline token utstedelse (krav utstedelse), og returnerer svar (RSTR) som inneholder en sikkerhetskode med riktig krav til å godkjenne anmoder med RP eller et passende unntak. Token utstedelse pipeline i standard implementering består av kall til følgende metoder (av den <xref:System.IdentityModel.SecurityTokenService>klassen).</xref:System.IdentityModel.SecurityTokenService>      1.  Den <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A>metode for å validere forespørselen (første).</xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A>      2.  Den <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>metode for å få en <xref:System.IdentityModel.Scope>objekt som inneholder informasjon om en beroende krever (RP) tilknyttet forespørselen.</xref:System.IdentityModel.Scope> </xref:System.IdentityModel.SecurityTokenService.GetScope%2A> Du må overstyre denne metoden. Hvis <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>returnerer `null`, en <xref:System.InvalidOperationException>forårsakes.</xref:System.InvalidOperationException> </xref:System.IdentityModel.SecurityTokenService.GetScope%2A>      3.  Den <xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A>metoden til å returnere en token sikkerhetsbeskrivelse basert på første og <xref:System.IdentityModel.Scope>objektet som ble returnert i forrige trinn.</xref:System.IdentityModel.Scope> </xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A> Token sikkerhetsbeskrivelsen (<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor>) inneholder informasjon om forespørselen i en form som kan brukes av et token behandlingsprogram.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor> Den <xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=fullName>er satt til sikkerhetsbeskrivelse ble returnert av samtalen.</xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=fullName> Hvis `null` returneres, eller hvis den <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A>for beskrivelsen er `null`, en <xref:System.InvalidOperationException>forårsakes.</xref:System.InvalidOperationException> </xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A> Det også unntak hvis den <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=fullName>egenskapen `true` men <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A>egenskap i den returnerte beskrivelsen er `null`.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A> </xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=fullName>      4.  Den <xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A>metode for å få et passende behandlingsprogram for token basert på typen token forespurte.</xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A> Hvis `null` returneres en <xref:System.NotImplementedException>forårsakes.</xref:System.NotImplementedException>      5.  Den <xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A>metode for å hente utstedernavn for tokenet.</xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A> Oppstår en <xref:System.InvalidOperationException>Hvis navnet `null` eller tom; ellers angir den <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A>egenskap i beskrivelsen.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A> </xref:System.InvalidOperationException>      6.  Den <xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A>metode for å hente levetiden for tokenet og angir de <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A>egenskap i beskrivelsen.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A> </xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A>      7.  Den <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A>metode for å hente Bevistokenet skal inkluderes i utstedt token og angir de <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A>egenskap i beskrivelsen.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A> </xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A>      8.  Den <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>metode for å hente krav til inkludere i utstedt token og angir de <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A>egenskap i beskrivelsen.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A> </xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> Du må overstyre denne metoden.      9. Den <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A>metode for å opprette et svar (RSTR) som inneholder det utstedte tokenet.</xref:System.IdentityModel.SecurityTokenService.GetResponse%2A>       Du kan overstyre metoden problemet for å implementere egendefinerte token utstedelse pipeline; men dette er vanligvis ikke nødvendig i utvikling og testing miljøer for som mest egendefinerte implementeringer av den <xref:System.IdentityModel.SecurityTokenService>klassen er ment.</xref:System.IdentityModel.SecurityTokenService> Mange av disse tilfellene du overstyre den <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>og <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>metoder og eventuelt overstyre den <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A>metode for å angi en serviceable STS for miljøet.</xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> </xref:System.IdentityModel.SecurityTokenService.GetScope%2A> </xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> Om flere customization er nødvendig kan du angi det ofte ved å overstyre metodene som implementerer hver fase av standard token utstedelse pipeline ovenfor."
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Issue (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "En <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> som representerer identiteten til token anmoder."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerer sikkerhet token forespørselen. Dette omfatter forespørselen relatert informasjon for eksempel godkjenningskonteksten melding i tillegg til andre klienter."
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref> som inneholder utstedte sikkerhetstokenet."
  overload: System.IdentityModel.SecurityTokenService.Issue*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.Principal
  id: Principal
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: Principal
  nameWithType: SecurityTokenService.Principal
  fullName: System.IdentityModel.SecurityTokenService.Principal
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Henter eller angir sikkerhetskontohaver som er knyttet til den gjeldende forekomsten."
  syntax:
    content: public System.Security.Claims.ClaimsPrincipal Principal { get; set; }
    return:
      type: System.Security.Claims.ClaimsPrincipal
      description: "En <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> som representerer gjeldende sikkerhetskontohaveren."
  overload: System.IdentityModel.SecurityTokenService.Principal*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.Renew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  id: Renew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: Renew(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.Renew(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.Renew(ClaimsPrincipal,RequestSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Når overstyrt i en avledet klasse, behandler en WS-Trust fornye forespørsel."
  remarks: "Standard implementering av denne metoden oppstår en <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Renew (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "En <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> som representerer identiteten til token anmoder."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerer sikkerhet token forespørselen. Dette omfatter forespørselen relatert informasjon for eksempel godkjenningskonteksten melding i tillegg til andre klienter."
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref> som representerer RSTR å gå tilbake til oppkalleren."
  overload: System.IdentityModel.SecurityTokenService.Renew*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.Request
  id: Request
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: Request
  nameWithType: SecurityTokenService.Request
  fullName: System.IdentityModel.SecurityTokenService.Request
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Henter eller angir sikkerhet token forespørselen (første) knyttet til den gjeldende forekomsten."
  syntax:
    content: public System.IdentityModel.Protocols.WSTrust.RequestSecurityToken Request { get; set; }
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som inneholder forespørselen."
  overload: System.IdentityModel.SecurityTokenService.Request*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.Scope
  id: Scope
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: Scope
  nameWithType: SecurityTokenService.Scope
  fullName: System.IdentityModel.SecurityTokenService.Scope
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Henter eller angir området som er knyttet til den gjeldende forekomsten."
  syntax:
    content: public System.IdentityModel.Scope Scope { get; set; }
    return:
      type: System.IdentityModel.Scope
      description: "En <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> som representerer konfigurasjonen for token endring av forespørselen."
  overload: System.IdentityModel.SecurityTokenService.Scope*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor
  id: SecurityTokenDescriptor
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: SecurityTokenDescriptor
  nameWithType: SecurityTokenService.SecurityTokenDescriptor
  fullName: System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Henter eller angir den <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenDescriptor&quot;> </xref> knyttet til den gjeldende forekomsten."
  syntax:
    content: protected System.IdentityModel.Tokens.SecurityTokenDescriptor SecurityTokenDescriptor { get; set; }
    return:
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "Token sikkerhetsbeskrivelsen som er knyttet til den gjeldende forekomsten."
  overload: System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Et forsøk på å angi egenskapen <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> forekommer."
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration
  id: SecurityTokenServiceConfiguration
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: SecurityTokenServiceConfiguration
  nameWithType: SecurityTokenService.SecurityTokenServiceConfiguration
  fullName: System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Henter eieren konfigurasjonsforekomst."
  syntax:
    content: public System.IdentityModel.Configuration.SecurityTokenServiceConfiguration SecurityTokenServiceConfiguration { get; }
    return:
      type: System.IdentityModel.Configuration.SecurityTokenServiceConfiguration
      description: "En <xref href=&quot;System.IdentityModel.Configuration.SecurityTokenServiceConfiguration&quot;> </xref> som inneholder konfigurasjonen for den gjeldende forekomsten."
  overload: System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.Validate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  id: Validate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: Validate(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.Validate(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.Validate(ClaimsPrincipal,RequestSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Når overstyrt i en avledet klasse, behandler en WS-Trust validere forespørsel."
  remarks: "Standard implementering av denne metoden oppstår en <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Validate (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "En <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> som representerer identiteten til token anmoder."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerer sikkerhet token forespørselen. Dette omfatter forespørselen relatert informasjon for eksempel godkjenningskonteksten melding i tillegg til andre klienter."
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref> som representerer RSTR å gå tilbake til oppkalleren."
  overload: System.IdentityModel.SecurityTokenService.Validate*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.ValidateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  id: ValidateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: ValidateRequest(RequestSecurityToken)
  nameWithType: SecurityTokenService.ValidateRequest(RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.ValidateRequest(RequestSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Validerer sikkerhet token forespørselen (første) encapsulated i denne forekomsten."
  remarks: "Metoden ValidateRequest kalles fra tokenet utstedelse pipeline (den <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metoden) til å validere innkommende første.</xref:System.IdentityModel.SecurityTokenService.Issue%2A> FØRSTE valideres mot STS kravene (policy) og en passende unntak hvis det ikke er gyldig.       Standard implementering av den <xref:System.IdentityModel.SecurityTokenService>klassen støtter bare det første RSTR mønsteret og bare problemet bindingen av WS-Trust-spesifikasjonen (den <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A>for forespørselen må settes til <xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=fullName>).</xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=fullName> </xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A> </xref:System.IdentityModel.SecurityTokenService> Standard implementering av denne metoden gjennomfører disse kravene (og andre noterte ned i delen unntak). Du kan overstyre denne metoden hvis du må håndheve valideringskrav til annen for de egendefinerte STS."
  syntax:
    content: protected virtual void ValidateRequest (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);
    parameters:
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerer forespørselen."
  overload: System.IdentityModel.SecurityTokenService.ValidateRequest*
  exceptions:
  - type: System.IdentityModel.Protocols.WSTrust.InvalidRequestException
    commentId: T:System.IdentityModel.Protocols.WSTrust.InvalidRequestException
    description: "<code>request</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType*> for forespørselen ikke er satt til <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue&quot;> </xref>.       - eller - <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*> for forespørselen er ikke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en av konstantene som er definert i den <xref href=&quot;System.IdentityModel.Protocols.WSTrust.KeyTypes&quot;> </xref> klasse.       - eller - <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*> for er <xref href=&quot;System.IdentityModel.Protocols.WSTrust.KeyTypes.Bearer&quot;> </xref> og <xref uid=&quot;langword_csharp_KeySize&quot; name=&quot;KeySize&quot; href=&quot;&quot;> </xref> elementet finnes, men verdien er ikke lik null."
  - type: System.IdentityModel.UnsupportedTokenTypeBadRequestException
    commentId: T:System.IdentityModel.UnsupportedTokenTypeBadRequestException
    description: "STS støtter ikke token Forespørselstypen (basert på verdien for den <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType*>for forespørselen).</xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType*>"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Protocols.WSTrust.InvalidRequestException
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: InvalidRequestException
  nameWithType: InvalidRequestException
  fullName: System.IdentityModel.Protocols.WSTrust.InvalidRequestException
- uid: System.IdentityModel.UnsupportedTokenTypeBadRequestException
  parent: System.IdentityModel
  isExternal: false
  name: UnsupportedTokenTypeBadRequestException
  nameWithType: UnsupportedTokenTypeBadRequestException
  fullName: System.IdentityModel.UnsupportedTokenTypeBadRequestException
- uid: System.IdentityModel.SecurityTokenService.#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: SecurityTokenService(SecurityTokenServiceConfiguration)
  nameWithType: SecurityTokenService.SecurityTokenService(SecurityTokenServiceConfiguration)
  fullName: System.IdentityModel.SecurityTokenService.SecurityTokenService(SecurityTokenServiceConfiguration)
- uid: System.IdentityModel.Configuration.SecurityTokenServiceConfiguration
  parent: System.IdentityModel.Configuration
  isExternal: false
  name: SecurityTokenServiceConfiguration
  nameWithType: SecurityTokenServiceConfiguration
  fullName: System.IdentityModel.Configuration.SecurityTokenServiceConfiguration
- uid: System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginCancel(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginCancel(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginCancel(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: RequestSecurityToken
  nameWithType: RequestSecurityToken
  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginGetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginGetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope,AsyncCallback,Object)
- uid: System.IdentityModel.Scope
  parent: System.IdentityModel
  isExternal: false
  name: Scope
  nameWithType: Scope
  fullName: System.IdentityModel.Scope
- uid: System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginGetScope(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginGetScope(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginGetScope(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginIssue(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginIssue(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginIssue(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginRenew(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginRenew(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginRenew(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginValidate(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginValidate(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginValidate(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.SecurityTokenService.Cancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Cancel(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.Cancel(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.Cancel(ClaimsPrincipal,RequestSecurityToken)
- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: RequestSecurityTokenResponse
  nameWithType: RequestSecurityTokenResponse
  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
- uid: System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: CreateSecurityTokenDescriptor(RequestSecurityToken,Scope)
  nameWithType: SecurityTokenService.CreateSecurityTokenDescriptor(RequestSecurityToken,Scope)
  fullName: System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(RequestSecurityToken,Scope)
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenDescriptor
  nameWithType: SecurityTokenDescriptor
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor
- uid: System.IdentityModel.SecurityTokenService.EndCancel(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndCancel(IAsyncResult)
  nameWithType: SecurityTokenService.EndCancel(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndCancel(IAsyncResult)
- uid: System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndGetOutputClaimsIdentity(IAsyncResult)
  nameWithType: SecurityTokenService.EndGetOutputClaimsIdentity(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(IAsyncResult)
- uid: System.Security.Claims.ClaimsIdentity
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: System.IdentityModel.SecurityTokenService.EndGetScope(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndGetScope(IAsyncResult)
  nameWithType: SecurityTokenService.EndGetScope(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndGetScope(IAsyncResult)
- uid: System.IdentityModel.SecurityTokenService.EndIssue(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndIssue(IAsyncResult)
  nameWithType: SecurityTokenService.EndIssue(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndIssue(IAsyncResult)
- uid: System.IdentityModel.SecurityTokenService.EndRenew(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndRenew(IAsyncResult)
  nameWithType: SecurityTokenService.EndRenew(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndRenew(IAsyncResult)
- uid: System.IdentityModel.SecurityTokenService.EndValidate(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndValidate(IAsyncResult)
  nameWithType: SecurityTokenService.EndValidate(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndValidate(IAsyncResult)
- uid: System.IdentityModel.SecurityTokenService.GetIssuerName
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetIssuerName()
  nameWithType: SecurityTokenService.GetIssuerName()
  fullName: System.IdentityModel.SecurityTokenService.GetIssuerName()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope)
  nameWithType: SecurityTokenService.GetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope)
  fullName: System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope)
- uid: System.IdentityModel.SecurityTokenService.GetProofToken(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetProofToken(RequestSecurityToken,Scope)
  nameWithType: SecurityTokenService.GetProofToken(RequestSecurityToken,Scope)
  fullName: System.IdentityModel.SecurityTokenService.GetProofToken(RequestSecurityToken,Scope)
- uid: System.IdentityModel.Tokens.ProofDescriptor
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: ProofDescriptor
  nameWithType: ProofDescriptor
  fullName: System.IdentityModel.Tokens.ProofDescriptor
- uid: System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetRequestorProofEncryptingCredentials(RequestSecurityToken)
  nameWithType: SecurityTokenService.GetRequestorProofEncryptingCredentials(RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(RequestSecurityToken)
- uid: System.IdentityModel.Tokens.EncryptingCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: EncryptingCredentials
  nameWithType: EncryptingCredentials
  fullName: System.IdentityModel.Tokens.EncryptingCredentials
- uid: System.IdentityModel.SecurityTokenService.GetResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetResponse(RequestSecurityToken,SecurityTokenDescriptor)
  nameWithType: SecurityTokenService.GetResponse(RequestSecurityToken,SecurityTokenDescriptor)
  fullName: System.IdentityModel.SecurityTokenService.GetResponse(RequestSecurityToken,SecurityTokenDescriptor)
- uid: System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetScope(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.GetScope(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.GetScope(ClaimsPrincipal,RequestSecurityToken)
- uid: System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(System.String)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetSecurityTokenHandler(String)
  nameWithType: SecurityTokenService.GetSecurityTokenHandler(String)
  fullName: System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(String)
- uid: System.IdentityModel.Tokens.SecurityTokenHandler
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenHandler
  nameWithType: SecurityTokenHandler
  fullName: System.IdentityModel.Tokens.SecurityTokenHandler
- uid: System.IdentityModel.SecurityTokenService.GetTokenLifetime(System.IdentityModel.Protocols.WSTrust.Lifetime)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetTokenLifetime(Lifetime)
  nameWithType: SecurityTokenService.GetTokenLifetime(Lifetime)
  fullName: System.IdentityModel.SecurityTokenService.GetTokenLifetime(Lifetime)
- uid: System.IdentityModel.Protocols.WSTrust.Lifetime
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: Lifetime
  nameWithType: Lifetime
  fullName: System.IdentityModel.Protocols.WSTrust.Lifetime
- uid: System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Issue(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.Issue(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.Issue(ClaimsPrincipal,RequestSecurityToken)
- uid: System.IdentityModel.SecurityTokenService.Principal
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Principal
  nameWithType: SecurityTokenService.Principal
  fullName: System.IdentityModel.SecurityTokenService.Principal
- uid: System.IdentityModel.SecurityTokenService.Renew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Renew(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.Renew(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.Renew(ClaimsPrincipal,RequestSecurityToken)
- uid: System.IdentityModel.SecurityTokenService.Request
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Request
  nameWithType: SecurityTokenService.Request
  fullName: System.IdentityModel.SecurityTokenService.Request
- uid: System.IdentityModel.SecurityTokenService.Scope
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Scope
  nameWithType: SecurityTokenService.Scope
  fullName: System.IdentityModel.SecurityTokenService.Scope
- uid: System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: SecurityTokenDescriptor
  nameWithType: SecurityTokenService.SecurityTokenDescriptor
  fullName: System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor
- uid: System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: SecurityTokenServiceConfiguration
  nameWithType: SecurityTokenService.SecurityTokenServiceConfiguration
  fullName: System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration
- uid: System.IdentityModel.SecurityTokenService.Validate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Validate(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.Validate(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.Validate(ClaimsPrincipal,RequestSecurityToken)
- uid: System.IdentityModel.SecurityTokenService.ValidateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: ValidateRequest(RequestSecurityToken)
  nameWithType: SecurityTokenService.ValidateRequest(RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.ValidateRequest(RequestSecurityToken)
- uid: System.IdentityModel.SecurityTokenService.#ctor*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: SecurityTokenService
  nameWithType: SecurityTokenService.SecurityTokenService
- uid: System.IdentityModel.SecurityTokenService.BeginCancel*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginCancel
  nameWithType: SecurityTokenService.BeginCancel
- uid: System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginGetOutputClaimsIdentity
  nameWithType: SecurityTokenService.BeginGetOutputClaimsIdentity
- uid: System.IdentityModel.SecurityTokenService.BeginGetScope*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginGetScope
  nameWithType: SecurityTokenService.BeginGetScope
- uid: System.IdentityModel.SecurityTokenService.BeginIssue*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginIssue
  nameWithType: SecurityTokenService.BeginIssue
- uid: System.IdentityModel.SecurityTokenService.BeginRenew*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginRenew
  nameWithType: SecurityTokenService.BeginRenew
- uid: System.IdentityModel.SecurityTokenService.BeginValidate*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginValidate
  nameWithType: SecurityTokenService.BeginValidate
- uid: System.IdentityModel.SecurityTokenService.Cancel*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Cancel
  nameWithType: SecurityTokenService.Cancel
- uid: System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: CreateSecurityTokenDescriptor
  nameWithType: SecurityTokenService.CreateSecurityTokenDescriptor
- uid: System.IdentityModel.SecurityTokenService.EndCancel*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndCancel
  nameWithType: SecurityTokenService.EndCancel
- uid: System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndGetOutputClaimsIdentity
  nameWithType: SecurityTokenService.EndGetOutputClaimsIdentity
- uid: System.IdentityModel.SecurityTokenService.EndGetScope*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndGetScope
  nameWithType: SecurityTokenService.EndGetScope
- uid: System.IdentityModel.SecurityTokenService.EndIssue*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndIssue
  nameWithType: SecurityTokenService.EndIssue
- uid: System.IdentityModel.SecurityTokenService.EndRenew*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndRenew
  nameWithType: SecurityTokenService.EndRenew
- uid: System.IdentityModel.SecurityTokenService.EndValidate*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndValidate
  nameWithType: SecurityTokenService.EndValidate
- uid: System.IdentityModel.SecurityTokenService.GetIssuerName*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetIssuerName
  nameWithType: SecurityTokenService.GetIssuerName
- uid: System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetOutputClaimsIdentity
  nameWithType: SecurityTokenService.GetOutputClaimsIdentity
- uid: System.IdentityModel.SecurityTokenService.GetProofToken*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetProofToken
  nameWithType: SecurityTokenService.GetProofToken
- uid: System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetRequestorProofEncryptingCredentials
  nameWithType: SecurityTokenService.GetRequestorProofEncryptingCredentials
- uid: System.IdentityModel.SecurityTokenService.GetResponse*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetResponse
  nameWithType: SecurityTokenService.GetResponse
- uid: System.IdentityModel.SecurityTokenService.GetScope*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetScope
  nameWithType: SecurityTokenService.GetScope
- uid: System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetSecurityTokenHandler
  nameWithType: SecurityTokenService.GetSecurityTokenHandler
- uid: System.IdentityModel.SecurityTokenService.GetTokenLifetime*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetTokenLifetime
  nameWithType: SecurityTokenService.GetTokenLifetime
- uid: System.IdentityModel.SecurityTokenService.Issue*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Issue
  nameWithType: SecurityTokenService.Issue
- uid: System.IdentityModel.SecurityTokenService.Principal*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Principal
  nameWithType: SecurityTokenService.Principal
- uid: System.IdentityModel.SecurityTokenService.Renew*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Renew
  nameWithType: SecurityTokenService.Renew
- uid: System.IdentityModel.SecurityTokenService.Request*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Request
  nameWithType: SecurityTokenService.Request
- uid: System.IdentityModel.SecurityTokenService.Scope*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Scope
  nameWithType: SecurityTokenService.Scope
- uid: System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: SecurityTokenDescriptor
  nameWithType: SecurityTokenService.SecurityTokenDescriptor
- uid: System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: SecurityTokenServiceConfiguration
  nameWithType: SecurityTokenService.SecurityTokenServiceConfiguration
- uid: System.IdentityModel.SecurityTokenService.Validate*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Validate
  nameWithType: SecurityTokenService.Validate
- uid: System.IdentityModel.SecurityTokenService.ValidateRequest*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: ValidateRequest
  nameWithType: SecurityTokenService.ValidateRequest
