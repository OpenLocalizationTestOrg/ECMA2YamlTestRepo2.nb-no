### YamlMime:ManagedReference
items:
- uid: System.Transactions.Transaction
  id: Transaction
  children:
  - System.Transactions.Transaction.Clone
  - System.Transactions.Transaction.Current
  - System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)
  - System.Transactions.Transaction.Dispose
  - System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)
  - System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  - System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.Equals(System.Object)
  - System.Transactions.Transaction.GetHashCode
  - System.Transactions.Transaction.GetPromotedToken
  - System.Transactions.Transaction.IsolationLevel
  - System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)
  - System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)
  - System.Transactions.Transaction.PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.PromoterType
  - System.Transactions.Transaction.Rollback
  - System.Transactions.Transaction.Rollback(System.Exception)
  - System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  - System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Transactions.Transaction.TransactionCompleted
  - System.Transactions.Transaction.TransactionInformation
  langs:
  - csharp
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
  type: Class
  summary: "Representerer en transaksjon."
  remarks: "Den <xref:System.Transactions>navneområdet gir både en eksplisitt programming modell basert på klassen transaksjonen, i tillegg til en implisitt programming modellen ved hjelp av den <xref:System.Transactions.TransactionScope>-klassen som administreres automatisk transaksjoner av infrastrukturen.</xref:System.Transactions.TransactionScope> </xref:System.Transactions> Svært anbefales at du bruker enklere implisitt modellen for utvikling. For å komme i gang, kan du se den [implementere en implisitt transaksjon ved hjelp av transaksjonsområdet](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) emnet. Hvis du vil ha mer informasjon om hvordan du skriver et transaksjons-program, se [skriving av en transaksjonskø programmet](http://msdn.microsoft.com/en-us/4a7cc4d1-0891-4605-941f-a933b9ce5bc8).       Klassen transaksjonen inneholder metoder som brukes i utviklere implementering ressursbehandlinger for oppføring. I tillegg inneholder funksjoner for kloning en transaksjon og kontroll av Transaksjonskonteksten. Du finner den gjeldende transaksjonen hvis én er angitt, bruker statiske <xref:System.Transactions.Transaction.Current%2A>egenskapen.</xref:System.Transactions.Transaction.Current%2A>"
  syntax:
    content: 'public class Transaction : IDisposable, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Clone
  id: Clone
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Clone()
  nameWithType: Transaction.Clone()
  fullName: System.Transactions.Transaction.Clone()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Oppretter en kopi av transaksjonen."
  remarks: "Kloning opprettes for å sende transaksjoner.  For eksempel, du kan ikke vil sende en <xref:System.Transactions.CommittableTransaction>til andre programmer, fordi du ikke vil at andre ikke gjennomføre transaksjonen.</xref:System.Transactions.CommittableTransaction>  Hvis du prøver å formidle eller serialisere en transaksjon, opprettes en kopi automatisk for deg."
  syntax:
    content: public System.Transactions.Transaction Clone ();
    parameters: []
    return:
      type: System.Transactions.Transaction
      description: "En <xref href=&quot;System.Transactions.Transaction&quot;> </xref> som en kopi av det gjeldende transaksjonsobjektet."
  overload: System.Transactions.Transaction.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Current
  id: Current
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Current
  nameWithType: Transaction.Current
  fullName: System.Transactions.Transaction.Current
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Henter eller angir omkringliggende transaksjonen."
  remarks: "For mer informasjon om omkringliggende transaksjoner, kan du se delen &quot;Behandle transaksjonen flyten ved hjelp av TransactionScopeOption&quot; for den [implementere en implisitt transaksjon med transaksjonsområdet](~/add/includes/ajax-current-ext-md.md) emnet.       Selv om du kan angi den omsluttende transaksjonen med denne egenskapen, bør du bruke den <xref:System.Transactions.TransactionScope>objekt for å endre omkringliggende transaksjonen når det er mulig.</xref:System.Transactions.TransactionScope>       Denne egenskapen er tråd statisk. Hvis du endrer omkringliggende transaksjonen ved hjelp av denne egenskapen i en <xref:System.Transactions.TransactionScope>en <xref:System.InvalidOperationException>oppstår når er <xref:System.Transactions.TransactionScope.Dispose%2A>kalles, og den forrige omkringliggende transaksjonsverdien er gjenopprettet.</xref:System.Transactions.TransactionScope.Dispose%2A> </xref:System.InvalidOperationException> </xref:System.Transactions.TransactionScope>"
  syntax:
    content: public static System.Transactions.Transaction Current { get; set; }
    return:
      type: System.Transactions.Transaction
      description: "En <xref href=&quot;System.Transactions.Transaction&quot;> </xref> som beskriver gjeldende transaksjon."
  overload: System.Transactions.Transaction.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)
  id: DependentClone(System.Transactions.DependentCloneOption)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: DependentClone(DependentCloneOption)
  nameWithType: Transaction.DependentClone(DependentCloneOption)
  fullName: System.Transactions.Transaction.DependentClone(DependentCloneOption)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Oppretter en underordnet klone for transaksjonen."
  remarks: "Avhengige transaksjonen er en der resultatet er avhengig av resultatet av den ble klonet transaksjonen.       Den `cloneoption` parameteren styrer hva slags avhengige transaksjonen til å opprette. Hvis en underordnet transaksjon opprettes med <xref:System.Transactions.DependentCloneOption>, blokkeres commit-prosessen for transaksjonen til transaksjonen blir tidsavbrutt, eller <xref:System.Transactions.DependentTransaction.Complete%2A>kalles <xref:System.Transactions.DependentTransaction>.</xref:System.Transactions.DependentTransaction> </xref:System.Transactions.DependentTransaction.Complete%2A> </xref:System.Transactions.DependentCloneOption> Hvis det er opprettet med <xref:System.Transactions.DependentCloneOption>, den automatisk avbryter transaksjonen hvis <xref:System.Transactions.CommittableTransaction.Commit%2A>kalles før <xref:System.Transactions.DependentTransaction.Complete%2A>kalles <xref:System.Transactions.DependentTransaction>.</xref:System.Transactions.DependentTransaction> </xref:System.Transactions.DependentTransaction.Complete%2A> </xref:System.Transactions.CommittableTransaction.Commit%2A> </xref:System.Transactions.DependentCloneOption>"
  example:
  - "The following example shows you how to create a dependent transaction.  \n  \n [!code-vb[Tx_DependentTx#1](~/add/codesnippet/visualbasic/a081f0f4-5473-43fc-b7fe-_1.vb)]\n [!code-cs[Tx_DependentTx#1](~/add/codesnippet/csharp/a081f0f4-5473-43fc-b7fe-_1.cs)]"
  syntax:
    content: public System.Transactions.DependentTransaction DependentClone (System.Transactions.DependentCloneOption cloneOption);
    parameters:
    - id: cloneOption
      type: System.Transactions.DependentCloneOption
      description: "En <xref href=&quot;System.Transactions.DependentCloneOption&quot;> </xref> som kontrollerer hva slags avhengige transaksjonen til å opprette."
    return:
      type: System.Transactions.DependentTransaction
      description: "En <xref href=&quot;System.Transactions.DependentTransaction&quot;> </xref> som representerer underordnet klone."
  overload: System.Transactions.Transaction.DependentClone*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Dispose
  id: Dispose
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Dispose()
  nameWithType: Transaction.Dispose()
  fullName: System.Transactions.Transaction.Dispose()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Frigir ressursene som er lagret i objektet."
  remarks: "Hvis du endrer omkringliggende transaksjonen ved å angi <xref:System.Transactions.Transaction.Current%2A>i en <xref:System.Transactions.TransactionScope>en <xref:System.InvalidOperationException>oppstår når er <xref:System.Transactions.TransactionScope.Dispose%2A>kalles, og den forrige omkringliggende transaksjonsverdien er gjenopprettet.</xref:System.Transactions.TransactionScope.Dispose%2A> </xref:System.InvalidOperationException> </xref:System.Transactions.TransactionScope> </xref:System.Transactions.Transaction.Current%2A>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Transactions.Transaction.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  id: EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Innrullerer robust ressursbehandling som støtter to fase lagre for å delta i en transaksjon."
  remarks: "Ressursbehandlinger med en robust oppføring må kunne utføre gjenoppretting hvis de får en feil. Hvis du vil vite mer om gjenoppretting, se [utføre gjenoppretting](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691). Du finner mer informasjon på midlertidig og robust ressurser, i tillegg til hvordan du kan registrere en ressurs i [implementere en Resource Manager](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e).  Hvis du vil ha mer informasjon om hvordan en ressursansvarlig svarer til å utføre varsling og klargjøre commit i tofaset utføring, se [utførelse av en transaksjon i Single-Phase og flere fase](http://msdn.microsoft.com/en-us/74b3cfe1-d33a-45b8-91f4-dfd6f6598c4d).       Ressursbehandlinger innrullert for deltakelse i en transaksjon i denne metoden mottar to fase commit varsler som tilsvarer metodene som er definert i den <xref:System.Transactions.IEnlistmentNotification>grensesnittet.</xref:System.Transactions.IEnlistmentNotification>"
  syntax:
    content: public System.Transactions.Enlistment EnlistDurable (Guid resourceManagerIdentifier, System.Transactions.IEnlistmentNotification enlistmentNotification, System.Transactions.EnlistmentOptions enlistmentOptions);
    parameters:
    - id: resourceManagerIdentifier
      type: System.Guid
      description: "En unik identifikator for en ressursansvarlig som skal opprettholdes resource manager feil eller starte på nytt."
    - id: enlistmentNotification
      type: System.Transactions.IEnlistmentNotification
      description: "Et objekt som implementerer den <xref href=&quot;System.Transactions.IEnlistmentNotification&quot;> </xref> grensesnittet mottar to fase commit-varsler."
    - id: enlistmentOptions
      type: System.Transactions.EnlistmentOptions
      description: "<xref href=&quot;System.Transactions.EnlistmentOptions&quot;></xref>Hvis ressursbehandling ønsker å utføre flere jobb i prepare-fasen."
    return:
      type: System.Transactions.Enlistment
      description: "En <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> -objektet som beskriver oppføringen."
  overload: System.Transactions.Transaction.EnlistDurable*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  id: EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Innrullerer robust ressursbehandling som støtter enkel fase commit optimalisering for å delta i en transaksjon."
  remarks: "Ressursbehandlinger med en robust oppføring må kunne utføre gjenoppretting hvis de får en feil. Hvis du vil vite mer om gjenoppretting, se [utføre gjenoppretting](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691). Du finner mer informasjon på midlertidig og robust ressurser, i tillegg til hvordan du kan registrere en ressurs i [implementere en Resource Manager](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e).       Du må Vær oppmerksom på at selv om resource manager implementeringen innrullerer med denne metoden, ikke garanteres den mottar en enkel fase commit. Transaksjonsbehandling kan likevel sende to fase commit varsler i stedet. For mer informasjon om enkel fase commit optimalisering, kan du se [optimalisering ved hjelp av én fase Commit og forfremmes enkelt fase varsling](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)."
  syntax:
    content: public System.Transactions.Enlistment EnlistDurable (Guid resourceManagerIdentifier, System.Transactions.ISinglePhaseNotification singlePhaseNotification, System.Transactions.EnlistmentOptions enlistmentOptions);
    parameters:
    - id: resourceManagerIdentifier
      type: System.Guid
      description: "En unik identifikator for en ressursansvarlig som skal opprettholdes resource manager feil eller starte på nytt."
    - id: singlePhaseNotification
      type: System.Transactions.ISinglePhaseNotification
      description: "Et objekt som implementerer den <xref href=&quot;System.Transactions.ISinglePhaseNotification&quot;> </xref> grensesnittet må kunne motta enkel fase commit-to fase commit-varsler."
    - id: enlistmentOptions
      type: System.Transactions.EnlistmentOptions
      description: "<xref href=&quot;System.Transactions.EnlistmentOptions&quot;></xref>Hvis ressursbehandling ønsker å utføre flere jobb i prepare-fasen."
    return:
      type: System.Transactions.Enlistment
      description: "En <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> -objektet som beskriver oppføringen."
  overload: System.Transactions.Transaction.EnlistDurable*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)
  id: EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
  nameWithType: Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
  fullName: System.Transactions.Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Innrullerer ressursbehandling som har en intern transaksjon, med en oppføring for forfremmes enkel fase (PSPE)."
  remarks: "Opplistinger i en transaksjon er midlertidig; Det vil si de ikke beholdes for deltakeren. I tillegg denne metoden bare foreslår transaksjonsbehandlingen for å videresende kontrollen, men er ikke sikkert at eskalering seg selv. Hvis eskalering mislykkes, blir ikke varslet om brukeren, og transaksjonen er rullet tilbake.       Parameteren `promotableSinglePhaseNotification` brukes til å kommunisere med transaksjonsbehandling resultatet av forsøk på å utføre for ressursbehandlingen intern transaksjon.  Hvis inkonsekvente data rapporteres, oppstår det et unntak i transaksjonsbehandling. Hvis en <xref:System.Transactions.TransactionStatus>resultatet rapporteres, transaksjonsbehandling etter resultatet varsling i sin egen intern oppføring og ignorerer rapporterte svaret.</xref:System.Transactions.TransactionStatus>       For mer informasjon om opplistinger og eskalering av en transaksjon, kan du se [transaksjonen Management eskalering](http://msdn.microsoft.com/en-us/5b87ae58-8ccf-4b9b-9715-41e4aade89b7). Du finner mer informasjon på PSPE [optimalisering ved hjelp av én fase utføre og forfremmes enkelt fase varsling](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb).       **Obs** denne metoden bruker <xref:System.Security.Permissions.SecurityAction>vil hindre at den blir kalt fra uklarerte kode; imidlertid bare umiddelbar Oppkalleren må har den `FullTrust` som er angitt.</xref:System.Security.Permissions.SecurityAction>"
  syntax:
    content: public bool EnlistPromotableSinglePhase (System.Transactions.IPromotableSinglePhaseNotification promotableSinglePhaseNotification);
    parameters:
    - id: promotableSinglePhaseNotification
      type: System.Transactions.IPromotableSinglePhaseNotification
      description: "En <xref href=&quot;System.Transactions.IPromotableSinglePhaseNotification&quot;> </xref> grensesnittet implementeres av deltakeren."
    return:
      type: System.Boolean
      description: "En <xref href=&quot;System.Transactions.SinglePhaseEnlistment&quot;> </xref> grensesnitt implementering som beskriver oppføringen."
  overload: System.Transactions.Transaction.EnlistPromotableSinglePhase*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  id: EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
  nameWithType: Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
  fullName: System.Transactions.Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Innrullerer ressursbehandling som har en intern transaksjon, med en oppføring for forfremmes enkel fase (PSPE)."
  remarks: "Hvis den angitte verdien for den `promoterType` parameteren er `TransactionInterop.PromoterTypeDtc`, transaksjonen **må** forfremmes av MSDTC og `byte[]` returnert fra den `IPromotableSinglePhaseNotification.Promote` metoden **må** være en MSDTC-transaksjonstoken for overføring.       Hvis den angitte verdien for den `promoterType` parameteren er **ikke**`TransactionInterop.PromoterTypeDTC`, transaksjonen kan ikke forfremmes av MSDTC, men etter oppkallerens implementeringen av `IPromotableSinglePhaseNotification`. Hvis dette kallet er fullført, det er et sett med etterfølgende operasjoner i transaksjonen som returnerer en `TransactionPromotionException`. Disse operasjonene er:- `Transaction.EnlistDurable`       -    `TransactionInterop.GetDtcTransaction`       -    `TransactionInterop.GetExportCookie`       -    `TransctionInterop.GetTransmitterPropagationToken` -serialisering av et transaksjonsobjekt"
  syntax:
    content: public bool EnlistPromotableSinglePhase (System.Transactions.IPromotableSinglePhaseNotification promotableSinglePhaseNotification, Guid promoterType);
    parameters:
    - id: promotableSinglePhaseNotification
      type: System.Transactions.IPromotableSinglePhaseNotification
      description: "En <xref href=&quot;System.Transactions.IPromotableSinglePhaseNotification&quot;> </xref> grensesnittet implementeres av deltakeren."
    - id: promoterType
      type: System.Guid
      description: "Hva slags prosessoren distribuert transaksjon."
    return:
      type: System.Boolean
      description: "En <xref href=&quot;System.Transactions.SinglePhaseEnlistment&quot;> </xref> grensesnitt implementering som beskriver oppføringen."
  overload: System.Transactions.Transaction.EnlistPromotableSinglePhase*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  id: EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Innrullerer en midlertidig ressursansvarlig som støtter to fase lagre for å delta i en transaksjon."
  remarks: "Midlertidig ressursbehandlinger kan gjenoppretting fra kan ikke fullføre en transaksjon der de ble deltar. For å få en robust oppføring i en transaksjon, kan du bruke den <xref:System.Transactions.Transaction.EnlistDurable%2A>metoden.</xref:System.Transactions.Transaction.EnlistDurable%2A>       Ressursbehandlinger innrullert for deltakelse i en transaksjon i denne metoden mottar to fase commit varsler som tilsvarer metodene som er definert i den <xref:System.Transactions.IEnlistmentNotification>grensesnittet.</xref:System.Transactions.IEnlistmentNotification>"
  example:
  - "The following example shows an implementation of <xref:System.Transactions.IEnlistmentNotification> interface, as well as enlisting the object as a participant in a transaction using the <xref:System.Transactions.Transaction.EnlistVolatile%2A> method.  \n  \n [!code-cs[Tx_Enlist#1](~/add/codesnippet/csharp/1d69bab4-4268-46d9-8f3f-_1.cs)]\n [!code-vb[Tx_Enlist#1](~/add/codesnippet/visualbasic/1d69bab4-4268-46d9-8f3f-_1.vb)]"
  syntax:
    content: public System.Transactions.Enlistment EnlistVolatile (System.Transactions.IEnlistmentNotification enlistmentNotification, System.Transactions.EnlistmentOptions enlistmentOptions);
    parameters:
    - id: enlistmentNotification
      type: System.Transactions.IEnlistmentNotification
      description: "Et objekt som implementerer den <xref href=&quot;System.Transactions.IEnlistmentNotification&quot;> </xref> grensesnittet for å motta tofaset utføring varsler."
    - id: enlistmentOptions
      type: System.Transactions.EnlistmentOptions
      description: "<xref href=&quot;System.Transactions.EnlistmentOptions&quot;></xref>Hvis ressursbehandling ønsker å utføre flere jobb i prepare-fasen."
    return:
      type: System.Transactions.Enlistment
      description: "En <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> -objektet som beskriver oppføringen."
  overload: System.Transactions.Transaction.EnlistVolatile*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  id: EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Innrullerer en midlertidig ressursansvarlig som støtter enkel fase commit optimalisering for å delta i en transaksjon."
  remarks: "Midlertidig ressursbehandlinger kan gjenoppretting fra kan ikke fullføre en transaksjon der de ble deltar. For å få en robust oppføring i en transaksjon, kan du bruke den <xref:System.Transactions.Transaction.EnlistDurable%2A>metoden.</xref:System.Transactions.Transaction.EnlistDurable%2A> Du finner mer informasjon på midlertidig og robust ressurser, i tillegg til hvordan du kan registrere en ressurs i [implementere en Resource Manager](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e). For mer informasjon om hvordan en ressursansvarlig svarer til å utføre varsling og klargjøre transaksjonen, kan du se [utførelse av en transaksjon i Single-Phase og flere fase](http://msdn.microsoft.com/en-us/74b3cfe1-d33a-45b8-91f4-dfd6f6598c4d).       Du må Vær oppmerksom på at selv om resource manager implementeringen innrullerer med denne metoden, ikke garanteres den mottar en enkel fase commit. Transaksjonsbehandling kan likevel sende to fase commit varsler i stedet. For mer informasjon om enkel fase commit optimalisering, kan du se [optimalisering ved hjelp av én fase Commit og forfremmes enkelt fase varsling](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)."
  syntax:
    content: public System.Transactions.Enlistment EnlistVolatile (System.Transactions.ISinglePhaseNotification singlePhaseNotification, System.Transactions.EnlistmentOptions enlistmentOptions);
    parameters:
    - id: singlePhaseNotification
      type: System.Transactions.ISinglePhaseNotification
      description: "Et objekt som implementerer den <xref href=&quot;System.Transactions.ISinglePhaseNotification&quot;> </xref> grensesnittet må kunne motta enkel fase commit-to fase commit-varsler."
    - id: enlistmentOptions
      type: System.Transactions.EnlistmentOptions
      description: "<xref href=&quot;System.Transactions.EnlistmentOptions&quot;></xref>Hvis ressursbehandling ønsker å utføre flere jobb i prepare-fasen."
    return:
      type: System.Transactions.Enlistment
      description: "En <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> -objektet som beskriver oppføringen."
  overload: System.Transactions.Transaction.EnlistVolatile*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Transaction.Equals(Object)
  fullName: System.Transactions.Transaction.Equals(Object)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Bestemmer om denne transaksjonen, og det angitte objektet er like."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Objektet som skal sammenlignes med denne forekomsten."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <code> obj </code> og denne transaksjonen er identiske; ellers, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Transactions.Transaction.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.GetHashCode
  id: GetHashCode
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Transaction.GetHashCode()
  fullName: System.Transactions.Transaction.GetHashCode()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Returnerer hashkoden for denne forekomsten."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "En 32-biters heltall med fortegn hash-kode."
  overload: System.Transactions.Transaction.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.GetPromotedToken
  id: GetPromotedToken
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: GetPromotedToken()
  nameWithType: Transaction.GetPromotedToken()
  fullName: System.Transactions.Transaction.GetPromotedToken()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Henter den `byte[]` ble returnert av den `Promote` metoden når transaksjonen er forfremmet."
  remarks: "Denne metoden er at at kampanje for transaksjonen hvis den ikke allerede er forfremmet.       Formatet på den returnerte `byte[]` er definert av verdien for den `Transation.PromoterType` egenskapen. Hvis verdien for den `Transaction.PromoterType` egenskapen `TransactionInterop.PromoterTypeDtc` eller `Guid.Empty`, vil `byte[]` returneres av denne metoden er et MSDTC meldingsfordeleren overføring-token. En annen verdi for den `Transaction.PromoterType` egenskapen angir et format som er definert av oppkalleren av `Transaction.EnlistPromotableSinglePhase` som angitt type egenskapsverdi. For å tolke den forfremmede token da siste må du se i dokumentasjonen for koden som utføres av `EnlistPromotableSinglePhase` kall."
  syntax:
    content: public byte[] GetPromotedToken ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Den `byte[]` ble returnert av den `Promote` metoden når transaksjonen er forfremmet."
  overload: System.Transactions.Transaction.GetPromotedToken*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.IsolationLevel
  id: IsolationLevel
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: IsolationLevel
  nameWithType: Transaction.IsolationLevel
  fullName: System.Transactions.Transaction.IsolationLevel
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Henter Isolasjonsnivået for transaksjonen."
  remarks: "Isolasjonsnivået for en transaksjon bestemmer hvilket tilgangsnivå andre transaksjoner må midlertidig data før en transaksjon er fullført. For mer informasjon om isolasjonsnivåene, kan du se dokumentasjonen for den <xref:System.Transactions.IsolationLevel>opplisting.</xref:System.Transactions.IsolationLevel>"
  syntax:
    content: public System.Transactions.IsolationLevel IsolationLevel { get; }
    return:
      type: System.Transactions.IsolationLevel
      description: "Én av de <xref href=&quot;System.Transactions.IsolationLevel&quot;> </xref> verdier som angir Isolasjonsnivået for transaksjonen."
  overload: System.Transactions.Transaction.IsolationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)
  id: op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: op_Equality(Transaction,Transaction)
  nameWithType: Transaction.op_Equality(Transaction,Transaction)
  fullName: System.Transactions.Transaction.op_Equality(Transaction,Transaction)
  type: Operator
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Tester om to angitt <xref href=&quot;System.Transactions.Transaction&quot;> </xref> forekomster er like."
  syntax:
    content: public static bool op_Equality (System.Transactions.Transaction x, System.Transactions.Transaction y);
    parameters:
    - id: x
      type: System.Transactions.Transaction
      description: "Den <xref href=&quot;System.Transactions.Transaction&quot;> </xref> -forekomst som er til venstre for likhetsoperatoren."
    - id: y
      type: System.Transactions.Transaction
      description: "Den <xref href=&quot;System.Transactions.Transaction&quot;> </xref> -forekomst som er til høyre for likhetsoperatoren."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>x</code> and <code>y</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Transactions.Transaction.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)
  id: op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: op_Inequality(Transaction,Transaction)
  nameWithType: Transaction.op_Inequality(Transaction,Transaction)
  fullName: System.Transactions.Transaction.op_Inequality(Transaction,Transaction)
  type: Operator
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Returnerer en verdi som angir om to <xref href=&quot;System.Transactions.Transaction&quot;> </xref> forekomster er ikke identiske."
  syntax:
    content: public static bool op_Inequality (System.Transactions.Transaction x, System.Transactions.Transaction y);
    parameters:
    - id: x
      type: System.Transactions.Transaction
      description: "Den <xref href=&quot;System.Transactions.Transaction&quot;> </xref> -forekomst som er til venstre for operatoren ulikhet."
    - id: y
      type: System.Transactions.Transaction
      description: "Den <xref href=&quot;System.Transactions.Transaction&quot;> </xref> -forekomst som er til høyre for operatoren ulikhet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>x</code> and <code>y</code> are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Transactions.Transaction.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  id: PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Støttes i .NET Framework 4.5.2 og nyere versjoner]       Hever og innrullerer robust ressursbehandling som støtter to fase lagre for å delta i en transaksjon."
  syntax:
    content: public System.Transactions.Enlistment PromoteAndEnlistDurable (Guid resourceManagerIdentifier, System.Transactions.IPromotableSinglePhaseNotification promotableNotification, System.Transactions.ISinglePhaseNotification enlistmentNotification, System.Transactions.EnlistmentOptions enlistmentOptions);
    parameters:
    - id: resourceManagerIdentifier
      type: System.Guid
      description: "En unik identifikator for en ressursansvarlig som skal opprettholdes resource manager feil eller starte på nytt."
    - id: promotableNotification
      type: System.Transactions.IPromotableSinglePhaseNotification
      description: "Et objekt som fungerer som commit representant for en ikke-distributed-transaksjon intern for ressursbehandling."
    - id: enlistmentNotification
      type: System.Transactions.ISinglePhaseNotification
      description: "Et objekt som implementerer den <xref href=&quot;System.Transactions.IEnlistmentNotification&quot;> </xref> grensesnittet mottar to fase commit-varsler."
    - id: enlistmentOptions
      type: System.Transactions.EnlistmentOptions
      description: "<xref href=&quot;System.Transactions.EnlistmentOptions&quot;></xref>Hvis ressursbehandling ønsker å utføre flere jobb i prepare-fasen."
    return:
      type: System.Transactions.Enlistment
      description: "[Støttes i .NET Framework 4.5.2 og nyere versjoner]       Hever og innrullerer robust ressursbehandling som støtter to fase lagre for å delta i en transaksjon."
  overload: System.Transactions.Transaction.PromoteAndEnlistDurable*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.PromoterType
  id: PromoterType
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: PromoterType
  nameWithType: Transaction.PromoterType
  fullName: System.Transactions.Transaction.PromoterType
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Identifiserer formatet for den `byte[]` returnert av metoden Hev når transaksjonen er forfremmet."
  remarks: "Hvis transaksjonen ennå ikke blitt forfremmet og ennå ikke har en forfremmes enkel fase oppføring, verdien for denne egenskapen blir `Guid.Empty`. Hvis transaksjonen er eller kan forfremmes til MSDTC, og deretter verdien for denne egenskapen blir `TransactionInterop.PromoterTypeDtc`. Hvis transaksjonen har blitt eller blir forfremmes av en ikke-MSDTC-promoter, verdien for denne egenskapen blir verdien som er angitt til en tidligere kall til `Transaction.EnlistPromotableSinglePhase`."
  syntax:
    content: public Guid PromoterType { get; }
    return:
      type: System.Guid
      description: "En guid som identifiserer formatet for den `byte[]` returnert av metoden Hev når transaksjonen er forfremmet."
  overload: System.Transactions.Transaction.PromoterType*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Rollback
  id: Rollback
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Rollback()
  nameWithType: Transaction.Rollback()
  fullName: System.Transactions.Transaction.Rollback()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Ruller tilbake (avbrytes) transaksjonen."
  remarks: "En kopi av et transaksjonsobjekt kan starte tilbakerulling av transaksjonen ved å kalle denne metoden. Bare det opprinnelige transaksjonsobjektet, som er en <xref:System.Transactions.CommittableTransaction>objekt, kan brukes til å starte et forsøk på å utføre transaksjonen.</xref:System.Transactions.CommittableTransaction> Et unntak under denne metoden kalles når resultatet av transaksjonen er allerede definert."
  syntax:
    content: public void Rollback ();
    parameters: []
  overload: System.Transactions.Transaction.Rollback*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Rollback(System.Exception)
  id: Rollback(System.Exception)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Rollback(Exception)
  nameWithType: Transaction.Rollback(Exception)
  fullName: System.Transactions.Transaction.Rollback(Exception)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Ruller tilbake (avbrytes) transaksjonen."
  syntax:
    content: public void Rollback (Exception e);
    parameters:
    - id: e
      type: System.Exception
      description: "Informasjon om hvorfor det oppstod en tilbakerulling."
  overload: System.Transactions.Transaction.Rollback*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  id: SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
  nameWithType: Transaction.SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
  fullName: System.Transactions.Transaction.SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Angir distribuert transaksjons-ID som er generert av ikke MSDTC-promoter."
  remarks: "Denne metoden kan bare kalles ble da den `IPromotableSinglePhaseNotification.Promote` metoden behandles. Hvis denne metoden kalles når som helst andre en `TransactionException` er et.       Den angitte verdien for den `promotableNotification` -parameteren må være det samme objektet som opprinnelig ble angitt i den `Transaction.EnlistPromotableSinglePhase` aktivering. Hvis dette er tilfellet, og deretter en `InvalidOperationException` er et."
  syntax:
    content: public void SetDistributedTransactionIdentifier (System.Transactions.IPromotableSinglePhaseNotification promotableNotification, Guid distributedTransactionIdentifier);
    parameters:
    - id: promotableNotification
      type: System.Transactions.IPromotableSinglePhaseNotification
      description: "En <xref href=&quot;System.Transactions.IPromotableSinglePhaseNotification&quot;> </xref> grensesnittet implementeres av deltakeren."
    - id: distributedTransactionIdentifier
      type: System.Guid
      description: "IDen for transaksjonen som brukes av den distribuerte transaksjonsbehandlingen."
  overload: System.Transactions.Transaction.SetDistributedTransactionIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Transaction.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Transactions.Transaction.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Henter en <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> med data som kreves for å serialisere denne transaksjonen."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "Den <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> til å fylle ut med data."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Målet (se <xref:System.Runtime.Serialization.StreamingContext>) for denne serialisering.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.TransactionCompleted
  id: TransactionCompleted
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: TransactionCompleted
  nameWithType: Transaction.TransactionCompleted
  fullName: System.Transactions.Transaction.TransactionCompleted
  type: Event
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Angir at transaksjonen er fullført."
  remarks: "Du kan registrere deg for denne hendelsen i stedet for med en midlertidig oppføring for å få informasjon om resultatet for transaksjoner. {Parameteren sendt til den <xref:System.Transactions.TransactionCompletedEventHandler>delegert er en <xref:System.Transactions.Transaction>forekomsten.</xref:System.Transactions.Transaction> </xref:System.Transactions.TransactionCompletedEventHandler> Du kan deretter spørre den <xref:System.Transactions.Transaction.TransactionInformation%2A>for den bestemte forekomsten å hente en forekomst av <xref:System.Transactions.TransactionInformation>, der <xref:System.Transactions.TransactionInformation.Status%2A>egenskapen viser statusen for en transaksjon med enten den <xref:System.Transactions.TransactionStatus>eller <xref:System.Transactions.TransactionStatus>verdi.</xref:System.Transactions.TransactionStatus> </xref:System.Transactions.TransactionStatus> </xref:System.Transactions.TransactionInformation.Status%2A> </xref:System.Transactions.TransactionInformation> </xref:System.Transactions.Transaction.TransactionInformation%2A>       **Forsiktig** benytter seg av denne hendelsen negativt innvirkning på ytelsen til den er knyttet til transaksjonen."
  example:
  - "The following sample shows how an application can obtain the outcome of a transaction by subscribing to the TransactionCompleted event.  \n  \n [!code-cs[Tx_Outcome#1](~/add/codesnippet/csharp/e-system.transactions.tr_1.cs)]\n [!code-vb[Tx_Outcome#1](~/add/codesnippet/visualbasic/e-system.transactions.tr_1.vb)]"
  syntax:
    content: public event System.Transactions.TransactionCompletedEventHandler TransactionCompleted;
    return:
      type: System.Transactions.TransactionCompletedEventHandler
      description: "Som skal legges til."
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Et forsøk på å abonnere på denne hendelsen i en transaksjon som har blitt fjernet."
  platform:
  - net462
- uid: System.Transactions.Transaction.TransactionInformation
  id: TransactionInformation
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: TransactionInformation
  nameWithType: Transaction.TransactionInformation
  fullName: System.Transactions.Transaction.TransactionInformation
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Henter tilleggsinformasjon om en transaksjon."
  syntax:
    content: public System.Transactions.TransactionInformation TransactionInformation { get; }
    return:
      type: System.Transactions.TransactionInformation
      description: "En <xref href=&quot;System.Transactions.TransactionInformation&quot;> </xref> som inneholder tilleggsinformasjon om transaksjonen."
  overload: System.Transactions.Transaction.TransactionInformation*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Transactions.Transaction.Clone
  parent: System.Transactions.Transaction
  isExternal: false
  name: Clone()
  nameWithType: Transaction.Clone()
  fullName: System.Transactions.Transaction.Clone()
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Transactions.Transaction.Current
  parent: System.Transactions.Transaction
  isExternal: false
  name: Current
  nameWithType: Transaction.Current
  fullName: System.Transactions.Transaction.Current
- uid: System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)
  parent: System.Transactions.Transaction
  isExternal: false
  name: DependentClone(DependentCloneOption)
  nameWithType: Transaction.DependentClone(DependentCloneOption)
  fullName: System.Transactions.Transaction.DependentClone(DependentCloneOption)
- uid: System.Transactions.DependentTransaction
  parent: System.Transactions
  isExternal: false
  name: DependentTransaction
  nameWithType: DependentTransaction
  fullName: System.Transactions.DependentTransaction
- uid: System.Transactions.DependentCloneOption
  parent: System.Transactions
  isExternal: false
  name: DependentCloneOption
  nameWithType: DependentCloneOption
  fullName: System.Transactions.DependentCloneOption
- uid: System.Transactions.Transaction.Dispose
  parent: System.Transactions.Transaction
  isExternal: false
  name: Dispose()
  nameWithType: Transaction.Dispose()
  fullName: System.Transactions.Transaction.Dispose()
- uid: System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
- uid: System.Transactions.Enlistment
  parent: System.Transactions
  isExternal: false
  name: Enlistment
  nameWithType: Enlistment
  fullName: System.Transactions.Enlistment
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Transactions.IEnlistmentNotification
  parent: System.Transactions
  isExternal: false
  name: IEnlistmentNotification
  nameWithType: IEnlistmentNotification
  fullName: System.Transactions.IEnlistmentNotification
- uid: System.Transactions.EnlistmentOptions
  parent: System.Transactions
  isExternal: false
  name: EnlistmentOptions
  nameWithType: EnlistmentOptions
  fullName: System.Transactions.EnlistmentOptions
- uid: System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
- uid: System.Transactions.ISinglePhaseNotification
  parent: System.Transactions
  isExternal: false
  name: ISinglePhaseNotification
  nameWithType: ISinglePhaseNotification
  fullName: System.Transactions.ISinglePhaseNotification
- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
  nameWithType: Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
  fullName: System.Transactions.Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Transactions.IPromotableSinglePhaseNotification
  parent: System.Transactions
  isExternal: false
  name: IPromotableSinglePhaseNotification
  nameWithType: IPromotableSinglePhaseNotification
  fullName: System.Transactions.IPromotableSinglePhaseNotification
- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
  nameWithType: Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
  fullName: System.Transactions.Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
- uid: System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
- uid: System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
- uid: System.Transactions.Transaction.Equals(System.Object)
  parent: System.Transactions.Transaction
  isExternal: false
  name: Equals(Object)
  nameWithType: Transaction.Equals(Object)
  fullName: System.Transactions.Transaction.Equals(Object)
- uid: System.Transactions.Transaction.GetHashCode
  parent: System.Transactions.Transaction
  isExternal: false
  name: GetHashCode()
  nameWithType: Transaction.GetHashCode()
  fullName: System.Transactions.Transaction.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Transactions.Transaction.GetPromotedToken
  parent: System.Transactions.Transaction
  isExternal: false
  name: GetPromotedToken()
  nameWithType: Transaction.GetPromotedToken()
  fullName: System.Transactions.Transaction.GetPromotedToken()
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Transactions.Transaction.IsolationLevel
  parent: System.Transactions.Transaction
  isExternal: false
  name: IsolationLevel
  nameWithType: Transaction.IsolationLevel
  fullName: System.Transactions.Transaction.IsolationLevel
- uid: System.Transactions.IsolationLevel
  parent: System.Transactions
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Transactions.IsolationLevel
- uid: System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)
  parent: System.Transactions.Transaction
  isExternal: false
  name: op_Equality(Transaction,Transaction)
  nameWithType: Transaction.op_Equality(Transaction,Transaction)
  fullName: System.Transactions.Transaction.op_Equality(Transaction,Transaction)
- uid: System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)
  parent: System.Transactions.Transaction
  isExternal: false
  name: op_Inequality(Transaction,Transaction)
  nameWithType: Transaction.op_Inequality(Transaction,Transaction)
  fullName: System.Transactions.Transaction.op_Inequality(Transaction,Transaction)
- uid: System.Transactions.Transaction.PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  isExternal: false
  name: PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
- uid: System.Transactions.Transaction.PromoterType
  parent: System.Transactions.Transaction
  isExternal: false
  name: PromoterType
  nameWithType: Transaction.PromoterType
  fullName: System.Transactions.Transaction.PromoterType
- uid: System.Transactions.Transaction.Rollback
  parent: System.Transactions.Transaction
  isExternal: false
  name: Rollback()
  nameWithType: Transaction.Rollback()
  fullName: System.Transactions.Transaction.Rollback()
- uid: System.Transactions.Transaction.Rollback(System.Exception)
  parent: System.Transactions.Transaction
  isExternal: false
  name: Rollback(Exception)
  nameWithType: Transaction.Rollback(Exception)
  fullName: System.Transactions.Transaction.Rollback(Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  parent: System.Transactions.Transaction
  isExternal: false
  name: SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
  nameWithType: Transaction.SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
  fullName: System.Transactions.Transaction.SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
- uid: System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Transactions.Transaction
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Transaction.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Transactions.Transaction.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Transactions.Transaction.TransactionCompleted
  parent: System.Transactions.Transaction
  isExternal: false
  name: TransactionCompleted
  nameWithType: Transaction.TransactionCompleted
  fullName: System.Transactions.Transaction.TransactionCompleted
- uid: System.Transactions.TransactionCompletedEventHandler
  parent: System.Transactions
  isExternal: false
  name: TransactionCompletedEventHandler
  nameWithType: TransactionCompletedEventHandler
  fullName: System.Transactions.TransactionCompletedEventHandler
- uid: System.Transactions.Transaction.TransactionInformation
  parent: System.Transactions.Transaction
  isExternal: false
  name: TransactionInformation
  nameWithType: Transaction.TransactionInformation
  fullName: System.Transactions.Transaction.TransactionInformation
- uid: System.Transactions.TransactionInformation
  parent: System.Transactions
  isExternal: false
  name: TransactionInformation
  nameWithType: TransactionInformation
  fullName: System.Transactions.TransactionInformation
- uid: System.Transactions.Transaction.Clone*
  parent: System.Transactions.Transaction
  isExternal: false
  name: Clone
  nameWithType: Transaction.Clone
- uid: System.Transactions.Transaction.Current*
  parent: System.Transactions.Transaction
  isExternal: false
  name: Current
  nameWithType: Transaction.Current
- uid: System.Transactions.Transaction.DependentClone*
  parent: System.Transactions.Transaction
  isExternal: false
  name: DependentClone
  nameWithType: Transaction.DependentClone
- uid: System.Transactions.Transaction.Dispose*
  parent: System.Transactions.Transaction
  isExternal: false
  name: Dispose
  nameWithType: Transaction.Dispose
- uid: System.Transactions.Transaction.EnlistDurable*
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistDurable
  nameWithType: Transaction.EnlistDurable
- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase*
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistPromotableSinglePhase
  nameWithType: Transaction.EnlistPromotableSinglePhase
- uid: System.Transactions.Transaction.EnlistVolatile*
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistVolatile
  nameWithType: Transaction.EnlistVolatile
- uid: System.Transactions.Transaction.Equals*
  parent: System.Transactions.Transaction
  isExternal: false
  name: Equals
  nameWithType: Transaction.Equals
- uid: System.Transactions.Transaction.GetHashCode*
  parent: System.Transactions.Transaction
  isExternal: false
  name: GetHashCode
  nameWithType: Transaction.GetHashCode
- uid: System.Transactions.Transaction.GetPromotedToken*
  parent: System.Transactions.Transaction
  isExternal: false
  name: GetPromotedToken
  nameWithType: Transaction.GetPromotedToken
- uid: System.Transactions.Transaction.IsolationLevel*
  parent: System.Transactions.Transaction
  isExternal: false
  name: IsolationLevel
  nameWithType: Transaction.IsolationLevel
- uid: System.Transactions.Transaction.op_Equality*
  parent: System.Transactions.Transaction
  isExternal: false
  name: op_Equality
  nameWithType: Transaction.op_Equality
- uid: System.Transactions.Transaction.op_Inequality*
  parent: System.Transactions.Transaction
  isExternal: false
  name: op_Inequality
  nameWithType: Transaction.op_Inequality
- uid: System.Transactions.Transaction.PromoteAndEnlistDurable*
  parent: System.Transactions.Transaction
  isExternal: false
  name: PromoteAndEnlistDurable
  nameWithType: Transaction.PromoteAndEnlistDurable
- uid: System.Transactions.Transaction.PromoterType*
  parent: System.Transactions.Transaction
  isExternal: false
  name: PromoterType
  nameWithType: Transaction.PromoterType
- uid: System.Transactions.Transaction.Rollback*
  parent: System.Transactions.Transaction
  isExternal: false
  name: Rollback
  nameWithType: Transaction.Rollback
- uid: System.Transactions.Transaction.SetDistributedTransactionIdentifier*
  parent: System.Transactions.Transaction
  isExternal: false
  name: SetDistributedTransactionIdentifier
  nameWithType: Transaction.SetDistributedTransactionIdentifier
- uid: System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Transactions.Transaction
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: Transaction.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Transactions.Transaction.TransactionInformation*
  parent: System.Transactions.Transaction
  isExternal: false
  name: TransactionInformation
  nameWithType: Transaction.TransactionInformation
