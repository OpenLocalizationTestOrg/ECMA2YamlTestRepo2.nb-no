### YamlMime:ManagedReference
items:
- uid: System.Text.EncoderExceptionFallbackBuffer
  id: EncoderExceptionFallbackBuffer
  children:
  - System.Text.EncoderExceptionFallbackBuffer.#ctor
  - System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)
  - System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)
  - System.Text.EncoderExceptionFallbackBuffer.GetNextChar
  - System.Text.EncoderExceptionFallbackBuffer.MovePrevious
  - System.Text.EncoderExceptionFallbackBuffer.Remaining
  langs:
  - csharp
  name: EncoderExceptionFallbackBuffer
  nameWithType: EncoderExceptionFallbackBuffer
  fullName: System.Text.EncoderExceptionFallbackBuffer
  type: Class
  summary: "Oppstår <xref:System.Text.EncoderFallbackException>når det angitte tegnet kan ikke konverteres til en kodet utdata byte sekvens.</xref:System.Text.EncoderFallbackException> Denne klassen kan ikke arves."
  remarks: "En vanlig årsak til koding eller -dekoding operasjonen mislykkes er hvis underliggende koding klassen ikke inneholder en tilordning mellom et tegn og en tilsvarende byte-sekvens. Hvis det angitte tegnet ikke kan konverteres til en output byte sekvens, kaller koding operasjonen <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A>metoden som oppstår <xref:System.Text.EncoderFallbackException>.</xref:System.Text.EncoderFallbackException> </xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A>       <xref:System.Text.EncoderFallbackBuffer?displayProperty=fullName>Klassen som representerer en databufferen som brukes i en koding operasjon er basisklasse for EncoderExceptionFallbackBuffer klasse.</xref:System.Text.EncoderFallbackBuffer?displayProperty=fullName> I stedet for en databufferen representerer klassen EncoderExceptionFallbackBuffer en standard virkemåte versjonsproblemer et unntak hvis en koding operasjonen mislykkes. Ingen faktiske databufferen finnes, og hvilke medlemmer som er utformet for å endre slike en buffer har ingen betydelige jobb."
  syntax:
    content: 'public sealed class EncoderExceptionFallbackBuffer : System.Text.EncoderFallbackBuffer'
  inheritance:
  - System.Text.EncoderFallbackBuffer
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.#ctor
  id: '#ctor'
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: EncoderExceptionFallbackBuffer()
  nameWithType: EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer()
  fullName: System.Text.EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Text.EncoderExceptionFallbackBuffer&quot;> </xref> klasse."
  syntax:
    content: public EncoderExceptionFallbackBuffer ();
    parameters: []
  overload: System.Text.EncoderExceptionFallbackBuffer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)
  id: Fallback(System.Char,System.Int32)
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: Fallback(Char,Int32)
  nameWithType: EncoderExceptionFallbackBuffer.Fallback(Char,Int32)
  fullName: System.Text.EncoderExceptionFallbackBuffer.Fallback(Char,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Oppstår det et unntak fordi det angitte tegnet ikke kan være kodet. Parametere angi verdien og indeksen posisjonen til tegnet som ikke kan konverteres."
  remarks: "Den <xref:System.Text.Encoding.GetBytes%2A>og <xref:System.Text.Encoder.Convert%2A>metoder kall basis Hvis det oppstår et ukjent tegn i en handling.</xref:System.Text.Encoder.Convert%2A> </xref:System.Text.Encoding.GetBytes%2A> Svar oppstår basis alltid <xref:System.Text.EncoderFallbackException>.</xref:System.Text.EncoderFallbackException>"
  syntax:
    content: public override bool Fallback (char charUnknown, int index);
    parameters:
    - id: charUnknown
      type: System.Char
      description: "Det angitte tegnet."
    - id: index
      type: System.Int32
      description: "Indeksen posisjonen til tegnet i inndatabufferen."
    return:
      type: System.Boolean
      description: "Ingen. Ingen verdi returneres fordi metoden Fallback alltid oppstår det et unntak."
  overload: System.Text.EncoderExceptionFallbackBuffer.Fallback*
  exceptions:
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: "<code>charUnknown</code>kan ikke være kodet. Denne metoden alltid oppstår det et unntak som rapporterer verdien for den <code>charUnknown</code> og <code>index</code> parametere."
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)
  id: Fallback(System.Char,System.Char,System.Int32)
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: Fallback(Char,Char,Int32)
  nameWithType: EncoderExceptionFallbackBuffer.Fallback(Char,Char,Int32)
  fullName: System.Text.EncoderExceptionFallbackBuffer.Fallback(Char,Char,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Oppstår det et unntak fordi det angitte tegnet ikke kan være kodet. Parameterne angi verdien og indeksen posisjonen erstatning paret i inndataene, og nominell returverdien brukt ikke."
  remarks: "Den <xref:System.Text.Encoding.GetBytes%2A>og <xref:System.Text.Encoder.Convert%2A>metoder kall basis Hvis det oppstår et erstatningspar i sine inndata.</xref:System.Text.Encoder.Convert%2A> </xref:System.Text.Encoding.GetBytes%2A> Svar oppstår basis alltid det et unntak."
  syntax:
    content: public override bool Fallback (char charUnknownHigh, char charUnknownLow, int index);
    parameters:
    - id: charUnknownHigh
      type: System.Char
      description: "Høy erstatning inndata paret."
    - id: charUnknownLow
      type: System.Char
      description: "Lav erstatning inndata paret."
    - id: index
      type: System.Int32
      description: "Indeksen posisjonen erstatning paret i inndatabufferen."
    return:
      type: System.Boolean
      description: "Ingen. Ingen verdi returneres fordi metoden Fallback alltid oppstår det et unntak."
  overload: System.Text.EncoderExceptionFallbackBuffer.Fallback*
  exceptions:
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: "Tegn som er representert av <code> charUnknownHigh </code> og <code> charUnknownLow </code> kan ikke være kodet."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Either <code>charUnknownHigh</code> or <code>charUnknownLow</code> is invalid. <code>charUnknownHigh</code>er ikke mellom U + D800 og U + DBFF, med, eller <code> charUnknownLow </code> er ikke mellom U + DC00 og U + DFFF, med."
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.GetNextChar
  id: GetNextChar
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: GetNextChar()
  nameWithType: EncoderExceptionFallbackBuffer.GetNextChar()
  fullName: System.Text.EncoderExceptionFallbackBuffer.GetNextChar()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Henter det neste tegnet i unntak fallback-bufferen."
  remarks: "Fordi <xref:System.Text.EncoderExceptionFallbackBuffer>har ingen faktiske unntak databufferen metoden GetNextChar returnerer alltid NULL Unicode-tegn.</xref:System.Text.EncoderExceptionFallbackBuffer>"
  syntax:
    content: public override char GetNextChar ();
    parameters: []
    return:
      type: System.Char
      description: "Den returnerte verdien er alltid Unicode-tegn, NULL (U +&0000;).       En returverdi er definert, selv om det er uendret, fordi denne metoden implementerer en metode som er abstrakt."
  overload: System.Text.EncoderExceptionFallbackBuffer.GetNextChar*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.MovePrevious
  id: MovePrevious
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: MovePrevious()
  nameWithType: EncoderExceptionFallbackBuffer.MovePrevious()
  fullName: System.Text.EncoderExceptionFallbackBuffer.MovePrevious()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Gjør at neste kall til den <xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar*>metode for å få tilgang til unntak data buffer tegnposisjonen som før gjeldende posisjon.</xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar*>"
  remarks: "Fordi <xref:System.Text.EncoderExceptionFallbackBuffer>har ingen faktiske unntak databufferen metoden MovePrevious returnerer alltid `false`.</xref:System.Text.EncoderExceptionFallbackBuffer>"
  syntax:
    content: public override bool MovePrevious ();
    parameters: []
    return:
      type: System.Boolean
      description: "Den returnerte verdien er alltid <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       En returverdi er definert, selv om det er uendret, fordi denne metoden implementerer en metode som er abstrakt."
  overload: System.Text.EncoderExceptionFallbackBuffer.MovePrevious*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.Remaining
  id: Remaining
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: Remaining
  nameWithType: EncoderExceptionFallbackBuffer.Remaining
  fullName: System.Text.EncoderExceptionFallbackBuffer.Remaining
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Henter antallet tegn i gjeldende <xref href=&quot;System.Text.EncoderExceptionFallbackBuffer&quot;> </xref> objekt som fortsatt behandles."
  remarks: "Fordi <xref:System.Text.EncoderExceptionFallbackBuffer>har ingen faktiske unntak databufferen gjenstående alltid returneres null.</xref:System.Text.EncoderExceptionFallbackBuffer>"
  syntax:
    content: public override int Remaining { get; }
    return:
      type: System.Int32
      description: "Verdien som returneres er alltid null.       En returverdi er definert, selv om det er uendret, fordi denne metoden implementerer en metode som er abstrakt."
  overload: System.Text.EncoderExceptionFallbackBuffer.Remaining*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Text.EncoderFallbackBuffer
  isExternal: false
  name: System.Text.EncoderFallbackBuffer
- uid: System.Text.EncoderFallbackException
  isExternal: true
  name: System.Text.EncoderFallbackException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Text.EncoderExceptionFallbackBuffer.#ctor
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: EncoderExceptionFallbackBuffer()
  nameWithType: EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer()
  fullName: System.Text.EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer()
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Fallback(Char,Int32)
  nameWithType: EncoderExceptionFallbackBuffer.Fallback(Char,Int32)
  fullName: System.Text.EncoderExceptionFallbackBuffer.Fallback(Char,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Fallback(Char,Char,Int32)
  nameWithType: EncoderExceptionFallbackBuffer.Fallback(Char,Char,Int32)
  fullName: System.Text.EncoderExceptionFallbackBuffer.Fallback(Char,Char,Int32)
- uid: System.Text.EncoderExceptionFallbackBuffer.GetNextChar
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: GetNextChar()
  nameWithType: EncoderExceptionFallbackBuffer.GetNextChar()
  fullName: System.Text.EncoderExceptionFallbackBuffer.GetNextChar()
- uid: System.Text.EncoderExceptionFallbackBuffer.MovePrevious
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: MovePrevious()
  nameWithType: EncoderExceptionFallbackBuffer.MovePrevious()
  fullName: System.Text.EncoderExceptionFallbackBuffer.MovePrevious()
- uid: System.Text.EncoderExceptionFallbackBuffer.Remaining
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Remaining
  nameWithType: EncoderExceptionFallbackBuffer.Remaining
  fullName: System.Text.EncoderExceptionFallbackBuffer.Remaining
- uid: System.Text.EncoderExceptionFallbackBuffer.#ctor*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: EncoderExceptionFallbackBuffer
  nameWithType: EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Fallback
  nameWithType: EncoderExceptionFallbackBuffer.Fallback
- uid: System.Text.EncoderExceptionFallbackBuffer.GetNextChar*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: GetNextChar
  nameWithType: EncoderExceptionFallbackBuffer.GetNextChar
- uid: System.Text.EncoderExceptionFallbackBuffer.MovePrevious*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: MovePrevious
  nameWithType: EncoderExceptionFallbackBuffer.MovePrevious
- uid: System.Text.EncoderExceptionFallbackBuffer.Remaining*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Remaining
  nameWithType: EncoderExceptionFallbackBuffer.Remaining
