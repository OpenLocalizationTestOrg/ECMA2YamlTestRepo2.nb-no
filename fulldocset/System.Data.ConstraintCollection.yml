### YamlMime:ManagedReference
items:
- uid: System.Data.ConstraintCollection
  id: ConstraintCollection
  children:
  - System.Data.ConstraintCollection.Add(System.Data.Constraint)
  - System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)
  - System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  - System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)
  - System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  - System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])
  - System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)
  - System.Data.ConstraintCollection.Clear
  - System.Data.ConstraintCollection.CollectionChanged
  - System.Data.ConstraintCollection.Contains(System.String)
  - System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)
  - System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)
  - System.Data.ConstraintCollection.IndexOf(System.String)
  - System.Data.ConstraintCollection.Item(System.Int32)
  - System.Data.ConstraintCollection.Item(System.String)
  - System.Data.ConstraintCollection.List
  - System.Data.ConstraintCollection.Remove(System.Data.Constraint)
  - System.Data.ConstraintCollection.Remove(System.String)
  - System.Data.ConstraintCollection.RemoveAt(System.Int32)
  langs:
  - csharp
  name: ConstraintCollection
  nameWithType: ConstraintCollection
  fullName: System.Data.ConstraintCollection
  type: Class
  summary: "Representerer en samling av begrensninger for en <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  remarks: "ConstraintCollection er tilgjengelig via den <xref:System.Data.DataTable.Constraints%2A?displayProperty=fullName>egenskapen.</xref:System.Data.DataTable.Constraints%2A?displayProperty=fullName>       ConstraintCollection kan inneholde både <xref:System.Data.UniqueConstraint>og <xref:System.Data.ForeignKeyConstraint>objekter for <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.UniqueConstraint> En <xref:System.Data.UniqueConstraint>objektet sikrer at dataene i en bestemt kolonne alltid er unike for å beholde dataintegriteten.</xref:System.Data.UniqueConstraint> Den <xref:System.Data.ForeignKeyConstraint>bestemmer hva som skjer i relaterte tabeller når dataene i den <xref:System.Data.DataTable>enten oppdateres eller slettes.</xref:System.Data.DataTable> </xref:System.Data.ForeignKeyConstraint> Hvis en rad er slettet, for eksempel den <xref:System.Data.ForeignKeyConstraint>fastslår om beslektede rader også slettes (en cascade), eller noen andre løpet av handlingen.</xref:System.Data.ForeignKeyConstraint>      > [!NOTE] > Når du legger til en <xref:System.Data.DataRelation>som oppretter en relasjon mellom to tabeller i en <xref:System.Data.DataSet>, både en <xref:System.Data.ForeignKeyConstraint>og en <xref:System.Data.UniqueConstraint>opprettes automatisk.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataSet> </xref:System.Data.DataRelation> Den <xref:System.Data.UniqueConstraint>brukes til primærnøkkelkolonnen i overordnet <xref:System.Data.DataTable>, og begrensningen blir lagt til denne tabellen ConstraintCollection.</xref:System.Data.DataTable> </xref:System.Data.UniqueConstraint> Den <xref:System.Data.ForeignKeyConstraint>brukes til primærnøkkelkolonnen og sekundærnøkkelkolonnen, og begrensningen legges til den underordnede tabellen ConstraintCollection.</xref:System.Data.ForeignKeyConstraint>       ConstraintCollection bruker standard samlingen metoder som <xref:System.Data.ConstraintCollection.Add%2A>, <xref:System.Data.ConstraintCollection.Clear%2A>, og <xref:System.Data.ConstraintCollection.Remove%2A>.</xref:System.Data.ConstraintCollection.Remove%2A> </xref:System.Data.ConstraintCollection.Clear%2A> </xref:System.Data.ConstraintCollection.Add%2A> I tillegg av <xref:System.Data.ConstraintCollection.Contains%2A>metoden kan brukes til å se om finnes en bestemt betingelse i samlingen.</xref:System.Data.ConstraintCollection.Contains%2A>       En <xref:System.Data.UniqueConstraint>opprettes når en <xref:System.Data.DataColumn>med den <xref:System.Data.DataColumn.Unique%2A>-egenskapen satt til `true` legges til et <xref:System.Data.DataTable>objekt <xref:System.Data.DataColumnCollection>.</xref:System.Data.DataColumnCollection> </xref:System.Data.DataTable> </xref:System.Data.DataColumn.Unique%2A> </xref:System.Data.DataColumn> </xref:System.Data.UniqueConstraint>       En <xref:System.Data.ForeignKeyConstraint>opprettes når en <xref:System.Data.DataRelation>legges til et <xref:System.Data.DataSet>objekt <xref:System.Data.DataRelationCollection>.</xref:System.Data.DataRelationCollection> </xref:System.Data.DataSet> </xref:System.Data.DataRelation> </xref:System.Data.ForeignKeyConstraint>"
  example:
  - "The first example creates a <xref:System.Data.DataTable>, and adds a <xref:System.Data.DataColumn> (with its <xref:System.Data.DataColumn.Unique%2A> property set to `true`) to the <xref:System.Data.DataColumnCollection>. The second example creates a <xref:System.Data.DataSet>, two <xref:System.Data.DataTable> objects, four columns, and a <xref:System.Data.DataRelation>. The count of constraints is then printed to show that a <xref:System.Data.ForeignKeyConstraint> and a <xref:System.Data.UniqueConstraint> are created when a <xref:System.Data.DataRelation> is added to the <xref:System.Data.DataSet> object's <xref:System.Data.DataRelationCollection.%23ctor%2A>.  \n  \n [!code-vb[Classic WebData ConstraintCollection Example#1](~/add/codesnippet/visualbasic/t-system.data.constraint_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection Example#1](~/add/codesnippet/csharp/t-system.data.constraint_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("CollectionChanged")]

      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ConstraintsCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public sealed class ConstraintCollection : System.Data.InternalDataCollectionBase
  inheritance:
  - System.Object
  - System.Data.InternalDataCollectionBase
  implements: []
  inheritedMembers:
  - System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)
  - System.Data.InternalDataCollectionBase.Count
  - System.Data.InternalDataCollectionBase.GetEnumerator
  - System.Data.InternalDataCollectionBase.IsReadOnly
  - System.Data.InternalDataCollectionBase.IsSynchronized
  - System.Data.InternalDataCollectionBase.SyncRoot
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Add(System.Data.Constraint)
  id: Add(System.Data.Constraint)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Add(Constraint)
  nameWithType: ConstraintCollection.Add(Constraint)
  fullName: System.Data.ConstraintCollection.Add(Constraint)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Legger til den angitte <xref href=&quot;System.Data.Constraint&quot;> </xref> objektet i samlingen."
  remarks: "Hvis samlingen er endret ved å legge til eller fjerne begrensninger, den <xref:System.Data.ConstraintCollection.CollectionChanged>inntreffer.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - "The following example adds a <xref:System.Data.UniqueConstraint> to the <xref:System.Data.ConstraintCollection> of a <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData ConstraintCollection.Add Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_2_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.Add Example#1](~/add/codesnippet/csharp/m-system.data.constraint_2_1.cs)]"
  syntax:
    content: public void Add (System.Data.Constraint constraint);
    parameters:
    - id: constraint
      type: System.Data.Constraint
      description: "The <xref uid=&quot;langword_csharp_Constraint&quot; name=&quot;Constraint&quot; href=&quot;&quot;></xref> to add."
  overload: System.Data.ConstraintCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <code> constraint </code> -argumentet er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Begrensningen allerede hører til i denne samlingen eller tilhører en annen samling."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "Samlingen allerede har en begrensning med samme navn. (Sammenligningen er skiller.)"
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)
  id: Add(System.String,System.Data.DataColumn,System.Boolean)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Add(String,DataColumn,Boolean)
  nameWithType: ConstraintCollection.Add(String,DataColumn,Boolean)
  fullName: System.Data.ConstraintCollection.Add(String,DataColumn,Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Bygger en ny <xref href=&quot;System.Data.UniqueConstraint&quot;> </xref> med det angitte navnet <xref href=&quot;System.Data.DataColumn&quot;> </xref>, og verdi som angir om kolonnen er en primærnøkkel, og legges til i samlingen."
  remarks: "Den <xref:System.Data.ConstraintCollection.CollectionChanged>hendelsen oppstår hvis betingelsen er lagt til.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - "The following example uses the <xref:System.Data.ConstraintCollection.Add%2A> method to create and add a new <xref:System.Data.UniqueConstraint> to a <xref:System.Data.ConstraintCollection>.  \n  \n [!code-vb[Classic WebData ConstraintCollection.Add2 Example#1](~/add/codesnippet/visualbasic/08c49299-33fb-4956-b60e-_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.Add2 Example#1](~/add/codesnippet/csharp/08c49299-33fb-4956-b60e-_1.cs)]"
  syntax:
    content: public System.Data.Constraint Add (string name, System.Data.DataColumn column, bool primaryKey);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på den <xref uid=&quot;langword_csharp_UniqueConstraint&quot; name=&quot;UniqueConstraint&quot; href=&quot;&quot;> </xref>."
    - id: column
      type: System.Data.DataColumn
      description: "Den <xref href=&quot;System.Data.DataColumn&quot;> </xref> begrensningen gjelder."
    - id: primaryKey
      type: System.Boolean
      description: "Angir om kolonnen skal være primærnøkkel. Hvis <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, kolonnen blir en primærnøkkelkolonne."
    return:
      type: System.Data.Constraint
      description: "A new <xref uid=&quot;langword_csharp_UniqueConstraint&quot; name=&quot;UniqueConstraint&quot; href=&quot;&quot;></xref>."
  overload: System.Data.ConstraintCollection.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Begrensningen tilhører allerede denne samlingen.       - Eller - begrensningen tilhører en annen samling."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "Samlingen allerede har en begrensning med det angitte navnet. (Sammenligningen er skiller.)"
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  id: Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Add(String,DataColumn,DataColumn)
  nameWithType: ConstraintCollection.Add(String,DataColumn,DataColumn)
  fullName: System.Data.ConstraintCollection.Add(String,DataColumn,DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Bygger en ny <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref> overordnede og underordnede med det angitte navnet, og legger til begrensningen i samlingen."
  remarks: "Den <xref:System.Data.ConstraintCollection.CollectionChanged>hendelsen oppstår hvis betingelsen er lagt til.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - "The following example adds a new <xref:System.Data.ForeignKeyConstraint> to the <xref:System.Data.ConstraintCollection> of a <xref:System.Data.DataTable>.  \n  \n [!code-cs[Classic WebData ConstraintCollection.Add3 Example#1](~/add/codesnippet/csharp/0f033e89-31da-4fc4-b9fb-_1.cs)]\n [!code-vb[Classic WebData ConstraintCollection.Add3 Example#1](~/add/codesnippet/visualbasic/0f033e89-31da-4fc4-b9fb-_1.vb)]"
  syntax:
    content: public System.Data.Constraint Add (string name, System.Data.DataColumn primaryKeyColumn, System.Data.DataColumn foreignKeyColumn);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på den <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref>."
    - id: primaryKeyColumn
      type: System.Data.DataColumn
      description: "Primærnøkkelen eller overordnet <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
    - id: foreignKeyColumn
      type: System.Data.DataColumn
      description: "Sekundærnøkkelen eller underordnet, <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
    return:
      type: System.Data.Constraint
      description: "A new <xref uid=&quot;langword_csharp_ForeignKeyConstraint&quot; name=&quot;ForeignKeyConstraint&quot; href=&quot;&quot;></xref>."
  overload: System.Data.ConstraintCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)
  id: Add(System.String,System.Data.DataColumn[],System.Boolean)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Add(String,DataColumn[],Boolean)
  nameWithType: ConstraintCollection.Add(String,DataColumn[],Boolean)
  fullName: System.Data.ConstraintCollection.Add(String,DataColumn[],Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Bygger en ny <xref href=&quot;System.Data.UniqueConstraint&quot;> </xref> med det angitte navnet, rekke <xref href=&quot;System.Data.DataColumn&quot;> </xref> objekter og verdi som angir om kolonnen er en primærnøkkel, og legges til i samlingen."
  remarks: "Den <xref:System.Data.ConstraintCollection.CollectionChanged>hendelsen oppstår hvis betingelsen er lagt til.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - "The following example creates an array of <xref:System.Data.DataColumn> objects that are used to create a new <xref:System.Data.UniqueConstraint> in a specific <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData ConstraintCollection.Add1 Example#1](~/add/codesnippet/visualbasic/716b020f-3b2b-4515-aaa4-_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.Add1 Example#1](~/add/codesnippet/csharp/716b020f-3b2b-4515-aaa4-_1.cs)]"
  syntax:
    content: public System.Data.Constraint Add (string name, System.Data.DataColumn[] columns, bool primaryKey);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på den <xref href=&quot;System.Data.UniqueConstraint&quot;> </xref>."
    - id: columns
      type: System.Data.DataColumn[]
      description: "En matrise av <xref href=&quot;System.Data.DataColumn&quot;> </xref> objekter som begrensningen gjelder."
    - id: primaryKey
      type: System.Boolean
      description: "Angir om kolonnen skal være primærnøkkel. Hvis <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, kolonnen blir en primærnøkkelkolonne."
    return:
      type: System.Data.Constraint
      description: "A new <xref uid=&quot;langword_csharp_UniqueConstraint&quot; name=&quot;UniqueConstraint&quot; href=&quot;&quot;></xref>."
  overload: System.Data.ConstraintCollection.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Begrensningen tilhører allerede denne samlingen.       - Eller - begrensningen tilhører en annen samling."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "Samlingen allerede har en begrensning med det angitte navnet. (Sammenligningen er skiller.)"
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  id: Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Add(String,DataColumn[],DataColumn[])
  nameWithType: ConstraintCollection.Add(String,DataColumn[],DataColumn[])
  fullName: System.Data.ConstraintCollection.Add(String,DataColumn[],DataColumn[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Bygger en ny <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref>, med de angitte matrisene med overordnede og underordnede kolonner og legger til begrensningen i samlingen."
  remarks: "Den <xref:System.Data.ConstraintCollection.CollectionChanged>hendelsen oppstår hvis betingelsen er lagt til.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - "The following example creates two arrays of <xref:System.Data.DataColumn> objects, and then creates two <xref:System.Data.ForeignKeyConstraint> relationships between two tables in a dataset.  \n  \n [!code-cs[Classic WebData ConstraintCollection.Add4 Example#1](~/add/codesnippet/csharp/050b7657-d2ac-4ddc-a26f-_1.cs)]\n [!code-vb[Classic WebData ConstraintCollection.Add4 Example#1](~/add/codesnippet/visualbasic/050b7657-d2ac-4ddc-a26f-_1.vb)]"
  syntax:
    content: public System.Data.Constraint Add (string name, System.Data.DataColumn[] primaryKeyColumns, System.Data.DataColumn[] foreignKeyColumns);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på den <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref>."
    - id: primaryKeyColumns
      type: System.Data.DataColumn[]
      description: "En matrise av <xref href=&quot;System.Data.DataColumn&quot;> </xref> objekter som primærnøkkelen eller overordnet kolonnene."
    - id: foreignKeyColumns
      type: System.Data.DataColumn[]
      description: "En matrise av <xref href=&quot;System.Data.DataColumn&quot;> </xref> objekter som sekundærnøkkel eller underordnet,-kolonner."
    return:
      type: System.Data.Constraint
      description: "A new <xref uid=&quot;langword_csharp_ForeignKeyConstraint&quot; name=&quot;ForeignKeyConstraint&quot; href=&quot;&quot;></xref>."
  overload: System.Data.ConstraintCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])
  id: AddRange(System.Data.Constraint[])
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: AddRange(Constraint[])
  nameWithType: ConstraintCollection.AddRange(Constraint[])
  fullName: System.Data.ConstraintCollection.AddRange(Constraint[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Overfører av elementene i den angitte <xref href=&quot;System.Data.ConstraintCollection&quot;> </xref> matrisen til slutten av samlingen."
  remarks: "Hvis <xref:System.Data.DataTable.BeginInit%2A>er blitt kalt `AddRange` legges ikke alle objekter i samlingen før <xref:System.Data.DataTable.EndInit%2A>kalles.</xref:System.Data.DataTable.EndInit%2A> </xref:System.Data.DataTable.BeginInit%2A> Da som `EndInit` er kalt, samlingen vil bli fylt med elementer som er angitt i det nyeste kallet til `AddRange`. Hvis `AddRange` kalles flere ganger i en `BeginInit`  /  `EndInit` sekvensnummer bare elementene som er angitt i det nyeste kallet til `AddRange` er lagt til."
  example:
  - "The following example creates primary and foreign key constraints, and adds them to the <xref:System.Data.ConstraintCollection>.  \n  \n [!code-vb[Classic WebData ConstraintCollection.AddRange Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_1_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.AddRange Example#1](~/add/codesnippet/csharp/m-system.data.constraint_1_1.cs)]"
  syntax:
    content: public void AddRange (System.Data.Constraint[] constraints);
    parameters:
    - id: constraints
      type: System.Data.Constraint[]
      description: "En matrise av <xref href=&quot;System.Data.ConstraintCollection&quot;> </xref> objekter for å legge til i samlingen."
  overload: System.Data.ConstraintCollection.AddRange*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)
  id: CanRemove(System.Data.Constraint)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: CanRemove(Constraint)
  nameWithType: ConstraintCollection.CanRemove(Constraint)
  fullName: System.Data.ConstraintCollection.CanRemove(Constraint)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Angir om en <xref href=&quot;System.Data.Constraint&quot;> </xref> kan fjernes."
  remarks: "Standard virkemåte når en <xref:System.Data.DataRelation>legges til i en <xref:System.Data.DataSet>, er å legge til en <xref:System.Data.ForeignKeyConstraint>i den overordnede tabellen og en <xref:System.Data.UniqueConstraint>i den underordnede tabellen.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataSet> </xref:System.Data.DataRelation> Den <xref:System.Data.UniqueConstraint>brukes til primærnøkkelkolonnen av den overordnede tabellen og <xref:System.Data.ForeignKeyConstraint>brukes på sekundærnøkkelkolonnen av den underordnede tabellen.</xref:System.Data.ForeignKeyConstraint> </xref:System.Data.UniqueConstraint> Fordi du prøver å fjerne den <xref:System.Data.UniqueConstraint>før du fjerner den <xref:System.Data.ForeignKeyConstraint>årsakene et unntak for å bli utløst, bør du alltid bruke metoden CanRemove før du kaller Fjern, forsikre deg om at det <xref:System.Data.UniqueConstraint>kan fjernes.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.UniqueConstraint>"
  example:
  - "The following example uses the CanRemove method to determine whether a <xref:System.Data.Constraint> can be removed, before trying to remove it.  \n  \n [!code-vb[Classic WebData ConstraintCollection.CanRemove Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_11_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.CanRemove Example#1](~/add/codesnippet/csharp/m-system.data.constraint_11_1.cs)]"
  syntax:
    content: public bool CanRemove (System.Data.Constraint constraint);
    parameters:
    - id: constraint
      type: System.Data.Constraint
      description: "Den <xref href=&quot;System.Data.Constraint&quot;> </xref> som skal testes for fjerning fra samlingen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den <xref href=&quot;System.Data.Constraint&quot;> </xref> kan være fjernet fra samling; ellers, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.ConstraintCollection.CanRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Clear
  id: Clear
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ConstraintCollection.Clear()
  fullName: System.Data.ConstraintCollection.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Fjerner samlingen av noen <xref href=&quot;System.Data.Constraint&quot;> </xref> objekter."
  remarks: "Den <xref:System.Data.ConstraintCollection.CollectionChanged>hendelsen oppstår hvis denne handlingen er fullført.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - "The following example clears all constraints from the <xref:System.Data.ConstraintCollection>.  \n  \n [!code-cs[Classic WebData ConstraintCollection.Clear Example#1](~/add/codesnippet/csharp/m-system.data.constraint_8_1.cs)]\n [!code-vb[Classic WebData ConstraintCollection.Clear Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_8_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Data.ConstraintCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.CollectionChanged
  id: CollectionChanged
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: ConstraintCollection.CollectionChanged
  fullName: System.Data.ConstraintCollection.CollectionChanged
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Forekommer når den <xref href=&quot;System.Data.ConstraintCollection&quot;> </xref> endres fordi <xref href=&quot;System.Data.Constraint&quot;> </xref> objekter som legges til eller fjernet."
  remarks: 'Du finner mer informasjon om behandling av hendelser [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following example demonstrates how to use the CollectionChanged event.  \n  \n [!code-vb[Classic WebData ConstraintCollection.CollectionChanged Example#1](~/add/codesnippet/visualbasic/e-system.data.constraint_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.CollectionChanged Example#1](~/add/codesnippet/csharp/e-system.data.constraint_1.cs)]"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: ConstraintCollection.Contains(String)
  fullName: System.Data.ConstraintCollection.Contains(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Angir om den <xref href=&quot;System.Data.Constraint&quot;> </xref> av det angitte objektet finnes i samlingen."
  remarks: "Bruke Contains-metoden til å bestemme om den angitte <xref:System.Data.Constraint>finnes før du prøver å fjerne den fra samlingen.</xref:System.Data.Constraint> Du kan også bruke den <xref:System.Data.ConstraintCollection.CanRemove%2A>metode for å fastslå om en <xref:System.Data.Constraint>kan fjernes.</xref:System.Data.Constraint> </xref:System.Data.ConstraintCollection.CanRemove%2A>"
  example:
  - "The following example determines whether the specified <xref:System.Data.Constraint> exists in the <xref:System.Data.ConstraintCollection> before its deletion.  \n  \n [!code-cs[Classic WebData ConstraintCollection.Contains Example#1](~/add/codesnippet/csharp/m-system.data.constraint_6_1.cs)]\n [!code-vb[Classic WebData ConstraintCollection.Contains Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_6_1.vb)]"
  syntax:
    content: public bool Contains (string name);
    parameters:
    - id: name
      type: System.String
      description: "Den <xref:System.Data.Constraint.ConstraintName*>av begrensningen.</xref:System.Data.Constraint.ConstraintName*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis samlingen inneholder den angitte begrensningen; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.ConstraintCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)
  id: CopyTo(System.Data.Constraint[],System.Int32)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: CopyTo(Constraint[],Int32)
  nameWithType: ConstraintCollection.CopyTo(Constraint[],Int32)
  fullName: System.Data.ConstraintCollection.CopyTo(Constraint[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kopierer samlingen-objekter til en endimensjonal <xref:System.Array>forekomst Start fra den angitte indeksen.</xref:System.Array>"
  syntax:
    content: public void CopyTo (System.Data.Constraint[] array, int index);
    parameters:
    - id: array
      type: System.Data.Constraint[]
      description: "Den endimensjonal <xref:System.Array>som er målet for verdiene kopiert fra samlingen.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Indeksen for matrisen vil starte innsetting."
  overload: System.Data.ConstraintCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)
  id: IndexOf(System.Data.Constraint)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: IndexOf(Constraint)
  nameWithType: ConstraintCollection.IndexOf(Constraint)
  fullName: System.Data.ConstraintCollection.IndexOf(Constraint)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Henter indeksen for den angitte <xref href=&quot;System.Data.Constraint&quot;> </xref>."
  remarks: "Bruke IndexOf-metoden til å returnere en indeks som skal brukes med enten den <xref:System.Data.ConstraintCollection.Contains%2A>eller <xref:System.Data.ConstraintCollection.Remove%2A>metode.</xref:System.Data.ConstraintCollection.Remove%2A> </xref:System.Data.ConstraintCollection.Contains%2A>"
  example:
  - "The following example uses the IndexOf method to return the index of a <xref:System.Data.Constraint>. The index is passed to the <xref:System.Data.ConstraintCollection.Contains%2A> method, before it is removed, to determine whether the collection contains the constraint.  \n  \n [!code-vb[Classic WebData ConstraintCollection.IndexOf1 Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_4_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.IndexOf1 Example#1](~/add/codesnippet/csharp/m-system.data.constraint_4_1.cs)]"
  syntax:
    content: public int IndexOf (System.Data.Constraint constraint);
    parameters:
    - id: constraint
      type: System.Data.Constraint
      description: "Den <xref href=&quot;System.Data.Constraint&quot;> </xref> til å søke etter."
    return:
      type: System.Int32
      description: "Den nullbaserte indeksen for den <xref href=&quot;System.Data.Constraint&quot;> </xref> hvis den er i samlingen; ellers, -1."
  overload: System.Data.ConstraintCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: ConstraintCollection.IndexOf(String)
  fullName: System.Data.ConstraintCollection.IndexOf(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Henter indeksen for den <xref href=&quot;System.Data.Constraint&quot;> </xref> angitt etter navn."
  remarks: "Bruk av <xref:System.Data.ConstraintCollection.IndexOf%2A>metode til å returnere en indeks som skal brukes med enten den <xref:System.Data.ConstraintCollection.Contains%2A>eller <xref:System.Data.ConstraintCollection.Remove%2A>metode.</xref:System.Data.ConstraintCollection.Remove%2A> </xref:System.Data.ConstraintCollection.Contains%2A> </xref:System.Data.ConstraintCollection.IndexOf%2A>"
  example:
  - "The following example uses the <xref:System.Data.ConstraintCollection.IndexOf%2A> method to return the index of a <xref:System.Data.Constraint>. The index is passed to the <xref:System.Data.ConstraintCollection.Contains%2A> method to determine whether the collection contains the constraint, before removing it.  \n  \n [!code-vb[Classic WebData ConstraintCollection.IndexOf Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_0_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.IndexOf Example#1](~/add/codesnippet/csharp/m-system.data.constraint_0_1.cs)]"
  syntax:
    content: public int IndexOf (string constraintName);
    parameters:
    - id: constraintName
      type: System.String
      description: "Navnet på den <xref href=&quot;System.Data.Constraint&quot;> </xref>."
    return:
      type: System.Int32
      description: "Indeksen for den <xref href=&quot;System.Data.Constraint&quot;> </xref> hvis den er i samlingen; ellers, -1."
  overload: System.Data.ConstraintCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ConstraintCollection.Item(Int32)
  fullName: System.Data.ConstraintCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Henter den <xref href=&quot;System.Data.Constraint&quot;> </xref> fra samlingen i den angitte indeksen."
  remarks: "Bruk av <xref:System.Data.ConstraintCollection.Contains%2A>metode for å teste for forekomsten av en bestemt betingelse.</xref:System.Data.ConstraintCollection.Contains%2A>"
  example:
  - "The following example gets each <xref:System.Data.Constraint> from the <xref:System.Data.ConstraintCollection>.  \n  \n [!code-vb[Classic WebData ConstraintCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.data.constraint_2_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.this Example#1](~/add/codesnippet/csharp/p-system.data.constraint_2_1.cs)]"
  syntax:
    content: public System.Data.Constraint this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Indeksen for begrensningen skal returneres."
    return:
      type: System.Data.Constraint
      description: "Den <xref href=&quot;System.Data.Constraint&quot;> </xref> i den angitte indeksen."
  overload: System.Data.ConstraintCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Indeksverdien for er større enn antallet elementer i samlingen."
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: ConstraintCollection.Item(String)
  fullName: System.Data.ConstraintCollection.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Henter den <xref href=&quot;System.Data.Constraint&quot;> </xref> fra samlingen med det angitte navnet."
  remarks: "Bruk av <xref:System.Data.ConstraintCollection.Contains%2A>metode for å teste for forekomsten av en bestemt betingelse.</xref:System.Data.ConstraintCollection.Contains%2A>"
  example:
  - "The following example gets the named <xref:System.Data.Constraint>.  \n  \n [!code-cs[Classic WebData ConstraintCollection.this1 Example#1](~/add/codesnippet/csharp/p-system.data.constraint_3_1.cs)]\n [!code-vb[Classic WebData ConstraintCollection.this1 Example#1](~/add/codesnippet/visualbasic/p-system.data.constraint_3_1.vb)]"
  syntax:
    content: public System.Data.Constraint this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "Den <xref:System.Data.Constraint.ConstraintName*>på begrensningen som skal returneres.</xref:System.Data.Constraint.ConstraintName*>"
    return:
      type: System.Data.Constraint
      description: "Den <xref href=&quot;System.Data.Constraint&quot;> </xref> med det angitte navnet; hvis en null-verdi hvis den <xref href=&quot;System.Data.Constraint&quot;> </xref> finnes ikke."
  overload: System.Data.ConstraintCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.List
  id: List
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: List
  nameWithType: ConstraintCollection.List
  fullName: System.Data.ConstraintCollection.List
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  syntax:
    content: protected override System.Collections.ArrayList List { get; }
    return:
      type: System.Collections.ArrayList
      description: "Som skal legges til."
  overload: System.Data.ConstraintCollection.List*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Remove(System.Data.Constraint)
  id: Remove(System.Data.Constraint)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Remove(Constraint)
  nameWithType: ConstraintCollection.Remove(Constraint)
  fullName: System.Data.ConstraintCollection.Remove(Constraint)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Fjerner det angitte <xref href=&quot;System.Data.Constraint&quot;> </xref> fra samlingen."
  remarks: "Før du bruker den `Remove` metoden, kan du bruke den <xref:System.Data.ConstraintCollection.Contains%2A>metode for å fastslå om samlingen inneholder målet <xref:System.Data.Constraint>, og <xref:System.Data.ConstraintCollection.CanRemove%2A>metode for å fastslå om en <xref:System.Data.Constraint>kan fjernes.</xref:System.Data.Constraint> </xref:System.Data.ConstraintCollection.CanRemove%2A> </xref:System.Data.Constraint> </xref:System.Data.ConstraintCollection.Contains%2A>       Den <xref:System.Data.ConstraintCollection.CollectionChanged>hendelsen oppstår hvis betingelsen er fjernet.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - >-
    [!code-cs[Classic WebData ConstraintCollection.Remove Example#1](~/add/codesnippet/csharp/m-system.data.constraint_9_1.cs)]
     [!code-vb[Classic WebData ConstraintCollection.Remove Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_9_1.vb)]
  syntax:
    content: public void Remove (System.Data.Constraint constraint);
    parameters:
    - id: constraint
      type: System.Data.Constraint
      description: "Den <xref href=&quot;System.Data.Constraint&quot;> </xref> fjerne."
  overload: System.Data.ConstraintCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>constraint</code> argument is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Begrensningen hører ikke til samlingen."
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: ConstraintCollection.Remove(String)
  fullName: System.Data.ConstraintCollection.Remove(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Fjerner det <xref href=&quot;System.Data.Constraint&quot;> </xref> objektet som er angitt med navnet fra samlingen."
  remarks: "Før du bruker den `Remove` metoden, kan du bruke den <xref:System.Data.ConstraintCollection.Contains%2A>metode for å fastslå om samlingen inneholder målet <xref:System.Data.Constraint>, og <xref:System.Data.ConstraintCollection.CanRemove%2A>metode for å fastslå om en <xref:System.Data.Constraint>kan fjernes.</xref:System.Data.Constraint> </xref:System.Data.ConstraintCollection.CanRemove%2A> </xref:System.Data.Constraint> </xref:System.Data.ConstraintCollection.Contains%2A>       Den <xref:System.Data.ConstraintCollection.CollectionChanged>hendelsen oppstår hvis betingelsen er fjernet.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - "The following example removes a <xref:System.Data.Constraint> from a <xref:System.Data.ConstraintCollection> after testing for its presence with the <xref:System.Data.ConstraintCollection.Contains%2A> method, and whether it can be removed with the <xref:System.Data.ConstraintCollection.CanRemove%2A> method.  \n  \n [!code-vb[Classic WebData ConstraintCollection.Remove1 Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_5_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.Remove1 Example#1](~/add/codesnippet/csharp/m-system.data.constraint_5_1.cs)]"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på den <xref href=&quot;System.Data.Constraint&quot;> </xref> fjerne."
  overload: System.Data.ConstraintCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: ConstraintCollection.RemoveAt(Int32)
  fullName: System.Data.ConstraintCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Fjerner det <xref href=&quot;System.Data.Constraint&quot;> </xref> objektet i den angitte indeksen fra samlingen."
  remarks: "<xref:System.Data.ConstraintCollection.IndexOf%2A>Metoden returnerer indeksen for en bestemt <xref:System.Data.Constraint>.</xref:System.Data.Constraint> </xref:System.Data.ConstraintCollection.IndexOf%2A>       Før du bruker den `RemoveAt` metoden, kan du bruke den <xref:System.Data.ConstraintCollection.Contains%2A>metode for å fastslå om samlingen inneholder målet <xref:System.Data.Constraint>, og <xref:System.Data.ConstraintCollection.CanRemove%2A>metode for å fastslå om en <xref:System.Data.Constraint>kan fjernes.</xref:System.Data.Constraint> </xref:System.Data.ConstraintCollection.CanRemove%2A> </xref:System.Data.Constraint> </xref:System.Data.ConstraintCollection.Contains%2A>       Den <xref:System.Data.ConstraintCollection.CollectionChanged>hendelsen oppstår hvis betingelsen er fjernet.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - "The following example uses the <xref:System.Data.ConstraintCollection.IndexOf%2A> method together with the RemoveAt method to remove a constraint from the <xref:System.Data.ConstraintCollection>.  \n  \n [!code-cs[Classic WebData ConstraintCollection.RemoveAt Example#1](~/add/codesnippet/csharp/m-system.data.constraint_7_1.cs)]\n [!code-vb[Classic WebData ConstraintCollection.RemoveAt Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_7_1.vb)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Indeksen for den <xref href=&quot;System.Data.Constraint&quot;> </xref> fjerne."
  overload: System.Data.ConstraintCollection.RemoveAt*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Samlingen har ikke en begrensning på denne indeksen."
  platform:
  - net462
references:
- uid: System.Data.InternalDataCollectionBase
  isExternal: false
  name: System.Data.InternalDataCollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.DuplicateNameException
  parent: System.Data
  isExternal: false
  name: DuplicateNameException
  nameWithType: DuplicateNameException
  fullName: System.Data.DuplicateNameException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.ConstraintCollection.Add(System.Data.Constraint)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Add(Constraint)
  nameWithType: ConstraintCollection.Add(Constraint)
  fullName: System.Data.ConstraintCollection.Add(Constraint)
- uid: System.Data.Constraint
  parent: System.Data
  isExternal: false
  name: Constraint
  nameWithType: Constraint
  fullName: System.Data.Constraint
- uid: System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Add(String,DataColumn,Boolean)
  nameWithType: ConstraintCollection.Add(String,DataColumn,Boolean)
  fullName: System.Data.ConstraintCollection.Add(String,DataColumn,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Add(String,DataColumn,DataColumn)
  nameWithType: ConstraintCollection.Add(String,DataColumn,DataColumn)
  fullName: System.Data.ConstraintCollection.Add(String,DataColumn,DataColumn)
- uid: System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Add(String,DataColumn[],Boolean)
  nameWithType: ConstraintCollection.Add(String,DataColumn[],Boolean)
  fullName: System.Data.ConstraintCollection.Add(String,DataColumn[],Boolean)
- uid: System.Data.DataColumn[]
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
  spec.csharp:
  - uid: System.Data.DataColumn
    name: DataColumn
    nameWithType: DataColumn
    fullName: DataColumn[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Add(String,DataColumn[],DataColumn[])
  nameWithType: ConstraintCollection.Add(String,DataColumn[],DataColumn[])
  fullName: System.Data.ConstraintCollection.Add(String,DataColumn[],DataColumn[])
- uid: System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: AddRange(Constraint[])
  nameWithType: ConstraintCollection.AddRange(Constraint[])
  fullName: System.Data.ConstraintCollection.AddRange(Constraint[])
- uid: System.Data.Constraint[]
  parent: System.Data
  isExternal: false
  name: Constraint
  nameWithType: Constraint
  fullName: System.Data.Constraint[]
  spec.csharp:
  - uid: System.Data.Constraint
    name: Constraint
    nameWithType: Constraint
    fullName: Constraint[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: CanRemove(Constraint)
  nameWithType: ConstraintCollection.CanRemove(Constraint)
  fullName: System.Data.ConstraintCollection.CanRemove(Constraint)
- uid: System.Data.ConstraintCollection.Clear
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Clear()
  nameWithType: ConstraintCollection.Clear()
  fullName: System.Data.ConstraintCollection.Clear()
- uid: System.Data.ConstraintCollection.CollectionChanged
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: CollectionChanged
  nameWithType: ConstraintCollection.CollectionChanged
  fullName: System.Data.ConstraintCollection.CollectionChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Data.ConstraintCollection.Contains(System.String)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Contains(String)
  nameWithType: ConstraintCollection.Contains(String)
  fullName: System.Data.ConstraintCollection.Contains(String)
- uid: System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: CopyTo(Constraint[],Int32)
  nameWithType: ConstraintCollection.CopyTo(Constraint[],Int32)
  fullName: System.Data.ConstraintCollection.CopyTo(Constraint[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: IndexOf(Constraint)
  nameWithType: ConstraintCollection.IndexOf(Constraint)
  fullName: System.Data.ConstraintCollection.IndexOf(Constraint)
- uid: System.Data.ConstraintCollection.IndexOf(System.String)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: ConstraintCollection.IndexOf(String)
  fullName: System.Data.ConstraintCollection.IndexOf(String)
- uid: System.Data.ConstraintCollection.Item(System.Int32)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: ConstraintCollection.Item(Int32)
  fullName: System.Data.ConstraintCollection.Item(Int32)
- uid: System.Data.ConstraintCollection.Item(System.String)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Item(String)
  nameWithType: ConstraintCollection.Item(String)
  fullName: System.Data.ConstraintCollection.Item(String)
- uid: System.Data.ConstraintCollection.List
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: List
  nameWithType: ConstraintCollection.List
  fullName: System.Data.ConstraintCollection.List
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Data.ConstraintCollection.Remove(System.Data.Constraint)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Remove(Constraint)
  nameWithType: ConstraintCollection.Remove(Constraint)
  fullName: System.Data.ConstraintCollection.Remove(Constraint)
- uid: System.Data.ConstraintCollection.Remove(System.String)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Remove(String)
  nameWithType: ConstraintCollection.Remove(String)
  fullName: System.Data.ConstraintCollection.Remove(String)
- uid: System.Data.ConstraintCollection.RemoveAt(System.Int32)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: ConstraintCollection.RemoveAt(Int32)
  fullName: System.Data.ConstraintCollection.RemoveAt(Int32)
- uid: System.Data.ConstraintCollection.Add*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Add
  nameWithType: ConstraintCollection.Add
- uid: System.Data.ConstraintCollection.AddRange*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: AddRange
  nameWithType: ConstraintCollection.AddRange
- uid: System.Data.ConstraintCollection.CanRemove*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: CanRemove
  nameWithType: ConstraintCollection.CanRemove
- uid: System.Data.ConstraintCollection.Clear*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Clear
  nameWithType: ConstraintCollection.Clear
- uid: System.Data.ConstraintCollection.Contains*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Contains
  nameWithType: ConstraintCollection.Contains
- uid: System.Data.ConstraintCollection.CopyTo*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: CopyTo
  nameWithType: ConstraintCollection.CopyTo
- uid: System.Data.ConstraintCollection.IndexOf*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: IndexOf
  nameWithType: ConstraintCollection.IndexOf
- uid: System.Data.ConstraintCollection.Item*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Item
  nameWithType: ConstraintCollection.Item
- uid: System.Data.ConstraintCollection.List*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: List
  nameWithType: ConstraintCollection.List
- uid: System.Data.ConstraintCollection.Remove*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Remove
  nameWithType: ConstraintCollection.Remove
- uid: System.Data.ConstraintCollection.RemoveAt*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: RemoveAt
  nameWithType: ConstraintCollection.RemoveAt
