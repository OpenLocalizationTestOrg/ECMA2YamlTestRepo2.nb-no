### YamlMime:ManagedReference
items:
- uid: System.Transactions.IEnlistmentNotification
  id: IEnlistmentNotification
  children:
  - System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)
  - System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)
  - System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)
  - System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)
  langs:
  - csharp
  name: IEnlistmentNotification
  nameWithType: IEnlistmentNotification
  fullName: System.Transactions.IEnlistmentNotification
  type: Interface
  summary: "Beskriver et grensesnitt som en ressursansvarlig skal implementere for å gi to fase commit varsling tilbakeringinger for transaksjonsbehandling når innrullering for deltakelse."
  remarks: "At en ressursansvarlig delta i en transaksjon, må den registrere i transaksjonen via transaksjonsbehandling. Den <xref:System.Transactions.Transaction>klassen definerer et sett med metoder med navn som begynner med `Enlist` som har denne funksjonaliteten.</xref:System.Transactions.Transaction> De ulike `Enlist` metoder tilsvarer forskjellige typer oppføring som har en ressurs maanger.       Denne klassen beskriver et grensesnitt som en ressursansvarlig skal implementere for å gi to fase commit varsling tilbakeringinger for transaksjonsbehandling når innrullering for deltakelse. For hver ressursansvarlig implementering grensesnittet IEnlistmentNotification, må du registrere den ved hjelp av den <xref:System.Transactions.Transaction.EnlistVolatile%2A>metoden eller <xref:System.Transactions.Transaction.EnlistDurable%2A>-metoden for den <xref:System.Transactions.Transaction>klasse, avhengig av om ressursen er permanent eller robust.</xref:System.Transactions.Transaction> </xref:System.Transactions.Transaction.EnlistDurable%2A> </xref:System.Transactions.Transaction.EnlistVolatile%2A> Du finner mer informasjon om oppføring og 2PC [innrullering ressurser delta i en transaksjon](~/add/includes/ajax-current-ext-md.md) og [utførelse av en transaksjon i en-fase og flere fase](~/add/includes/ajax-current-ext-md.md) henholdsvis.       Transaksjonsbehandling varsler innrullerte objektet i ulike faser av to fase lagre protokollen via følgende metoder.      | Metoden | Beskrivelse |   |------------|-----------------|   | <xref:System.Transactions.IEnlistmentNotification.Prepare%2A>| Denne metoden for en innrullerte objektet brukes som et tilbakekall av transaksjonsbehandling i den første fasen av en transaksjon når transaksjonsbehandling spør deltakere om de kan utføre transaksjonen. |   | <xref:System.Transactions.IEnlistmentNotification.Commit%2A>| Denne metoden for en innrullerte objektet brukes som et tilbakekall av transaksjonsbehandling under fase av en transaksjon hvis transaksjonen er Faslagt. |   | <xref:System.Transactions.IEnlistmentNotification.Rollback%2A>| Denne metoden for en innrullerte objektet brukes som et tilbakekall av transaksjonsbehandling under fase av en transaksjon hvis transaksjonen avbrytes (som, rulles tilbake). |   | <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>| Denne metoden for en innrullerte objektet brukes som et tilbakekall av transaksjonsbehandling under fase av en transaksjon hvis transaksjonen er i tvil. |      > [!NOTE] > Vær oppmerksom på at varsler ikke kan sendes sekvensielt eller i en bestemt rekkefølge.</xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> </xref:System.Transactions.IEnlistmentNotification.Rollback%2A> </xref:System.Transactions.IEnlistmentNotification.Commit%2A> </xref:System.Transactions.IEnlistmentNotification.Prepare%2A>"
  example:
  - "The following example shows an implementation of this interface, as well as enlisting the object as a participant in a transaction using the <xref:System.Transactions.Transaction.EnlistVolatile%2A> method.  \n  \n [!code-cs[Tx_Enlist#1](~/add/codesnippet/csharp/t-system.transactions.ie_1.cs)]\n [!code-vb[Tx_Enlist#1](~/add/codesnippet/visualbasic/t-system.transactions.ie_1.vb)]"
  syntax:
    content: public interface IEnlistmentNotification
  implements: []
  platform:
  - net462
- uid: System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)
  id: Commit(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  langs:
  - csharp
  name: Commit(Enlistment)
  nameWithType: IEnlistmentNotification.Commit(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.Commit(Enlistment)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Varsler en innrullerte objekt en transaksjon lagres."
  remarks: "Transaksjonsbehandling kaller denne metoden for innrullerte objekt under fase av en avtale, når den angir at alle brukere å utføre transaksjonen.       Ressursbehandling må utføre arbeid nødvendig for å fullføre transaksjonen, og informere TM er fullført ved å ringe det <xref:System.Transactions.Enlistment.Done%2A>-metoden på den `enlistment` parameteren.</xref:System.Transactions.Enlistment.Done%2A>       Hvis ressursbehandling er oppført robust, men ikke svarer ved å kalle <xref:System.Transactions.Enlistment.Done%2A>metoden transaksjonsbehandling er sikker på at Ressursbehandling har mottatt Commit-kall.</xref:System.Transactions.Enlistment.Done%2A> Som en transaksjonsbehandling beholder venter på svar, og beholder informasjon som er relevante for denne transaksjonen.  Hvis <xref:System.Transactions.Enlistment.Done%2A>er aldri kalles denne opplysning holdes rundt på ubestemt tid i minnet eller i en systemomfattende ressurs.</xref:System.Transactions.Enlistment.Done%2A> Dette resulterer i ressurser som ikke kunne være gode. Hvis det er en distribuert transaksjon, kan dette oppgavestatusen fylt MSDTC-loggen som stanser MSDTC-tjenesten. Hvis det er en transaksjon som administreres av <xref:System.Transactions>, dette fører til en gradvis og kontinuerlige økning i minneforbruk av prosessen for ressursbehandlingen.</xref:System.Transactions> Det er derfor viktig at du ringer den <xref:System.Transactions.Enlistment.Done%2A>metoden når ressursbehandlingen er ferdig med din forberede jobb.</xref:System.Transactions.Enlistment.Done%2A>"
  syntax:
    content: public void Commit (System.Transactions.Enlistment enlistment);
    parameters:
    - id: enlistment
      type: System.Transactions.Enlistment
      description: "En <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> objektet brukes til å svare på transaksjonsbehandling."
  overload: System.Transactions.IEnlistmentNotification.Commit*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)
  id: InDoubt(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  langs:
  - csharp
  name: InDoubt(Enlistment)
  nameWithType: IEnlistmentNotification.InDoubt(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.InDoubt(Enlistment)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Varsler et innrullerte objekt statusen for en transaksjon er i tvil."
  remarks: "Denne metoden kalles for midlertidig ressurser når transaction manager har startet en enkel fase bekreftelsesoperasjon til en enkelt robust ressurs, og deretter tilkobling til robust ressursen ble avbrutt før henting transaksjonen resultatet. På dette tidspunktet kan transaksjonsutfallet trygt fastslås.       Som inneholder usikre vurderes som en endelig tilstand for en transaksjon, du kan ikke kalle <xref:System.Transactions.IEnlistmentNotification.Commit%2A>eller <xref:System.Transactions.IEnlistmentNotification.Rollback%2A>etter kaller inneholder usikre.</xref:System.Transactions.IEnlistmentNotification.Rollback%2A> </xref:System.Transactions.IEnlistmentNotification.Commit%2A>      > [!NOTE] > Implementeringen av denne metoden for den midlertidige ressursen må utføre uansett gjenoppretting eller oppbevaring operasjonen den forstår på berørte dataene.  Den må også kalle den <xref:System.Transactions.Enlistment.Done%2A>-metoden på den på den `enlistment` parameteren når den er fullført i arbeidet.</xref:System.Transactions.Enlistment.Done%2A>       Hvis ressursbehandling er oppført robust, men ikke svarer ved å kalle <xref:System.Transactions.Enlistment.Done%2A>metoden transaksjonsbehandling er sikker på at Ressursbehandling har mottatt inneholder usikre-kall.</xref:System.Transactions.Enlistment.Done%2A> Som en transaksjonsbehandling beholder venter på svar, og beholder informasjon som er relevante for denne transaksjonen.  Hvis <xref:System.Transactions.Enlistment.Done%2A>er aldri kalles denne opplysning holdes rundt på ubestemt tid i minnet eller i en systemomfattende ressurs.</xref:System.Transactions.Enlistment.Done%2A> Dette resulterer i ressurser som ikke kunne være gode. Hvis det er en distribuert transaksjon, kan dette oppgavestatusen fylt MSDTC-loggen som stanser MSDTC-tjenesten. Hvis det er en transaksjon som administreres av <xref:System.Transactions>, dette fører til en gradvis og kontinuerlige økning i minneforbruk av prosessen for ressursbehandlingen.</xref:System.Transactions> Det er derfor viktig at du ringer den <xref:System.Transactions.Enlistment.Done%2A>metoden når ressursbehandlingen er ferdig med din forberede jobb.</xref:System.Transactions.Enlistment.Done%2A>"
  syntax:
    content: public void InDoubt (System.Transactions.Enlistment enlistment);
    parameters:
    - id: enlistment
      type: System.Transactions.Enlistment
      description: "En <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> objektet brukes til å svare på transaksjonsbehandling."
  overload: System.Transactions.IEnlistmentNotification.InDoubt*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)
  id: Prepare(System.Transactions.PreparingEnlistment)
  parent: System.Transactions.IEnlistmentNotification
  langs:
  - csharp
  name: Prepare(PreparingEnlistment)
  nameWithType: IEnlistmentNotification.Prepare(PreparingEnlistment)
  fullName: System.Transactions.IEnlistmentNotification.Prepare(PreparingEnlistment)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Varsler et innrullerte objekt som en transaksjon forberedes for avtale."
  remarks: "Transaksjonsbehandling kaller opp denne metoden for en innrullerte ressurs manager under fase 1 av en avtale når du blir bedt om deltakere om de kan utføre transaksjonen.       Når du implementerer en robust ressursansvarlig, må du logge på forberede post i denne fasen. Oppføringen må inneholde all nødvendig informasjon for å utføre gjenoppretting. Dette omfatter den <xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A>egenskapen som er sendt til transaksjonsbehandlingen i den <xref:System.Transactions.TransactionManager.Reenlist%2A>metoden under gjenoppretting.</xref:System.Transactions.TransactionManager.Reenlist%2A> </xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A> Hvis du vil vite mer om gjenoppretting, se [utføre gjenoppretting](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691).       Din ressursbehandlingen skal fullføre alle arbeid som må fullføres før du kaller den <xref:System.Transactions.PreparingEnlistment.Prepared%2A>metoden for den `preparingEnlistment` parameteren til å angi svaret for avtale.</xref:System.Transactions.PreparingEnlistment.Prepared%2A> Du bør kontrollere at dette gjøres før varsling noen fase 2 slik som lagre tilbakerulling eller er i tvil. Fordi fase 2 varsler kan forekomme innebygd på samme tråd kalt den <xref:System.Transactions.PreparingEnlistment.Prepared%2A>metoden i fase 1.</xref:System.Transactions.PreparingEnlistment.Prepared%2A> Bør du ikke gjøre arbeid etter den <xref:System.Transactions.PreparingEnlistment.Prepared%2A>oppringing (for eksempel frigi låser) som du vil skal er fullført før du mottar fase 2-varsler.</xref:System.Transactions.PreparingEnlistment.Prepared%2A>       Du kan også kalle metoden for den `preparingEnlistment` parameteren til å angi et svar for tilbakerulling.       Hvis du vil objektet bare ser og reagere på fremdriften for transaksjonen, uten deltar i det implementeringen av denne metoden kan kontakte den <xref:System.Transactions.Enlistment.Done%2A>metoden for den `preparingEnlistment` parameteren når den er fullført i arbeidet.</xref:System.Transactions.Enlistment.Done%2A> På denne måten vil din ressursbehandlingen ikke motta en varsling som fase 2."
  syntax:
    content: public void Prepare (System.Transactions.PreparingEnlistment preparingEnlistment);
    parameters:
    - id: preparingEnlistment
      type: System.Transactions.PreparingEnlistment
      description: "En <xref href=&quot;System.Transactions.PreparingEnlistment&quot;> </xref> objektet brukes til å svare på transaksjonsbehandling."
  overload: System.Transactions.IEnlistmentNotification.Prepare*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)
  id: Rollback(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  langs:
  - csharp
  name: Rollback(Enlistment)
  nameWithType: IEnlistmentNotification.Rollback(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.Rollback(Enlistment)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Varsler et innrullerte objekt som en transaksjon er rullet tilbake (avbrutt)."
  remarks: "Transaksjonsbehandling kaller opp denne metoden for en innrullerte objektet når transaksjonen er rullet tilbake (avbrutt) på grunn av når én eller flere Transaksjonsdeltakere ikke gjennomføre transaksjonen.       Ressursbehandling må utføre arbeid nødvendig for å fullføre transaksjonen, og informere TM er fullført ved å ringe det <xref:System.Transactions.Enlistment.Done%2A>-metoden på den `enlistment` parameteren.</xref:System.Transactions.Enlistment.Done%2A>       Hvis ressursbehandling er oppført robust, men ikke svarer ved å kalle <xref:System.Transactions.Enlistment.Done%2A>metoden transaksjonsbehandling er sikker på at Ressursbehandling har mottatt Rollback-kall.</xref:System.Transactions.Enlistment.Done%2A> Som en transaksjonsbehandling beholder venter på svar, og beholder informasjon som er relevante for denne transaksjonen.  Hvis <xref:System.Transactions.Enlistment.Done%2A>er aldri kalles denne opplysning holdes rundt på ubestemt tid i minnet eller i en systemomfattende ressurs.</xref:System.Transactions.Enlistment.Done%2A> Dette resulterer i ressurser som ikke kunne være gode. Hvis det er en distribuert transaksjon, kan dette oppgavestatusen fylt MSDTC-loggen som stanser MSDTC-tjenesten. Hvis det er en transaksjon som administreres av <xref:System.Transactions>, dette fører til en gradvis og kontinuerlige økning i minneforbruk av prosessen for ressursbehandlingen.</xref:System.Transactions> Det er derfor viktig at du ringer den <xref:System.Transactions.Enlistment.Done%2A>metoden når ressursbehandlingen er ferdig med din forberede jobb.</xref:System.Transactions.Enlistment.Done%2A>"
  syntax:
    content: public void Rollback (System.Transactions.Enlistment enlistment);
    parameters:
    - id: enlistment
      type: System.Transactions.Enlistment
      description: "En <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> objektet brukes til å svare på transaksjonsbehandling."
  overload: System.Transactions.IEnlistmentNotification.Rollback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Commit(Enlistment)
  nameWithType: IEnlistmentNotification.Commit(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.Commit(Enlistment)
- uid: System.Transactions.Enlistment
  parent: System.Transactions
  isExternal: false
  name: Enlistment
  nameWithType: Enlistment
  fullName: System.Transactions.Enlistment
- uid: System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: InDoubt(Enlistment)
  nameWithType: IEnlistmentNotification.InDoubt(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.InDoubt(Enlistment)
- uid: System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Prepare(PreparingEnlistment)
  nameWithType: IEnlistmentNotification.Prepare(PreparingEnlistment)
  fullName: System.Transactions.IEnlistmentNotification.Prepare(PreparingEnlistment)
- uid: System.Transactions.PreparingEnlistment
  parent: System.Transactions
  isExternal: false
  name: PreparingEnlistment
  nameWithType: PreparingEnlistment
  fullName: System.Transactions.PreparingEnlistment
- uid: System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Rollback(Enlistment)
  nameWithType: IEnlistmentNotification.Rollback(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.Rollback(Enlistment)
- uid: System.Transactions.IEnlistmentNotification.Commit*
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Commit
  nameWithType: IEnlistmentNotification.Commit
- uid: System.Transactions.IEnlistmentNotification.InDoubt*
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: InDoubt
  nameWithType: IEnlistmentNotification.InDoubt
- uid: System.Transactions.IEnlistmentNotification.Prepare*
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Prepare
  nameWithType: IEnlistmentNotification.Prepare
- uid: System.Transactions.IEnlistmentNotification.Rollback*
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Rollback
  nameWithType: IEnlistmentNotification.Rollback
