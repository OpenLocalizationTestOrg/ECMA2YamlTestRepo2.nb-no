### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ExpandableObjectConverter
  id: ExpandableObjectConverter
  children:
  - System.ComponentModel.ExpandableObjectConverter.#ctor
  - System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: ExpandableObjectConverter
  nameWithType: ExpandableObjectConverter
  fullName: System.ComponentModel.ExpandableObjectConverter
  type: Class
  summary: "Gir et typen konverteringsprogram for å konvertere utvides objekter til og fra ulike representasjoner."
  remarks: "Denne klassen legger til støtte for egenskaper for et objekt for metoder og egenskaper som er angitt av <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter> Foreta en type for egenskapen utvides i <xref:System.Windows.Forms.PropertyGrid>må du angi dette <xref:System.ComponentModel.TypeConverter>for standard implementeringer og <xref:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported%2A> <xref:System.ComponentModel.ExpandableObjectConverter.GetProperties%2A>.</xref:System.ComponentModel.ExpandableObjectConverter.GetProperties%2A> </xref:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported%2A> </xref:System.ComponentModel.TypeConverter> </xref:System.Windows.Forms.PropertyGrid> Merk underordnede egenskaper med den <xref:System.ComponentModel.NotifyParentPropertyAttribute>slik at riktige virkemåte i en <xref:System.Windows.Forms.PropertyGrid>kontroll.</xref:System.Windows.Forms.PropertyGrid> </xref:System.ComponentModel.NotifyParentPropertyAttribute>      > [!NOTE] > Du bør aldri tilgang til en type konverteringsprogram direkte. I stedet kalle riktig konverteringsprogram ved hjelp av <xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor> For mer informasjon, kan du se eksemplene i <xref:System.ComponentModel.TypeConverter>basistabellen klasse.</xref:System.ComponentModel.TypeConverter>       Du finner mer informasjon om typen konverteringsprogrammer i <xref:System.ComponentModel.TypeConverter>basisklasse og [slik: implementere et konverteringsprogram av typen](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.TypeConverter>"
  example:
  - "The following code example converts a variable of type <xref:System.Drawing.Printing.Margins> to a string variable.  \n  \n [!code-cs[Converters#26](~/add/codesnippet/csharp/t-system.componentmodel._53_1.cs)]\n [!code-vb[Converters#26](~/add/codesnippet/visualbasic/t-system.componentmodel._53_1.vb)]\n [!code-cpp[Converters#26](~/add/codesnippet/cpp/t-system.componentmodel._53_1.cpp)]  \n  \n The following code example demonstrates how to use the <xref:System.ComponentModel.NotifyParentPropertyAttribute> and the ExpandableObjectConverter class to create an expandable property on a custom control. This code example is part of a larger example provided for the <xref:System.ComponentModel.NotifyParentPropertyAttribute> class.  \n  \n [!code-vb[System.ComponentModel.ExpandableObjectConverter#3](~/add/codesnippet/visualbasic/t-system.componentmodel._53_2.vb)]\n [!code-cs[System.ComponentModel.ExpandableObjectConverter#3](~/add/codesnippet/csharp/t-system.componentmodel._53_2.cs)]"
  syntax:
    content: 'public class ExpandableObjectConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.ComponentModel.ExpandableObjectConverter.#ctor
  id: '#ctor'
  parent: System.ComponentModel.ExpandableObjectConverter
  langs:
  - csharp
  name: ExpandableObjectConverter()
  nameWithType: ExpandableObjectConverter.ExpandableObjectConverter()
  fullName: System.ComponentModel.ExpandableObjectConverter.ExpandableObjectConverter()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.ComponentModel.ExpandableObjectConverter&quot;> </xref> klasse."
  syntax:
    content: public ExpandableObjectConverter ();
    parameters: []
  overload: System.ComponentModel.ExpandableObjectConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  id: GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.ExpandableObjectConverter
  langs:
  - csharp
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: ExpandableObjectConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.ComponentModel.ExpandableObjectConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Henter en samling med egenskaper for objekttypen angis av parameteren verdi."
  remarks: "Den `context` parameter kan brukes til å trekke ut tilleggsinformasjon om denne konverteringsprogram aktiveres fra miljøet. Dette kan være `null`, så kontroller. Også egenskapene context-objektet kan returnere `null`.       Den `attributes` matrise som skal brukes til å filtrere matrisen. Den `attributes` kan ha en blanding av <xref:System.Type>og <xref:System.Attribute>objekter.</xref:System.Attribute> </xref:System.Type> Filtrering er definert av følgende regler: – en <xref:System.Type>objektet behandles som jokertegn; den blir samsvarer med en egenskap som har den <xref:System.Type>i et sett med attributter.</xref:System.Type> </xref:System.Type>      -Hvis en egenskap ikke har en <xref:System.Attribute>av den samme klassen egenskapen inkluderes ikke i den returnerte matrisen.</xref:System.Attribute>      -Hvis attributtet er en forekomst av <xref:System.Attribute>, egenskapen må være nøyaktig samsvar eller kan ikke inkluderes i den returnerte matrisen.</xref:System.Attribute>      -Hvis en <xref:System.Attribute>forekomsten er angitt, og den er egenskapen default, den skal inkluderes i den returnerte matrisen selv om det finnes ingen forekomst av den <xref:System.Attribute>i egenskapen.</xref:System.Attribute> </xref:System.Attribute>"
  syntax:
    content: public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "En <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> som gir en format-kontekst."
    - id: value
      type: System.Object
      description: "En <xref:System.Object>som angir objekttypen ikke hente egenskaper for setningen for.</xref:System.Object>"
    - id: attributes
      type: System.Attribute[]
      description: "En matrise av typen <xref:System.Attribute>som skal brukes som et filter.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "En <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> med egenskapene som vises for komponenten, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis det finnes ingen egenskaper."
  overload: System.ComponentModel.ExpandableObjectConverter.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ExpandableObjectConverter
  langs:
  - csharp
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: ExpandableObjectConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Henter en verdi som angir om dette objektet støtter egenskapene ved å bruke den angitte konteksten."
  remarks: "Den `context` parameter kan brukes til å trekke ut tilleggsinformasjon om denne konverteringsprogram aktiveres fra miljøet. Dette kan være `null`, så kontroller. Også egenskapene context-objektet kan returnere `null`."
  syntax:
    content: public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "En <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> som gir en format-kontekst."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>fordi <xref:System.ComponentModel.TypeConverter.GetProperties*>må kalles for å finne egenskaper for dette objektet.</xref:System.ComponentModel.TypeConverter.GetProperties*> Denne metoden returnerer aldri <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.ComponentModel.ExpandableObjectConverter.#ctor
  parent: System.ComponentModel.ExpandableObjectConverter
  isExternal: false
  name: ExpandableObjectConverter()
  nameWithType: ExpandableObjectConverter.ExpandableObjectConverter()
  fullName: System.ComponentModel.ExpandableObjectConverter.ExpandableObjectConverter()
- uid: System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.ExpandableObjectConverter
  isExternal: false
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: ExpandableObjectConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.ComponentModel.ExpandableObjectConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ExpandableObjectConverter
  isExternal: false
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: ExpandableObjectConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(ITypeDescriptorContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ExpandableObjectConverter.#ctor*
  parent: System.ComponentModel.ExpandableObjectConverter
  isExternal: false
  name: ExpandableObjectConverter
  nameWithType: ExpandableObjectConverter.ExpandableObjectConverter
- uid: System.ComponentModel.ExpandableObjectConverter.GetProperties*
  parent: System.ComponentModel.ExpandableObjectConverter
  isExternal: false
  name: GetProperties
  nameWithType: ExpandableObjectConverter.GetProperties
- uid: System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported*
  parent: System.ComponentModel.ExpandableObjectConverter
  isExternal: false
  name: GetPropertiesSupported
  nameWithType: ExpandableObjectConverter.GetPropertiesSupported
