### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.PeerNameRegistration
  id: PeerNameRegistration
  children:
  - System.Net.PeerToPeer.PeerNameRegistration.#ctor
  - System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)
  - System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)
  - System.Net.PeerToPeer.PeerNameRegistration.Cloud
  - System.Net.PeerToPeer.PeerNameRegistration.Comment
  - System.Net.PeerToPeer.PeerNameRegistration.Data
  - System.Net.PeerToPeer.PeerNameRegistration.Dispose
  - System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)
  - System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection
  - System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerNameRegistration.IsRegistered
  - System.Net.PeerToPeer.PeerNameRegistration.PeerName
  - System.Net.PeerToPeer.PeerNameRegistration.Port
  - System.Net.PeerToPeer.PeerNameRegistration.Start
  - System.Net.PeerToPeer.PeerNameRegistration.Stop
  - System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerNameRegistration.Update
  - System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection
  langs:
  - csharp
  name: PeerNameRegistration
  nameWithType: PeerNameRegistration
  fullName: System.Net.PeerToPeer.PeerNameRegistration
  type: Class
  summary: "Registrerer en <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>i en <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> eller et sett med skyer.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  remarks: "Registrering oppretter (eller oppdaterer) all informasjonen som er knyttet til en <xref:System.Net.PeerToPeer.PeerName>i en node sky eller skyer.</xref:System.Net.PeerToPeer.PeerName>       Det er mulig å ha flere PeerNameRegistration-objekter for det samme navnet på node. Hvis nodenavn er sikkert, representerer hver forekomst i så fall PeerNameRegistration i en annen skyen. Men hvis nodenavn ikke er sikkert, registreres den i samme skyen flere ganger gir at hver registrering kommer fra en annen prosess."
  syntax:
    content: 'public class PeerNameRegistration : IDisposable, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor
  id: '#ctor'
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: PeerNameRegistration()
  nameWithType: PeerNameRegistration.PeerNameRegistration()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration()
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Initialiserer en ny standardforekomst av den <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> klasse."
  remarks: "Returnerer en ny standardforekomst av typen <xref:System.Net.PeerToPeer.PeerNameRegistration>.</xref:System.Net.PeerToPeer.PeerNameRegistration> Den utfører ikke peer name registrering under oppretting av.       Oppkalleren må fylle ut de riktige feltene i forekomsten før du kaller opp <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>eller <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> etter start av et objekt med denne konstruktøren,"
  syntax:
    content: public PeerNameRegistration ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameRegistration.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)
  id: '#ctor(System.Net.PeerToPeer.PeerName,System.Int32)'
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: PeerNameRegistration(PeerName,Int32)
  nameWithType: PeerNameRegistration.PeerNameRegistration(PeerName,Int32)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(PeerName,Int32)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> klassen med det angitte navnet på og portnummeret."
  remarks: "Kall til denne konstruktøren oppretter en forekomst som skal brukes til å registrere alle kildeadresser (begge IPv6and IPv4) og den angitte porten for alle skyer der motparten deltar for øyeblikket.  Hvis du objektet, angitt <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>og <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>er utfylt.</xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>       Hvis nodenavn sikres og tidligere ble registrert i en <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>motparten deltar for øyeblikket i en <xref:System.Net.PeerToPeer.PeerToPeerException>forårsakes.</xref:System.Net.PeerToPeer.PeerToPeerException> </xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>       Denne konstruktøren bare oppretter en <xref:System.Net.PeerToPeer.PeerNameRegistration>serverforekomsten; utfører ikke registreringen.</xref:System.Net.PeerToPeer.PeerNameRegistration> Programmet må kalle etter starte registreringen-objekt med denne konstruktøren og utfylling feltene, <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>til å utføre den faktiske registreringen.</xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>"
  syntax:
    content: public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port);
    parameters:
    - id: name
      type: System.Net.PeerToPeer.PeerName
      description: "Den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objekt for å registrere."
    - id: port
      type: System.Int32
      description: "Heltall som angir portnummeret til å registrere."
  overload: System.Net.PeerToPeer.PeerNameRegistration.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <code> name </code> parameteren kan ikke være <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Det angitte portnummeret er mindre enn null.  Portnumre må være større enn eller lik null, og mindre enn 65 535 (0xFFFF)."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-Den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> angitte er allerede registrert fra denne verten.      -Den eksterne datamaskinen ikke eier av <xref:System.Net.PeerToPeer.PeerName.Authority*>for de leverte <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objektet.</xref:System.Net.PeerToPeer.PeerName.Authority*>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: PeerNameRegistration(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.PeerNameRegistration(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Starter en ny serialiserbare <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> objektet."
  syntax:
    content: protected PeerNameRegistration (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Referanse til objektet som inneholder dataene som kreves for deserialisering av denne forekomsten."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Sammenheng som lar deserialisering av dataene. Kalles også kilden for de serialiserte dataene."
  overload: System.Net.PeerToPeer.PeerNameRegistration.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)
  id: '#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)'
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: PeerNameRegistration(PeerName,Int32,Cloud)
  nameWithType: PeerNameRegistration.PeerNameRegistration(PeerName,Int32,Cloud)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(PeerName,Int32,Cloud)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> klassen med den angitte nodenavn portnummeret og <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>."
  remarks: "Kall til denne konstruktøren oppretter en forekomst som skal brukes til å registrere alle kilde-adresser (både IPv6 og IPv4), den angitte porten og den angitte <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>  Hvis du objektet ble, egenskapene er fylt ut med de angitte <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>og <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>       Hvis parameteren cloud `null`, navnet er registrert ved hjelp av den <xref:System.Net.PeerToPeer.Cloud.Available>snarvei som initialiserer standardverdier for den <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, og <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available>       Etter instantiering- <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>metoden må kalles for å registrere <xref:System.Net.PeerToPeer.PeerName>.</xref:System.Net.PeerToPeer.PeerName> </xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>"
  syntax:
    content: public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port, System.Net.PeerToPeer.Cloud cloud);
    parameters:
    - id: name
      type: System.Net.PeerToPeer.PeerName
      description: "Den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objekt for å registrere."
    - id: port
      type: System.Int32
      description: "Heltall som angir portnummeret til å registrere."
    - id: cloud
      type: System.Net.PeerToPeer.Cloud
      description: "<xref href=&quot;System.Net.PeerToPeer.Cloud&quot;></xref>du skal registrere nodenavn."
  overload: System.Net.PeerToPeer.PeerNameRegistration.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <code> name </code> parameteren kan ikke være <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Det angitte portnummeret er mindre enn null.  Portnumre må være større enn eller lik null, og mindre enn 65 535 (0xFFFF)."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-Den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> angitte er allerede registrert fra denne verten.      -Den eksterne datamaskinen ikke eier av <xref:System.Net.PeerToPeer.PeerName.Authority*>for de leverte <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objektet.</xref:System.Net.PeerToPeer.PeerName.Authority*>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Cloud
  id: Cloud
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Cloud
  nameWithType: PeerNameRegistration.Cloud
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Cloud
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Henter eller angir informasjonen i en sky i som denne <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>objektet skal registreres.</xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>"
  syntax:
    content: public System.Net.PeerToPeer.Cloud Cloud { get; set; }
    return:
      type: System.Net.PeerToPeer.Cloud
      description: "Et objekt av typen <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> som angir node skyen som er definert for denne registreringen. Denne egenskapen er satt til <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> som standard."
  overload: System.Net.PeerToPeer.PeerNameRegistration.Cloud*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Comment
  id: Comment
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Comment
  nameWithType: PeerNameRegistration.Comment
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Comment
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Henter eller angir tilleggsinformasjon den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objektet som vil bli registrert med den <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>."
  syntax:
    content: public string Comment { get; set; }
    return:
      type: System.String
      description: "Kommentaren som inneholder tilleggsinformasjon om den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> å knytte til den <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>. Denne egenskapen er satt til <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> som standard."
  overload: System.Net.PeerToPeer.PeerNameRegistration.Comment*
  exceptions:
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "Den angitte strengverdien er større enn 39 Unicode-tegn."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Data
  id: Data
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Data
  nameWithType: PeerNameRegistration.Data
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Data
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Henter eller angir Programdefinert binære data for den <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> objektet."
  remarks: "Maksimal mengden Data som kan angis er 4 096 byte."
  syntax:
    content: public byte[] Data { get; set; }
    return:
      type: System.Byte[]
      description: "En bytematrise som inneholder de binære dataene som er knyttet til posten. Denne egenskapen er satt til <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> som standard."
  overload: System.Net.PeerToPeer.PeerNameRegistration.Data*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "De angitte dataene er større enn 4096 byte."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose
  id: Dispose
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Dispose()
  nameWithType: PeerNameRegistration.Dispose()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Dispose()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Frigir alle ressursene som brukes av den <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> objektet."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameRegistration.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: PeerNameRegistration.Dispose(Boolean)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Frigir uforvaltede ressurser og eventuelt frigir forvaltet ressursene som brukes av den <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> objektet."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Frigi ressurser både administrerte og uforvaltede; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> frigi bare uforvaltede ressurser."
  overload: System.Net.PeerToPeer.PeerNameRegistration.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection
  id: EndPointCollection
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: EndPointCollection
  nameWithType: PeerNameRegistration.EndPointCollection
  fullName: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Henter samlingen av endepunkt som tilknyttede nodenavn er registrert på nettverket."
  remarks: "I de <xref:System.Net>navneområde, en <xref:System.Net.IPEndPoint>representerer et nettverksendepunkt som en IP-adresse og et portnummer.</xref:System.Net.IPEndPoint> </xref:System.Net>  En IP-adresse og port. verdi må angis for hvert endepunkt for PNRP.  Det maksimale antallet endepunkt som kan angis er ti. Automatisk utvalg brukes når denne parameteren er `null`.       Hvis registrering metoden brukes som automatisk velger adressene for å registrere, er det ingen metode for å fastslå theaddresses som nodenavn ble registrert.  Egenskapen EndPointCollection, som er ikke oppdateres for å gjenspeile adressene som er valgt.       Når et nodenavn er registrert for flere enn én node hver <xref:System.Net.PeerToPeer.PeerNameRegistration>er distinkt og EndPointCollection-egenskap som er definert for hver forekomst registrering vil være forskjellig.</xref:System.Net.PeerToPeer.PeerNameRegistration> Også når en <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>er registrert i mer enn én <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>hver registrering er distinkt og samlingen av endepunkt, blir vanligvis forskjellig for hver forekomst.</xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>"
  syntax:
    content: public System.Net.IPEndPointCollection EndPointCollection { get; }
    return:
      type: System.Net.IPEndPointCollection
      description: "En <xref:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection*>objekt som inneholder tilknyttede nodenavn registreres endepunkt på nettverket.</xref:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection*> Med mindre du eksplisitt angitt, er standardverdien for alle egenskaper <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> for referansetyper."
  overload: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Fyller ut et objekt for serialisering informasjon med dataene som kreves for å serialisere den <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> forekomsten."
  syntax:
    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Inneholder de serialiserte dataene som er knyttet til den <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> objektet."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Inneholder målet for serialisert dataflyt knyttet til den <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> objektet."
  overload: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered
  id: IsRegistered
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: IsRegistered()
  nameWithType: PeerNameRegistration.IsRegistered()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Henter eller angir om nodenavn angis i den <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>egenskap som er registrert med en bestemt <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> på en vert.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  syntax:
    content: public bool IsRegistered ();
    parameters: []
    return:
      type: System.Boolean
      description: "Hvis <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, nodenavn er registrert med en <> </> *> for node-vert. Hvis <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, og deretter registreringsprosessen kan startes med <> </> *>."
  overload: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Kan ikke registrere et objekt som allerede har blitt fjernet."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.PeerName
  id: PeerName
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: PeerName
  nameWithType: PeerNameRegistration.PeerName
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerName
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Henter eller angir nodenavn registrere med en node sky."
  remarks: "Et nodenavn kan registreres for flere noden. hver <xref:System.Net.PeerToPeer.PeerNameRegistration>forekomsten er distinkt.</xref:System.Net.PeerToPeer.PeerNameRegistration> Den <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>egenskapen som er knyttet til hver svarer <xref:System.Net.PeerToPeer.PeerName>forekomsten er forskjellig.</xref:System.Net.PeerToPeer.PeerName> </xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> Det er også mulig å registrere et nodenavn for mer enn én sky noden er koblet til. hvert enkelt av disse registreringer er distinkt. Nodenavnet <xref:System.Net.IPEndPointCollection>er forskjellige i hvert enkelt av disse forekomstene.</xref:System.Net.IPEndPointCollection>"
  syntax:
    content: public System.Net.PeerToPeer.PeerName PeerName { get; set; }
    return:
      type: System.Net.PeerToPeer.PeerName
      description: "Et objekt av typen <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> som inneholder verdier som er forbundet med denne <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> objektet. Med mindre du eksplisitt angitt, er standardverdien for alle egenskaper <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> for referansetyper."
  overload: System.Net.PeerToPeer.PeerNameRegistration.PeerName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Port
  id: Port
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Port
  nameWithType: PeerNameRegistration.Port
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Port
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Henter eller angir den [TCP/IP](http://go.microsoft.com/fwlink?LinkID=98458) portnummer motparten registreres i den <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> objektet."
  remarks: "Standardporten brukes av den <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>metoden bare når ingen endepunkter er angitt.</xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>"
  syntax:
    content: public int Port { get; set; }
    return:
      type: System.Int32
      description: "En heltallsverdi som angir TCP-porten antall <xref:System.Net.IPEndPoint>.</xref:System.Net.IPEndPoint> Med mindre du eksplisitt angitt, er standardverdien for denne egenskapen null (0)."
  overload: System.Net.PeerToPeer.PeerNameRegistration.Port*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den angitte port-verdien er mindre enn null.  Portnumre må være større enn eller lik null, og mindre enn 65 535 (0xFFFF)."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Start
  id: Start
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Start()
  nameWithType: PeerNameRegistration.Start()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Start()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Registrerer den <> </> *> til den <> </> *>. Hvis ingen <> </> *> er angitt, automatisk utvalg brukes med portverdi som er angitt av den <> </> *> egenskapen."
  remarks: "Metoden registrerer nodenavn som er angitt i den <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>egenskapen med alle kilde-adresser og <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>angitt i konstruktøren.</xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> Standardporten brukes av denne metoden bare når ingen endepunkter er angitt.       Hvis den <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>egenskapen `null`, denne metoden registrerer nodenavn som er angitt i den <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A>ved hjelp av den <xref:System.Net.PeerToPeer.Cloud.Available>-feltet initialiserer standardverdier for den <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, og <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>       Etter en <xref:System.Net.PeerToPeer.PeerNameRegistration>objektet er startet, <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>metoden brukes til å stoppe den.</xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration>       Å oppdatere en registrering av <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A>-metoden må brukes.</xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A>"
  example:
  - "The following code example creates a <xref:System.Net.PeerToPeer.PeerName> and registers it along with the metadata specified.  \n  \n [!code-cs[NCLPNRPRegisterPeerName#1](~/add/codesnippet/csharp/m-system.net.peertopeer._1_1.cs)]"
  syntax:
    content: public void Start ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameRegistration.Start*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>er satt til <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dette objektet har Dispose() kalles for den tidligere."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-Den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> angitte er allerede registrert. Den <> </> *> metoden må brukes til å oppdatere en registrering.      -Den eksterne datamaskinen ikke eier av <> </> *> for den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> angitt.      -Enten den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> eller <> </> *> er ikke angitt; minst én må angis.      -Melding eller data elementer er ugyldig. Eller <> </> *> er ikke angitt og ingen data blob eller <xref:System.Net.IPEndPoint>er angitt.</xref:System.Net.IPEndPoint>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Stop
  id: Stop
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Stop()
  nameWithType: PeerNameRegistration.Stop()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Stop()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Avregistrerer nodenavn som er angitt i den <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>egenskapen fra alle skyer den ble registrert.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  remarks: "Når registreringen er stoppet, er registrering objektets tilstanden lik tilstanden rett etter opprettet av Standardkonstruktøren. Alle egenskapene antas har ingen verdi i denne tilstanden. <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>Metoden kan brukes til å starte det.</xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>       Det er mulig å ha flere objekter for registrering for node-navnet.  I slike tilfeller Hvis nodenavn er sikkert, vil hver forekomst representere en registrering i en annen PNRP skyen.  Imidlertid Hvis nodenavn ikke er sikret, kan være registrert i den samme skyen flere ganger.       Hvis denne forekomsten er allerede stoppet, har kaller denne metoden ingen virkning."
  syntax:
    content: public void Stop ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameRegistration.Stop*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <> </> *> egenskapen er ikke registrert ennå. Dette skjer når en <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> -objektet er konstruert med tom konstruktøren. Den <> </> *> egenskapen må være fylt ut i denne forekomsten før du kaller <xref:System.Net.PeerToPeer.PeerNameRegistration.Start*>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Start*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dette objektet har Dispose() kalles for den tidligere."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Implementerer den <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> grensesnittet og returnerer dataene som kreves for å serialisere den <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> forekomsten."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Inneholder de serialiserte dataene som er knyttet til den <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> forekomsten."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Inneholder målet for serialisert dataflyt knyttet til den <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> forekomsten."
  overload: System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Update
  id: Update
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Update()
  nameWithType: PeerNameRegistration.Update()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Update()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Oppdateringer av <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> for en node som er registrert med en bestemt <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>. Oppdatering utføres ved hjelp av informasjonen som er angitt i Egenskaper."
  remarks: "All informasjon som er registrert i cloud(s) for dette <xref:System.Net.PeerToPeer.PeerName>før kallet forkastes fullstendig.</xref:System.Net.PeerToPeer.PeerName>  De nye dataene kombineres ikke med den eksisterende registreringen.  Å oppdatere en <xref:System.Net.PeerToPeer.PeerNameRegistration>, Oppdater først egenskapene i denne forekomsten og kalle denne metoden.</xref:System.Net.PeerToPeer.PeerNameRegistration>       Etter en <xref:System.Net.PeerToPeer.PeerNameRecord>er registrert i <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A>egenskapen kan ikke oppdateres.</xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> </xref:System.Net.PeerToPeer.PeerNameRecord>  Alle feltene i oppføringen oppdateres."
  syntax:
    content: public void Update ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameRegistration.Update*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>er satt til <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "-Den <> </> *> egenskapen er ikke registrert ennå. Update-metoden kan ikke kalles før nodenavn angitt i den <> </> *> egenskapen er registrert i én eller flere skyer.      -Node-navnet som er angitt i den <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>egenskapen er endret siden den tilsvarende <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> ble registrert.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "Kan ikke registrere et objekt som har blitt fjernet."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> er satt til <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection
  id: UseAutoEndPointSelection
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: UseAutoEndPointSelection
  nameWithType: PeerNameRegistration.UseAutoEndPointSelection
  fullName: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Henter eller angir en verdi som angir om du vil bruke automatisk sluttpunktet utvalget når traversering node nettet eller <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud*>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud*>"
  remarks: "Når endpoint Autovalg brukes (denne egenskapen er satt til `true`) med ingen endepunktinformasjon angitt før starten av en <xref:System.Net.PeerToPeer.PeerNameRegistration>, systemet velger individuelle sluttpunkt og publiseres dem med tilknyttede nodenavn til alle tilgjengelige skyer.</xref:System.Net.PeerToPeer.PeerNameRegistration>  Hvis porten ikke er angitt, velger Autovalg null som <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>       Hvis du velger `false`, utføres ikke Autovalg som beskrevet ovenfor.  Dette aktiverer registreringsprosessen å publisere et nodenavn sammen med et data-blob (som angitt av den <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A>egenskapen).</xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> Ingen endepunkt er knyttet til navnet.       Hvis registrering metoden brukes som automatisk velger adressene for å registrere, vises ingen metode for å finne ut hva adresser som den <xref:System.Net.PeerToPeer.PeerName>objektet ble registrert.</xref:System.Net.PeerToPeer.PeerName>  Det vil si den <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>egenskapen vil ikke bli oppdatert for å gjenspeile adressene som er valgt.</xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>       Oppdatering av denne egenskapen etter registrering av peer name har startet, har ingen virkning."
  syntax:
    content: public bool UseAutoEndPointSelection { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Hvis automatisk endpoint utvalg som skal brukes; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Hvis en annen metode som skal brukes til å finne et sluttpunkt. Standardverdien er <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.PeerToPeer.PeerToPeerException
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerToPeerException
  nameWithType: PeerToPeerException
  fullName: System.Net.PeerToPeer.PeerToPeerException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerNameRegistration()
  nameWithType: PeerNameRegistration.PeerNameRegistration()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration()
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerNameRegistration(PeerName,Int32)
  nameWithType: PeerNameRegistration.PeerNameRegistration(PeerName,Int32)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(PeerName,Int32)
- uid: System.Net.PeerToPeer.PeerName
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerName
  nameWithType: PeerName
  fullName: System.Net.PeerToPeer.PeerName
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerNameRegistration(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.PeerNameRegistration(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerNameRegistration(PeerName,Int32,Cloud)
  nameWithType: PeerNameRegistration.PeerNameRegistration(PeerName,Int32,Cloud)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(PeerName,Int32,Cloud)
- uid: System.Net.PeerToPeer.Cloud
  parent: System.Net.PeerToPeer
  isExternal: false
  name: Cloud
  nameWithType: Cloud
  fullName: System.Net.PeerToPeer.Cloud
- uid: System.Net.PeerToPeer.PeerNameRegistration.Cloud
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Cloud
  nameWithType: PeerNameRegistration.Cloud
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Cloud
- uid: System.Net.PeerToPeer.PeerNameRegistration.Comment
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Comment
  nameWithType: PeerNameRegistration.Comment
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Comment
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.PeerToPeer.PeerNameRegistration.Data
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Data
  nameWithType: PeerNameRegistration.Data
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Data
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Dispose()
  nameWithType: PeerNameRegistration.Dispose()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Dispose()
- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: PeerNameRegistration.Dispose(Boolean)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: EndPointCollection
  nameWithType: PeerNameRegistration.EndPointCollection
  fullName: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection
- uid: System.Net.IPEndPointCollection
  parent: System.Net
  isExternal: false
  name: IPEndPointCollection
  nameWithType: IPEndPointCollection
  fullName: System.Net.IPEndPointCollection
- uid: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: IsRegistered()
  nameWithType: PeerNameRegistration.IsRegistered()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered()
- uid: System.Net.PeerToPeer.PeerNameRegistration.PeerName
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerName
  nameWithType: PeerNameRegistration.PeerName
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerName
- uid: System.Net.PeerToPeer.PeerNameRegistration.Port
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Port
  nameWithType: PeerNameRegistration.Port
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Port
- uid: System.Net.PeerToPeer.PeerNameRegistration.Start
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Start()
  nameWithType: PeerNameRegistration.Start()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Start()
- uid: System.Net.PeerToPeer.PeerNameRegistration.Stop
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Stop()
  nameWithType: PeerNameRegistration.Stop()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Stop()
- uid: System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.PeerNameRegistration.Update
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Update()
  nameWithType: PeerNameRegistration.Update()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Update()
- uid: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: UseAutoEndPointSelection
  nameWithType: PeerNameRegistration.UseAutoEndPointSelection
  fullName: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerNameRegistration
  nameWithType: PeerNameRegistration.PeerNameRegistration
- uid: System.Net.PeerToPeer.PeerNameRegistration.Cloud*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Cloud
  nameWithType: PeerNameRegistration.Cloud
- uid: System.Net.PeerToPeer.PeerNameRegistration.Comment*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Comment
  nameWithType: PeerNameRegistration.Comment
- uid: System.Net.PeerToPeer.PeerNameRegistration.Data*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Data
  nameWithType: PeerNameRegistration.Data
- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Dispose
  nameWithType: PeerNameRegistration.Dispose
- uid: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: EndPointCollection
  nameWithType: PeerNameRegistration.EndPointCollection
- uid: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: GetObjectData
  nameWithType: PeerNameRegistration.GetObjectData
- uid: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: IsRegistered
  nameWithType: PeerNameRegistration.IsRegistered
- uid: System.Net.PeerToPeer.PeerNameRegistration.PeerName*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerName
  nameWithType: PeerNameRegistration.PeerName
- uid: System.Net.PeerToPeer.PeerNameRegistration.Port*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Port
  nameWithType: PeerNameRegistration.Port
- uid: System.Net.PeerToPeer.PeerNameRegistration.Start*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Start
  nameWithType: PeerNameRegistration.Start
- uid: System.Net.PeerToPeer.PeerNameRegistration.Stop*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Stop
  nameWithType: PeerNameRegistration.Stop
- uid: System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Net.PeerToPeer.PeerNameRegistration.Update*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Update
  nameWithType: PeerNameRegistration.Update
- uid: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: UseAutoEndPointSelection
  nameWithType: PeerNameRegistration.UseAutoEndPointSelection
