### YamlMime:ManagedReference
items:
- uid: System.Net.FtpWebRequest
  id: FtpWebRequest
  children:
  - System.Net.FtpWebRequest.Abort
  - System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  - System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  - System.Net.FtpWebRequest.ClientCertificates
  - System.Net.FtpWebRequest.ConnectionGroupName
  - System.Net.FtpWebRequest.ContentLength
  - System.Net.FtpWebRequest.ContentOffset
  - System.Net.FtpWebRequest.ContentType
  - System.Net.FtpWebRequest.Credentials
  - System.Net.FtpWebRequest.DefaultCachePolicy
  - System.Net.FtpWebRequest.EnableSsl
  - System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)
  - System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)
  - System.Net.FtpWebRequest.GetRequestStream
  - System.Net.FtpWebRequest.GetResponse
  - System.Net.FtpWebRequest.Headers
  - System.Net.FtpWebRequest.KeepAlive
  - System.Net.FtpWebRequest.Method
  - System.Net.FtpWebRequest.PreAuthenticate
  - System.Net.FtpWebRequest.Proxy
  - System.Net.FtpWebRequest.ReadWriteTimeout
  - System.Net.FtpWebRequest.RenameTo
  - System.Net.FtpWebRequest.RequestUri
  - System.Net.FtpWebRequest.ServicePoint
  - System.Net.FtpWebRequest.Timeout
  - System.Net.FtpWebRequest.UseBinary
  - System.Net.FtpWebRequest.UseDefaultCredentials
  - System.Net.FtpWebRequest.UsePassive
  langs:
  - csharp
  name: FtpWebRequest
  nameWithType: FtpWebRequest
  fullName: System.Net.FtpWebRequest
  type: Class
  summary: "Implementerer en klient (FTP File Transfer Protocol)."
  remarks: "For å hente en forekomst av FtpWebRequest, kan du bruke den <xref:System.Net.WebRequest.Create%2A>metoden.</xref:System.Net.WebRequest.Create%2A> Du kan også bruke den <xref:System.Net.WebClient>klassen for å laste opp og Last ned informasjon fra en FTP-server.</xref:System.Net.WebClient> Bruker en av disse metodene, når du angir en nettverksressurs som bruker FTP-skjemaet (for eksempel `&quot;ftp://contoso.com&quot;`) klassen FtpWebRequest gjør mulighet å arbeide programmatisk med FTP-servere.       URIEN kan være relativ eller absolutt. Hvis URIEN er i formatet `&quot;ftp://contoso.com/%2fpath&quot;` (%&2;f er en mellom skilletegn &quot;/&quot;), deretter URIEN er absolutt, og gjeldende katalog `/path`. Hvis du imidlertid URIEN er i formatet `&quot;ftp://contoso.com/path&quot;`, først .NET Framework logger til FTP-serveren (ved hjelp av brukernavn og passord som er angitt av den <xref:System.Net.FtpWebRequest.Credentials%2A>egenskapen), og gjeldende katalog er satt til `<UserLoginDirectory>/path`.</xref:System.Net.FtpWebRequest.Credentials%2A>       Du må ha et gyldig brukernavn og passord for serveren eller serveren tillater anonym pålogging. Du kan angi legitimasjonen som brukes til å koble til serveren ved å angi den <xref:System.Net.FtpWebRequest.Credentials%2A>egenskapen, eller du kan inkludere dem i den <xref:System.Uri.UserInfo%2A>deler av URIEN sendt til den <xref:System.Net.WebRequest.Create%2A>metoden.</xref:System.Net.WebRequest.Create%2A> </xref:System.Uri.UserInfo%2A> </xref:System.Net.FtpWebRequest.Credentials%2A> Hvis du inkluderer <xref:System.Uri.UserInfo%2A>informasjonen i URI, den <xref:System.Net.FtpWebRequest.Credentials%2A>er satt til nye nettverkslegitimasjon med den angitte brukeren navn og passord.</xref:System.Net.FtpWebRequest.Credentials%2A> </xref:System.Uri.UserInfo%2A>      > [!CAUTION] > Med mindre den <xref:System.Net.FtpWebRequest.EnableSsl%2A>egenskapen `true`, alle data og kommandoer, inkludert navn og passord brukerinformasjon, sendes til serveren i ren tekst.</xref:System.Net.FtpWebRequest.EnableSsl%2A> Alle overvåke nettverkstrafikk kan vise legitimasjonen din og bruke dem til å koble til serveren. Hvis du kobler til en FTP-serveren krever legitimasjon, og som støtter Secure Sockets Layer (SSL), må du angi <xref:System.Net.FtpWebRequest.EnableSsl%2A>til `true`.</xref:System.Net.FtpWebRequest.EnableSsl%2A>       Du må ha <xref:System.Net.WebPermission>å få tilgang til FTP-ressursen; ellers en <xref:System.Security.SecurityException>unntak.</xref:System.Security.SecurityException> </xref:System.Net.WebPermission>       Angi FTP-kommandoen som skal sendes til serveren ved å angi den <xref:System.Net.FtpWebRequest.Method%2A>til en verdi som er definert i den <xref:System.Net.WebRequestMethods.Ftp>strukturen.</xref:System.Net.WebRequestMethods.Ftp> </xref:System.Net.FtpWebRequest.Method%2A> Hvis du vil overføre tekstdata, kan du endre den <xref:System.Net.FtpWebRequest.UseBinary%2A>egenskapen standardverdi (`true`) til `false`.</xref:System.Net.FtpWebRequest.UseBinary%2A> Begrensninger, og mer informasjon, se <xref:System.Net.FtpWebRequest.Method%2A>.</xref:System.Net.FtpWebRequest.Method%2A>       Når du bruker et FtpWebRequest-objekt for å laste opp en fil til en server, må du skrive innholdet i filen til forespørselen for dataflyten hente ved å kalle den <xref:System.Net.FtpWebRequest.GetRequestStream%2A>metoden eller de asynkrone kolleger den <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>og <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>metoder.</xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A> Du må skrive til dataflyten og lukk dataflyten før sending av forespørselen.       Forespørsler er sendt til serveren ved å kalle den <xref:System.Net.FtpWebRequest.GetResponse%2A>metoden eller de asynkrone kolleger den <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>og <xref:System.Net.FtpWebRequest.EndGetResponse%2A>metoder.</xref:System.Net.FtpWebRequest.EndGetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> Når den forespurte operasjonen er fullført, en <xref:System.Net.FtpWebResponse>objekt returneres.</xref:System.Net.FtpWebResponse> Den <xref:System.Net.FtpWebResponse>-objektet har statusen for operasjonen, og alle data som er lastet ned fra serveren.</xref:System.Net.FtpWebResponse>       Du kan angi en tidsavbruddsverdi for lese eller skrive til serveren ved hjelp av den <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A>egenskapen.</xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> Hvis tidsavbruddsperioden overskrides, oppstår metoden kall en <xref:System.Net.WebException>med <xref:System.Net.WebExceptionStatus>satt til <xref:System.Net.WebExceptionStatus>.</xref:System.Net.WebExceptionStatus> </xref:System.Net.WebExceptionStatus> </xref:System.Net.WebException>       Innholdet i den forespurte filen er tilgjengelige i svaret objektets dataflyten ved nedlasting av en fil fra en FTP-serveren, Hvis kommandoen var vellykket. Du har tilgang til denne dataflyten ved å kalle den <xref:System.Net.FtpWebResponse.GetResponseStream%2A>metoden.</xref:System.Net.FtpWebResponse.GetResponseStream%2A> Hvis du vil ha mer informasjon, kan du se <xref:System.Net.FtpWebResponse>.</xref:System.Net.FtpWebResponse>       Hvis den <xref:System.Net.FtpWebRequest.Proxy%2A>egenskapen er angitt, enten direkte eller i en konfigurasjonsfil gjøres kommunikasjon med FTP-serveren via den angitte proxyen.</xref:System.Net.FtpWebRequest.Proxy%2A> Hvis den angitte proxyen er en HTTP-proxy, bare den <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, og <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails>kommandoer som støttes.</xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> </xref:System.Net.WebRequestMethods.Ftp.ListDirectory> </xref:System.Net.WebRequestMethods.Ftp.DownloadFile>       Bare nedlastet binære innhold hurtigbufres; Det vil si innhold motta ved hjelp av den <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>kommando med den <xref:System.Net.FtpWebRequest.UseBinary%2A>-egenskapen satt til `true`.</xref:System.Net.FtpWebRequest.UseBinary%2A> </xref:System.Net.WebRequestMethods.Ftp.DownloadFile>       Flere FtpWebRequests bruke eksisterende tilkoblinger, hvis mulig.       Hvis du vil ha mer informasjon om FTP-protokollen, kan du se RFC 959, &quot;File Transfer Protocol,&quot; tilgjengelig på [http://www.rfc-editor.org/](http://www.ietf.org/rfc/rfc959.txt)."
  example:
  - "The following code example demonstrates deleting a file from an FTP server.  \n  \n [!code-cpp[NCLFtpClient#4](~/add/codesnippet/cpp/t-system.net.ftpwebrequest_1.cpp)]\n [!code-cs[NCLFtpClient#4](~/add/codesnippet/csharp/t-system.net.ftpwebrequest_1.cs)]  \n  \n The following code example demonstrates downloading a file from an FTP server by using the <xref:System.Net.WebClient> class.  \n  \n [!code-cpp[NCLFtpClient#5](~/add/codesnippet/cpp/t-system.net.ftpwebrequest_2.cpp)]\n [!code-cs[NCLFtpClient#5](~/add/codesnippet/csharp/t-system.net.ftpwebrequest_2.cs)]  \n  \n The following code example demonstrates using asynchronous operations to upload a file to an FTP server.  \n  \n [!code-cs[NCLFtpAsync#1](~/add/codesnippet/csharp/t-system.net.ftpwebrequest_3.cs)]\n [!code-cpp[NCLFtpAsync#1](~/add/codesnippet/cpp/t-system.net.ftpwebrequest_3.cpp)]"
  syntax:
    content: 'public sealed class FtpWebRequest : System.Net.WebRequest'
  inheritance:
  - System.Net.WebRequest
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Abort
  id: Abort
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Abort()
  nameWithType: FtpWebRequest.Abort()
  fullName: System.Net.FtpWebRequest.Abort()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Avslutter en asynkron operasjon for FTP."
  remarks: "Hvis det er ingen pågående operasjon, finnes ikke noe denne metoden. Hvis en filoverføring pågår, vil denne metoden avslutter overføringen.      > [!NOTE] > Dette medlemmet genererer sporingsinformasjon når du aktiverer sporing for nettverk i programmet. Hvis du vil ha mer informasjon, se [nettverk sporing i .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how the user can terminate an asynchronous upload of a file from the local directory to the server.  \n  \n [!code-cpp[NCLFtpClient#10](~/add/codesnippet/cpp/m-system.net.ftpwebreque_3_1.cpp)]\n [!code-cs[NCLFtpClient#10](~/add/codesnippet/csharp/m-system.net.ftpwebreque_3_1.cs)]"
  syntax:
    content: public override void Abort ();
    parameters: []
  overload: System.Net.FtpWebRequest.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  id: BeginGetRequestStream(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: BeginGetRequestStream(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Starter asynkront åpning av en forespørsel innhold dataflyten for skriving."
  remarks: "Du må fullføre den asynkrone operasjonen ved å kalle den <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>metoden.</xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> Vanligvis <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>kalles ved hjelp av metoden refererer til `callback`.</xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> For å fastslå tilstanden for operasjonen, kan du se egenskapene den <xref:System.IAsyncResult>objektet som returneres av denne metoden.</xref:System.IAsyncResult>       Denne metoden blokkerer ikke under venting på dataflyten. Hvis du vil blokkere, kan du kalle <xref:System.Net.FtpWebRequest.GetRequestStream%2A>i stedet for denne metoden.</xref:System.Net.FtpWebRequest.GetRequestStream%2A>       Du finner mer detaljert informasjon om hvordan du bruker asynkrone programming modellen [kaller asynkront synkron metoder](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Dette medlemmet genererer sporingsinformasjon når du aktiverer sporing for nettverk i programmet. Hvis du vil ha mer informasjon, se [nettverk sporing i .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates beginning an asynchronous operation to get a request's stream. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#4](~/add/codesnippet/csharp/7dded3fc-ce2a-466f-b201-_1.cs)]\n [!code-cpp[NCLFtpAsync#4](~/add/codesnippet/cpp/7dded3fc-ce2a-466f-b201-_1.cpp)]"
  syntax:
    content: public override IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "En <xref:System.AsyncCallback>representanten som refererer til metoden som skal startes når operasjonen er fullført.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Et brukerdefinert objekt som inneholder informasjon om operasjonen. Dette objektet er sendt til den `callback` delegere når operasjonen er fullført."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>-forekomst som angir statusen for operasjonen.</xref:System.IAsyncResult>"
  overload: System.Net.FtpWebRequest.BeginGetRequestStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "En tidligere kall til denne metoden eller <xref:System.Net.FtpWebRequest.GetRequestStream*>er ikke fullført ennå.</xref:System.Net.FtpWebRequest.GetRequestStream*>"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Kan ikke opprette en tilkobling til FTP-serveren."
  - type: System.Net.ProtocolViolationException
    commentId: T:System.Net.ProtocolViolationException
    description: "<xref:System.Net.FtpWebRequest.Method*>Egenskapen er ikke satt til <xref:System.Net.WebRequestMethods.Ftp.UploadFile>.</xref:System.Net.WebRequestMethods.Ftp.UploadFile> </xref:System.Net.FtpWebRequest.Method*>"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  id: BeginGetResponse(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: BeginGetResponse(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Starter sending av en forespørsel, og få svar fra en FTP-server asynkront."
  remarks: "Du må fullføre den asynkrone operasjonen ved å kalle den <xref:System.Net.FtpWebRequest.EndGetResponse%2A>metoden.</xref:System.Net.FtpWebRequest.EndGetResponse%2A> Vanligvis <xref:System.Net.FtpWebRequest.EndGetResponse%2A>kalles ved hjelp av metoden refererer til `callback`.</xref:System.Net.FtpWebRequest.EndGetResponse%2A> For å fastslå tilstanden for operasjonen, kan du se egenskapene den <xref:System.IAsyncResult>objektet som ble returnert av metoden BeginGetResponse.</xref:System.IAsyncResult>       Hvis den <xref:System.Net.FtpWebRequest.Proxy%2A>egenskapen er angitt, enten direkte eller i en konfigurasjonsfil gjøres kommunikasjon med FTP-serveren via den angitte proxyen.</xref:System.Net.FtpWebRequest.Proxy%2A>       BeginGetResponse blokkerer ikke mens du venter på svar fra serveren. Hvis du vil blokkere, kan du kalle den <xref:System.Net.FtpWebRequest.GetResponse%2A>metoden i stedet BeginGetResponse.</xref:System.Net.FtpWebRequest.GetResponse%2A>       Du finner mer informasjon om hvordan du bruker asynkrone programming modellen [kaller asynkront synkron metoder](~/add/includes/ajax-current-ext-md.md).       Dette medlemmet produserer sporingsinformasjon når du aktiverer sporing for nettverk i programmet. Hvis du vil ha mer informasjon, se [nettverk sporing i .NET Framework](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Hvis en <xref:System.Net.WebException>er et, bruker du <xref:System.Net.WebException.Response%2A>og <xref:System.Net.WebException.Status%2A>Egenskaper for unntak for å finne svar fra serveren.</xref:System.Net.WebException.Status%2A> </xref:System.Net.WebException.Response%2A> </xref:System.Net.WebException>"
  example:
  - "The following code example demonstrates ending an asynchronous operation to get a request's stream, and then starting a request to get the response. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#5](~/add/codesnippet/csharp/m-system.net.ftpwebreque_0_1.cs)]\n [!code-cpp[NCLFtpAsync#5](~/add/codesnippet/cpp/m-system.net.ftpwebreque_0_1.cpp)]"
  syntax:
    content: public override IAsyncResult BeginGetResponse (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "En <xref:System.AsyncCallback>representanten som refererer til metoden som skal startes når operasjonen er fullført.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Et brukerdefinert objekt som inneholder informasjon om operasjonen. Dette objektet er sendt til den `callback` delegere når operasjonen er fullført."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>-forekomst som angir statusen for operasjonen.</xref:System.IAsyncResult>"
  overload: System.Net.FtpWebRequest.BeginGetResponse*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Net.FtpWebRequest.GetResponse*>eller BeginGetResponse er allerede blitt kalt for denne forekomsten.</xref:System.Net.FtpWebRequest.GetResponse*>"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ClientCertificates
  id: ClientCertificates
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ClientCertificates
  nameWithType: FtpWebRequest.ClientCertificates
  fullName: System.Net.FtpWebRequest.ClientCertificates
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir sertifikater som brukes til å opprette en kryptert tilkobling til FTP-serveren."
  remarks: "Klientsertifikater brukes til å godkjenne klienten under den første SSL-forhandlingen for tilkoblingen. Hvis du vil ha mer informasjon, kan du se <xref:System.Net.FtpWebRequest.EnableSsl%2A>.</xref:System.Net.FtpWebRequest.EnableSsl%2A>      > [!NOTE] > I .NET Framework bufrer SSL-økter som de opprettes og prøver å bruke en bufret økt til en ny forespørsel om mulig. Under forsøk på å bruke en SSL-økt, .NET Framework bruker det første elementet i <xref:System.Net.HttpWebRequest.ClientCertificates%2A>(Hvis det finnes en), eller prøver å bruke en anonym økt Hvis <xref:System.Net.HttpWebRequest.ClientCertificates%2A>er tom.</xref:System.Net.HttpWebRequest.ClientCertificates%2A> </xref:System.Net.HttpWebRequest.ClientCertificates%2A>"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "En <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> objekt som inneholder klientsertifikatene."
  overload: System.Net.FtpWebRequest.ClientCertificates*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Verdien som er angitt for en set-operasjon er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ConnectionGroupName
  id: ConnectionGroupName
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ConnectionGroupName
  nameWithType: FtpWebRequest.ConnectionGroupName
  fullName: System.Net.FtpWebRequest.ConnectionGroupName
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir navnet på tilkoblingsgruppe som inneholder tjenestepunktet som brukes til å sende til gjeldende forespørsel."
  remarks: "Tilkoblingen grupper knytte et sett med forespørsler med en bestemt tilkobling eller et sett med tilkoblingene. Tilkoblinger i en tilkobling kan brukes bare på forespørsler opprinnelig i samme programdomenet når legitimasjonen i forespørselen er like, og forespørselen angir navnet på tilkoblingen. Når en forespørsel ikke angir et navn på tilkoblingen, kan du bruke eventuelle eksisterende tilkobling til den angitte serveren ikke er knyttet til en tilkoblingsgruppe. Når legitimasjonen ikke er like, den eksisterende tilkoblingen er lukket den nye forespørselen må godkjennes       Ved hjelp av tilkoblingen grupper kan forbedre ytelsen fordi dette tillater at alle forespørsler for en bruker til å bruke tilkobling godkjenne med legitimasjonen for brukeren på nytt.       Hvis du endrer egenskapen ConnectionGroupName etter kall av <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, eller <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>metoden forårsaker en <xref:System.InvalidOperationException>unntak.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves the value of this property.  \n  \n [!code-cpp[NCLFtpClient#16](~/add/codesnippet/cpp/p-system.net.ftpwebreque_8_1.cpp)]\n [!code-cs[NCLFtpClient#16](~/add/codesnippet/csharp/p-system.net.ftpwebreque_8_1.cs)]"
  syntax:
    content: public override string ConnectionGroupName { get; set; }
    return:
      type: System.String
      description: "En <xref:System.String>verdi som inneholder et gruppenavn for tilkoblingen.</xref:System.String>"
  overload: System.Net.FtpWebRequest.ConnectionGroupName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "En ny verdi ble angitt for denne egenskapen for en forespørsel som pågår allerede."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ContentLength
  id: ContentLength
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ContentLength
  nameWithType: FtpWebRequest.ContentLength
  fullName: System.Net.FtpWebRequest.ContentLength
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir en verdi som ignoreres av den <xref href=&quot;System.Net.FtpWebRequest&quot;> </xref> klasse."
  remarks: "Egenskapen ContentLength finnes bare for kompatibilitet med andre implementeringer av den <xref:System.Net.WebRequest>og <xref:System.Net.WebResponse>klasser.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> Det er ingen grunn til å bruke ContentLength."
  syntax:
    content: public override long ContentLength { get; set; }
    return:
      type: System.Int64
      description: "En <xref:System.Int64>verdi som skal ignoreres.</xref:System.Int64>"
  overload: System.Net.FtpWebRequest.ContentLength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ContentOffset
  id: ContentOffset
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ContentOffset
  nameWithType: FtpWebRequest.ContentOffset
  fullName: System.Net.FtpWebRequest.ContentOffset
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir forskyvningen for en byte i filen som lastes ned av denne forespørselen."
  remarks: "Angi egenskapen ContentOffset ved nedlasting av en fil fra en FTP-server. Denne forskyvningen angir posisjonen i serverens-fil som merker starten av dataene som skal lastes ned. Forskyvningen er angitt som antall byte fra begynnelsen av filen. forskyvning i den første byten er null.       Angi ContentOffset årsaker den <xref:System.Net.FtpWebRequest>til å sende en omstart (`REST`) kommandoen til serveren.</xref:System.Net.FtpWebRequest> Denne kommandoen ignoreres av de fleste implementeringer for FTP-serveren hvis du laster opp data til serveren.       Endre ContentOffset etter kall av <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, eller <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>metoden forårsaker en <xref:System.InvalidOperationException>unntak.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example demonstrates downloading part of a file from a server and appending the downloaded data to a local file.  \n  \n [!code-cpp[NclFtpClient#7](~/add/codesnippet/cpp/p-system.net.ftpwebreque_4_1.cpp)]\n [!code-cs[NclFtpClient#7](~/add/codesnippet/csharp/p-system.net.ftpwebreque_4_1.cs)]"
  syntax:
    content: public long ContentOffset { get; set; }
    return:
      type: System.Int64
      description: "En <xref:System.Int64>-forekomst som angir forskyvningen for filen, i byte.</xref:System.Int64> Standardverdien er null."
  overload: System.Net.FtpWebRequest.ContentOffset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "En ny verdi ble angitt for denne egenskapen for en forespørsel som pågår allerede."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Verdien som er angitt for denne egenskapen er mindre enn null."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ContentType
  id: ContentType
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ContentType
  nameWithType: FtpWebRequest.ContentType
  fullName: System.Net.FtpWebRequest.ContentType
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Oppstår alltid <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "ContentType-egenskapen er angitt bare for kompatibilitet med andre implementeringer av den <xref:System.Net.WebRequest>og <xref:System.Net.WebResponse>klasser.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> Det er ingen grunn til å bruke ContentType."
  syntax:
    content: public override string ContentType { get; set; }
    return:
      type: System.String
      description: "Oppstår alltid <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.FtpWebRequest.ContentType*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Informasjon om innholdstype støttes ikke for FTP."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Credentials
  id: Credentials
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Credentials
  nameWithType: FtpWebRequest.Credentials
  fullName: System.Net.FtpWebRequest.Credentials
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir legitimasjonen som brukes til å kommunisere med FTP-serveren."
  remarks: "Du trenger ikke angi legitimasjon når du kobler til ved hjelp av anonym pålogging. Du må angi legitimasjon-egenskapen ved hjelp av legitimasjon av typen <xref:System.Net.NetworkCredential>; Dette sikrer at brukernavnet og passordet kan lese og sendt til serveren.</xref:System.Net.NetworkCredential>      > [!CAUTION] > Legitimasjonen informasjon er ikke kryptert når overføres til serveren, med mindre den <xref:System.Net.FtpWebRequest.EnableSsl%2A>er satt til `true`.</xref:System.Net.FtpWebRequest.EnableSsl%2A>       Endre legitimasjonen etter kall av <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, eller <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>metoden forårsaker en <xref:System.InvalidOperationException>unntak.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves the value of this property and uses it to display the user name.  \n  \n [!code-cpp[NCLFtpClient#14](~/add/codesnippet/cpp/p-system.net.ftpwebreque_6_1.cpp)]\n [!code-cs[NCLFtpClient#14](~/add/codesnippet/csharp/p-system.net.ftpwebreque_6_1.cs)]"
  syntax:
    content: public override System.Net.ICredentials Credentials { get; set; }
    return:
      type: System.Net.ICredentials
      description: "En <xref:System.Net.ICredentials>serverforekomsten; ellers <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis egenskapen ikke er angitt.</xref:System.Net.ICredentials>"
  overload: System.Net.FtpWebRequest.Credentials*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Verdien som er angitt for en set-operasjon er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "En <xref:System.Net.ICredentials>av en type enn <xref:System.Net.NetworkCredential>ble angitt for en set-operasjon.</xref:System.Net.NetworkCredential> </xref:System.Net.ICredentials>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "En ny verdi ble angitt for denne egenskapen for en forespørsel som pågår allerede."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.DefaultCachePolicy
  id: DefaultCachePolicy
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: DefaultCachePolicy
  nameWithType: FtpWebRequest.DefaultCachePolicy
  fullName: System.Net.FtpWebRequest.DefaultCachePolicy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Definerer hurtigbufferen standardpolicyen for alle FTP-forespørsler."
  remarks: "Bare innhold motta ved hjelp av den <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>kommandoen hurtigbufres.</xref:System.Net.WebRequestMethods.Ftp.DownloadFile>       Tabellen nedenfor beskriver virkningene av FTP hurtigbufring policyer på <xref:System.Net.FtpWebRequest>.</xref:System.Net.FtpWebRequest>      | Policyen | Effekt |   |------------|------------|   | <xref:System.Net.Cache.RequestCacheLevel>| Returnerer den bufrede ressursen hvis ressursen er oppdatert, innholdslengden er riktig, og utløper, endre og innholdslengden attributter finnes. |   | <xref:System.Net.Cache.RequestCacheLevel>| Returnerer ressursen fra serveren. |   | <xref:System.Net.Cache.RequestCacheLevel>| Returnerer den bufrede ressursen hvis innholdslengden finnes og størrelsen på oppføring; ellers oppstår det et <xref:System.Net.WebException>. |   | <xref:System.Net.Cache.RequestCacheLevel>| Returnerer den bufrede ressursen hvis innholdslengden er angitt, og størrelsen på oppføring; Ellers ressursen lastes ned fra serveren og er returnert til oppkalleren. |   | <xref:System.Net.Cache.RequestCacheLevel>| Returnerer den bufrede ressursen hvis tidsstempelet for bufrede ressursen er identisk med tidsstempelet for ressursen på serveren. Ellers ressursen er lastet ned fra serveren, lagret i hurtigbufferen og returnert til oppkalleren. |   | <xref:System.Net.Cache.RequestCacheLevel>| Laster ned ressursen fra serveren, lagrer den i hurtigbufferen, og returnerer ressursen til oppkalleren. |   | <xref:System.Net.Cache.RequestCacheLevel>| Hvis det finnes en bufret ressurs, slettes.</xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.WebException> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> Ressursen lastes ned fra serveren og er returnert til oppkalleren. |      > [!NOTE] > Innstillingen DefaultCachePolicy overstyrer noen konfigurasjonsinnstilling."
  syntax:
    content: public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }
    return:
      type: System.Net.Cache.RequestCachePolicy
      description: "En <xref href=&quot;System.Net.Cache.RequestCachePolicy&quot;> </xref> som definerer policy for hurtigbuffer for FTP-forespørsler."
  overload: System.Net.FtpWebRequest.DefaultCachePolicy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Oppkalleren prøvde å angi denne egenskapen <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.EnableSsl
  id: EnableSsl
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: EnableSsl
  nameWithType: FtpWebRequest.EnableSsl
  fullName: System.Net.FtpWebRequest.EnableSsl
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir en <xref:System.Boolean>som angir at en SSL-tilkobling skal brukes.</xref:System.Boolean>"
  remarks: "> [!CAUTION]> Med mindre egenskapen EnableSsl `true`, alle data og kommandoer, inkludert navn og passord brukerinformasjon, sendes til serveren i ren tekst. Alle overvåke nettverkstrafikk kan vise legitimasjonen din og bruke dem til å koble til serveren. Hvis du kobler til en FTP-serveren krever legitimasjon, og som støtter SSL, bør du sette EnableSsl til `true`.       Den `&quot;AUTH TLS&quot;` kommandoen sendes til serveren for å be om en krypterte øktnøkkelen. Hvis serveren ikke gjenkjenner denne kommandoen, mottar du en <xref:System.Net.WebException>unntak.</xref:System.Net.WebException>"
  example:
  - "The following code example uses an encrypted connection to download the directory listing from an FTP server.  \n  \n [!code-cpp[NCLFtpClient#8](~/add/codesnippet/cpp/p-system.net.ftpwebreque_11_1.cpp)]\n [!code-cs[NCLFtpClient#8](~/add/codesnippet/csharp/p-system.net.ftpwebreque_11_1.cs)]"
  syntax:
    content: public bool EnableSsl { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis kontrollen og data overføringer er kryptert. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardverdien er <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.FtpWebRequest.EnableSsl*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Tilkobling til FTP-serveren er allerede opprettet."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)
  id: EndGetRequestStream(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: EndGetRequestStream(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetRequestStream(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetRequestStream(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Slutter en ventende asynkron operasjon i gang med <xref:System.Net.FtpWebRequest.BeginGetRequestStream*>.</xref:System.Net.FtpWebRequest.BeginGetRequestStream*>"
  remarks: "Hvis operasjonen ikke er fullført, EndGetRequestStream metoden blokker før operasjonen er fullført. For å fastslå om operasjonen er fullført, kan du se den <xref:System.IAsyncResult.IsCompleted%2A>egenskapen før du kaller EndGetRequestStream.</xref:System.IAsyncResult.IsCompleted%2A>       I tillegg til unntak som beskrives i &quot;Unntak&quot;, rethrows EndGetRequestStream unntak som ble registrert under åpning av dataflyten for skriving.      > [!NOTE] > Dette medlemmet genererer sporingsinformasjon når du aktiverer sporing for nettverk i programmet. Hvis du vil ha mer informasjon, se [nettverk sporing i .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates ending an asynchronous operation to get a request's stream. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#5](~/add/codesnippet/csharp/m-system.net.ftpwebreque_1_1.cs)]\n [!code-cpp[NCLFtpAsync#5](~/add/codesnippet/cpp/m-system.net.ftpwebreque_1_1.cpp)]"
  syntax:
    content: public override System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>objektet som ble returnert under operasjonen startes.</xref:System.IAsyncResult>"
    return:
      type: System.IO.Stream
      description: "En skrivbar <xref:System.IO.Stream>forekomst som er tilknyttet denne forekomsten.</xref:System.IO.Stream>"
  overload: System.Net.FtpWebRequest.EndGetRequestStream*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>kan ikke hente ved å kalle <xref:System.Net.FtpWebRequest.BeginGetRequestStream*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Denne metoden allerede ble kalt for operasjonen som ble identifisert av <code> asyncResult </code>."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)
  id: EndGetResponse(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: EndGetResponse(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetResponse(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetResponse(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Slutter en ventende asynkron operasjon i gang med <xref:System.Net.FtpWebRequest.BeginGetResponse*>.</xref:System.Net.FtpWebRequest.BeginGetResponse*>"
  remarks: "Hvis operasjonen ikke er fullført da metoden EndGetResponse kalles, EndGetResponse blokker før operasjonen er fullført. Hvis du ikke blokkerer, kan du se den <xref:System.IAsyncResult.IsCompleted%2A>egenskapen før du kaller EndGetResponse.</xref:System.IAsyncResult.IsCompleted%2A>       I tillegg til unntak som beskrives i &quot;Unntak&quot;, rethrows EndGetResponse unntak som ble registrert under kommunikasjon med serveren.      > [!NOTE] > Dette medlemmet genererer sporingsinformasjon når du aktiverer sporing for nettverk i programmet. Hvis du vil ha mer informasjon, se [nettverk sporing i .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates ending an asynchronous operation to get a response. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#6](~/add/codesnippet/csharp/m-system.net.ftpwebreque_5_1.cs)]\n [!code-cpp[NCLFtpAsync#6](~/add/codesnippet/cpp/m-system.net.ftpwebreque_5_1.cpp)]"
  syntax:
    content: public override System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som ble returnert under operasjonen startes.</xref:System.IAsyncResult>"
    return:
      type: System.Net.WebResponse
      description: "En <xref:System.Net.WebResponse>referanse som inneholder en <xref href=&quot;System.Net.FtpWebResponse&quot;> </xref> forekomsten.</xref:System.Net.WebResponse> Dette objektet inneholder FTP-serveren svar på forespørselen."
  overload: System.Net.FtpWebRequest.EndGetResponse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>kan ikke hente ved å kalle <xref:System.Net.FtpWebRequest.BeginGetResponse*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Denne metoden allerede ble kalt for operasjonen som ble identifisert av <code> asyncResult </code>."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Det oppstod en feil ved hjelp av en HTTP-proxy."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.GetRequestStream
  id: GetRequestStream
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: GetRequestStream()
  nameWithType: FtpWebRequest.GetRequestStream()
  fullName: System.Net.FtpWebRequest.GetRequestStream()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter dataflyten brukes til å laste opp data til en FTP-server."
  remarks: "Angi forespørselsegenskapene før GetRequestStream-metoden. Du må lukke dataflyten før sending av forespørselen etter skriving av data til dataflyten.       Hvis du ikke er angitt i <xref:System.Net.FtpWebRequest.Method%2A>egenskapen <xref:System.Net.WebRequestMethods.Ftp.UploadFile>eller <xref:System.Net.WebRequestMethods.Ftp.AppendFile>, du kan ikke hente dataflyten.</xref:System.Net.WebRequestMethods.Ftp.AppendFile> </xref:System.Net.WebRequestMethods.Ftp.UploadFile> </xref:System.Net.FtpWebRequest.Method%2A>       GetRequestStream blokker under venting på dataflyten. Du kan unngå dette ved å kalle den <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>metoden i stedet GetRequestStream.</xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>      > [!NOTE] > Dette medlemmet genererer sporingsinformasjon når du aktiverer sporing for nettverk i programmet. Hvis du vil ha mer informasjon, se [nettverk sporing i .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates copying a file to a request's data stream and sending a request to the server to upload the data and append it to a file.  \n  \n [!code-cpp[NCLFtpClient#3](~/add/codesnippet/cpp/m-system.net.ftpwebreque_4_1.cpp)]\n [!code-cs[NCLFtpClient#3](~/add/codesnippet/csharp/m-system.net.ftpwebreque_4_1.cs)]"
  syntax:
    content: public override System.IO.Stream GetRequestStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "En skrivbar <xref:System.IO.Stream>-forekomsten som brukes til å lagre data sendes til serveren av gjeldende forespørsel.</xref:System.IO.Stream>"
  overload: System.Net.FtpWebRequest.GetRequestStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Net.FtpWebRequest.BeginGetRequestStream*> has been called and has not completed.  \n  \n \\- or -  \n  \n An HTTP proxy is enabled, and you attempted to use an FTP command other than &lt;xref:System.Net.WebRequestMethods.Ftp.DownloadFile?displayProperty=fullName&gt;, &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectory?displayProperty=fullName&gt;, or &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails?displayProperty=fullName&gt;."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Kan ikke opprette en tilkobling til FTP-serveren."
  - type: System.Net.ProtocolViolationException
    commentId: T:System.Net.ProtocolViolationException
    description: "Den <xref:System.Net.FtpWebRequest.Method*>ikke settes til &lt;xref:System.Net.WebRequestMethods.Ftp.UploadFile?displayProperty=fullName&gt; eller &lt;xref:System.Net.WebRequestMethods.Ftp.AppendFile?displayProperty=fullName&gt;.</xref:System.Net.FtpWebRequest.Method*>"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.GetResponse
  id: GetResponse
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: GetResponse()
  nameWithType: FtpWebRequest.GetResponse()
  fullName: System.Net.FtpWebRequest.GetResponse()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Returnerer responsen fra FTP-serveren."
  remarks: "For å få tilgang til FTP-spesifikke egenskapene, må du endre <xref:System.Net.WebResponse>objektet som ble returnert av denne metoden <xref:System.Net.FtpWebResponse>.</xref:System.Net.FtpWebResponse> </xref:System.Net.WebResponse>       GetResponse fører til en kontrolltilkobling til opprettes, og kan også opprette en datatilkobling. GetResponse blokker før svaret er mottatt. For å forhindre dette, kan du utføre denne operasjonen asynkront ved å ringe det <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>og <xref:System.Net.FtpWebRequest.EndGetResponse%2A>metoder i stedet GetResponse.</xref:System.Net.FtpWebRequest.EndGetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A>       Hvis den <xref:System.Net.FtpWebRequest.Proxy%2A>egenskapen er angitt, enten direkte eller i en konfigurasjonsfil gjøres kommunikasjon med FTP-serveren via proxyen.</xref:System.Net.FtpWebRequest.Proxy%2A>       Hvis en <xref:System.Net.WebException>er et, bruker du <xref:System.Net.WebException.Response%2A>og <xref:System.Net.WebException.Status%2A>Egenskaper for unntak for å finne svar fra serveren.</xref:System.Net.WebException.Status%2A> </xref:System.Net.WebException.Response%2A> </xref:System.Net.WebException>       Dette medlemmet produserer sporingsinformasjon når du aktiverer sporing for nettverk i programmet. Hvis du vil ha mer informasjon, se [nettverk sporing i .NET Framework](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Flere kall til GetResponse returnere det samme objektet svar; forespørselen er ikke utgitt."
  example:
  - "The following code example demonstrates copying a file to a request's data stream and sending a request to append data to a file to the server. The example calls GetResponse to send the request and block until the response is returned by the server.  \n  \n [!code-cpp[NCLFtpClient#3](~/add/codesnippet/cpp/m-system.net.ftpwebreque_2_1.cpp)]\n [!code-cs[NCLFtpClient#3](~/add/codesnippet/csharp/m-system.net.ftpwebreque_2_1.cs)]"
  syntax:
    content: public override System.Net.WebResponse GetResponse ();
    parameters: []
    return:
      type: System.Net.WebResponse
      description: "En <xref:System.Net.WebResponse>referanse som inneholder en <xref href=&quot;System.Net.FtpWebResponse&quot;> </xref> forekomsten.</xref:System.Net.WebResponse> Dette objektet inneholder FTP-serveren svar på forespørselen."
  overload: System.Net.FtpWebRequest.GetResponse*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "GetResponse or <xref:System.Net.FtpWebRequest.BeginGetResponse*> has already been called for this instance.  \n  \n \\- or -  \n  \n An HTTP proxy is enabled, and you attempted to use an FTP command other than &lt;xref:System.Net.WebRequestMethods.Ftp.DownloadFile?displayProperty=fullName&gt;, &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectory?displayProperty=fullName&gt;, or &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails?displayProperty=fullName&gt;."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "<xref:System.Net.FtpWebRequest.EnableSsl*> is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, but the server does not support this feature.  \n  \n \\- or -  \n  \n A <xref:System.Net.FtpWebRequest.Timeout*> was specified and the timeout has expired."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Headers
  id: Headers
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Headers
  nameWithType: FtpWebRequest.Headers
  fullName: System.Net.FtpWebRequest.Headers
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter en tom <xref:System.Net.WebHeaderCollection>objektet.</xref:System.Net.WebHeaderCollection>"
  remarks: "Egenskapen overskrifter finnes bare for kompatibilitet med andre implementeringer av den <xref:System.Net.WebRequest>og <xref:System.Net.WebResponse>klasser.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> Det er ingen grunn til å bruke overskrifter."
  syntax:
    content: public override System.Net.WebHeaderCollection Headers { get; set; }
    return:
      type: System.Net.WebHeaderCollection
      description: "En tom <xref:System.Net.WebHeaderCollection>objektet.</xref:System.Net.WebHeaderCollection>"
  overload: System.Net.FtpWebRequest.Headers*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.KeepAlive
  id: KeepAlive
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: KeepAlive
  nameWithType: FtpWebRequest.KeepAlive
  fullName: System.Net.FtpWebRequest.KeepAlive
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir en <xref:System.Boolean>verdi som angir om kontrolltilkobling til FTP-serveren er lukket etter at forespørselen er fullført.</xref:System.Boolean>"
  remarks: "Når egenskapen KeepAlive er satt til `false`, kontroll-tilkoblingen er lukket når du kaller den <xref:System.Net.FtpWebResponse.Close%2A>metoden.</xref:System.Net.FtpWebResponse.Close%2A>       Endre KeepAlive etter kall av <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, eller <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>metoden forårsaker en <xref:System.InvalidOperationException>unntak.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.  \n  \n [!code-cpp[NCLFtpClient#15](~/add/codesnippet/cpp/p-system.net.ftpwebreque_0_1.cpp)]\n [!code-cs[NCLFtpClient#15](~/add/codesnippet/csharp/p-system.net.ftpwebreque_0_1.cs)]"
  syntax:
    content: public bool KeepAlive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis tilkoblingen til serveren ikke skal ødelegges; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardverdien er <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.FtpWebRequest.KeepAlive*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "En ny verdi ble angitt for denne egenskapen for en forespørsel som pågår allerede."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Method
  id: Method
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Method
  nameWithType: FtpWebRequest.Method
  fullName: System.Net.FtpWebRequest.Method
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir kommandoen som skal sendes til FTP-serveren."
  remarks: "Metoden egenskapen bestemmer hvilken kommando som er sendt til serveren. Du har angitt metoden ved hjelp av strenger som er definert i felles feltet medlemmene av <xref:System.Net.WebRequestMethods.Ftp>klasse.</xref:System.Net.WebRequestMethods.Ftp> Legg merke til at strengene definert i den <xref:System.Net.WebRequestMethods.Ftp>klassen er de eneste alternativene som støttes for metoden egenskapen.</xref:System.Net.WebRequestMethods.Ftp> Angivelse av metode-egenskapen til en annen verdi resulterer i en <xref:System.ArgumentException>unntak.</xref:System.ArgumentException>       Når du angir metode <xref:System.Net.WebRequestMethods.Ftp.UploadFile>, må du gjøre dette før du kaller den <xref:System.Net.FtpWebRequest.GetRequestStream%2A>metoden.</xref:System.Net.FtpWebRequest.GetRequestStream%2A> </xref:System.Net.WebRequestMethods.Ftp.UploadFile> Kan ikke kalle disse medlemmene i riktig rekkefølge årsaker en <xref:System.Net.ProtocolViolationException>unntak når du prøver å hente forespørselen for dataflyten.</xref:System.Net.ProtocolViolationException>       Legitimasjonen som er angitt for den <xref:System.Net.FtpWebRequest>objektet må ha tillatelse til å utføre den angitte metoden.</xref:System.Net.FtpWebRequest> Hvis ikke mislykkes FTP-kommandoen.       Hvis du vil finne vellykket eller mislykket av en kommando, kan du se den <xref:System.Net.FtpWebResponse.StatusCode%2A>og <xref:System.Net.FtpWebResponse.StatusDescription%2A>Egenskaper.</xref:System.Net.FtpWebResponse.StatusDescription%2A> </xref:System.Net.FtpWebResponse.StatusCode%2A>"
  example:
  - "The following code example sets this property to <xref:System.Net.WebRequestMethods.Ftp.DeleteFile>.  \n  \n [!code-cpp[NCLFtpClient#4](~/add/codesnippet/cpp/p-system.net.ftpwebreque_2_1.cpp)]\n [!code-cs[NCLFtpClient#4](~/add/codesnippet/csharp/p-system.net.ftpwebreque_2_1.cs)]"
  syntax:
    content: public override string Method { get; set; }
    return:
      type: System.String
      description: "En <xref:System.String>verdi som inneholder FTP-kommandoen som skal sendes til serveren.</xref:System.String> Standardverdien er <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>.</xref:System.Net.WebRequestMethods.Ftp.DownloadFile>"
  overload: System.Net.FtpWebRequest.Method*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "En ny verdi ble angitt for denne egenskapen for en forespørsel som pågår allerede."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The method is invalid.  \n  \n \\- or -  \n  \n The method is not supported.  \n  \n \\- or -  \n  \n Multiple methods were specified."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.PreAuthenticate
  id: PreAuthenticate
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: PreAuthenticate
  nameWithType: FtpWebRequest.PreAuthenticate
  fullName: System.Net.FtpWebRequest.PreAuthenticate
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Oppstår alltid <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "Egenskapen PreAuthenticate finnes bare for kompatibilitet med andre implementeringer av den <xref:System.Net.WebRequest>og <xref:System.Net.WebResponse>klasser.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest>"
  syntax:
    content: public override bool PreAuthenticate { get; set; }
    return:
      type: System.Boolean
      description: "Oppstår alltid <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.FtpWebRequest.PreAuthenticate*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Preauthentication støttes ikke for FTP."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Proxy
  id: Proxy
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Proxy
  nameWithType: FtpWebRequest.Proxy
  fullName: System.Net.FtpWebRequest.Proxy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir proxyen brukes til å kommunisere med FTP-serveren."
  remarks: "Egenskapen Proxy identifiserer den <xref:System.Net.IWebProxy>-forekomst som kommuniserer med FTP-serveren.</xref:System.Net.IWebProxy> Proxyen er angitt av systemet ved å bruke konfigurasjonsfilene og innstillingene for Internet Explorer lokalt nettverk. Hvis du vil angi at ingen proxy skal brukes, må du angi Proxy til proxy-forekomsten ble returnert av den <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=fullName>metoden.</xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=fullName> Du finner mer informasjon om automatisk proxy-gjenkjenning [automatisk Proxy-oppdaging](~/add/includes/ajax-current-ext-md.md).       Du må angi Proxy før skriving av data til den forespørselen for dataflyten eller henting av svaret. Endre Proxy etter kall av <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, eller <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>metoden forårsaker en <xref:System.InvalidOperationException>unntak.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       Den <xref:System.Net.FtpWebRequest>klassen støtter HTTP- og ISA brannmur klienten proxyer.</xref:System.Net.FtpWebRequest>       Hvis den angitte proxyen er en HTTP-proxy, bare den <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, og <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails>kommandoer som støttes.</xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> </xref:System.Net.WebRequestMethods.Ftp.ListDirectory> </xref:System.Net.WebRequestMethods.Ftp.DownloadFile>"
  example:
  - "The following code example displays this property value.  \n  \n [!code-cpp[NCLFtpClient#16](~/add/codesnippet/cpp/p-system.net.ftpwebreque_1_1.cpp)]\n [!code-cs[NCLFtpClient#16](~/add/codesnippet/csharp/p-system.net.ftpwebreque_1_1.cs)]"
  syntax:
    content: public override System.Net.IWebProxy Proxy { get; set; }
    return:
      type: System.Net.IWebProxy
      description: "En <xref:System.Net.IWebProxy>forekomsten er ansvarlig for å kommunisere med FTP-serveren.</xref:System.Net.IWebProxy>"
  overload: System.Net.FtpWebRequest.Proxy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Denne egenskapen kan ikke settes til <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "En ny verdi ble angitt for denne egenskapen for en forespørsel som pågår allerede."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ReadWriteTimeout
  id: ReadWriteTimeout
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ReadWriteTimeout
  nameWithType: FtpWebRequest.ReadWriteTimeout
  fullName: System.Net.FtpWebRequest.ReadWriteTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir et tidsavbrudd under lesing fra eller skrive til en dataflyt."
  remarks: "ReadWriteTimeout brukes under skriving til dataflyt returnert av den <xref:System.Net.FtpWebRequest.GetRequestStream%2A>metoden eller lesing fra dataflyten som ble returnert av den <xref:System.Net.FtpWebResponse.GetResponseStream%2A>metoden.</xref:System.Net.FtpWebResponse.GetResponseStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       Egenskapen ReadWriteTimeout kontrollerer spesielt tidsavbruddet for den <xref:System.IO.Stream.Read%2A>metoden som brukes til å lese dataflyten som ble returnert av den <xref:System.Net.FtpWebResponse.GetResponseStream%2A>metoden, og den <xref:System.IO.Stream.Write%2A>metoden som brukes til å skrive til dataflyten som ble returnert av den <xref:System.Net.FtpWebRequest.GetRequestStream%2A>metoden.</xref:System.Net.FtpWebRequest.GetRequestStream%2A> </xref:System.IO.Stream.Write%2A> </xref:System.Net.FtpWebResponse.GetResponseStream%2A> </xref:System.IO.Stream.Read%2A> Hvis tidsavbruddsperioden overskrides, oppstår metoden kall en <xref:System.Net.WebException>med <xref:System.Net.WebExceptionStatus>satt til <xref:System.Net.WebExceptionStatus>.</xref:System.Net.WebExceptionStatus> </xref:System.Net.WebExceptionStatus> </xref:System.Net.WebException>       For å angi hvor lenge man skal vente på å fullføre forespørselen, kan du bruke den <xref:System.Net.FtpWebRequest.Timeout%2A>egenskapen.</xref:System.Net.FtpWebRequest.Timeout%2A>"
  syntax:
    content: public int ReadWriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "Antall millisekunder før lesing og skriving ganger. Standardverdien er 300 000 millisekunder (5 minutter)."
  overload: System.Net.FtpWebRequest.ReadWriteTimeout*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Forespørselen har allerede sendt."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Verdien som er angitt for en set-operasjon er mindre enn eller lik null, og er ikke lik &lt;xref:System.Threading.Timeout.Infinite?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.RenameTo
  id: RenameTo
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: RenameTo
  nameWithType: FtpWebRequest.RenameTo
  fullName: System.Net.FtpWebRequest.RenameTo
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir det nye navnet på en fil som gis nytt navn."
  syntax:
    content: public string RenameTo { get; set; }
    return:
      type: System.String
      description: "Det nye navnet på filen får nytt navn."
  overload: System.Net.FtpWebRequest.RenameTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Verdien som er angitt for en set-operasjon er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en tom streng."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "En ny verdi ble angitt for denne egenskapen for en forespørsel som pågår allerede."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.RequestUri
  id: RequestUri
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: RequestUri
  nameWithType: FtpWebRequest.RequestUri
  fullName: System.Net.FtpWebRequest.RequestUri
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter URI ble forespurt av denne forekomsten."
  remarks: "Verdien for egenskapen RequestUri er URI angitt når den <xref:System.Net.WebRequest.Create%2A>metoden ble kalt for å få denne forekomsten.</xref:System.Net.WebRequest.Create%2A>"
  example:
  - "The following code example displays this property value.  \n  \n [!code-cpp[NCLFtpClient#14](~/add/codesnippet/cpp/p-system.net.ftpwebreque_5_1.cpp)]\n [!code-cs[NCLFtpClient#14](~/add/codesnippet/csharp/p-system.net.ftpwebreque_5_1.cs)]"
  syntax:
    content: public override Uri RequestUri { get; }
    return:
      type: System.Uri
      description: "En <xref:System.Uri>-forekomst som identifiserer en ressurs som er tilgjengelig via File Transfer Protocol.</xref:System.Uri>"
  overload: System.Net.FtpWebRequest.RequestUri*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ServicePoint
  id: ServicePoint
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ServicePoint
  nameWithType: FtpWebRequest.ServicePoint
  fullName: System.Net.FtpWebRequest.ServicePoint
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter den <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektet brukes til å koble til FTP-serveren."
  remarks: "Hvis ingen <xref:System.Net.ServicePoint>objektet finnes, en mappe for FTP-serveren.</xref:System.Net.ServicePoint> Angi maksimalt antall tilkoblinger som kan være åpen for FTP-server ved å angi den <xref:System.Net.ServicePoint.ConnectionLimit%2A>for den <xref:System.Net.ServicePoint>forekomsten ble returnert av denne egenskapen.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint.ConnectionLimit%2A>"
  example:
  - "The following code example retrieves the service point from a request and sets the maximum number of connections to one.  \n  \n [!code-cpp[NCLFtpClient#1](~/add/codesnippet/cpp/p-system.net.ftpwebreque_9_1.cpp)]\n [!code-cs[NCLFtpClient#1](~/add/codesnippet/csharp/p-system.net.ftpwebreque_9_1.cs)]"
  syntax:
    content: public System.Net.ServicePoint ServicePoint { get; }
    return:
      type: System.Net.ServicePoint
      description: "En <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objekt som kan brukes til å tilpasse virkemåte ved tilkobling."
  overload: System.Net.FtpWebRequest.ServicePoint*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Timeout
  id: Timeout
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Timeout
  nameWithType: FtpWebRequest.Timeout
  fullName: System.Net.FtpWebRequest.Timeout
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir antall millisekunder det skal ventes for en forespørsel."
  remarks: "Hvis du vil angi en uendelig verdi, angi tidsavbrudd for egenskapen <xref:System.Threading.Timeout.Infinite>(-1).</xref:System.Threading.Timeout.Infinite> Dette er standardverdien.       Tidsavbruddet som er antall millisekunder som en synkron forespørsel med den <xref:System.Net.FtpWebRequest.GetResponse%2A>metoden venter på svar, og at den <xref:System.Net.FtpWebRequest.GetRequestStream%2A>metoden venter på en dataflyt.</xref:System.Net.FtpWebRequest.GetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> Hvis en ressurs ikke svarer innen tidsavbruddsperioden, oppstår forespørselen en <xref:System.Net.WebException>med <xref:System.Net.WebException.Status%2A>egenskapen satt til <xref:System.Net.WebExceptionStatus>.</xref:System.Net.WebExceptionStatus> </xref:System.Net.WebException.Status%2A> </xref:System.Net.WebException>       Endre tidsavbrudd etter kall av <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, eller <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>metoden forårsaker en <xref:System.InvalidOperationException>unntak.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       En spørring (DNS-System) kan ta opptil 15 sekunder å returnere tidsavbrudd. Hvis forespørselen inneholder et vertsnavn som krever løsning, og angi tidsavbrudd til en verdi mindre enn 15 sekunder, kan det ta 15 sekunder eller mer før en <xref:System.Net.WebException>er et for å angi et tidsavbrudd for forespørselen.</xref:System.Net.WebException>"
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[NCLFtpClient#23](~/add/codesnippet/cpp/p-system.net.ftpwebreque_3_1.cpp)]\n [!code-cs[NCLFtpClient#23](~/add/codesnippet/csharp/p-system.net.ftpwebreque_3_1.cs)]"
  syntax:
    content: public override int Timeout { get; set; }
    return:
      type: System.Int32
      description: "En <xref:System.Int32>verdi som inneholder antall millisekunder det skal ventes før en forespørsel blir tidsavbrutt.</xref:System.Int32> Standardverdien er <xref:System.Threading.Timeout.Infinite>.</xref:System.Threading.Timeout.Infinite>"
  overload: System.Net.FtpWebRequest.Timeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den angitte verdien er mindre enn null og ikke <xref:System.Threading.Timeout.Infinite>.</xref:System.Threading.Timeout.Infinite>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "En ny verdi ble angitt for denne egenskapen for en forespørsel som pågår allerede."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.UseBinary
  id: UseBinary
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: UseBinary
  nameWithType: FtpWebRequest.UseBinary
  fullName: System.Net.FtpWebRequest.UseBinary
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir en <xref:System.Boolean>verdi som angir datatypen for filoverføringer.</xref:System.Boolean>"
  remarks: "Hvis du sender binære data, for eksempel et bilde Sett denne egenskapen til `true`. Hvis du sender tekst, angi egenskapen `false`. Angir `true` fører til at den <xref:System.Net.FtpWebRequest>til å sende en `&quot;TYPE I&quot;` kommandoen til serveren.</xref:System.Net.FtpWebRequest> Angir `false` fører til at den <xref:System.Net.FtpWebRequest>til å sende en `&quot;Type A&quot;` kommandoen til serveren.</xref:System.Net.FtpWebRequest> FTP-servere kan ignorere disse kommandoer.       Endre UseBinary etter kall av <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, eller <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>metoden forårsaker en <xref:System.InvalidOperationException>unntak.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.  \n  \n [!code-cpp[NCLFtpClient#15](~/add/codesnippet/cpp/p-system.net.ftpwebreque_7_1.cpp)]\n [!code-cs[NCLFtpClient#15](~/add/codesnippet/csharp/p-system.net.ftpwebreque_7_1.cs)]"
  syntax:
    content: public bool UseBinary { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>som viser til serveren for at dataene som skal overføres binær; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> til å angi at dataene er tekst. Standardverdien er <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.FtpWebRequest.UseBinary*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "En ny verdi ble angitt for denne egenskapen for en forespørsel som pågår allerede."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: UseDefaultCredentials
  nameWithType: FtpWebRequest.UseDefaultCredentials
  fullName: System.Net.FtpWebRequest.UseDefaultCredentials
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Oppstår alltid <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "Egenskapen UseDefaultCredentials finnes bare for kompatibilitet med andre implementeringer av den <xref:System.Net.WebRequest>og <xref:System.Net.WebResponse>klasser.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> Det er ingen grunn til å bruke UseDefaultCredentials."
  syntax:
    content: public override bool UseDefaultCredentials { get; set; }
    return:
      type: System.Boolean
      description: "Oppstår alltid <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.FtpWebRequest.UseDefaultCredentials*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Standardlegitimasjon støttes ikke for FTP."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.UsePassive
  id: UsePassive
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: UsePassive
  nameWithType: FtpWebRequest.UsePassive
  fullName: System.Net.FtpWebRequest.UsePassive
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir virkemåten til et klientprogram data overføringsprosessen."
  remarks: "Angi egenskapen UsePassive til `true` sender den &quot;`PASV&quot;` kommandoen til serveren. Denne kommandoen ber om at serveren ikke lytte på en Dataport og ventes på tilkobling i stedet for å starte en ved mottak av en kommando for overføring.       En beskrivelse av handlingene som er angitt med UsePassive avsnittet RFC 959, &quot;File Transfer Protocol,&quot; 3.2 &quot;Oppretter datatilkoblinger&quot; og del 4.1.2, &quot;Overføre parameteren kommandoer,&quot; tilgjengelig på [http://www.rfc-editor.org/](http://www.ietf.org/rfc/rfc959.txt).       Endre UsePassive etter kall av <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, eller <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>metoden forårsaker en <xref:System.InvalidOperationException>unntak.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       Hvis UsePassive er satt til `true`FTP-serveren kan ikke sende størrelsen på filen og laste ned pågår kan alltid være null. Hvis UsePassive er satt til `false`, en brannmur kan øke varselet og blokkere nedlasting av filer."
  example:
  - "The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.  \n  \n [!code-cpp[NCLFtpClient#6](~/add/codesnippet/cpp/p-system.net.ftpwebreque_10_1.cpp)]\n [!code-cs[NCLFtpClient#6](~/add/codesnippet/csharp/p-system.net.ftpwebreque_10_1.cs)]"
  syntax:
    content: public bool UsePassive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Hvis klienten programmets dataoverføring lytter prosessen for en tilkobling til dataport; Ellers <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> hvis klienten må opprette en tilkobling til dataport. Standardverdien er <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.FtpWebRequest.UsePassive*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "En ny verdi ble angitt for denne egenskapen for en forespørsel som pågår allerede."
  platform:
  - net462
references:
- uid: System.Net.WebRequest
  isExternal: false
  name: System.Net.WebRequest
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.Net.ProtocolViolationException
  isExternal: true
  name: System.Net.ProtocolViolationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.FtpWebRequest.Abort
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Abort()
  nameWithType: FtpWebRequest.Abort()
  fullName: System.Net.FtpWebRequest.Abort()
- uid: System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetRequestStream(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetResponse(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
- uid: System.Net.FtpWebRequest.ClientCertificates
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ClientCertificates
  nameWithType: FtpWebRequest.ClientCertificates
  fullName: System.Net.FtpWebRequest.ClientCertificates
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Net.FtpWebRequest.ConnectionGroupName
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ConnectionGroupName
  nameWithType: FtpWebRequest.ConnectionGroupName
  fullName: System.Net.FtpWebRequest.ConnectionGroupName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.FtpWebRequest.ContentLength
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentLength
  nameWithType: FtpWebRequest.ContentLength
  fullName: System.Net.FtpWebRequest.ContentLength
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.FtpWebRequest.ContentOffset
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentOffset
  nameWithType: FtpWebRequest.ContentOffset
  fullName: System.Net.FtpWebRequest.ContentOffset
- uid: System.Net.FtpWebRequest.ContentType
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentType
  nameWithType: FtpWebRequest.ContentType
  fullName: System.Net.FtpWebRequest.ContentType
- uid: System.Net.FtpWebRequest.Credentials
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Credentials
  nameWithType: FtpWebRequest.Credentials
  fullName: System.Net.FtpWebRequest.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.FtpWebRequest.DefaultCachePolicy
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: DefaultCachePolicy
  nameWithType: FtpWebRequest.DefaultCachePolicy
  fullName: System.Net.FtpWebRequest.DefaultCachePolicy
- uid: System.Net.Cache.RequestCachePolicy
  parent: System.Net.Cache
  isExternal: false
  name: RequestCachePolicy
  nameWithType: RequestCachePolicy
  fullName: System.Net.Cache.RequestCachePolicy
- uid: System.Net.FtpWebRequest.EnableSsl
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EnableSsl
  nameWithType: FtpWebRequest.EnableSsl
  fullName: System.Net.FtpWebRequest.EnableSsl
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetRequestStream(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetRequestStream(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetRequestStream(IAsyncResult)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetResponse(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetResponse(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetResponse(IAsyncResult)
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: true
  name: WebResponse
  nameWithType: WebResponse
  fullName: System.Net.WebResponse
- uid: System.Net.FtpWebRequest.GetRequestStream
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetRequestStream()
  nameWithType: FtpWebRequest.GetRequestStream()
  fullName: System.Net.FtpWebRequest.GetRequestStream()
- uid: System.Net.FtpWebRequest.GetResponse
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetResponse()
  nameWithType: FtpWebRequest.GetResponse()
  fullName: System.Net.FtpWebRequest.GetResponse()
- uid: System.Net.FtpWebRequest.Headers
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Headers
  nameWithType: FtpWebRequest.Headers
  fullName: System.Net.FtpWebRequest.Headers
- uid: System.Net.WebHeaderCollection
  parent: System.Net
  isExternal: true
  name: WebHeaderCollection
  nameWithType: WebHeaderCollection
  fullName: System.Net.WebHeaderCollection
- uid: System.Net.FtpWebRequest.KeepAlive
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: KeepAlive
  nameWithType: FtpWebRequest.KeepAlive
  fullName: System.Net.FtpWebRequest.KeepAlive
- uid: System.Net.FtpWebRequest.Method
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Method
  nameWithType: FtpWebRequest.Method
  fullName: System.Net.FtpWebRequest.Method
- uid: System.Net.FtpWebRequest.PreAuthenticate
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: PreAuthenticate
  nameWithType: FtpWebRequest.PreAuthenticate
  fullName: System.Net.FtpWebRequest.PreAuthenticate
- uid: System.Net.FtpWebRequest.Proxy
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Proxy
  nameWithType: FtpWebRequest.Proxy
  fullName: System.Net.FtpWebRequest.Proxy
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Net.FtpWebRequest.ReadWriteTimeout
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ReadWriteTimeout
  nameWithType: FtpWebRequest.ReadWriteTimeout
  fullName: System.Net.FtpWebRequest.ReadWriteTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.FtpWebRequest.RenameTo
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RenameTo
  nameWithType: FtpWebRequest.RenameTo
  fullName: System.Net.FtpWebRequest.RenameTo
- uid: System.Net.FtpWebRequest.RequestUri
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RequestUri
  nameWithType: FtpWebRequest.RequestUri
  fullName: System.Net.FtpWebRequest.RequestUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.FtpWebRequest.ServicePoint
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ServicePoint
  nameWithType: FtpWebRequest.ServicePoint
  fullName: System.Net.FtpWebRequest.ServicePoint
- uid: System.Net.ServicePoint
  parent: System.Net
  isExternal: false
  name: ServicePoint
  nameWithType: ServicePoint
  fullName: System.Net.ServicePoint
- uid: System.Net.FtpWebRequest.Timeout
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Timeout
  nameWithType: FtpWebRequest.Timeout
  fullName: System.Net.FtpWebRequest.Timeout
- uid: System.Net.FtpWebRequest.UseBinary
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseBinary
  nameWithType: FtpWebRequest.UseBinary
  fullName: System.Net.FtpWebRequest.UseBinary
- uid: System.Net.FtpWebRequest.UseDefaultCredentials
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: FtpWebRequest.UseDefaultCredentials
  fullName: System.Net.FtpWebRequest.UseDefaultCredentials
- uid: System.Net.FtpWebRequest.UsePassive
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UsePassive
  nameWithType: FtpWebRequest.UsePassive
  fullName: System.Net.FtpWebRequest.UsePassive
- uid: System.Net.FtpWebRequest.Abort*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Abort
  nameWithType: FtpWebRequest.Abort
- uid: System.Net.FtpWebRequest.BeginGetRequestStream*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetRequestStream
  nameWithType: FtpWebRequest.BeginGetRequestStream
- uid: System.Net.FtpWebRequest.BeginGetResponse*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetResponse
  nameWithType: FtpWebRequest.BeginGetResponse
- uid: System.Net.FtpWebRequest.ClientCertificates*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ClientCertificates
  nameWithType: FtpWebRequest.ClientCertificates
- uid: System.Net.FtpWebRequest.ConnectionGroupName*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ConnectionGroupName
  nameWithType: FtpWebRequest.ConnectionGroupName
- uid: System.Net.FtpWebRequest.ContentLength*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentLength
  nameWithType: FtpWebRequest.ContentLength
- uid: System.Net.FtpWebRequest.ContentOffset*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentOffset
  nameWithType: FtpWebRequest.ContentOffset
- uid: System.Net.FtpWebRequest.ContentType*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentType
  nameWithType: FtpWebRequest.ContentType
- uid: System.Net.FtpWebRequest.Credentials*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Credentials
  nameWithType: FtpWebRequest.Credentials
- uid: System.Net.FtpWebRequest.DefaultCachePolicy*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: DefaultCachePolicy
  nameWithType: FtpWebRequest.DefaultCachePolicy
- uid: System.Net.FtpWebRequest.EnableSsl*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EnableSsl
  nameWithType: FtpWebRequest.EnableSsl
- uid: System.Net.FtpWebRequest.EndGetRequestStream*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetRequestStream
  nameWithType: FtpWebRequest.EndGetRequestStream
- uid: System.Net.FtpWebRequest.EndGetResponse*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetResponse
  nameWithType: FtpWebRequest.EndGetResponse
- uid: System.Net.FtpWebRequest.GetRequestStream*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetRequestStream
  nameWithType: FtpWebRequest.GetRequestStream
- uid: System.Net.FtpWebRequest.GetResponse*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetResponse
  nameWithType: FtpWebRequest.GetResponse
- uid: System.Net.FtpWebRequest.Headers*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Headers
  nameWithType: FtpWebRequest.Headers
- uid: System.Net.FtpWebRequest.KeepAlive*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: KeepAlive
  nameWithType: FtpWebRequest.KeepAlive
- uid: System.Net.FtpWebRequest.Method*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Method
  nameWithType: FtpWebRequest.Method
- uid: System.Net.FtpWebRequest.PreAuthenticate*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: PreAuthenticate
  nameWithType: FtpWebRequest.PreAuthenticate
- uid: System.Net.FtpWebRequest.Proxy*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Proxy
  nameWithType: FtpWebRequest.Proxy
- uid: System.Net.FtpWebRequest.ReadWriteTimeout*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ReadWriteTimeout
  nameWithType: FtpWebRequest.ReadWriteTimeout
- uid: System.Net.FtpWebRequest.RenameTo*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RenameTo
  nameWithType: FtpWebRequest.RenameTo
- uid: System.Net.FtpWebRequest.RequestUri*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RequestUri
  nameWithType: FtpWebRequest.RequestUri
- uid: System.Net.FtpWebRequest.ServicePoint*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ServicePoint
  nameWithType: FtpWebRequest.ServicePoint
- uid: System.Net.FtpWebRequest.Timeout*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Timeout
  nameWithType: FtpWebRequest.Timeout
- uid: System.Net.FtpWebRequest.UseBinary*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseBinary
  nameWithType: FtpWebRequest.UseBinary
- uid: System.Net.FtpWebRequest.UseDefaultCredentials*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: FtpWebRequest.UseDefaultCredentials
- uid: System.Net.FtpWebRequest.UsePassive*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UsePassive
  nameWithType: FtpWebRequest.UsePassive
