### YamlMime:ManagedReference
items:
- uid: System.Windows.Shell.JumpList
  id: JumpList
  children:
  - System.Windows.Shell.JumpList.#ctor
  - System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)
  - System.Windows.Shell.JumpList.AddToRecentCategory(System.String)
  - System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)
  - System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)
  - System.Windows.Shell.JumpList.Apply
  - System.Windows.Shell.JumpList.BeginInit
  - System.Windows.Shell.JumpList.EndInit
  - System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)
  - System.Windows.Shell.JumpList.JumpItems
  - System.Windows.Shell.JumpList.JumpItemsRejected
  - System.Windows.Shell.JumpList.JumpItemsRemovedByUser
  - System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)
  - System.Windows.Shell.JumpList.ShowFrequentCategory
  - System.Windows.Shell.JumpList.ShowRecentCategory
  langs:
  - csharp
  name: JumpList
  nameWithType: JumpList
  fullName: System.Windows.Shell.JumpList
  type: Class
  summary: "Representerer en liste med elementer og oppgaver vises som en meny på en [!INCLUDE[win7](~/add/includes/win7-md.md)] på oppgavelinjen."
  remarks: "Den [!INCLUDE[win7](~/add/includes/win7-md.md)] oppgavelinjen gir forbedret funksjonalitet for å starte programmer direkte fra knappen på oppgavelinjen ved hjelp av hoppe lister. Hopplister brukes også i den [!INCLUDE[win7](~/add/includes/win7-md.md)] Start-menyen. Du har tilgang til en hoppe liste ved å høyreklikke en på oppgavelinjen, eller ved å velge retningspilen ved siden av et program på Start-menyen. Du finner mer informasjon om hoppe i det [oppgavelinjen](http://go.microsoft.com/fwlink/?LinkId=178478) delen av den Windows samhandling veiledning for brukeropplevelse.       Klassen JumpList inneholder en forvaltet wrapper for hoppe liste-funksjonalitet i den [!INCLUDE[win7](~/add/includes/win7-md.md)] oppgavelinjen og behandler data som er sendt til den [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] grensesnitt. Funksjonaliteten som vises av klassen JumpList er ikke tilgjengelig i versjoner av [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] tidligere enn [!INCLUDE[win7](~/add/includes/win7-md.md)]. Programmer som bruker klassen JumpList kjøres i andre versjoner av [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)], men listen hoppe er ikke tilgjengelig. Du finner mer informasjon om Windows-grensesnitt og opprinnelige hoppe listen APIer [oppgavelinjen utvidelser](http://go.microsoft.com/fwlink/?LinkId=178479).       Illustrasjonen nedenfor viser hoppe listen for Windows Media Player, med elementer i den **oppgaver** og **Frequent** kategorier.       ![Windows Media Player hoppe listen](~/add/media/wpfshell-jumplist.png &quot;Windows Media Player hoppe listen&quot;) Windows Media Player hoppe listen ## konfigurere en hoppe liste hoppe lister kan inneholde to typer elementer, et <xref:System.Windows.Shell.JumpTask>og <xref:System.Windows.Shell.JumpPath>.</xref:System.Windows.Shell.JumpPath> </xref:System.Windows.Shell.JumpTask> En <xref:System.Windows.Shell.JumpTask>er en kobling til et annet program, og en <xref:System.Windows.Shell.JumpPath>er en kobling til en fil.</xref:System.Windows.Shell.JumpPath> </xref:System.Windows.Shell.JumpTask> Du kan skille elementer i en liste som hopper visuelt ved å opprette en <xref:System.Windows.Shell.JumpTask>som ikke har en <xref:System.Windows.Shell.JumpTask.Title%2A>og <xref:System.Windows.Shell.JumpItem.CustomCategory%2A>angitte.</xref:System.Windows.Shell.JumpItem.CustomCategory%2A> </xref:System.Windows.Shell.JumpTask.Title%2A> </xref:System.Windows.Shell.JumpTask> Denne tom <xref:System.Windows.Shell.JumpTask>vises som en vannrett linje i listen hoppe.</xref:System.Windows.Shell.JumpTask>      > [!NOTE] > Hvis filtypen som er angitt i en <xref:System.Windows.Shell.JumpPath>er ikke registrert med programmet ditt filen vises ikke i listen hoppe.</xref:System.Windows.Shell.JumpPath> For eksempel hvis du legger til en <xref:System.Windows.Shell.JumpPath>som peker til en TXT-fil, må være registrert programmet til å behandle TXT-filer.</xref:System.Windows.Shell.JumpPath> Hvis du vil ha mer informasjon, se [innføring i filen tilknytninger](http://go.microsoft.com/fwlink/?LinkId=178480).       Hopp elementer plasseres i kategorier i JumpList. Som standard en <xref:System.Windows.Shell.JumpItem>vises i den **oppgaver** kategori.</xref:System.Windows.Shell.JumpItem> Du kan også angi en <xref:System.Windows.Shell.JumpItem.CustomCategory%2A>for <xref:System.Windows.Shell.JumpItem>.</xref:System.Windows.Shell.JumpItem> </xref:System.Windows.Shell.JumpItem.CustomCategory%2A>       Du kan angi om standard **nye** og **Frequent** kategoriene i JumpList ved å angi den <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>og <xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A>Egenskaper.</xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A> </xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> Innholdet i disse kategoriene administreres av den [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] grensesnitt. Fordi disse kategoriene kan inneholde mye av de samme dataene, vise du vanligvis én i din JumpList, men ikke begge deler. [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]administrerer postelementer automatisk hvis de åpnes via en vanlig dialogboks eller brukes til å åpne en applikasjon i filen typen association. Når et element i listen hoppe, kan du varsle i [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] grensesnittet for å legge til elementet som det **nye** kategori ved å ringe det <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>metoden.</xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>      ## Bruker en liste med hoppe i Windows-grensesnittet du kan ikke få direkte tilgang til i grensesnittet hoppe listen eller lese innholdet i JumpList-klassen. I stedet klassen JumpList gir en representasjon av en hoppe liste som du kan arbeide med, og deretter bruke den [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] grensesnitt. Du vanligvis lager en JumpList og det når programmet først kjøres én gang. Du kan imidlertid endre eller erstatte JumpList på kjøretidspunktet.       Når du har angitt egenskapene JumpList, må du bruke JumpList til Windows-grensesnittet før innholdet vises på oppgavelinjen hoppe listen. Dette gjøres automatisk når JumpList først er knyttet til en applikasjon i XAML eller i et kall til den <xref:System.Windows.Shell.JumpList.SetJumpList%2A>metoden.</xref:System.Windows.Shell.JumpList.SetJumpList%2A> Hvis du endrer innholdet i JumpList ved kjøretid, må du kalle den <xref:System.Windows.Shell.JumpList.Apply%2A>metode for å bruke gjeldende innhold i Windows-grensesnittet.</xref:System.Windows.Shell.JumpList.Apply%2A>      ## Angi en liste med hoppe i XAML A JumpList ikke automatisk er koblet til en <xref:System.Windows.Application>objektet.</xref:System.Windows.Application> Du knytter JumpList til en <xref:System.Windows.Application>objektet i XAML ved å bruke egenskapssyntaksen tilknyttede.</xref:System.Windows.Application> JumpList klassen implementerer den <xref:System.ComponentModel.ISupportInitialize>grensesnittet for å støtte XAML deklarasjon av en JumpList.</xref:System.ComponentModel.ISupportInitialize> Hvis JumpList er deklarert i XAML og knyttet til gjeldende <xref:System.Windows.Application>, brukes automatisk til den [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] grensesnitt når JumpList initialiseres.</xref:System.Windows.Application>      ## Angi og endre en hoppe liste med koden du knytte JumpList til en <xref:System.Windows.Application>objekt i koden ved å kalle statiske <xref:System.Windows.Shell.JumpList.SetJumpList%2A>metode.</xref:System.Windows.Shell.JumpList.SetJumpList%2A> </xref:System.Windows.Application> Dette gjelder også JumpList til den [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] grensesnitt.       Hvis du vil endre en JumpList ved kjøretid, kaller du <xref:System.Windows.Shell.JumpList.GetJumpList%2A>metode for å hente JumpList som er tilknyttet en <xref:System.Windows.Application>.</xref:System.Windows.Application> </xref:System.Windows.Shell.JumpList.GetJumpList%2A> Når du har endret egenskapene for JumpList, må du kalle den <xref:System.Windows.Shell.JumpList.Apply%2A>metode for å bruke endringene i Windows-grensesnittet.</xref:System.Windows.Shell.JumpList.Apply%2A>      > [!NOTE] > Vanligvis oppretter du en JumpList som er knyttet til den <xref:System.Windows.Application>og brukt på den [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] grensesnitt.</xref:System.Windows.Application> Du kan imidlertid opprette flere JumpList-objekter. Bare én JumpList om gangen kan brukes på den [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] grensesnittet, og bare én JumpList om gangen kan knyttes til en <xref:System.Windows.Application>.</xref:System.Windows.Application> .NET Framework krever ikke at dette er den samme JumpList.      > [!NOTE] > Denne klassen inneholder en kobling behov på klassen nivået som gjelder for alle medlemmer. En <xref:System.Security.SecurityException>forårsakes når umiddelbar oppkalleren ikke har tillatelse for fullstendig klarering.</xref:System.Security.SecurityException> Hvis du vil ha mer informasjon om krav for sikkerhet, se [koblingen krav](~/add/includes/ajax-current-ext-md.md) og [arv krav](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)."
  example:
  - "The following example shows an application with a Jump List. The application has three buttons that enable you to add a task to the current Jump List, clear the contents of the Jump List, and apply a new Jump List to the application.  \n  \n The following example shows how to declare a JumpList in markup. The JumpList contains two <xref:System.Windows.Shell.JumpTask> links and one <xref:System.Windows.Shell.JumpPath>. Applying the <xref:System.Windows.Shell.JumpPath> to the shell will fail if the application is not registered to handle the .txt file name extension.  \n  \n [!code-xml[Shell_JumpListSample#000](~/add/codesnippet/xaml/jumplistsample/app.xaml#000)]  \n  \n The following example shows the code-behind page for `App.xaml`. This code handles the <xref:System.Windows.Shell.JumpList.JumpItemsRejected> and <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> events.  \n  \n [!code-cs[Shell_JumpListSample#100](~/add/codesnippet/csharp/jumplistsample/app.xaml.cs#100)]  \n  \n The following example shows the markup used to create the application user interface.  \n  \n [!code-xml[Shell_JumpListSample#300](~/add/codesnippet/xaml/jumplistsample/mainwindow.xaml#300)]  \n  \n The following example shows the code-behind page for `MainWindow.xaml`. This code demonstrates how to modify, clear, and create a JumpList in procedural code. For the new Jump List, the static <xref:System.Windows.Shell.JumpList.SetJumpList%2A> method is called to associate the JumpList with the current application and apply the JumpList to the Windows shell.  \n  \n [!code-cs[Shell_JumpListSample#200](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#200)]"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      [System.Windows.Markup.ContentProperty("JumpItems")]

      public sealed class JumpList : System.ComponentModel.ISupportInitialize
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.ISupportInitialize
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.#ctor
  id: '#ctor'
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: JumpList()
  nameWithType: JumpList.JumpList()
  fullName: System.Windows.Shell.JumpList.JumpList()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> klasse."
  syntax:
    content: public JumpList ();
    parameters: []
  overload: System.Windows.Shell.JumpList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)'
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: JumpList(IEnumerable<JumpItem>,Boolean,Boolean)
  nameWithType: JumpList.JumpList(IEnumerable<JumpItem>,Boolean,Boolean)
  fullName: System.Windows.Shell.JumpList.JumpList(IEnumerable<JumpItem>,Boolean,Boolean)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> klassen med de angitte parameterne."
  remarks: "Den **nye** og **Frequent** kategorier inneholder ofte mange av de samme Hopp-elementene. Resultatet programmer vanligvis viser enten den **nye** eller **Frequent** kategori i listen hoppe, men ikke begge deler."
  syntax:
    content: public JumpList (System.Collections.Generic.IEnumerable<System.Windows.Shell.JumpItem> items, bool showFrequent, bool showRecent);
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem}
      description: "Samlingen av <xref href=&quot;System.Windows.Shell.JumpItem&quot;> </xref> objekter som vises i listen hoppe."
    - id: showFrequent
      type: System.Boolean
      description: "En verdi som angir om de mest brukte elementer vises i listen hoppe."
    - id: showRecent
      type: System.Boolean
      description: "En verdi som angir om nylig brukte elementer vises i listen hoppe."
  overload: System.Windows.Shell.JumpList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.AddToRecentCategory(System.String)
  id: AddToRecentCategory(System.String)
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: AddToRecentCategory(String)
  nameWithType: JumpList.AddToRecentCategory(String)
  fullName: System.Windows.Shell.JumpList.AddToRecentCategory(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Legger til den angitte elementet banen til den **nye** kategorien av hoppe-listen."
  remarks: "Innholdet i den **nye** kategori administreres av Windows-grensesnitt. Hvis du vil vise nylig brukte elementer i listen hoppe, angitt i <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>egenskapen `true`.</xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>       Du kan kalle metoden AddToRecentCategory for å be om at Windows-grensesnittet legger til en bane til den **nye** liste over. Hvis programmet ikke er registrert til å behandle filtypen for elementet, ikke vises i den **nye** liste- og kall til AddToRecentCategory mislykkes stille."
  syntax:
    content: public static void AddToRecentCategory (string itemPath);
    parameters:
    - id: itemPath
      type: System.String
      description: "Banen til å legge til i listen hoppe."
  overload: System.Windows.Shell.JumpList.AddToRecentCategory*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)
  id: AddToRecentCategory(System.Windows.Shell.JumpPath)
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: AddToRecentCategory(JumpPath)
  nameWithType: JumpList.AddToRecentCategory(JumpPath)
  fullName: System.Windows.Shell.JumpList.AddToRecentCategory(JumpPath)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Legger til den angitte Hopp banen til den **nye** kategorien av hoppe-listen."
  remarks: "Innholdet i den **nye** kategori administreres av Windows-grensesnitt. Hvis du vil vise nylig brukte elementer i listen hoppe, angitt i <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>egenskapen `true`.</xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>       Du kan kalle metoden AddToRecentCategory for å be om at Windows-grensesnittet legge til den angitte Hopp banen til den **nye** liste over. Hvis programmet ikke er registrert til å behandle filtypen for elementet, ikke vises i den **nye** liste- og kall til AddToRecentCategory mislykkes stille."
  syntax:
    content: public static void AddToRecentCategory (System.Windows.Shell.JumpPath jumpPath);
    parameters:
    - id: jumpPath
      type: System.Windows.Shell.JumpPath
      description: "Den <xref href=&quot;System.Windows.Shell.JumpPath&quot;> </xref> å legge til i listen hoppe."
  overload: System.Windows.Shell.JumpList.AddToRecentCategory*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)
  id: AddToRecentCategory(System.Windows.Shell.JumpTask)
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: AddToRecentCategory(JumpTask)
  nameWithType: JumpList.AddToRecentCategory(JumpTask)
  fullName: System.Windows.Shell.JumpList.AddToRecentCategory(JumpTask)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Legger til oppgaven angitte Hopp til den **nye** kategorien av hoppe-listen."
  remarks: "Innholdet i den **nye** kategori administreres av Windows-grensesnitt. Hvis du vil vise nylig brukte elementer i listen hoppe, angitt i <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>egenskapen `true`.</xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>       Du kan kalle metoden AddToRecentCategory for å be om at Windows-grensesnittet legge til angitte Hopp aktiviteten i den **nye** liste over."
  syntax:
    content: public static void AddToRecentCategory (System.Windows.Shell.JumpTask jumpTask);
    parameters:
    - id: jumpTask
      type: System.Windows.Shell.JumpTask
      description: "Den <xref href=&quot;System.Windows.Shell.JumpTask&quot;> </xref> å legge til i listen hoppe."
  overload: System.Windows.Shell.JumpList.AddToRecentCategory*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.Apply
  id: Apply
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: Apply()
  nameWithType: JumpList.Apply()
  fullName: System.Windows.Shell.JumpList.Apply()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Sender den <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> til Windows-grensesnitt i den gjeldende tilstanden."
  remarks: "Metoden Bruk sender innholdet i den <xref:System.Windows.Shell.JumpList>til Windows-grensesnitt i den gjeldende tilstanden.</xref:System.Windows.Shell.JumpList> Når dette kallet er fullført, den <xref:System.Windows.Shell.JumpList.JumpItems%2A>egenskapen er endret til å inneholde bare elementene i Windows-grensesnittet lagt til oppgavelinjen hoppe listen.</xref:System.Windows.Shell.JumpList.JumpItems%2A> Du har tilgang til listen over fjernes elementene via hendelsesbehandling for den <xref:System.Windows.Shell.JumpList.JumpItemsRejected>og <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>hendelser.</xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> </xref:System.Windows.Shell.JumpList.JumpItemsRejected>"
  example:
  - "The following example shows how to get the current <xref:System.Windows.Shell.JumpList> and clear the contents of the <xref:System.Windows.Shell.JumpList.JumpItems%2A> collection. The Apply method is then called to apply the <xref:System.Windows.Shell.JumpList> changes to the Windows shell. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-cs[Shell_JumpListSample#230](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#230)]"
  syntax:
    content: public void Apply ();
    parameters: []
  overload: System.Windows.Shell.JumpList.Apply*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> er ikke fullstendig initialisert."
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.BeginInit
  id: BeginInit
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: BeginInit()
  nameWithType: JumpList.BeginInit()
  fullName: System.Windows.Shell.JumpList.BeginInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Signaliserer til starten av den <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> initialisering."
  remarks: "<xref:System.Windows.Shell.JumpList>Klassen implementerer <xref:System.ComponentModel.ISupportInitialize>grensesnittet for å støtte XAML deklarasjon av <xref:System.Windows.Shell.JumpList>.</xref:System.Windows.Shell.JumpList> </xref:System.ComponentModel.ISupportInitialize> </xref:System.Windows.Shell.JumpList> Metoden BeginInit bare kalles når den <xref:System.Windows.Shell.JumpList>er deklarert i XAML og knyttet til en <xref:System.Windows.Application>ved å bruke egenskapssyntaksen tilknyttede.</xref:System.Windows.Application> </xref:System.Windows.Shell.JumpList> Denne metoden kall ikke fra koden."
  syntax:
    content: public void BeginInit ();
    parameters: []
  overload: System.Windows.Shell.JumpList.BeginInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Dette kallet til BeginInit er nestet i en tidligere kall til BeginInit."
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.EndInit
  id: EndInit
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: EndInit()
  nameWithType: JumpList.EndInit()
  fullName: System.Windows.Shell.JumpList.EndInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Signaliserer til slutten av den <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> initialisering."
  remarks: "<xref:System.Windows.Shell.JumpList>Klassen implementerer <xref:System.ComponentModel.ISupportInitialize>grensesnittet for å støtte XAML deklarasjon av <xref:System.Windows.Shell.JumpList>.</xref:System.Windows.Shell.JumpList> </xref:System.ComponentModel.ISupportInitialize> </xref:System.Windows.Shell.JumpList> Metoden EndInit bare kalles når den <xref:System.Windows.Shell.JumpList>er deklarert i XAML og knyttet til en <xref:System.Windows.Application>ved å bruke egenskapssyntaksen tilknyttede.</xref:System.Windows.Application> </xref:System.Windows.Shell.JumpList> Denne metoden kall ikke fra koden.       Metoden EndInit fungerer på samme måte som den <xref:System.Windows.Shell.JumpList.Apply%2A>metoden.</xref:System.Windows.Shell.JumpList.Apply%2A> EndInit sender innholdet i den <xref:System.Windows.Shell.JumpList>til Windows-grensesnitt i den gjeldende tilstanden.</xref:System.Windows.Shell.JumpList> Når dette kallet er fullført, den <xref:System.Windows.Shell.JumpList.JumpItems%2A>egenskapen er endret til å inneholde bare elementene i Windows-grensesnittet lagt til i listen hoppe.</xref:System.Windows.Shell.JumpList.JumpItems%2A> Du har tilgang til listen over fjernes elementene via hendelsesbehandling for den <xref:System.Windows.Shell.JumpList.JumpItemsRejected>og <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>hendelser.</xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> </xref:System.Windows.Shell.JumpList.JumpItemsRejected>"
  syntax:
    content: public void EndInit ();
    parameters: []
  overload: System.Windows.Shell.JumpList.EndInit*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Dette kallet til EndInit forbundet ikke med et kall til <xref:System.Windows.Shell.JumpList.BeginInit*>.</xref:System.Windows.Shell.JumpList.BeginInit*>"
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)
  id: GetJumpList(System.Windows.Application)
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: GetJumpList(Application)
  nameWithType: JumpList.GetJumpList(Application)
  fullName: System.Windows.Shell.JumpList.GetJumpList(Application)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Returnerer den <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> tilknyttet en applikasjon."
  remarks: "Du kan kalle metoden GetJumpList for å få <xref:System.Windows.Shell.JumpList>tilordnet en <xref:System.Windows.Application>.</xref:System.Windows.Application> </xref:System.Windows.Shell.JumpList> .NET Framework krever ikke at dette er den <xref:System.Windows.Shell.JumpList>som brukes i Windows-grensesnittet.</xref:System.Windows.Shell.JumpList>"
  example:
  - "The following example shows how to get the <xref:System.Windows.Shell.JumpList> associated with the current application. A <xref:System.Windows.Shell.JumpTask> is added to the <xref:System.Windows.Shell.JumpList.JumpItems%2A> collection and added to the **Recent** category. The <xref:System.Windows.Shell.JumpList.Apply%2A> method is called to apply the updated <xref:System.Windows.Shell.JumpList> to the Windows shell. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-cs[Shell_JumpListSample#240](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#240)]"
  syntax:
    content: public static System.Windows.Shell.JumpList GetJumpList (System.Windows.Application application);
    parameters:
    - id: application
      type: System.Windows.Application
      description: "Program som er tilknyttet den <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref>."
    return:
      type: System.Windows.Shell.JumpList
      description: "Den <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> objektet som er knyttet til den angitte applikasjonen."
  overload: System.Windows.Shell.JumpList.GetJumpList*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.JumpItems
  id: JumpItems
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: JumpItems
  nameWithType: JumpList.JumpItems
  fullName: System.Windows.Shell.JumpList.JumpItems
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Henter samlingen av <xref href=&quot;System.Windows.Shell.JumpItem&quot;> </xref> objekter som vises i listen hoppe."
  remarks: "Hopplister kan inneholde to typer elementer, et <xref:System.Windows.Shell.JumpTask>og <xref:System.Windows.Shell.JumpPath>.</xref:System.Windows.Shell.JumpPath> </xref:System.Windows.Shell.JumpTask> En <xref:System.Windows.Shell.JumpTask>er en kobling til et annet program, og en <xref:System.Windows.Shell.JumpPath>er en kobling til en fil.</xref:System.Windows.Shell.JumpPath> </xref:System.Windows.Shell.JumpTask>       Når en <xref:System.Windows.Shell.JumpList>er opprettet av JumpItems-samlingen er tom.</xref:System.Windows.Shell.JumpList> Du kan legge til alle <xref:System.Windows.Shell.JumpTask>eller <xref:System.Windows.Shell.JumpPath>objekter i samlingen.</xref:System.Windows.Shell.JumpPath> </xref:System.Windows.Shell.JumpTask> Samlingen kan bare inneholde elementene som har blitt lagt til av programmet ditt. Etter den <xref:System.Windows.Shell.JumpList>ble sendt til Windows-grensesnittet av en vellykket kall til enten den <xref:System.Windows.Shell.JumpList.EndInit%2A>eller <xref:System.Windows.Shell.JumpList.Apply%2A>metoder, JumpItems-samlingen inneholder bare elementene som ble lagt til oppgavelinjen hoppe listen.</xref:System.Windows.Shell.JumpList.Apply%2A> </xref:System.Windows.Shell.JumpList.EndInit%2A> </xref:System.Windows.Shell.JumpList> Elementer som ikke ble lagt fjernes fra samlingen JumpItems. Du har tilgang til listen over fjernes elementene via hendelsesbehandling for den <xref:System.Windows.Shell.JumpList.JumpItemsRejected>og <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>hendelser.</xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> </xref:System.Windows.Shell.JumpList.JumpItemsRejected>"
  example:
  - "The following example shows how to get the current <xref:System.Windows.Shell.JumpList> and clear the contents of the JumpItems collection. The <xref:System.Windows.Shell.JumpList.Apply%2A> method is then called to apply the <xref:System.Windows.Shell.JumpList> changes to the Windows shell. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-cs[Shell_JumpListSample#230](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#230)]"
  syntax:
    content: public System.Collections.Generic.List<System.Windows.Shell.JumpItem> JumpItems { get; }
    return:
      type: System.Collections.Generic.List{System.Windows.Shell.JumpItem}
      description: "Samlingen av <xref href=&quot;System.Windows.Shell.JumpItem&quot;> </xref> objekter som vises i listen hoppe. Standarden er en tom samling."
  overload: System.Windows.Shell.JumpList.JumpItems*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.JumpItemsRejected
  id: JumpItemsRejected
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: JumpItemsRejected
  nameWithType: JumpList.JumpItemsRejected
  fullName: System.Windows.Shell.JumpList.JumpItemsRejected
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Forekommer når Hopp elementer ikke er lagt til listen hoppe av Windows-grensesnitt."
  remarks: "Etter at innholdet i den <xref:System.Windows.Shell.JumpList>brukes på Windows-grensesnitt den <xref:System.Windows.Shell.JumpList.JumpItems%2A>egenskapen er endret til å inneholde bare elementene i Windows-grensesnittet lagt til i listen hoppe.</xref:System.Windows.Shell.JumpList.JumpItems%2A> </xref:System.Windows.Shell.JumpList> Du har tilgang til listen over fjernes elementene via hendelsesbehandling for JumpItemsRejected og <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>hendelser.</xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>"
  example:
  - "The following example shows how to handle the JumpItemsRejected event to display the rejected items in a message box. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-cs[Shell_JumpListSample#110](~/add/codesnippet/csharp/jumplistsample/app.xaml.cs#110)]"
  syntax:
    content: public event EventHandler<System.Windows.Shell.JumpItemsRejectedEventArgs> JumpItemsRejected;
    return:
      type: System.EventHandler{System.Windows.Shell.JumpItemsRejectedEventArgs}
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.JumpItemsRemovedByUser
  id: JumpItemsRemovedByUser
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: JumpItemsRemovedByUser
  nameWithType: JumpList.JumpItemsRemovedByUser
  fullName: System.Windows.Shell.JumpList.JumpItemsRemovedByUser
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Forekommer når Hopp tidligere i listen hoppe fjernes fra listen av brukeren."
  remarks: "Etter at innholdet i den <xref:System.Windows.Shell.JumpList>brukes på Windows-grensesnitt den <xref:System.Windows.Shell.JumpList.JumpItems%2A>egenskapen er endret til å inneholde bare elementene i Windows-grensesnittet lagt til i listen hoppe.</xref:System.Windows.Shell.JumpList.JumpItems%2A> </xref:System.Windows.Shell.JumpList> Du har tilgang til listen over fjernes elementene via hendelsesbehandling for den <xref:System.Windows.Shell.JumpList.JumpItemsRejected>og JumpItemsRemovedByUser hendelser.</xref:System.Windows.Shell.JumpList.JumpItemsRejected>"
  example:
  - "The following example shows how to handle the JumpItemsRemovedByUser event to display the rejected items in a message box. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-cs[Shell_JumpListSample#120](~/add/codesnippet/csharp/jumplistsample/app.xaml.cs#120)]"
  syntax:
    content: public event EventHandler<System.Windows.Shell.JumpItemsRemovedEventArgs> JumpItemsRemovedByUser;
    return:
      type: System.EventHandler{System.Windows.Shell.JumpItemsRemovedEventArgs}
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)
  id: SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: SetJumpList(Application,JumpList)
  nameWithType: JumpList.SetJumpList(Application,JumpList)
  fullName: System.Windows.Shell.JumpList.SetJumpList(Application,JumpList)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Angir den <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> tilknyttet en applikasjon."
  remarks: "Du kan opprette flere <xref:System.Windows.Shell.JumpList>objekter.</xref:System.Windows.Shell.JumpList> Imidlertid bare én <xref:System.Windows.Shell.JumpList>om gangen kan tilknyttes en <xref:System.Windows.Application>.</xref:System.Windows.Application> </xref:System.Windows.Shell.JumpList> Kall metoden SetJumpList for å angi <xref:System.Windows.Shell.JumpList>som er tilknyttet en <xref:System.Windows.Application>.</xref:System.Windows.Application> </xref:System.Windows.Shell.JumpList>"
  example:
  - "The following example shows how to create a <xref:System.Windows.Shell.JumpList> in code. The static SetJumpList method is called to associate the <xref:System.Windows.Shell.JumpList> with the current application. The <xref:System.Windows.Shell.JumpList> is automatically applied to the Windows shell when it is set. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-cs[Shell_JumpListSample#210](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#210)]"
  syntax:
    content: public static void SetJumpList (System.Windows.Application application, System.Windows.Shell.JumpList value);
    parameters:
    - id: application
      type: System.Windows.Application
      description: "Program som er tilknyttet den <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref>."
    - id: value
      type: System.Windows.Shell.JumpList
      description: "Den <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> å knytte til programmet."
  overload: System.Windows.Shell.JumpList.SetJumpList*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.ShowFrequentCategory
  id: ShowFrequentCategory
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: ShowFrequentCategory
  nameWithType: JumpList.ShowFrequentCategory
  fullName: System.Windows.Shell.JumpList.ShowFrequentCategory
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Henter eller angir en verdi som angir om de mest brukte elementer vises i listen hoppe."
  remarks: "Innholdet i den **Frequent** kategori administreres av Windows-grensesnitt. For å vise de mest brukte elementene i listen hoppe, angi ShowFrequentCategory egenskapen `true`.       Den **nye** og **Frequent** kategorier inneholder ofte mange av de samme Hopp-elementene. Resultatet programmer vanligvis viser enten den **nye** eller **Frequent** kategori i listen hoppe, men ikke begge deler."
  example:
  - "The following example shows a <xref:System.Windows.Shell.JumpList> configured to show the **Frequent** category. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-xml[Shell_JumpListSample#001](~/add/codesnippet/xaml/jumplistsample/app.xaml#001)]"
  syntax:
    content: public bool ShowFrequentCategory { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis de mest brukte elementene vises i listen hoppe; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Shell.JumpList.ShowFrequentCategory*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.ShowRecentCategory
  id: ShowRecentCategory
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: ShowRecentCategory
  nameWithType: JumpList.ShowRecentCategory
  fullName: System.Windows.Shell.JumpList.ShowRecentCategory
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Henter eller angir en verdi som angir om nylig brukte elementer vises i listen hoppe."
  remarks: "Innholdet i den **nye** kategori administreres av Windows-grensesnitt. For å vise de mest brukte elementene i listen hoppe, angi ShowRecentCategory egenskapen `true`.       Den **nye** og **Frequent** kategorier inneholder ofte mange av de samme Hopp-elementene. Resultatet programmer vanligvis viser enten den **nye** eller **Frequent** kategori i listen hoppe, men ikke begge deler.       Du kan ringe det <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>metode for å be om at Windows-grensesnittet legge til elementer i **nye** listen over elementer.</xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A> Hvis programmet ikke er registrert til å behandle filtypen for navnet på selve elementet, ikke vises i den **nye** liste- og kall til <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>mislykkes stille.</xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>"
  example:
  - "The following example shows a <xref:System.Windows.Shell.JumpList> configured to show the **Recent** category. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-xml[Shell_JumpListSample#001](~/add/codesnippet/xaml/jumplistsample/app.xaml#001)]"
  syntax:
    content: public bool ShowRecentCategory { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis du nylig har brukt blir vist i hoppe-listen. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Shell.JumpList.ShowRecentCategory*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Windows.Shell.JumpList.#ctor
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpList()
  nameWithType: JumpList.JumpList()
  fullName: System.Windows.Shell.JumpList.JumpList()
- uid: System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpList(IEnumerable<JumpItem>,Boolean,Boolean)
  nameWithType: JumpList.JumpList(IEnumerable<JumpItem>,Boolean,Boolean)
  fullName: System.Windows.Shell.JumpList.JumpList(IEnumerable<JumpItem>,Boolean,Boolean)
- uid: System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<JumpItem>
  nameWithType: IEnumerable<JumpItem>
  fullName: System.Collections.Generic.IEnumerable<System.Windows.Shell.JumpItem>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Windows.Shell.JumpItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Shell.JumpItem
    name: JumpItem
    nameWithType: JumpItem
    fullName: JumpItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Shell.JumpList.AddToRecentCategory(System.String)
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: AddToRecentCategory(String)
  nameWithType: JumpList.AddToRecentCategory(String)
  fullName: System.Windows.Shell.JumpList.AddToRecentCategory(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: AddToRecentCategory(JumpPath)
  nameWithType: JumpList.AddToRecentCategory(JumpPath)
  fullName: System.Windows.Shell.JumpList.AddToRecentCategory(JumpPath)
- uid: System.Windows.Shell.JumpPath
  parent: System.Windows.Shell
  isExternal: false
  name: JumpPath
  nameWithType: JumpPath
  fullName: System.Windows.Shell.JumpPath
- uid: System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: AddToRecentCategory(JumpTask)
  nameWithType: JumpList.AddToRecentCategory(JumpTask)
  fullName: System.Windows.Shell.JumpList.AddToRecentCategory(JumpTask)
- uid: System.Windows.Shell.JumpTask
  parent: System.Windows.Shell
  isExternal: false
  name: JumpTask
  nameWithType: JumpTask
  fullName: System.Windows.Shell.JumpTask
- uid: System.Windows.Shell.JumpList.Apply
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: Apply()
  nameWithType: JumpList.Apply()
  fullName: System.Windows.Shell.JumpList.Apply()
- uid: System.Windows.Shell.JumpList.BeginInit
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: BeginInit()
  nameWithType: JumpList.BeginInit()
  fullName: System.Windows.Shell.JumpList.BeginInit()
- uid: System.Windows.Shell.JumpList.EndInit
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: EndInit()
  nameWithType: JumpList.EndInit()
  fullName: System.Windows.Shell.JumpList.EndInit()
- uid: System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: GetJumpList(Application)
  nameWithType: JumpList.GetJumpList(Application)
  fullName: System.Windows.Shell.JumpList.GetJumpList(Application)
- uid: System.Windows.Shell.JumpList
  parent: System.Windows.Shell
  isExternal: false
  name: JumpList
  nameWithType: JumpList
  fullName: System.Windows.Shell.JumpList
- uid: System.Windows.Application
  parent: System.Windows
  isExternal: false
  name: Application
  nameWithType: Application
  fullName: System.Windows.Application
- uid: System.Windows.Shell.JumpList.JumpItems
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpItems
  nameWithType: JumpList.JumpItems
  fullName: System.Windows.Shell.JumpList.JumpItems
- uid: System.Collections.Generic.List{System.Windows.Shell.JumpItem}
  parent: System.Collections.Generic
  isExternal: true
  name: List<JumpItem>
  nameWithType: List<JumpItem>
  fullName: System.Collections.Generic.List<System.Windows.Shell.JumpItem>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.Windows.Shell.JumpItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Shell.JumpItem
    name: JumpItem
    nameWithType: JumpItem
    fullName: JumpItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Shell.JumpList.JumpItemsRejected
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpItemsRejected
  nameWithType: JumpList.JumpItemsRejected
  fullName: System.Windows.Shell.JumpList.JumpItemsRejected
- uid: System.EventHandler{System.Windows.Shell.JumpItemsRejectedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<JumpItemsRejectedEventArgs>
  nameWithType: EventHandler<JumpItemsRejectedEventArgs>
  fullName: System.EventHandler<System.Windows.Shell.JumpItemsRejectedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Shell.JumpItemsRejectedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Shell.JumpItemsRejectedEventArgs
    name: JumpItemsRejectedEventArgs
    nameWithType: JumpItemsRejectedEventArgs
    fullName: JumpItemsRejectedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Shell.JumpList.JumpItemsRemovedByUser
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpItemsRemovedByUser
  nameWithType: JumpList.JumpItemsRemovedByUser
  fullName: System.Windows.Shell.JumpList.JumpItemsRemovedByUser
- uid: System.EventHandler{System.Windows.Shell.JumpItemsRemovedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<JumpItemsRemovedEventArgs>
  nameWithType: EventHandler<JumpItemsRemovedEventArgs>
  fullName: System.EventHandler<System.Windows.Shell.JumpItemsRemovedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Shell.JumpItemsRemovedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Shell.JumpItemsRemovedEventArgs
    name: JumpItemsRemovedEventArgs
    nameWithType: JumpItemsRemovedEventArgs
    fullName: JumpItemsRemovedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: SetJumpList(Application,JumpList)
  nameWithType: JumpList.SetJumpList(Application,JumpList)
  fullName: System.Windows.Shell.JumpList.SetJumpList(Application,JumpList)
- uid: System.Windows.Shell.JumpList.ShowFrequentCategory
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: ShowFrequentCategory
  nameWithType: JumpList.ShowFrequentCategory
  fullName: System.Windows.Shell.JumpList.ShowFrequentCategory
- uid: System.Windows.Shell.JumpList.ShowRecentCategory
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: ShowRecentCategory
  nameWithType: JumpList.ShowRecentCategory
  fullName: System.Windows.Shell.JumpList.ShowRecentCategory
- uid: System.Windows.Shell.JumpList.#ctor*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpList
  nameWithType: JumpList.JumpList
- uid: System.Windows.Shell.JumpList.AddToRecentCategory*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: AddToRecentCategory
  nameWithType: JumpList.AddToRecentCategory
- uid: System.Windows.Shell.JumpList.Apply*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: Apply
  nameWithType: JumpList.Apply
- uid: System.Windows.Shell.JumpList.BeginInit*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: BeginInit
  nameWithType: JumpList.BeginInit
- uid: System.Windows.Shell.JumpList.EndInit*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: EndInit
  nameWithType: JumpList.EndInit
- uid: System.Windows.Shell.JumpList.GetJumpList*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: GetJumpList
  nameWithType: JumpList.GetJumpList
- uid: System.Windows.Shell.JumpList.JumpItems*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpItems
  nameWithType: JumpList.JumpItems
- uid: System.Windows.Shell.JumpList.SetJumpList*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: SetJumpList
  nameWithType: JumpList.SetJumpList
- uid: System.Windows.Shell.JumpList.ShowFrequentCategory*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: ShowFrequentCategory
  nameWithType: JumpList.ShowFrequentCategory
- uid: System.Windows.Shell.JumpList.ShowRecentCategory*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: ShowRecentCategory
  nameWithType: JumpList.ShowRecentCategory
