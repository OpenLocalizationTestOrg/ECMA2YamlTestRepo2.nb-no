### YamlMime:ManagedReference
items:
- uid: System.Windows.LostFocusEventManager
  id: LostFocusEventManager
  children:
  - System.Windows.LostFocusEventManager.AddHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})
  - System.Windows.LostFocusEventManager.AddListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)
  - System.Windows.LostFocusEventManager.NewListenerList
  - System.Windows.LostFocusEventManager.RemoveHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})
  - System.Windows.LostFocusEventManager.RemoveListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)
  - System.Windows.LostFocusEventManager.StartListening(System.Object)
  - System.Windows.LostFocusEventManager.StopListening(System.Object)
  langs:
  - csharp
  name: LostFocusEventManager
  nameWithType: LostFocusEventManager
  fullName: System.Windows.LostFocusEventManager
  type: Class
  summary: "Gir et <xref href=&quot;System.Windows.WeakEventManager&quot;> </xref> implementering slik at du kan bruke mønsteret &quot;svake hendelsen lytteren&quot; knytte lyttere for den <xref href=&quot;System.Windows.UIElement.LostFocus&quot;> </xref> eller <xref href=&quot;System.Windows.ContentElement.LostFocus&quot;> </xref> hendelser."
  remarks: "For å være lyttere i dette mønsteret, må lytteren objektene implementere <xref:System.Windows.IWeakEventListener>.</xref:System.Windows.IWeakEventListener> Du trenger ikke å implementere <xref:System.Windows.IWeakEventListener>i klassen som er kilde hendelser.</xref:System.Windows.IWeakEventListener>       [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]databinding bruker denne <xref:System.Windows.WeakEventManager>slik at intern klasser som oppdaterer bindinger kan koble lyttere for en <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName>eller <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName>hendelse på et objekt som er målet for en binding.</xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> </xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> </xref:System.Windows.WeakEventManager> Dette støtter varsling for den <xref:System.Windows.Data.UpdateSourceTrigger>modus for databinding, uten å opprette sterkt refererer til data binding mål.</xref:System.Windows.Data.UpdateSourceTrigger>"
  syntax:
    content: 'public class LostFocusEventManager : System.Windows.WeakEventManager'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.WeakEventManager
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  - System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)
  - System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)
  - System.Windows.WeakEventManager.GetCurrentManager(System.Type)
  - System.Windows.WeakEventManager.Item(System.Object)
  - System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)
  - System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)
  - System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)
  - System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)
  - System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)
  - System.Windows.WeakEventManager.ReadLock
  - System.Windows.WeakEventManager.Remove(System.Object)
  - System.Windows.WeakEventManager.ScheduleCleanup
  - System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)
  - System.Windows.WeakEventManager.WriteLock
  platform:
  - net462
- uid: System.Windows.LostFocusEventManager.AddHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})
  id: AddHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})
  parent: System.Windows.LostFocusEventManager
  langs:
  - csharp
  name: AddHandler(DependencyObject,EventHandler<RoutedEventArgs>)
  nameWithType: LostFocusEventManager.AddHandler(DependencyObject,EventHandler<RoutedEventArgs>)
  fullName: System.Windows.LostFocusEventManager.AddHandler(DependencyObject,EventHandler<RoutedEventArgs>)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Legger til den angitte hendelsesbehandlingen som kalles når angitte kilden opphøyer den <xref href=&quot;System.Windows.UIElement.LostFocus&quot;> </xref> eller <xref href=&quot;System.Windows.ContentElement.LostFocus&quot;> </xref> hendelsen."
  remarks: "Bruk denne metoden til å angi hendelsesbehandlingen du vil bruke til å abonnere på <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName>eller <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName>hendelsen.</xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> </xref:System.Windows.UIElement.LostFocus?displayProperty=fullName>  Når du bruker denne metoden, lytteren objektet trenger ikke å implementere den <xref:System.Windows.IWeakEventListener>grensesnittet.</xref:System.Windows.IWeakEventListener>"
  syntax:
    content: public static void AddHandler (System.Windows.DependencyObject source, EventHandler<System.Windows.RoutedEventArgs> handler);
    parameters:
    - id: source
      type: System.Windows.DependencyObject
      description: "Kilden objekt som du hever den <xref href=&quot;System.Windows.UIElement.LostFocus&quot;> </xref> eller <xref href=&quot;System.Windows.ContentElement.LostFocus&quot;> </xref> hendelsen."
    - id: handler
      type: System.EventHandler{System.Windows.RoutedEventArgs}
      description: "Representanten behandler den <xref href=&quot;System.Windows.UIElement.LostFocus&quot;> </xref> eller <xref href=&quot;System.Windows.ContentElement.LostFocus&quot;> </xref> hendelsen."
  overload: System.Windows.LostFocusEventManager.AddHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>handler</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.LostFocusEventManager.AddListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)
  id: AddListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)
  parent: System.Windows.LostFocusEventManager
  langs:
  - csharp
  name: AddListener(DependencyObject,IWeakEventListener)
  nameWithType: LostFocusEventManager.AddListener(DependencyObject,IWeakEventListener)
  fullName: System.Windows.LostFocusEventManager.AddListener(DependencyObject,IWeakEventListener)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Legger til den angitte lytteren i listen over lyttere på den angitte kilden."
  syntax:
    content: public static void AddListener (System.Windows.DependencyObject source, System.Windows.IWeakEventListener listener);
    parameters:
    - id: source
      type: System.Windows.DependencyObject
      description: "Objektet med hendelsen."
    - id: listener
      type: System.Windows.IWeakEventListener
      description: "Objektet som skal legges til som en lytter."
  overload: System.Windows.LostFocusEventManager.AddListener*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LostFocusEventManager.NewListenerList
  id: NewListenerList
  parent: System.Windows.LostFocusEventManager
  langs:
  - csharp
  name: NewListenerList()
  nameWithType: LostFocusEventManager.NewListenerList()
  fullName: System.Windows.LostFocusEventManager.NewListenerList()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Returnerer et nytt objekt for å inneholde lyttere til den <xref href=&quot;System.Windows.UIElement.LostFocus&quot;> </xref> eller <xref href=&quot;System.Windows.ContentElement.LostFocus&quot;> </xref> hendelsen."
  syntax:
    content: protected override System.Windows.WeakEventManager.ListenerList NewListenerList ();
    parameters: []
    return:
      type: System.Windows.WeakEventManager.ListenerList
      description: "Et nytt objekt som inneholder lyttere til den <xref href=&quot;System.Windows.UIElement.LostFocus&quot;> </xref> eller <xref href=&quot;System.Windows.ContentElement.LostFocus&quot;> </xref> hendelsen."
  overload: System.Windows.LostFocusEventManager.NewListenerList*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LostFocusEventManager.RemoveHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})
  id: RemoveHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})
  parent: System.Windows.LostFocusEventManager
  langs:
  - csharp
  name: RemoveHandler(DependencyObject,EventHandler<RoutedEventArgs>)
  nameWithType: LostFocusEventManager.RemoveHandler(DependencyObject,EventHandler<RoutedEventArgs>)
  fullName: System.Windows.LostFocusEventManager.RemoveHandler(DependencyObject,EventHandler<RoutedEventArgs>)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Fjerner angitt hendelsesbehandlingen fra den angitte kilden."
  syntax:
    content: public static void RemoveHandler (System.Windows.DependencyObject source, EventHandler<System.Windows.RoutedEventArgs> handler);
    parameters:
    - id: source
      type: System.Windows.DependencyObject
      description: "Kilden objekt som du hever den <xref href=&quot;System.Windows.UIElement.LostFocus&quot;> </xref> eller <xref href=&quot;System.Windows.ContentElement.LostFocus&quot;> </xref> hendelsen."
    - id: handler
      type: System.EventHandler{System.Windows.RoutedEventArgs}
      description: "Representanten behandler den <xref href=&quot;System.Windows.UIElement.LostFocus&quot;> </xref> eller <xref href=&quot;System.Windows.ContentElement.LostFocus&quot;> </xref> hendelsen."
  overload: System.Windows.LostFocusEventManager.RemoveHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>handler</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.LostFocusEventManager.RemoveListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)
  id: RemoveListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)
  parent: System.Windows.LostFocusEventManager
  langs:
  - csharp
  name: RemoveListener(DependencyObject,IWeakEventListener)
  nameWithType: LostFocusEventManager.RemoveListener(DependencyObject,IWeakEventListener)
  fullName: System.Windows.LostFocusEventManager.RemoveListener(DependencyObject,IWeakEventListener)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Fjerner den angitte lytteren fra listen over lyttere på den angitte kilden."
  syntax:
    content: public static void RemoveListener (System.Windows.DependencyObject source, System.Windows.IWeakEventListener listener);
    parameters:
    - id: source
      type: System.Windows.DependencyObject
      description: "Objektet til å fjerne lytteobjektet fra."
    - id: listener
      type: System.Windows.IWeakEventListener
      description: "Lytteobjektet fjerne."
  overload: System.Windows.LostFocusEventManager.RemoveListener*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LostFocusEventManager.StartListening(System.Object)
  id: StartListening(System.Object)
  parent: System.Windows.LostFocusEventManager
  langs:
  - csharp
  name: StartListening(Object)
  nameWithType: LostFocusEventManager.StartListening(Object)
  fullName: System.Windows.LostFocusEventManager.StartListening(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Starter lytter det <xref href=&quot;System.Windows.UIElement.LostFocus&quot;> </xref> hendelse på den angitte kilden, tilknytting en intern klassen håndterer til denne kilden."
  remarks: "Den angitte datakilden er merket av for type for å se om det er <xref:System.Windows.UIElement>eller <xref:System.Windows.ContentElement>, og legger til et klassen behandlingsprogram for riktig hendelse i denne kilden.</xref:System.Windows.ContentElement> </xref:System.Windows.UIElement>"
  syntax:
    content: protected override void StartListening (object source);
    parameters:
    - id: source
      type: System.Object
      description: "Objektet som skal starte lytter for den relevante <xref href=&quot;System.Windows.UIElement.LostFocus&quot;> </xref> hendelsen."
  overload: System.Windows.LostFocusEventManager.StartListening*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LostFocusEventManager.StopListening(System.Object)
  id: StopListening(System.Object)
  parent: System.Windows.LostFocusEventManager
  langs:
  - csharp
  name: StopListening(Object)
  nameWithType: LostFocusEventManager.StopListening(Object)
  fullName: System.Windows.LostFocusEventManager.StopListening(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Stopper lytter det <xref href=&quot;System.Windows.UIElement.LostFocus&quot;> </xref> hendelse på den angitte kilden."
  syntax:
    content: protected override void StopListening (object source);
    parameters:
    - id: source
      type: System.Object
      description: "Kildeobjektet som skal stoppes lytte <xref href=&quot;System.Windows.UIElement.LostFocus&quot;> </xref>."
  overload: System.Windows.LostFocusEventManager.StopListening*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.WeakEventManager
  isExternal: false
  name: System.Windows.WeakEventManager
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.LostFocusEventManager.AddHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})
  parent: System.Windows.LostFocusEventManager
  isExternal: false
  name: AddHandler(DependencyObject,EventHandler<RoutedEventArgs>)
  nameWithType: LostFocusEventManager.AddHandler(DependencyObject,EventHandler<RoutedEventArgs>)
  fullName: System.Windows.LostFocusEventManager.AddHandler(DependencyObject,EventHandler<RoutedEventArgs>)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.EventHandler{System.Windows.RoutedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<RoutedEventArgs>
  nameWithType: EventHandler<RoutedEventArgs>
  fullName: System.EventHandler<System.Windows.RoutedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.RoutedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.RoutedEventArgs
    name: RoutedEventArgs
    nameWithType: RoutedEventArgs
    fullName: RoutedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.LostFocusEventManager.AddListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)
  parent: System.Windows.LostFocusEventManager
  isExternal: false
  name: AddListener(DependencyObject,IWeakEventListener)
  nameWithType: LostFocusEventManager.AddListener(DependencyObject,IWeakEventListener)
  fullName: System.Windows.LostFocusEventManager.AddListener(DependencyObject,IWeakEventListener)
- uid: System.Windows.IWeakEventListener
  parent: System.Windows
  isExternal: false
  name: IWeakEventListener
  nameWithType: IWeakEventListener
  fullName: System.Windows.IWeakEventListener
- uid: System.Windows.LostFocusEventManager.NewListenerList
  parent: System.Windows.LostFocusEventManager
  isExternal: false
  name: NewListenerList()
  nameWithType: LostFocusEventManager.NewListenerList()
  fullName: System.Windows.LostFocusEventManager.NewListenerList()
- uid: System.Windows.WeakEventManager.ListenerList
  parent: System.Windows
  isExternal: false
  name: WeakEventManager+ListenerList
  nameWithType: WeakEventManager+ListenerList
  fullName: System.Windows.WeakEventManager+ListenerList
- uid: System.Windows.LostFocusEventManager.RemoveHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})
  parent: System.Windows.LostFocusEventManager
  isExternal: false
  name: RemoveHandler(DependencyObject,EventHandler<RoutedEventArgs>)
  nameWithType: LostFocusEventManager.RemoveHandler(DependencyObject,EventHandler<RoutedEventArgs>)
  fullName: System.Windows.LostFocusEventManager.RemoveHandler(DependencyObject,EventHandler<RoutedEventArgs>)
- uid: System.Windows.LostFocusEventManager.RemoveListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)
  parent: System.Windows.LostFocusEventManager
  isExternal: false
  name: RemoveListener(DependencyObject,IWeakEventListener)
  nameWithType: LostFocusEventManager.RemoveListener(DependencyObject,IWeakEventListener)
  fullName: System.Windows.LostFocusEventManager.RemoveListener(DependencyObject,IWeakEventListener)
- uid: System.Windows.LostFocusEventManager.StartListening(System.Object)
  parent: System.Windows.LostFocusEventManager
  isExternal: false
  name: StartListening(Object)
  nameWithType: LostFocusEventManager.StartListening(Object)
  fullName: System.Windows.LostFocusEventManager.StartListening(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.LostFocusEventManager.StopListening(System.Object)
  parent: System.Windows.LostFocusEventManager
  isExternal: false
  name: StopListening(Object)
  nameWithType: LostFocusEventManager.StopListening(Object)
  fullName: System.Windows.LostFocusEventManager.StopListening(Object)
- uid: System.Windows.LostFocusEventManager.AddHandler*
  parent: System.Windows.LostFocusEventManager
  isExternal: false
  name: AddHandler
  nameWithType: LostFocusEventManager.AddHandler
- uid: System.Windows.LostFocusEventManager.AddListener*
  parent: System.Windows.LostFocusEventManager
  isExternal: false
  name: AddListener
  nameWithType: LostFocusEventManager.AddListener
- uid: System.Windows.LostFocusEventManager.NewListenerList*
  parent: System.Windows.LostFocusEventManager
  isExternal: false
  name: NewListenerList
  nameWithType: LostFocusEventManager.NewListenerList
- uid: System.Windows.LostFocusEventManager.RemoveHandler*
  parent: System.Windows.LostFocusEventManager
  isExternal: false
  name: RemoveHandler
  nameWithType: LostFocusEventManager.RemoveHandler
- uid: System.Windows.LostFocusEventManager.RemoveListener*
  parent: System.Windows.LostFocusEventManager
  isExternal: false
  name: RemoveListener
  nameWithType: LostFocusEventManager.RemoveListener
- uid: System.Windows.LostFocusEventManager.StartListening*
  parent: System.Windows.LostFocusEventManager
  isExternal: false
  name: StartListening
  nameWithType: LostFocusEventManager.StartListening
- uid: System.Windows.LostFocusEventManager.StopListening*
  parent: System.Windows.LostFocusEventManager
  isExternal: false
  name: StopListening
  nameWithType: LostFocusEventManager.StopListening
