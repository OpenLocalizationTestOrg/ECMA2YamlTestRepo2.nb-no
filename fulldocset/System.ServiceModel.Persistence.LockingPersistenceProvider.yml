### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider
  id: LockingPersistenceProvider
  children:
  - System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)
  langs:
  - csharp
  name: LockingPersistenceProvider
  nameWithType: LockingPersistenceProvider
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider
  type: Class
  summary: "Den abstrakt basisklassen som alle robust utholdenhet tjenesteleverandører som implementerer låsing er avledet fra."
  remarks: "I tillegg til vedvarende implementerer klassen LockingPersistenceProvider låsing av tjenesten tilstand dataposter. Metoder som fungerer sammen med faste data (slik som den `Load` metoden) har en valgfri parameter (`lockInstance`) som definerer om låser på de aktuelle dataene er utgitt eller beholdes."
  syntax:
    content: >-
      [System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")]

      public abstract class LockingPersistenceProvider : System.ServiceModel.Persistence.PersistenceProvider
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.Persistence.PersistenceProvider
  implements: []
  inheritedMembers:
  - System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)
  - System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)
  - System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.Id
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)
  id: '#ctor(System.Guid)'
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: LockingPersistenceProvider(Guid)
  nameWithType: LockingPersistenceProvider.LockingPersistenceProvider(Guid)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.LockingPersistenceProvider(Guid)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Når implementert i en avledet klasse, oppretter du en ny forekomst av den <xref href=&quot;System.ServiceModel.Persistence.LockingPersistenceProvider&quot;> </xref> klasse, konfigurert med den angitte ID-verdien."
  syntax:
    content: protected LockingPersistenceProvider (Guid id);
    parameters:
    - id: id
      type: System.Guid
      description: "Den unike identifikatoren som skal knyttes til denne forekomsten av utholdenhet leverandøren."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Starter en asynkron operasjon for å opprette forekomster statusinformasjon i det vedvarende lageret ved hjelp av parameterne. Denne metoden ikke låse opp forekomsten etter statusinformasjon er lagret."
  remarks: "Denne metoden kall til den <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate%2A>metoden som tar en ekstra parameter for å fastsette om forekomsten er låst.</xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate%2A> Denne metoden sender `false` som en verdi for denne parameteren til kall-metoden."
  syntax:
    content: public override IAsyncResult BeginCreate (object instance, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: "Forekomsten der statusinformasjon er lagret i vedvarende lager."
    - id: timeout
      type: System.TimeSpan
      description: "Intervallet operasjonen må fullføres uten tidsavbrudd."
    - id: callback
      type: System.AsyncCallback
      description: "Representanten som varsles når operasjonen er fullført."
    - id: state
      type: System.Object
      description: "Tilstandsinformasjon som er knyttet til den asynkrone operasjonen."
    return:
      type: System.IAsyncResult
      description: "Statusen for en asynkron operasjon."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginCreate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginCreate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Starter en asynkron operasjon for å opprette forekomster statusinformasjon i det vedvarende lageret ved hjelp av parameterne. Denne metoden låses forekomsten når du har lagret tilstanden forekomst Hvis verdien for den <code> unlockInstance </code> parameteren er <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public abstract IAsyncResult BeginCreate (object instance, TimeSpan timeout, bool unlockInstance, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: "Forekomsten der statusinformasjon er lagret i vedvarende lager."
    - id: timeout
      type: System.TimeSpan
      description: "Intervallet operasjonen må fullføres uten tidsavbrudd."
    - id: unlockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis forekomsten må være låst i vedvarende lager; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: callback
      type: System.AsyncCallback
      description: "Representanten som varsles når operasjonen er fullført."
    - id: state
      type: System.Object
      description: "Tilstandsinformasjon som er knyttet til den asynkrone operasjonen."
    return:
      type: System.IAsyncResult
      description: "Statusen for en asynkron operasjon."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginLoad(TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoad(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Starter en asynkron operasjon for å laste inn en forekomst basert på statusinformasjon i vedvarende lager ved hjelp av parameterne. Denne metoden låser ikke forekomsten."
  remarks: "Denne metoden kall til den <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad%2A>, som bruker den andre parameteren som angir om forekomsten må være låst i vedvarende lager.</xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad%2A> Denne metoden sender `false` som en verdi for denne parameteren til kall-metoden."
  syntax:
    content: public override IAsyncResult BeginLoad (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Intervallet operasjonen må fullføres uten tidsavbrudd."
    - id: callback
      type: System.AsyncCallback
      description: "Representanten som varsles når operasjonen er fullført."
    - id: state
      type: System.Object
      description: "Tilstandsinformasjon som er knyttet til den asynkrone operasjonen."
    return:
      type: System.IAsyncResult
      description: "Statusen for en asynkron operasjon."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginLoad(TimeSpan,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoad(TimeSpan,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(TimeSpan,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Starter en asynkron operasjon for å laste inn en forekomst basert på statusinformasjon i vedvarende lager ved hjelp av parameterne. Denne metoden låser forekomsten etter innlasting av tilstanden forekomst Hvis verdien for den <code> lockInstance </code> parameteren er <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public abstract IAsyncResult BeginLoad (TimeSpan timeout, bool lockInstance, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Et intervall operasjonen må fullføres før tidsavbrudd."
    - id: lockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis forekomsten må være låst; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: callback
      type: System.AsyncCallback
      description: "Representanten som varsles når operasjonen er fullført."
    - id: state
      type: System.Object
      description: "Tilstandsinformasjon som er knyttet til den asynkrone operasjonen."
    return:
      type: System.IAsyncResult
      description: "Statusen for en asynkron operasjon."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  id: BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Representerer begynnelsen av LoadIfChanged fase når implementert i en avledet klasse. LoadIfChanged fase oppstår når dataene er lastet inn i utholdenhet leverandøren fra vedvarende lager og Tilstandsdataene i vedvarende lager er endret. Metodekallet låser ikke forekomst i vedvarende lager."
  syntax:
    content: public override IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Hvor lang tid før utholdenhet leverandøren avbryter denne operasjonen."
    - id: instanceToken
      type: System.Object
      description: "Token ble returnert av en tidligere <xref uid=&quot;langword_csharp_Create&quot; name=&quot;Create&quot; href=&quot;&quot;> </xref> eller <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref> metode som representerer den gjeldende tilstanden holdes av oppkalleren."
    - id: callback
      type: System.AsyncCallback
      description: "Metoden som skal kalles når operasjonen er fullført."
    - id: state
      type: System.Object
      description: "Et gitt objekt som skiller denne bestemt asynkrone operasjonen av andre operasjoner."
    return:
      type: System.IAsyncResult
      description: "Statusen for en asynkron operasjon."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginLoadIfChanged(TimeSpan,Object,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Representerer begynnelsen av LoadIfChanged fase når implementert i en avledet klasse. LoadIfChanged fase oppstår når dataene er lastet inn i utholdenhet leverandøren fra vedvarende lager og Tilstandsdataene i vedvarende lager er endret. Metodekallet lar deg angi om du vil låse forekomst i vedvarende lager."
  syntax:
    content: public virtual IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, bool lockInstance, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Hvor lang tid før utholdenhet leverandøren avbryter denne operasjonen."
    - id: instanceToken
      type: System.Object
      description: "Token ble returnert av en tidligere <xref uid=&quot;langword_csharp_Create&quot; name=&quot;Create&quot; href=&quot;&quot;> </xref> eller <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref> metode som representerer den gjeldende tilstanden holdes av oppkalleren."
    - id: lockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis forekomsten er låst i vedvarende lager; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: callback
      type: System.AsyncCallback
      description: "Metoden som skal kalles når operasjonen er fullført."
    - id: state
      type: System.Object
      description: "Et gitt objekt som skiller denne bestemt asynkrone operasjonen av andre operasjoner."
    return:
      type: System.IAsyncResult
      description: "Statusen for en asynkron operasjon."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginUnlock(TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginUnlock(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Starter en asynkron operasjon for å låse opp en forekomst i vedvarende lager."
  syntax:
    content: public abstract IAsyncResult BeginUnlock (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Et intervall operasjonen må fullføres før tidsavbrudd."
    - id: callback
      type: System.AsyncCallback
      description: "Representanten som varsles når operasjonen er fullført."
    - id: state
      type: System.Object
      description: "Tilstandsinformasjon som er knyttet til den asynkrone operasjonen."
    return:
      type: System.IAsyncResult
      description: "Statusen for en asynkron operasjon."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Starter en asynkron operasjon for å oppdatere informasjon om forekomsten i vedvarende lager ved hjelp av parameterne som ble sendt. Denne operasjonen Lås ikke forekomst i forekomst-butikken."
  remarks: "Denne metoden kall til den <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate%2A>metoden og formidler en `false` verdi den `unlockInstance` parameteren.</xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate%2A>"
  syntax:
    content: public override IAsyncResult BeginUpdate (object instance, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: "Forekomsten der statusinformasjon oppdateres i vedvarende lager."
    - id: timeout
      type: System.TimeSpan
      description: "Intervallet som Utfør operasjonen uten å bli tidsavbrutt."
    - id: callback
      type: System.AsyncCallback
      description: "Representanten som varsles når operasjonen er fullført."
    - id: state
      type: System.Object
      description: "Tilstandsinformasjon om den asynkrone operasjonen."
    return:
      type: System.IAsyncResult
      description: "Statusen for en asynkron operasjon."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginUpdate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Starter en asynkron operasjon for å oppdatere informasjon om forekomsten i vedvarende lager ved hjelp av parameterne som ble sendt. Denne operasjonen låser forekomst i vedvarende lager hvis verdien for den <code> unlockInstance </code> parameteren er <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public abstract IAsyncResult BeginUpdate (object instance, TimeSpan timeout, bool unlockInstance, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: "Forekomsten der statusinformasjon oppdateres i vedvarende lager."
    - id: timeout
      type: System.TimeSpan
      description: "Intervallet som Utfør operasjonen uten å bli tidsavbrutt."
    - id: unlockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis forekomsten må være låst når tilstanden forekomsten oppdateres i vedvarende lager; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: callback
      type: System.AsyncCallback
      description: "Representanten som varsles når operasjonen er fullført."
    - id: state
      type: System.Object
      description: "Tilstandsinformasjon om den asynkrone operasjonen."
    return:
      type: System.IAsyncResult
      description: "Statusen for en asynkron operasjon."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)
  id: Create(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Create(Object,TimeSpan)
  nameWithType: LockingPersistenceProvider.Create(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(Object,TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Oppretter forekomst statusinformasjon i vedvarende lager med parametere som overføres til metoden. Denne metoden ikke låse opp forekomst i vedvarende lager når du har lagret tilstanden forekomst."
  syntax:
    content: public override object Create (object instance, TimeSpan timeout);
    parameters:
    - id: instance
      type: System.Object
      description: "Objekt forekomst der statusinformasjon må lagres i vedvarende lager."
    - id: timeout
      type: System.TimeSpan
      description: "Intervallet som operasjonen må fullføres før tidsavbrudd."
    return:
      type: System.Object
      description: "Tilstandsinformasjon."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Create*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)
  id: Create(System.Object,System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Create(Object,TimeSpan,Boolean)
  nameWithType: LockingPersistenceProvider.Create(Object,TimeSpan,Boolean)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(Object,TimeSpan,Boolean)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Denne metoden oppretter forekomsten statusinformasjon i vedvarende lager med parametere som overføres til metoden. Metoden låses forekomst i forekomsten store Hvis verdien for den <code> unlockInstance </code> parameteren er <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public abstract object Create (object instance, TimeSpan timeout, bool unlockInstance);
    parameters:
    - id: instance
      type: System.Object
      description: "Objekt forekomst der statusinformasjon er lagret i vedvarende lager."
    - id: timeout
      type: System.TimeSpan
      description: "Intervallet som operasjonen må fullføres før tidsavbrudd."
    - id: unlockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis forekomsten må være låst i vedvarende lager; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Tilstandsinformasjon."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Create*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)
  id: EndUnlock(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: EndUnlock(IAsyncResult)
  nameWithType: LockingPersistenceProvider.EndUnlock(IAsyncResult)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(IAsyncResult)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Avsluttes den asynkrone operasjonen for å låse opp en forekomst i vedvarende lager."
  syntax:
    content: public abstract void EndUnlock (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Resultatet som returneres av unlock-operasjonen."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)
  id: Load(System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Load(TimeSpan)
  nameWithType: LockingPersistenceProvider.Load(TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Laster behandle statusinformasjon fra vedvarende lager uten å låse forekomsten."
  remarks: "Denne metoden starter den <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Load%2A>metode med `lockInstance` parameteren satt til `false`.</xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Load%2A>"
  syntax:
    content: public override object Load (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Hvor lang tid før utholdenhet leverandøren avbryter forsøket."
    return:
      type: System.Object
      description: "Tilstandsinformasjon for tjenesten."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Load*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)
  id: Load(System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Load(TimeSpan,Boolean)
  nameWithType: LockingPersistenceProvider.Load(TimeSpan,Boolean)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(TimeSpan,Boolean)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Laster tilstandsinformasjon fra vedvarende lager etter låsing forekomsten."
  syntax:
    content: public abstract object Load (TimeSpan timeout, bool lockInstance);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Perioden utholdenhet leverandøren avbryter før denne operasjonen."
    - id: lockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis forekomsten skal låses; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Tilstandsinformasjon."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Load*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  id: LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: LoadIfChanged(TimeSpan,Object,Object)
  nameWithType: LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Laster inn forekomsten statusinformasjon fra vedvarende lager hvis statusinformasjon er endret siden sist informasjonen som ble lastet inn av oppkalleren. Denne metoden låser ikke forekomst i vedvarende lager."
  syntax:
    content: public override bool LoadIfChanged (TimeSpan timeout, object instanceToken, out object instance);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Hvor lang tid før utholdenhet leverandøren avbryter denne operasjonen."
    - id: instanceToken
      type: System.Object
      description: "Token ble returnert av forrige <xref uid=&quot;langword_csharp_Create&quot; name=&quot;Create&quot; href=&quot;&quot;> </xref> eller <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref> metodekall som representerer den gjeldende tilstanden holdes av oppkalleren."
    - id: instance
      type: System.Object
      description: "Den faktiske forekomsten informasjon om."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis forekomsten skal låses i vedvarende lager på slutten av denne operasjonen. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)
  id: LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: LoadIfChanged(TimeSpan,Object,Boolean,Object)
  nameWithType: LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Boolean,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Boolean,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Laster inn forekomsten statusinformasjon fra vedvarende lager hvis statusinformasjon er endret siden sist informasjonen som ble lastet inn av oppkalleren. Denne metoden kan også oppkalleren angi om du vil låse forekomst i vedvarende lager."
  syntax:
    content: public virtual bool LoadIfChanged (TimeSpan timeout, object instanceToken, bool lockInstance, out object instance);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Hvor lang tid før utholdenhet leverandøren avbryter denne operasjonen."
    - id: instanceToken
      type: System.Object
      description: "Tokenet returnert av de forrige metodekall oppretting eller oppdatering som representerer den gjeldende tilstanden holdes av oppkalleren."
    - id: lockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis forekomsten skal låses i vedvarende lager på slutten av denne operasjonen. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: instance
      type: System.Object
      description: "Tilstandsinformasjon for forekomsten."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis forekomsten skal låses i vedvarende lager på slutten av denne operasjonen. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)
  id: Unlock(System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Unlock(TimeSpan)
  nameWithType: LockingPersistenceProvider.Unlock(TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Låses forekomsten med IDen angis når den <xref href=&quot;System.ServiceModel.Persistence.LockingPersistenceProvider&quot;> </xref> objektet i vedvarende lager."
  syntax:
    content: public abstract void Unlock (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Hvor lang tid før utholdenhet leverandøren avbryter operasjonen."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)
  id: Update(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Update(Object,TimeSpan)
  nameWithType: LockingPersistenceProvider.Update(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(Object,TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Når implementert i en avledet klasse, oppdaterer du forekomsten statusinformasjon i vedvarende lager. Denne metoden ikke låse opp forekomsten når du har oppdatert forekomsten statusinformasjon i vedvarende lager."
  syntax:
    content: public override object Update (object instance, TimeSpan timeout);
    parameters:
    - id: instance
      type: System.Object
      description: "Tilstandsinformasjon for forekomsten."
    - id: timeout
      type: System.TimeSpan
      description: "Hvor lang tid før utholdenhet leverandøren avbryter operasjonen."
    return:
      type: System.Object
      description: "Tilstandsinformasjon for forekomsten."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Update*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)
  id: Update(System.Object,System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Update(Object,TimeSpan,Boolean)
  nameWithType: LockingPersistenceProvider.Update(Object,TimeSpan,Boolean)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(Object,TimeSpan,Boolean)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Når implementert i en avledet klasse, oppdaterer du forekomsten statusinformasjon i vedvarende lager. Denne metoden ikke låse opp forekomsten når du har oppdatert forekomsten statusinformasjon i vedvarende lager."
  syntax:
    content: public abstract object Update (object instance, TimeSpan timeout, bool unlockInstance);
    parameters:
    - id: instance
      type: System.Object
      description: "Tilstandsinformasjon for forekomsten."
    - id: timeout
      type: System.TimeSpan
      description: "Hvor lang tid før utholdenhet leverandøren avbryter operasjonen."
    - id: unlockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis forekomsten er låst etter at forekomsten statusinformasjon er oppdatert; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Tilstandsinformasjon for forekomsten."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Update*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: System.ServiceModel.Persistence.PersistenceProvider
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: LockingPersistenceProvider(Guid)
  nameWithType: LockingPersistenceProvider.LockingPersistenceProvider(Guid)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.LockingPersistenceProvider(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(Object,TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginCreate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginCreate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(Object,TimeSpan,Boolean,AsyncCallback,Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoad(TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoad(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoad(TimeSpan,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoad(TimeSpan,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(TimeSpan,Boolean,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoadIfChanged(TimeSpan,Object,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,Boolean,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginUnlock(TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginUnlock(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginUpdate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,Boolean,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Create(Object,TimeSpan)
  nameWithType: LockingPersistenceProvider.Create(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(Object,TimeSpan)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Create(Object,TimeSpan,Boolean)
  nameWithType: LockingPersistenceProvider.Create(Object,TimeSpan,Boolean)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(Object,TimeSpan,Boolean)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: EndUnlock(IAsyncResult)
  nameWithType: LockingPersistenceProvider.EndUnlock(IAsyncResult)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(IAsyncResult)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Load(TimeSpan)
  nameWithType: LockingPersistenceProvider.Load(TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(TimeSpan)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Load(TimeSpan,Boolean)
  nameWithType: LockingPersistenceProvider.Load(TimeSpan,Boolean)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(TimeSpan,Boolean)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: LoadIfChanged(TimeSpan,Object,Object)
  nameWithType: LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: LoadIfChanged(TimeSpan,Object,Boolean,Object)
  nameWithType: LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Boolean,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Boolean,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Unlock(TimeSpan)
  nameWithType: LockingPersistenceProvider.Unlock(TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(TimeSpan)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Update(Object,TimeSpan)
  nameWithType: LockingPersistenceProvider.Update(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(Object,TimeSpan)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Update(Object,TimeSpan,Boolean)
  nameWithType: LockingPersistenceProvider.Update(Object,TimeSpan,Boolean)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(Object,TimeSpan,Boolean)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: LockingPersistenceProvider
  nameWithType: LockingPersistenceProvider.LockingPersistenceProvider
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginCreate
  nameWithType: LockingPersistenceProvider.BeginCreate
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoad
  nameWithType: LockingPersistenceProvider.BeginLoad
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoadIfChanged
  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginUnlock
  nameWithType: LockingPersistenceProvider.BeginUnlock
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginUpdate
  nameWithType: LockingPersistenceProvider.BeginUpdate
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Create
  nameWithType: LockingPersistenceProvider.Create
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: EndUnlock
  nameWithType: LockingPersistenceProvider.EndUnlock
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Load
  nameWithType: LockingPersistenceProvider.Load
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: LoadIfChanged
  nameWithType: LockingPersistenceProvider.LoadIfChanged
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Unlock
  nameWithType: LockingPersistenceProvider.Unlock
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Update
  nameWithType: LockingPersistenceProvider.Update
