### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ObjectDataSourceView
  id: ObjectDataSourceView
  children:
  - System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)
  - System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  - System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  - System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  - System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  - System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  - System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  - System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  - System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  - System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  - System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  - System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  - System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  - System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  - System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  - System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  - System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  - System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  - System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  - System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  - System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  - System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  - System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.Selected
  - System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  - System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  - System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  - System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.Updated
  - System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.Updating
  langs:
  - csharp
  name: ObjectDataSourceView
  nameWithType: ObjectDataSourceView
  fullName: System.Web.UI.WebControls.ObjectDataSourceView
  type: Class
  summary: "Støtter den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> kontrollere og gir et grensesnitt for databundet kontroller til å utføre dataoperasjoner med business og data."
  remarks: "Klassen ObjectDataSourceView skal primært brukes av databundet kontroller, og ikke som et programmerbare objekt i koden.       ObjectDataSourceView klassen implementerer data funksjonaliteten for den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollere, inkludert de <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>, og <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>operasjoner, sortering, filtrering og administrasjon av innstillinger beholdt i visningen tilstand.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource>       Et ObjectDataSourceView objekt er opprettet for hver forekomst av den <xref:System.Web.UI.WebControls.ObjectDataSource>klassen på kjøretidspunktet.</xref:System.Web.UI.WebControls.ObjectDataSource> Kall til dataoperasjoner av forekomsten av den <xref:System.Web.UI.WebControls.ObjectDataSource>klassen behandles av forekomsten av objektet ObjectDataSourceView.</xref:System.Web.UI.WebControls.ObjectDataSource> Siden utviklere ikke tilgang til forekomsten av klassen ObjectDataSourceView direkte. Kontrollutviklere kan opprette egendefinerte kontroller ved å utvide den <xref:System.Web.UI.WebControls.ObjectDataSource>og ObjectDataSourceView klasser.</xref:System.Web.UI.WebControls.ObjectDataSource>       Klassen ObjectDataSourceView utfører dataoperasjoner ved å kalle metoder på business eller data objekter ved hjelp av gjenspeiling. Under kjøring av <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen oppretter en forekomst av typen som er identifisert av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>egenskapen og kaller deretter egnet metode for Dataoperasjonen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Forekomstopprettet objektet er ikke bufret i minnet av ObjectDataSourceView. Objektet er opprettet og ødelagt for hver data metodekallet. Hvis metoden `static` (`Shared` i Visual Basic), er ikke opprettet en forekomst, men metoden for operasjonen fortsatt kalles.       ObjectDataSourceView vises ikke direkte til siden utviklere av den <xref:System.Web.UI.WebControls.ObjectDataSource>kontroll.</xref:System.Web.UI.WebControls.ObjectDataSource> I stedet tilgjengelig egenskaper og metoder for ObjectDataSourceView via <xref:System.Web.UI.WebControls.ObjectDataSource>.</xref:System.Web.UI.WebControls.ObjectDataSource> For eksempel <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>ObjectDataSourceView egenskapen er angitt ved å sette <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>egenskapen for <xref:System.Web.UI.WebControls.ObjectDataSource>.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>      ## Henter Data vanligste operasjonen som utfører en datakildevisning er henting av data fra den underliggende data lagring ved hjelp av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>metoden henter en <xref:System.Collections.IEnumerable>samling dataelementer.</xref:System.Collections.IEnumerable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> Følgende data henting metoder, egenskaper og hendelser implementert ObjectDataSourceView-objektet og eksponert direkte ved den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen siden utviklere og andre brukere: - <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metode - den <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>egenskapen - den <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>egenskapen - den <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>hendelse – den <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>hendelsen ## oppdatering av Data ObjectDataSourceView objektet støtter dataoppdateringer ved å kalle en business eller data-objekt-metode som er identifisert av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>egenskapen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Selected> </xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Databundet kontroller som automatisk utføre oppdateringer, for eksempel den <xref:System.Web.UI.WebControls.GridView>og <xref:System.Web.UI.WebControls.DetailsView>kontroller, sendes sine parametere i en <xref:System.Collections.Specialized.IOrderedDictionary>grensesnittet til ObjectDataSourceView og Vis-objektet slår sammen disse parameterne med parametere som finnes i den <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>samlingen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> </xref:System.Collections.Specialized.IOrderedDictionary> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       Følgende oppdateringsmetoder, egenskaper og hendelser implementert av ObjectDataSourceView og eksponert direkte ved den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen siden utviklere og andre brukere: - <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>metode - den <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>egenskapen - den <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>egenskapen - den <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>hendelse – den <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>hendelsen ## innsetting Data ObjectDataSourceView objektet støtter innsetting av nye rader med data ved å kalle en business eller data-objekt-metode som er identifisert av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>egenskapen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Updated> </xref:System.Web.UI.WebControls.ObjectDataSource.Updating> </xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Databundet kontroller som automatisk utføre innsettinger, for eksempel den <xref:System.Web.UI.WebControls.GridView>og <xref:System.Web.UI.WebControls.DetailsView>, sendes sine parametere i en <xref:System.Collections.Specialized.IOrderedDictionary>grensesnittet til ObjectDataSourceView og Vis-objektet slår sammen disse parameterne med parametere som finnes i den <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>samlingen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> </xref:System.Collections.Specialized.IOrderedDictionary> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       Følgende Sett inn metoder, egenskaper og hendelser implementeres av ObjectDataSourceView og eksponert direkte ved den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen siden utviklere og andre brukere: - <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>metode - den <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>egenskapen - den <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>egenskapen - den <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>hendelse – den <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>hendelsen ## sletter Data ObjectDataSourceView objektet støtter sletting av data ved å kalle en business eller data-objekt-metode som er identifisert av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>egenskapen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> </xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Databundet kontroller som utfører automatisk sletting, som den <xref:System.Web.UI.WebControls.GridView>og <xref:System.Web.UI.WebControls.DetailsView>, sendes sine parametere i en <xref:System.Collections.Specialized.IOrderedDictionary>grensesnittet til ObjectDataSourceView og Vis-objektet slår sammen disse parameterne med parametere som finnes i den <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>samlingen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> </xref:System.Collections.Specialized.IOrderedDictionary> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Følgende Slett metoder, egenskaper og hendelser implementeres av ObjectDataSourceView og eksponert direkte ved den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen siden utviklere og andre brukere: - <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>metode - den <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>egenskapen - den <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>egenskapen - den <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>hendelse – den <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>hendelsen ## henting av filtrering og sortering Data Data er mer kraftig når du kan filtrere dataene dynamisk.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Filtrering støttes bare ved den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollere om det <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>metoden returnerer en <xref:System.Data.DataTable>eller <xref:System.Data.DataSet>objektet.</xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Du kan bruke den <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>og <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>egenskapene som skal bruke dynamisk filtrering til datahenting.</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> Disse egenskapene er implementeres av ObjectDataSourceView-objektet og vises direkte i den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen databundet kontroller og andre brukere.</xref:System.Web.UI.WebControls.ObjectDataSource>       Du kan også sortere dataene som du hente med den <xref:System.Web.UI.WebControls.ObjectDataSource>ved sortering dataene i minnet når det er hentet.</xref:System.Web.UI.WebControls.ObjectDataSource> Sortering støttes bare ved den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollerer om <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>metoden returnerer en <xref:System.Data.DataTable>eller <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Den <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A>egenskapen returnerer alltid `true`fordi ObjectDataSourceView ikke kan bestemme hva slags returneres av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>metoden uten å kalle metoden.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A> Den <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>egenskapssyntaksen er den samme som for en <xref:System.Data.DataView.Sort%2A?displayProperty=fullName>egenskapen.</xref:System.Data.DataView.Sort%2A?displayProperty=fullName> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>      ## Sporing Vis status for ObjectDataSourceView implementerer den <xref:System.Web.UI.IStateManager>grensesnittet og bruker vise status for å spore tilstanden på tvers av siden forespørsler.</xref:System.Web.UI.IStateManager> Implementering av <xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>, og <xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A>finnes metoder for å aktivere sporing av Vis status for kontrollen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A> Hvis du vil ha mer informasjon, se [ASP.NET oversikt over tilstand](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public class ObjectDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  - System.Web.UI.DataSourceView
  implements:
  - System.Web.UI.IStateManager
  inheritedMembers:
  - System.Web.UI.DataSourceView.CanExecute(System.String)
  - System.Web.UI.DataSourceView.DataSourceViewChanged
  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Events
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Name
  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  - System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)
  id: '#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)'
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  nameWithType: ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> klasse."
  remarks: "Den <xref:System.Web.UI.WebControls.ObjectDataSourceView>konstruktøren kalles av den <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>metode til å returnere en ny forekomst av en datakildevisning med angitt `viewName` parameteren.</xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> Den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen er knyttet til bare én <xref:System.Web.UI.WebControls.ObjectDataSourceView>når som helst og navngir alltid visningen `DefaultView`, selv om denne naming begrensningen er pålagt av <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen, ikke operatoren <xref:System.Web.UI.WebControls.ObjectDataSourceView>.</xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSource> Du kan overstyre den <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>metoden støtter visninger med en annen navnekonvensjonen.</xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>       Den <xref:System.Web.HttpContext>objekt som er sendt av `context` brukes av datakildevisningen tilgang parameteren objekter, for eksempel <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>og <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>Egenskaper.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> </xref:System.Web.HttpContext>"
  syntax:
    content: public ObjectDataSourceView (System.Web.UI.WebControls.ObjectDataSource owner, string name, System.Web.HttpContext context);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.ObjectDataSource
      description: "Den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> som den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> er knyttet til."
    - id: name
      type: System.String
      description: "Et unikt navn for datakildevisningen innenfor området for datakildekontrollen som eier den."
    - id: context
      type: System.Web.HttpContext
      description: "Gjeldende <xref href=&quot;System.Web.HttpContext&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  id: CanDelete
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanDelete
  nameWithType: ObjectDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter en verdi som angir om den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objektet som er knyttet til gjeldende <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> kontrollen støtter sletteoperasjonen."
  remarks: "Returnerer CanDelete `true`, hvis den <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>-egenskap er satt.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> En sletting kan fortsatt mislykkes hvis alle dataegenskapene ikke er angitt eller er ikke riktig angitt."
  syntax:
    content: public override bool CanDelete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, hvis operasjonen støttes. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Sletting støttes ikke, hvis den <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>egenskapen er en tom streng (&quot;&quot;).</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  id: CanInsert
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanInsert
  nameWithType: ObjectDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter en verdi som angir om den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objektet som er knyttet til gjeldende <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> kontrollen støtter insert-operasjonen."
  remarks: "Returnerer CanInsert `true`, hvis den <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>-egenskap er satt.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> En insert-operasjon kan fortsatt mislykkes hvis alle dataegenskapene ikke er angitt eller er ikke riktig angitt."
  syntax:
    content: public override bool CanInsert { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, hvis operasjonen støttes. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Innsetting støttes ikke, hvis den <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>egenskapen er en tom streng.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  id: CanPage
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanPage
  nameWithType: ObjectDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter en verdi som angir om den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objektet som er knyttet til gjeldende <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> kontrollen støtter SMS fra de hentede dataene."
  remarks: "Egenskapen CanPage angir om den <xref:System.Web.UI.WebControls.ObjectDataSourceView>objektet støtter Bla.</xref:System.Web.UI.WebControls.ObjectDataSourceView> For informasjon om hvordan som Bla støttes av <xref:System.Web.UI.WebControls.ObjectDataSourceView>, kan du se <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: public override bool CanPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, hvis den <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging*>verdien er satt til <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  id: CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanRetrieveTotalRowCount
  nameWithType: ObjectDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter en verdi som angir om den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objektet som er knyttet til gjeldende <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> kontrollen støtter henting av antall datarader, i tillegg til settet med data."
  remarks: "Returnerer CanRetrieveTotalRowCount `true`, hvis den <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>-egenskap er satt.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> Metode som returnerer antallet skal returnere antall rader som kan veksles, ikke antall rader i en side. Databundet Kontroller Bruk antall rader som kan veksles for å finne ut hvordan du gjengi Bla kontroller. For eksempel hvor mange numerisk personsøker knappene for å gjengi i en <xref:System.Web.UI.WebControls.GridView>kontrollere personsøker.</xref:System.Web.UI.WebControls.GridView> For mer informasjon om Bla støtte, kan du se <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>       Egenskapen CanRetrieveTotalRowCount kontrolleres under et kall til den <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>metode for å sikre at datakilde kontrollen støtter alle funksjonene forespurte ved å angi de ulike <xref:System.Web.UI.DataSourceSelectArguments>Egenskaper.</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>"
  syntax:
    content: public override bool CanRetrieveTotalRowCount { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, hvis operasjonen støttes. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  id: CanSort
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanSort
  nameWithType: ObjectDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter en verdi som angir om den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objektet som er knyttet til gjeldende <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> kontrollen støtter en sorterte visning på den underliggende datakilden."
  remarks: "Fordi den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollere støtter bare sorterer data når den <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metoden returnerer en <xref:System.Data.DataSet>, <xref:System.Data.DataView>, eller <xref:System.Data.DataTable>objektet, Vis-objektet ikke kan avgjøre om sortering støttes før den <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>metoden kalles, og returnerer.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Derfor CanSort egenskapen alltid returnerer `true`."
  syntax:
    content: public override bool CanSort { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanSort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  id: CanUpdate
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanUpdate
  nameWithType: ObjectDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter en verdi som angir om den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objektet som er knyttet til gjeldende <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> kontrollen støtter oppdateringen."
  remarks: "Returnerer CanUpdate `true`, hvis den <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>-egenskap er satt.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> En oppdateringsoperasjon kan fortsatt mislykkes hvis alle dataegenskapene ikke er angitt eller er ikke riktig angitt."
  syntax:
    content: public override bool CanUpdate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, hvis operasjonen støttes. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Oppdatering støttes ikke hvis den <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>egenskapen er en tom streng (&quot;&quot;).</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  id: ConflictDetection
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ConflictDetection
  nameWithType: ObjectDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir en verdi som bestemmer hvordan <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> kontrollen utfører oppdateringer og sletter når data i en rad i den underliggende datalagring endres i tidsrommet for operasjonen."
  remarks: "Egenskapen ConflictDetection bestemmer om parametere for gammel og ny verdier brukes på den `Update` metoden. For eksempel hvis metoden som er angitt av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>returnerer en <xref:System.Data.DataTable>objekt med kolonnene `Name` og `Number`, og ConflictDetection-egenskap er satt til den <xref:System.Web.UI.ConflictOptions>verdien parametere er opprettet for `Name` og `Number` for den `Update` metoden.</xref:System.Web.UI.ConflictOptions> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> Hvis egenskapen ConflictDetection er satt til den <xref:System.Web.UI.ConflictOptions>verdi, opprettes parametere med navn `Name`, `Number`, `original_Name`, og `original_Name`.</xref:System.Web.UI.ConflictOptions> (Det nøyaktige navnet på parameterne for de opprinnelige verdiene er avhengig av <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>.)</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> Den <xref:System.Web.UI.WebControls.ObjectDataSourceView>bestemmer om metoden som er angitt i den <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>egenskapen har parametere som tilsvarer.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView>       Samtidighetskontroll benyttes datalager bruke til å kontrollere hvordan data lese og endret i butikken når flere klienter tilgang til og manipulering av de samme dataene. En klient leser data og viser til en bruker, mens en annen klient leser de samme dataene, og viser til en annen bruker. Hvis begge brukerne oppdatere dataene og sende den til datalageret, kan et uventet resultat oppstå, fordi begge klientene kan oppdatere ulike verdier for de samme dataene. Dette anses som en konflikt. Ved å sette egenskapen ConflictDetection til den <xref:System.Web.UI.ConflictOptions>verdi, den `Update` metoden kan deretter sammenligne gammel og ny verdier til den opprinnelige datakilden til å oppdage konflikter og behandle dem, etter behov.</xref:System.Web.UI.ConflictOptions>       Verdien for ConflictDetection er lagret i visningen tilstand."
  syntax:
    content: public System.Web.UI.ConflictOptions ConflictDetection { get; set; }
    return:
      type: System.Web.UI.ConflictOptions
      description: "Én av de <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> verdier. Standard er det <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> verdi."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den valgte verdien er ikke én av de <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> verdier."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  id: ConvertNullToDBNull
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSourceView.ConvertNullToDBNull
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir en verdi som angir om <xref href=&quot;System.Web.UI.WebControls.Parameter&quot;> </xref> verdier som er sendt til en oppdatering, innsetting eller sletting konverteres automatisk fra <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> til den <xref href=&quot;System.DBNull.Value&quot;> </xref> verdi."
  remarks: "Ikke konvertere `null` til den <xref:System.DBNull.Value?displayProperty=fullName>verdi kan føre til feil under kjøring.</xref:System.DBNull.Value?displayProperty=fullName> Bruke egenskapen ConvertNullToDBNull som viser om den <xref:System.Web.UI.WebControls.Parameter>verdier som er sendt til en oppdatering, innsetting eller en sletting konverteres automatisk fra `null` til den <xref:System.DBNull.Value?displayProperty=fullName>verdi.</xref:System.DBNull.Value?displayProperty=fullName> </xref:System.Web.UI.WebControls.Parameter> Hvis du vil ha mer informasjon, kan du se <xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull?displayProperty=fullName>"
  syntax:
    content: public bool ConvertNullToDBNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, hvis <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> i <xref href=&quot;System.Web.UI.WebControls.Parameter&quot;> </xref> objekter som er sendt til den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> automatisk konverteres til den <xref href=&quot;System.DBNull.Value&quot;> </xref> verdi; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  id: DataObjectTypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: DataObjectTypeName
  nameWithType: ObjectDataSourceView.DataObjectTypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir navnet på en klasse som den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> kontrollen bruker for en parameter i en operasjon for dataene. Den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> kontrollen bruker den angitte klassen i stedet for den <xref href=&quot;System.Web.UI.WebControls.Parameter&quot;> </xref> objektene i forskjellige parametere samlingene."
  remarks: "I stedet for å angi flere parametere som er sendt til den `Select`, `Update`, `Insert`, og `Delete` metoder, kan du opprette ett objekt som samler flere elementer. Denne ett objekt er sendt til metodene, i stedet for flere parametere. Hvis du vil ha mer informasjon se <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName?displayProperty=fullName>"
  syntax:
    content: public string DataObjectTypeName { get; set; }
    return:
      type: System.String
      description: "En delvis eller fullstendig kvalifisert Klassenavn som identifiserer for objektet som den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> kan brukes som en parameter for en <> </> *>, <> </> *>, eller <xref:System.Web.UI.WebControls.ObjectDataSource.Delete*>operasjonen.</xref:System.Web.UI.WebControls.ObjectDataSource.Delete*> Standarden er en tom streng (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Delete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Delete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Utfører en sletting ved å kalle metoden for business-objektet som er identifisert av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>egenskapen ved hjelp av den angitte <code> keys </code> og <code> oldValues </code> samlinger.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  remarks: "Standardverdien er -1, som betyr at ukjent antall rader ble slettet. Hvis du en annen verdi, angir den <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>for den <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objekt av den <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>hendelsesbehandlingen.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> Antall rader som berørte vanligvis er returnert av den `Delete` metode for business-objekt, og denne verdien er tilgjengelig fra den <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>for den <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>-parameteren for den <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>hendelsesbehandlingen.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>       Slett metodekall den <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A>metoden sending av `keys` og `oldValues` samlinger.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A>"
  syntax:
    content: public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>for nøkkelverdiene som brukes til å identifisere elementet du vil slette.</xref:System.Collections.IDictionary> Disse parameterne brukes med den <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>til å utføre sletteoperasjonen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*> Hvis det er ingen parametere som er forbundet med metoden, kan du sende <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>som inneholder verdiene som ekstra uten nøkkel brukes til å samsvare med elementet i datakilden.</xref:System.Collections.IDictionary> Radverdiene er sendt til metoden bare hvis det <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>er satt til den <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> felt.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>"
    return:
      type: System.Int32
      description: "Antall rader som ble brukt. Ellers, -1, hvis tallet ikke er kjent."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Delete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  id: Deleted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Deleted
  nameWithType: ObjectDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Forekommer når en <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>operasjonen er fullført.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>"
  remarks: "Behandle Deleted-hendelsen for å undersøke verdiene i en returverdi og returnere parametere, eller for å bestemme om det oppstod et unntaket etter en <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>operasjonen er fullført.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> Verdien som returneres, utdataparametere og unntaksbehandling egenskaper er tilgjengelig fra den <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objektet som er forbundet med hendelsen.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       Du finner mer informasjon om behandling av hendelser [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the Deleted event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_129_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_129_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  id: DeleteMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: DeleteMethod
  nameWithType: ObjectDataSourceView.DeleteMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir navnet på metoden eller funksjonen som den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objektet aktiverer Hvis du vil slette dataene."
  remarks: "Metoden som er identifisert av DeleteMethod-egenskapen kan være en forekomst-metoden eller `static` (`Shared` i Visual Basic) metoden. Hvis det er en forekomst, business-objekt opprettes og ødelagt hver gang metoden som er angitt av egenskapen DeleteMethod kalles. Du kan behandle den <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>hendelsen til å fungere med business objektet før du kaller metoden angitt av egenskapen DeleteMethod.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> Du kan også håndtere den <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>hendelsen oppstår når du kaller metoden angitt av egenskapen DeleteMethod.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> Hvis metoden en `static` (`Shared` i Visual Basic)-metoden, business-objektet er aldri opprettet, og du kan ikke behandle disse hendelsene.       Hvis bedriften objekt som den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen fungerer med implementerer mer enn én måte eller funksjon med samme navn (metoden overlastingene), datakildekontrollen prøver å aktivere det riktige i henhold til et sett med vilkår, inkludert parameterne i det <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>samlingen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Hvis parameterne i det <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>samling samsvarer ikke med de DeleteMethod Metodesignaturen, datakilden oppstår det et unntak.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>       Verdien for DeleteMethod egenskapen er lagret i visningen tilstand.       Hvis du vil ha mer informasjon, kan du se <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the DeleteMethod property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1099_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1099_1.aspx)]"
  syntax:
    content: public string DeleteMethod { get; set; }
    return:
      type: System.String
      description: "En streng som representerer navnet på metoden eller fungerer som den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> bruker til å slette data. Standarden er en tom streng (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  id: DeleteParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: DeleteParameters
  nameWithType: ObjectDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter parameters-samlingen som inneholder parametere som brukes av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>metoden.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  remarks: "Navn og typer for parameterne som finnes i samlingen DeleteParameters må samsvare med navn og typer for parameterne som er i den angitte av metoden den <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>egenskapen signatur.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> Parameternavnene påvirkes av de <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>egenskapen og bokstaver er.</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> Når du arbeider med databundet kontroller som oppgi parametere, for eksempel <xref:System.Web.UI.WebControls.GridView>og <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen automatisk slår sammen parametere som er angitt i samlingen med disse parameterne som tilbys av kontrollen databindingselementer.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       Hvis du vil ha mer informasjon, kan du se <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "En <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> som inneholder parametere som brukes av metoden som er angitt av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>egenskapen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  id: Deleting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Deleting
  nameWithType: ObjectDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Forekommer før en <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>operasjonen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>"
  remarks: "Behandle sletting-hendelsen for å utføre initialisering av flere operasjoner som er spesifikke for programmet, for å validere verdiene i parametere, eller endre parameteren verdier før den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen utfører den <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>operasjonen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Parameterne er tilgjengelig som en <xref:System.Collections.IDictionary>samling som brukes av den <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>egenskapen som vises av den <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>objektet.</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       Du finner mer informasjon om behandling av hendelser [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the Deleting event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_88_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_88_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  id: EnablePaging
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: EnablePaging
  nameWithType: ObjectDataSourceView.EnablePaging
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir en verdi som angir om dataene kildekontrollen støtter SMS fra settet med data som hentes."
  remarks: "Bla av den <xref:System.Web.UI.WebControls.ObjectDataSourceView>kontrollen behandles ved å angi EnablePaging <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>, og <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>egenskapene for den <xref:System.Web.UI.WebControls.ObjectDataSourceView>og definere en `Select` metoden i business-objektet med riktige parametere.</xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> Når egenskapen EnablePaging er satt til `true`, <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>samlingen inneholder to tilleggsparametere for den første raden som ble forespurt og hvor mange rader som er forespurt.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> Disse to parametere er navnet som er angitt av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>og <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>Egenskaper.</xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> Den `Select` metoden skal returnere for ønsket antall rader med Start fra den angitte indeksen. Fordi dataene ikke kan dele jevnt på sidestørrelsen, kan den siste siden inneholder færre rader. Antall rader som er forespurt er derfor faktisk maksimalt antall rader som returneres.       Den <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A>egenskapen er merket under et kall til den <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>metode for å sikre at datakilde kontrollen støtter alle funksjonene forespurte ved å angi de ulike <xref:System.Web.UI.DataSourceSelectArguments>Egenskaper.</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A>       Når Bla er aktivert på den tilknyttede databundet kontrollen, databundet kontrollen kaller den `Select` metode med startindeksen og antall rader som er nødvendig. I tillegg hvis den <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>er satt, databundet kontrollen kaller metoden før gjengis personsøker-kontroller.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> For eksempel hvis en <xref:System.Web.UI.WebControls.GridView>kontrollen har Bla aktivert med en sidestørrelse 5, og <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>metoden returnerer 20, vises bare 4 sidene i sideveksling.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> </xref:System.Web.UI.WebControls.GridView>       Verdien for EnablePaging egenskapen er lagret i visningen tilstand."
  syntax:
    content: public bool EnablePaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, hvis datakildekontrollen støtter blar gjennom dataene den henter; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Utfører en delete operasjonen ved hjelp av <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>metoden og den angitte <code> keys </code> og <code> oldValues </code> samlingen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  remarks: "Den <xref:System.Web.UI.WebControls.ObjectDataSourceView>klassen implementerer metoden arvede ExecuteDelete for å slette data fra en underliggende datalager ved hjelp av et objekt for business.</xref:System.Web.UI.WebControls.ObjectDataSourceView> Siden utviklere og databundet kontrollen forfattere kall ikke metoden ExecuteDelete direkte. Bruk i stedet offentlig åpne <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>metode.</xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>       Før sletteoperasjonen utføres, den <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A>metoden kalles for å øke den <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>hendelsen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> Du kan håndtere denne hendelsen for å undersøke verdier for parameterne og utføre forhåndsbehandling før den <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>-metoden.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>       Til å utføre en sletting av <xref:System.Web.UI.WebControls.ObjectDataSourceView>bruker gjenspeiling til å kalle metoden som er identifisert av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>egenskapen og eventuelle tilknyttede parametere i den `keys` og `oldValues` samlinger, og utfører den.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> Når operasjonen er fullført, den <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A>metoden kalles for å øke den <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted>hendelsen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> Du kan håndtere denne hendelsen til å undersøke eventuelle returverdier og feilkoder og til å utføre noen etterbehandling."
  syntax:
    content: protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>Parametere som brukes med den <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>til å utføre sletteoperasjonen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*> </xref:System.Collections.IDictionary> Hvis det er ingen parametere som er forbundet med metoden, kan du sende <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>som inneholder radverdiene vurderes, bare hvis det <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>er satt til den <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> felt.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*> </xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "Antall rader som ble brukt. Ellers, -1, hvis tallet ikke er kjent. Hvis du vil ha mer informasjon, kan du se <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*>returnerer <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>er satt til den <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> verdi, og ingen verdier er sendt inn av <code> oldValues </code> samlingen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  id: ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteInsert(IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Utfører en insert-operasjonen ved å kalle metoden for business-objektet som er identifisert av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>egenskapen ved hjelp av den angitte <code> values </code> samlingen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  remarks: "Den <xref:System.Web.UI.WebControls.ObjectDataSourceView>klassen implementerer metoden arvede ExecuteInsert for å sette inn data i en underliggende datalager ved hjelp av et objekt for business.</xref:System.Web.UI.WebControls.ObjectDataSourceView> Siden utviklere og databundet kontrollen forfattere kall ikke metoden ExecuteInsert direkte. Bruk i stedet offentlig åpne <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>metode.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>       Før innsetting utføres, den <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A>metoden kalles for å øke den <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting>hendelsen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> Du kan håndtere denne hendelsen for å undersøke verdier for parameterne og utføre forhåndsbehandling før den <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>-metoden.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>       Å utføre en insert-operasjon i <xref:System.Web.UI.WebControls.ObjectDataSourceView>kontrollen bruker gjenspeiling for å kalle metoden som er identifisert av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>egenskapen og eventuelle tilknyttede parametere i den `values` samling, og utfører den.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> Når operasjonen er fullført, den <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>metoden kalles for å øke den <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted>hendelsen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> Du kan håndtere denne hendelsen for å se alle returverdier, feilkoder, og utføre noen etterbehandling.       Hvis du vil ha mer informasjon om hvordan du returnerer antall rader som settes inn, kan du se <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>"
  syntax:
    content: protected override int ExecuteInsert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>Parametere som brukes med den <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>til å utføre operasjonen insert.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*> </xref:System.Collections.IDictionary> Hvis det er ingen parametere som er forbundet med metoden, kan du sende <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "Antall rader som er satt inn; Ellers, -1, hvis tallet ikke er kjent. For mer informasjon, kan du se <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>returnerer <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>values</code>er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller tom."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter data fra objektet som er identifisert av den <> </> *> ved å kalle metoden som er identifisert av den <> </> *> egenskapen og sending av alle verdiene i den <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>samlingen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>"
  remarks: "Den <xref:System.Web.UI.WebControls.ObjectDataSourceView>klassen implementerer metoden arvede UtførValg for å hente data ved hjelp av et objekt for business.</xref:System.Web.UI.WebControls.ObjectDataSourceView> Siden utviklere og databundet kontrollen forfattere kall ikke metoden UtførValg direkte. Bruk i stedet offentlig åpne <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>metode.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>       Den angitte metoden kan ikke ha noen metodesignatur men må returnere en av typene for den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen som er oppført i tabellen nedenfor til å kalle den ble.</xref:System.Web.UI.WebControls.ObjectDataSource>      | Returner typen | Handlingen |   |-----------------|------------|   | <xref:System.Collections.IEnumerable>| <xref:System.Collections.IEnumerable>Er returnert av metoden <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |   | <xref:System.Data.DataTable>| En <xref:System.Data.DataView>er opprettet ved hjelp av <xref:System.Data.DataTable>og returnert av metoden <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |   | <xref:System.Data.DataSet>| Først <xref:System.Data.DataTable>av <xref:System.Data.DataSet>trekkes og en <xref:System.Data.DataView>opprettes og returnert av metoden <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |   | <xref:System.Object>| Objektet står i en én-elementet <xref:System.Collections.IEnumerable>og returnert av metoden <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |       Før datahenting utføres, den <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A>metoden kalles for å øke den <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting>hendelsen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Object> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataView> </xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Collections.IEnumerable> Du kan håndtere denne hendelsen til å undersøke verdier for parameterne, og til å utføre forhåndsbehandling før en operasjon.       Til å utføre en select-operasjon i <xref:System.Web.UI.WebControls.ObjectDataSourceView>kontrollen bruker gjenspeiling for å kalle metoden som er identifisert av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>egenskapen og eventuelle tilknyttede parametere i den <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>samling, og utfører den.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> Når operasjonen er fullført, den <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>metoden kalles for å øke den <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected>hendelsen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> Du kan håndtere denne hendelsen til å undersøke eventuelle returverdier og feilkoder og til å utføre noen etterbehandling.       Hvis den <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>metoden returnerer en <xref:System.Data.DataSet>objekt og hurtigbufring er aktivert, den <xref:System.Web.UI.WebControls.ObjectDataSourceView>henter data fra og lagrer data i bufferen under operasjonen.</xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> Bufferen er opprettet, forkastet eller oppdateres basert på hurtigbufring virkemåten som er angitt av kombinasjonen av den <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>og <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>Egenskaper.</xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>       Hvis den <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>metoden returnerer en <xref:System.Data.DataSet>objekt og en <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>egenskapen er angitt, evalueres det sammen med en angitt <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>Egenskaper og resulterende filteret brukes i listen over data under den <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>operasjonen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>       Hvis du vil ha informasjon om hvordan du returnerer antall rader som er valgt, kan du se <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>"
  syntax:
    content: protected override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "En <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> brukes til forespørselen operasjoner i data utenfor grunnleggende datahenting."
    return:
      type: System.Collections.IEnumerable
      description: "En <xref:System.Collections.IEnumerable>liste over datarader.</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <code>arguments</code> passed to the ExecuteSelect method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.  \n  \n \\- or -  \n  \n The object returned by the ExecuteSelect method is not a <xref href=\"System.Data.DataSet\"></xref> or <xref href=\"System.Data.DataTable\"></xref>, and caching is enabled. Only <xref href=\"System.Data.DataSet\"></xref> and <xref href=\"System.Data.DataTable\"></xref> objects can be cached for the <xref href=\"System.Web.UI.WebControls.ObjectDataSourceView\"></xref> control.  \n  \n \\- or -  \n  \n Both caching and client impersonation are enabled. The <xref href=\"System.Web.UI.WebControls.ObjectDataSource\"></xref> does not support caching when client impersonation is enabled."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The object returned by the ExecuteSelect method is a <xref href=\"System.Data.DataSet\"></xref>, but has no tables in its <xref:System.Data.DataSet.Tables*> collection.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging*> property is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, but the <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName*> and <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName*> properties are not set."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Utfører en oppdateringsoperasjon ved å kalle metoden som er identifisert av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>egenskapen og bruker parametere som er angitt i den <code> keys </code>, <code> values </code>, eller <code> oldValues </code> samlinger.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  remarks: "Den <xref:System.Web.UI.WebControls.ObjectDataSourceView>klassen implementerer metoden arvede ExecuteUpdate for å oppdatere dataene ved hjelp av et objekt for business.</xref:System.Web.UI.WebControls.ObjectDataSourceView> Siden utviklere og databundet kontrollen forfattere kall ikke metoden ExecuteUpdate direkte. Bruk i stedet offentlig åpne <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>metode.</xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>       Verdiene i den `keys` og `values` samlinger evalueres og sammen med verdier som finnes i den <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>samlingen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> Hvis den <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>er satt til den <xref:System.Web.UI.ConflictOptions>verdi, verdiene i den `oldValues` samlingen er formatert med den <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>egenskapen og er også sammen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>       Før oppdateringen utføres, den <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A>metoden kalles for å øke den <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating>hendelsen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> Du kan håndtere denne hendelsen til å undersøke verdier for parameterne, og til å utføre forhåndsbehandling før en oppdatering. Til å utføre en oppdateringsoperasjon den <xref:System.Web.UI.WebControls.ObjectDataSourceView>bruker gjenspeiling til å kalle metoden som er identifisert av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>egenskapen og eventuelle tilknyttede parametere i den `keys` samling, og utfører den.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> Når operasjonen er fullført, den <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>metoden kalles for å øke den <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated>hendelsen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> Du kan håndtere denne hendelsen for å se alle returverdier, feilkoder, og utføre noen etterbehandling.       Hvis du vil ha mer informasjon om hvordan du returnerer antall rader som er oppdatert, kan du se <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>"
  syntax:
    content: protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>av primærnøkler skal brukes med den <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>til å utføre databaseoperasjonen oppdateringen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> </xref:System.Collections.IDictionary> Hvis det finnes ingen nøkler som er forbundet med metoden, kan du sende <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: values
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>av verdiene som skal brukes med den <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>til å utføre databaseoperasjonen oppdateringen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> </xref:System.Collections.IDictionary> Hvis det er ingen parametere som er forbundet med metoden, kan du sende <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>som representerer de opprinnelige verdiene i det underliggende datalageret.</xref:System.Collections.IDictionary> Hvis det er ingen parametere som er knyttet til spørringen, kan du sende <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "Antall rader oppdatert; eller -1 hvis tallet ikke er kjent. Hvis du vil ha mer informasjon, kan du se <xref:System.Web.UI.WebControls.ObjectDataSource.Update*>.</xref:System.Web.UI.WebControls.ObjectDataSource.Update*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>returnerer <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>oldValues</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or empty and <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*> is set to <xref href=&quot;System.Web.UI.ConflictOptions&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  id: FilterExpression
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: FilterExpression
  nameWithType: ObjectDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir et filtrering uttrykk som brukes når business-metoden for objektet som er identifisert av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>egenskapen kalles.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  remarks: "Den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen støtter filtrere data bare når den <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>metoden returnerer en <xref:System.Data.DataSet>, <xref:System.Data.DataView>, eller <xref:System.Data.DataTable>objektet.</xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource>       Syntaksen som brukes for den <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>egenskapen er et uttrykk som format streng-stil.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Syntaksen for filteret uttrykket er den samme syntaksen som godtas av den <xref:System.Data.DataView.RowFilter%2A>egenskapen fordi filteruttrykket er brukt på den <xref:System.Data.DataView.RowFilter%2A>for den <xref:System.Data.DataView>objektet som er returnert fra kjøring av <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metoden.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> </xref:System.Data.DataView.RowFilter%2A> </xref:System.Data.DataView.RowFilter%2A> (Hvis du vil ha mer informasjon, se <xref:System.Data.DataColumn.Expression%2A>.)</xref:System.Data.DataColumn.Expression%2A> Hvis du legger til parametere for den <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>samling, kan du også inkludere format streng plassholdere, for eksempel `&quot;{0}&quot;`, i uttrykket for å erstatte parameterverdier.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> Plassholdere erstattes i henhold til indeksen for parameteren i den <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>samlingen.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>       Du kan inkludere parametere i <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Hvis typen for parameteren er av typen streng eller et tegn, må parameteren enkelt stå i anførselstegn. Anførselstegn er ikke nødvendig hvis parameteren er en numerisk type. <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>Samlingen inneholder parametere som evalueres for plassholdere funnet i <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>       Verdien for FilterExpression egenskapen er lagret i visningen tilstand.      > [!IMPORTANT] > Det anbefales at du validerer en parameterverdi for filter som du mottar fra klienten. Kjøretiden ganske enkelt inn parameterverdien i filteruttrykket og gjelder den til den <xref:System.Data.DataView>objektet som er returnert av den <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metoden.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> Hvis du bruker den <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>egenskapen som et sikkerhetstiltak å begrense antall elementer som returneres, må du validere parameterverdiene før filtreringen forekommer.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The <xref:System.Web.UI.WebControls.ObjectDataSource> control can filter data only when the method that retrieves the data retrieves it as a <xref:System.Data.DataSet> object. For this reason, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property identifies a business object method that retrieves data as a <xref:System.Data.DataSet>.  \n  \n The code example consists of a <xref:System.Web.UI.WebControls.TextBox>, a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.ObjectDataSource> control, and a **Submit** button. By default, the <xref:System.Web.UI.WebControls.TextBox> is populated with the name of one of the Northwind Traders employees. The <xref:System.Web.UI.WebControls.GridView> displays information about the employee that is identified by the name in the <xref:System.Web.UI.WebControls.TextBox>. To retrieve data on another employee, in the <xref:System.Web.UI.WebControls.TextBox>, enter the full name of the employee, and then click the **Submit** button.  \n  \n The FilterExpression property specifies an expression that is used to filter the data that is retrieved by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property. It uses parameter placeholders that are evaluated to the parameters that are contained in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> collection. In this example, the parameter placeholder is bounded by single quotation marks because the type of the parameter is a string type that might contain spaces. If the type of the parameter is a numeric or date type, bounding quotation marks are not required.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1284_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1284_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n For simplicity, the `EmployeeLogic` class creates a static set of data, rather than retrieving the data from a data tier. It is also helpful for this example, because the sample relies on you to provide the full name of a Northwind Traders employee to demonstrate filtering.  \n  \n For a complete working example, you must compile and use these classes with the Web Forms page code examples that are provided.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1284_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1284_2.vb)]"
  syntax:
    content: public string FilterExpression { get; set; }
    return:
      type: System.String
      description: "En streng som representerer et filtrering uttrykk som brukes når data som hentes ved hjelp av metoden for business objektet ble identifisert av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>egenskapen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Egenskapen FilterExpression ble angitt og <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select*>metoden returnerer ikke en <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  id: Filtering
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Filtering
  nameWithType: ObjectDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Forekommer før en filteroperasjon."
  remarks: "Behandle den <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering>-hendelsen for å utføre validering operasjoner i parameteren filterverdier før den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen utfører en filteroperasjon.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource.Filtering> Du kan avbryte den <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>operasjonen ved å angi den <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>for den <xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs>objekt `true`.</xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> Hendelsen oppstår bare hvis det <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>-egenskap er satt.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>       Du finner mer informasjon om behandling av hendelser [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).      > [!IMPORTANT] > Bør du validere en parameterverdi for filter som du mottar fra klienten. Kjøretiden ganske enkelt inn parameterverdien i filteruttrykket og gjelder den til den <xref:System.Data.DataView>objektet som er returnert av den <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metoden.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> Hvis du bruker den <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>egenskapen som et sikkerhetstiltak å begrense antall elementer som returneres, må du validere parameterverdiene før filtreringen forekommer.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  id: FilterParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: FilterParameters
  nameWithType: ObjectDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter en samling med parametere som er knyttet til noen plassholdere for parameteren i den <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>streng.</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>"
  remarks: "Den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen støtter filtrere data bare når den <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>metoden returnerer en <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, eller <xref:System.Data.DataView>objektet.</xref:System.Data.DataView> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource>       Parameterne i samlingen FilterParameters er knyttet til parametere som er angitt i den <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>egenskapen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> Plassholdere for parameteren som er angitt i den <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>egenskapen samsvarer med parameteren-objekter i samlingen FilterParameters når metoden som er angitt av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>egenskapen kalles.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The <xref:System.Web.UI.WebControls.ObjectDataSource> control can filter data only when the method that retrieves the data retrieves it as a <xref:System.Data.DataSet> object. For this reason, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property identifies a business object method that retrieves data as a <xref:System.Data.DataSet>.  \n  \n The code example consists of a <xref:System.Web.UI.WebControls.TextBox>, a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.ObjectDataSource> control, and a **Submit** button. By default, the <xref:System.Web.UI.WebControls.TextBox> is populated with the name of one of the Northwind Traders employees. The <xref:System.Web.UI.WebControls.GridView> displays information about the employee that is identified by the name in the <xref:System.Web.UI.WebControls.TextBox>. To retrieve data on another employee, in the <xref:System.Web.UI.WebControls.TextBox>, enter the full name of the employee, and then click the **Submit** button.  \n  \n The <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> property specifies an expression that is used to filter the data that is retrieved by the method specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property. It uses parameter placeholders that are evaluated to the parameters that are contained in the FilterParameters collection. In this example, the parameter placeholder is bounded by single quotation marks because the type of the parameter is a string type that might contain spaces. If the type of the parameter is a numeric or date type, bounding quotation marks are not required. The FilterParameters collection contains one parameter, a <xref:System.Web.UI.WebControls.FormParameter> that is bound to the <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1120_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1120_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n For simplicity, the `EmployeeLogic` class creates a static set of data, rather than retrieving the data from a data tier. It is also helpful for this example, because the sample relies on you to provide the full name of a Northwind Traders employee to demonstrate filtering.  \n  \n For a complete working example, you must compile and use these classes with the Web Forms page code examples that are provided.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1120_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1120_2.vb)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "En <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> som inneholder et sett med parametere som er knyttet til noen plassholdere for parameter funnet i den <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>egenskapen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <> </> *>-egenskapen ble angitt og <> </> *> metoden returnerer ikke en <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)
  id: Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Insert(IDictionary)
  nameWithType: ObjectDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Insert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Utfører en insert-operasjonen ved å kalle metoden for business-objektet som er identifisert av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>egenskapen ved hjelp av den angitte <code> values </code> samlingen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  remarks: "Returner standardverdien er -1, som betyr at ukjent antall rader ble satt inn. Hvis du en annen verdi, angir den <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>for den <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objekt av den <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>hendelsen.</xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> Antall rader som berørte vanligvis er returnert av den `Insert` metode for business-objekt, og denne verdien er tilgjengelig fra den <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>for den <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objekt av den <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>hendelsen.</xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>       Insert metodekall den <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A>metoden sending av `values` samlingen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A>"
  syntax:
    content: public int Insert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>Parametersamlingen som brukes med den <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>til å utføre operasjonen insert.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*> </xref:System.Collections.IDictionary> Hvis det er ingen parametere som er forbundet med metoden, kan du sende <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "Antall rader som er satt inn; Ellers, -1, hvis tallet ikke er kjent."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Insert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>returnerer <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  id: Inserted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Inserted
  nameWithType: ObjectDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Forekommer når en <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>operasjonen er fullført.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>"
  remarks: "Behandle Inserted-hendelsen for å undersøke verdiene i en returverdi og returnere parametere, eller for å bestemme om det oppstod et unntaket etter en <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>operasjonen er fullført.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> Verdien som returneres, utdataparametere og unntaksbehandling egenskaper er tilgjengelig fra den <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objektet som er forbundet med hendelsen.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       Du finner mer informasjon om behandling av hendelser [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  id: Inserting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Inserting
  nameWithType: ObjectDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Forekommer før en <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>operasjonen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>"
  remarks: "Behandle sette inn-hendelsen for å utføre initialisering av flere operasjoner som er spesifikke for programmet, for å validere verdiene i parametere, eller endre parameteren verdier før den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen utfører den <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>operasjonen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Parameterne er tilgjengelig som en <xref:System.Collections.IDictionary>samling som brukes av den <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>egenskapen som vises av den <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>objektet.</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       Du finner mer informasjon om behandling av hendelser [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The <xref:System.Web.UI.WebControls.DetailsView> initially displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property identifies which method performs the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation.  \n  \n In this code example, the `UpdateEmployeeInfo` method is used to perform an insert; however it requires a `NorthwindEmployee` parameter to insert the data. For this reason, the collection of strings that the <xref:System.Web.UI.WebControls.DetailsView> control passes automatically is not sufficient. The `NorthwindEmployeeInserting` delegate is an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> object that handles the Inserting event and enables you to manipulate the input parameters before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation proceeds. Because the `UpdateEmployeeInfo` method requires a `NorthwindEmployee` object as a parameter, one is created using the collection of strings, and then added to the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection using a parameter name (`ne`) that the method expects. You might perform steps like these when using an existing middle-tier object as a data source with types and methods that are not designed specifically for use with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed, the method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property is called. If the `Insert` method of the object has a method signature that includes parameters, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> method to complete successfully.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_22_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_22_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a stateless class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n An additional `NorthwindDataException` class is provided as a convenience.  \n  \n For a complete working example, you must compile and use these classes. The `UpdateEmployeeInfo` method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this example.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_22_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_22_2.cs)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  id: InsertMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: InsertMethod
  nameWithType: ObjectDataSourceView.InsertMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir navnet på metoden eller funksjonen som den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objektet aktiverer for å sette inn data."
  remarks: "Metoden som er identifisert av InsertMethod-egenskapen kan være en forekomst-metoden eller `static` (`Shared` i Visual Basic) metoden. Hvis det er en forekomst, business-objekt opprettes og ødelagt hver gang metoden som er angitt av egenskapen InsertMethod kalles. Du kan behandle den <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>hendelsen til å fungere med business objektet før du kaller metoden angitt av egenskapen InsertMethod.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> Du kan også håndtere den <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>hendelsen oppstår når du kaller metoden angitt av egenskapen InsertMethod.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> (`Dispose` kalles, hvis business objektet implementerer den <xref:System.IDisposable>grensesnittet.)</xref:System.IDisposable> Hvis metoden en `static` (`Shared` i Visual Basic)-metoden, business-objektet er aldri opprettet, og du kan ikke behandle disse hendelsene.       Hvis bedriften objekt som den <xref:System.Web.UI.WebControls.ObjectDataSource>objektet som implementerer flere metoden eller funksjon med samme navn (metoden overlastingene), datakildekontrollen prøver å aktivere det riktige i henhold til et sett med vilkår, inkludert parameterne i det <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>samlingen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Hvis parameterne i det <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>samling samsvarer ikke for metoden angitt av egenskapen signaturen InsertMethod, datakilden oppstår det et unntak.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>       Verdien for InsertMethod egenskapen er lagret i visningen tilstand.       Hvis du vil ha mer informasjon, kan du se <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The <xref:System.Web.UI.WebControls.DetailsView> initially displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The InsertMethod property identifies which method performs the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation.  \n  \n In this code example, the `UpdateEmployeeInfo` method is used to perform an insert; however, it requires a `NorthwindEmployee` parameter to insert the data. For this reason, the collection of strings that the <xref:System.Web.UI.WebControls.DetailsView> control passes automatically is not sufficient. The `NorthwindEmployeeInserting` delegate is an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> object that handles the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> event and enables you to manipulate the input parameters before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation proceeds. Because the `UpdateEmployeeInfo` method requires a `NorthwindEmployee` object as a parameter, one is created using the collection of strings and is added to the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection using a parameter name (`ne`) that the method expects. You might perform steps like these when using an existing middle-tier object as a data source with types and methods that are not designed specifically for use with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed, the method that is identified by the InsertMethod property is called. If the `Insert` method of the object has a method signature that includes parameters, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> method to complete successfully.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1176_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1176_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the previous code example uses. The code example consists of two basic classes and an additional class:  \n  \n-   The `EmployeeLogic` class is a stateless class, which encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class is a model class, which contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n-   An additional `NorthwindDataException` class is provided as a convenience.  \n  \n For a complete working example, you must compile and use these classes. The `UpdateEmployeeInfo` method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this code example.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1176_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1176_2.cs)]"
  syntax:
    content: public string InsertMethod { get; set; }
    return:
      type: System.String
      description: "En streng som representerer navnet på metoden eller fungerer som den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> bruker til å sette inn data. Standardverdien er en tom streng (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  id: InsertParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: InsertParameters
  nameWithType: ObjectDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter parameters-samlingen som inneholder parametere som brukes av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>metoden.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  remarks: "Navn og typer for parameterne som finnes i samlingen InsertParameters må samsvare med navn og typer for parameterne som er i den angitte av metoden den <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>egenskapen signatur.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> Når du arbeider med databundet kontroller som oppgi parametere, for eksempel <xref:System.Web.UI.WebControls.GridView>og <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen automatisk slår sammen parametere som er angitt i samlingen med disse parameterne som tilbys av kontrollen databindingselementer.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Hvis du vil ha mer informasjon, kan du se <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example implementation of the `Insert` method that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The <xref:System.Web.UI.WebControls.DetailsView> initially displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property identifies which method performs the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation.  \n  \n If you click the **Insert** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property and any parameters that are specified in the InsertParameters collection. In this code example, one parameter is specified in the InsertParameters collection that corresponds to the supervisor's ID. This is because even though the ID is displayed in the <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> collection for the <xref:System.Web.UI.WebControls.DetailsView> control as a <xref:System.Web.UI.WebControls.BoundField> object, it will be passed as a string to the <xref:System.Web.UI.WebControls.ObjectDataSource> control. By adding it explicitly to the InsertParameters collection with a <xref:System.Web.UI.WebControls.Parameter.Type%2A> property that is set to the <xref:System.TypeCode> value, it will be passed correctly by the <xref:System.Web.UI.WebControls.ObjectDataSource> to the method as an `int`, not as `string`.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed, the method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property is called. If the `Insert` method of the object has a method signature that includes parameters, the InsertParameters collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> to complete successfully.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_8#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_138_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_138_1.aspx)]  \n  \n The following code example provides an example implementation of the `Insert` method that the preceding code example uses. The `InsertNewEmployeeWrapper` method is added to the `EmployeeLogic` middle-tier object to enable the object to work more easily with the <xref:System.Web.UI.WebControls.ObjectDataSource> control in Web scenarios, without a substantial rewrite to the actual business logic.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_138_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_8#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_138_2.cs)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "En <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> som inneholder parametere som brukes av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>egenskapen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  id: IsTrackingViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: IsTrackingViewState
  nameWithType: ObjectDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter en verdi som angir om den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objektet er lagrer endringer i visningsstatusen."
  syntax:
    content: protected bool IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, hvis datakildevisningen er merket for å lagre tilstanden; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: ObjectDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gjenoppretter tidligere lagret visningsstatusen for datakildevisningen."
  remarks: "Denne metoden brukes hovedsakelig av .NET Framework-infrastruktur og skal ikke brukes direkte fra koden.  Kontrollutviklere kan imidlertid overstyre denne metoden hvis du vil angi hvordan en egendefinert serverkontroll gjenoppretter visningstilstanden. Hvis du vil ha mer informasjon, se [ASP.NET oversikt over tilstand](~/add/includes/ajax-current-ext-md.md).       Metoden LoadViewState gjenoppretter visningsstatus informasjon for den <xref:System.Web.UI.WebControls.ObjectDataSourceView>objektet fra en tidligere sideforespørsel som er lagret av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>metoden.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: protected virtual void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Et objekt som representerer den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> tilstand for å gjenopprette."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  id: MaximumRowsParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSourceView.MaximumRowsParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir navnet på data henting av metodeparameteren som brukes til å angi hvor mange poster som skal hentes for Bla støtte."
  remarks: "Egenskapen MaximumRowsParameterName brukes til å støtte datakilde Bla. Hvis du vil ha mer informasjon, kan du se <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>       Verdien for MaximumRowsParameterName er lagret i visningen tilstand."
  syntax:
    content: public string MaximumRowsParameterName { get; set; }
    return:
      type: System.String
      description: "Navnet på metodeparameteren som brukes til å angi antall poster som skal hentes. Standard `&quot;maximumRows&quot;`."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  id: ObjectCreated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectCreated
  nameWithType: ObjectDataSourceView.ObjectCreated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inntreffer etter den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objektet oppretter en forekomst av typen som er identifisert av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>egenskapen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>"
  remarks: "Behandle ObjectCreated-hendelsen for å kalle andre metoder for business-objekt, og angi egenskaper eller utføre andre initialisering som er spesifikk for business-objektet før den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollere kall av `Data` metoder for business-objektet.</xref:System.Web.UI.WebControls.ObjectDataSource> En referanse til objektet brukes av den <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>egenskapen som vises av den <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>objektet.</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>       Hvis metoden som er identifisert for å utføre Dataoperasjonen er `static` (`Shared` i Visual Basic), <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>og ObjectCreated hendelser registreres aldri.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  id: ObjectCreating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectCreating
  nameWithType: ObjectDataSourceView.ObjectCreating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Forekommer før de <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objektet oppretter en forekomst av typen som er identifisert av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>egenskapen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>"
  remarks: "Den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen automatisk kaller Standardkonstruktøren for business-objektet for å opprette og forekomst av den ved hjelp av gjenspeiling.</xref:System.Web.UI.WebControls.ObjectDataSource> Behandle ObjectCreating hendelsen eksplisitt kall til en annen konstruktør og til å angi forekomsten av objektet som fører til den <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>for den tilknyttede <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>objektet.</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>       Du finner mer informasjon om behandling av hendelser [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Hvis metoden som er identifisert for å utføre Dataoperasjonen er `static` (`Shared` i Visual Basic), ObjectCreating og <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>hendelser registreres aldri.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  id: ObjectDisposing
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectDisposing
  nameWithType: ObjectDataSourceView.ObjectDisposing
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Forekommer når den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objektet forkastes en forekomst av et objekt som den er opprettet."
  remarks: "ObjectDisposing denne hendelsen oppstår før forekomsten av objektet business forkastes. Hvis business-objektet som implementerer den <xref:System.IDisposable>grensesnittet den <xref:System.IDisposable.Dispose%2A>metoden kalles når egenskapen ObjectDisposing denne hendelsen oppstår.</xref:System.IDisposable.Dispose%2A> </xref:System.IDisposable>       Behandle ObjectDisposing-hendelsen for å kalle andre metoder på objektet, og angi egenskapene eller utføre opprydding som er spesifikk for objektet før objektet er ødelagt. En referanse til objektet brukes av den <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>egenskapen som vises av den <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>objektet.</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>       Hvis metoden som er identifisert for å utføre Dataoperasjonen er `static` (`Shared` i Visual Basic), oppstår aldri ObjectDisposing-hendelsen."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  id: OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir en formatstreng å bruke navnene på parameterne for opprinnelige verdier som er sendt til den <xref uid=&quot;langword_csharp_Delete&quot; name=&quot;Delete&quot; href=&quot;&quot;> </xref> eller <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref> metoder."
  remarks: "Formatstrengen som OldValuesParameterFormatString gjelder for primærnøkler, for eksempel de som identifiseres med den `DataKeyNames` -egenskapen til en kontroll databundet eller Slett og oppdatere tilfeller der den <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>er satt til den <xref:System.Web.UI.ConflictOptions>verdien og settet med opprinnelige verdier som er sendt til den tilsvarende datametoden.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>       To vanlige scenarioer der du kan endre egenskapen OldValuesParameterFormatString er som følger: – å skille mellom gammel og ny verdiene i oppdateringer. Når den <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>er satt til den <xref:System.Web.UI.ConflictOptions>verdi, parametere for begge opprinnelige og nye verdier er lagt til i <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>samlingen.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> Uten formatering streng, vil to parametere med samme navn opprettes for hvert felt. Ved å endre navnet på parameteren verdi, kan du sammenligne data til den opprinnelige datakilden til å oppdage konflikter og sammenligne verdier.      -Noen visuelle utviklere implementere et bestemt naming fargevalg for opprinnelige verdier og nøkler.       Verdien for OldValuesParameterFormatString lagres i visningsstatusen."
  syntax:
    content: public string OldValuesParameterFormatString { get; set; }
    return:
      type: System.String
      description: "En streng som representerer en formatstreng brukes navnene på alle <code> oldValues </code> sendt til den <> </> *> eller <> </> *> metoden. Standarden er &quot;{0}&quot;, som betyr parameternavnet er ganske enkelt feltnavn."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnDeleted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hever den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Deleted&quot;> </xref> hendelsen etter den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objektet er fullført en sletting."
  remarks: "Opprettet en hendelse aktiverer hendelsesbehandlingen via en representant. Hvis du vil ha mer informasjon, se [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnDeleted kan også avledede klasser behandle hendelsen uten å knytte representant. Dette er den foretrukne metoden for behandling av hendelsen i en avledet klasse."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/bc34632f-3713-4841-acd5-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/bc34632f-3713-4841-acd5-_1.aspx)]"
  syntax:
    content: protected virtual void OnDeleted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref> som inneholder hendelsesdataene."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  id: OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnDeleting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hever den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Deleting&quot;> </xref> hendelsen før den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objektet prøver en sletting."
  remarks: "Opprettet en hendelse aktiverer hendelsesbehandlingen via en representant. Hvis du vil ha mer informasjon, se [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnDeleting kan også avledede klasser behandle hendelsen uten å knytte representant. Dette er den foretrukne metoden for behandling av hendelsen i en avledet klasse."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/6b2992c6-c81b-455e-8607-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/6b2992c6-c81b-455e-8607-_1.aspx)]"
  syntax:
    content: protected virtual void OnDeleting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&quot;> </xref> som inneholder Hendelsesdata."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  id: OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnFiltering(ObjectDataSourceFilteringEventArgs)
  nameWithType: ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hever den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Filtering&quot;> </xref> hendelsen før den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objektet prøver filtrering operasjonen."
  remarks: "Opprettet en hendelse aktiverer hendelsesbehandlingen via en representant. Hvis du vil ha mer informasjon, se [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnFiltering kan også avledede klasser behandle hendelsen uten å knytte representant. Dette er den foretrukne metoden for behandling av hendelsen i en avledet klasse."
  syntax:
    content: protected virtual void OnFiltering (System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs&quot;> </xref> som inneholder Hendelsesdata."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnInserted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hever den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Inserted&quot;> </xref> hendelsen etter den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objektet er fullført en insert-operasjonen."
  remarks: "Opprettet en hendelse aktiverer hendelsesbehandlingen via en representant. Hvis du vil ha mer informasjon, se [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnInserted kan også avledede klasser behandle hendelsen uten å knytte representant. Dette er den foretrukne metoden for behandling av hendelsen i en avledet klasse."
  syntax:
    content: protected virtual void OnInserted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref> som inneholder hendelsesdataene."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  id: OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnInserting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hever den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Inserting&quot;> </xref> hendelsen før den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objektet prøver en insert-operasjonen."
  remarks: "Den <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>-metoden, bare hvis metoden som er identifisert for å utføre Dataoperasjonen ikke `static` (`Shared` i Visual Basic).</xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>       Opprettet en hendelse aktiverer hendelsesbehandlingen via en representant. Hvis du vil ha mer informasjon, se [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnInserting kan også avledede klasser behandle hendelsen uten å knytte representant. Dette er den foretrukne metoden for behandling av hendelsen i en avledet klasse."
  syntax:
    content: protected virtual void OnInserting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&quot;> </xref> som inneholder Hendelsesdata."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  id: OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnObjectCreated(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hever den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated&quot;> </xref> hendelsen etter den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> oppretter en forekomst av objektet som er identifisert av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>egenskapen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>"
  remarks: "Metoden OnObjectCreated kalles, bare hvis metoden som er identifisert for å utføre Dataoperasjonen ikke `static` (`Shared` i Visual Basic).       Opprettet en hendelse aktiverer hendelsesbehandlingen via en representant. Hvis du vil ha mer informasjon, kan du se <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>       Metoden OnObjectCreated kan også avledede klasser behandle hendelsen uten å knytte representant. Dette er den foretrukne metoden for behandling av hendelsen i en avledet klasse."
  syntax:
    content: protected virtual void OnObjectCreated (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref> som inneholder hendelsesdataene."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  id: OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnObjectCreating(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hever den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating&quot;> </xref> hendelsen før den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objektet oppretter en forekomst av en business-objektet til å utføre en operasjon for dataene."
  remarks: "Opprettet en hendelse aktiverer hendelsesbehandlingen via en representant. Hvis du vil ha mer informasjon, se [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnObjectCreating kan også avledede klasser behandle hendelsen uten å knytte representant. Dette er den foretrukne metoden for behandling av hendelsen i en avledet klasse."
  syntax:
    content: protected virtual void OnObjectCreating (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref> som inneholder Hendelsesdata."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  id: OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hever den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing&quot;> </xref> hendelsen før den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objektet forkastes en forekomstopprettet type."
  remarks: "OnObjectDisposing kalles når forekomst av et objekt som ble opprettet for å utføre en Dataoperasjonen forkastes. Den `Dispose` -metoden, bare hvis typen som er identifisert av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>egenskapen implementerer den <xref:System.IDisposable>grensesnittet.</xref:System.IDisposable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>       Opprettet en hendelse aktiverer hendelsesbehandlingen via en representant. Hvis du vil ha mer informasjon, se [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnObjectDisposing kan også avledede klasser behandle hendelsen uten å knytte representant. Dette er den foretrukne metoden for behandling av hendelsen i en avledet klasse."
  syntax:
    content: protected virtual void OnObjectDisposing (System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs&quot;> </xref> som inneholder hendelsesdataene."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnSelected(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hever den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Selected&quot;> </xref> hendelsen etter den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objektet er fullført en operasjon for henting av data."
  remarks: "Opprettet en hendelse aktiverer hendelsesbehandlingen via en representant. Hvis du vil ha mer informasjon, se [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnSelected kan også avledede klasser behandle hendelsen uten å knytte representant. Dette er den foretrukne metoden for behandling av hendelsen i en avledet klasse."
  syntax:
    content: protected virtual void OnSelected (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref> som inneholder hendelsesdataene."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  id: OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnSelecting(ObjectDataSourceSelectingEventArgs)
  nameWithType: ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hever den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Selecting&quot;> </xref> hendelsen før den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objektet prøver en operasjon for henting av data."
  remarks: "Opprettet en hendelse aktiverer hendelsesbehandlingen via en representant. Hvis du vil ha mer informasjon, se [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnSelecting kan også avledede klasser behandle hendelsen uten å knytte representant. Dette er den foretrukne metoden for behandling av hendelsen i en avledet klasse."
  syntax:
    content: protected virtual void OnSelecting (System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs&quot;> </xref> som inneholder Hendelsesdata."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnUpdated(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hever den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Updated&quot;> </xref> hendelsen etter den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objektet er fullført en oppdateringsoperasjon."
  remarks: "Opprettet en hendelse aktiverer hendelsesbehandlingen via en representant. Hvis du vil ha mer informasjon, se [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnUpdate kan også avledede klasser behandle hendelsen uten å knytte representant. Dette er den foretrukne metoden for behandling av hendelsen i en avledet klasse."
  syntax:
    content: protected virtual void OnUpdated (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref> som inneholder hendelsesdataene."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  id: OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnUpdating(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hever den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Updating&quot;> </xref> hendelsen før den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objektet prøver en oppdateringsoperasjon."
  remarks: "Opprettet en hendelse aktiverer hendelsesbehandlingen via en representant. Hvis du vil ha mer informasjon, se [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnUpdating kan også avledede klasser behandle hendelsen uten å knytte representant. Dette er den foretrukne metoden for behandling av hendelsen i en avledet klasse."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/csharp/5e0e1dac-16d8-4af3-b004-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/visualbasic/5e0e1dac-16d8-4af3-b004-_1.aspx)]"
  syntax:
    content: protected virtual void OnUpdating (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&quot;> </xref> som inneholder Hendelsesdata."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  id: ParsingCulture
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ParsingCulture
  nameWithType: ObjectDataSourceView.ParsingCulture
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter en eller angir en verdi som angir hvilken kulturinformasjon brukes under konvertering av strengverdier til faktiske Egenskapstyper for å bygge opp et objekt av typen som er angitt av <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName*>.</xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName*>"
  syntax:
    content: public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }
    return:
      type: System.Web.UI.WebControls.ParsingCulture
      description: "Kulturinformasjon. Standardverdien er <xref href=&quot;System.Web.UI.WebControls.ParsingCulture&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: ObjectDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lagrer endringene visningsstatusen for den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objektet siden når siden ble posteres tilbake til serveren."
  remarks: "Metoden SaveViewState brukes hovedsakelig av kontrollutviklere.       Visningsstatusen er summen av verdiene i en serverkontroll egenskaper. Disse verdiene plasseres automatisk i <xref:System.Web.UI.Control.ViewState%2A>egenskapen for serverkontroll, som er en forekomst av <xref:System.Web.UI.StateBag>klassen.</xref:System.Web.UI.StateBag> </xref:System.Web.UI.Control.ViewState%2A> Den <xref:System.Web.UI.Control.ViewState%2A>beholdes verdien til en strengobjektet etter lagre statuser fase av server kontrollen levetid.</xref:System.Web.UI.Control.ViewState%2A>       Når visningsstatusen lagres, Vis tilstand innhold returneres til klienten som en variabel som er lagret i HTML `Hidden` elementet. Når du skriver egendefinerte serverkontroller, du kan forbedre effektiviteten av overstyrer metoden SaveViewState og endring av `ViewState` -egenskapen for serverkontrollen. Hvis du vil ha mer informasjon, se [ASP.NET oversikt over tilstand](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "Objektet som inneholder endringer i den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> vise tilstand; ellers <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, hvis det er ingen visningsstatusen som er knyttet til objektet."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  id: Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Select(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Select(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter data fra objektet som er identifisert av den <> </> *> ved å kalle metoden som er identifisert av den <> </> *> egenskapen og sending av alle verdiene i den <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>samlingen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>"
  remarks: "Velg metodekall den <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>sending av `arguments` parameteren.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>"
  syntax:
    content: public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "En <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> brukes til forespørselen operasjoner i data utenfor grunnleggende datahenting."
    return:
      type: System.Collections.IEnumerable
      description: "En <xref:System.Collections.IEnumerable>liste over datarader.</xref:System.Collections.IEnumerable> Hvis du vil ha mer informasjon, kan du se <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Select*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <code> arguments </code> sendt til Velg metoden angi at datakilden må utføre noen ekstra arbeid under henting av data for å aktivere Bla eller sortering ved hjelp av de hentede dataene, men datakildekontrollen støtter ikke den forespurte funksjonen."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  id: SelectCountMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SelectCountMethod
  nameWithType: ObjectDataSourceView.SelectCountMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir navnet på metoden eller funksjonen som den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> kontrollen aktiverer for å hente en antall rader."
  remarks: "SelectCountMethod identifiserer en metoden for objektet som brukes til å hente en Totalt antall rader for å støtte datakilde Bla. Egenskapen SelectCountMethod evalueres, og bare hvis det <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>er satt til `true`.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> For informasjon om hvordan som Bla støttes av <xref:System.Web.UI.WebControls.ObjectDataSourceView>, kan du se <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView>       Verdien for SelectCountMethod er lagret i visningen tilstand."
  syntax:
    content: public string SelectCountMethod { get; set; }
    return:
      type: System.String
      description: "En streng som representerer navnet på metoden eller fungerer som den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> bruker til å hente en antall rader. Standarden er en tom streng (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selected
  id: Selected
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Selected
  nameWithType: ObjectDataSourceView.Selected
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Forekommer når en operasjon for henting av data er fullført."
  remarks: "Behandle valgte-hendelsen for å undersøke verdiene i en returverdi og returnere parametere, eller for å bestemme om det oppstod et unntaket etter en operasjon for henting av data er fullført. Verdien som returneres, utdataparametere og unntaksbehandling egenskaper er tilgjengelig fra den <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objektet som er forbundet med hendelsen.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       Du finner mer informasjon om behandling av hendelser [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  id: Selecting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Selecting
  nameWithType: ObjectDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Forekommer før en operasjon for henting av data."
  remarks: "Behandle Hvis du velger-hendelsen for å utføre initialisering av flere operasjoner som er spesifikke for programmet, for å validere verdiene i parametere, eller endre parameteren verdier før den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen utfører henting Dataoperasjonen.</xref:System.Web.UI.WebControls.ObjectDataSource> Parameterne er tilgjengelig som en <xref:System.Collections.IDictionary>samling som brukes av den <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>egenskapen som vises av den <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>objektet.</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       Du finner mer informasjon om behandling av hendelser [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  id: SelectMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SelectMethod
  nameWithType: ObjectDataSourceView.SelectMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir navnet på metoden eller funksjonen som den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> kontrollen aktiverer for å hente data."
  remarks: "Den angitte metoden kan ikke ha noen metodesignatur, men må returnere en av typene som er oppført i tabellen nedenfor i rekkefølgen for kontrollen som <xref:System.Web.UI.WebControls.ObjectDataSource>kalle den ble | Returner typen | Handlingen |   |-----------------|------------|   | <xref:System.Collections.IEnumerable>| <xref:System.Collections.IEnumerable>Er returnert av metoden <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |   | <xref:System.Data.DataTable>| En <xref:System.Data.DataView>er opprettet ved hjelp av <xref:System.Data.DataTable>og returnert av metoden <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |   | <xref:System.Data.DataSet>| Først <xref:System.Data.DataTable>av <xref:System.Data.DataSet>trekkes og en <xref:System.Data.DataView>opprettes og returnert av metoden <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |   | <xref:System.Object>| Objektet står i en én-elementet <xref:System.Collections.IEnumerable>og returnert av metoden <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |       Metoden som er identifisert av SelectMethod-egenskapen kan være en forekomst-metoden eller `static` (`Shared` i Visual Basic) metoden.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Object> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataView> </xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Collections.IEnumerable> </xref:System.Web.UI.WebControls.ObjectDataSource> Hvis det er en forekomst, business-objekt opprettes og ødelagt hver gang metoden SelectMethod kalles. Du kan behandle den <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>hendelsen til å fungere med business objektet før du kaller metoden angitt av egenskapen SelectMethod.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> Du kan også håndtere den <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>hendelsen oppstår når du kaller metoden angitt av egenskapen SelectMethod.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> (`Dispose` kalles hvis business objektet implementerer den <xref:System.IDisposable>grensesnittet.)</xref:System.IDisposable> Hvis metoden en `static` (`Shared` i Visual Basic)-metoden, business-objektet er aldri opprettet, og du kan ikke behandle disse hendelsene.       Hvis bedriften objekt som den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen fungerer med implementerer mer enn én måte eller funksjon med samme navn (metoden overlastingene), datakildekontrollen prøver å aktivere det riktige i henhold til et sett med vilkår, inkludert parameterne i det <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>samlingen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Hvis parameterne i det <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>samling samsvarer ikke med signaturen til metoden som er angitt av egenskapen SelectMethod, datakilden oppstår det et unntak.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>       Hvis du vil ha mer informasjon, kan du se <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how a <xref:System.Web.UI.WebControls.GridView> control can display data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control on a Web Forms page. The <xref:System.Web.UI.WebControls.ObjectDataSource> identifies a partially or fully qualified class name with its <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> property and a method that is called to retrieve data with its SelectMethod property. At run time, the object is created and the method is called using reflection. The <xref:System.Web.UI.WebControls.GridView> control enumerates through the <xref:System.Collections.IEnumerable> collection that is returned by the SelectMethod, and then displays the data.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_584_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_584_1.aspx)]"
  syntax:
    content: public string SelectMethod { get; set; }
    return:
      type: System.String
      description: "En streng som representerer navnet på metoden eller fungerer som den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> bruker til å hente data. Standarden er en tom streng (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  id: SelectParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SelectParameters
  nameWithType: ObjectDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter parameters-samlingen som inneholder parametere som brukes av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>metoden.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  remarks: "Navn og typer for parameterne som finnes i samlingen SelectParameters må samsvare med navn og typer for parameterne som er i den angitte av metoden den <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>egenskapen signatur.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> Når du arbeider med databundet kontroller som oppgi parametere, for eksempel <xref:System.Web.UI.WebControls.GridView>og <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen automatisk slår sammen parametere som er angitt i samlingen med disse parameterne som tilbys av kontrollen databindingselementer.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Hvis du vil ha mer informasjon, kan du se <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to retrieve a single data record using an <xref:System.Web.UI.WebControls.ObjectDataSource> control, and then display the data record in a <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.ObjectDataSource> retrieves a specific employee record by calling the `GetEmployee` method of the `EmployeeLogic` class. The `GetEmployee` method requires an employee ID parameter. The <xref:System.Web.UI.WebControls.ObjectDataSource> control uses a <xref:System.Web.UI.WebControls.QueryStringParameter> object in its SelectParameters collection to pass an ID to the `GetEmployee` method.  \n  \n To view the example implementation of the `EmployeeLogic` class and the `GetEmployee` method, see <xref:System.Web.UI.WebControls.ObjectDataSource>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_3#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_297_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_297_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "En <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> som inneholder parametere som brukes av metoden som er angitt av den <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>egenskapen.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  id: SortParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SortParameterName
  nameWithType: ObjectDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir navnet på data henting av metodeparameteren som brukes til å angi et sorteringsuttrykk for datakilden sortering kundestøtte."
  remarks: "Egenskapen SortParameterName brukes til å støtte sortering av data-kilde. Når en <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>-egenskapen er angitt for den <xref:System.Web.UI.DataSourceSelectArguments>objekt og sendt til den <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>metoden, egenskapen SortParameterName identifiserer parameternavnet for metoden som er angitt av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>egenskapen for objektet som godtar sortering uttrykket verdien.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>       Verdien for SortParameterName er lagret i visningen tilstand."
  syntax:
    content: public string SortParameterName { get; set; }
    return:
      type: System.String
      description: "Navnet på metodeparameteren som brukes til å angi parameteren godtar denne sorteringen uttrykket verdien. Standarden er en tom streng (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  id: StartRowIndexParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSourceView.StartRowIndexParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir navnet på data henting av metodeparameteren som brukes til å angi heltallsindeks for den første posten til å hente resultater som er angitt for Bla støtte."
  remarks: "Egenskapen StartRowIndexParameterName må angis for å aktivere Bla. For informasjon om hvordan som Bla støttes av <xref:System.Web.UI.WebControls.ObjectDataSourceView>objekt, kan du se <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView>       Verdien for StartRowIndexParameterName er lagret i visningen tilstand."
  syntax:
    content: public string StartRowIndexParameterName { get; set; }
    return:
      type: System.String
      description: "Navnet på brukes til å angi den første posten for å hente business objektet metoden parameteren. Standarden er &quot;startRowIndex&quot;."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hvis du vil ha en beskrivelse for dette medlemmet kan du se <xref:System.Web.UI.IStateManager.IsTrackingViewState*>.</xref:System.Web.UI.IStateManager.IsTrackingViewState*>"
  remarks: "Dette medlemmet er implementering eksplisitt grensesnitt medlemmet. Den kan brukes bare når den <xref:System.Web.UI.WebControls.ObjectDataSourceView>forekomsten endres til den <xref:System.Web.UI.IStateManager>grensesnittet.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, hvis datakildevisningen er merket for å lagre tilstanden; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "En beskrivelse for dette medlemmet under &lt;xref:System.Web.UI.IStateManager.LoadViewState%2A?displayProperty=fullName&gt;."
  remarks: "Dette medlemmet er implementering eksplisitt grensesnitt medlemmet. Den kan brukes bare når den <xref:System.Web.UI.WebControls.ObjectDataSourceView>forekomsten endres til en <xref:System.Web.UI.IStateManager>grensesnittet.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: void IStateManager.LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Et objekt som representerer den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> tilstand for å gjenopprette."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "En beskrivelse for dette medlemmet under &lt;xref:System.Web.UI.IStateManager.SaveViewState%2A?displayProperty=fullName&gt;."
  remarks: "Dette medlemmet er implementering eksplisitt grensesnitt medlemmet. Den kan brukes bare når den <xref:System.Web.UI.WebControls.ObjectDataSourceView>forekomsten endres til en <xref:System.Web.UI.IStateManager>grensesnittet.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "Objektet som inneholder endringer i den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> vise tilstand; ellers, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "En beskrivelse for dette medlemmet under &lt;xref:System.Web.UI.IStateManager.TrackViewState%2A?displayProperty=fullName&gt;."
  remarks: "Dette medlemmet er implementering eksplisitt grensesnitt medlemmet. Den kan brukes bare når den <xref:System.Web.UI.WebControls.ObjectDataSourceView>forekomsten endres til en <xref:System.Web.UI.IStateManager>grensesnittet.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: ObjectDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gjør den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objekt for å spore endringer i visningsstatusen slik at endringene kan lagres i det <xref:System.Web.UI.Control.ViewState*>objektet for kontroll og faste på tvers av forespørsler for samme side.</xref:System.Web.UI.Control.ViewState*>"
  remarks: "Metoden TrackViewState brukes hovedsakelig av kontrollutviklere."
  syntax:
    content: protected virtual void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  id: TypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: TypeName
  nameWithType: ObjectDataSourceView.TypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir navnet på klassen som den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> kontrollere representerer."
  remarks: "Til å opprette en forekomst av objektet som den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen bindes til, kontroll bruker gjenspeiling til å laste inn typen som er angitt som typenavn ved kjøretid.</xref:System.Web.UI.WebControls.ObjectDataSource> Verdien for egenskapen TypeName kan derfor være en delvis kvalifiserte type for kode som er plassert i posisjon eller App_Code-katalog eller et fullstendig kvalifisert typenavn for kode som er registrert i den globale samlingsbufferen. Hvis du bruker den globale samlingsbufferen, må du legge til den riktige referansen til det `assemblies` -delen i Machine.config eller Web.config-filen for konfigurasjon."
  example:
  - "The following code example demonstrates how a <xref:System.Web.UI.WebControls.GridView> control can display data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control on a Web Forms page. The <xref:System.Web.UI.WebControls.ObjectDataSource> identifies a partially or fully qualified class name with its TypeName property and a method that is called to retrieve data with its <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property. At run time, the object is created and the method is called using reflection. The <xref:System.Web.UI.WebControls.GridView> control enumerates through the <xref:System.Collections.IEnumerable> collection that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> and displays the data.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_218_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_218_1.aspx)]"
  syntax:
    content: public string TypeName { get; set; }
    return:
      type: System.String
      description: "En delvis eller fullstendig kvalifisert Klassenavn som identifiserer for objektet som den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> representerer. Standarden er en tom streng."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.TypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Utfører en oppdateringsoperasjon ved å kalle metoden som er identifisert av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>egenskapen og bruker parametere som er angitt i den <code> keys </code>, <code> values </code>, eller <code> oldValues </code> samlinger.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  remarks: "Returner standardverdien er -1, som betyr at ukjent antall rader ble oppdatert. Hvis du en annen verdi, angir den <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>for den <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objekt av den <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>hendelsen.</xref:System.Web.UI.WebControls.ObjectDataSource.Updated> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> Antall rader som berørte vanligvis er returnert av den `Update` metode for business-objekt, og denne verdien er tilgjengelig fra den <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>for den <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>-parameteren for den <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>hendelsen.</xref:System.Web.UI.WebControls.ObjectDataSource.Updated> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>       Oppdateringen metodekall den <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A>metoden sending av `keys`, `values`, og `oldValues` parametere.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A>"
  syntax:
    content: public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>for nøkkelverdiene som brukes til å identifisere element for å oppdatere.</xref:System.Collections.IDictionary> Disse parameterne brukes med en metode som er angitt av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>til å utføre oppdateringen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> Hvis det er ingen parametere som er forbundet med metoden, kan du sende <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: values
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>med nye verdier skal brukes til datakilden.</xref:System.Collections.IDictionary> Disse parameterne brukes med en metode som er angitt av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>til å utføre databaseoperasjonen oppdateringen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> Hvis det er ingen parametere som er forbundet med metoden, kan du sende <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>som inneholder verdiene som ekstra uten nøkkel brukes til å samsvare med elementet i datakilden.</xref:System.Collections.IDictionary> Radverdiene er sendt til metoden delete bare hvis det <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>er satt til den <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> felt.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>"
    return:
      type: System.Int32
      description: "Antall rader oppdatert; Ellers, -1, hvis tallet ikke er kjent."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Update*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updated
  id: Updated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Updated
  nameWithType: ObjectDataSourceView.Updated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Forekommer når en <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>operasjonen er fullført.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>"
  remarks: "Behandle oppdatert-hendelsen for å undersøke verdiene i en returverdi og returnere parametere, eller for å bestemme om det oppstod et unntaket etter en <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>operasjonen er fullført.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> Verdien som returneres, utdataparametere og unntaksbehandling egenskaper er tilgjengelig fra den <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objektet som er forbundet med hendelsen.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       Du finner mer informasjon om behandling av hendelser [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  id: UpdateMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: UpdateMethod
  nameWithType: ObjectDataSourceView.UpdateMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir navnet på metoden eller funksjonen som den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objektet aktiverer for å oppdatere dataene."
  remarks: "Den <xref:System.Web.UI.WebControls.ObjectDataSourceView>objektet antar at metoden som er angitt av egenskapen UpdateMethod utfører oppdateringer én om gangen i stedet for i en bunke.</xref:System.Web.UI.WebControls.ObjectDataSourceView>       Metoden kan være en forekomst-metoden eller `static` (`Shared` i Visual Basic) metoden. Hvis det er en forekomst, business-objekt opprettes og ødelagt hver gang metoden som er angitt av egenskapen UpdateMethod kalles. Du kan behandle den <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>hendelsen til å fungere med business objektet før du kaller metoden angitt av egenskapen UpdateMethod.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> Du kan også håndtere den <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>hendelsen oppstår når metoden UpdateMethod kalles.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> (`Dispose` kalles, hvis business objektet implementerer den <xref:System.IDisposable>grensesnittet.)</xref:System.IDisposable> Hvis metoden en `static` (`Shared` i Visual Basic)-metoden, business-objektet er aldri opprettet, og du kan ikke behandle disse hendelsene.       Hvis bedriften objekt som den <xref:System.Web.UI.WebControls.ObjectDataSource>objektet fungerer med implementerer mer enn én måte eller funksjon med samme navn (metoden overlastingene), datakildekontrollen prøver å aktivere det riktige i henhold til et sett med vilkår, inkludert parameterne i det <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>samlingen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Hvis parameterne i det <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>samling samsvarer ikke med signaturen til metoden som er angitt av egenskapen UpdateMethod, datakilden oppstår det et unntak.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>       For mer informasjon, kan du se <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>       Verdien for UpdateMethod egenskapen er lagret i visningen tilstand."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_413_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_413_1.aspx)]"
  syntax:
    content: public string UpdateMethod { get; set; }
    return:
      type: System.String
      description: "En streng som representerer navnet på metoden eller fungerer som den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> bruker til å oppdatere dataene. Standarden er en tom streng (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  id: UpdateParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: UpdateParameters
  nameWithType: ObjectDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter parameters-samlingen som inneholder parametere som brukes av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>metoden.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  remarks: "Navn og typer for parameterne som finnes i samlingen UpdateParameters må samsvare med navn og typer for parameterne som er i den angitte av metoden den <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>egenskapen signatur.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> Parameternavnene påvirkes av de <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>egenskapen og bokstaver er.</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> Når du arbeider med databundet kontroller som oppgi parametere, for eksempel <xref:System.Web.UI.WebControls.GridView>og <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen automatisk slår sammen parametere som er angitt i samlingen med disse parameterne som tilbys av kontrollen databindingselementer.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> For mer informasjon, kan du se <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the UpdateParameters collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_182_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_182_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "En <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> som inneholder parametere som brukes av den <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>egenskapen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updating
  id: Updating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Updating
  nameWithType: ObjectDataSourceView.Updating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Forekommer før en <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>operasjonen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>"
  remarks: "Behandle oppdatering-hendelsen for å utføre initialisering av flere operasjoner som er spesifikke for programmet, for å validere verdiene i parametere, eller endre parameteren verdier før den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen utfører den <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>operasjonen.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Parameterne er tilgjengelig som en <xref:System.Collections.IDictionary>samling, tilgang til den <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>egenskapen som vises av den <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>objektet.</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       Du finner mer informasjon om behandling av hendelser [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_93_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_93_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataSourceView
  isExternal: false
  name: System.Web.UI.DataSourceView
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  nameWithType: ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
- uid: System.Web.UI.WebControls.ObjectDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSource
  nameWithType: ObjectDataSource
  fullName: System.Web.UI.WebControls.ObjectDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: ObjectDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: ObjectDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: ObjectDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: ObjectDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: ObjectDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: ObjectDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: ObjectDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
- uid: System.Web.UI.ConflictOptions
  parent: System.Web.UI
  isExternal: false
  name: ConflictOptions
  nameWithType: ConflictOptions
  fullName: System.Web.UI.ConflictOptions
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSourceView.ConvertNullToDBNull
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DataObjectTypeName
  nameWithType: ObjectDataSourceView.DataObjectTypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Delete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Delete(IDictionary,IDictionary)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Deleted
  nameWithType: ObjectDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceStatusEventHandler
  nameWithType: ObjectDataSourceStatusEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteMethod
  nameWithType: ObjectDataSourceView.DeleteMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: ObjectDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.ParameterCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParameterCollection
  nameWithType: ParameterCollection
  fullName: System.Web.UI.WebControls.ParameterCollection
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Deleting
  nameWithType: ObjectDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceMethodEventHandler
  nameWithType: ObjectDataSourceMethodEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: EnablePaging
  nameWithType: ObjectDataSourceView.EnablePaging
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteInsert(IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: ObjectDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Filtering
  nameWithType: ObjectDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
- uid: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceFilteringEventHandler
  nameWithType: ObjectDataSourceFilteringEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: ObjectDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Insert(IDictionary)
  nameWithType: ObjectDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Insert(IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Inserted
  nameWithType: ObjectDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Inserting
  nameWithType: ObjectDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertMethod
  nameWithType: ObjectDataSourceView.InsertMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: ObjectDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: ObjectDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: ObjectDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSourceView.MaximumRowsParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectCreated
  nameWithType: ObjectDataSourceView.ObjectCreated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
- uid: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceObjectEventHandler
  nameWithType: ObjectDataSourceObjectEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectCreating
  nameWithType: ObjectDataSourceView.ObjectCreating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectDisposing
  nameWithType: ObjectDataSourceView.ObjectDisposing
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceDisposingEventHandler
  nameWithType: ObjectDataSourceDisposingEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceStatusEventArgs
  nameWithType: ObjectDataSourceStatusEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceMethodEventArgs
  nameWithType: ObjectDataSourceMethodEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnFiltering(ObjectDataSourceFilteringEventArgs)
  nameWithType: ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceFilteringEventArgs
  nameWithType: ObjectDataSourceFilteringEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreated(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceEventArgs
  nameWithType: ObjectDataSourceEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreating(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceDisposingEventArgs
  nameWithType: ObjectDataSourceDisposingEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelected(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelecting(ObjectDataSourceSelectingEventArgs)
  nameWithType: ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceSelectingEventArgs
  nameWithType: ObjectDataSourceSelectingEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdated(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdating(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ParsingCulture
  nameWithType: ObjectDataSourceView.ParsingCulture
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
- uid: System.Web.UI.WebControls.ParsingCulture
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParsingCulture
  nameWithType: ParsingCulture
  fullName: System.Web.UI.WebControls.ParsingCulture
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SaveViewState()
  nameWithType: ObjectDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Select(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Select(DataSourceSelectArguments)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectCountMethod
  nameWithType: ObjectDataSourceView.SelectCountMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selected
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Selected
  nameWithType: ObjectDataSourceView.Selected
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selected
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Selecting
  nameWithType: ObjectDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
- uid: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceSelectingEventHandler
  nameWithType: ObjectDataSourceSelectingEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectMethod
  nameWithType: ObjectDataSourceView.SelectMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: ObjectDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: ObjectDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSourceView.StartRowIndexParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TrackViewState()
  nameWithType: ObjectDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TypeName
  nameWithType: ObjectDataSourceView.TypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Updated
  nameWithType: ObjectDataSourceView.Updated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updated
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateMethod
  nameWithType: ObjectDataSourceView.UpdateMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: ObjectDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Updating
  nameWithType: ObjectDataSourceView.Updating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.#ctor*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectDataSourceView
  nameWithType: ObjectDataSourceView.ObjectDataSourceView
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: ObjectDataSourceView.CanDelete
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: ObjectDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanPage*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: ObjectDataSourceView.CanPage
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: ObjectDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanSort*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: ObjectDataSourceView.CanSort
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: ObjectDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: ObjectDataSourceView.ConflictDetection
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSourceView.ConvertNullToDBNull
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DataObjectTypeName
  nameWithType: ObjectDataSourceView.DataObjectTypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Delete*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Delete
  nameWithType: ObjectDataSourceView.Delete
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteMethod
  nameWithType: ObjectDataSourceView.DeleteMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: ObjectDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: EnablePaging
  nameWithType: ObjectDataSourceView.EnablePaging
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteDelete
  nameWithType: ObjectDataSourceView.ExecuteDelete
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteInsert
  nameWithType: ObjectDataSourceView.ExecuteInsert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteSelect
  nameWithType: ObjectDataSourceView.ExecuteSelect
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteUpdate
  nameWithType: ObjectDataSourceView.ExecuteUpdate
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: ObjectDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: ObjectDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Insert*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Insert
  nameWithType: ObjectDataSourceView.Insert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertMethod
  nameWithType: ObjectDataSourceView.InsertMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: ObjectDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: ObjectDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: LoadViewState
  nameWithType: ObjectDataSourceView.LoadViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSourceView.MaximumRowsParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleted
  nameWithType: ObjectDataSourceView.OnDeleted
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleting
  nameWithType: ObjectDataSourceView.OnDeleting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnFiltering
  nameWithType: ObjectDataSourceView.OnFiltering
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserted
  nameWithType: ObjectDataSourceView.OnInserted
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserting
  nameWithType: ObjectDataSourceView.OnInserting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreated
  nameWithType: ObjectDataSourceView.OnObjectCreated
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreating
  nameWithType: ObjectDataSourceView.OnObjectCreating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectDisposing
  nameWithType: ObjectDataSourceView.OnObjectDisposing
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelected
  nameWithType: ObjectDataSourceView.OnSelected
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelecting
  nameWithType: ObjectDataSourceView.OnSelecting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdated
  nameWithType: ObjectDataSourceView.OnUpdated
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdating
  nameWithType: ObjectDataSourceView.OnUpdating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ParsingCulture
  nameWithType: ObjectDataSourceView.ParsingCulture
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SaveViewState
  nameWithType: ObjectDataSourceView.SaveViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Select*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Select
  nameWithType: ObjectDataSourceView.Select
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectCountMethod
  nameWithType: ObjectDataSourceView.SelectCountMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectMethod
  nameWithType: ObjectDataSourceView.SelectMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: ObjectDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: ObjectDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSourceView.StartRowIndexParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TrackViewState
  nameWithType: ObjectDataSourceView.TrackViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TypeName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TypeName
  nameWithType: ObjectDataSourceView.TypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Update*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Update
  nameWithType: ObjectDataSourceView.Update
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateMethod
  nameWithType: ObjectDataSourceView.UpdateMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: ObjectDataSourceView.UpdateParameters
