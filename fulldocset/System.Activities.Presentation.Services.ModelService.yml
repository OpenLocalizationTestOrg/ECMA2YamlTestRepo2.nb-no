### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Services.ModelService
  id: ModelService
  children:
  - System.Activities.Presentation.Services.ModelService.#ctor
  - System.Activities.Presentation.Services.ModelService.CreateItem(System.Object)
  - System.Activities.Presentation.Services.ModelService.CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])
  - System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(System.Type,System.String)
  - System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})
  - System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)
  - System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String)
  - System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)
  - System.Activities.Presentation.Services.ModelService.ModelChanged
  - System.Activities.Presentation.Services.ModelService.Root
  langs:
  - csharp
  name: ModelService
  nameWithType: ModelService
  fullName: System.Activities.Presentation.Services.ModelService
  type: Class
  summary: "Denne klassen er det primære inngangspunktet designer bruker til å kommunisere med modellen."
  remarks: "Tjenesten har en deling mellom offentlige og beskyttede metoder som du må implementere når du oppretter en avledet klasse. Offentlig metodene er kalles av alle. Metodene som er beskyttet startes av modellen."
  example:
  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'
  syntax:
    content: public abstract class ModelService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: ModelService()
  nameWithType: ModelService.ModelService()
  fullName: System.Activities.Presentation.Services.ModelService.ModelService()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "Oppretter en ny <xref href=&quot;System.Activities.Presentation.Services.ModelService&quot;> </xref>."
  syntax:
    content: protected ModelService ();
    parameters: []
  overload: System.Activities.Presentation.Services.ModelService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.CreateItem(System.Object)
  id: CreateItem(System.Object)
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: CreateItem(Object)
  nameWithType: ModelService.CreateItem(Object)
  fullName: System.Activities.Presentation.Services.ModelService.CreateItem(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "Tar en eksisterende forekomst og oppretter en modellelementet som en dyp Klon for forekomsten."
  syntax:
    content: protected abstract System.Activities.Presentation.Model.ModelItem CreateItem (object item);
    parameters:
    - id: item
      type: System.Object
      description: "Elementet klone og brytes."
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Returnerer en nyopprettede <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> som en kopi av det eksisterende elementet."
  overload: System.Activities.Presentation.Services.ModelService.CreateItem*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])
  id: CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: CreateItem(Type,CreateOptions,Object[])
  nameWithType: ModelService.CreateItem(Type,CreateOptions,Object[])
  fullName: System.Activities.Presentation.Services.ModelService.CreateItem(Type,CreateOptions,Object[])
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "Oppretter en <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> for en gitt type. Denne metoden kalles av <xref href=&quot;System.Activities.Presentation.Model.ModelFactory&quot;> </xref> når brukeren vil opprette et nytt element."
  syntax:
    content: protected abstract System.Activities.Presentation.Model.ModelItem CreateItem (Type itemType, System.Activities.Presentation.Model.CreateOptions options, object[] arguments);
    parameters:
    - id: itemType
      type: System.Type
      description: "Elementtypen til å opprette."
    - id: options
      type: System.Activities.Presentation.Model.CreateOptions
      description: "Alternativer for oppretting av. Du kan angi om du ønsker å initialisere standardverdier for et element."
    - id: arguments
      type: System.Object[]
      description: "En matrise med argumenter for konstruktøren for elementet."
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Returnerer den nyopprettede <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref>."
  overload: System.Activities.Presentation.Services.ModelService.CreateItem*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(System.Type,System.String)
  id: CreateStaticMemberItem(System.Type,System.String)
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: CreateStaticMemberItem(Type,String)
  nameWithType: ModelService.CreateStaticMemberItem(Type,String)
  fullName: System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(Type,String)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "Oppretter en ny modellelementet som representerer verdien av et statisk medlem av den angitte klassen."
  remarks: "For eksempel for å legge til en referanse til `Brushes.Red` til modellen, kan du kalle denne metoden med `typeof(Brushes)` og strengen &quot;Red&quot; som parameterne. Dette vil være serialisert i XAML som `{x:Static Brushes.Red}`."
  syntax:
    content: protected abstract System.Activities.Presentation.Model.ModelItem CreateStaticMemberItem (Type type, string memberName);
    parameters:
    - id: type
      type: System.Type
      description: "Typen som inneholder det statisk medlemmet som det refereres til."
    - id: memberName
      type: System.String
      description: "Navnet på statisk medlem som det refereres til."
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Returns <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>."
  overload: System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})
  id: Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: Find(ModelItem,Predicate<Type>)
  nameWithType: ModelService.Find(ModelItem,Predicate<Type>)
  fullName: System.Activities.Presentation.Services.ModelService.Find(ModelItem,Predicate<Type>)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "Søker etter tilsvarende modellelementer gitt utgangspunkt å se fra."
  remarks: "Alle hjelper er rekursivt."
  syntax:
    content: public abstract System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem> Find (System.Activities.Presentation.Model.ModelItem startingItem, Predicate<Type> match);
    parameters:
    - id: startingItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "Den <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> som søket skal starte. Elementer over dette elementet vil bli ignorert. Dette elementet og elementer under den i hierarkiet, vil bli inkludert i søket. Hvis denne verdien er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, <xref:System.Activities.Presentation.Services.ModelService.Root*>brukes i stedet.</xref:System.Activities.Presentation.Services.ModelService.Root*>"
    - id: match
      type: System.Predicate{System.Type}
      description: "Et predikat som tillater mer kompleks type samsvarende som skal brukes. Denne metoden liste alle elementer i det angitte overordnede omfanget som samsvarer med predikatet."
    return:
      type: System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem}
      description: "Returnerer en &lt;xref:System.Collections.Generic.IEnumerable%601&gt; som inneholder alle modellelementer som samsvarer med spørringen."
  overload: System.Activities.Presentation.Services.ModelService.Find*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>match</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)
  id: Find(System.Activities.Presentation.Model.ModelItem,System.Type)
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: Find(ModelItem,Type)
  nameWithType: ModelService.Find(ModelItem,Type)
  fullName: System.Activities.Presentation.Services.ModelService.Find(ModelItem,Type)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "Søker etter tilsvarende modellelementer gitt utgangspunkt å se fra."
  remarks: "Alle hjelper er rekursivt."
  syntax:
    content: public abstract System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem> Find (System.Activities.Presentation.Model.ModelItem startingItem, Type type);
    parameters:
    - id: startingItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "Den <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> som søket skal starte. Elementer over dette elementet vil bli ignorert. Dette elementet og elementer under den i hierarkiet, vil bli inkludert i søket. Hvis denne verdien er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, <xref:System.Activities.Presentation.Services.ModelService.Root*>brukes i stedet.</xref:System.Activities.Presentation.Services.ModelService.Root*>"
    - id: type
      type: System.Type
      description: "Den <xref:System.Type>for objektet til å finne.</xref:System.Type> Denne metoden liste alle elementer i det angitte overordnede omfanget av den forespurte typen."
    return:
      type: System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem}
      description: "Returnerer en &lt;xref:System.Collections.Generic.IEnumerable%601&gt; som inneholder alle modellelementer som samsvarer med spørringen."
  overload: System.Activities.Presentation.Services.ModelService.Find*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String)
  id: FromName(System.Activities.Presentation.Model.ModelItem,System.String)
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: FromName(ModelItem,String)
  nameWithType: ModelService.FromName(ModelItem,String)
  fullName: System.Activities.Presentation.Services.ModelService.FromName(ModelItem,String)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "Finner den <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> i det angitte området med det angitte navnet."
  syntax:
    content: public System.Activities.Presentation.Model.ModelItem FromName (System.Activities.Presentation.Model.ModelItem scope, string name);
    parameters:
    - id: scope
      type: System.Activities.Presentation.Model.ModelItem
      description: "En valgfri området til å angi. Hvis området ikke er angitt, <xref:System.Activities.Presentation.Services.ModelService.Root*>brukes som et omfang.</xref:System.Activities.Presentation.Services.ModelService.Root*> Hvis omfanget som er angitt, nærmeste <xref:System.Windows.Markup.INameScope>i hierarkiet skal brukes til å finne elementet.</xref:System.Windows.Markup.INameScope>"
    - id: name
      type: System.String
      description: "Finner ikke navnet."
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Returnerer en <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> som samsvarer med <code> name </code>, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis ingen treff."
  overload: System.Activities.Presentation.Services.ModelService.FromName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)
  id: FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: FromName(ModelItem,String,StringComparison)
  nameWithType: ModelService.FromName(ModelItem,String,StringComparison)
  fullName: System.Activities.Presentation.Services.ModelService.FromName(ModelItem,String,StringComparison)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "Finner den <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> i det angitte området med det angitte navnet."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem FromName (System.Activities.Presentation.Model.ModelItem scope, string name, StringComparison comparison);
    parameters:
    - id: scope
      type: System.Activities.Presentation.Model.ModelItem
      description: "En valgfri området til å angi. Hvis området ikke er angitt, <xref:System.Activities.Presentation.Services.ModelService.Root*>brukes som et omfang.</xref:System.Activities.Presentation.Services.ModelService.Root*> Hvis omfanget som er angitt, nærmeste <xref:System.Windows.Markup.INameScope>i hierarkiet skal brukes til å finne elementet.</xref:System.Windows.Markup.INameScope>"
    - id: name
      type: System.String
      description: "Finner ikke navnet."
    - id: comparison
      type: System.StringComparison
      description: "Bestemmer hvordan navnet skal sammenlignes. Som standard brukes til å sammenligne med ordenstall."
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Returnerer en <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> som samsvarer med <code> name </code>, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis ingen treff."
  overload: System.Activities.Presentation.Services.ModelService.FromName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.ModelChanged
  id: ModelChanged
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: ModelChanged
  nameWithType: ModelService.ModelChanged
  fullName: System.Activities.Presentation.Services.ModelService.ModelChanged
  type: Event
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "Denne hendelsen oppstår når noe i modellen er endret."
  remarks: "Hendelsen argumenter brukes i til å finne hva som er endret."
  syntax:
    content: public abstract event EventHandler<System.Activities.Presentation.Services.ModelChangedEventArgs> ModelChanged;
    return:
      type: System.EventHandler{System.Activities.Presentation.Services.ModelChangedEventArgs}
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.Root
  id: Root
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: Root
  nameWithType: ModelService.Root
  fullName: System.Activities.Presentation.Services.ModelService.Root
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "Roten av objekthierarkiet."
  remarks: "For lineære butikker er roten det første objektet i butikken. Dette returnerer den øverste noden i treet for butikker som representerer et tre av objekter."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem Root { get; }
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Returnerer roten av modellen hierarki som en <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref>."
  overload: System.Activities.Presentation.Services.ModelService.Root*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Activities.Presentation.Services.ModelService.#ctor
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: ModelService()
  nameWithType: ModelService.ModelService()
  fullName: System.Activities.Presentation.Services.ModelService.ModelService()
- uid: System.Activities.Presentation.Services.ModelService.CreateItem(System.Object)
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: CreateItem(Object)
  nameWithType: ModelService.CreateItem(Object)
  fullName: System.Activities.Presentation.Services.ModelService.CreateItem(Object)
- uid: System.Activities.Presentation.Model.ModelItem
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelItem
  nameWithType: ModelItem
  fullName: System.Activities.Presentation.Model.ModelItem
- uid: System.Activities.Presentation.Services.ModelService.CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: CreateItem(Type,CreateOptions,Object[])
  nameWithType: ModelService.CreateItem(Type,CreateOptions,Object[])
  fullName: System.Activities.Presentation.Services.ModelService.CreateItem(Type,CreateOptions,Object[])
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Presentation.Model.CreateOptions
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: CreateOptions
  nameWithType: CreateOptions
  fullName: System.Activities.Presentation.Model.CreateOptions
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(System.Type,System.String)
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: CreateStaticMemberItem(Type,String)
  nameWithType: ModelService.CreateStaticMemberItem(Type,String)
  fullName: System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(Type,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: Find(ModelItem,Predicate<Type>)
  nameWithType: ModelService.Find(ModelItem,Predicate<Type>)
  fullName: System.Activities.Presentation.Services.ModelService.Find(ModelItem,Predicate<Type>)
- uid: System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ModelItem>
  nameWithType: IEnumerable<ModelItem>
  fullName: System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Activities.Presentation.Model.ModelItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.Model.ModelItem
    name: ModelItem
    nameWithType: ModelItem
    fullName: ModelItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Predicate{System.Type}
  parent: System
  isExternal: true
  name: Predicate<Type>
  nameWithType: Predicate<Type>
  fullName: System.Predicate<System.Type>
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: Predicate<System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: Find(ModelItem,Type)
  nameWithType: ModelService.Find(ModelItem,Type)
  fullName: System.Activities.Presentation.Services.ModelService.Find(ModelItem,Type)
- uid: System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String)
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: FromName(ModelItem,String)
  nameWithType: ModelService.FromName(ModelItem,String)
  fullName: System.Activities.Presentation.Services.ModelService.FromName(ModelItem,String)
- uid: System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: FromName(ModelItem,String,StringComparison)
  nameWithType: ModelService.FromName(ModelItem,String,StringComparison)
  fullName: System.Activities.Presentation.Services.ModelService.FromName(ModelItem,String,StringComparison)
- uid: System.StringComparison
  parent: System
  isExternal: true
  name: StringComparison
  nameWithType: StringComparison
  fullName: System.StringComparison
- uid: System.Activities.Presentation.Services.ModelService.ModelChanged
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: ModelChanged
  nameWithType: ModelService.ModelChanged
  fullName: System.Activities.Presentation.Services.ModelService.ModelChanged
- uid: System.EventHandler{System.Activities.Presentation.Services.ModelChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ModelChangedEventArgs>
  nameWithType: EventHandler<ModelChangedEventArgs>
  fullName: System.EventHandler<System.Activities.Presentation.Services.ModelChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Activities.Presentation.Services.ModelChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.Services.ModelChangedEventArgs
    name: ModelChangedEventArgs
    nameWithType: ModelChangedEventArgs
    fullName: ModelChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.Services.ModelService.Root
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: Root
  nameWithType: ModelService.Root
  fullName: System.Activities.Presentation.Services.ModelService.Root
- uid: System.Activities.Presentation.Services.ModelService.#ctor*
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: ModelService
  nameWithType: ModelService.ModelService
- uid: System.Activities.Presentation.Services.ModelService.CreateItem*
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: CreateItem
  nameWithType: ModelService.CreateItem
- uid: System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem*
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: CreateStaticMemberItem
  nameWithType: ModelService.CreateStaticMemberItem
- uid: System.Activities.Presentation.Services.ModelService.Find*
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: Find
  nameWithType: ModelService.Find
- uid: System.Activities.Presentation.Services.ModelService.FromName*
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: FromName
  nameWithType: ModelService.FromName
- uid: System.Activities.Presentation.Services.ModelService.Root*
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: Root
  nameWithType: ModelService.Root
