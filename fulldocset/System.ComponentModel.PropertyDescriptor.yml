### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.PropertyDescriptor
  id: PropertyDescriptor
  children:
  - System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  - System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  - System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])
  - System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)
  - System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)
  - System.ComponentModel.PropertyDescriptor.ComponentType
  - System.ComponentModel.PropertyDescriptor.Converter
  - System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)
  - System.ComponentModel.PropertyDescriptor.Equals(System.Object)
  - System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)
  - System.ComponentModel.PropertyDescriptor.GetChildProperties
  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])
  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)
  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])
  - System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)
  - System.ComponentModel.PropertyDescriptor.GetHashCode
  - System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)
  - System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)
  - System.ComponentModel.PropertyDescriptor.GetValue(System.Object)
  - System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)
  - System.ComponentModel.PropertyDescriptor.IsLocalizable
  - System.ComponentModel.PropertyDescriptor.IsReadOnly
  - System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)
  - System.ComponentModel.PropertyDescriptor.PropertyType
  - System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)
  - System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)
  - System.ComponentModel.PropertyDescriptor.SerializationVisibility
  - System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)
  - System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)
  - System.ComponentModel.PropertyDescriptor.SupportsChangeEvents
  langs:
  - csharp
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
  type: Class
  summary: "Inneholder en abstrakt av en egenskap for en klasse."
  remarks: "En beskrivelse av en egenskap består av et navn, attributtene, component-klassen som er tilknyttet egenskapen og typen for egenskapen.       PropertyDescriptor gir følgende egenskaper og metoder:- <xref:System.ComponentModel.PropertyDescriptor.Converter%2A>inneholder den <xref:System.ComponentModel.TypeConverter>for denne egenskapen.</xref:System.ComponentModel.TypeConverter> </xref:System.ComponentModel.PropertyDescriptor.Converter%2A>      - <xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A>angir om denne egenskapen skal lokaliseres.</xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A>      - <xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A>returnerer et redigeringsprogram for den angitte typen.</xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A>       PropertyDescriptor gir deg også følgende `abstract` egenskaper og metoder:- <xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A>inneholder komponenttypen denne egenskapen er bundet til.</xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A>      - <xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A>angir om denne egenskapen er skrivebeskyttet.</xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A>      - <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A>henter av egenskapen.</xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A>      - <xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A>angir om tilbakestilling av komponenten endrer verdien for komponenten.</xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A>      - <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A>returnerer gjeldende verdi for egenskapen på en komponent.</xref:System.ComponentModel.PropertyDescriptor.GetValue%2A>      - <xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A>tilbakestiller verdien for denne egenskapen for komponenten.</xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A>      - <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A>angir verdien for komponenten til en annen verdi.</xref:System.ComponentModel.PropertyDescriptor.SetValue%2A>      - <xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A>angir om verdien for denne egenskapen må være fast.</xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A>       Vanligvis av `abstract` medlemmer implementeres via gjenspeiling. Hvis du vil ha mer informasjon om gjenspeiling, kan du se emnene i [gjenspeiling](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example is built upon the example in the <xref:System.ComponentModel.PropertyDescriptorCollection> class. It prints the information (category, description, display name) of the text of a button in a text box. It assumes that `button1` and `textbox1` have been instantiated on a form.  \n  \n [!code-cpp[PropertyDescriptor#1](~/add/codesnippet/cpp/t-system.componentmodel._4_1.cpp)]\n [!code-vb[PropertyDescriptor#1](~/add/codesnippet/visualbasic/t-system.componentmodel._4_1.vb)]\n [!code-cs[PropertyDescriptor#1](~/add/codesnippet/csharp/t-system.componentmodel._4_1.cs)]  \n  \n The following code example shows how to implement a custom property descriptor that provides a read-only wrapper around a property. The `SerializeReadOnlyPropertyDescriptor` is used in a custom designer to provide a read-only property descriptor for the control's <xref:System.Windows.Forms.Control.Size%2A> property.  \n  \n [!code-cs[System.ComponentModel.PropertyDescriptor#1](~/add/codesnippet/csharp/System.ComponentModel.PropertyDescriptor/SerializeReadOnlyPropertyDescriptor.cs#1)]\n [!code-vb[System.ComponentModel.PropertyDescriptor#1](~/add/codesnippet/visualbasic/ReadOnlyPropertyDescriptor/SerializeReadOnlyPropertyDescriptor.vb#1)]  \n  \n The following code examples show how to use the The `SerializeReadOnlyPropertyDescriptor` in a custom designer.  \n  \n [!code-cs[System.ComponentModel.PropertyDescriptor#10](~/add/codesnippet/csharp/System.ComponentModel.PropertyDescriptor/DemoControlDesigner.cs#10)]\n [!code-vb[System.ComponentModel.PropertyDescriptor#10](~/add/codesnippet/visualbasic/ReadOnlyPropertyDescriptor/DemoControlDesigner.vb#10)]  \n[!code-vb[System.ComponentModel.PropertyDescriptor#100](~/add/codesnippet/visualbasic/ReadOnlyPropertyDescriptor/DemoControl.vb#100)]\n[!code-cs[System.ComponentModel.PropertyDescriptor#100](~/add/codesnippet/csharp/System.ComponentModel.PropertyDescriptor/DemoControl.cs#100)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class PropertyDescriptor : System.ComponentModel.MemberDescriptor
  inheritance:
  - System.Object
  - System.ComponentModel.MemberDescriptor
  implements: []
  inheritedMembers:
  - System.ComponentModel.MemberDescriptor.AttributeArray
  - System.ComponentModel.MemberDescriptor.Attributes
  - System.ComponentModel.MemberDescriptor.Category
  - System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  - System.ComponentModel.MemberDescriptor.Description
  - System.ComponentModel.MemberDescriptor.DesignTimeOnly
  - System.ComponentModel.MemberDescriptor.DisplayName
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  - System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)
  - System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  - System.ComponentModel.MemberDescriptor.IsBrowsable
  - System.ComponentModel.MemberDescriptor.Name
  - System.ComponentModel.MemberDescriptor.NameHashCode
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  id: '#ctor(System.ComponentModel.MemberDescriptor)'
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: PropertyDescriptor(MemberDescriptor)
  nameWithType: PropertyDescriptor.PropertyDescriptor(MemberDescriptor)
  fullName: System.ComponentModel.PropertyDescriptor.PropertyDescriptor(MemberDescriptor)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> klassen med navn og attributter i den angitte <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref>."
  syntax:
    content: protected PropertyDescriptor (System.ComponentModel.MemberDescriptor descr);
    parameters:
    - id: descr
      type: System.ComponentModel.MemberDescriptor
      description: "En <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> som inneholder navnet på egenskapen og attributtene."
  overload: System.ComponentModel.PropertyDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  id: '#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])'
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: PropertyDescriptor(MemberDescriptor,Attribute[])
  nameWithType: PropertyDescriptor.PropertyDescriptor(MemberDescriptor,Attribute[])
  fullName: System.ComponentModel.PropertyDescriptor.PropertyDescriptor(MemberDescriptor,Attribute[])
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> klassen med navn i den angitte <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> og attributter i begge den <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> og <xref:System.Attribute>matrise.</xref:System.Attribute>"
  remarks: "Denne konstruktøren tilføyer attributtene i <xref:System.Attribute>matrisen slik at attributtene i <xref:System.ComponentModel.MemberDescriptor>.</xref:System.ComponentModel.MemberDescriptor> </xref:System.Attribute>"
  syntax:
    content: protected PropertyDescriptor (System.ComponentModel.MemberDescriptor descr, Attribute[] attrs);
    parameters:
    - id: descr
      type: System.ComponentModel.MemberDescriptor
      description: "En <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> som inneholder navnet på medlemmet og attributtene."
    - id: attrs
      type: System.Attribute[]
      description: "En <xref:System.Attribute>matrise som inneholder attributtene du vil knytte til egenskapen.</xref:System.Attribute>"
  overload: System.ComponentModel.PropertyDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])
  id: '#ctor(System.String,System.Attribute[])'
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: PropertyDescriptor(String,Attribute[])
  nameWithType: PropertyDescriptor.PropertyDescriptor(String,Attribute[])
  fullName: System.ComponentModel.PropertyDescriptor.PropertyDescriptor(String,Attribute[])
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> klassen med det angitte navnet og attributter."
  syntax:
    content: protected PropertyDescriptor (string name, Attribute[] attrs);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på egenskapen."
    - id: attrs
      type: System.Attribute[]
      description: "En matrise av typen <xref:System.Attribute>som inneholder egenskapsattributtene for.</xref:System.Attribute>"
  overload: System.ComponentModel.PropertyDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)
  id: AddValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: AddValueChanged(Object,EventHandler)
  nameWithType: PropertyDescriptor.AddValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.PropertyDescriptor.AddValueChanged(Object,EventHandler)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Aktiverer andre objekter som skal varsles når denne egenskapen endres."
  syntax:
    content: public virtual void AddValueChanged (object component, EventHandler handler);
    parameters:
    - id: component
      type: System.Object
      description: "Komponenten til å legge til et behandlingsprogram for."
    - id: handler
      type: System.EventHandler
      description: "Representanten skal legges til som en lytter."
  overload: System.ComponentModel.PropertyDescriptor.AddValueChanged*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>or <code>handler</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)
  id: CanResetValue(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: CanResetValue(Object)
  nameWithType: PropertyDescriptor.CanResetValue(Object)
  fullName: System.ComponentModel.PropertyDescriptor.CanResetValue(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Når overstyrt i en avledet klasse, returnerer om tilbakestilling av et objekt endrer verdien."
  remarks: "Denne metoden er vanligvis implementeres via gjenspeiling."
  syntax:
    content: public abstract bool CanResetValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Komponenten er å teste for tilbakestilling av funksjonen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis du tilbakestiller komponenten endres verdien; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.PropertyDescriptor.CanResetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.ComponentType
  id: ComponentType
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: ComponentType
  nameWithType: PropertyDescriptor.ComponentType
  fullName: System.ComponentModel.PropertyDescriptor.ComponentType
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Når overstyrt i en avledet klasse, henter komponenttypen denne egenskapen er bundet til."
  remarks: "Denne egenskapen er vanligvis implementert via gjenspeiling."
  syntax:
    content: public abstract Type ComponentType { get; }
    return:
      type: System.Type
      description: "En <xref:System.Type>som representerer komponenttypen denne egenskapen er bundet til.</xref:System.Type> Når den <> </> *> eller <> </> *> metoder startes, det angitte objektet kan være en forekomst av denne typen."
  overload: System.ComponentModel.PropertyDescriptor.ComponentType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.Converter
  id: Converter
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: Converter
  nameWithType: PropertyDescriptor.Converter
  fullName: System.ComponentModel.PropertyDescriptor.Converter
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Henter typen konverteringsprogram for denne egenskapen."
  syntax:
    content: public virtual System.ComponentModel.TypeConverter Converter { get; }
    return:
      type: System.ComponentModel.TypeConverter
      description: "En <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> som brukes til å konvertere det <xref:System.Type>for denne egenskapen.</xref:System.Type>"
  overload: System.ComponentModel.PropertyDescriptor.Converter*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)
  id: CreateInstance(System.Type)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: CreateInstance(Type)
  nameWithType: PropertyDescriptor.CreateInstance(Type)
  fullName: System.ComponentModel.PropertyDescriptor.CreateInstance(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Oppretter en forekomst av den angitte typen."
  remarks: "CreateInstance ser etter en konstruktør som bruker den angitte typen. Hvis det finnes en konstruktør, er hva slags egenskapen sendt.       Bruk denne metoden til å opprette versjoner av en komponent konverteringsprogrammer og inndata. Denne metoden gjør det mulig for en enkelt komponent som skal brukes for flere typer."
  syntax:
    content: protected object CreateInstance (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "En <xref:System.Type>som representerer typen til å opprette.</xref:System.Type>"
    return:
      type: System.Object
      description: "En ny forekomst av typen."
  overload: System.ComponentModel.PropertyDescriptor.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: PropertyDescriptor.Equals(Object)
  fullName: System.ComponentModel.PropertyDescriptor.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Sammenligner dette med et annet objekt for å se om de er like."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Objektet til å sammenligne dette <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis verdiene er like; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.PropertyDescriptor.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)
  id: FillAttributes(System.Collections.IList)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: FillAttributes(IList)
  nameWithType: PropertyDescriptor.FillAttributes(IList)
  fullName: System.ComponentModel.PropertyDescriptor.FillAttributes(IList)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Legger til attributtene for den <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> til den angitte listen over attributter i den overordnede klassen."
  remarks: "For dupliserte attributter beholdes den siste som legges til i listen."
  syntax:
    content: protected override void FillAttributes (System.Collections.IList attributeList);
    parameters:
    - id: attributeList
      type: System.Collections.IList
      description: "En <xref:System.Collections.IList>som viser attributtene i den overordnede klasse.</xref:System.Collections.IList> Dette er første gang, tom."
  overload: System.ComponentModel.PropertyDescriptor.FillAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties
  id: GetChildProperties
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: GetChildProperties()
  nameWithType: PropertyDescriptor.GetChildProperties()
  fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Tilbakestiller <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref>."
  remarks: "Denne metoden sender `null` for begge den `instance` parameteren og `filter` parameteren.       Egenskapene for den `instance` parameteren kan være forskjellig fra egenskapene til en klasse fordi beholderen kan legge til eller Fjern egenskaper hvis den `instance` parameteren er plassert.       Den `filter` parameter kan blande <xref:System.Type>og <xref:System.Attribute>objekter.</xref:System.Attribute> </xref:System.Type> Filtrering er definert av følgende regler: – en <xref:System.Type>objekt behandles som jokertegn; den samsvarer med en egenskap som har den <xref:System.Type>i et sett med attributter.</xref:System.Type> </xref:System.Type>      -Hvis en egenskap ikke har en <xref:System.Attribute>av den samme klassen egenskapen inkluderes ikke i den returnerte matrisen.</xref:System.Attribute>      -Hvis attributtet er en forekomst av <xref:System.Attribute>, egenskapen må være nøyaktig samsvar som skal inkluderes i den returnerte matrisen.</xref:System.Attribute>      -Hvis du angir en <xref:System.Attribute>og den er en standard for egenskapen, den skal inkluderes i den returnerte matrisen, selv om det finnes ingen forekomst av <xref:System.Attribute>i egenskapen.</xref:System.Attribute> </xref:System.Attribute>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetChildProperties ();
    parameters: []
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "En samling av egenskapen sikkerhetsbeskrivelse."
  overload: System.ComponentModel.PropertyDescriptor.GetChildProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])
  id: GetChildProperties(System.Attribute[])
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: GetChildProperties(Attribute[])
  nameWithType: PropertyDescriptor.GetChildProperties(Attribute[])
  fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties(Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerer en <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> ved hjelp av en angitt matrise for attributter som et filter."
  remarks: "Denne metoden sender `null` for den `instance` parameteren.       Egenskapene for den `instance` parameteren kan være forskjellig fra egenskapene til en klasse fordi området kan legge til eller Fjern egenskaper hvis den `instance` parameteren er plassert.       Den `filter` parameter kan blande <xref:System.Type>og <xref:System.Attribute>objekter.</xref:System.Attribute> </xref:System.Type> Filtrering er definert av følgende regler: – en <xref:System.Type>objekt behandles som jokertegn; den samsvarer med en egenskap som har den <xref:System.Type>i et sett med attributter.</xref:System.Type> </xref:System.Type>      -Hvis en egenskap ikke har en <xref:System.Attribute>av den samme klassen egenskapen inkluderes ikke i den returnerte matrisen.</xref:System.Attribute>      -Hvis attributtet er en forekomst av <xref:System.Attribute>, egenskapen må være nøyaktig samsvar som skal inkluderes i den returnerte matrisen.</xref:System.Attribute>      -Hvis du angir en <xref:System.Attribute>forekomsten, og den er egenskapen default, det skal inkluderes i den returnerte matrisen selv om det finnes ingen forekomst av den <xref:System.Attribute>i egenskapen.</xref:System.Attribute> </xref:System.Attribute>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetChildProperties (Attribute[] filter);
    parameters:
    - id: filter
      type: System.Attribute[]
      description: "En matrise av typen <xref:System.Attribute>skal brukes som et filter.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "En <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> egenskaper som ikke samsvarer med de angitte attributtene."
  overload: System.ComponentModel.PropertyDescriptor.GetChildProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)
  id: GetChildProperties(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: GetChildProperties(Object)
  nameWithType: PropertyDescriptor.GetChildProperties(Object)
  fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerer en <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> for et gitt objekt."
  remarks: "Denne metoden sender `null` for den `filter` parameteren.       Egenskapene for den `instance` parameteren kan være forskjellig fra egenskapene til en klasse fordi området kan legge til eller Fjern egenskaper hvis den `instance` parameteren er plassert.       Den `filter` parameter kan blande <xref:System.Type>og <xref:System.Attribute>objekter.</xref:System.Attribute> </xref:System.Type> Filtrering er definert av følgende regler: – en <xref:System.Type>objekt behandles som jokertegn; den samsvarer med en egenskap som har den <xref:System.Type>i et sett med attributter.</xref:System.Type> </xref:System.Type>      -Hvis en egenskap ikke har en <xref:System.Attribute>av den samme klassen egenskapen inkluderes ikke i den returnerte matrisen.</xref:System.Attribute>      -Hvis attributtet er en forekomst av <xref:System.Attribute>, egenskapen må være nøyaktig samsvar som skal inkluderes i den returnerte matrisen.</xref:System.Attribute>      -Hvis du angir en <xref:System.Attribute>forekomsten, og den er egenskapen default, det skal inkluderes i den returnerte matrisen selv om det finnes ingen forekomst av den <xref:System.Attribute>i egenskapen.</xref:System.Attribute> </xref:System.Attribute>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "En komponent for å hente egenskaper for."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "En <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> med egenskapene for den angitte komponenten."
  overload: System.ComponentModel.PropertyDescriptor.GetChildProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])
  id: GetChildProperties(System.Object,System.Attribute[])
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: GetChildProperties(Object,Attribute[])
  nameWithType: PropertyDescriptor.GetChildProperties(Object,Attribute[])
  fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties(Object,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerer en <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> for et gitt objekt med en angitt matrise for attributter som et filter."
  remarks: "Egenskapene for den `instance` parameteren kan være forskjellig fra egenskapene til en klasse fordi området kan legge til eller Fjern egenskaper hvis den `instance` parameteren er plassert.       Den `filter` parameter kan blande <xref:System.Type>og <xref:System.Attribute>objekter.</xref:System.Attribute> </xref:System.Type> Filtrering er definert av følgende regler: – en <xref:System.Type>objekt behandles som jokertegn; den samsvarer med en egenskap som har den <xref:System.Type>i et sett med attributter.</xref:System.Type> </xref:System.Type>      -Hvis en egenskap ikke har en <xref:System.Attribute>av den samme klassen egenskapen inkluderes ikke i den returnerte matrisen.</xref:System.Attribute>      -Hvis attributtet er en forekomst av <xref:System.Attribute>, egenskapen må være nøyaktig samsvar som skal inkluderes i den returnerte matrisen.</xref:System.Attribute>      -Hvis du angir en <xref:System.Attribute>forekomsten, og den er egenskapen default, det skal inkluderes i den returnerte matrisen selv om det finnes ingen forekomst av den <xref:System.Attribute>i egenskapen.</xref:System.Attribute> </xref:System.Attribute>       Vanligvis underordnede egenskaper skal returneres ved implementering av <xref:System.ComponentModel.TypeConverter.GetProperties%2A>medlem av den <xref:System.ComponentModel.TypeConverter>returnert fra egenskapen.</xref:System.ComponentModel.TypeConverter> </xref:System.ComponentModel.TypeConverter.GetProperties%2A>"
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance, Attribute[] filter);
    parameters:
    - id: instance
      type: System.Object
      description: "En komponent for å hente egenskaper for."
    - id: filter
      type: System.Attribute[]
      description: "En matrise av typen <xref:System.Attribute>skal brukes som et filter.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "En <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> egenskaper som ikke samsvarer med de angitte attributtene for den angitte komponenten."
  overload: System.ComponentModel.PropertyDescriptor.GetChildProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)
  id: GetEditor(System.Type)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: GetEditor(Type)
  nameWithType: PropertyDescriptor.GetEditor(Type)
  fullName: System.ComponentModel.PropertyDescriptor.GetEditor(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Henter en redigeringsprogrammet for den angitte typen."
  syntax:
    content: public virtual object GetEditor (Type editorBaseType);
    parameters:
    - id: editorBaseType
      type: System.Type
      description: "Basistype for redigering, som brukes til å skille mellom flere inndata som støtter en egenskap."
    return:
      type: System.Object
      description: "En forekomst av typen forespurte redigeringsprogrammet eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis et redigeringsprogram ikke blir funnet."
  overload: System.ComponentModel.PropertyDescriptor.GetEditor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: PropertyDescriptor.GetHashCode()
  fullName: System.ComponentModel.PropertyDescriptor.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerer hashkoden for dette objektet."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Hash-koden for dette objektet."
  overload: System.ComponentModel.PropertyDescriptor.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)
  id: GetInvocationTarget(System.Type,System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: GetInvocationTarget(Type,Object)
  nameWithType: PropertyDescriptor.GetInvocationTarget(Type,Object)
  fullName: System.ComponentModel.PropertyDescriptor.GetInvocationTarget(Type,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Denne metoden returnerer objektet som skal brukes under aktivering av medlemmer."
  remarks: "Vanligvis returverdien skal være den samme som den `instance` sendt. Hvis noen tilknyttet et annet objekt for denne forekomsten, eller hvis forekomsten er en egendefinert typebeskrivelse, metoden GetInvocationTarget kan returnere en annen verdi."
  syntax:
    content: protected override object GetInvocationTarget (Type type, object instance);
    parameters:
    - id: type
      type: System.Type
      description: "Den <xref:System.Type>for aktivering.</xref:System.Type>"
    - id: instance
      type: System.Object
      description: "Potensielle aktivering målet."
    return:
      type: System.Object
      description: "Den <xref:System.Object>som skal brukes under aktivering av medlemmer.</xref:System.Object>"
  overload: System.ComponentModel.PropertyDescriptor.GetInvocationTarget*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)
  id: GetTypeFromName(System.String)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: GetTypeFromName(String)
  nameWithType: PropertyDescriptor.GetTypeFromName(String)
  fullName: System.ComponentModel.PropertyDescriptor.GetTypeFromName(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerer en type med navnet."
  remarks: "For å finne riktig type, kontrollerer denne metoden først samlingen av typen som denne <xref:System.ComponentModel.PropertyDescriptor>referanser.</xref:System.ComponentModel.PropertyDescriptor> Hvis den ikke finner typen i samlingen, kaller <xref:System.Type.GetType%2A?displayProperty=fullName>.</xref:System.Type.GetType%2A?displayProperty=fullName>"
  syntax:
    content: protected Type GetTypeFromName (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "Samlingen kvalifiserte navnet av type for å hente."
    return:
      type: System.Type
      description: "En <xref:System.Type>som samsvarer med det angitte typenavnet eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis ikke finner en samsvarende.</xref:System.Type>"
  overload: System.ComponentModel.PropertyDescriptor.GetTypeFromName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.GetValue(System.Object)
  id: GetValue(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: GetValue(Object)
  nameWithType: PropertyDescriptor.GetValue(Object)
  fullName: System.ComponentModel.PropertyDescriptor.GetValue(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Når overstyrt i en avledet klasse, henter gjeldende verdi for egenskapen på en komponent."
  remarks: "Denne metoden er vanligvis implementeres via gjenspeiling.       Denne metoden automatisk kaller metoden før endringen <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>, og endre etter metoden <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>, for <xref:System.ComponentModel.Design.IComponentChangeService>.</xref:System.ComponentModel.Design.IComponentChangeService> </xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> </xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>"
  syntax:
    content: public abstract object GetValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Komponenten med egenskapen som du vil hente verdien."
    return:
      type: System.Object
      description: "Verdien for en egenskap for en gitt komponent."
  overload: System.ComponentModel.PropertyDescriptor.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)
  id: GetValueChangedHandler(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: GetValueChangedHandler(Object)
  nameWithType: PropertyDescriptor.GetValueChangedHandler(Object)
  fullName: System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Henter gjeldende sett med `ValueChanged` hendelsesbehandling for en bestemt komponent"
  syntax:
    content: protected EventHandler GetValueChangedHandler (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Komponenten som du vil hente hendelsesbehandling."
    return:
      type: System.EventHandler
      description: "En kombinert multikastingsmeldinger hendelsesbehandlingen eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis ingen hendelsesbehandling er tildelt <code> component </code>."
  overload: System.ComponentModel.PropertyDescriptor.GetValueChangedHandler*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.IsLocalizable
  id: IsLocalizable
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: IsLocalizable
  nameWithType: PropertyDescriptor.IsLocalizable
  fullName: System.ComponentModel.PropertyDescriptor.IsLocalizable
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Henter en verdi som angir om denne egenskapen skal lokaliseres, som angitt i den <xref href=&quot;System.ComponentModel.LocalizableAttribute&quot;> </xref>."
  remarks: "Når en egenskap er merket med den <xref:System.ComponentModel.LocalizableAttribute>satt til `true` og brukes i en visuelle utformeren, de lagres i en ressursfil.</xref:System.ComponentModel.LocalizableAttribute> Hvis du merker en egenskap med attributtet, og angi egenskapen i koden, brukes ikke ressursfiler."
  syntax:
    content: public virtual bool IsLocalizable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis medlemmet er merket med den <xref href=&quot;System.ComponentModel.LocalizableAttribute&quot;> </xref> satt til <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.PropertyDescriptor.IsLocalizable*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.IsReadOnly
  id: IsReadOnly
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: PropertyDescriptor.IsReadOnly
  fullName: System.ComponentModel.PropertyDescriptor.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Når overstyrt i en avledet klasse, henter en verdi som angir om denne egenskapen er skrivebeskyttet."
  syntax:
    content: public abstract bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis egenskapen er skrivebeskyttet. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.PropertyDescriptor.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)
  id: OnValueChanged(System.Object,System.EventArgs)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: OnValueChanged(Object,EventArgs)
  nameWithType: PropertyDescriptor.OnValueChanged(Object,EventArgs)
  fullName: System.ComponentModel.PropertyDescriptor.OnValueChanged(Object,EventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hever den `ValueChanged` hendelsen som du implementert."
  remarks: "Denne metoden må kalles av egenskapen sikkerhetsbeskrivelse implementeringen når egenskapsverdien er endret."
  syntax:
    content: protected virtual void OnValueChanged (object component, EventArgs e);
    parameters:
    - id: component
      type: System.Object
      description: "Objektet som opphøyer hendelsen."
    - id: e
      type: System.EventArgs
      description: "En <xref:System.EventArgs>som inneholder Hendelsesdata.</xref:System.EventArgs>"
  overload: System.ComponentModel.PropertyDescriptor.OnValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.PropertyType
  id: PropertyType
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: PropertyType
  nameWithType: PropertyDescriptor.PropertyType
  fullName: System.ComponentModel.PropertyDescriptor.PropertyType
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Når overstyrt i en avledet klasse, henter av egenskapen."
  remarks: "Denne egenskapen er vanligvis implementert via gjenspeiling."
  syntax:
    content: public abstract Type PropertyType { get; }
    return:
      type: System.Type
      description: "En <xref:System.Type>som representerer typen egenskapen.</xref:System.Type>"
  overload: System.ComponentModel.PropertyDescriptor.PropertyType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)
  id: RemoveValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: RemoveValueChanged(Object,EventHandler)
  nameWithType: PropertyDescriptor.RemoveValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.PropertyDescriptor.RemoveValueChanged(Object,EventHandler)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Aktiverer andre objekter som skal varsles når denne egenskapen endres."
  syntax:
    content: public virtual void RemoveValueChanged (object component, EventHandler handler);
    parameters:
    - id: component
      type: System.Object
      description: "Komponenten til å fjerne et behandlingsprogram for."
    - id: handler
      type: System.EventHandler
      description: "Representanten fjerne som en lytter."
  overload: System.ComponentModel.PropertyDescriptor.RemoveValueChanged*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>or <code>handler</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)
  id: ResetValue(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: ResetValue(Object)
  nameWithType: PropertyDescriptor.ResetValue(Object)
  fullName: System.ComponentModel.PropertyDescriptor.ResetValue(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Når overstyrt i en avledet klasse, tilbakestilles verdien for denne egenskapen for komponenten til standardverdien."
  remarks: "Denne metoden er vanligvis implementeres via gjenspeiling.       Denne metoden bestemmer verdien som tilbakestiller egenskapen til i denne rekkefølgen for prioritet: 1.  Det finnes en skyggelagt egenskap for denne egenskapen.      2.  Det er en <xref:System.ComponentModel.DefaultValueAttribute>for denne egenskapen.</xref:System.ComponentModel.DefaultValueAttribute>      3.  Det er en &quot;ResetMyProperty&quot;-metode som du har implementert, der &quot;MyProperty&quot; er navnet på egenskapen som du sender til den.       Denne metoden oppretter en <xref:System.ComponentModel.Design.DesignerTransaction>automatisk i denne rekkefølgen: 1.</xref:System.ComponentModel.Design.DesignerTransaction>  Metodekall den <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName>metode for å opprette en ny <xref:System.ComponentModel.Design.DesignerTransaction>til å representere endringene.</xref:System.ComponentModel.Design.DesignerTransaction> </xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName>      2.  Metodekall den <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName>metode for å angi at transaksjonen har startet, og endringene er i ferd med å oppstå.</xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName>      3.  Metoden tilbakestiller egenskapen til verdien avhenger av denne metoden undersøker rekkefølge.      4.  Metodekall den <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName>metode for å angi at endringene har oppstått.</xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName>      5.  Metodekall <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName>til å angi at transaksjonen er fullført.</xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName>       Formålet med transaksjonen er støtte `Undo` og `Redo` funksjonalitet."
  syntax:
    content: public abstract void ResetValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Komponenten med egenskapsverdien som skal bli tilbakestilt til standardverdien."
  overload: System.ComponentModel.PropertyDescriptor.ResetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.SerializationVisibility
  id: SerializationVisibility
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: SerializationVisibility
  nameWithType: PropertyDescriptor.SerializationVisibility
  fullName: System.ComponentModel.PropertyDescriptor.SerializationVisibility
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Henter en verdi som angir om denne egenskapen skal serialiseres, som angitt i den <xref href=&quot;System.ComponentModel.DesignerSerializationVisibilityAttribute&quot;> </xref>."
  syntax:
    content: public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }
    return:
      type: System.ComponentModel.DesignerSerializationVisibility
      description: "Én av de <xref href=&quot;System.ComponentModel.DesignerSerializationVisibility&quot;> </xref> nummereringsverdier som angir om denne egenskapen skal serialiseres."
  overload: System.ComponentModel.PropertyDescriptor.SerializationVisibility*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)
  id: SetValue(System.Object,System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: SetValue(Object,Object)
  nameWithType: PropertyDescriptor.SetValue(Object,Object)
  fullName: System.ComponentModel.PropertyDescriptor.SetValue(Object,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Når overstyrt i en avledet klasse, setter du verdien av komponenten til en annen verdi."
  remarks: "Denne metoden er vanligvis implementeres via gjenspeiling.       Denne metoden oppretter en <xref:System.ComponentModel.Design.DesignerTransaction>automatisk i denne rekkefølgen: 1.</xref:System.ComponentModel.Design.DesignerTransaction>  Metodekall den <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName>metode for å opprette en ny <xref:System.ComponentModel.Design.DesignerTransaction>til å representere endringene.</xref:System.ComponentModel.Design.DesignerTransaction> </xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName>      2.  Metodekall den <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName>metode for å angi at transaksjonen har startet, og endringene er i ferd med å oppstå.</xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName>      3.  Metoden tilbakestiller egenskapen til verdien avhenger av denne metoden undersøker rekkefølge.      4.  Metodekall den <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName>metode for å angi at endringene har oppstått.</xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName>      5.  Metodekall <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName>til å angi at transaksjonen er fullført.</xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName>       Formålet med transaksjonen er støtte `Undo` og `Redo` funksjonalitet."
  syntax:
    content: public abstract void SetValue (object component, object value);
    parameters:
    - id: component
      type: System.Object
      description: "Komponenten med egenskapsverdi som skal angis."
    - id: value
      type: System.Object
      description: "Den nye verdien."
  overload: System.ComponentModel.PropertyDescriptor.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)
  id: ShouldSerializeValue(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: ShouldSerializeValue(Object)
  nameWithType: PropertyDescriptor.ShouldSerializeValue(Object)
  fullName: System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Når overstyrt i en avledet klasse, angir du en verdi som angir om verdien for denne egenskapen må være fast."
  remarks: "Denne metoden er vanligvis implementeres via gjenspeiling."
  syntax:
    content: public abstract bool ShouldSerializeValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Komponenten med egenskapen som skal undersøkes for utholdenhet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis egenskapen må være fast; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.PropertyDescriptor.ShouldSerializeValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyDescriptor.SupportsChangeEvents
  id: SupportsChangeEvents
  parent: System.ComponentModel.PropertyDescriptor
  langs:
  - csharp
  name: SupportsChangeEvents
  nameWithType: PropertyDescriptor.SupportsChangeEvents
  fullName: System.ComponentModel.PropertyDescriptor.SupportsChangeEvents
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Henter en verdi som angir om verdien varslinger for denne egenskapen kan er hentet fra utenfor egenskapen sikkerhetsbeskrivelse."
  remarks: "Egenskapen SupportsChangeEvents angir om verdien varslinger for denne egenskapen kan er hentet fra utenfor egenskapen-sikkerhetsbeskrivelse som fra komponenten seg selv, eller om varsler vil bare er hentet fra direkte kall gjort i den <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A>metoden.</xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> For eksempel komponenten kan implementere den <xref:System.ComponentModel.INotifyPropertyChanged>grensesnitt, eller kanskje en eksplisitt `name``Changed` hendelse for denne egenskapen.</xref:System.ComponentModel.INotifyPropertyChanged>"
  syntax:
    content: public virtual bool SupportsChangeEvents { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis verdien varslinger kan kommer fra utenfor egenskapen sikkerhetsbeskrivelse; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.PropertyDescriptor.SupportsChangeEvents*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: System.ComponentModel.MemberDescriptor
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: PropertyDescriptor(MemberDescriptor)
  nameWithType: PropertyDescriptor.PropertyDescriptor(MemberDescriptor)
  fullName: System.ComponentModel.PropertyDescriptor.PropertyDescriptor(MemberDescriptor)
- uid: System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: PropertyDescriptor(MemberDescriptor,Attribute[])
  nameWithType: PropertyDescriptor.PropertyDescriptor(MemberDescriptor,Attribute[])
  fullName: System.ComponentModel.PropertyDescriptor.PropertyDescriptor(MemberDescriptor,Attribute[])
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: PropertyDescriptor(String,Attribute[])
  nameWithType: PropertyDescriptor.PropertyDescriptor(String,Attribute[])
  fullName: System.ComponentModel.PropertyDescriptor.PropertyDescriptor(String,Attribute[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: AddValueChanged(Object,EventHandler)
  nameWithType: PropertyDescriptor.AddValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.PropertyDescriptor.AddValueChanged(Object,EventHandler)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: CanResetValue(Object)
  nameWithType: PropertyDescriptor.CanResetValue(Object)
  fullName: System.ComponentModel.PropertyDescriptor.CanResetValue(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.PropertyDescriptor.ComponentType
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: ComponentType
  nameWithType: PropertyDescriptor.ComponentType
  fullName: System.ComponentModel.PropertyDescriptor.ComponentType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.PropertyDescriptor.Converter
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: Converter
  nameWithType: PropertyDescriptor.Converter
  fullName: System.ComponentModel.PropertyDescriptor.Converter
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: CreateInstance(Type)
  nameWithType: PropertyDescriptor.CreateInstance(Type)
  fullName: System.ComponentModel.PropertyDescriptor.CreateInstance(Type)
- uid: System.ComponentModel.PropertyDescriptor.Equals(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: Equals(Object)
  nameWithType: PropertyDescriptor.Equals(Object)
  fullName: System.ComponentModel.PropertyDescriptor.Equals(Object)
- uid: System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: FillAttributes(IList)
  nameWithType: PropertyDescriptor.FillAttributes(IList)
  fullName: System.ComponentModel.PropertyDescriptor.FillAttributes(IList)
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetChildProperties()
  nameWithType: PropertyDescriptor.GetChildProperties()
  fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties()
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetChildProperties(Attribute[])
  nameWithType: PropertyDescriptor.GetChildProperties(Attribute[])
  fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties(Attribute[])
- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetChildProperties(Object)
  nameWithType: PropertyDescriptor.GetChildProperties(Object)
  fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties(Object)
- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetChildProperties(Object,Attribute[])
  nameWithType: PropertyDescriptor.GetChildProperties(Object,Attribute[])
  fullName: System.ComponentModel.PropertyDescriptor.GetChildProperties(Object,Attribute[])
- uid: System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetEditor(Type)
  nameWithType: PropertyDescriptor.GetEditor(Type)
  fullName: System.ComponentModel.PropertyDescriptor.GetEditor(Type)
- uid: System.ComponentModel.PropertyDescriptor.GetHashCode
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetHashCode()
  nameWithType: PropertyDescriptor.GetHashCode()
  fullName: System.ComponentModel.PropertyDescriptor.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetInvocationTarget(Type,Object)
  nameWithType: PropertyDescriptor.GetInvocationTarget(Type,Object)
  fullName: System.ComponentModel.PropertyDescriptor.GetInvocationTarget(Type,Object)
- uid: System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetTypeFromName(String)
  nameWithType: PropertyDescriptor.GetTypeFromName(String)
  fullName: System.ComponentModel.PropertyDescriptor.GetTypeFromName(String)
- uid: System.ComponentModel.PropertyDescriptor.GetValue(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetValue(Object)
  nameWithType: PropertyDescriptor.GetValue(Object)
  fullName: System.ComponentModel.PropertyDescriptor.GetValue(Object)
- uid: System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetValueChangedHandler(Object)
  nameWithType: PropertyDescriptor.GetValueChangedHandler(Object)
  fullName: System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(Object)
- uid: System.ComponentModel.PropertyDescriptor.IsLocalizable
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: IsLocalizable
  nameWithType: PropertyDescriptor.IsLocalizable
  fullName: System.ComponentModel.PropertyDescriptor.IsLocalizable
- uid: System.ComponentModel.PropertyDescriptor.IsReadOnly
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: IsReadOnly
  nameWithType: PropertyDescriptor.IsReadOnly
  fullName: System.ComponentModel.PropertyDescriptor.IsReadOnly
- uid: System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: OnValueChanged(Object,EventArgs)
  nameWithType: PropertyDescriptor.OnValueChanged(Object,EventArgs)
  fullName: System.ComponentModel.PropertyDescriptor.OnValueChanged(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.ComponentModel.PropertyDescriptor.PropertyType
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: PropertyType
  nameWithType: PropertyDescriptor.PropertyType
  fullName: System.ComponentModel.PropertyDescriptor.PropertyType
- uid: System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: RemoveValueChanged(Object,EventHandler)
  nameWithType: PropertyDescriptor.RemoveValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.PropertyDescriptor.RemoveValueChanged(Object,EventHandler)
- uid: System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: ResetValue(Object)
  nameWithType: PropertyDescriptor.ResetValue(Object)
  fullName: System.ComponentModel.PropertyDescriptor.ResetValue(Object)
- uid: System.ComponentModel.PropertyDescriptor.SerializationVisibility
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: SerializationVisibility
  nameWithType: PropertyDescriptor.SerializationVisibility
  fullName: System.ComponentModel.PropertyDescriptor.SerializationVisibility
- uid: System.ComponentModel.DesignerSerializationVisibility
  parent: System.ComponentModel
  isExternal: false
  name: DesignerSerializationVisibility
  nameWithType: DesignerSerializationVisibility
  fullName: System.ComponentModel.DesignerSerializationVisibility
- uid: System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: SetValue(Object,Object)
  nameWithType: PropertyDescriptor.SetValue(Object,Object)
  fullName: System.ComponentModel.PropertyDescriptor.SetValue(Object,Object)
- uid: System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: ShouldSerializeValue(Object)
  nameWithType: PropertyDescriptor.ShouldSerializeValue(Object)
  fullName: System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(Object)
- uid: System.ComponentModel.PropertyDescriptor.SupportsChangeEvents
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: SupportsChangeEvents
  nameWithType: PropertyDescriptor.SupportsChangeEvents
  fullName: System.ComponentModel.PropertyDescriptor.SupportsChangeEvents
- uid: System.ComponentModel.PropertyDescriptor.#ctor*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor.PropertyDescriptor
- uid: System.ComponentModel.PropertyDescriptor.AddValueChanged*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: AddValueChanged
  nameWithType: PropertyDescriptor.AddValueChanged
- uid: System.ComponentModel.PropertyDescriptor.CanResetValue*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: CanResetValue
  nameWithType: PropertyDescriptor.CanResetValue
- uid: System.ComponentModel.PropertyDescriptor.ComponentType*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: ComponentType
  nameWithType: PropertyDescriptor.ComponentType
- uid: System.ComponentModel.PropertyDescriptor.Converter*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: Converter
  nameWithType: PropertyDescriptor.Converter
- uid: System.ComponentModel.PropertyDescriptor.CreateInstance*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: CreateInstance
  nameWithType: PropertyDescriptor.CreateInstance
- uid: System.ComponentModel.PropertyDescriptor.Equals*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: Equals
  nameWithType: PropertyDescriptor.Equals
- uid: System.ComponentModel.PropertyDescriptor.FillAttributes*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: FillAttributes
  nameWithType: PropertyDescriptor.FillAttributes
- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetChildProperties
  nameWithType: PropertyDescriptor.GetChildProperties
- uid: System.ComponentModel.PropertyDescriptor.GetEditor*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetEditor
  nameWithType: PropertyDescriptor.GetEditor
- uid: System.ComponentModel.PropertyDescriptor.GetHashCode*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetHashCode
  nameWithType: PropertyDescriptor.GetHashCode
- uid: System.ComponentModel.PropertyDescriptor.GetInvocationTarget*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetInvocationTarget
  nameWithType: PropertyDescriptor.GetInvocationTarget
- uid: System.ComponentModel.PropertyDescriptor.GetTypeFromName*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetTypeFromName
  nameWithType: PropertyDescriptor.GetTypeFromName
- uid: System.ComponentModel.PropertyDescriptor.GetValue*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetValue
  nameWithType: PropertyDescriptor.GetValue
- uid: System.ComponentModel.PropertyDescriptor.GetValueChangedHandler*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: GetValueChangedHandler
  nameWithType: PropertyDescriptor.GetValueChangedHandler
- uid: System.ComponentModel.PropertyDescriptor.IsLocalizable*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: IsLocalizable
  nameWithType: PropertyDescriptor.IsLocalizable
- uid: System.ComponentModel.PropertyDescriptor.IsReadOnly*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: IsReadOnly
  nameWithType: PropertyDescriptor.IsReadOnly
- uid: System.ComponentModel.PropertyDescriptor.OnValueChanged*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: OnValueChanged
  nameWithType: PropertyDescriptor.OnValueChanged
- uid: System.ComponentModel.PropertyDescriptor.PropertyType*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: PropertyType
  nameWithType: PropertyDescriptor.PropertyType
- uid: System.ComponentModel.PropertyDescriptor.RemoveValueChanged*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: RemoveValueChanged
  nameWithType: PropertyDescriptor.RemoveValueChanged
- uid: System.ComponentModel.PropertyDescriptor.ResetValue*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: ResetValue
  nameWithType: PropertyDescriptor.ResetValue
- uid: System.ComponentModel.PropertyDescriptor.SerializationVisibility*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: SerializationVisibility
  nameWithType: PropertyDescriptor.SerializationVisibility
- uid: System.ComponentModel.PropertyDescriptor.SetValue*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: SetValue
  nameWithType: PropertyDescriptor.SetValue
- uid: System.ComponentModel.PropertyDescriptor.ShouldSerializeValue*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: ShouldSerializeValue
  nameWithType: PropertyDescriptor.ShouldSerializeValue
- uid: System.ComponentModel.PropertyDescriptor.SupportsChangeEvents*
  parent: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: SupportsChangeEvents
  nameWithType: PropertyDescriptor.SupportsChangeEvents
