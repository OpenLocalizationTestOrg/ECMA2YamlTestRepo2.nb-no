### YamlMime:ManagedReference
items:
- uid: System.Net.Security.SslStream
  id: SslStream
  children:
  - System.Net.Security.SslStream.#ctor(System.IO.Stream)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  - System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  - System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  - System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.CanRead
  - System.Net.Security.SslStream.CanSeek
  - System.Net.Security.SslStream.CanTimeout
  - System.Net.Security.SslStream.CanWrite
  - System.Net.Security.SslStream.CheckCertRevocationStatus
  - System.Net.Security.SslStream.CipherAlgorithm
  - System.Net.Security.SslStream.CipherStrength
  - System.Net.Security.SslStream.Dispose(System.Boolean)
  - System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  - System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  - System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  - System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  - System.Net.Security.SslStream.Flush
  - System.Net.Security.SslStream.HashAlgorithm
  - System.Net.Security.SslStream.HashStrength
  - System.Net.Security.SslStream.IsAuthenticated
  - System.Net.Security.SslStream.IsEncrypted
  - System.Net.Security.SslStream.IsMutuallyAuthenticated
  - System.Net.Security.SslStream.IsServer
  - System.Net.Security.SslStream.IsSigned
  - System.Net.Security.SslStream.KeyExchangeAlgorithm
  - System.Net.Security.SslStream.KeyExchangeStrength
  - System.Net.Security.SslStream.Length
  - System.Net.Security.SslStream.LocalCertificate
  - System.Net.Security.SslStream.Position
  - System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.Net.Security.SslStream.ReadTimeout
  - System.Net.Security.SslStream.RemoteCertificate
  - System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Net.Security.SslStream.SetLength(System.Int64)
  - System.Net.Security.SslStream.SslProtocol
  - System.Net.Security.SslStream.TransportContext
  - System.Net.Security.SslStream.Write(System.Byte[])
  - System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.Net.Security.SslStream.WriteTimeout
  langs:
  - csharp
  name: SslStream
  nameWithType: SslStream
  fullName: System.Net.Security.SslStream
  type: Class
  summary: "Inneholder en dataflyt som brukes til kommunikasjon med klient-server som bruker SSL (Secure Socket LAYER) sikkerhetsprotokollen til å godkjenne serveren og eventuelt klienten."
  remarks: "SSL-protokoller bidrar til konfidensiell og Integritetskontroll for meldinger som er sendt ved hjelp av en SslStream. En SSL-tilkobling, for eksempel som leveres av SslStream, skal brukes ved kommunikasjon sensitiv informasjon mellom en klient og en server. Ved hjelp av en SslStream bidrar til å hindre at noen lesing og forfalskning med informasjon som er i transitt på nettverket.       En forekomst av SslStream overfører data ved hjelp av en dataflyt som du oppgi ved oppretting av SslStream. Når du angir denne underliggende dataflyten, har du mulighet til å angi om lukking av SslStream lukker underliggende dataflyt også. Klassen SslStream brukes vanligvis med den <xref:System.Net.Sockets.TcpClient>og <xref:System.Net.Sockets.TcpListener>klasser.</xref:System.Net.Sockets.TcpListener> </xref:System.Net.Sockets.TcpClient> <xref:System.Net.Sockets.TcpClient.GetStream%2A>Metoden gir en <xref:System.Net.Sockets.NetworkStream>brukes med SslStream klasse.</xref:System.Net.Sockets.NetworkStream> </xref:System.Net.Sockets.TcpClient.GetStream%2A>       Når du har opprettet en SslStream må serveren og eventuelt klienten godkjennes. Serveren må angi en X509 sertifikat som oppretter bevis sin identitet og kan be om at klienten også gjøre dette. Godkjenning må utføres før sending av informasjon ved hjelp av en SslStream. Klienter starte godkjenning ved hjelp av den synkron <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>metoder som blokkerer før godkjenningen er fullført, eller den asynkrone <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>metoder, som ikke blokker venting for å fullføre godkjenningen.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> Servere starte godkjenning ved hjelp av den synkron <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>eller asynkron <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metoder.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> Både klienten og serveren må starte godkjenningen.       Godkjenningen håndteres av kanalleverandøren Security Support Provider (SSPI). Klienten er angitt en mulighet til å styre validering av serversertifikatet ved å angi en <xref:System.Net.Security.RemoteCertificateValidationCallback>delegere når du oppretter en SslStream.</xref:System.Net.Security.RemoteCertificateValidationCallback> Serveren kan også kontrollere validering ved å oppgi en <xref:System.Net.Security.RemoteCertificateValidationCallback>delegere.</xref:System.Net.Security.RemoteCertificateValidationCallback> Metoden refererer til representanten inneholder en ekstern krever sertifikatet og eventuelle feil som oppstod under validering av sertifikatet SSPI. Merk at hvis serveren angir representant, aktiveres i representanten metoden uavhengig av serveren har forespurt for klientgodkjenning. Hvis serveren ikke har bedt om klientgodkjenning, mottar serverens representanten metoden et null-sertifikat og en tom matrise med sertifikatfeil.       Hvis serveren krever klientgodkjenning, må klienten angi én eller flere sertifikater for godkjenning. Hvis klienten har mer enn ett sertifikat, klienten kan gi en <xref:System.Net.Security.LocalCertificateSelectionCallback>representanten velge det riktige sertifikatet for serveren.</xref:System.Net.Security.LocalCertificateSelectionCallback> Den klientsertifikater må ligge i den gjeldende brukeren &quot;Min&quot; sertifikatlageret. Klientgodkjenning via sertifikater støttes ikke for den <xref:System.Security.Authentication.SslProtocols>protokollen (SSL versjon 2).</xref:System.Security.Authentication.SslProtocols>       Hvis godkjenningen mislykkes, mottar du en <xref:System.Security.Authentication.AuthenticationException>, og SslStream er ikke lenger kunne brukes.</xref:System.Security.Authentication.AuthenticationException> Du må lukke dette objektet, og Fjern alle referanser til den slik at de kan samles av saneringsoppsamlingen.       Når godkjenningsprosessen også kjent som SSL-håndtrykket, lykkes, identiteten til serveren (og eventuelt klienten) er opprettet, og SslStream kan brukes av klienten og serveren til å utveksle meldinger. Før sending og mottak av informasjon, må klienten og serveren Kontroller sikkerhetstjenester og nivåer som er angitt av SslStream å finne ut om protokollen, algoritmer og sterke valgte oppfyller kravene for integritet og konfidensiell. Hvis de gjeldende innstillingene ikke er tilstrekkelig, bør dataflyten lukkes. Du kan kontrollere sikkerhet tjenestene SslStream ved hjelp av <xref:System.Net.Security.SslStream.IsEncrypted%2A>og <xref:System.Net.Security.SslStream.IsSigned%2A>Egenskaper.</xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Tabellen nedenfor viser elementer som rapporterer kryptografisk innstillingene som brukes for godkjenning, kryptering og datasignering.      | Elementet | Medlemmer |   |-------------|-------------|   | Sikkerhetsprotokollen som brukes til å godkjenne serveren og eventuelt klienten. | Egenskapen <xref:System.Net.Security.SslStream.SslProtocol%2A>og tilknyttede <xref:System.Security.Authentication.SslProtocols>-nummerering. |   | Algoritmen nøkkelutvekslingen. | Egenskapen <xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A>og tilknyttede <xref:System.Security.Authentication.ExchangeAlgorithmType>-nummerering. |   | Algoritmen meldingen integritet. | Egenskapen <xref:System.Net.Security.SslStream.HashAlgorithm%2A>og tilknyttede <xref:System.Security.Authentication.HashAlgorithmType>-nummerering. |   | Algoritmen meldingen konfidensiell. | Egenskapen <xref:System.Net.Security.SslStream.CipherAlgorithm%2A>og tilknyttede <xref:System.Security.Authentication.CipherAlgorithmType>-nummerering. |   | Sterke av de valgte algoritmene. | <xref:System.Net.Security.SslStream.KeyExchangeStrength%2A>, <xref:System.Net.Security.SslStream.HashStrength%2A>, Og <xref:System.Net.Security.SslStream.CipherStrength%2A>Egenskaper. |       Du kan sende data ved hjelp av den synkron etter en vellykket godkjenning vil <xref:System.Net.Security.SslStream.Write%2A>eller asynkron <xref:System.Net.Security.SslStream.BeginWrite%2A>metoder.</xref:System.Net.Security.SslStream.BeginWrite%2A> </xref:System.Net.Security.SslStream.Write%2A> </xref:System.Net.Security.SslStream.CipherStrength%2A> </xref:System.Net.Security.SslStream.HashStrength%2A> </xref:System.Net.Security.SslStream.KeyExchangeStrength%2A> </xref:System.Security.Authentication.CipherAlgorithmType> </xref:System.Net.Security.SslStream.CipherAlgorithm%2A> </xref:System.Security.Authentication.HashAlgorithmType> </xref:System.Net.Security.SslStream.HashAlgorithm%2A> </xref:System.Security.Authentication.ExchangeAlgorithmType> </xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A> </xref:System.Security.Authentication.SslProtocols> </xref:System.Net.Security.SslStream.SslProtocol%2A> Du kan motta data ved hjelp av den synkron <xref:System.Net.Security.SslStream.Read%2A>eller asynkron <xref:System.Net.Security.SslStream.BeginRead%2A>metoder.</xref:System.Net.Security.SslStream.BeginRead%2A> </xref:System.Net.Security.SslStream.Read%2A>       Hvis du har angitt til den <xref:System.Net.Security.SslStream.%23ctor%2A>at underliggende dataflyt må være åpen, kan du er ansvarlig for å lukke denne dataflyten når du er ferdig med den.</xref:System.Net.Security.SslStream.%23ctor%2A>      > [!NOTE] > Hvis programmet som oppretter SslStream objektet kjører med legitimasjonen for en vanlig bruker, programmet ikke får tilgang til sertifikater som er installert på den lokale maskinen store Hvis tillatelse eksplisitt er gitt til brukeren til å gjøre dette.       SslStream antar at et tidsavbrudd sammen med andre <xref:System.IO.IOException>når en er registrert fra indre dataflyten behandles som uopprettelig den oppkalleren.</xref:System.IO.IOException> Bruke en forekomst av SslStream på nytt etter at et tidsavbrudd tilbakestiller ugyldige. Et program som skal <xref:System.IO.Stream.Close%2A>SslStream og throw et unntak i disse tilfellene.</xref:System.IO.Stream.Close%2A>       .NET Framework 4.6 inneholder en ny sikkerhetsfunksjon som blokkerer usikker cipher og nummer algoritmer for tilkoblinger. Programmer bruker TLS/SSL via API-er for eksempel HttpClient HttpWebRequest, FTPClient, SmtpClient, SslStream, osv. og har .NET Framework 4.6 få sikrere virkemåten som standard.       Utviklere kan ønsker å delta på dette for å opprettholde samhandling med eksisterende SSL3 tjenestene eller TLS med RC4 services. [Denne artikkelen](https://support.microsoft.com/kb/3069494) forklarer hvordan du endrer koden slik at den nye virkemåten er deaktivert.       .NET Framework 4.6.3 legge legger til nye overlastingene for metodene som godkjennes SslStreams som ikke angir en TLS-versjon, men i stedet bruke TLS-versjonen som er definert som systemstandard i [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx). Bruk disse metodene i appen for å kunne endre senere standarder når TLS versjon beste praksis endres over tid, uten å opprette og distribuere appen på nytt."
  example:
  - "The following code example demonstrates creating an <xref:System.Net.Sockets.TcpListener> that uses the SslStream class to communicate with clients.  \n  \n [!code-cpp[NclSslServerSync#0](~/add/codesnippet/cpp/t-system.net.security.ss_1.cpp)]\n [!code-cs[NclSslServerSync#0](~/add/codesnippet/csharp/t-system.net.security.ss_1.cs)]  \n  \n The following code example demonstrates creating a <xref:System.Net.Sockets.TcpClient> that uses the SslStream class to communicate with a server.  \n  \n [!code-cpp[NclSslClientSync#0](~/add/codesnippet/cpp/t-system.net.security.ss_2.cpp)]\n [!code-cs[NclSslClientSync#0](~/add/codesnippet/csharp/t-system.net.security.ss_2.cs)]"
  syntax:
    content: 'public class SslStream : System.Net.Security.AuthenticatedStream'
  inheritance:
  - System.IO.Stream
  - System.Net.Security.AuthenticatedStream
  implements: []
  inheritedMembers:
  - System.Net.Security.AuthenticatedStream.InnerStream
  - System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream)
  nameWithType: SslStream.SslStream(Stream)
  fullName: System.Net.Security.SslStream.SslStream(Stream)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> klasse ved hjelp av den angitte <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "Hvis en verdi ikke er angitt i konfigurasjonsfilen for encryptionpolicy, den <xref:System.Net.Security.EncryptionPolicy>som standard <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>for den <xref:System.Net.Security.SslStream>-forekomst som er laget.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       Bruk av Null-cipher kreves når krypteringspolicyen er satt til <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  syntax:
    content: public SslStream (System.IO.Stream innerStream);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "En <xref:System.IO.Stream>objekt som brukes av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> for sending og mottak av data.</xref:System.IO.Stream>"
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>er ikke lesbar.       - eller - <code>innerStream</code> er ikke skrivbar."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - <code>innerStream</code> er lik <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  id: '#ctor(System.IO.Stream,System.Boolean)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean)
  nameWithType: SslStream.SslStream(Stream,Boolean)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> klasse parametersettet med de angitte <xref:System.IO.Stream>og flyten avslutning virkemåte.</xref:System.IO.Stream>"
  remarks: "Når du angir `true` for den `leaveStreamOpen` parameter, lukker den <xref:System.Net.Security.SslStream>har ingen innvirkning på den `innerStream` flyten; du må lukke eksplisitt `innerStream` når du ikke lenger trenger den.</xref:System.Net.Security.SslStream>       Hvis en verdi ikke er angitt i konfigurasjonsfilen for encryptionpolicy, den <xref:System.Net.Security.EncryptionPolicy>som standard <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>for den <xref:System.Net.Security.SslStream>-forekomst som er laget.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       Bruk av Null-cipher kreves når krypteringspolicyen er satt til <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/m-system.net.security.ss_5_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/m-system.net.security.ss_5_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "En <xref:System.IO.Stream>objekt som brukes av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> for sending og mottak av data.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "En boolsk verdi som angir hvordan avslutning av <xref:System.IO.Stream>objekt som brukes av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> for sending og mottak av data.</xref:System.IO.Stream> Denne parameteren angir om den indre dataflyten er åpen."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>er ikke lesbar.       - eller - <code>innerStream</code> er ikke skrivbar."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - <code>innerStream</code> er lik <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> klasse parametersettet med de angitte <xref:System.IO.Stream>flyten avslutning virkemåte og sertifikat validering representant.</xref:System.IO.Stream>"
  remarks: "Når du angir `true` for den `leaveStreamOpen` parameter, lukker den <xref:System.Net.Security.SslStream>har ingen innvirkning på den `innerStream` flyten; du må lukke eksplisitt `innerStream` når du ikke lenger trenger den.</xref:System.Net.Security.SslStream>       Den `userCertificateValidationCallback` representant `certificateErrors` argumentet inneholder en Windows-feilkoder som ble returnert av kanalen Security Support Provider Interface (SSPI). Verdien som returneres av metoden aktiveres av den `userCertificateValidationCallback` representanten bestemmer om vellykket godkjenning.       Sikkerhetsprotokollen og kryptografiske algoritmer er allerede valgt når de `userCertificateValidationCallback` representant metoden aktiveres. Du kan bruke metoden til å bestemme om den valgte kryptografiske algoritmer og sterke er tilstrekkelig for programmet. Hvis ikke, metoden skal returnere `false` å hindre at den <xref:System.Net.Security.SslStream>opprettes.</xref:System.Net.Security.SslStream>       Hvis en verdi ikke er angitt i konfigurasjonsfilen for encryptionpolicy, den <xref:System.Net.Security.EncryptionPolicy>som standard <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>for den <xref:System.Net.Security.SslStream>-forekomst som er laget.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       Bruk av Null-cipher kreves når krypteringspolicyen er satt til <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>      > [!NOTE] > I Framework bufrer SSL-økter som de opprettes og prøver å bruke en bufret økt til en ny forespørsel om mulig. Under forsøk på å bruke en SSL-økt, rammeverket bruker det første elementet i <xref:System.Net.HttpWebRequest.ClientCertificates%2A>(Hvis det finnes en), eller prøver å bruke en anonym økter Hvis <xref:System.Net.HttpWebRequest.ClientCertificates%2A>er tom.</xref:System.Net.HttpWebRequest.ClientCertificates%2A> </xref:System.Net.HttpWebRequest.ClientCertificates%2A>      > [!NOTE] > Klientsertifikater støttes ikke i versjon 2 SSL-protokollen."
  example:
  - "The following code example creates an <xref:System.Net.Security.SslStream> and initiates the client portion of the authentication.  \n  \n [!code-cpp[NclSslClientSync#4](~/add/codesnippet/cpp/9eaa69b2-6619-41cf-8f97-_1.cpp)]\n [!code-cs[NclSslClientSync#4](~/add/codesnippet/csharp/9eaa69b2-6619-41cf-8f97-_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "En <xref:System.IO.Stream>objekt som brukes av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> for sending og mottak av data.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "En boolsk verdi som angir hvordan avslutning av <xref:System.IO.Stream>objekt som brukes av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> for sending og mottak av data.</xref:System.IO.Stream> Denne parameteren angir om den indre dataflyten er åpen."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "En <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> ansvarlig for validering av sertifikatet som er angitt en ekstern krever representant."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>er ikke lesbar.       - eller - <code>innerStream</code> er ikke skrivbar."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - <code>innerStream</code> er lik <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> klasse parametersettet med de angitte <xref:System.IO.Stream>, flyten avslutning virkemåte, sertifikatet validering representanten og sertifikatet utvalget representant.</xref:System.IO.Stream>"
  remarks: "Når du angir `true` for den `leaveStreamOpen` parameter, lukker den <xref:System.Net.Security.SslStream>har ingen innvirkning på den `innerStream` flyten; du må lukke eksplisitt `innerStream` når du ikke lenger trenger den.</xref:System.Net.Security.SslStream>       Den `userCertificateValidationCallback` representant `certificateErrors` argumentet inneholder en Windows-feilkoder som ble returnert av kanalen Security Support Provider Interface (SSPI). Verdien som returneres av metoden aktiveres av den `userCertificateValidationCallback` representanten bestemmer om vellykket godkjenning.       Sikkerhetsprotokollen og kryptografiske algoritmer er allerede valgt når de `userCertificateValidationCallback` representant metoden aktiveres. Du kan bruke metoden til å bestemme om den valgte kryptografiske algoritmer og sterke er tilstrekkelig for programmet. Hvis ikke, metoden skal returnere `false` å hindre at den <xref:System.Net.Security.SslStream>opprettes.</xref:System.Net.Security.SslStream>       Den `userCertificateSelectionCallback` representanten er nyttig når programmet har flere sertifikater og dynamisk må velge et sertifikat. Sertifikater i &quot;MY&quot; lager er sendt til aktiveres av representanten-metoden.       Hvis en verdi ikke er angitt i konfigurasjonsfilen for encryptionpolicy, den <xref:System.Net.Security.EncryptionPolicy>som standard <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>for den <xref:System.Net.Security.SslStream>-forekomst som er laget.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       Bruk av Null-cipher kreves når krypteringspolicyen er satt til <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>      > [!NOTE] > I Framework bufrer SSL-økter som de opprettes og prøver å bruke en bufret økt til en ny forespørsel om mulig. Under forsøk på å bruke en SSL-økt, rammeverket bruker det første elementet i P:System.Net.HttpWebRequest.ClientCertificates (Hvis det finnes et), eller forsøker å bruke en anonym økter Hvis P:System.Net.HttpWebRequest.ClientCertificates er tom."
  example:
  - "The following code example demonstrates calling this constructor. This example is part of a larger example provided for the <xref:System.Net.Security.SslStream> class.  \n  \n [!code-cpp[NclSslClientAsync#6](~/add/codesnippet/cpp/dc8fc9af-8c2a-4c30-be77-_1.cpp)]\n [!code-cs[NclSslClientAsync#6](~/add/codesnippet/csharp/dc8fc9af-8c2a-4c30-be77-_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "En <xref:System.IO.Stream>objekt som brukes av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> for sending og mottak av data.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "En boolsk verdi som angir hvordan avslutning av <xref:System.IO.Stream>objekt som brukes av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> for sending og mottak av data.</xref:System.IO.Stream> Denne parameteren angir om den indre dataflyten er åpen."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "En <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> ansvarlig for validering av sertifikatet som er angitt en ekstern krever representant."
    - id: userCertificateSelectionCallback
      type: System.Net.Security.LocalCertificateSelectionCallback
      description: "En <xref href=&quot;System.Net.Security.LocalCertificateSelectionCallback&quot;> </xref> representanten ansvarlig for å velge sertifikatet som brukes for godkjenning."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>er ikke lesbar.       - eller - <code>innerStream</code> er ikke skrivbar."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - <code>innerStream</code> er lik <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> klasse parametersettet med de angitte<xref:System.IO.Stream></xref:System.IO.Stream>"
  remarks: "Bruk av Null-chiffrering er nødvendig når den `encryptionPolicy` parameteren er satt til <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, System.Net.Security.EncryptionPolicy encryptionPolicy);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "En <xref:System.IO.Stream>objekt som brukes av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> for sending og mottak av data.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "En boolsk verdi som angir hvordan avslutning av <xref:System.IO.Stream>objekt som brukes av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> for sending og mottak av data.</xref:System.IO.Stream> Denne parameteren angir om den indre dataflyten er åpen."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "En <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> ansvarlig for validering av sertifikatet som er angitt en ekstern krever representant."
    - id: userCertificateSelectionCallback
      type: System.Net.Security.LocalCertificateSelectionCallback
      description: "En <xref href=&quot;System.Net.Security.LocalCertificateSelectionCallback&quot;> </xref> representanten ansvarlig for å velge sertifikatet som brukes for godkjenning."
    - id: encryptionPolicy
      type: System.Net.Security.EncryptionPolicy
      description: "The <xref href=&quot;System.Net.Security.EncryptionPolicy&quot;></xref> to use."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>er ikke lesbar.       - eller - <code>innerStream</code> er ikke skrivbar.       - eller - <code>encryptionPolicy</code> er ikke gyldig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - <code>innerStream</code> er lik <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  id: AuthenticateAsClient(System.String)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClient(String)
  nameWithType: SslStream.AuthenticateAsClient(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Kalles av klienter til å godkjenne serveren og eventuelt klienten i en klient servertilkobling."
  remarks: "Denne metoden godkjenner ved hjelp av <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Ingen klientsertifikater brukes i godkjenningen. Sertifikatopphevelseslisten er ikke kontrollert under godkjenning. Den angitte verdien for `targetHost` må samsvare med navnet på serveren sertifikatet.       Når vellykket godkjenning, må du sjekke den <xref:System.Net.Security.SslStream.IsEncrypted%2A>og <xref:System.Net.Security.SslStream.IsSigned%2A>Egenskaper for å avgjøre hvilke security-tjenester som brukes av <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Se den <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>til å fastslå om gjensidig godkjenning oppstod.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Hvis godkjenningen mislykkes, mottar du en <xref:System.Security.Authentication.AuthenticationException>, og dette <xref:System.Net.Security.SslStream>er ikke lenger kunne brukes.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du må lukke dette objektet, og Fjern alle referanser til den slik at de kan samles av saneringsoppsamlingen."
  syntax:
    content: public virtual void AuthenticateAsClient (string targetHost);
    parameters:
    - id: targetHost
      type: System.String
      description: "Navnet på serveren som deler dette <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  overload: System.Net.Security.SslStream.AuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Godkjenning mislyktes og igjen dette objektet i en ubrukelig tilstand."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod allerede godkjenning.       - eller - Server-godkjenning ved hjelp av dette <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> ble forsøkt tidligere.       - eller - godkjenning pågår allerede."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dette objektet er lukket."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Kalles av klienter til å godkjenne serveren og eventuelt klienten i en klient servertilkobling. Godkjenningsprosessen bruker angitte sertifikatsamlingen og SSL-protokollen."
  remarks: "Når vellykket godkjenning, må du sjekke den <xref:System.Net.Security.SslStream.IsEncrypted%2A>og <xref:System.Net.Security.SslStream.IsSigned%2A>Egenskaper for å avgjøre hvilke security-tjenester som brukes av <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Se den <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>til å fastslå om gjensidig godkjenning oppstod.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Hvis godkjenningen mislykkes, mottar du en <xref:System.Security.Authentication.AuthenticationException>, og dette <xref:System.Net.Security.SslStream>er ikke lenger kunne brukes.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du må lukke dette objektet, og Fjern alle referanser til den slik at de kan samles av saneringsoppsamlingen.      > [!NOTE] > Klientsertifikater støttes ikke i versjon 2 SSL-protokollen."
  syntax:
    content: public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: targetHost
      type: System.String
      description: "Navnet på serveren som deler dette <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "Den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> som inneholder klientsertifikater."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "Den <xref:System.Security.Authentication.SslProtocols>verdi som Representer protokollen som brukes for godkjenning.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "En <xref:System.Boolean>verdi som angir om det er merket av for sertifikatopphevelseslisten under godkjenning.</xref:System.Boolean>"
  overload: System.Net.Security.SslStream.AuthenticateAsClient*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  id: AuthenticateAsClientAsync(System.String)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync(String)
  nameWithType: SslStream.AuthenticateAsClientAsync(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Kalles av klienter til å godkjenne serveren og eventuelt klienten i en klient servertilkobling som en asynkron operasjon."
  remarks: "Denne metoden godkjenner ved hjelp av <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Ingen klientsertifikater brukes i godkjenningen. Sertifikatopphevelseslisten er ikke kontrollert under godkjenning. Den angitte verdien for `targetHost` må samsvare med navnet på serveren sertifikatet.       Når vellykket godkjenning, må du sjekke den <xref:System.Net.Security.SslStream.IsEncrypted%2A>og <xref:System.Net.Security.SslStream.IsSigned%2A>Egenskaper for å avgjøre hvilke security-tjenester som brukes av <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Se den <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>til å fastslå om gjensidig godkjenning oppstod.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Hvis godkjenningen mislykkes, mottar du en <xref:System.Security.Authentication.AuthenticationException>, og dette <xref:System.Net.Security.SslStream>er ikke lenger kunne brukes.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du må lukke dette objektet, og Fjern alle referanser til den slik at de kan samles av saneringsoppsamlingen."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost);
    parameters:
    - id: targetHost
      type: System.String
      description: "Navnet på serveren som deler dette <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    return:
      type: System.Threading.Tasks.Task
      description: "Returnerer <xref:System.Threading.Tasks.Task>Oppgaveobjekt som representerer den asynkrone operasjonen.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Godkjenning mislyktes og igjen dette objektet i en ubrukelig tilstand."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod allerede godkjenning.       - eller - Server-godkjenning ved hjelp av dette <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> ble forsøkt tidligere.       - eller - godkjenning pågår allerede."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dette objektet er lukket."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Kalles av klienter til å godkjenne serveren og eventuelt klienten i en klient servertilkobling som en asynkron operasjon. Godkjenningsprosessen bruker angitte sertifikatsamlingen og SSL-protokollen."
  remarks: "Når vellykket godkjenning, må du sjekke den <xref:System.Net.Security.SslStream.IsEncrypted%2A>og <xref:System.Net.Security.SslStream.IsSigned%2A>Egenskaper for å avgjøre hvilke security-tjenester som brukes av <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Se den <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>til å fastslå om gjensidig godkjenning oppstod.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Hvis godkjenningen mislykkes, mottar du en <xref:System.Security.Authentication.AuthenticationException>, og dette <xref:System.Net.Security.SslStream>er ikke lenger kunne brukes.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du må lukke dette objektet, og Fjern alle referanser til den slik at de kan samles av saneringsoppsamlingen.      > [!NOTE] > Klientsertifikater støttes ikke i versjon 2 SSL-protokollen."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: targetHost
      type: System.String
      description: "Navnet på serveren som deler dette <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "Den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> som inneholder klientsertifikater."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "Den <xref:System.Security.Authentication.SslProtocols>verdi som Representer protokollen som brukes for godkjenning.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "En <xref:System.Boolean>verdi som angir om det er merket av for sertifikatopphevelseslisten under godkjenning.</xref:System.Boolean>"
    return:
      type: System.Threading.Tasks.Task
      description: "Returnerer <xref:System.Threading.Tasks.Task>Oppgaveobjekt som representerer den asynkrone operasjonen.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServer(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Kalles av servere for å godkjenne serveren og eventuelt klienten i en klient servertilkobling med det angitte sertifikatet."
  remarks: "Denne metoden godkjenner ved hjelp av <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Sertifikatopphevelseslisten er ikke kontrollert under godkjenning. Klienten er ikke nødvendig å angi et sertifikat for godkjenning.       Denne metoden blokkerer til operasjonen er fullført. Hvis du ikke blokkerer til operasjonen er fullført, kan du bruke en av de <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metoden overbelastninger.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>       Hvis godkjenningen mislykkes, mottar du en <xref:System.Security.Authentication.AuthenticationException>, og dette <xref:System.Net.Security.SslStream>er ikke lenger kunne brukes.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du må lukke dette objektet, og Fjern alle referanser til den slik at de kan samles av saneringsoppsamlingen."
  syntax:
    content: public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Sertifikatet brukes til å godkjenne serveren."
  overload: System.Net.Security.SslStream.AuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Godkjenning mislyktes og igjen dette objektet i en ubrukelig tilstand."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod allerede godkjenning.       - eller - klientgodkjenning å bruke denne <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> ble forsøkt tidligere.       - eller - godkjenning pågår allerede."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dette objektet er lukket."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Den <xref:System.Net.Security.SslStream.AuthenticateAsServer*>metoden støttes ikke i Windows 95, Windows 98 eller Windows Millennium.</xref:System.Net.Security.SslStream.AuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Kalles av servere for å godkjenne serveren og eventuelt klienten i en klient servertilkobling ved hjelp av angitte sertifikater, krav og sikkerhetsprotokollen."
  remarks: "Denne metoden blokkerer til operasjonen er fullført. Hvis du ikke blokkerer til operasjonen er fullført, kan du bruke en av de <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metoden overbelastninger.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>       Hvis godkjenningen mislykkes, mottar du en <xref:System.Security.Authentication.AuthenticationException>, og dette <xref:System.Net.Security.SslStream>er ikke lenger kunne brukes.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du må lukke dette objektet, og Fjern alle referanser til den slik at de kan samles av saneringsoppsamlingen."
  syntax:
    content: public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "X509Certificate som brukes til å godkjenne serveren."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "En <xref:System.Boolean>verdi som angir om klienten blir bedt om et sertifikat for godkjenning.</xref:System.Boolean> Legg merke til at dette er bare en forespørsel, hvis ikke noe sertifikat er angitt, serveren godtar fortsatt tilkoblingsforespørselen."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "Den <xref:System.Security.Authentication.SslProtocols>verdi som Representer protokollen som brukes for godkjenning.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "En <xref:System.Boolean>verdi som angir om det er merket av for sertifikatopphevelseslisten under godkjenning.</xref:System.Boolean>"
  overload: System.Net.Security.SslStream.AuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>er ikke et gyldig <xref:System.Security.Authentication.SslProtocols> verdi."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Godkjenning mislyktes og igjen dette objektet i en ubrukelig tilstand."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod allerede godkjenning.       - eller - klientgodkjenning å bruke denne <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> ble forsøkt tidligere.       - eller - godkjenning pågår allerede."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dette objektet er lukket."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Den <xref:System.Net.Security.SslStream.AuthenticateAsServer*>metoden støttes ikke i Windows 95, Windows 98 eller Windows Millennium.</xref:System.Net.Security.SslStream.AuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServerAsync(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Kalles av servere for å godkjenne serveren og eventuelt klienten i en klient servertilkobling med det angitte sertifikatet som en asynkron operasjon."
  remarks: "Denne metoden godkjenner ved hjelp av <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Sertifikatopphevelseslisten er ikke kontrollert under godkjenning. Klienten er ikke nødvendig å angi et sertifikat for godkjenning.       Hvis godkjenningen mislykkes, mottar du en <xref:System.Security.Authentication.AuthenticationException>, og dette <xref:System.Net.Security.SslStream>er ikke lenger kunne brukes.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du må lukke dette objektet, og Fjern alle referanser til den slik at de kan samles av saneringsoppsamlingen."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Sertifikatet brukes til å godkjenne serveren."
    return:
      type: System.Threading.Tasks.Task
      description: "Returnerer <xref:System.Threading.Tasks.Task>Oppgaveobjekt som representerer den asynkrone operasjonen.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Godkjenning mislyktes og igjen dette objektet i en ubrukelig tilstand."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod allerede godkjenning.       - eller - klientgodkjenning å bruke denne <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> ble forsøkt tidligere.       - eller - godkjenning pågår allerede."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dette objektet er lukket."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Den <xref:System.Net.Security.SslStream.AuthenticateAsServerAsync*>metoden støttes ikke i Windows 95, Windows 98 eller Windows Millennium.</xref:System.Net.Security.SslStream.AuthenticateAsServerAsync*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Kalles av servere for å godkjenne serveren og eventuelt klienten i en klient servertilkobling ved hjelp av den angitte sertifikater, krav og sikkerhetsprotokollen som en asynkron operasjon."
  remarks: "Hvis godkjenningen mislykkes, mottar du en <xref:System.Security.Authentication.AuthenticationException>, og dette <xref:System.Net.Security.SslStream>er ikke lenger kunne brukes.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du må lukke dette objektet, og Fjern alle referanser til den slik at de kan samles av saneringsoppsamlingen."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "X509Certificate som brukes til å godkjenne serveren."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "En <xref:System.Boolean>verdi som angir om klienten blir bedt om et sertifikat for godkjenning.</xref:System.Boolean> Legg merke til at dette er bare en forespørsel, hvis ikke noe sertifikat er angitt, serveren godtar fortsatt tilkoblingsforespørselen."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "Den <xref:System.Security.Authentication.SslProtocols>verdi som Representer protokollen som brukes for godkjenning.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "En <xref:System.Boolean>verdi som angir om det er merket av for sertifikatopphevelseslisten under godkjenning.</xref:System.Boolean>"
    return:
      type: System.Threading.Tasks.Task
      description: "Returnerer <xref:System.Threading.Tasks.Task>Oppgaveobjekt som representerer den asynkrone operasjonen.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(String,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Kalles av klienter til å starte en asynkron operasjon for å godkjenne serveren og eventuelt klienten."
  remarks: "Denne metoden godkjenner ved hjelp av <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Ingen klientsertifikater brukes i godkjenningen. Sertifikatopphevelseslisten er ikke kontrollert under godkjenning.       Den angitte verdien for `targetHost` må samsvare med navnet på serveren sertifikatet.       Asynkron godkjenningsoperasjonen må være fullført kaller den <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>metoden.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> Vanligvis metoden startes av den `asyncCallback` delegere.       Denne metoden ikke blokkere når operasjonen er fullført. Hvis du vil blokkere før operasjonen er fullført, kan du bruke en av de <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>metoden overbelastninger.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Du finner mer detaljert informasjon om hvordan du bruker asynkrone programming modellen [kaller asynkront synkron metoder](~/add/includes/ajax-current-ext-md.md) Hvis du får en <xref:System.Security.Authentication.AuthenticationException>, denne <xref:System.Net.Security.SslStream>er ikke lenger kunne brukes.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du må lukke dette objektet, og Fjern alle referanser til den slik at de kan samles av saneringsoppsamlingen."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: targetHost
      type: System.String
      description: "Navnet på serveren som deler dette <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "En <xref:System.AsyncCallback>representanten som refererer til metoden som skal startes når godkjenning er fullført.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Et brukerdefinert objekt som inneholder informasjon om operasjonen. Dette objektet er sendt til den `asyncCallback` delegere når operasjonen er fullført."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>objekt som angir statusen for den asynkrone operasjonen.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Godkjenning mislyktes og igjen dette objektet i en ubrukelig tilstand."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod allerede godkjenning.       - eller - Server-godkjenning ved hjelp av dette <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> ble forsøkt tidligere.       - eller - godkjenning pågår allerede."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dette objektet er lukket."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Kalles av klienter til å starte en asynkron operasjon for å godkjenne serveren og eventuelt klienten ved hjelp av angitte sertifikater og sikkerhetsprotokollen."
  remarks: "Den angitte verdien for `targetHost` må samsvare med navnet på serveren sertifikatet.       Asynkron godkjenningsoperasjonen må være fullført kaller den <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>metoden.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> Vanligvis metoden startes av den `asyncCallback` delegere.       Denne metoden ikke blokkere når operasjonen er fullført. Hvis du vil blokkere før operasjonen er fullført, kan du bruke en av de <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>metoden overbelastninger.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Du finner mer detaljert informasjon om hvordan du bruker asynkrone programming modellen [kaller asynkront synkron metoder](~/add/includes/ajax-current-ext-md.md) Hvis du får en <xref:System.Security.Authentication.AuthenticationException>, denne <xref:System.Net.Security.SslStream>er ikke lenger kunne brukes.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du må lukke dette objektet, og Fjern alle referanser til den slik at de kan samles av saneringsoppsamlingen.      > [!NOTE] > Klientsertifikater støttes ikke i versjon 2 SSL-protokollen."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: targetHost
      type: System.String
      description: "Navnet på serveren som deler dette <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "Den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> som inneholder klientsertifikater."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "Den <xref:System.Security.Authentication.SslProtocols>verdi som Representer protokollen som brukes for godkjenning.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "En <xref:System.Boolean>verdi som angir om det er merket av for sertifikatopphevelseslisten under godkjenning.</xref:System.Boolean>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "En <xref:System.AsyncCallback>representanten som refererer til metoden som skal startes når godkjenning er fullført.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Et brukerdefinert objekt som inneholder informasjon om operasjonen. Dette objektet er sendt til den `asyncCallback` delegere når operasjonen er fullført."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>objekt som angir statusen for den asynkrone operasjonen.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>er ikke et gyldig <xref:System.Security.Authentication.SslProtocols> verdi."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Godkjenning mislyktes og igjen dette objektet i en ubrukelig tilstand."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod allerede godkjenning.       - eller - Server-godkjenning ved hjelp av dette <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> ble forsøkt tidligere.       - eller - godkjenning pågår allerede."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dette objektet er lukket."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Kalles av servere for å starte en asynkron operasjon for å godkjenne klienten og eventuelt serveren i en klient servertilkobling."
  remarks: "Denne metoden godkjenner ved hjelp av <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Sertifikatopphevelseslisten er ikke kontrollert under godkjenning. Klienten er ikke nødvendig å angi et sertifikat for godkjenning.       Asynkron godkjenningsoperasjonen må være fullført kaller den <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>metoden.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> Vanligvis metoden startes av den `asyncCallback` delegere.       Denne metoden ikke blokkere når operasjonen er fullført. Hvis du vil blokkere før operasjonen er fullført, kan du bruke en av de <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>metoden overbelastninger.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Du finner mer detaljert informasjon om hvordan du bruker asynkrone programming modellen [kaller asynkront synkron metoder](~/add/includes/ajax-current-ext-md.md) Hvis du får en <xref:System.Security.Authentication.AuthenticationException>, denne <xref:System.Net.Security.SslStream>er ikke lenger kunne brukes.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du må lukke dette objektet, og Fjern alle referanser til den slik at de kan samles av saneringsoppsamlingen."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "X509Certificate som brukes til å godkjenne serveren."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "En <xref:System.AsyncCallback>representanten som refererer til metoden som skal startes når godkjenning er fullført.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Et brukerdefinert objekt som inneholder informasjon om operasjonen. Dette objektet er sendt til den `asyncCallback` delegere når operasjonen er fullført."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>objekt som angir statusen for den asynkrone operasjonen.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Godkjenning mislyktes og igjen dette objektet i en ubrukelig tilstand."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod allerede godkjenning.       - eller - klientgodkjenning å bruke denne <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> ble forsøkt tidligere.       - eller - godkjenning pågår allerede."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dette objektet er lukket."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Den <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>metoden støttes ikke i Windows 95, Windows 98 eller Windows Millennium.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Kalles av servere for å starte en asynkron operasjon for å godkjenne serveren og eventuelt klienten ved hjelp av angitte sertifikater, krav og sikkerhetsprotokollen."
  remarks: "Asynkron godkjenningsoperasjonen må være fullført kaller den <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A>metoden.</xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> Vanligvis metoden startes av den `asyncCallback` delegere.       Denne metoden ikke blokkere når operasjonen er fullført. Hvis du vil blokkere før operasjonen er fullført, kan du bruke en av de <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>metoden overbelastninger.</xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>       Du finner mer detaljert informasjon om hvordan du bruker asynkrone programming modellen [kaller asynkront synkron metoder](~/add/includes/ajax-current-ext-md.md) Hvis du får en <xref:System.Security.Authentication.AuthenticationException>, denne <xref:System.Net.Security.SslStream>er ikke lenger kunne brukes.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du må lukke dette objektet, og Fjern alle referanser til den slik at de kan samles av saneringsoppsamlingen."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "X509Certificate som brukes til å godkjenne serveren."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "En <xref:System.Boolean>verdi som angir om klienten blir bedt om et sertifikat for godkjenning.</xref:System.Boolean> Legg merke til at dette er bare en forespørsel, hvis ikke noe sertifikat er angitt, serveren godtar fortsatt tilkoblingsforespørselen."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "Den <xref:System.Security.Authentication.SslProtocols>verdi som Representer protokollen som brukes for godkjenning.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "En <xref:System.Boolean>verdi som angir om det er merket av for sertifikatopphevelseslisten under godkjenning.</xref:System.Boolean>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "En <xref:System.AsyncCallback>representanten som refererer til metoden som skal startes når godkjenning er fullført.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Et brukerdefinert objekt som inneholder informasjon om operasjonen. Dette objektet er sendt til den `asyncCallback` delegere når operasjonen er fullført."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>objekt som angir statusen for den asynkrone operasjonen.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>er ikke et gyldig <xref:System.Security.Authentication.SslProtocols> verdi."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Godkjenning mislyktes og igjen dette objektet i en ubrukelig tilstand."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod allerede godkjenning.       - eller - Server-godkjenning ved hjelp av dette <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> ble forsøkt tidligere.       - eller - godkjenning pågår allerede."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dette objektet er lukket."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Den <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>metoden støttes ikke i Windows 95, Windows 98 eller Windows Millennium.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Starter en asynkron leseoperasjon som viser data fra dataflyten og lagrer den i den angitte matrisen."
  remarks: "Hvis kryptering og eller logger er aktivert, leseoperasjonen leser data fra den underliggende dataflyten, kontrollerer integriteten til dataene og/eller dekrypterer den. Asynkron leseoperasjonen må være fullført kaller den <xref:System.Net.Security.SslStream.EndRead%2A>metoden.</xref:System.Net.Security.SslStream.EndRead%2A> Vanligvis metoden startes av den `asyncCallback` delegere.       Denne metoden ikke blokkere når operasjonen er fullført. Hvis du vil blokkere før operasjonen er fullført, kan du bruke den <xref:System.Net.Security.SslStream.Read%2A>metoden.</xref:System.Net.Security.SslStream.Read%2A>       Du finner mer detaljert informasjon om hvordan du bruker asynkrone programming modellen [kaller asynkront synkron metoder](~/add/includes/ajax-current-ext-md.md) den <xref:System.Net.Security.SslStream>klassen støtter ikke flere samtidige leseoperasjoner.</xref:System.Net.Security.SslStream>       Du kan ikke kalle denne metoden før du har godkjent. Å godkjenne kallet til den <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, eller <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metoder.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  example:
  - "The following code example demonstrates starting an asynchronous read operation.  \n  \n [!code-cpp[NclSslClientAsync#8](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_1.cpp)]\n [!code-cs[NclSslClientAsync#8](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_1.cs)]  \n  \n [!code-cpp[NclSslClientAsync#4](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_2.cpp)]\n [!code-cs[NclSslClientAsync#4](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_2.cs)]  \n  \n The following method is called when the read completes.  \n  \n [!code-cpp[NclSslClientAsync#5](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_3.cpp)]\n [!code-cs[NclSslClientAsync#5](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_3.cs)]"
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "En <xref:System.Byte>matrise som mottar byte lest fra dataflyten.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "Den nullbaserte plasseringen i `buffer` vil begynne å lagre dataene lese fra denne dataflyten."
    - id: count
      type: System.Int32
      description: "Maksimalt antall byte som leses fra dataflyten."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "En <xref:System.AsyncCallback>representanten som refererer til metoden som skal startes når leseoperasjonen er fullført.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Et brukerdefinert objekt som inneholder informasjon om leseoperasjonen. Dette objektet er sendt til den `asyncCallback` delegere når operasjonen er fullført."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>objekt som angir statusen for den asynkrone operasjonen.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; lengden på <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Leseoperasjonen mislyktes.       - eller - kryptering er i bruk, men kan ikke dekryptere dataene."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Det finnes allerede en leseoperasjon pågår."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dette objektet er lukket."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod ikke godkjenning."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Starter en asynkron skriveoperasjon skriver <xref:System.Byte>s fra den angitte bufferen til dataflyten.</xref:System.Byte>"
  remarks: ''
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NclSslServerAsync#5](~/add/codesnippet/csharp/7192cc61-a256-4249-aafa-_1.cs)]\n [!code-cpp[NclSslServerAsync#5](~/add/codesnippet/cpp/7192cc61-a256-4249-aafa-_1.cpp)]"
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "En <xref:System.Byte>matrise som leverer byte skrives til dataflyten.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "Den nullbaserte plasseringen i `buffer` vil begynne å lese byte skrives til dataflyten."
    - id: count
      type: System.Int32
      description: "En <xref:System.Int32>verdi som angir antall byte som leses fra `buffer`.</xref:System.Int32>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "En <xref:System.AsyncCallback>representanten som refererer til metoden som skal startes når Skriveoperasjonen er fullført.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Et brukerdefinert objekt som inneholder informasjon om Skriveoperasjonen. Dette objektet er sendt til den `asyncCallback` delegere når operasjonen er fullført."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>objekt som angir statusen for den asynkrone operasjonen.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; lengden på <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Skriveoperasjonen mislyktes."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Det finnes allerede en skriveoperasjon pågår."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dette objektet er lukket."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod ikke godkjenning."
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanRead
  id: CanRead
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanRead
  nameWithType: SslStream.CanRead
  fullName: System.Net.Security.SslStream.CanRead
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Henter en <xref:System.Boolean>verdi som angir om det underliggende er lesbar.</xref:System.Boolean>"
  remarks: "Hvis vellykket godkjenning oppstod, denne egenskapen returnerer verdien som returneres ved å bruke <xref:System.IO.Stream.CanRead%2A>for underliggende dataflyten.</xref:System.IO.Stream.CanRead%2A>       Den underliggende dataflyten er angitt når du oppretter en forekomst av <xref:System.Net.Security.SslStream>klassen.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_14_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_14_1.cs)]"
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis godkjenning oppstod og den underliggende er lesbar; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanSeek
  id: CanSeek
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: SslStream.CanSeek
  fullName: System.Net.Security.SslStream.CanSeek
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Henter en <xref:System.Boolean>verdi som angir om det underliggende er søkbar.</xref:System.Boolean>"
  remarks: "Ikke forsøk på å angi posisjonen for den <xref:System.Net.Security.SslStream>-objekt, eller den underliggende dataflyten.</xref:System.Net.Security.SslStream>       Den underliggende dataflyten er angitt når du oppretter en forekomst av <xref:System.Net.Security.SslStream>klassen.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "Denne egenskapen returnerer alltid <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanTimeout
  id: CanTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
  fullName: System.Net.Security.SslStream.CanTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Henter en <xref:System.Boolean>verdi som angir om den underliggende Dataflyten støtter tidsavbrudd.</xref:System.Boolean>"
  remarks: "Denne egenskapen returnerer verdien som returneres ved å bruke <xref:System.IO.Stream.CanTimeout%2A>for underliggende dataflyten.</xref:System.IO.Stream.CanTimeout%2A>       Den underliggende dataflyten er angitt når du oppretter en forekomst av <xref:System.Net.Security.SslStream>klassen.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_8_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_8_1.cs)]"
  syntax:
    content: public override bool CanTimeout { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den underliggende Dataflyten støtter tidsavbrudd; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanWrite
  id: CanWrite
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: SslStream.CanWrite
  fullName: System.Net.Security.SslStream.CanWrite
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Henter en <xref:System.Boolean>verdi som angir om det underliggende er skrivbar.</xref:System.Boolean>"
  remarks: "Hvis vellykket godkjenning oppstod, denne egenskapen returnerer verdien som returneres ved å bruke <xref:System.IO.Stream.CanWrite%2A>for underliggende dataflyten.</xref:System.IO.Stream.CanWrite%2A>       Den underliggende dataflyten er angitt når du oppretter en forekomst av <xref:System.Net.Security.SslStream>klassen.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_17_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_17_1.cs)]"
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis godkjenning oppstod og den underliggende er skrivbar; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus
  id: CheckCertRevocationStatus
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
  fullName: System.Net.Security.SslStream.CheckCertRevocationStatus
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Henter en <xref:System.Boolean>verdi som angir om sertifikatopphevelseslisten er merket under validering av sertifikatet.</xref:System.Boolean>"
  remarks: "Sertifikatopphevelseslisten inneholder sertifikater som er opphevet av utstederen. Kontrollerer listen negativt påvirker ytelse, men forbedrer Programsikkerhet."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_4_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_4_1.cs)]"
  syntax:
    content: public virtual bool CheckCertRevocationStatus { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis sertifikatopphevelseslisten sjekkes; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CheckCertRevocationStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CipherAlgorithm
  id: CipherAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
  fullName: System.Net.Security.SslStream.CipherAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Henter en verdi som identifiserer bulk-krypteringsalgoritmen som brukes av dette <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "Verdien <xref:System.Security.Authentication.CipherAlgorithmType>kreves for egenskapen CipherAlgorithm når den <xref:System.Net.Security.EncryptionPolicy>opplistingsverdien brukes til å lage en <xref:System.Net.Security.SslStream>forekomsten.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy> </xref:System.Security.Authentication.CipherAlgorithmType>       [!INCLUDE[winxpsvr](~/add/includes/winxpsvr-md.md)]og [!INCLUDE[winxp](~/add/includes/winxp-md.md)] støtter ikke den <xref:System.Security.Authentication.CipherAlgorithmType>verdi.</xref:System.Security.Authentication.CipherAlgorithmType> Så selv hvis <xref:System.Security.Authentication.CipherAlgorithmType>verdien brukes til å konstruere den <xref:System.Net.Security.SslStream>forekomsten, <xref:System.Net.Security.EncryptionPolicy> <xref:System.Security.Authentication.CipherAlgorithmType>.</xref:System.Security.Authentication.CipherAlgorithmType> blir</xref:System.Net.Security.EncryptionPolicy> </xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.CipherAlgorithmType> Den <xref:System.Security.Authentication.CipherAlgorithmType>bare, returneres verdien på Windows Vista og senere.</xref:System.Security.Authentication.CipherAlgorithmType>"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_10_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_10_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.CipherAlgorithmType CipherAlgorithm { get; }
    return:
      type: System.Security.Authentication.CipherAlgorithmType
      description: "En <xref:System.Security.Authentication.CipherAlgorithmType>verdi.</xref:System.Security.Authentication.CipherAlgorithmType>"
  overload: System.Net.Security.SslStream.CipherAlgorithm*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Egenskapen CipherAlgorithm ble åpnet før fullføring av godkjenningsprosessen eller godkjenningsprosessen mislyktes."
  platform:
  - net462
- uid: System.Net.Security.SslStream.CipherStrength
  id: CipherStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
  fullName: System.Net.Security.SslStream.CipherStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Henter en verdi som identifiserer styrken til Chifferalgoritmer brukes av dette <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "Verdien for denne egenskapen er null til godkjenningen.       Denne egenskapen returnerer en av følgende verdier: - 0 - 40-56-80-128-168 192 - 256"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_6_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_6_1.cs)]"
  syntax:
    content: public virtual int CipherStrength { get; }
    return:
      type: System.Int32
      description: "En <xref:System.Int32>verdi som angir styrken til algoritmen, i biter.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.CipherStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SslStream.Dispose(Boolean)
  fullName: System.Net.Security.SslStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Frigir uforvaltede ressursene som brukes av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> og eventuelt frigir administrerte ressurser."
  remarks: "Denne metoden kalles av offentlig `Dispose()`metoden og <xref:System.Object.Finalize%2A>metode.</xref:System.Object.Finalize%2A> `Dispose()`Aktiverer den beskyttede `Dispose(Boolean)` metoden med den `disposing` parameteren satt til `true`. <xref:System.Object.Finalize%2A>aktiverer `Dispose` med `disposing` satt til `false`.</xref:System.Object.Finalize%2A>       Når den `disposing` -parameteren er SANN, denne metoden Frigjør alle ressurser holdes av administrerte objekter som denne <xref:System.Net.Security.SslStream>referanser.</xref:System.Net.Security.SslStream> Denne metoden starter den `Dispose()` metode for hver referert objekt."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>å frigjøre både administrerte og uforvaltede ressurser. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> frigi bare uforvaltede ressurser."
  overload: System.Net.Security.SslStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  id: EndAuthenticateAsClient(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndAuthenticateAsClient(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsClient(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Slutter en ventende asynkron server-godkjenning operasjon i gang med en tidligere kall til <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  remarks: "Hvis operasjonen ikke er fullført, som denne metoden før det gjøres. Når godkjenningen lykkes, må du sjekke den <xref:System.Net.Security.SslStream.IsEncrypted%2A>og <xref:System.Net.Security.SslStream.IsSigned%2A>Egenskaper for å avgjøre hvilke security-tjenester som brukes av <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Se den <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>til å fastslå om gjensidig godkjenning oppstod.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Hvis godkjenningen mislykkes, mottar du en <xref:System.Security.Authentication.AuthenticationException>, og dette <xref:System.Net.Security.SslStream>er ikke lenger kunne brukes.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du må lukke dette objektet, og Fjern alle referanser til den slik at de kan samles av saneringsoppsamlingen.       Du kan utføre denne operasjonen synkront ved bruk av <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>metoder.</xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  syntax:
    content: public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>forekomsten ble returnert av et kall til <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*> </xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>ikke ble opprettet av et kall til <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Godkjenning mislyktes og igjen dette objektet i en ubrukelig tilstand."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det er ingen ventende servergodkjenning skal fullføres."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  id: EndAuthenticateAsServer(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndAuthenticateAsServer(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsServer(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Slutter en ventende asynkron klienten godkjenning operasjon i gang med en tidligere kall til <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>"
  remarks: "Hvis operasjonen ikke er fullført, som denne metoden før det gjøres. Når godkjenningen lykkes, må du sjekke den <xref:System.Net.Security.SslStream.IsEncrypted%2A>og <xref:System.Net.Security.SslStream.IsSigned%2A>Egenskaper for å avgjøre hvilke security-tjenester som brukes av <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Se den <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>til å fastslå om gjensidig godkjenning oppstod.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Hvis godkjenningen mislykkes, mottar du en <xref:System.Security.Authentication.AuthenticationException>, og dette <xref:System.Net.Security.SslStream>er ikke lenger kunne brukes.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du må lukke dette objektet, og Fjern alle referanser til den slik at de kan samles av saneringsoppsamlingen.       Du kan utføre denne operasjonen synkront ved bruk av <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>metode.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  syntax:
    content: public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>forekomsten ble returnert av et kall til <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*> </xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>ikke ble opprettet av et kall til <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Godkjenning mislyktes og igjen dette objektet i en ubrukelig tilstand."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det er ingen ventende klientgodkjenning skal fullføres."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: SslStream.EndRead(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Slutter en asynkron operasjon i gang med en tidligere kall til <xref:System.Net.Security.SslStream.BeginRead*>.</xref:System.Net.Security.SslStream.BeginRead*>"
  remarks: "Hvis operasjonen ikke er fullført, som denne metoden før det gjøres.       For å utføre denne operasjonen synkront, kan du bruke den <xref:System.Net.Security.SslStream.Read%2A>metoden.</xref:System.Net.Security.SslStream.Read%2A>       Du kan ikke kalle denne metoden før du har godkjent. Å godkjenne kallet til den <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, eller <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metoder.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  example:
  - "The following code example demonstrates ending an asynchronous read operation.  \n  \n [!code-cpp[NclSslClientAsync#5](~/add/codesnippet/cpp/m-system.net.security.ss_0_1.cpp)]\n [!code-cs[NclSslClientAsync#5](~/add/codesnippet/csharp/m-system.net.security.ss_0_1.cs)]"
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>forekomsten ble returnert av et kall til <xref:System.Net.Security.SslStream.BeginRead*></xref:System.Net.Security.SslStream.BeginRead*> </xref:System.IAsyncResult>"
    return:
      type: System.Int32
      description: "En <xref:System.Int32>verdi som angir antall byte lest fra den underliggende dataflyten.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.EndRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>ikke ble opprettet av et kall til <xref:System.Net.Security.SslStream.BeginRead*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod ikke godkjenning."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Leseoperasjonen mislyktes."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: SslStream.EndWrite(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Slutter en asynkron skriveoperasjon i gang med en tidligere kall til <xref:System.Net.Security.SslStream.BeginWrite*>.</xref:System.Net.Security.SslStream.BeginWrite*>"
  remarks: "Hvis operasjonen ikke er fullført, som denne metoden før det gjøres.       Et program kan ikke kalle denne metoden før du har godkjent. For å godkjenne, kaller du én av de <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, eller <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metoder.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       For å utføre denne operasjonen synkront, kan du bruke den <xref:System.Net.Security.SslStream.Write%2A>metoden.</xref:System.Net.Security.SslStream.Write%2A>"
  example:
  - "The following code example demonstrates ending an asynchronous write operation.  \n  \n [!code-cs[NclSslServerAsync#4](~/add/codesnippet/csharp/m-system.net.security.ss_1_1.cs)]\n [!code-cpp[NclSslServerAsync#4](~/add/codesnippet/cpp/m-system.net.security.ss_1_1.cpp)]"
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>forekomsten ble returnert av et kall til <xref:System.Net.Security.SslStream.BeginWrite*></xref:System.Net.Security.SslStream.BeginWrite*> </xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>ikke ble opprettet av et kall til <xref:System.Net.Security.SslStream.BeginWrite*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod ikke godkjenning."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Skriveoperasjonen mislyktes."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Flush
  id: Flush
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Flush()
  nameWithType: SslStream.Flush()
  fullName: System.Net.Security.SslStream.Flush()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Gjør bufrede data skrives til den underliggende enheten."
  remarks: "Denne metoden aktiverer <xref:System.IO.Stream.Flush%2A>for underliggende dataflyten.</xref:System.IO.Stream.Flush%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cpp[NclSslClientSync#5](~/add/codesnippet/cpp/m-system.net.security.ss_4_1.cpp)]\n [!code-cs[NclSslClientSync#5](~/add/codesnippet/csharp/m-system.net.security.ss_4_1.cs)]"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Net.Security.SslStream.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.HashAlgorithm
  id: HashAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
  fullName: System.Net.Security.SslStream.HashAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Henter algoritmen som brukes ved generering godkjenningskoder (MACs) for meldingen."
  remarks: "Meldingen godkjenningsalgoritmer generere meldingen numre og signaturer som brukes til å oppdage forfalskning og forfalskning."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_9_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_9_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.HashAlgorithmType HashAlgorithm { get; }
    return:
      type: System.Security.Authentication.HashAlgorithmType
      description: "En <xref:System.Security.Authentication.HashAlgorithmType>verdi.</xref:System.Security.Authentication.HashAlgorithmType>"
  overload: System.Net.Security.SslStream.HashAlgorithm*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Egenskapen nummeralgoritme ble åpnet før fullføring av godkjenningsprosessen eller godkjenningsprosessen mislyktes."
  platform:
  - net462
- uid: System.Net.Security.SslStream.HashStrength
  id: HashStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: HashStrength
  nameWithType: SslStream.HashStrength
  fullName: System.Net.Security.SslStream.HashStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Henter en verdi som identifiserer styrken til hash-algoritmen som brukes i denne forekomsten."
  remarks: "Verdien for denne egenskapen er null til godkjenningen."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_2_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_2_1.cs)]"
  syntax:
    content: public virtual int HashStrength { get; }
    return:
      type: System.Int32
      description: "En <xref:System.Int32>verdi som angir styrken til den <xref:System.Security.Authentication.HashAlgorithmType>algoritmen i biter.</xref:System.Security.Authentication.HashAlgorithmType> </xref:System.Int32> Gyldige verdier er 128 eller 160."
  overload: System.Net.Security.SslStream.HashStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsAuthenticated
  id: IsAuthenticated
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
  fullName: System.Net.Security.SslStream.IsAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Henter en <xref:System.Boolean>verdi som angir om godkjenningen var vellykket.</xref:System.Boolean>"
  remarks: "Godkjenn klienter ved å ringe det <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>eller <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>metoder.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> Servere Godkjenn ved kall av <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>eller <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metoder.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_3_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_3_1.cs)]"
  syntax:
    content: public override bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis det oppstod en vellykket godkjenning; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsEncrypted
  id: IsEncrypted
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
  fullName: System.Net.Security.SslStream.IsEncrypted
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Henter en <xref:System.Boolean>verdi som angir om dette <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> bruker datakryptering.</xref:System.Boolean>"
  remarks: "Kryptering bidrar til å beskytte personvernet for dataene, som bidrar den til å sikre at dataene er i transitt, den ikke kan tydes av tredjeparter."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_0_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_0_1.cs)]"
  syntax:
    content: public override bool IsEncrypted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis data er kryptert før overføres via nettverket og dekrypteres når den når det eksterne endepunktet; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsEncrypted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated
  id: IsMutuallyAuthenticated
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
  fullName: System.Net.Security.SslStream.IsMutuallyAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Henter en <xref:System.Boolean>verdi som angir om både serveren og klientprogrammene er godkjent.</xref:System.Boolean>"
  remarks: "Gjensidig godkjenning er angitt av serveren når serveren ønsker klienten til å angi et sertifikat for godkjenning."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_11_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_11_1.cs)]"
  syntax:
    content: public override bool IsMutuallyAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis serveren har godkjent; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsMutuallyAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsServer
  id: IsServer
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsServer
  nameWithType: SslStream.IsServer
  fullName: System.Net.Security.SslStream.IsServer
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Henter en <xref:System.Boolean>verdi som angir om den lokale siden av tilkoblingen brukes av dette <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> ble godkjent som serveren.</xref:System.Boolean>"
  remarks: "Hvis godkjenning kan ikke eller denne egenskapen returnerer `false`.       For å godkjenne som serveren, kan du kalle den <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>eller <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metoder.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_13_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_13_1.cs)]"
  syntax:
    content: public override bool IsServer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis det lokale sluttpunktet ble godkjent som serversiden av godkjente tilkoblingen. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsServer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsSigned
  id: IsSigned
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsSigned
  nameWithType: SslStream.IsSigned
  fullName: System.Net.Security.SslStream.IsSigned
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Henter en <xref:System.Boolean>verdi som angir om dataene som sendes ved hjelp av denne dataflyten er signert.</xref:System.Boolean>"
  remarks: "Data logger bidrar til å beskytte dataene, som hjelper mottakeren bestemme om dataene har blitt endret i transitt."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_19_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_19_1.cs)]"
  syntax:
    content: public override bool IsSigned { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis dataene er signert før overføres; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsSigned*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm
  id: KeyExchangeAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
  fullName: System.Net.Security.SslStream.KeyExchangeAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Henter nøkkelens utvekslingsnøkkel-algoritmen som brukes av dette <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "Verdien for denne egenskapen er <xref:System.Security.Authentication.ExchangeAlgorithmType>til godkjenningen.</xref:System.Security.Authentication.ExchangeAlgorithmType>       Algoritmen nøkkelutvekslingen beskytter informasjon som brukes til å generere delte nøkler."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_16_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_16_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm { get; }
    return:
      type: System.Security.Authentication.ExchangeAlgorithmType
      description: "En <xref:System.Security.Authentication.ExchangeAlgorithmType>verdi.</xref:System.Security.Authentication.ExchangeAlgorithmType>"
  overload: System.Net.Security.SslStream.KeyExchangeAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.KeyExchangeStrength
  id: KeyExchangeStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
  fullName: System.Net.Security.SslStream.KeyExchangeStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Henter en verdi som identifiserer styrken til nøkkelens utvekslingsnøkkel-algoritmen som brukes i denne forekomsten."
  remarks: "Verdien for denne egenskapen er null til godkjenningen.       Vanlige scenarier verdien for denne egenskapen er én av følgende: - 512 768-1024 2048"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_5_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_5_1.cs)]"
  syntax:
    content: public virtual int KeyExchangeStrength { get; }
    return:
      type: System.Int32
      description: "En <xref:System.Int32>verdi som angir styrken til den <xref:System.Security.Authentication.ExchangeAlgorithmType>algoritmen i biter.</xref:System.Security.Authentication.ExchangeAlgorithmType> </xref:System.Int32>"
  overload: System.Net.Security.SslStream.KeyExchangeStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Length
  id: Length
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Length
  nameWithType: SslStream.Length
  fullName: System.Net.Security.SslStream.Length
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Henter lengden på den underliggende dataflyten."
  remarks: "Denne egenskapen returnerer verdien som returneres ved å bruke <xref:System.IO.Stream.Length%2A>for underliggende dataflyten.</xref:System.IO.Stream.Length%2A> Hvis den underliggende dataflyten er søkbar, oppstår denne metoden vanligvis det et unntak. Kjøretid bestemmer underliggende dataflyt hvilken kjøretid unntak som er et."
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "A <xref:System.Int64>.</xref:System.Int64>       Lengden på den underliggende dataflyten."
  overload: System.Net.Security.SslStream.Length*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Henting av verdien for denne egenskapen støttes ikke når det underliggende er en <xref href=&quot;System.Net.Sockets.NetworkStream&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.LocalCertificate
  id: LocalCertificate
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
  fullName: System.Net.Security.SslStream.LocalCertificate
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Henter sertifikatet som brukes til å godkjenne det lokale sluttpunktet."
  remarks: ''
  example:
  - "The following code example demonstrates displaying the certificate returned by this property.  \n  \n [!code-cpp[NclSslServerSync#6](~/add/codesnippet/cpp/p-system.net.security.ss_1_1.cpp)]\n [!code-cs[NclSslServerSync#6](~/add/codesnippet/csharp/p-system.net.security.ss_1_1.cs)]"
  syntax:
    content: public virtual System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Et X509Certificate-objekt som representerer sertifikatet som er angitt for godkjenning eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis ikke noe sertifikat ble angitt."
  overload: System.Net.Security.SslStream.LocalCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Godkjenning mislyktes eller ikke har startet."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Position
  id: Position
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Position
  nameWithType: SslStream.Position
  fullName: System.Net.Security.SslStream.Position
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Henter eller angir gjeldende plassering i den underliggende dataflyten."
  remarks: "Denne egenskapen returnerer verdien som returneres ved å bruke <xref:System.IO.Stream.Position%2A>for underliggende dataflyten.</xref:System.IO.Stream.Position%2A> Hvis den underliggende dataflyten er søkbar, oppstår denne metoden vanligvis det et unntak. Kjøretid bestemmer underliggende dataflyt hvilken kjøretid unntak som er et."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "A <xref:System.Int64>.</xref:System.Int64>       Gjeldende plassering i den underliggende dataflyten."
  overload: System.Net.Security.SslStream.Position*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Angi denne egenskapen støttes ikke.       - eller - henting av verdien for denne egenskapen støttes ikke når det underliggende er en <xref href=&quot;System.Net.Sockets.NetworkStream&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: SslStream.Read(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Leser data fra denne dataflyten og lagrer den i den angitte matrisen."
  remarks: "Metoden leser maksimalt `count` byte fra dataflyten og lagrer dem i `buffer` Start fra `offset`. Du kan ikke utføre flere samtidige leseoperasjoner.       Du kan ikke kalle denne metoden før du har godkjent. Å godkjenne kallet til den <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, eller <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metoder.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       For å utføre denne operasjonen asynkront, kan du bruke den <xref:System.Net.Security.SslStream.BeginRead%2A>metoden.</xref:System.Net.Security.SslStream.BeginRead%2A>"
  example:
  - "The following code example demonstrates reading from an <xref:System.Net.Security.SslStream>.  \n  \n [!code-cpp[NclSslClientSync#6](~/add/codesnippet/cpp/m-system.net.security.ss_2_1.cpp)]\n [!code-cs[NclSslClientSync#6](~/add/codesnippet/csharp/m-system.net.security.ss_2_1.cs)]"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "En <xref:System.Byte>matrise som mottar byte lest fra denne dataflyten.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "En <xref:System.Int32>som inneholder den nullbaserte plasseringen i `buffer` vil begynne å lagre dataene lese fra denne dataflyten.</xref:System.Int32>"
    - id: count
      type: System.Int32
      description: "En <xref:System.Int32>som inneholder maksimalt antall byte som leses fra denne dataflyten.</xref:System.Int32>"
    return:
      type: System.Int32
      description: "En <xref:System.Int32>verdi som angir antall byte som leses.</xref:System.Int32> Når det er ingen flere data leses, returnerer 0."
  overload: System.Net.Security.SslStream.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; lengden på <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Leseoperasjonen mislyktes. Kontroller det interne unntaket Hvis det finnes for å finne årsaken til feilen."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Det finnes allerede en leseoperasjon pågår."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dette objektet er lukket."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod ikke godkjenning."
  platform:
  - net462
- uid: System.Net.Security.SslStream.ReadTimeout
  id: ReadTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
  fullName: System.Net.Security.SslStream.ReadTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Henter eller angir hvor lang tid en leseoperasjon blokkerer venter data."
  remarks: "Denne egenskapen returnerer verdien som returneres ved å bruke <xref:System.IO.Stream.ReadTimeout%2A>for underliggende dataflyten.</xref:System.IO.Stream.ReadTimeout%2A> Når du angir denne egenskapen i <xref:System.IO.Stream.ReadTimeout%2A>verdien for den underliggende dataflyten er satt til den angitte verdien.</xref:System.IO.Stream.ReadTimeout%2A>       Hvis det underliggende er en <xref:System.Net.Sockets.NetworkStream>, ReadTimeout i millisekunder og er <xref:System.Threading.Timeout.Infinite>som standard slik som lese operasjoner vil ikke tidsavbrudd.</xref:System.Threading.Timeout.Infinite> </xref:System.Net.Sockets.NetworkStream>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/p-system.net.security.ss_18_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/p-system.net.security.ss_18_1.cs)]"
  syntax:
    content: public override int ReadTimeout { get; set; }
    return:
      type: System.Int32
      description: "En <xref:System.Int32>som angir hvor lang tid det skal gå før en synkron lese mislykkes.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.ReadTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.RemoteCertificate
  id: RemoteCertificate
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
  fullName: System.Net.Security.SslStream.RemoteCertificate
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Henter sertifikatet som brukes til å godkjenne det eksterne endepunktet."
  remarks: ''
  example:
  - "The following code example demonstrates displaying the certificate returned by this property.  \n  \n [!code-cpp[NclSslServerSync#6](~/add/codesnippet/cpp/p-system.net.security.ss_15_1.cpp)]\n [!code-cs[NclSslServerSync#6](~/add/codesnippet/csharp/p-system.net.security.ss_15_1.cs)]"
  syntax:
    content: public virtual System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Et X509Certificate-objekt som representerer sertifikatet som er angitt for godkjenning eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis ikke noe sertifikat ble angitt."
  overload: System.Net.Security.SslStream.RemoteCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Godkjenning mislyktes eller ikke har startet."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: SslStream.Seek(Int64,SeekOrigin)
  fullName: System.Net.Security.SslStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Oppstår <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "Ikke kall denne metoden. Den er arvet, men støttes ikke av <xref:System.Net.Security.SslStream>klassen.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Denne verdien blir ignorert."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Denne verdien blir ignorert."
    return:
      type: System.Int64
      description: "Oppstår alltid <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.Security.SslStream.Seek*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Søking støttes ikke av <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> objekter."
  platform:
  - net462
- uid: System.Net.Security.SslStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: SslStream.SetLength(Int64)
  fullName: System.Net.Security.SslStream.SetLength(Int64)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Angir hvor lang den underliggende dataflyten."
  remarks: "Denne metoden aktiverer <xref:System.IO.Stream.SetLength%2A?displayProperty=fullName>for underliggende dataflyten angitt når dette <xref:System.Net.Security.SslStream>ble opprettet.</xref:System.Net.Security.SslStream> </xref:System.IO.Stream.SetLength%2A?displayProperty=fullName>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "En <xref:System.Int64>verdi som angir hvor lang dataflyten.</xref:System.Int64>"
  overload: System.Net.Security.SslStream.SetLength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.SslProtocol
  id: SslProtocol
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
  fullName: System.Net.Security.SslStream.SslProtocol
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Henter en verdi som angir sikkerhetsprotokollen som brukes til å godkjenne denne tilkoblingen."
  remarks: "Sikkerhetsprotokollene som støttes er angitt når den <xref:System.Net.Security.SslStream>er opprettet.</xref:System.Net.Security.SslStream> Hvis ingen sikkerhetsprotokoll ble sendt til konstruktøren, er forekomsten opprettet ved hjelp av <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Faktiske protokollen som brukes for godkjenning velges basert på protokollene som støttes av klienten og serveren."
  example:
  - "The following example displays the security properties of the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_7_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_7_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.SslProtocols SslProtocol { get; }
    return:
      type: System.Security.Authentication.SslProtocols
      description: "Den <xref:System.Security.Authentication.SslProtocols>verdi som Representer protokollen som brukes for godkjenning.</xref:System.Security.Authentication.SslProtocols>"
  overload: System.Net.Security.SslStream.SslProtocol*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.TransportContext
  id: TransportContext
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: TransportContext
  nameWithType: SslStream.TransportContext
  fullName: System.Net.Security.SslStream.TransportContext
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Henter den <xref:System.Net.TransportContext>brukes for godkjenning ved hjelp av Utvidet beskyttelse.</xref:System.Net.TransportContext>"
  syntax:
    content: public System.Net.TransportContext TransportContext { get; }
    return:
      type: System.Net.TransportContext
      description: "Den <xref:System.Net.TransportContext>objekt som inneholder kanal bindingen token (CBT) brukes for Utvidet beskyttelse.</xref:System.Net.TransportContext>"
  overload: System.Net.Security.SslStream.TransportContext*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Write(System.Byte[])
  id: Write(System.Byte[])
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Write(Byte[])
  nameWithType: SslStream.Write(Byte[])
  fullName: System.Net.Security.SslStream.Write(Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Skriver de angitte dataene til denne dataflyten."
  remarks: "Denne metoden blokkerer mens operasjonen er fullført. Hvis du ikke blokkerer mens operasjonen er fullført, kan du bruke den <xref:System.Net.Security.SslStream.BeginWrite%2A>metoden.</xref:System.Net.Security.SslStream.BeginWrite%2A>       Du kan ikke kalle denne metoden før du har godkjent. Å godkjenne kallet til den <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, eller <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metoder.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Den <xref:System.Net.Security.SslStream>klassen støtter ikke flere samtidige skriveoperasjoner.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates writing to an authenticated <xref:System.Net.Security.SslStream>.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/m-system.net.security.ss_3_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/m-system.net.security.ss_3_1.cs)]"
  syntax:
    content: public void Write (byte[] buffer);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "En <xref:System.Byte>matrise som leverer byte skrevet til dataflyten.</xref:System.Byte>"
  overload: System.Net.Security.SslStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Skriveoperasjonen mislyktes."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Det finnes allerede en skriveoperasjon pågår."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dette objektet er lukket."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod ikke godkjenning."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: SslStream.Write(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Skrive det angitte antallet <xref:System.Byte>s til underliggende dataflyt ved hjelp av den angitte bufferen og forskyvning.</xref:System.Byte>"
  remarks: "Denne metoden blokkerer mens operasjonen er fullført. Å hindre blokkering når operasjonen er fullført operasjonen er fullført, kan du bruke den <xref:System.Net.Security.SslStream.BeginWrite%2A>metoden.</xref:System.Net.Security.SslStream.BeginWrite%2A>       Du kan ikke kalle denne metoden før du har godkjent. Å godkjenne kallet til den <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, eller <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metoder.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Den <xref:System.Net.Security.SslStream>klassen støtter ikke flere samtidige skriveoperasjoner.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "En <xref:System.Byte>matrise som leverer byte skrevet til dataflyten.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "En <xref:System.Int32>som inneholder den nullbaserte plasseringen i `buffer` vil begynne å lese byte skrives til dataflyten.</xref:System.Int32>"
    - id: count
      type: System.Int32
      description: "En <xref:System.Int32>som inneholder antall byte som leses fra `buffer`.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; lengden på <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Skriveoperasjonen mislyktes."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Det finnes allerede en skriveoperasjon pågår."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dette objektet er lukket."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod ikke godkjenning."
  platform:
  - net462
- uid: System.Net.Security.SslStream.WriteTimeout
  id: WriteTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
  fullName: System.Net.Security.SslStream.WriteTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Henter eller angir hvor lang tid en skriveoperasjon blokkerer venter data."
  remarks: "Denne egenskapen returnerer verdien som returneres ved å bruke <xref:System.IO.Stream.WriteTimeout%2A>for underliggende dataflyten.</xref:System.IO.Stream.WriteTimeout%2A> Den angitte verdien angir for å angi operasjoner i <xref:System.IO.Stream.WriteTimeout%2A>verdien for den underliggende dataflyten.</xref:System.IO.Stream.WriteTimeout%2A>       Hvis det underliggende er en <xref:System.Net.Sockets.NetworkStream>, WriteTimeout i millisekunder og er <xref:System.Threading.Timeout.Infinite>som standard slik som skrive operasjoner vil ikke tidsavbrudd.</xref:System.Threading.Timeout.Infinite> </xref:System.Net.Sockets.NetworkStream>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/p-system.net.security.ss_12_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/p-system.net.security.ss_12_1.cs)]"
  syntax:
    content: public override int WriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "En <xref:System.Int32>som angir hvor lang tid det skal gå før en synkron skriving operasjonen mislykkes.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.WriteTimeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: System.Net.Security.AuthenticatedStream
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Authentication.AuthenticationException
  parent: System.Security.Authentication
  isExternal: false
  name: AuthenticationException
  nameWithType: AuthenticationException
  fullName: System.Security.Authentication.AuthenticationException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream)
  nameWithType: SslStream.SslStream(Stream)
  fullName: System.Net.Security.SslStream.SslStream(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean)
  nameWithType: SslStream.SslStream(Stream,Boolean)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
- uid: System.Net.Security.RemoteCertificateValidationCallback
  parent: System.Net.Security
  isExternal: false
  name: RemoteCertificateValidationCallback
  nameWithType: RemoteCertificateValidationCallback
  fullName: System.Net.Security.RemoteCertificateValidationCallback
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
- uid: System.Net.Security.LocalCertificateSelectionCallback
  parent: System.Net.Security
  isExternal: false
  name: LocalCertificateSelectionCallback
  nameWithType: LocalCertificateSelectionCallback
  fullName: System.Net.Security.LocalCertificateSelectionCallback
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
- uid: System.Net.Security.EncryptionPolicy
  parent: System.Net.Security
  isExternal: false
  name: EncryptionPolicy
  nameWithType: EncryptionPolicy
  fullName: System.Net.Security.EncryptionPolicy
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient(String)
  nameWithType: SslStream.AuthenticateAsClient(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Security.Authentication.SslProtocols
  parent: System.Security.Authentication
  isExternal: true
  name: SslProtocols
  nameWithType: SslProtocols
  fullName: System.Security.Authentication.SslProtocols
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync(String)
  nameWithType: SslStream.AuthenticateAsClientAsync(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate)
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient(String,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.CanRead
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanRead
  nameWithType: SslStream.CanRead
  fullName: System.Net.Security.SslStream.CanRead
- uid: System.Net.Security.SslStream.CanSeek
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanSeek
  nameWithType: SslStream.CanSeek
  fullName: System.Net.Security.SslStream.CanSeek
- uid: System.Net.Security.SslStream.CanTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
  fullName: System.Net.Security.SslStream.CanTimeout
- uid: System.Net.Security.SslStream.CanWrite
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanWrite
  nameWithType: SslStream.CanWrite
  fullName: System.Net.Security.SslStream.CanWrite
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
  fullName: System.Net.Security.SslStream.CheckCertRevocationStatus
- uid: System.Net.Security.SslStream.CipherAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
  fullName: System.Net.Security.SslStream.CipherAlgorithm
- uid: System.Security.Authentication.CipherAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: CipherAlgorithmType
  nameWithType: CipherAlgorithmType
  fullName: System.Security.Authentication.CipherAlgorithmType
- uid: System.Net.Security.SslStream.CipherStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
  fullName: System.Net.Security.SslStream.CipherStrength
- uid: System.Net.Security.SslStream.Dispose(System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SslStream.Dispose(Boolean)
  fullName: System.Net.Security.SslStream.Dispose(Boolean)
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsClient(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsClient(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult)
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsServer(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsServer(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult)
- uid: System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: SslStream.EndRead(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndRead(IAsyncResult)
- uid: System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: SslStream.EndWrite(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndWrite(IAsyncResult)
- uid: System.Net.Security.SslStream.Flush
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Flush()
  nameWithType: SslStream.Flush()
  fullName: System.Net.Security.SslStream.Flush()
- uid: System.Net.Security.SslStream.HashAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
  fullName: System.Net.Security.SslStream.HashAlgorithm
- uid: System.Security.Authentication.HashAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: HashAlgorithmType
  nameWithType: HashAlgorithmType
  fullName: System.Security.Authentication.HashAlgorithmType
- uid: System.Net.Security.SslStream.HashStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashStrength
  nameWithType: SslStream.HashStrength
  fullName: System.Net.Security.SslStream.HashStrength
- uid: System.Net.Security.SslStream.IsAuthenticated
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
  fullName: System.Net.Security.SslStream.IsAuthenticated
- uid: System.Net.Security.SslStream.IsEncrypted
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
  fullName: System.Net.Security.SslStream.IsEncrypted
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
  fullName: System.Net.Security.SslStream.IsMutuallyAuthenticated
- uid: System.Net.Security.SslStream.IsServer
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsServer
  nameWithType: SslStream.IsServer
  fullName: System.Net.Security.SslStream.IsServer
- uid: System.Net.Security.SslStream.IsSigned
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsSigned
  nameWithType: SslStream.IsSigned
  fullName: System.Net.Security.SslStream.IsSigned
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
  fullName: System.Net.Security.SslStream.KeyExchangeAlgorithm
- uid: System.Security.Authentication.ExchangeAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: ExchangeAlgorithmType
  nameWithType: ExchangeAlgorithmType
  fullName: System.Security.Authentication.ExchangeAlgorithmType
- uid: System.Net.Security.SslStream.KeyExchangeStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
  fullName: System.Net.Security.SslStream.KeyExchangeStrength
- uid: System.Net.Security.SslStream.Length
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Length
  nameWithType: SslStream.Length
  fullName: System.Net.Security.SslStream.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Security.SslStream.LocalCertificate
  parent: System.Net.Security.SslStream
  isExternal: false
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
  fullName: System.Net.Security.SslStream.LocalCertificate
- uid: System.Net.Security.SslStream.Position
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Position
  nameWithType: SslStream.Position
  fullName: System.Net.Security.SslStream.Position
- uid: System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: SslStream.Read(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Read(Byte[],Int32,Int32)
- uid: System.Net.Security.SslStream.ReadTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
  fullName: System.Net.Security.SslStream.ReadTimeout
- uid: System.Net.Security.SslStream.RemoteCertificate
  parent: System.Net.Security.SslStream
  isExternal: false
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
  fullName: System.Net.Security.SslStream.RemoteCertificate
- uid: System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: SslStream.Seek(Int64,SeekOrigin)
  fullName: System.Net.Security.SslStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Net.Security.SslStream.SetLength(System.Int64)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: SslStream.SetLength(Int64)
  fullName: System.Net.Security.SslStream.SetLength(Int64)
- uid: System.Net.Security.SslStream.SslProtocol
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
  fullName: System.Net.Security.SslStream.SslProtocol
- uid: System.Net.Security.SslStream.TransportContext
  parent: System.Net.Security.SslStream
  isExternal: false
  name: TransportContext
  nameWithType: SslStream.TransportContext
  fullName: System.Net.Security.SslStream.TransportContext
- uid: System.Net.TransportContext
  parent: System.Net
  isExternal: true
  name: TransportContext
  nameWithType: TransportContext
  fullName: System.Net.TransportContext
- uid: System.Net.Security.SslStream.Write(System.Byte[])
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write(Byte[])
  nameWithType: SslStream.Write(Byte[])
  fullName: System.Net.Security.SslStream.Write(Byte[])
- uid: System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: SslStream.Write(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Write(Byte[],Int32,Int32)
- uid: System.Net.Security.SslStream.WriteTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
  fullName: System.Net.Security.SslStream.WriteTimeout
- uid: System.Net.Security.SslStream.#ctor*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream
  nameWithType: SslStream.SslStream
- uid: System.Net.Security.SslStream.AuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient
  nameWithType: SslStream.AuthenticateAsClient
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync
  nameWithType: SslStream.AuthenticateAsClientAsync
- uid: System.Net.Security.SslStream.AuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer
  nameWithType: SslStream.AuthenticateAsServer
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync
  nameWithType: SslStream.AuthenticateAsServerAsync
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient
  nameWithType: SslStream.BeginAuthenticateAsClient
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer
  nameWithType: SslStream.BeginAuthenticateAsServer
- uid: System.Net.Security.SslStream.BeginRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginRead
  nameWithType: SslStream.BeginRead
- uid: System.Net.Security.SslStream.BeginWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginWrite
  nameWithType: SslStream.BeginWrite
- uid: System.Net.Security.SslStream.CanRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanRead
  nameWithType: SslStream.CanRead
- uid: System.Net.Security.SslStream.CanSeek*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanSeek
  nameWithType: SslStream.CanSeek
- uid: System.Net.Security.SslStream.CanTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
- uid: System.Net.Security.SslStream.CanWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanWrite
  nameWithType: SslStream.CanWrite
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
- uid: System.Net.Security.SslStream.CipherAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
- uid: System.Net.Security.SslStream.CipherStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
- uid: System.Net.Security.SslStream.Dispose*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Dispose
  nameWithType: SslStream.Dispose
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsClient
  nameWithType: SslStream.EndAuthenticateAsClient
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsServer
  nameWithType: SslStream.EndAuthenticateAsServer
- uid: System.Net.Security.SslStream.EndRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndRead
  nameWithType: SslStream.EndRead
- uid: System.Net.Security.SslStream.EndWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndWrite
  nameWithType: SslStream.EndWrite
- uid: System.Net.Security.SslStream.Flush*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Flush
  nameWithType: SslStream.Flush
- uid: System.Net.Security.SslStream.HashAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
- uid: System.Net.Security.SslStream.HashStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashStrength
  nameWithType: SslStream.HashStrength
- uid: System.Net.Security.SslStream.IsAuthenticated*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
- uid: System.Net.Security.SslStream.IsEncrypted*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
- uid: System.Net.Security.SslStream.IsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsServer
  nameWithType: SslStream.IsServer
- uid: System.Net.Security.SslStream.IsSigned*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsSigned
  nameWithType: SslStream.IsSigned
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
- uid: System.Net.Security.SslStream.KeyExchangeStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
- uid: System.Net.Security.SslStream.Length*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Length
  nameWithType: SslStream.Length
- uid: System.Net.Security.SslStream.LocalCertificate*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
- uid: System.Net.Security.SslStream.Position*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Position
  nameWithType: SslStream.Position
- uid: System.Net.Security.SslStream.Read*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Read
  nameWithType: SslStream.Read
- uid: System.Net.Security.SslStream.ReadTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
- uid: System.Net.Security.SslStream.RemoteCertificate*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
- uid: System.Net.Security.SslStream.Seek*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Seek
  nameWithType: SslStream.Seek
- uid: System.Net.Security.SslStream.SetLength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SetLength
  nameWithType: SslStream.SetLength
- uid: System.Net.Security.SslStream.SslProtocol*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
- uid: System.Net.Security.SslStream.TransportContext*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: TransportContext
  nameWithType: SslStream.TransportContext
- uid: System.Net.Security.SslStream.Write*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write
  nameWithType: SslStream.Write
- uid: System.Net.Security.SslStream.WriteTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
