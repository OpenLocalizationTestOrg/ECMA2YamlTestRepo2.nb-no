### YamlMime:ManagedReference
items:
- uid: System.Management.Instrumentation.ManagementEntityAttribute
  id: ManagementEntityAttribute
  children:
  - System.Management.Instrumentation.ManagementEntityAttribute.#ctor
  - System.Management.Instrumentation.ManagementEntityAttribute.External
  - System.Management.Instrumentation.ManagementEntityAttribute.Name
  - System.Management.Instrumentation.ManagementEntityAttribute.Singleton
  langs:
  - csharp
  name: ManagementEntityAttribute
  nameWithType: ManagementEntityAttribute
  fullName: System.Management.Instrumentation.ManagementEntityAttribute
  type: Class
  summary: "Attributtet ManagementEntity angir en klasse gir informasjon om en WMI-leverandøren.       Obs! regnes nå WMI .NET-bibliotekene i endelig status, og ingen ytterligere development, forbedringer, eller oppdateringer er tilgjengelige for ikke-relaterte sikkerhetsproblemer som påvirker disse bibliotekene. Den [MI APIer](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) skal brukes for alle nye utvikling."
  remarks: "Klassen som er merket av dette attributtet må være felles."
  example:
  - "The following example shows how to use the ManagementEntity attribute to mark a class.  \n  \n```  \n// Use the ManagementEntity attribute on the class to specify that this // class contains management information that is available from  \n// provider.  \n  \n    [ManagementEntity(Name = \"MortgageCalc\")]  \n    public class MortgageCalcWMIProvider  \n    {  \n    }  \n```"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)]

      public sealed class ManagementEntityAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Management.Instrumentation.ManagementEntityAttribute.#ctor
  id: '#ctor'
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  langs:
  - csharp
  name: ManagementEntityAttribute()
  nameWithType: ManagementEntityAttribute.ManagementEntityAttribute()
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.ManagementEntityAttribute()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "Initialiserer en ny forekomst av <xref:System.Management.ManagementEntityAttribute>klassen.</xref:System.Management.ManagementEntityAttribute> Dette er Standardkonstruktøren."
  remarks: "Denne konstruktøren tar ikke en name-parameter. Hvis du ikke angir et navn ved hjelp av den [navnet](~/add/includes/ajax-current-ext-md.md) parameteren navnet på den tilknyttede WMI-klassen som standard navnet på attributed klassen."
  syntax:
    content: public ManagementEntityAttribute ();
    parameters: []
  overload: System.Management.Instrumentation.ManagementEntityAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.Instrumentation.ManagementEntityAttribute.External
  id: External
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  langs:
  - csharp
  name: External
  nameWithType: ManagementEntityAttribute.External
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.External
  type: Property
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "Henter eller angir en verdi som angir om klassen representerer en WMI-klasse i en leverandør implementert eksterne til gjeldende samlingen."
  remarks: "Brukes ved implementering av leverandører som implementerer klasser som utvide eksisterende abstrakte WMI-klasser."
  syntax:
    content: public bool External { get; set; }
    return:
      type: System.Boolean
      description: "En boolsk verdi som SANN hvis klassen representerer en ekstern WMI-klassen og false ellers."
  overload: System.Management.Instrumentation.ManagementEntityAttribute.External*
  exceptions: []
  platform:
  - net462
- uid: System.Management.Instrumentation.ManagementEntityAttribute.Name
  id: Name
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  langs:
  - csharp
  name: Name
  nameWithType: ManagementEntityAttribute.Name
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.Name
  type: Property
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "Henter eller angir navnet på WMI-klassen."
  remarks: "Hvis du ikke angir navnet på WMI-klassen ved å angi denne egenskapen, WMI-klassen som standard til navnet på attributed klassen."
  example:
  - "In the following example, the Name parameter is used to set the name of the WMI class represented by the MortgageCalcWMIProvider class. It sets the name to MortgageCalculator. If the Name parameter is not used, the corresponding C# class name, MortgageCalcWMIProvider in this case, is used as the WMI class name.  \n  \n```  \n[ManagementEntity(Name = \"MortgageCalculator\")]  \npublic class MortgageCalcWMIProvider  \n{  \n}  \n```"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "En streng som inneholder navnet på WMI-klassen."
  overload: System.Management.Instrumentation.ManagementEntityAttribute.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Management.Instrumentation.ManagementEntityAttribute.Singleton
  id: Singleton
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  langs:
  - csharp
  name: Singleton
  nameWithType: ManagementEntityAttribute.Singleton
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.Singleton
  type: Property
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "Angir om den tilknyttede klassen representerer en singleton WMI-klassen."
  remarks: "En singleton WMI-klassen er en som det kan bare skulle være for en enkelt forekomst. Selv om du kan code logikken for å sikre at bare én forekomst av en WMI-klasse noensinne er opprettet, leveres attributten parameteren foreta oppgaven enkel og konsekvent.       Når du arbeider med singleton WMI-klasser, må klientprogrammer bruker spesiell syntaks. For mer informasjon, kan du se Describing en forekomst objektbanen emnet i det elektroniske MSDN-biblioteket på [http://www.msdn.com](http://www.msdn.com/)."
  example:
  - "The following code snippet demonstrates how to use the Singleton parameter to indicate that a C# class corresponds to a singleton WMI class.  \n  \n```  \n[ManagementEntity(Singleton=true)]  \npublic class SingletonSample  \n```  \n  \n For a complete, working example of a provider that implements a singleton class, see [How to: Create a Basic Decoupled Provider](http://msdn.microsoft.com/en-us/1dabd442-c1ff-40a1-bb0e-d7b3566c2300)."
  syntax:
    content: public bool Singleton { get; set; }
    return:
      type: System.Boolean
      description: "En boolsk verdi som SANN hvis klassen representerer en singleton WMI-klassen, og false ellers."
  overload: System.Management.Instrumentation.ManagementEntityAttribute.Singleton*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Management.Instrumentation.ManagementEntityAttribute.#ctor
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: ManagementEntityAttribute()
  nameWithType: ManagementEntityAttribute.ManagementEntityAttribute()
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.ManagementEntityAttribute()
- uid: System.Management.Instrumentation.ManagementEntityAttribute.External
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: External
  nameWithType: ManagementEntityAttribute.External
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.External
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Management.Instrumentation.ManagementEntityAttribute.Name
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: Name
  nameWithType: ManagementEntityAttribute.Name
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Management.Instrumentation.ManagementEntityAttribute.Singleton
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: Singleton
  nameWithType: ManagementEntityAttribute.Singleton
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.Singleton
- uid: System.Management.Instrumentation.ManagementEntityAttribute.#ctor*
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: ManagementEntityAttribute
  nameWithType: ManagementEntityAttribute.ManagementEntityAttribute
- uid: System.Management.Instrumentation.ManagementEntityAttribute.External*
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: External
  nameWithType: ManagementEntityAttribute.External
- uid: System.Management.Instrumentation.ManagementEntityAttribute.Name*
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: Name
  nameWithType: ManagementEntityAttribute.Name
- uid: System.Management.Instrumentation.ManagementEntityAttribute.Singleton*
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: Singleton
  nameWithType: ManagementEntityAttribute.Singleton
