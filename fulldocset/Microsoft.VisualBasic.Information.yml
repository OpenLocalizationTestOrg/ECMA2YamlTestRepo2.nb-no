### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Information
  id: Information
  children:
  - Microsoft.VisualBasic.Information.Erl
  - Microsoft.VisualBasic.Information.Err
  - Microsoft.VisualBasic.Information.IsArray(System.Object)
  - Microsoft.VisualBasic.Information.IsDate(System.Object)
  - Microsoft.VisualBasic.Information.IsDBNull(System.Object)
  - Microsoft.VisualBasic.Information.IsError(System.Object)
  - Microsoft.VisualBasic.Information.IsNothing(System.Object)
  - Microsoft.VisualBasic.Information.IsNumeric(System.Object)
  - Microsoft.VisualBasic.Information.IsReference(System.Object)
  - Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)
  - Microsoft.VisualBasic.Information.QBColor(System.Int32)
  - Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)
  - Microsoft.VisualBasic.Information.SystemTypeName(System.String)
  - Microsoft.VisualBasic.Information.TypeName(System.Object)
  - Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)
  - Microsoft.VisualBasic.Information.VarType(System.Object)
  - Microsoft.VisualBasic.Information.VbTypeName(System.String)
  langs:
  - csharp
  name: Information
  nameWithType: Information
  fullName: Microsoft.VisualBasic.Information
  type: Class
  summary: "Den <xref uid=&quot;langword_csharp_Information&quot; name=&quot;Information&quot; href=&quot;&quot;> </xref> modulen inneholder prosedyrer som brukes til å returnere teste mot eller Bekreft informasjon."
  remarks: "Denne modulen støtter nøkkelord i Visual Basic språk og kjøretid biblioteket medlemmer som feilinformasjon validere dataene, Fastsett grenser for matrise og hente informasjon om data type og farge."
  example:
  - "The following example uses the `VbTypeName` function to return data type names for several variables.  \n  \n```  \nDim sysDateName As String = \"System.DateTime\"  \nDim sysShortName As String = \"Int16\"  \nDim sysBadName As String = \"Nonsense\"  \nDim testVbName As String  \ntestVbName = VbTypeName(sysDateName)   \n' Returns \"Date\".  \ntestVbName = VbTypeName(sysShortName)   \n' Returns \"Short\".  \ntestVbName = VbTypeName(sysBadName)   \n' Returns Nothing.  \n```"
  syntax:
    content: >-
      [Microsoft.VisualBasic.CompilerServices.StandardModule]

      public sealed class Information
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.Erl
  id: Erl
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: Erl()
  nameWithType: Information.Erl()
  fullName: Microsoft.VisualBasic.Information.Erl()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer et heltall som angir linjenummeret for den siste setningen kjøres. Skrivebeskyttet."
  remarks: "Hvis Visual Basic finner ingen linjenummer, returneres 0."
  example:
  - "This example uses the `Erl` property to indicate the line number.  \n  \n [!code-vb[VbVbalrErrorHandling#6](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._209_1.vb)]"
  syntax:
    content: public static int Erl ();
    parameters: []
    return:
      type: System.Int32
      description: "Returnerer et heltall som angir linjenummeret for den siste setningen kjøres. Skrivebeskyttet."
  overload: Microsoft.VisualBasic.Information.Erl*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.Err
  id: Err
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: Err()
  nameWithType: Information.Err()
  fullName: Microsoft.VisualBasic.Information.Err()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Inneholder informasjon om kjøretidsfeil."
  remarks: "Egenskaper for det `Err` objekt er angitt av generatoren av en feil, Visual Basic, et objekt eller i programmer.       Når en kjøretidsfeil oppstår, egenskapene for den `Err` objekt er fylt med informasjon som identifiserer feilen, og du kan bruke til å håndtere feilen. For å generere en kjøretidsfeil i koden, kan du bruke den `Raise` metoden.       Den `Err` objektegenskapene tilbakestilles til null eller tomme strenger (&quot;&quot;) etter en `Exit Sub`, `Exit Function`, `Exit Property`, eller `Resume Next` -setningen inni en feilbehandling rutine. Ved hjelp av noen form for den `Resume` setning utenfor en feilbehandling rutinen ikke vil tilbakestille den `Err` objektets egenskaper. Du kan bruke den `Clear` metode for å tilbakestille eksplisitt `Err`.       Bruk av `Raise` metoden i stedet for den `Error` setningen for å generere kjøretidsfeil for systemfeil og klasse moduler. Avgjørelsen om du vil bruke den `Raise` metoden i annen kode, avhenger av informasjonen du vil returnere-funksjonalitet.       Den `Err` objektet er et indre objekt med globale omfang. Du trenger derfor ikke opprette en forekomst av den i koden."
  example:
  - "This example uses the properties of the `Err` object in constructing an error-message dialog box. Notice that if you use the `Clear` method first, when you generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.  \n  \n [!code-vb[VbVbalrErrorHandling#3](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._32_1.vb)]"
  syntax:
    content: public static Microsoft.VisualBasic.ErrObject Err ();
    parameters: []
    return:
      type: Microsoft.VisualBasic.ErrObject
      description: "Inneholder informasjon om kjøretidsfeil."
  overload: Microsoft.VisualBasic.Information.Err*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.IsArray(System.Object)
  id: IsArray(System.Object)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: IsArray(Object)
  nameWithType: Information.IsArray(Object)
  fullName: Microsoft.VisualBasic.Information.IsArray(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> verdi som angir om en variabel viser til en matrise."
  remarks: '`IsArray`Returnerer `True` Hvis variabelen peker til en matrise; ellers returneres `False`. `IsArray`er spesielt nyttig med objekter som kan inneholde matriser.'
  example:
  - "This example uses the `IsArray` function to check if several variables refer to an array.  \n  \n [!code-vb[VbVbalrFunctions#34](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._76_1.vb)]"
  syntax:
    content: public static bool IsArray (object VarName);
    parameters:
    - id: VarName
      type: System.Object
      description: "Kreves. <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>variabel."
    return:
      type: System.Boolean
      description: "Returnerer en <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> verdi som angir om en variabel viser til en matrise."
  overload: Microsoft.VisualBasic.Information.IsArray*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.IsDate(System.Object)
  id: IsDate(System.Object)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: IsDate(Object)
  nameWithType: Information.IsDate(Object)
  fullName: Microsoft.VisualBasic.Information.IsDate(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> verdi som angir om et uttrykk representerer en gyldig <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> verdi."
  remarks: "`IsDate`Returnerer `True` Hvis `Expression` av den <xref:System.DateTime>data type eller kan konverteres til den; hvis ikke, returneres `False`.</xref:System.DateTime>       Den <xref:System.DateTime>datatypen inneholder både en verdi for dato og klokkeslett-verdi.</xref:System.DateTime> `IsDate`Returnerer `True` Hvis `Expression` representerer en gyldig dato, et gyldig klokkeslett eller en gyldig dato og klokkeslett."
  example:
  - "The following example uses the `IsDate` function to determine if several variables represent valid <xref:System.DateTime> values.  \n  \n [!code-vb[VbVbalrFunctions#35](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._9_1.vb)]  \n  \n In the preceding example, `IsDate` returns `True` for the first four calls and `False` for the last call."
  syntax:
    content: public static bool IsDate (object Expression);
    parameters:
    - id: Expression
      type: System.Object
      description: "Kreves. <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>uttrykket."
    return:
      type: System.Boolean
      description: "Returnerer en <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> verdi som angir om et uttrykk representerer en gyldig <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> verdi."
  overload: Microsoft.VisualBasic.Information.IsDate*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.IsDBNull(System.Object)
  id: IsDBNull(System.Object)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: IsDBNull(Object)
  nameWithType: Information.IsDBNull(Object)
  fullName: Microsoft.VisualBasic.Information.IsDBNull(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> verdi som angir om et uttrykk som evalueres til den <xref href=&quot;System.DBNull&quot;> </xref> klasse."
  remarks: "`IsDBNull`Returnerer `True` Hvis datatypen for `Expression` evalueres til den <xref:System.DBNull>typen; ellers `IsDBNull` returnerer `False`.</xref:System.DBNull>       Den <xref:System.DBNull?displayProperty=fullName>verdien angir som den `Object` representerer mangler eller er ikke-eksisterende data.</xref:System.DBNull?displayProperty=fullName> `DBNull`er ikke lik `Nothing`, noe som angir at en variabel ikke enda er initialisert. `DBNull`er heller ikke identisk med en tom streng (`&quot;&quot;`), som noen ganger kalles en nullstreng."
  example:
  - "This example uses the `IsDBNull` function to determine if a variable evaluates to `DBNull`.  \n  \n [!code-vb[VbVbalrFunctions#36](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._101_1.vb)]"
  syntax:
    content: public static bool IsDBNull (object Expression);
    parameters:
    - id: Expression
      type: System.Object
      description: "Kreves. <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>uttrykket."
    return:
      type: System.Boolean
      description: "Returnerer en <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> verdi som angir om et uttrykk som evalueres til den <xref href=&quot;System.DBNull&quot;> </xref> klasse."
  overload: Microsoft.VisualBasic.Information.IsDBNull*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.IsError(System.Object)
  id: IsError(System.Object)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: IsError(Object)
  nameWithType: Information.IsError(Object)
  fullName: Microsoft.VisualBasic.Information.IsError(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> verdi som angir om et uttrykk som er en Unntakstype."
  remarks: "`IsError`Returnerer `True` hvis uttrykket representerer en `Object` variabel som er avledet fra den <xref:System.Exception>klasse i den <xref:System>navneområde.</xref:System> </xref:System.Exception>       Et unntak som er avledet fra <xref:System.Exception?displayProperty=fullName>kan bli tatt med i `Try...Catch...Finally` setninger.</xref:System.Exception?displayProperty=fullName>"
  example:
  - "The following example uses the `IsError` function to check if an expression represents a system exception.  \n  \n [!code-vb[VbVbalrFunctions#37](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._164_1.vb)]"
  syntax:
    content: public static bool IsError (object Expression);
    parameters:
    - id: Expression
      type: System.Object
      description: "Kreves. <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>uttrykket."
    return:
      type: System.Boolean
      description: "Returnerer en <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> verdi som angir om et uttrykk som er en Unntakstype."
  overload: Microsoft.VisualBasic.Information.IsError*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.IsNothing(System.Object)
  id: IsNothing(System.Object)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: IsNothing(Object)
  nameWithType: Information.IsNothing(Object)
  fullName: Microsoft.VisualBasic.Information.IsNothing(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> verdi som angir om et uttrykk som har ingen objekter som er tilordnet."
  remarks: "`IsNothing`Returnerer `True` hvis uttrykket representerer en objektvariabel for som har ingen objekt tilordnet til den; ellers, returneres `False`.       `IsNothing`skal fungere på referansetyper. Verditypen kan ikke inneholde en verdi og går tilbake til standardverdien hvis du tilordner `Nothing` til den. Hvis du angir en verditype i `Expression`, `IsNothing` returnerer alltid `False`."
  example:
  - "The following example uses the `IsNothing` function to determine if an object variable is associated with any object instance.  \n  \n [!code-vb[VbVbalrFunctions#38](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._149_1.vb)]"
  syntax:
    content: public static bool IsNothing (object Expression);
    parameters:
    - id: Expression
      type: System.Object
      description: "Kreves. <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>uttrykket."
    return:
      type: System.Boolean
      description: "Returnerer en <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> verdi som angir om et uttrykk som har ingen objekter som er tilordnet."
  overload: Microsoft.VisualBasic.Information.IsNothing*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.IsNumeric(System.Object)
  id: IsNumeric(System.Object)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: IsNumeric(Object)
  nameWithType: Information.IsNumeric(Object)
  fullName: Microsoft.VisualBasic.Information.IsNumeric(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> verdi som angir om et uttrykk kan evalueres som et tall."
  remarks: "`IsNumeric`returns `True` if the data type of `Expression` is `Boolean`, `Byte`, `Decimal`, `Double`, `Integer`, `Long`, `SByte`, `Short`, `Single`, `UInteger`, `ULong`, or `UShort`. Returnerer også `True` Hvis `Expression` er en `Char`, `String`, eller `Object` som kan være ble konvertert til et tall. `Expression`kan inneholde ikke-numeriske tegn. `IsNumeric`Returnerer `True` Hvis `Expression` er en streng som inneholder et ugyldig heksadesimalt eller oktale tall. `IsNumeric`returnerer også `True` Hvis `Expression` inneholder et ugyldig numerisk uttrykk som begynner med en + eller - tegn eller inneholder komma.       `IsNumeric`Returnerer `False` Hvis `Expression` er av datatypen `Date`. Returnerer den `False` Hvis `Expression` er en `Char`, `String`, eller `Object` som ble ikke kan konverteres til et tall."
  example:
  - "The following example uses the `IsNumeric` function to determine if the contents of a variable can be evaluated as a number.  \n  \n [!code-vb[VbVbalrFunctions#39](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._137_1.vb)]"
  syntax:
    content: public static bool IsNumeric (object Expression);
    parameters:
    - id: Expression
      type: System.Object
      description: "Kreves. <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>uttrykket."
    return:
      type: System.Boolean
      description: "Returnerer en <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> verdi som angir om et uttrykk kan evalueres som et tall."
  overload: Microsoft.VisualBasic.Information.IsNumeric*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.IsReference(System.Object)
  id: IsReference(System.Object)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: IsReference(Object)
  nameWithType: Information.IsReference(Object)
  fullName: Microsoft.VisualBasic.Information.IsReference(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> verdi som angir om et uttrykk som evalueres til en referansetype."
  remarks: "`IsReference`Returnerer `True` Hvis `Expression` representerer en referansetype, for eksempel en klasseforekomsten en `String` type eller en matrise av en annen type, ellers returneres `False`.       En referansetype inneholder en peker til lagrede sted i minnet. Verditypen inneholder sine egne data."
  example:
  - "This example uses the `IsReference` function to check if several variables refer to reference types.  \n  \n [!code-vb[VbVbalrFunctions#40](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._142_1.vb)]  \n  \n In the preceding example, the first three calls to `IsReference` return `True`. The last call returns `False`, because `Integer` is a value type, not a reference type."
  syntax:
    content: public static bool IsReference (object Expression);
    parameters:
    - id: Expression
      type: System.Object
      description: "Kreves. <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>uttrykket."
    return:
      type: System.Boolean
      description: "Returnerer en <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> verdi som angir om et uttrykk som evalueres til en referansetype."
  overload: Microsoft.VisualBasic.Information.IsReference*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)
  id: LBound(System.Array,System.Int32)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: LBound(Array,Int32)
  nameWithType: Information.LBound(Array,Int32)
  fullName: Microsoft.VisualBasic.Information.LBound(Array,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer den laveste tilgjengelig senket for den angitte dimensjonen i en matrise."
  remarks: "Etter at tabellmatrisen senket begynner på 0, den laveste tilgjengelig senket for hver dimensjon er alltid 0.       For en matrise med følgende dimensjoner `LBound` returnerer verdiene i følgende tabell: ```vb#   Dim a(100, 5, 4) As Byte   ``` | Kall til LBound | Returverdi |   |--------------------|------------------|   | `LBound(a, 1)`|0|   | `LBound(a, 2)`|0|   | `LBound(a, 3)`|0|"
  example:
  - "The following example uses the `LBound` function to determine the lowest available subscript for the indicated dimension of an array.  \n  \n [!code-vb[VbVbalrFunctions#41](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._241_1.vb)]"
  syntax:
    content: public static int LBound (Array Array, int Rank = 1);
    parameters:
    - id: Array
      type: System.Array
      description: "Kreves. Matrise med en datatype. Matrisen som du vil finne den laveste mulige senket i en dimensjon."
    - id: Rank
      type: System.Int32
      description: "Valgfritt. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. Dimensjonen for laveste mulige senket som skal returneres. Bruk 1 for den første dimensjonen, 2 for andre og så videre. Hvis `Rank` er utelates, brukes 1."
    return:
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. Den laveste verdien senket for den angitte dimensjonen kan inneholde. <xref uid=&quot;langword_csharp_LBound&quot; name=&quot;LBound&quot; href=&quot;&quot;></xref>returnerer alltid 0 så lenge <code> Array </code> er initialisert, selv om det er ingen elementer, for eksempel hvis det er en tom streng. If <code>Array</code> is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_LBound&quot; name=&quot;LBound&quot; href=&quot;&quot;></xref> throws an <xref:System.ArgumentNullException>.</xref:System.ArgumentNullException>"
  overload: Microsoft.VisualBasic.Information.LBound*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>Array</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.RankException
    commentId: T:System.RankException
    description: "<code>Rank</code>mindre enn 1, eller <code>Rank</code> er større enn rangeringen av <code>Array</code>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.QBColor(System.Int32)
  id: QBColor(System.Int32)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: QBColor(Int32)
  nameWithType: Information.QBColor(Int32)
  fullName: Microsoft.VisualBasic.Information.QBColor(Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> verdien som representerer RGB farge som tilsvarer den angitte farge tallet."
  remarks: "Starter med den minst signifikante byten, angir den returnerte verdien røde, grønne og blå verdiene som brukes til å angi riktig farge i RGB systemet som brukes i Visual Basic-språket.       Den `Color` argumentet har disse innstillingene.      | Antall | Farge | Antall | Farge |   |------------|-----------|------------|-----------|   |&0; | Svart |&8; | Grått |   |&1; | Blå |&9; | Lys blå |   |&2; | Grønn |&10; | Lys grønn |   |&3; | Cyan |&11; | Lette cyan |   |&4; | Red |&12; | Lys red |   |&5; | Magenta |&13; | Lys magenta |   |&6; | Gul |&14; | Lys gul |   |&7; | Bare |&15; | Klare bare |"
  example:
  - "This example uses the `QBColor` function to change to the color indicated by `colorInteger`. `QBColor` accepts integer values between 0 and 15.  \n  \n [!code-vb[VbVbalrCatRef#29](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._29_1.vb)]"
  syntax:
    content: public static int QBColor (int Color);
    parameters:
    - id: Color
      type: System.Int32
      description: "Kreves. Et heltall i området 0 – 15."
    return:
      type: System.Int32
      description: "Returnerer en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> verdien som representerer RGB farge som tilsvarer den angitte farge tallet."
  overload: Microsoft.VisualBasic.Information.QBColor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Color</code>er utenfor området 0 til 15, med."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)
  id: RGB(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: RGB(Int32,Int32,Int32)
  nameWithType: Information.RGB(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.Information.RGB(Int32,Int32,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> verdien som representerer RGB-fargeverdien fra et sett med rødt, grønne og blå fargekomponenter."
  remarks: "Programmet metoder og egenskaper som godtar en fargespesifikasjon forventer at spesifikasjonen er et tall som representerer en RGB farge verdien. RGB-fargeverdien angir den relative intensiteten i røde, grønne og blå slik at en bestemt farge som skal vises.       Hvis verdien for et argument for `RGB` er større enn 255, 255 brukes.       Tabellen nedenfor viser noen standard farger og røde, grønne og blå verdiene de inneholder.      | Farge | Røde verdien | Grønn verdien | Blå verdien |   |-----------|---------------|-----------------|----------------|   | Svart |&0; |&0; |&0; |   | Blå |&0; |&0; |&255; |   | Grønn |&0; |&255; |&0; |   | Cyan |&0; |&255; |&255; |   | Red |&255; |&0; |&0; |   | Magenta |&255; |&0; |&255; |   | Gul |&255; |&255; |&0; |   | Bare |&255; |&255; |&255; |"
  example:
  - "This example shows how the `RGB` function is used to return a whole number representing an `RGB` color value.  \n  \n [!code-vb[VbVbalrCatRef#18](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._89_1.vb)]"
  syntax:
    content: public static int RGB (int Red, int Green, int Blue);
    parameters:
    - id: Red
      type: System.Int32
      description: "Kreves. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>i området 0-255, representerer som intensiteten i den røde komponenten av farge."
    - id: Green
      type: System.Int32
      description: "Kreves. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>i området 0-255, representerer som intensiteten i den grønne komponenten av farge."
    - id: Blue
      type: System.Int32
      description: "Kreves. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>i området 0-255, representerer som intensiteten i blå komponenten av farge."
    return:
      type: System.Int32
      description: "Returnerer en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> verdien som representerer RGB-fargeverdien fra et sett med rødt, grønne og blå fargekomponenter."
  overload: Microsoft.VisualBasic.Information.RGB*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Green</code>, <code>Blue</code>, eller <code>Red</code> er utenfor området 0 til 255."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.SystemTypeName(System.String)
  id: SystemTypeName(System.String)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: SystemTypeName(String)
  nameWithType: Information.SystemTypeName(String)
  fullName: Microsoft.VisualBasic.Information.SystemTypeName(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> verdi som inneholder data typen systemnavnet for en variabel."
  remarks: '`SystemTypeName`Returnerer fullstendige common language runtime (CLR) typenavnet svarer til navnet på Visual Basic. For eksempel hvis `VbName` inneholder &quot;Dato&quot; `SystemTypeName` returnerer &quot;System.DateTime&quot;. Hvis `SystemTypeName` gjenkjenner ikke verdien for `VbName`, returneres `Nothing` (ikke strengen &quot;Ingenting&quot;).'
  example:
  - "The following example uses the `SystemTypeName` function to return data type names for several variables.  \n  \n [!code-vb[VbVbalrFunctions#49](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._174_1.vb)]"
  syntax:
    content: public static string SystemTypeName (string VbName);
    parameters:
    - id: VbName
      type: System.String
      description: "Kreves. En <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> variabel som inneholder et typenavn i Visual Basic."
    return:
      type: System.String
      description: "Returnerer en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> verdi som inneholder data typen systemnavnet for en variabel."
  overload: Microsoft.VisualBasic.Information.SystemTypeName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.TypeName(System.Object)
  id: TypeName(System.Object)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: TypeName(Object)
  nameWithType: Information.TypeName(Object)
  fullName: Microsoft.VisualBasic.Information.TypeName(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> verdi som inneholder datatypen informasjon om en variabel."
  remarks: "Tabellen nedenfor viser den `String` verdiene som returneres av `TypeName` for forskjellige innholdet i `VarName`.      | `VarName` innholdet | Strengen som returneres |   |------------------------|---------------------|   | 16-biters `True` eller `False` verditype | &quot; Boolsk &quot;|   | 8-biters binærverdi typen | &quot; Byte &quot;|   | 16-biters tegn verditypen | &quot; CHAR &quot;|   | 64-biters dato og klokkeslett verditype | &quot; Datoen &quot;|   | Referansetype som angir mangler eller er ikke-eksisterende data | &quot; DBNull &quot;|   | 128-biters faste punkt numerisk verditypen | &quot; Decimal &quot;|   | 64-biters flyttall numerisk verditypen | &quot; Doble &quot;|   | 32-biters heltall verditypen | &quot; Heltall &quot;|   | Referansetype peker til et unspecialized objekt | &quot; Objektet &quot;|   | Referansetype peker til en spesialiserte objektet er opprettet fra klassen *objectclass*| &quot; *objectclass*&quot;|   | 64-biters heltall verditypen | &quot; Lang &quot;|   | Referansetype med ingen objekter som er tilordnet | &quot; Ingenting &quot;|   | 8-biters heltall med fortegn verditypen | &quot; SByte &quot;|   | 16-biters heltall verditypen | &quot; Kort &quot;|   | 32-biters flyttall numerisk verditypen | &quot; Enkelt &quot;|   | Referansetype peker til en tegnstreng 16-biters | &quot; Strengen &quot;|   | 32-biters heltall uten fortegn verditypen | &quot; UInteger &quot;|   | 64-biters heltall uten fortegn verditypen | &quot; ULong &quot;|   | 16-biters heltall uten fortegn verditypen | &quot; UShort &quot;|       Hvis `VarName` er en matrise returnerte strengen kan være en av strenger i tabellen ovenfor med tomme parenteser legges. For eksempel hvis `VarName` peker til en matrise med heltall, `TypeName` returnerer &quot;Integer()&quot;.       Når `TypeName` returnerer navnet på en referansetype den returnerer bare navnet seg selv, ikke det kvalifiserte navnet som en klasse. For eksempel hvis `VarName` peker til et objekt av klassen <xref:System.Drawing.Printing.PaperSource?displayProperty=fullName>, `TypeName` returnerer &quot;PaperSource&quot;.</xref:System.Drawing.Printing.PaperSource?displayProperty=fullName> Merk at hvis variabelen er deklarert til å være en bestemt type klasse, men har ikke et objekt som er tilordnet, `TypeName` returnerer &quot;Ingenting&quot;."
  example:
  - "The following example uses the `TypeName` function to return data type information about several variables.  \n  \n [!code-vb[VbVbalrFunctions#52](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._131_1.vb)]"
  syntax:
    content: public static string TypeName (object VarName);
    parameters:
    - id: VarName
      type: System.Object
      description: "Kreves. <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>variabel. Hvis <xref uid=&quot;langword_csharp_Option Strict&quot; name=&quot;Option Strict&quot; href=&quot;&quot;> </xref> er <xref uid=&quot;langword_csharp_Off&quot; name=&quot;Off&quot; href=&quot;&quot;> </xref>, kan du sende en variabel fra alle datatyper bortsett fra en struktur."
    return:
      type: System.String
      description: "Returnerer en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> verdi som inneholder datatypen informasjon om en variabel."
  overload: Microsoft.VisualBasic.Information.TypeName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)
  id: UBound(System.Array,System.Int32)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: UBound(Array,Int32)
  nameWithType: Information.UBound(Array,Int32)
  fullName: Microsoft.VisualBasic.Information.UBound(Array,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer den høyeste tilgjengelige senket for den angitte dimensjonen i en matrise."
  remarks: "Since array subscripts start at 0, the length of a dimension is greater by one than the highest available subscript for that dimension.  \n  \n For an array with the following dimensions, `UBound` returns the values in the following table:  \n  \n```vb#  \nDim a(100, 5, 4) As Byte  \n```  \n  \n|Call to UBound|Return value|  \n|--------------------|------------------|  \n|`UBound(a, 1)`|100|  \n|`UBound(a, 2)`|5|  \n|`UBound(a, 3)`|4|  \n  \n You can use `UBound` to determine the total number of elements in an array, but you must adjust the value it returns to account for the fact that the subscripts start at 0. The following example calculates the total size of the array `a` in the preceding example:  \n  \n```vb#  \nDim total As Integer  \ntotal = (UBound(A, 1) + 1) * (UBound(A, 2) + 1) * (UBound(A, 3) + 1)  \n```  \n  \n The value calculated for `total` is 3030, which is 101 * 6 \\* 5."
  example:
  - "The following example uses the `UBound` function to determine the highest available subscript for the indicated dimension of an array.  \n  \n [!code-vb[VbVbalrFunctions#53](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._136_1.vb)]"
  syntax:
    content: public static int UBound (Array Array, int Rank = 1);
    parameters:
    - id: Array
      type: System.Array
      description: "Kreves. Matrise med en datatype. Matrisen som du vil finne den høyeste mulige senket i en dimensjon."
    - id: Rank
      type: System.Int32
      description: "Valgfritt. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. Dimensjonen for høyeste mulige senket som skal returneres. Bruk 1 for den første dimensjonen, 2 for andre og så videre. Hvis `Rank` er utelates, brukes 1."
    return:
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. Den høyeste verdien senket for den angitte dimensjonen kan inneholde. Hvis <code> Array </code> har bare ett element, <xref uid=&quot;langword_csharp_UBound&quot; name=&quot;UBound&quot; href=&quot;&quot;> </xref> returnerer 0. Hvis <code> Array </code> har ingen elementer, for eksempel hvis det er en tom streng <xref uid=&quot;langword_csharp_UBound&quot; name=&quot;UBound&quot; href=&quot;&quot;> </xref> returnerer -1."
  overload: Microsoft.VisualBasic.Information.UBound*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>Array</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.RankException
    commentId: T:System.RankException
    description: "<code>Rank</code>er mindre enn 1 eller <code>Rank</code> er større enn rangeringen av <code>Array</code>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.VarType(System.Object)
  id: VarType(System.Object)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: VarType(Object)
  nameWithType: Information.VarType(Object)
  fullName: Microsoft.VisualBasic.Information.VarType(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> verdi som inneholder typen dataklassifiserings til en variabel."
  remarks: "Heltallsverdien som returneres av `VarType` er medlem av <xref:Microsoft.VisualBasic.VariantType>.</xref:Microsoft.VisualBasic.VariantType>       Tabellen nedenfor viser verdiene som returneres av `VarType` for spesielle tilfeller av `VarName`.      | Datatypen som er representert av `VarName`| Verdien som returneres av `VarType`|   |----------------------------------------|---------------------------------|   | [Nothing](~/add/includes/ajax-current-ext-md.md)|`VariantType.Object`|   | <xref:System.DBNull>| `VariantType.Null`|   | Opplisting | Underlying data type (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, or `ULong`)|   | Matrise | Eller bitvis av elementet matrisetype og `VariantType.Array`|   | Matrise med matriser | Eller bitvis av `VariantType.Object` og `VariantType.Array`|   | Strukturen (<xref:System.ValueType?displayProperty=fullName>) |`VariantType.UserDefinedType`|   | <xref:System.Exception>| `VariantType.Error`|   | Ukjent | `VariantType.Object`|</xref:System.Exception></xref:System.ValueType?displayProperty=fullName></xref:System.DBNull>"
  example:
  - "The following example uses the `VarType` function to return data type classification information about several variables.  \n  \n [!code-vb[VbVbalrFunctions#55](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._179_1.vb)]"
  syntax:
    content: public static Microsoft.VisualBasic.VariantType VarType (object VarName);
    parameters:
    - id: VarName
      type: System.Object
      description: "Kreves. <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>variabel. Hvis <xref uid=&quot;langword_csharp_Option Strict&quot; name=&quot;Option Strict&quot; href=&quot;&quot;> </xref> er <xref uid=&quot;langword_csharp_Off&quot; name=&quot;Off&quot; href=&quot;&quot;> </xref>, kan du sende en variabel fra alle datatyper bortsett fra en struktur."
    return:
      type: Microsoft.VisualBasic.VariantType
      description: "Returnerer en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> verdi som inneholder typen dataklassifiserings til en variabel."
  overload: Microsoft.VisualBasic.Information.VarType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Information.VbTypeName(System.String)
  id: VbTypeName(System.String)
  parent: Microsoft.VisualBasic.Information
  langs:
  - csharp
  name: VbTypeName(String)
  nameWithType: Information.VbTypeName(String)
  fullName: Microsoft.VisualBasic.Information.VbTypeName(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> verdi som inneholder typenavn i Visual Basic data til en variabel."
  remarks: "`VbTypeName`Returnerer navnet på Visual Basic tilsvarer common language runtime navnet på. For eksempel hvis `UrtName` inneholder &quot;Int32&quot; eller &quot;System.Int32&quot; `VbTypeName` returnerer &quot;Heltall&quot;. Hvis `VbTypeName` gjenkjenner ikke verdien for `UrtName`, returneres `Nothing` (ikke strengen &quot;Ingenting&quot;).       Typenavn i `UrtName` kan hentes fra forskjellige kilder, for eksempel fra <xref:System.Reflection.MemberInfo.Name%2A>egenskapen i en <xref:System.Reflection.MemberInfo>matrise av <xref:System.Type>klasse.</xref:System.Type> </xref:System.Reflection.MemberInfo> </xref:System.Reflection.MemberInfo.Name%2A>"
  example:
  - "The following example uses the `VbTypeName` function to return data type names for several variables.  \n  \n [!code-vb[VbVbalrFunctions#56](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._152_1.vb)]"
  syntax:
    content: public static string VbTypeName (string UrtName);
    parameters:
    - id: UrtName
      type: System.String
      description: "Kreves. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>variabel som inneholder et typenavn som brukes av common language runtime."
    return:
      type: System.String
      description: "Returnerer en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> verdi som inneholder typenavn i Visual Basic data til en variabel."
  overload: Microsoft.VisualBasic.Information.VbTypeName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.RankException
  isExternal: true
  name: System.RankException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: Microsoft.VisualBasic.Information.Erl
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: Erl()
  nameWithType: Information.Erl()
  fullName: Microsoft.VisualBasic.Information.Erl()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.Information.Err
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: Err()
  nameWithType: Information.Err()
  fullName: Microsoft.VisualBasic.Information.Err()
- uid: Microsoft.VisualBasic.ErrObject
  parent: Microsoft.VisualBasic
  isExternal: false
  name: ErrObject
  nameWithType: ErrObject
  fullName: Microsoft.VisualBasic.ErrObject
- uid: Microsoft.VisualBasic.Information.IsArray(System.Object)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsArray(Object)
  nameWithType: Information.IsArray(Object)
  fullName: Microsoft.VisualBasic.Information.IsArray(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.Information.IsDate(System.Object)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsDate(Object)
  nameWithType: Information.IsDate(Object)
  fullName: Microsoft.VisualBasic.Information.IsDate(Object)
- uid: Microsoft.VisualBasic.Information.IsDBNull(System.Object)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsDBNull(Object)
  nameWithType: Information.IsDBNull(Object)
  fullName: Microsoft.VisualBasic.Information.IsDBNull(Object)
- uid: Microsoft.VisualBasic.Information.IsError(System.Object)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsError(Object)
  nameWithType: Information.IsError(Object)
  fullName: Microsoft.VisualBasic.Information.IsError(Object)
- uid: Microsoft.VisualBasic.Information.IsNothing(System.Object)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsNothing(Object)
  nameWithType: Information.IsNothing(Object)
  fullName: Microsoft.VisualBasic.Information.IsNothing(Object)
- uid: Microsoft.VisualBasic.Information.IsNumeric(System.Object)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsNumeric(Object)
  nameWithType: Information.IsNumeric(Object)
  fullName: Microsoft.VisualBasic.Information.IsNumeric(Object)
- uid: Microsoft.VisualBasic.Information.IsReference(System.Object)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsReference(Object)
  nameWithType: Information.IsReference(Object)
  fullName: Microsoft.VisualBasic.Information.IsReference(Object)
- uid: Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: LBound(Array,Int32)
  nameWithType: Information.LBound(Array,Int32)
  fullName: Microsoft.VisualBasic.Information.LBound(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: Microsoft.VisualBasic.Information.QBColor(System.Int32)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: QBColor(Int32)
  nameWithType: Information.QBColor(Int32)
  fullName: Microsoft.VisualBasic.Information.QBColor(Int32)
- uid: Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: RGB(Int32,Int32,Int32)
  nameWithType: Information.RGB(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.Information.RGB(Int32,Int32,Int32)
- uid: Microsoft.VisualBasic.Information.SystemTypeName(System.String)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: SystemTypeName(String)
  nameWithType: Information.SystemTypeName(String)
  fullName: Microsoft.VisualBasic.Information.SystemTypeName(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Information.TypeName(System.Object)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: TypeName(Object)
  nameWithType: Information.TypeName(Object)
  fullName: Microsoft.VisualBasic.Information.TypeName(Object)
- uid: Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: UBound(Array,Int32)
  nameWithType: Information.UBound(Array,Int32)
  fullName: Microsoft.VisualBasic.Information.UBound(Array,Int32)
- uid: Microsoft.VisualBasic.Information.VarType(System.Object)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: VarType(Object)
  nameWithType: Information.VarType(Object)
  fullName: Microsoft.VisualBasic.Information.VarType(Object)
- uid: Microsoft.VisualBasic.VariantType
  parent: Microsoft.VisualBasic
  isExternal: false
  name: VariantType
  nameWithType: VariantType
  fullName: Microsoft.VisualBasic.VariantType
- uid: Microsoft.VisualBasic.Information.VbTypeName(System.String)
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: VbTypeName(String)
  nameWithType: Information.VbTypeName(String)
  fullName: Microsoft.VisualBasic.Information.VbTypeName(String)
- uid: Microsoft.VisualBasic.Information.Erl*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: Erl
  nameWithType: Information.Erl
- uid: Microsoft.VisualBasic.Information.Err*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: Err
  nameWithType: Information.Err
- uid: Microsoft.VisualBasic.Information.IsArray*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsArray
  nameWithType: Information.IsArray
- uid: Microsoft.VisualBasic.Information.IsDate*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsDate
  nameWithType: Information.IsDate
- uid: Microsoft.VisualBasic.Information.IsDBNull*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsDBNull
  nameWithType: Information.IsDBNull
- uid: Microsoft.VisualBasic.Information.IsError*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsError
  nameWithType: Information.IsError
- uid: Microsoft.VisualBasic.Information.IsNothing*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsNothing
  nameWithType: Information.IsNothing
- uid: Microsoft.VisualBasic.Information.IsNumeric*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsNumeric
  nameWithType: Information.IsNumeric
- uid: Microsoft.VisualBasic.Information.IsReference*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: IsReference
  nameWithType: Information.IsReference
- uid: Microsoft.VisualBasic.Information.LBound*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: LBound
  nameWithType: Information.LBound
- uid: Microsoft.VisualBasic.Information.QBColor*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: QBColor
  nameWithType: Information.QBColor
- uid: Microsoft.VisualBasic.Information.RGB*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: RGB
  nameWithType: Information.RGB
- uid: Microsoft.VisualBasic.Information.SystemTypeName*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: SystemTypeName
  nameWithType: Information.SystemTypeName
- uid: Microsoft.VisualBasic.Information.TypeName*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: TypeName
  nameWithType: Information.TypeName
- uid: Microsoft.VisualBasic.Information.UBound*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: UBound
  nameWithType: Information.UBound
- uid: Microsoft.VisualBasic.Information.VarType*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: VarType
  nameWithType: Information.VarType
- uid: Microsoft.VisualBasic.Information.VbTypeName*
  parent: Microsoft.VisualBasic.Information
  isExternal: false
  name: VbTypeName
  nameWithType: Information.VbTypeName
