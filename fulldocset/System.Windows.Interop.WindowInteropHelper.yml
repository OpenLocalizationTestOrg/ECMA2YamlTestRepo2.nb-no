### YamlMime:ManagedReference
items:
- uid: System.Windows.Interop.WindowInteropHelper
  id: WindowInteropHelper
  children:
  - System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)
  - System.Windows.Interop.WindowInteropHelper.EnsureHandle
  - System.Windows.Interop.WindowInteropHelper.Handle
  - System.Windows.Interop.WindowInteropHelper.Owner
  langs:
  - csharp
  name: WindowInteropHelper
  nameWithType: WindowInteropHelper
  fullName: System.Windows.Interop.WindowInteropHelper
  type: Class
  summary: "Hjelper bruken mellom [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] og [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] kode."
  remarks: "Medlemmer av denne klassen kan oppkalleren intern tilgang til den [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] HWND og overordnet HWND for en [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window>.</xref:System.Windows.Window>  De riktige sikkerhetskontrollene utføres av medlemmene.       Bruk denne klassen når du trenger et mer spesifikke objekt basert på HWND.       Et eksempelscenario er Hvis du skal være vert for en [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] dialogboksen i en [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] programmet. Initialiser WindowInteropHelper med en [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] vinduet for dialogboksen objekter. Deretter kan du få den [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] vinduets håndtaket (HWND) fra den <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A>egenskapen og angi eieren av den [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] vinduet med den <xref:System.Windows.Interop.WindowInteropHelper.Owner%2A>egenskapen.</xref:System.Windows.Interop.WindowInteropHelper.Owner%2A> </xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> Følgende kodeeksempel viser hvordan du bruker WindowInteropHelper når vert for en [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] dialogboksen i en [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] programmet.       [!code-cs[CorePseudocode #WindowInteropHelper](~/add/codesnippet/csharp/CorePseudocode/corepseudocode.cs#windowinterophelper)][!code-vb[CorePseudocode #WindowInteropHelper](~/add/codesnippet/visualbasic/corepseudocode/corepseudocode.vb#windowinterophelper) ] et annet scenario som støttes av denne klassen, er å bruke en <xref:System.Windows.Interop.HwndSource>objekt fra en [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window>objektet.</xref:System.Windows.Window> </xref:System.Windows.Interop.HwndSource>   Den <xref:System.Windows.Interop.HwndSource>aktiverer direkte behandling av [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] meldinger gjennom den <xref:System.Windows.Interop.HwndSource.AddHook%2A>metoden.</xref:System.Windows.Interop.HwndSource.AddHook%2A> </xref:System.Windows.Interop.HwndSource> Ved hjelp av <xref:System.Windows.Interop.HwndSource>og <xref:System.Windows.Interop.HwndSource.AddHook%2A>i stedet for en <xref:System.Windows.Window>du kan fremdeles behandle meldinger som har ikke tilsvarende eller håndtering i [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)].</xref:System.Windows.Window> </xref:System.Windows.Interop.HwndSource.AddHook%2A> </xref:System.Windows.Interop.HwndSource> Opprett en WindowInteropHelper <xref:System.Windows.Window>kilde, kall <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A>på WindowInteropHelper fra HWND til <xref:System.Windows.Interop.HwndSource>.</xref:System.Windows.Interop.HwndSource> </xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> </xref:System.Windows.Window>"
  syntax:
    content: public sealed class WindowInteropHelper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)
  id: '#ctor(System.Windows.Window)'
  parent: System.Windows.Interop.WindowInteropHelper
  langs:
  - csharp
  name: WindowInteropHelper(Window)
  nameWithType: WindowInteropHelper.WindowInteropHelper(Window)
  fullName: System.Windows.Interop.WindowInteropHelper.WindowInteropHelper(Window)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Windows.Interop.WindowInteropHelper&quot;> </xref> klasse for et angitt [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] vinduet."
  remarks: "Vinduet kan være en dialogboks eller et vindu som ikke passer ellers for som vert i grensene for en [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] programmet."
  syntax:
    content: public WindowInteropHelper (System.Windows.Window window);
    parameters:
    - id: window
      type: System.Windows.Window
      description: "En [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] Windows-objekt."
  overload: System.Windows.Interop.WindowInteropHelper.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.WindowInteropHelper.EnsureHandle
  id: EnsureHandle
  parent: System.Windows.Interop.WindowInteropHelper
  langs:
  - csharp
  name: EnsureHandle()
  nameWithType: WindowInteropHelper.EnsureHandle()
  fullName: System.Windows.Interop.WindowInteropHelper.EnsureHandle()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Oppretter HWND i vinduet hvis HWND ikke har blitt opprettet ennå."
  remarks: "Bruk metoden EnsureHandle når du ønsker å skille håndtaket (HWND) oppretting faktiske vises for forvaltet <xref:System.Windows.Window>.</xref:System.Windows.Window> Dette er nyttig når du har en automatiseringsklient som kan utføre aktivitetene uten å måtte vises et vindu.       Hvis vinduet opprinnelig ikke har blitt opprettet, denne metoden, oppretter opprinnelig vinduet, angir du <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A>egenskap, og returnerer HWND.</xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> Hvis vinduet opprinnelig er allerede opprettet, returneres håndtaket for det eksisterende opprinnelig vinduet.       Hvis vinduet opprinnelig opprettes som et resultat av kalle denne metoden den <xref:System.Windows.Window.SourceInitialized>denne hendelsen oppstår.</xref:System.Windows.Window.SourceInitialized>       Spørring av <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A>egenskapen etter metoden EnsureHandle kalles returnerer eksisterende vinduet håndtaket.</xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> Visual treet er ikke koblet til vindu før etter den <xref:System.Windows.Window.Show%2A>-metoden.</xref:System.Windows.Window.Show%2A>       Ny vinduet håndtak kan ikke opprette å kalle metoden EnsureHandle mer enn én gang. Kaller metoden EnsureHandle når referansen er allerede opprettet av et kall til den <xref:System.Windows.Window.Show%2A>metoden ikke opprette et nytt vindushåndtak.</xref:System.Windows.Window.Show%2A> En opprinnelig vindu opprettes bare når det finnes ingen referanse når metoden EnsureHandle kalles.       Egenskaper for vindu som angis ved hjelp av opprinnelig vinduet APIer via p/invoke kan ikke forekomme i vinduet forvaltet APIer. Hvis du har angitt vinduet skal øverste ved hjelp av flagget opprinnelig MS_EX_TOPMOST når EnsureHandle-metoden kalles, for eksempel den <xref:System.Windows.Window.Topmost%2A>egenskapen garanteres ikke å gjenspeile innstillingen opprinnelig.</xref:System.Windows.Window.Topmost%2A>"
  syntax:
    content: public IntPtr EnsureHandle ();
    parameters: []
    return:
      type: System.IntPtr
      description: "En <xref:System.IntPtr>som representerer HWND.</xref:System.IntPtr>"
  overload: System.Windows.Interop.WindowInteropHelper.EnsureHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.WindowInteropHelper.Handle
  id: Handle
  parent: System.Windows.Interop.WindowInteropHelper
  langs:
  - csharp
  name: Handle
  nameWithType: WindowInteropHelper.Handle
  fullName: System.Windows.Interop.WindowInteropHelper.Handle
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Henter den vindusreferansen for en [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] vindu som brukes til å opprette dette <xref href=&quot;System.Windows.Interop.WindowInteropHelper&quot;> </xref>."
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "Den [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] vinduet håndtaket (HWND)."
  overload: System.Windows.Interop.WindowInteropHelper.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.WindowInteropHelper.Owner
  id: Owner
  parent: System.Windows.Interop.WindowInteropHelper
  langs:
  - csharp
  name: Owner
  nameWithType: WindowInteropHelper.Owner
  fullName: System.Windows.Interop.WindowInteropHelper.Owner
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Henter eller angir behandlingen av den [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] eiervinduet."
  remarks: "Du kan reparent windows ved å angi denne egenskapen. Som gjelder for generell [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] programming, ikke reparent windows som allerede er i bruk."
  syntax:
    content: public IntPtr Owner { get; set; }
    return:
      type: System.IntPtr
      description: "Eieren vinduet håndtaket (HWND)."
  overload: System.Windows.Interop.WindowInteropHelper.Owner*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)
  parent: System.Windows.Interop.WindowInteropHelper
  isExternal: false
  name: WindowInteropHelper(Window)
  nameWithType: WindowInteropHelper.WindowInteropHelper(Window)
  fullName: System.Windows.Interop.WindowInteropHelper.WindowInteropHelper(Window)
- uid: System.Windows.Window
  parent: System.Windows
  isExternal: false
  name: Window
  nameWithType: Window
  fullName: System.Windows.Window
- uid: System.Windows.Interop.WindowInteropHelper.EnsureHandle
  parent: System.Windows.Interop.WindowInteropHelper
  isExternal: false
  name: EnsureHandle()
  nameWithType: WindowInteropHelper.EnsureHandle()
  fullName: System.Windows.Interop.WindowInteropHelper.EnsureHandle()
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Interop.WindowInteropHelper.Handle
  parent: System.Windows.Interop.WindowInteropHelper
  isExternal: false
  name: Handle
  nameWithType: WindowInteropHelper.Handle
  fullName: System.Windows.Interop.WindowInteropHelper.Handle
- uid: System.Windows.Interop.WindowInteropHelper.Owner
  parent: System.Windows.Interop.WindowInteropHelper
  isExternal: false
  name: Owner
  nameWithType: WindowInteropHelper.Owner
  fullName: System.Windows.Interop.WindowInteropHelper.Owner
- uid: System.Windows.Interop.WindowInteropHelper.#ctor*
  parent: System.Windows.Interop.WindowInteropHelper
  isExternal: false
  name: WindowInteropHelper
  nameWithType: WindowInteropHelper.WindowInteropHelper
- uid: System.Windows.Interop.WindowInteropHelper.EnsureHandle*
  parent: System.Windows.Interop.WindowInteropHelper
  isExternal: false
  name: EnsureHandle
  nameWithType: WindowInteropHelper.EnsureHandle
- uid: System.Windows.Interop.WindowInteropHelper.Handle*
  parent: System.Windows.Interop.WindowInteropHelper
  isExternal: false
  name: Handle
  nameWithType: WindowInteropHelper.Handle
- uid: System.Windows.Interop.WindowInteropHelper.Owner*
  parent: System.Windows.Interop.WindowInteropHelper
  isExternal: false
  name: Owner
  nameWithType: WindowInteropHelper.Owner
