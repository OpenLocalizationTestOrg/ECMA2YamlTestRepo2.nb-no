### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  id: EncryptedKeyIdentifierClause
  children:
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString
  langs:
  - csharp
  name: EncryptedKeyIdentifierClause
  nameWithType: EncryptedKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  type: Class
  summary: "Representerer en nøkkel-ID-setningsdel som identifiserer en kryptert nøkkel."
  remarks: "EncryptedKeyIdentifierClause trenger vanligvis ikke som skal brukes, enn når en egendefinert Sikkerhetstokentjenesten er opprettet. Når en sikkerhetstokentjenesten returnerer en sikkerhetskode, inneholder utstedte sikkerhetstokenet referanser til vedlagte og er tilknyttet sikkerhetstokener. Vedlagte referansene refererer til sikkerhetstokener som finnes i sikkerhetshodet for en SOAP-melding, og er tilknyttet referanser er sikkerhetstokener som er inkludert i sikkerhetshodet for en SOAP-melding. Disse referansene vanligvis bekrefter at utstedte sikkerhetstokenet. Bruk EncryptedKeyIdentifierClause-klasse for å referere til en nøkkel som er kryptert. Den <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A>metoden returnerer den krypterte nøkkelen.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A>       [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]godtar innpakket nøkler som korrekt utformet i forhold til wire-formatet. Nøkkelen brytes algoritmen som er angitt på nettet godkjennes og brukes. Det er ikke bekreftet for å være kompatibel med den <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>angitt av endepunktet.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: 'public sealed class EncryptedKeyIdentifierClause : System.IdentityModel.Tokens.BinaryKeyIdentifierClause'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)
  id: '#ctor(System.Byte[],System.String)'
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: EncryptedKeyIdentifierClause(Byte[],String)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&quot;> </xref> klasse ved hjelp av den angitte nøkkelen som er kryptert og kryptografiske algoritmen som brukes til å kryptere nøkkelen."
  remarks: "Bruk statiske konstanten strenger i den <xref:System.IdentityModel.Tokens.SecurityAlgorithms>til å angi kryptografiske algoritmen for den `encryptionMethod` parameteren.</xref:System.IdentityModel.Tokens.SecurityAlgorithms>"
  syntax:
    content: public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod);
    parameters:
    - id: encryptedKey
      type: System.Byte[]
      description: "En matrise av <xref:System.Byte>som inneholder en nøkkel som er kryptert.</xref:System.Byte> Angir verdien som er returnert fra den <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>metoden.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>"
    - id: encryptionMethod
      type: System.String
      description: "Den kryptografiske algoritmen som brukes til å kryptere nøkkelen. Angir verdien for den <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>egenskapen.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>encryptionMethod</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>encryptedKey</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>encryptedKey</code>er nullengde."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: '#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)'
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&quot;> </xref> klasse ved hjelp av den angitte nøkkelen som er kryptert kryptografiske algoritmen som brukes til å kryptere nøkkelen og en nøkkel-ID for kryptering nøkkel."
  remarks: "Bruk statiske konstanten strenger i den <xref:System.IdentityModel.Tokens.SecurityAlgorithms>til å angi kryptografiske algoritmen for den `encryptionMethod` parameteren.</xref:System.IdentityModel.Tokens.SecurityAlgorithms>"
  syntax:
    content: public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier);
    parameters:
    - id: encryptedKey
      type: System.Byte[]
      description: "En matrise av <xref:System.Byte>som inneholder en nøkkel som er kryptert.</xref:System.Byte> Angir verdien som er returnert fra den <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>metoden.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>"
    - id: encryptionMethod
      type: System.String
      description: "Den kryptografiske algoritmen som brukes til å kryptere nøkkelen. Angir verdien for den <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>egenskapen.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>"
    - id: encryptingKeyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "En <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> som representerer nøkkel-ID for kryptering nøkkelen som er angitt i den `encryptedKey` parameteren. Angir verdien for den <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*>egenskapen.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*>"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>encryptionMethod</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>encryptedKey</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>encryptedKey</code>er nullengde."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)
  id: '#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)'
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&quot;> </xref> klasse ved hjelp av den angitte nøkkelen som er kryptert kryptografiske algoritmen som brukes til å kryptere nøkkelen, en nøkkel-ID for nøkkelen kryptering og lesbare navn."
  remarks: "Bruk statiske konstanten strenger i den <xref:System.IdentityModel.Tokens.SecurityAlgorithms>til å angi kryptografiske algoritmen for den `encryptionMethod` parameteren.</xref:System.IdentityModel.Tokens.SecurityAlgorithms>"
  syntax:
    content: public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName);
    parameters:
    - id: encryptedKey
      type: System.Byte[]
      description: "En matrise av <xref:System.Byte>som inneholder en nøkkel som er kryptert.</xref:System.Byte> Angir verdien som er returnert fra den <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>metoden.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>"
    - id: encryptionMethod
      type: System.String
      description: "Den kryptografiske algoritmen som brukes til å kryptere nøkkelen. Angir verdien for den <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>egenskapen.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>"
    - id: encryptingKeyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "En <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> som representerer nøkkel-ID for kryptering nøkkel angitt i den `encryptedKey` parameteren. Angir verdien for den <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*>egenskapen.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*>"
    - id: carriedKeyName
      type: System.String
      description: "En lesbare navn som er forbundet med nøkkel angitt i den `encryptedKey` parameteren. Angir verdien for den <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*>egenskapen.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*>"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>encryptionMethod</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>encryptedKey</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>encryptedKey</code>er nullengde."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)
  id: '#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)'
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String,Byte[],Int32)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String,Byte[],Int32)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String,Byte[],Int32)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&quot;> </xref> klasse ved hjelp av den angitte nøkkelen som er kryptert kryptografiske algoritmen som brukes til å kryptere nøkkelen, en nøkkel-ID for nøkkelen og lesbare navn."
  remarks: "Når den `derivationNonce` og `derivationLength` parametere er angitt implisitte avledede nøkkelen brukes i stedet for direkte sikkerhetsnøkkelen for tokenet.       Bruk statiske konstanten strenger i den <xref:System.IdentityModel.Tokens.SecurityAlgorithms>til å angi kryptografiske algoritmen for den `encryptionMethod` parameteren.</xref:System.IdentityModel.Tokens.SecurityAlgorithms>"
  syntax:
    content: public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName, byte[] derivationNonce, int derivationLength);
    parameters:
    - id: encryptedKey
      type: System.Byte[]
      description: "En matrise av <xref:System.Byte>som inneholder en nøkkel som er kryptert.</xref:System.Byte> Angir verdien som er returnert fra den <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>metoden.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>"
    - id: encryptionMethod
      type: System.String
      description: "Den kryptografiske algoritmen som brukes til å kryptere nøkkelen. Angir verdien for den <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>egenskapen.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>"
    - id: encryptingKeyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "En <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> som representerer nøkkel-ID for nøkkelen som er angitt i den `encryptedKey` parameteren. Angir verdien for den <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*>egenskapen.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*>"
    - id: carriedKeyName
      type: System.String
      description: "En lesbare navn som er forbundet med nøkkel angitt i den `encryptedKey` parameteren. Angir verdien for den <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*>egenskapen.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*>"
    - id: derivationNonce
      type: System.Byte[]
      description: "En matrise av <xref:System.Byte>som inneholder den midlertidige IDen som ble brukt til å opprette en avledet nøkkel.</xref:System.Byte> Angir verdien som returneres av den <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*>metoden.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*>"
    - id: derivationLength
      type: System.Int32
      description: "Størrelsen på avledede nøkkelen. Angir verdien for den <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*>egenskapen.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*>"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>encryptionMethod</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>encryptedKey</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>encryptedKey</code>er nullengde."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName
  id: CarriedKeyName
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: CarriedKeyName
  nameWithType: EncryptedKeyIdentifierClause.CarriedKeyName
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Henter en lesbare navn som er knyttet til den krypterte nøkkelen."
  remarks: "Når egenskapen CarriedKeyName serialiseres til XML, er plassert i den `CarriedKeyName`> elementet. For krypterte nøkler i `CarriedKeyName`> elementet er et valgfritt element som knytter lesbare navn nøkkelverdien. Dette navnet kan deretter brukes til å referere til nøkkelen bruker den `KeyName`> elementet i den `KeyInfo`> elementet. Den samme `CarriedKeyName`> elementverdi, i motsetning til ID-verdien, kan oppstå flere ganger i et enkelt dokument. Verdien for nøkkelen må være lik i alle `EncryptedKey`> elementer med samme `CarriedKeyName`> navnet i et XML-dokument."
  syntax:
    content: public string CarriedKeyName { get; }
    return:
      type: System.String
      description: "Et lesbare navn som er knyttet til den krypterte nøkkelen."
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  id: EncryptingKeyIdentifier
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: EncryptingKeyIdentifier
  nameWithType: EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Henter en nøkkel-ID for kryptering nøkkel."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyIdentifier EncryptingKeyIdentifier { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "En <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> som representerer nøkkel-ID for kryptering nøkkel."
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod
  id: EncryptionMethod
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: EncryptionMethod
  nameWithType: EncryptedKeyIdentifierClause.EncryptionMethod
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Henter den kryptografiske algoritmen som brukes til å kryptere nøkkelen."
  remarks: "Verdien for egenskapen EncryptrionMethod er vanligvis en statisk konstant strenger i <xref:System.IdentityModel.Tokens.SecurityAlgorithms>klasse.</xref:System.IdentityModel.Tokens.SecurityAlgorithms>"
  syntax:
    content: public string EncryptionMethod { get; }
    return:
      type: System.String
      description: "Den kryptografiske algoritmen som brukes til å kryptere nøkkelen."
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey
  id: GetEncryptedKey
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: GetEncryptedKey()
  nameWithType: EncryptedKeyIdentifierClause.GetEncryptedKey()
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Henter den krypterte nøkkelen."
  remarks: "Matrisen som er returnert av metoden GetEncryptedKey er en kopi av den krypterte nøkkelen."
  syntax:
    content: public byte[] GetEncryptedKey ();
    parameters: []
    return:
      type: System.Byte[]
      description: "En matrise av <xref:System.Byte>som inneholder den krypterte nøkkelen.</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: EncryptedKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Returnerer en verdi som angir om nøkkel-ID for denne forekomsten, tilsvarer angitt nøkkel-ID-setningsdelen."
  syntax:
    content: public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "En <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> til å sammenligne."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <code> keyIdentifierClause </code> er av typen <xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&quot;> </xref> og har samme kryptert nøkkel, krypteringsmetoden og lesbare navn som gjeldende forekomst; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)
  id: Matches(System.Byte[],System.String,System.String)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: Matches(Byte[],String,String)
  nameWithType: EncryptedKeyIdentifierClause.Matches(Byte[],String,String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(Byte[],String,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Returnerer en verdi som angir om nøkkel-ID for denne forekomsten er lik den angitte krypterte nøkkelen, krypteringsmetoden og lesbare navn."
  syntax:
    content: public bool Matches (byte[] encryptedKey, string encryptionMethod, string carriedKeyName);
    parameters:
    - id: encryptedKey
      type: System.Byte[]
      description: "En matrise av <xref:System.Byte>som inneholder en nøkkel som er kryptert.</xref:System.Byte>"
    - id: encryptionMethod
      type: System.String
      description: "Den kryptografiske algoritmen som brukes til å kryptere nøkkelen."
    - id: carriedKeyName
      type: System.String
      description: "Et lesbare navn som er knyttet til den krypterte nøkkelen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den <code> encryptedKey </code>, <code> encryptionMethod </code> og <code> carriedKeyName </code> parametere har samme verdiene som returneres av den <> </> *> metoden og <> </> *> og <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*>Egenskaper, henholdsvis; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*>"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString
  id: ToString
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: ToString()
  nameWithType: EncryptedKeyIdentifierClause.ToString()
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Returnerer en streng som representerer gjeldende objekt."
  remarks: "Metoden ToString returnerer en streng som inneholder den krypterte nøkkelen og kryptografiske algoritmen som brukes til å kryptere nøkkelen."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Det gjeldende objektet."
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptedKeyIdentifierClause(Byte[],String)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String)
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String,Byte[],Int32)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String,Byte[],Int32)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String,Byte[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: CarriedKeyName
  nameWithType: EncryptedKeyIdentifierClause.CarriedKeyName
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptingKeyIdentifier
  nameWithType: EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptionMethod
  nameWithType: EncryptedKeyIdentifierClause.EncryptionMethod
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: GetEncryptedKey()
  nameWithType: EncryptedKeyIdentifierClause.GetEncryptedKey()
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey()
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: EncryptedKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: Matches(Byte[],String,String)
  nameWithType: EncryptedKeyIdentifierClause.Matches(Byte[],String,String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(Byte[],String,String)
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: ToString()
  nameWithType: EncryptedKeyIdentifierClause.ToString()
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString()
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptedKeyIdentifierClause
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: CarriedKeyName
  nameWithType: EncryptedKeyIdentifierClause.CarriedKeyName
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptingKeyIdentifier
  nameWithType: EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptionMethod
  nameWithType: EncryptedKeyIdentifierClause.EncryptionMethod
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: GetEncryptedKey
  nameWithType: EncryptedKeyIdentifierClause.GetEncryptedKey
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: Matches
  nameWithType: EncryptedKeyIdentifierClause.Matches
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: ToString
  nameWithType: EncryptedKeyIdentifierClause.ToString
