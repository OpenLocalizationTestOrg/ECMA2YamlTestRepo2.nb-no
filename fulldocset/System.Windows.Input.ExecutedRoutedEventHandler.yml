### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.ExecutedRoutedEventHandler
  id: ExecutedRoutedEventHandler
  langs:
  - csharp
  name: ExecutedRoutedEventHandler
  nameWithType: ExecutedRoutedEventHandler
  fullName: System.Windows.Input.ExecutedRoutedEventHandler
  type: Delegate
  summary: "Representerer metoden som håndterer den <xref href=&quot;System.Windows.Input.CommandBinding.Executed&quot;> </xref> og <xref href=&quot;System.Windows.Input.CommandBinding.PreviewExecuted&quot;> </xref> rutet hendelser samt relaterte vedlagte hendelser."
  remarks: "Denne representanten inneholder implementering logikken for <xref:System.Windows.Input.RoutedCommand>.</xref:System.Windows.Input.RoutedCommand>  Tillater kommandoen som skal startes fra forskjellige kilder og typer skiller logikken implementering av kommandoen, og aktiverer hjelp av sentralisering av kommandoen logikken.       Denne representanten brukes også for <xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName>og <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=fullName>, som er tilknyttet hendelser i den <xref:System.Windows.Input.CommandManager>klassen som implementerer mye styrende infrastrukturen.</xref:System.Windows.Input.CommandManager> </xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=fullName> </xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName> Men mest praktisk behandlingsprogrammer håndterer den <xref:System.Windows.Input.CommandBinding.Executed>hendelser fra en bestemt <xref:System.Windows.Input.CommandBinding>, heller enn fungerer på den <xref:System.Windows.Input.CommandManager>nivå.</xref:System.Windows.Input.CommandManager> </xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding.Executed>       I <xref:System.Windows.Input.ExecutedRoutedEventArgs>, følgende egenskaper er vanligvis interessante når du skriver et hendelsesbehandling for en distribuert handlingen som er resultatet av en utført kommando:- <xref:System.Windows.RoutedEventArgs.Source%2A>rapporter målet der kommandoen ble utført.</xref:System.Windows.RoutedEventArgs.Source%2A> </xref:System.Windows.Input.ExecutedRoutedEventArgs> Når kommandoen er utført, kan du også se på den <xref:System.Windows.RoutedEventArgs.Source%2A>mer vanligvis i rutet hendelsen vilkår, som objektet som starter en distribuert hendelse.</xref:System.Windows.RoutedEventArgs.Source%2A>      - <xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A>rapporter kommandoen som utføres.</xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A> Dette er nyttig hvis du bruker kommandoen bindinger, og hvis du skrive behandlingsprogrammer som håndterer potensielt flere kommandoer.      - <xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A>rapporter kommandoen bestemte parametere som ble sendt av kommandoen kjøres.</xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> Ikke alle kommandoer som bruker eller forventer at kommandoen-spesifikke parametere.      - <xref:System.Windows.RoutedEventArgs.Handled%2A>rapporter om rutet hendelsen som er resultatet av utført kommando allerede ble behandlet av et annet element langs ruten.</xref:System.Windows.RoutedEventArgs.Handled%2A> Det er anbefalt praksis har behandlingsprogrammer som arbeider betydning når behandling av hendelsen som skal angis for distribuert hendelsesbehandling <xref:System.Windows.RoutedEventArgs.Handled%2A>til `true`.</xref:System.Windows.RoutedEventArgs.Handled%2A> Dette hindrer vanlige behandlingsprogrammer for hendelsen behandler hendelsen fremtidige nytt langs ruten. Hvis du vil ha mer informasjon om behandling distribuert hendelser, se [merke rutet hendelser som Handled og behandling av klassen](~/add/includes/ajax-current-ext-md.md).       Denne representanten også representerer behandlingsprogrammer for <xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName>og <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=fullName>, som er tilknyttet hendelser i den <xref:System.Windows.Input.CommandManager>klassen som implementerer mye styrende infrastrukturen.</xref:System.Windows.Input.CommandManager> </xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=fullName> </xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName> Men mest praktisk behandlingsprogrammer håndterer den <xref:System.Windows.Input.CommandBinding.Executed>hendelser fra en bestemt <xref:System.Windows.Input.CommandBinding>, heller enn fungerer på den <xref:System.Windows.Input.CommandManager>nivå.</xref:System.Windows.Input.CommandManager> </xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding.Executed>       Hvis du vil ha mer informasjon om tiltrekker seg, se [tiltrekker seg oversikt over](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This example creates an ExecutedRoutedEventHandler that sets a visual property on the target when the command is executed. The example also includes the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> for the same command.  \n  \n [!code-vb[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/add/codesnippet/visualbasic/custom_routedcommand/window1.xaml.vb#custom_routedcommandhandlers)]\n [!code-cs[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/add/codesnippet/csharp/Custom_RoutedCommand/Window1.xaml.cs#custom_routedcommandhandlers)]"
  syntax:
    content: public delegate void ExecutedRoutedEventHandler(object sender, ExecutedRoutedEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
