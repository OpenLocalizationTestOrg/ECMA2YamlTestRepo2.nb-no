### YamlMime:ManagedReference
items:
- uid: System.Net.ServicePointManager
  id: ServicePointManager
  children:
  - System.Net.ServicePointManager.CertificatePolicy
  - System.Net.ServicePointManager.CheckCertificateRevocationList
  - System.Net.ServicePointManager.DefaultConnectionLimit
  - System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit
  - System.Net.ServicePointManager.DefaultPersistentConnectionLimit
  - System.Net.ServicePointManager.DnsRefreshTimeout
  - System.Net.ServicePointManager.EnableDnsRoundRobin
  - System.Net.ServicePointManager.EncryptionPolicy
  - System.Net.ServicePointManager.Expect100Continue
  - System.Net.ServicePointManager.FindServicePoint(System.Uri)
  - System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)
  - System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)
  - System.Net.ServicePointManager.MaxServicePointIdleTime
  - System.Net.ServicePointManager.MaxServicePoints
  - System.Net.ServicePointManager.ReusePort
  - System.Net.ServicePointManager.SecurityProtocol
  - System.Net.ServicePointManager.ServerCertificateValidationCallback
  - System.Net.ServicePointManager.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  - System.Net.ServicePointManager.UseNagleAlgorithm
  langs:
  - csharp
  name: ServicePointManager
  nameWithType: ServicePointManager
  fullName: System.Net.ServicePointManager
  type: Class
  summary: "Behandler samlingen av <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objekter."
  remarks: "ServicePointManager er en statisk klasse som brukes til å opprette, vedlikeholde og slette forekomster av <xref:System.Net.ServicePoint>klassen.</xref:System.Net.ServicePoint>       Når et program ber om en tilkobling til en Internett-ressursen identifikator URI (Uniform Resource) gjennom ServicePointManager-objektet, ServicePointManager returnerer en <xref:System.Net.ServicePoint>objekt som inneholder tilkoblingsinformasjonen for verten og identifisert av URI-skjemaet.</xref:System.Net.ServicePoint> Hvis det er en eksisterende <xref:System.Net.ServicePoint>objekt at verts- og fargevalg ServicePointManager objektet returnerer den eksisterende <xref:System.Net.ServicePoint>objekt; ellers ServicePointManager objektet oppretter en ny <xref:System.Net.ServicePoint>objektet.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint>       .NET Framework 4.6 inneholder en ny sikkerhetsfunksjon som blokkerer usikker cipher og nummer algoritmer for tilkoblinger. Programmer bruker TLS/SSL via API-er for eksempel HttpClient HttpWebRequest, FTPClient, SmtpClient, SslStream, osv. og har .NET Framework 4.6 få sikrere virkemåten som standard.       Utviklere kan ønsker å delta på dette for å opprettholde samhandling med eksisterende SSL3 tjenestene eller TLS med RC4 services. [Denne artikkelen](https://support.microsoft.com/kb/3069494) forklarer hvordan du endrer koden slik at den nye virkemåten er deaktivert."
  example:
  - "The following code example creates a <xref:System.Net.ServicePoint> object for connections to the URI www.contoso.com.  \n  \n [!code-cs[Classic ServicePoint Example#1](~/add/codesnippet/csharp/t-system.net.servicepoin_1.cs)]\n [!code-cpp[Classic ServicePoint Example#1](~/add/codesnippet/cpp/t-system.net.servicepoin_1.cpp)]\n [!code-vb[Classic ServicePoint Example#1](~/add/codesnippet/visualbasic/t-system.net.servicepoin_1.vb)]"
  syntax:
    content: public class ServicePointManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.CertificatePolicy
  id: CertificatePolicy
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: CertificatePolicy
  nameWithType: ServicePointManager.CertificatePolicy
  fullName: System.Net.ServicePointManager.CertificatePolicy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir policyen for serversertifikater."
  remarks: "Når egenskapen CertificatePolicy er satt til en <xref:System.Net.ICertificatePolicy>objekt for klyngenettverksgrensesnitt i <xref:System.Net.ServicePointManager>objektet bruker sertifikatpolicyen som er definert i denne forekomsten i stedet for sertifikatet standardpolicyen.</xref:System.Net.ServicePointManager> </xref:System.Net.ICertificatePolicy>       Sertifikatet standardpolicyen tillater gyldig og gyldig sertifikater som er utløpt."
  example:
  - "The following code example shows how to catch a certificate policy exception for a custom certificate policy. It assumes that the certificate policy object has been defined, that the Uniform Resource Identifier (URI) for the Web resource is contained in the variable `myUri`, and that there is a method named `ProcessResponse` that performs the work of the application.  \n  \n [!code-cpp[Classic ServicePointManager.CertificatePolicy Example#1](~/add/codesnippet/cpp/p-system.net.servicepoin_14_1.cpp)]\n [!code-cs[Classic ServicePointManager.CertificatePolicy Example#1](~/add/codesnippet/csharp/p-system.net.servicepoin_14_1.cs)]\n [!code-vb[Classic ServicePointManager.CertificatePolicy Example#1](~/add/codesnippet/visualbasic/p-system.net.servicepoin_14_1.vb)]"
  syntax:
    content: public static System.Net.ICertificatePolicy CertificatePolicy { get; set; }
    return:
      type: System.Net.ICertificatePolicy
      description: "Et objekt som implementerer den <xref href=&quot;System.Net.ICertificatePolicy&quot;> </xref> grensesnitt."
  overload: System.Net.ServicePointManager.CertificatePolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.CheckCertificateRevocationList
  id: CheckCertificateRevocationList
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: CheckCertificateRevocationList
  nameWithType: ServicePointManager.CheckCertificateRevocationList
  fullName: System.Net.ServicePointManager.CheckCertificateRevocationList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir en <xref:System.Boolean>verdi som angir om sertifikatet sjekkes mot godkjenning sertifikatopphevelseslisten.</xref:System.Boolean>"
  remarks: "Når CheckCertificateRevocationList er `true`, sertifikatet sjekkes mot godkjenning sertifikatopphevelseslisten, som en del av sertifikatet valideringen. Standardverdien er `false`."
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[System.Net.ServicePoint#10](~/add/codesnippet/cpp/p-system.net.servicepoin_13_1.cpp)]\n [!code-vb[System.Net.ServicePoint#10](~/add/codesnippet/visualbasic/p-system.net.servicepoin_13_1.vb)]\n [!code-cs[System.Net.ServicePoint#10](~/add/codesnippet/csharp/p-system.net.servicepoin_13_1.cs)]"
  syntax:
    content: public static bool CheckCertificateRevocationList { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis sertifikatopphevelseslisten sjekkes; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePointManager.CheckCertificateRevocationList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.DefaultConnectionLimit
  id: DefaultConnectionLimit
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: DefaultConnectionLimit
  nameWithType: ServicePointManager.DefaultConnectionLimit
  fullName: System.Net.ServicePointManager.DefaultConnectionLimit
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir maksimalt antall samtidige tilkoblinger som tillates av en <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektet."
  remarks: "Egenskapen DefaultConnectionLimit angir standard maksimalt antall samtidige tilkoblinger som den <xref:System.Net.ServicePointManager>objektet tilordner til den <xref:System.Net.ServicePoint.ConnectionLimit%2A>egenskapen når du oppretter <xref:System.Net.ServicePoint>objekter.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint.ConnectionLimit%2A> </xref:System.Net.ServicePointManager>       Endre egenskapen DefaultConnectionLimit påvirker ikke eksisterende <xref:System.Net.ServicePoint>objekter; den påvirker bare <xref:System.Net.ServicePoint>objekter som er initialisert etter at endringen.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint> Hvis det ikke er angitt verdien for denne egenskapen direkte eller gjennom konfigurasjonen, brukes verdi til konstant <xref:System.Net.ServicePointManager.DefaultPersistentConnectionLimit>.</xref:System.Net.ServicePointManager.DefaultPersistentConnectionLimit>      > [!NOTE] > Eventuelle endringer i egenskapen DefaultConnectionLimit innvirkning både HTTP 1.0 og 1.1 HTTP-tilkoblinger. Det er ikke mulig å endre separat tilkoblingsgrensen HTTP 1.0 og 1.1 for HTTP-protokoller. Når det brukes i server-miljø (ASP.NET) DefaultConnectionLimit standardverdien høyere antall tilkoblinger som er 10."
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[System.Net.ServicePoint#10](~/add/codesnippet/cpp/p-system.net.servicepoin_8_1.cpp)]\n [!code-vb[System.Net.ServicePoint#10](~/add/codesnippet/visualbasic/p-system.net.servicepoin_8_1.vb)]\n [!code-cs[System.Net.ServicePoint#10](~/add/codesnippet/csharp/p-system.net.servicepoin_8_1.cs)]"
  syntax:
    content: public static int DefaultConnectionLimit { get; set; }
    return:
      type: System.Int32
      description: "Maksimalt antall samtidige tilkoblinger som tillates av en <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektet. Standardverdien er 2. Når en app kjøres som en ASP.NET-verten, er det ikke mulig å endre verdien for denne egenskapen i konfigurasjonsfilen hvis egenskapen automatisk konfigurasjon er satt til <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Du kan imidlertid endre verdien programmatisk når egenskapen automatisk konfigurasjon er <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Angi din foretrukne verdi én gang, når programdomenet lastes inn."
  overload: System.Net.ServicePointManager.DefaultConnectionLimit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "DefaultConnectionLimit er mindre enn eller lik 0."
  platform:
  - net462
- uid: System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit
  id: DefaultNonPersistentConnectionLimit
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: DefaultNonPersistentConnectionLimit
  nameWithType: ServicePointManager.DefaultNonPersistentConnectionLimit
  fullName: System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit
  type: Field
  assemblies:
  - System
  namespace: System.Net
  summary: "Standardantall ikke-fast (4) tillatte tilkoblinger på en <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektet koblet til en HTTP/1.0 eller nyere server. Dette feltet er konstant, men ikke lenger er brukt i .NET Framework 2.0."
  syntax:
    content: public const int DefaultNonPersistentConnectionLimit = 4;
    return:
      type: System.Int32
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.DefaultPersistentConnectionLimit
  id: DefaultPersistentConnectionLimit
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: DefaultPersistentConnectionLimit
  nameWithType: ServicePointManager.DefaultPersistentConnectionLimit
  fullName: System.Net.ServicePointManager.DefaultPersistentConnectionLimit
  type: Field
  assemblies:
  - System
  namespace: System.Net
  summary: "Standardantall faste tilkoblinger (2) som er tillatt i en <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektet koblet til en HTTP/1.1 eller nyere server. Dette feltet er konstant og brukes til å initialisere den <> </> *> egenskapen Hvis verdien for den <> </> *> egenskapen er ikke angitt direkte eller gjennom konfigurasjonen."
  remarks: ''
  example:
  - "The following code example sets the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property using this field.  \n  \n [!code-cpp[System.Net.ServicePoint#10](~/add/codesnippet/cpp/f-system.net.servicepoin_1.cpp)]\n [!code-vb[System.Net.ServicePoint#10](~/add/codesnippet/visualbasic/f-system.net.servicepoin_1.vb)]\n [!code-cs[System.Net.ServicePoint#10](~/add/codesnippet/csharp/f-system.net.servicepoin_1.cs)]"
  syntax:
    content: public const int DefaultPersistentConnectionLimit = 2;
    return:
      type: System.Int32
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.DnsRefreshTimeout
  id: DnsRefreshTimeout
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: DnsRefreshTimeout
  nameWithType: ServicePointManager.DnsRefreshTimeout
  fullName: System.Net.ServicePointManager.DnsRefreshTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir en verdi som angir hvor lenge et domene (DNS Name Service) oppløsning er gyldig."
  remarks: ''
  example:
  - "The following code example sets this property.  \n  \n [!code-vb[System.Net.ServicePointWhidbey#1](~/add/codesnippet/visualbasic/p-system.net.servicepoin_21_1.vb)]\n [!code-cpp[System.Net.ServicePointWhidbey#1](~/add/codesnippet/cpp/p-system.net.servicepoin_21_1.cpp)]\n [!code-cs[System.Net.ServicePointWhidbey#1](~/add/codesnippet/csharp/p-system.net.servicepoin_21_1.cs)]"
  syntax:
    content: public static int DnsRefreshTimeout { get; set; }
    return:
      type: System.Int32
      description: "Verdien for tidsavbrudd for, i millisekunder. Verdien -1 angir en uendelig tidsavbruddsperioden. Standardverdien er kr 120 000 millisekunder (to minutter)."
  overload: System.Net.ServicePointManager.DnsRefreshTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.EnableDnsRoundRobin
  id: EnableDnsRoundRobin
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: EnableDnsRoundRobin
  nameWithType: ServicePointManager.EnableDnsRoundRobin
  fullName: System.Net.ServicePointManager.EnableDnsRoundRobin
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir en verdi som angir om en (DNS-tjenesten) oppløsning roterer mellom de gjeldende Internet Protocol (IP-adressene)."
  remarks: "Når flere IP-adressen er knyttet til et vertsnavn, returnerer en DNS-løsning vanligvis bare den første IP-adressen. Hvis du setter denne egenskapen til `true`, og DNS-løsninger vil gå gjennom alle tilgjengelige IP-adresser for en bestemt vert. Dette alternativet er nyttig når en bruker DNS som en belastningsfordeling mekanisme mellom servere eller serverklynger."
  example:
  - "The following code example sets this property.  \n  \n [!code-vb[System.Net.ServicePointWhidbey#1](~/add/codesnippet/visualbasic/p-system.net.servicepoin_17_1.vb)]\n [!code-cpp[System.Net.ServicePointWhidbey#1](~/add/codesnippet/cpp/p-system.net.servicepoin_17_1.cpp)]\n [!code-cs[System.Net.ServicePointWhidbey#1](~/add/codesnippet/csharp/p-system.net.servicepoin_17_1.cs)]"
  syntax:
    content: public static bool EnableDnsRoundRobin { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Hvis en DNS-løsning alltid returnerer den første IP-adressen for en bestemt vert; Ellers <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePointManager.EnableDnsRoundRobin*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.EncryptionPolicy
  id: EncryptionPolicy
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: EncryptionPolicy
  nameWithType: ServicePointManager.EncryptionPolicy
  fullName: System.Net.ServicePointManager.EncryptionPolicy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter den <xref href=&quot;System.Net.Security.EncryptionPolicy&quot;> </xref> for denne <xref href=&quot;System.Net.ServicePointManager&quot;> </xref> forekomsten."
  remarks: "Hvis en verdi ikke er angitt i konfigurasjonsfilen, standard egenskapen EncryptionPolicy <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> Dette gjelder for en SSL/TLS-økt på dette <xref:System.Net.ServicePointManager>forekomsten.</xref:System.Net.ServicePointManager>       Bruk av Null-cipher kreves når krypteringspolicyen er satt til <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  syntax:
    content: public static System.Net.Security.EncryptionPolicy EncryptionPolicy { get; }
    return:
      type: System.Net.Security.EncryptionPolicy
      description: "Krypteringspolicyen vil bruke for denne <xref href=&quot;System.Net.ServicePointManager&quot;> </xref> forekomsten."
  overload: System.Net.ServicePointManager.EncryptionPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.Expect100Continue
  id: Expect100Continue
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: Expect100Continue
  nameWithType: ServicePointManager.Expect100Continue
  fullName: System.Net.ServicePointManager.Expect100Continue
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir en <xref:System.Boolean>verdi som bestemmer om 100-fortsette virkemåte brukes.</xref:System.Boolean>"
  remarks: "Når denne egenskapen er satt til `true`, 100-fortsette virkemåte brukes. Klient-forespørsler som bruker den `PUT` og `POST` metoder legger en Expect-overskrift i forespørselen hvis egenskapen Expect100Continue `true` og <xref:System.Net.HttpWebRequest.ContentLength%2A>egenskapen er større enn null eller <xref:System.Net.HttpWebRequest.SendChunked%2A>egenskapen er SANN.</xref:System.Net.HttpWebRequest.SendChunked%2A> </xref:System.Net.HttpWebRequest.ContentLength%2A> Klienten vil forventer en 100-fortsette svar fra serveren for å angi at klienten skal sende data til posteres. Denne mekanisme gir klienter unngå å sende store mengder data på nettverket når serveren, basert på forespørselshodene, kommer til å avslå forespørselen.       Anta for eksempel egenskapen Expect100Continue `false`. Når forespørselen er sendt til serveren, inkluderer dataene. Hvis serveren krever godkjenning og må sende svar 401 etter at forespørselshodene, må klienten Send data med riktig autentisering-headere.       Hvis denne egenskapen er `true`, forespørselshodene er sendt til serveren. Hvis serveren ikke har avslo forespørselen, sendes en 100-fortsette svar signaliserer at dataene kan overføres. Hvis serveren krever godkjenning som i det forrige eksemplet, sendes 401 svar, og klienten har ikke sendt dataene uten grunn.       Endre verdien for denne egenskapen påvirker ikke eksisterende <xref:System.Net.ServicePoint>objekter.</xref:System.Net.ServicePoint> Bare nye <xref:System.Net.ServicePoint>objekter som ble laget etter at endringen påvirker.</xref:System.Net.ServicePoint>       I 100-fortsette virkemåte ikke brukes for HTTP 1.0 forespørsler selv om denne egenskapen er satt til `true`.       Expect 100-fortsette virkemåte fullstendig er beskrevet i IETF RFC 2616 10.1.1."
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[System.Net.ServicePoint#10](~/add/codesnippet/cpp/p-system.net.servicepoin_12_1.cpp)]\n [!code-vb[System.Net.ServicePoint#10](~/add/codesnippet/visualbasic/p-system.net.servicepoin_12_1.vb)]\n [!code-cs[System.Net.ServicePoint#10](~/add/codesnippet/csharp/p-system.net.servicepoin_12_1.cs)]"
  syntax:
    content: public static bool Expect100Continue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>aktivere 100-fortsette virkemåte. Standardverdien er <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePointManager.Expect100Continue*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.FindServicePoint(System.Uri)
  id: FindServicePoint(System.Uri)
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: FindServicePoint(Uri)
  nameWithType: ServicePointManager.FindServicePoint(Uri)
  fullName: System.Net.ServicePointManager.FindServicePoint(Uri)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Finner en eksisterende <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objekt og oppretter en ny <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektet til å administrere kommunikasjon med den angitte <xref:System.Uri>objektet.</xref:System.Uri>"
  remarks: "Metoden FindServicePoint returnerer den <xref:System.Net.ServicePoint>tilknyttet det angitte vertsnavnet for Internett.</xref:System.Net.ServicePoint> Hvis ingen <xref:System.Net.ServicePoint>objektet finnes for som er vert for, i <xref:System.Net.ServicePointManager>objektet oppretter en.</xref:System.Net.ServicePointManager> </xref:System.Net.ServicePoint>"
  syntax:
    content: public static System.Net.ServicePoint FindServicePoint (Uri address);
    parameters:
    - id: address
      type: System.Uri
      description: "Den <xref:System.Uri>objekt av Internett-ressursen kontakte.</xref:System.Uri>"
    return:
      type: System.Net.ServicePoint
      description: "Den <xref href=&quot;System.Net.ServicePoint&quot;> </xref> -objekt som administrerer kommunikasjon for forespørselen."
  overload: System.Net.ServicePointManager.FindServicePoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Maksimalt antall <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objekter som er definert i <xref:System.Net.ServicePointManager.MaxServicePoints*>er nådd.</xref:System.Net.ServicePointManager.MaxServicePoints*>"
  platform:
  - net462
- uid: System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)
  id: FindServicePoint(System.String,System.Net.IWebProxy)
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: FindServicePoint(String,IWebProxy)
  nameWithType: ServicePointManager.FindServicePoint(String,IWebProxy)
  fullName: System.Net.ServicePointManager.FindServicePoint(String,IWebProxy)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Finner en eksisterende <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objekt og oppretter en ny <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektet til å administrere kommunikasjon med den angitte URI Uniform Resource Identifier ()."
  remarks: "Den <xref:System.Net.ServicePointManager.FindServicePoint%2A>metoden returnerer den <xref:System.Net.ServicePoint>tilknyttet det angitte vertsnavnet for Internett.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager.FindServicePoint%2A> Hvis ingen <xref:System.Net.ServicePoint>objektet finnes for som er vert for, i <xref:System.Net.ServicePointManager>objektet oppretter en.</xref:System.Net.ServicePointManager> </xref:System.Net.ServicePoint>"
  example:
  - "The following code example demonstrates calling this method to access a <xref:System.Net.ServicePoint> object.  \n  \n [!code-cpp[System.Net.ServicePoint#7](~/add/codesnippet/cpp/2fec5056-1106-4a0b-b9b3-_1.cpp)]\n [!code-vb[System.Net.ServicePoint#7](~/add/codesnippet/visualbasic/2fec5056-1106-4a0b-b9b3-_1.vb)]\n [!code-cs[System.Net.ServicePoint#7](~/add/codesnippet/csharp/2fec5056-1106-4a0b-b9b3-_1.cs)]"
  syntax:
    content: public static System.Net.ServicePoint FindServicePoint (string uriString, System.Net.IWebProxy proxy);
    parameters:
    - id: uriString
      type: System.String
      description: "URIEN for Internett-ressursen kontaktes."
    - id: proxy
      type: System.Net.IWebProxy
      description: "Proxydata for denne forespørselen."
    return:
      type: System.Net.ServicePoint
      description: "Den <xref href=&quot;System.Net.ServicePoint&quot;> </xref> -objekt som administrerer kommunikasjon for forespørselen."
  overload: System.Net.ServicePointManager.FindServicePoint*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "URIEN som er angitt i <code> uriString </code> er ugyldig."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Maksimalt antall <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objekter som er definert i <xref:System.Net.ServicePointManager.MaxServicePoints*>er nådd.</xref:System.Net.ServicePointManager.MaxServicePoints*>"
  platform:
  - net462
- uid: System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)
  id: FindServicePoint(System.Uri,System.Net.IWebProxy)
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: FindServicePoint(Uri,IWebProxy)
  nameWithType: ServicePointManager.FindServicePoint(Uri,IWebProxy)
  fullName: System.Net.ServicePointManager.FindServicePoint(Uri,IWebProxy)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Finner en eksisterende <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objekt og oppretter en ny <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektet til å administrere kommunikasjon med den angitte <xref:System.Uri>objektet.</xref:System.Uri>"
  remarks: "Den <xref:System.Net.ServicePointManager.FindServicePoint%2A>metoden returnerer den <xref:System.Net.ServicePoint>tilknyttet det angitte vertsnavnet for Internett.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager.FindServicePoint%2A> Hvis ingen <xref:System.Net.ServicePoint>objektet finnes for som er vert for, i <xref:System.Net.ServicePointManager>objektet oppretter en.</xref:System.Net.ServicePointManager> </xref:System.Net.ServicePoint>"
  syntax:
    content: public static System.Net.ServicePoint FindServicePoint (Uri address, System.Net.IWebProxy proxy);
    parameters:
    - id: address
      type: System.Uri
      description: "En <xref:System.Uri>objekt som inneholder adressen til Internett-ressursen kontakte.</xref:System.Uri>"
    - id: proxy
      type: System.Net.IWebProxy
      description: "Proxydata for denne forespørselen."
    return:
      type: System.Net.ServicePoint
      description: "Den <xref href=&quot;System.Net.ServicePoint&quot;> </xref> -objekt som administrerer kommunikasjon for forespørselen."
  overload: System.Net.ServicePointManager.FindServicePoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Maksimalt antall <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objekter som er definert i <xref:System.Net.ServicePointManager.MaxServicePoints*>er nådd.</xref:System.Net.ServicePointManager.MaxServicePoints*>"
  platform:
  - net462
- uid: System.Net.ServicePointManager.MaxServicePointIdleTime
  id: MaxServicePointIdleTime
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: MaxServicePointIdleTime
  nameWithType: ServicePointManager.MaxServicePointIdleTime
  fullName: System.Net.ServicePointManager.MaxServicePointIdleTime
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir den maksimale tiden for inaktivitet for en <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektet."
  remarks: "Egenskapen MaxServicePointIdleTime angir maksimal tid som den <xref:System.Net.ServicePointManager>objektet tilordner til den <xref:System.Net.ServicePoint.MaxIdleTime%2A>egenskapen når du oppretter <xref:System.Net.ServicePoint>objekter.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint.MaxIdleTime%2A> </xref:System.Net.ServicePointManager> Endringer i denne påvirke bare <xref:System.Net.ServicePoint>objekter som er initialisert når verdien endres.</xref:System.Net.ServicePoint>       Etter en <xref:System.Net.ServicePoint>objektet har vært inaktiv i tiden som er angitt i <xref:System.Net.ServicePoint.MaxIdleTime%2A>, den er kvalifisert for datasanering.</xref:System.Net.ServicePoint.MaxIdleTime%2A> </xref:System.Net.ServicePoint> En <xref:System.Net.ServicePoint>objektet er inaktiv når listen over tilkoblinger som er tilknyttet den <xref:System.Net.ServicePoint>objektet er tomt.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint>"
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[System.Net.ServicePoint#8](~/add/codesnippet/cpp/p-system.net.servicepoin_5_1.cpp)]\n [!code-vb[System.Net.ServicePoint#8](~/add/codesnippet/visualbasic/p-system.net.servicepoin_5_1.vb)]\n [!code-cs[System.Net.ServicePoint#8](~/add/codesnippet/csharp/p-system.net.servicepoin_5_1.cs)]"
  syntax:
    content: public static int MaxServicePointIdleTime { get; set; }
    return:
      type: System.Int32
      description: "Maksimal inaktiv tid i millisekunder for en <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektet. Standardverdien er 100 000 millisekunder (100 sekunder)."
  overload: System.Net.ServicePointManager.MaxServicePointIdleTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "MaxServicePointIdleTime er mindre enn &lt;xref:System.Threading.Timeout.Infinite?displayProperty=fullName&gt; eller større enn &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Net.ServicePointManager.MaxServicePoints
  id: MaxServicePoints
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: MaxServicePoints
  nameWithType: ServicePointManager.MaxServicePoints
  fullName: System.Net.ServicePointManager.MaxServicePoints
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir det maksimale antallet <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objekter å beholde når som helst."
  remarks: "Når du redusere egenskapen MaxServicePoints under antall <xref:System.Net.ServicePoint>objekter som forekomsten, den <xref:System.Net.ServicePointManager>sletter den <xref:System.Net.ServicePoint>objekter med de lengste inaktiv ganger.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager> </xref:System.Net.ServicePoint> Hvis antallet <xref:System.Net.ServicePoint>objekter med aktive tilkoblinger er større enn verdien for MaxServicePoints, den <xref:System.Net.ServicePointManager>objekt sletter den <xref:System.Net.ServicePoint>objekter som de blir inaktive.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager> </xref:System.Net.ServicePoint>"
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[System.Net.ServicePoint#8](~/add/codesnippet/cpp/p-system.net.servicepoin_10_1.cpp)]\n [!code-vb[System.Net.ServicePoint#8](~/add/codesnippet/visualbasic/p-system.net.servicepoin_10_1.vb)]\n [!code-cs[System.Net.ServicePoint#8](~/add/codesnippet/csharp/p-system.net.servicepoin_10_1.cs)]"
  syntax:
    content: public static int MaxServicePoints { get; set; }
    return:
      type: System.Int32
      description: "Maksimalt antall <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objekter til vedlikehold. Standardverdien er 0, som betyr at det er ingen grense for antall <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objekter."
  overload: System.Net.ServicePointManager.MaxServicePoints*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "MaxServicePoints er mindre enn 0 eller større enn &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Net.ServicePointManager.ReusePort
  id: ReusePort
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: ReusePort
  nameWithType: ServicePointManager.ReusePort
  fullName: System.Net.ServicePointManager.ReusePort
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Når denne egenskapsverdien <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> fører til at alle utgående TCP-tilkoblinger fra HttpWebRequest til å bruke alternativet opprinnelig socket SO_REUSE_UNICASTPORT socket. Når du har gjort dette, underliggende utgående portene som skal deles. Dette er nyttig scenarioer der et stort antall utgående tilkoblinger utføres i en liten stund, og app risikoene portene som er for lite."
  remarks: "Standardverdien er `false`."
  syntax:
    content: public static bool ReusePort { get; set; }
    return:
      type: System.Boolean
      description: "Returnerer <xref:System.Boolean>.</xref:System.Boolean>"
  overload: System.Net.ServicePointManager.ReusePort*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.SecurityProtocol
  id: SecurityProtocol
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: SecurityProtocol
  nameWithType: ServicePointManager.SecurityProtocol
  fullName: System.Net.ServicePointManager.SecurityProtocol
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir sikkerhetsprotokollen som brukes av den <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objekter som administreres av den <xref href=&quot;System.Net.ServicePointManager&quot;> </xref> objektet."
  remarks: "Denne egenskapen velger versjonen av SSL (Secure Sockets LAYER) eller sikkerhet TLS (Transport Layer) protokollen som skal brukes for nye tilkoblinger som bruker skjemaet sikre Hypertext Transfer Protocol (HTTPS). eksisterende tilkoblinger blir ikke endret.       Legg merke til at ingen standardverdi er angitt med hensikt for denne egenskapen. Sikkerhet liggende endres konstant, og standard protokoller og beskyttelsesnivåene endres over tid for å unngå kjente svake sider. Standarder avhenger av individuelle maskinen konfigurasjonen, og som programvaren er installert, og som oppdateringene er utført.       Koden kan ikke implisitt avhenger av ved hjelp av en bestemt beskyttelsesnivået, eller forutsetter at et gitt sikkerhetsnivå brukes som standard. Hvis appen er avhengig av bruk av et bestemt sikkerhetsnivå, må du angi eksplisitt nivået og deretter kontrollerer at det faktisk er i bruk på opprettet tilkobling. Som en endres ofte med små Vær oppmerksom på at for å redusere stadig videre koden bør utformes skal robust overfor endringer protokoller støttes.       .NET Framework 4.6 inneholder en ny sikkerhetsfunksjon som blokkerer usikker cipher og nummer algoritmer for tilkoblinger. Programmer bruker TLS/SSL via API-er for eksempel HttpClient HttpWebRequest, FTPClient, SmtpClient, SslStream, osv. og har .NET Framework 4.6 få sikrere virkemåten som standard.       Utviklere kan ønsker å delta på dette for å opprettholde samhandling med eksisterende SSL3 tjenestene eller TLS med RC4 services. [Denne artikkelen](https://support.microsoft.com/kb/3069494) forklarer hvordan du endrer koden slik at den nye virkemåten er deaktivert."
  syntax:
    content: public static System.Net.SecurityProtocolType SecurityProtocol { get; set; }
    return:
      type: System.Net.SecurityProtocolType
      description: "En av verdiene som er definert i den <xref href=&quot;System.Net.SecurityProtocolType&quot;> </xref> opplisting."
  overload: System.Net.ServicePointManager.SecurityProtocol*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Verdien som er angitt til å angi egenskapen er ikke et gyldig <xref href=&quot;System.Net.SecurityProtocolType&quot;> </xref> listeverdi."
  platform:
  - net462
- uid: System.Net.ServicePointManager.ServerCertificateValidationCallback
  id: ServerCertificateValidationCallback
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: ServerCertificateValidationCallback
  nameWithType: ServicePointManager.ServerCertificateValidationCallback
  fullName: System.Net.ServicePointManager.ServerCertificateValidationCallback
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir tilbakeringing til å validere et serversertifikat."
  remarks: "Et program kan angi ServerCertificateValidationCallback-egenskapen til en metode som brukes for egendefinert validering av klienten for serversertifikatet. Når du utfører egendefinert validering av `sender` -parameteren sendt til den <xref:System.Net.Security.RemoteCertificateValidationCallback>kan være et vertsnavn streng eller et objekt som er avledet fra <xref:System.Net.WebRequest>(<xref:System.Net.HttpWebRequest>, for eksempel) avhengig av <xref:System.Net.ServicePointManager.CertificatePolicy%2A>egenskapen.</xref:System.Net.ServicePointManager.CertificatePolicy%2A> </xref:System.Net.HttpWebRequest> </xref:System.Net.WebRequest> </xref:System.Net.Security.RemoteCertificateValidationCallback>       Når det ikke brukes egendefinert validering, sammenlignet sertifikatnavnet på med vertsnavnet som brukes til å opprette forespørselen. For eksempel hvis <xref:System.Net.WebRequest.Create%28System.String%29>ble sendt en parameter for &quot;https://www.contoso.com/default.hmtl&quot;, er standard virkemåte for klienten å sjekke sertifikatet mot www.contoso.com.</xref:System.Net.WebRequest.Create%28System.String%29>"
  syntax:
    content: public static System.Net.Security.RemoteCertificateValidationCallback ServerCertificateValidationCallback { get; set; }
    return:
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "A <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;></xref>. Standardverdien er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePointManager.ServerCertificateValidationCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  id: SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: SetTcpKeepAlive(Boolean,Int32,Int32)
  nameWithType: ServicePointManager.SetTcpKeepAlive(Boolean,Int32,Int32)
  fullName: System.Net.ServicePointManager.SetTcpKeepAlive(Boolean,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Aktiverer eller deaktiverer Behold aktiv-alternativet i en TCP-tilkobling."
  remarks: "Et program kan be om en TCP/IP-leverandør kunne bruke Behold aktiv-pakker på en TCP-tilkobling. Standarden er at bruken av Behold aktiv-pakker på en TCP-tilkobling er deaktivert.       Standardinnstillingene når en TCP-socket er initialisert angir den Behold aktiv tidsavbrudd 2 timer, og behold aktiv-intervallet til ett sekund. Den `keepAliveTime` parameteren angir hvor lang tid i millisekunder uten aktivitet før sendes første Behold aktiv-pakken. Den `keepAliveInterval` parameteren angir intervallet millisekunder mellom når etterfølgende Behold aktiv-pakker sendes hvis ingen bekreftelse er mottatt. Antall Behold aktiv-sonder kan ikke endres og er satt til 10.       Hvis en TCP-tilkoblingen blir brutt som et resultat av oppkoblinger, en <xref:System.Net.Sockets.SocketError>av <xref:System.Net.Sockets.SocketError>returneres til alle samtaler pågår på socketen, og alle etterfølgende kall mislykkes med en <xref:System.Net.Sockets.SocketError>av <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public static void SetTcpKeepAlive (bool enabled, int keepAliveTime, int keepAliveInterval);
    parameters:
    - id: enabled
      type: System.Boolean
      description: "Hvis satt til SANN, deretter TCP Behold aktiv-alternativet i en TCP-tilkobling aktiveres ved hjelp av den angitte `keepAliveTime` og `keepAliveInterval` verdier.       Hvis satt til false, deretter TCP Behold aktiv-alternativet er deaktivert og gjenværende parametere blir ignorert.       Standardverdien er false."
    - id: keepAliveTime
      type: System.Int32
      description: "Angir hvor lang tid i millisekunder uten aktivitet før sendes første Behold aktiv-pakken.       Verdien må være større enn 0.  Hvis en verdi mindre enn eller lik null sendt en <xref:System.ArgumentOutOfRangeException>forårsakes.</xref:System.ArgumentOutOfRangeException>"
    - id: keepAliveInterval
      type: System.Int32
      description: "Angir intervallet millisekunder mellom når etterfølgende Behold aktiv-pakker sendes hvis ingen bekreftelse er mottatt.       Verdien må være større enn 0.  Hvis en verdi mindre enn eller lik null sendt en <xref:System.ArgumentOutOfRangeException>forårsakes.</xref:System.ArgumentOutOfRangeException>"
  overload: System.Net.ServicePointManager.SetTcpKeepAlive*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den angitte verdien for <code> keepAliveTime </code> eller <code> keepAliveInterval </code> parameteren er mindre enn eller lik 0."
  platform:
  - net462
- uid: System.Net.ServicePointManager.UseNagleAlgorithm
  id: UseNagleAlgorithm
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: UseNagleAlgorithm
  nameWithType: ServicePointManager.UseNagleAlgorithm
  fullName: System.Net.ServicePointManager.UseNagleAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Bestemmer om Nagle algoritmen som brukes av tjenesten punkt administreres av dette <xref href=&quot;System.Net.ServicePointManager&quot;> </xref> objektet."
  remarks: "Algoritmen Nagle brukes til å redusere nettverkstrafikk av bufring lavt pakker med data og overføre dem som en enkelt pakke. Denne prosessen kalles også &quot;nagling&quot;; Det er mye brukt fordi det reduserer antall pakker overføres og senker overhead per pakke.       Endre verdien for denne egenskapen påvirker ikke eksisterende <xref:System.Net.ServicePoint>objekter.</xref:System.Net.ServicePoint> Ny tjenesten peker bare opprettet etter at endringen påvirker.       Algoritmen Nagle er fullstendig beskrevet i IETF RFC 896."
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[System.Net.ServicePoint#10](~/add/codesnippet/cpp/p-system.net.servicepoin_20_1.cpp)]\n [!code-vb[System.Net.ServicePoint#10](~/add/codesnippet/visualbasic/p-system.net.servicepoin_20_1.vb)]\n [!code-cs[System.Net.ServicePoint#10](~/add/codesnippet/csharp/p-system.net.servicepoin_20_1.cs)]"
  syntax:
    content: public static bool UseNagleAlgorithm { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Bruke algoritmen Nagle; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardverdien er <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePointManager.UseNagleAlgorithm*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.ServicePointManager.CertificatePolicy
  parent: System.Net.ServicePointManager
  isExternal: false
  name: CertificatePolicy
  nameWithType: ServicePointManager.CertificatePolicy
  fullName: System.Net.ServicePointManager.CertificatePolicy
- uid: System.Net.ICertificatePolicy
  parent: System.Net
  isExternal: false
  name: ICertificatePolicy
  nameWithType: ICertificatePolicy
  fullName: System.Net.ICertificatePolicy
- uid: System.Net.ServicePointManager.CheckCertificateRevocationList
  parent: System.Net.ServicePointManager
  isExternal: false
  name: CheckCertificateRevocationList
  nameWithType: ServicePointManager.CheckCertificateRevocationList
  fullName: System.Net.ServicePointManager.CheckCertificateRevocationList
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.ServicePointManager.DefaultConnectionLimit
  parent: System.Net.ServicePointManager
  isExternal: false
  name: DefaultConnectionLimit
  nameWithType: ServicePointManager.DefaultConnectionLimit
  fullName: System.Net.ServicePointManager.DefaultConnectionLimit
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit
  parent: System.Net.ServicePointManager
  isExternal: false
  name: DefaultNonPersistentConnectionLimit
  nameWithType: ServicePointManager.DefaultNonPersistentConnectionLimit
  fullName: System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit
- uid: System.Net.ServicePointManager.DefaultPersistentConnectionLimit
  parent: System.Net.ServicePointManager
  isExternal: false
  name: DefaultPersistentConnectionLimit
  nameWithType: ServicePointManager.DefaultPersistentConnectionLimit
  fullName: System.Net.ServicePointManager.DefaultPersistentConnectionLimit
- uid: System.Net.ServicePointManager.DnsRefreshTimeout
  parent: System.Net.ServicePointManager
  isExternal: false
  name: DnsRefreshTimeout
  nameWithType: ServicePointManager.DnsRefreshTimeout
  fullName: System.Net.ServicePointManager.DnsRefreshTimeout
- uid: System.Net.ServicePointManager.EnableDnsRoundRobin
  parent: System.Net.ServicePointManager
  isExternal: false
  name: EnableDnsRoundRobin
  nameWithType: ServicePointManager.EnableDnsRoundRobin
  fullName: System.Net.ServicePointManager.EnableDnsRoundRobin
- uid: System.Net.ServicePointManager.EncryptionPolicy
  parent: System.Net.ServicePointManager
  isExternal: false
  name: EncryptionPolicy
  nameWithType: ServicePointManager.EncryptionPolicy
  fullName: System.Net.ServicePointManager.EncryptionPolicy
- uid: System.Net.Security.EncryptionPolicy
  parent: System.Net.Security
  isExternal: false
  name: EncryptionPolicy
  nameWithType: EncryptionPolicy
  fullName: System.Net.Security.EncryptionPolicy
- uid: System.Net.ServicePointManager.Expect100Continue
  parent: System.Net.ServicePointManager
  isExternal: false
  name: Expect100Continue
  nameWithType: ServicePointManager.Expect100Continue
  fullName: System.Net.ServicePointManager.Expect100Continue
- uid: System.Net.ServicePointManager.FindServicePoint(System.Uri)
  parent: System.Net.ServicePointManager
  isExternal: false
  name: FindServicePoint(Uri)
  nameWithType: ServicePointManager.FindServicePoint(Uri)
  fullName: System.Net.ServicePointManager.FindServicePoint(Uri)
- uid: System.Net.ServicePoint
  parent: System.Net
  isExternal: false
  name: ServicePoint
  nameWithType: ServicePoint
  fullName: System.Net.ServicePoint
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)
  parent: System.Net.ServicePointManager
  isExternal: false
  name: FindServicePoint(String,IWebProxy)
  nameWithType: ServicePointManager.FindServicePoint(String,IWebProxy)
  fullName: System.Net.ServicePointManager.FindServicePoint(String,IWebProxy)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)
  parent: System.Net.ServicePointManager
  isExternal: false
  name: FindServicePoint(Uri,IWebProxy)
  nameWithType: ServicePointManager.FindServicePoint(Uri,IWebProxy)
  fullName: System.Net.ServicePointManager.FindServicePoint(Uri,IWebProxy)
- uid: System.Net.ServicePointManager.MaxServicePointIdleTime
  parent: System.Net.ServicePointManager
  isExternal: false
  name: MaxServicePointIdleTime
  nameWithType: ServicePointManager.MaxServicePointIdleTime
  fullName: System.Net.ServicePointManager.MaxServicePointIdleTime
- uid: System.Net.ServicePointManager.MaxServicePoints
  parent: System.Net.ServicePointManager
  isExternal: false
  name: MaxServicePoints
  nameWithType: ServicePointManager.MaxServicePoints
  fullName: System.Net.ServicePointManager.MaxServicePoints
- uid: System.Net.ServicePointManager.ReusePort
  parent: System.Net.ServicePointManager
  isExternal: false
  name: ReusePort
  nameWithType: ServicePointManager.ReusePort
  fullName: System.Net.ServicePointManager.ReusePort
- uid: System.Net.ServicePointManager.SecurityProtocol
  parent: System.Net.ServicePointManager
  isExternal: false
  name: SecurityProtocol
  nameWithType: ServicePointManager.SecurityProtocol
  fullName: System.Net.ServicePointManager.SecurityProtocol
- uid: System.Net.SecurityProtocolType
  parent: System.Net
  isExternal: false
  name: SecurityProtocolType
  nameWithType: SecurityProtocolType
  fullName: System.Net.SecurityProtocolType
- uid: System.Net.ServicePointManager.ServerCertificateValidationCallback
  parent: System.Net.ServicePointManager
  isExternal: false
  name: ServerCertificateValidationCallback
  nameWithType: ServicePointManager.ServerCertificateValidationCallback
  fullName: System.Net.ServicePointManager.ServerCertificateValidationCallback
- uid: System.Net.Security.RemoteCertificateValidationCallback
  parent: System.Net.Security
  isExternal: false
  name: RemoteCertificateValidationCallback
  nameWithType: RemoteCertificateValidationCallback
  fullName: System.Net.Security.RemoteCertificateValidationCallback
- uid: System.Net.ServicePointManager.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  parent: System.Net.ServicePointManager
  isExternal: false
  name: SetTcpKeepAlive(Boolean,Int32,Int32)
  nameWithType: ServicePointManager.SetTcpKeepAlive(Boolean,Int32,Int32)
  fullName: System.Net.ServicePointManager.SetTcpKeepAlive(Boolean,Int32,Int32)
- uid: System.Net.ServicePointManager.UseNagleAlgorithm
  parent: System.Net.ServicePointManager
  isExternal: false
  name: UseNagleAlgorithm
  nameWithType: ServicePointManager.UseNagleAlgorithm
  fullName: System.Net.ServicePointManager.UseNagleAlgorithm
- uid: System.Net.ServicePointManager.CertificatePolicy*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: CertificatePolicy
  nameWithType: ServicePointManager.CertificatePolicy
- uid: System.Net.ServicePointManager.CheckCertificateRevocationList*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: CheckCertificateRevocationList
  nameWithType: ServicePointManager.CheckCertificateRevocationList
- uid: System.Net.ServicePointManager.DefaultConnectionLimit*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: DefaultConnectionLimit
  nameWithType: ServicePointManager.DefaultConnectionLimit
- uid: System.Net.ServicePointManager.DnsRefreshTimeout*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: DnsRefreshTimeout
  nameWithType: ServicePointManager.DnsRefreshTimeout
- uid: System.Net.ServicePointManager.EnableDnsRoundRobin*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: EnableDnsRoundRobin
  nameWithType: ServicePointManager.EnableDnsRoundRobin
- uid: System.Net.ServicePointManager.EncryptionPolicy*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: EncryptionPolicy
  nameWithType: ServicePointManager.EncryptionPolicy
- uid: System.Net.ServicePointManager.Expect100Continue*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: Expect100Continue
  nameWithType: ServicePointManager.Expect100Continue
- uid: System.Net.ServicePointManager.FindServicePoint*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: FindServicePoint
  nameWithType: ServicePointManager.FindServicePoint
- uid: System.Net.ServicePointManager.MaxServicePointIdleTime*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: MaxServicePointIdleTime
  nameWithType: ServicePointManager.MaxServicePointIdleTime
- uid: System.Net.ServicePointManager.MaxServicePoints*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: MaxServicePoints
  nameWithType: ServicePointManager.MaxServicePoints
- uid: System.Net.ServicePointManager.ReusePort*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: ReusePort
  nameWithType: ServicePointManager.ReusePort
- uid: System.Net.ServicePointManager.SecurityProtocol*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: SecurityProtocol
  nameWithType: ServicePointManager.SecurityProtocol
- uid: System.Net.ServicePointManager.ServerCertificateValidationCallback*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: ServerCertificateValidationCallback
  nameWithType: ServicePointManager.ServerCertificateValidationCallback
- uid: System.Net.ServicePointManager.SetTcpKeepAlive*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: SetTcpKeepAlive
  nameWithType: ServicePointManager.SetTcpKeepAlive
- uid: System.Net.ServicePointManager.UseNagleAlgorithm*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: UseNagleAlgorithm
  nameWithType: ServicePointManager.UseNagleAlgorithm
