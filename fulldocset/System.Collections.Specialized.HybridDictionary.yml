### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.HybridDictionary
  id: HybridDictionary
  children:
  - System.Collections.Specialized.HybridDictionary.#ctor
  - System.Collections.Specialized.HybridDictionary.#ctor(System.Boolean)
  - System.Collections.Specialized.HybridDictionary.#ctor(System.Int32)
  - System.Collections.Specialized.HybridDictionary.#ctor(System.Int32,System.Boolean)
  - System.Collections.Specialized.HybridDictionary.Add(System.Object,System.Object)
  - System.Collections.Specialized.HybridDictionary.Clear
  - System.Collections.Specialized.HybridDictionary.Contains(System.Object)
  - System.Collections.Specialized.HybridDictionary.CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.HybridDictionary.Count
  - System.Collections.Specialized.HybridDictionary.GetEnumerator
  - System.Collections.Specialized.HybridDictionary.IsFixedSize
  - System.Collections.Specialized.HybridDictionary.IsReadOnly
  - System.Collections.Specialized.HybridDictionary.IsSynchronized
  - System.Collections.Specialized.HybridDictionary.Item(System.Object)
  - System.Collections.Specialized.HybridDictionary.Keys
  - System.Collections.Specialized.HybridDictionary.Remove(System.Object)
  - System.Collections.Specialized.HybridDictionary.SyncRoot
  - System.Collections.Specialized.HybridDictionary.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Specialized.HybridDictionary.Values
  langs:
  - csharp
  name: HybridDictionary
  nameWithType: HybridDictionary
  fullName: System.Collections.Specialized.HybridDictionary
  type: Class
  summary: "Implementerer <xref uid=&quot;langword_csharp_IDictionary&quot; name=&quot;IDictionary&quot; href=&quot;&quot;> </xref> ved hjelp av en <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref> mens samlingen er liten, og deretter bytte til en <xref href=&quot;System.Collections.Hashtable&quot;> </xref> når samlingen henter store."
  remarks: "Denne klassen anbefales for tilfeller der antall elementer i en ordliste er ukjent. Den utnytter forbedret ytelse i en <xref:System.Collections.Specialized.ListDictionary>med små samlinger, og gir mulighet til å bytte til en <xref:System.Collections.Hashtable>som behandler større samlinger bedre enn <xref:System.Collections.Specialized.ListDictionary>.</xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary>       Hvis den opprinnelige størrelsen på samlingen er større enn optimale størrelsen for en <xref:System.Collections.Specialized.ListDictionary>samlingen er lagret i en <xref:System.Collections.Hashtable>unngå overhead med å kopiere elementer fra <xref:System.Collections.Specialized.ListDictionary>til <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary>       Konstruktøren godtar boolsk parameteren som gir brukeren mulighet til å angi om samlingen ignorerer bokstavtypen ved sammenligning av strenger. Hvis samlingen skiller, brukes den nøkkelens implementeringer av <xref:System.Object.GetHashCode%2A?displayProperty=fullName>og <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName> Hvis samlingen skiller ikke mellom, utfører en enkel ordenstall samlingstype sammenligning, som obeys små og reglene for den konstante kulturen. Som standard skiller samlingen. Hvis du vil ha mer informasjon om den konstante kulturen, kan du se <xref:System.Globalization.CultureInfo?displayProperty=fullName>.</xref:System.Globalization.CultureInfo?displayProperty=fullName>       En nøkkel kan ikke være null, men kan en verdi.       Den `foreach` -setningen for språket C# (`For Each` i Visual Basic) returnerer et objekt av typen for elementene i samlingen. Siden hvert element i HybridDictionary er en nøkkel/verdi-par, er ikke elementtypen typen av nøkkelen eller verdien. Elementtypen er i stedet <xref:System.Collections.DictionaryEntry>.</xref:System.Collections.DictionaryEntry> For eksempel: [!code-cpp [System.Collections.Specialized.HybridDictionary2#2](~/add/codesnippet/cpp/t-system.collections.spe_3_1.cpp)][!code-cs[System.Collections.Specialized.HybridDictionary2#2](~/add/codesnippet/csharp/t-system.collections.spe_3_1.cs)][!code-vb[System.Collections.Specialized.HybridDictionary2#2](~/add/codesnippet/visualbasic/t-system.collections.spe_3_1.vb) ] den `foreach` setningen er en tekstbryting rundt enumeratoren, som tillater bare lesing fra, ikke skriving til samlingen.    "
  example:
  - "The following code example demonstrates several of the properties and methods of HybridDictionary.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary2#1](~/add/codesnippet/cpp/t-system.collections.spe_3_2.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary2#1](~/add/codesnippet/csharp/t-system.collections.spe_3_2.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary2#1](~/add/codesnippet/visualbasic/t-system.collections.spe_3_2.vb)]"
  syntax:
    content: 'public class HybridDictionary : System.Collections.IDictionary'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IDictionary
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.#ctor
  id: '#ctor'
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: HybridDictionary()
  nameWithType: HybridDictionary.HybridDictionary()
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary()
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Oppretter et tomt skiller <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
  remarks: "Som standard samlingen skiller og bruker den nøkkelens implementeringen av <xref:System.Object.GetHashCode%2A?displayProperty=fullName>som leverandør for hash-kode og den nøkkelens implementering av <xref:System.Object.Equals%2A?displayProperty=fullName>som Sammenligningsfunksjonen.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName>       Sammenligningsfunksjonen bestemmer om to nøkler er like. Hver nøkkel i en <xref:System.Collections.Specialized.HybridDictionary>må være unike.</xref:System.Collections.Specialized.HybridDictionary>       Denne konstruktøren, er en O(1)-operasjon."
  example:
  - "The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary2#1](~/add/codesnippet/cpp/m-system.collections.spe_9_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary2#1](~/add/codesnippet/csharp/m-system.collections.spe_9_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary2#1](~/add/codesnippet/visualbasic/m-system.collections.spe_9_1.vb)]"
  syntax:
    content: public HybridDictionary ();
    parameters: []
  overload: System.Collections.Specialized.HybridDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: HybridDictionary(Boolean)
  nameWithType: HybridDictionary.HybridDictionary(Boolean)
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary(Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Oppretter et tomt <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> med den angitte store og små bokstaver."
  remarks: "Hvis `caseInsensitive` er `false`, samlingen bruker den nøkkelens implementeringer av <xref:System.Object.GetHashCode%2A?displayProperty=fullName>og <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName> Hvis `caseInsensitive` er `true`, samlingen utfører en enkel ordenstall samlingstype sammenligning, som obeys små og reglene for den konstante kulturen. Hvis du vil ha mer informasjon om den konstante kulturen, kan du se <xref:System.Globalization.CultureInfo?displayProperty=fullName>.</xref:System.Globalization.CultureInfo?displayProperty=fullName>       Denne konstruktøren, er en O(1)-operasjon."
  syntax:
    content: public HybridDictionary (bool caseInsensitive);
    parameters:
    - id: caseInsensitive
      type: System.Boolean
      description: "En boolsk verdi som angir om den <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> skiller ikke mellom."
  overload: System.Collections.Specialized.HybridDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: HybridDictionary(Int32)
  nameWithType: HybridDictionary.HybridDictionary(Int32)
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary(Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Oppretter en skiller <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> med den angitte opprinnelige størrelsen."
  remarks: "Hvis den opprinnelige størrelsen på samlingen er større enn optimale størrelsen for en <xref:System.Collections.Specialized.ListDictionary>samlingen er lagret i en <xref:System.Collections.Hashtable>unngå overhead med å kopiere elementer fra <xref:System.Collections.Specialized.ListDictionary>til <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary>       Som standard samlingen skiller og bruker den nøkkelens implementeringen av <xref:System.Object.GetHashCode%2A?displayProperty=fullName>som leverandør for hash-kode og den nøkkelens implementering av <xref:System.Object.Equals%2A?displayProperty=fullName>som Sammenligningsfunksjonen.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName>       Sammenligningsfunksjonen bestemmer om to nøkler er like. Hver nøkkel i en <xref:System.Collections.Specialized.HybridDictionary>må være unike.</xref:System.Collections.Specialized.HybridDictionary>       Denne konstruktøren, er en O (`n`) operasjonen, der `n` er `initialSize`."
  syntax:
    content: public HybridDictionary (int initialSize);
    parameters:
    - id: initialSize
      type: System.Int32
      description: "Antall oppføringer som den <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> opprinnelig kan inneholde."
  overload: System.Collections.Specialized.HybridDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.#ctor(System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Boolean)'
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: HybridDictionary(Int32,Boolean)
  nameWithType: HybridDictionary.HybridDictionary(Int32,Boolean)
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary(Int32,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Oppretter en <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> med den angitte opprinnelige størrelsen og store og små bokstaver."
  remarks: "Hvis den opprinnelige størrelsen på samlingen er større enn optimale størrelsen for en <xref:System.Collections.Specialized.ListDictionary>samlingen er lagret i en <xref:System.Collections.Hashtable>unngå overhead med å kopiere elementer fra <xref:System.Collections.Specialized.ListDictionary>til <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary>       Hvis `caseInsensitive` er `false`, samlingen bruker den nøkkelens implementeringer av <xref:System.Object.GetHashCode%2A?displayProperty=fullName>og <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName> Hvis `caseInsensitive` er `true`, samlingen utfører en enkel ordenstall samlingstype sammenligning, som obeys små og reglene for den konstante kulturen. Hvis du vil ha mer informasjon om den konstante kulturen, kan du se <xref:System.Globalization.CultureInfo?displayProperty=fullName>.</xref:System.Globalization.CultureInfo?displayProperty=fullName>       Denne konstruktøren, er en O (`n`) operasjonen, der `n` er `initialSize`."
  syntax:
    content: public HybridDictionary (int initialSize, bool caseInsensitive);
    parameters:
    - id: initialSize
      type: System.Int32
      description: "Antall oppføringer som den <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> opprinnelig kan inneholde."
    - id: caseInsensitive
      type: System.Boolean
      description: "En boolsk verdi som angir om den <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> skiller ikke mellom."
  overload: System.Collections.Specialized.HybridDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.Add(System.Object,System.Object)
  id: Add(System.Object,System.Object)
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: Add(Object,Object)
  nameWithType: HybridDictionary.Add(Object,Object)
  fullName: System.Collections.Specialized.HybridDictionary.Add(Object,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Legger til en oppføring med den angitte nøkkelen og verdien til den <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
  remarks: "Et objekt som har ingen sammenheng mellom tilstanden og hash-kodeverdien skal vanligvis ikke brukes som nøkkel. Streng-objekter er for eksempel bedre enn StringBuilder objekter for bruk som nøkler.       En nøkkel ikke `null`, men kan en verdi.       Du kan også bruke den <xref:System.Collections.Specialized.HybridDictionary.Item%2A>til å legge til nye elementer ved å angi verdien for en nøkkel som ikke finnes i den <xref:System.Collections.Specialized.HybridDictionary>, for eksempel `myCollection[&quot;myNonexistentKey&quot;] = myValue`.</xref:System.Collections.Specialized.HybridDictionary> </xref:System.Collections.Specialized.HybridDictionary.Item%2A> Men hvis den angitte nøkkelen finnes allerede i den <xref:System.Collections.Specialized.HybridDictionary>, aktiveres den <xref:System.Collections.Specialized.HybridDictionary.Item%2A>egenskapen overskriver den gamle verdien.</xref:System.Collections.Specialized.HybridDictionary.Item%2A> </xref:System.Collections.Specialized.HybridDictionary> I motsetning endre Add-metode ikke eksisterende elementer.       Når antall elementer er lengre enn den optimale størrelsen for en <xref:System.Collections.Specialized.ListDictionary>elementene kopieres fra <xref:System.Collections.Specialized.ListDictionary>til <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.Specialized.ListDictionary> Imidlertid skjer dette bare én gang. Hvis samlingen allerede er lagret i <xref:System.Collections.Hashtable>og antall elementer som er lavere enn optimale størrelsen for en <xref:System.Collections.Specialized.ListDictionary>samlingen blir værende i <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.Hashtable>       Denne metoden er en O(1)-operasjon."
  example:
  - "The following code example adds to and removes elements from a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/cpp/200580ad-8659-4e63-8e92-_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/csharp/200580ad-8659-4e63-8e92-_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/visualbasic/200580ad-8659-4e63-8e92-_1.vb)]"
  syntax:
    content: public void Add (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "Nøkkelen for å legge til."
    - id: value
      type: System.Object
      description: "Verdien for å legge til. Verdien kan være <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.HybridDictionary.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det finnes allerede en oppføring med samme nøkkel i den <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.Clear
  id: Clear
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: Clear()
  nameWithType: HybridDictionary.Clear()
  fullName: System.Collections.Specialized.HybridDictionary.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Fjerner alle oppføringer fra den <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
  remarks: "<xref:System.Collections.Specialized.HybridDictionary.Count%2A>er satt til null, og frigis også referanser til andre objekter fra elementene i samlingen.</xref:System.Collections.Specialized.HybridDictionary.Count%2A>       Hvis samlingen allerede er lagret i en <xref:System.Collections.Hashtable>samlingen forblir i <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable>       Denne metoden er en O (`n`) operasjonen, der `n` er <xref:System.Collections.Specialized.HybridDictionary.Count%2A>.</xref:System.Collections.Specialized.HybridDictionary.Count%2A>"
  example:
  - "The following code example adds to and removes elements from a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_31_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_31_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_31_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Collections.Specialized.HybridDictionary.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: HybridDictionary.Contains(Object)
  fullName: System.Collections.Specialized.HybridDictionary.Contains(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Bestemmer om den <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> inneholder en bestemt nøkkel."
  remarks: "Denne metoden er en O(1)-operasjon.       Fra og med .NET Framework 2.0, denne metoden brukes på samlingens objektenes <xref:System.Object.Equals%2A>og <xref:System.IComparable.CompareTo%2A>metoder på `key` å finne ut om `item` finnes.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> Forsøket ble gjort i tidligere versjoner av .NET Framework, ved hjelp av <xref:System.Object.Equals%2A>og <xref:System.IComparable.CompareTo%2A>metoder for den `item` parameteren for objekter i samlingen.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  example:
  - "The following code example searches for an element in a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_Contains#1](~/add/codesnippet/cpp/m-system.collections.spe_37_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_Contains#1](~/add/codesnippet/csharp/m-system.collections.spe_37_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_Contains#1](~/add/codesnippet/visualbasic/m-system.collections.spe_37_1.vb)]"
  syntax:
    content: public bool Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: "Nøkkelen for å finne i den <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> inneholder en post med den angitte nøkkelen; ellers, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.HybridDictionary.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: HybridDictionary.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.HybridDictionary.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Kopier de <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> oppføringer til en endimensjonal <xref:System.Array>forekomst i den angitte indeksen.</xref:System.Array>"
  remarks: "Elementene kopieres til <xref:System.Array>i samme rekkefølge som enumeratoren går gjennom <xref:System.Collections.Specialized.HybridDictionary>.</xref:System.Collections.Specialized.HybridDictionary> </xref:System.Array>       Kopiere bare nøklene i den <xref:System.Collections.Specialized.HybridDictionary>, Bruk `HybridDictionary.Keys.CopyTo`.</xref:System.Collections.Specialized.HybridDictionary>       Kopiere bare verdiene i den <xref:System.Collections.Specialized.HybridDictionary>, Bruk `HybridDictionary.Values.CopyTo`.</xref:System.Collections.Specialized.HybridDictionary>       Denne metoden er en O (`n`) operasjonen, der `n` er <xref:System.Collections.Specialized.HybridDictionary.Count%2A>.</xref:System.Collections.Specialized.HybridDictionary.Count%2A>"
  example:
  - "The following code example copies the elements of a <xref:System.Collections.Specialized.HybridDictionary> to an array.  \n  \n [!code-cs[System.Collections.Specialized.HybridDictionary_CopyTo#1](~/add/codesnippet/csharp/0bfe553c-62f4-44ed-b908-_1.cs)]\n [!code-cpp[System.Collections.Specialized.HybridDictionary_CopyTo#1](~/add/codesnippet/cpp/0bfe553c-62f4-44ed-b908-_1.cpp)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_CopyTo#1](~/add/codesnippet/visualbasic/0bfe553c-62f4-44ed-b908-_1.vb)]"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Den endimensjonal <xref:System.Array>som er målet for den <xref:System.Collections.DictionaryEntry>objekter fra <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>.</xref:System.Collections.DictionaryEntry> </xref:System.Array> Den <xref:System.Array>må ha nullbasert indeksering.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Den nullbaserte indeksen i `array` som kopiering begynner."
  overload: System.Collections.Specialized.HybridDictionary.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>er mindre enn null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>er flerdimensjonal.       - eller - antallet elementer i kilden <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> er større enn den tilgjengelige plassen fra <code>arrayIndex</code> til slutten av målet <code>array</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Hva slags kilden <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> kan ikke endres automatisk til av målet <code> array </code>."
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.Count
  id: Count
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: Count
  nameWithType: HybridDictionary.Count
  fullName: System.Collections.Specialized.HybridDictionary.Count
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Henter antall nøkkel/verdi-parene som finnes i den <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/cpp/p-system.collections.spe_9_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/csharp/p-system.collections.spe_9_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/visualbasic/p-system.collections.spe_9_1.vb)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Antall nøkkel/verdi-parene som finnes i den <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>.       Henting av verdien for denne egenskapen er en O(1)-operasjon."
  overload: System.Collections.Specialized.HybridDictionary.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: HybridDictionary.GetEnumerator()
  fullName: System.Collections.Specialized.HybridDictionary.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Returnerer en <xref:System.Collections.IDictionaryEnumerator>som går gjennom den <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>.</xref:System.Collections.IDictionaryEnumerator>"
  remarks: "Den `foreach` -setningen for språket C# (`for each` i Visual Basic) skjuler av hvor komplekse enumeratorene.  Ved hjelp av derfor `foreach` anbefales, i stedet for direkte manipulering enumeratoren.       Enumeratorene kan brukes til å lese data i samlingen, men de kan ikke brukes til å endre den underliggende samlingen.       I utgangspunktet er enumeratoren plassert før det første elementet i samlingen. <xref:System.Collections.IEnumerator.Reset%2A>henter også enumeratoren tilbake til denne plasseringen.</xref:System.Collections.IEnumerator.Reset%2A>  På denne plasseringen <xref:System.Collections.IEnumerator.Current%2A>er udefinert.</xref:System.Collections.IEnumerator.Current%2A> Du må derfor kalle <xref:System.Collections.IEnumerator.MoveNext%2A>å flytte enumeratoren til det første elementet i samlingen før leser <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>Returnerer det samme objektet før enten <xref:System.Collections.IEnumerator.MoveNext%2A>eller <xref:System.Collections.IEnumerator.Reset%2A>kalles.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>angir <xref:System.Collections.IEnumerator.Current%2A>til neste element.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Hvis <xref:System.Collections.IEnumerator.MoveNext%2A>formidler slutten av samlingen enumeratoren er plassert etter det siste elementet i samlingen og <xref:System.Collections.IEnumerator.MoveNext%2A>returnerer `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Når enumeratoren er på denne plasseringen, etterfølgende kall til <xref:System.Collections.IEnumerator.MoveNext%2A>også returnere `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Hvis siste kall til <xref:System.Collections.IEnumerator.MoveNext%2A>returnerte `false`, <xref:System.Collections.IEnumerator.Current%2A>er udefinert.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Angi <xref:System.Collections.IEnumerator.Current%2A>til det første elementet i samlingen på nytt, kan du kalle <xref:System.Collections.IEnumerator.Reset%2A>etterfulgt av <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A>       En opplisting forblir gyldig så lenge samlingen forblir uendret. Hvis du endrer til samlingen, for eksempel å legge til, endre eller slette elementer, enumeratoren ugyldiggjøres, og virkemåten er ikke definert.       Enumeratoren har ikke eksklusiv tilgang til samlingen. lister opp i en samling er derfor gjelder ikke en sikker-prosedyre.  For å garantere tråd sikkerhetsnivået under opplisting, kan du låse samlingen under hele opplistingen.  Du må implementere din egen synkronisering for å tillate samlingen for å få tilgang til flere tråder for lesing og skriving.       Denne metoden er en O(1)-operasjon."
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/cpp/m-system.collections.spe_19_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/csharp/m-system.collections.spe_19_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/visualbasic/m-system.collections.spe_19_1.vb)]"
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "An <xref:System.Collections.IDictionaryEnumerator> for the <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;></xref>.</xref:System.Collections.IDictionaryEnumerator>"
  overload: System.Collections.Specialized.HybridDictionary.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.IsFixedSize
  id: IsFixedSize
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: HybridDictionary.IsFixedSize
  fullName: System.Collections.Specialized.HybridDictionary.IsFixedSize
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Henter en verdi som angir om den <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> har en fast størrelse."
  remarks: "<xref:System.Collections.Specialized.HybridDictionary>implementerer egenskapen IsFixedSize fordi den er påkrevd av den <xref:System.Collections.IDictionary?displayProperty=fullName>grensesnittet.</xref:System.Collections.IDictionary?displayProperty=fullName></xref:System.Collections.Specialized.HybridDictionary>       En samling med fast størrelse tillater ikke at tillegging eller fjerning av elementene etter at samlingen er opprettet, men det gjør endring av eksisterende elementer.       En samling med fast størrelse er bare en samling med en tekstbryting som hindrer legge til og fjerne elementer. Hvis du endrer til den underliggende samlingen, inkludert tillegging eller fjerning av elementer, gjenspeiler samlingen fast størrelse endringene.       Henting av verdien for denne egenskapen er en O(1)-operasjon."
  syntax:
    content: public bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "Denne egenskapen returnerer alltid <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.HybridDictionary.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: HybridDictionary.IsReadOnly
  fullName: System.Collections.Specialized.HybridDictionary.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Henter en verdi som angir om den <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> er skrivebeskyttet."
  remarks: "<xref:System.Collections.Specialized.HybridDictionary>implementerer egenskapen IsReadOnly fordi den er påkrevd av den <xref:System.Collections.IDictionary?displayProperty=fullName>grensesnittet.</xref:System.Collections.IDictionary?displayProperty=fullName></xref:System.Collections.Specialized.HybridDictionary>       En samling som er skrivebeskyttet tillater ikke tillegg, fjerning eller endring av elementene etter at samlingen er opprettet.       En samling som er skrivebeskyttet er bare en samling med en tekstbryting som hindrer endring av samlingen. Hvis du endrer underliggende samlingen, gjenspeiler skrivebeskyttet samling endringene.       Henting av verdien for denne egenskapen er en O(1)-operasjon."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Denne egenskapen returnerer alltid <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.HybridDictionary.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.IsSynchronized
  id: IsSynchronized
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: HybridDictionary.IsSynchronized
  fullName: System.Collections.Specialized.HybridDictionary.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Henter en verdi som angir om den <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> er synkronisert (tråden trygt)."
  remarks: "<xref:System.Collections.Specialized.HybridDictionary>implementerer egenskapen IsSynchronized fordi den er påkrevd av den <xref:System.Collections.ICollection?displayProperty=fullName>grensesnittet.</xref:System.Collections.ICollection?displayProperty=fullName></xref:System.Collections.Specialized.HybridDictionary>       Avledede klasser kan gi en synkroniserte versjon av den <xref:System.Collections.Specialized.HybridDictionary>ved hjelp av den <xref:System.Collections.Specialized.HybridDictionary.SyncRoot%2A>egenskapen.</xref:System.Collections.Specialized.HybridDictionary.SyncRoot%2A> </xref:System.Collections.Specialized.HybridDictionary>       Lister opp i en samling vil si gjelder ikke sikker. Selv når en samling synkroniseres, kan andre tråder fortsatt endre samlingen, som fører til at enumeratoren til Iverksett et unntak. For å garantere tråd sikkerhetsnivået under opplisting, kan du låse samlingen under hele opplistingen eller opp unntak som er et resultat av endringer foretatt av andre tråder."
  example:
  - "The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.HybridDictionary.SyncRoot%2A> during the entire enumeration.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary2#3](~/add/codesnippet/cpp/p-system.collections.spe_5_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary2#3](~/add/codesnippet/csharp/p-system.collections.spe_5_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary2#3](~/add/codesnippet/visualbasic/p-system.collections.spe_5_1.vb)]  \n  \n Retrieving the value of this property is an O(1) operation."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Denne egenskapen returnerer alltid <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.HybridDictionary.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.Item(System.Object)
  id: Item(System.Object)
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: Item(Object)
  nameWithType: HybridDictionary.Item(Object)
  fullName: System.Collections.Specialized.HybridDictionary.Item(Object)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Henter eller angir verdien som er forbundet med den angitte nøkkelen."
  remarks: "Denne egenskapen gjør mulighet å få tilgang til et spesifikt element i samlingen ved hjelp av denne syntaksen: `myCollection[key]`.       Du kan også bruke elementegenskapen du legger til nye elementer ved å angi verdien for en nøkkel som ikke finnes i den <xref:System.Collections.Specialized.HybridDictionary>, for eksempel `myCollection[&quot;myNonexistentKey&quot;] = myValue`.</xref:System.Collections.Specialized.HybridDictionary> Men hvis den angitte nøkkelen finnes allerede i den <xref:System.Collections.Specialized.HybridDictionary>, angi elementegenskapen overskriver den gamle verdien.</xref:System.Collections.Specialized.HybridDictionary> I motsetning den <xref:System.Collections.Specialized.HybridDictionary.Add%2A>metoden ikke endre eksisterende elementer.</xref:System.Collections.Specialized.HybridDictionary.Add%2A>       En nøkkel ikke `null`, men kan en verdi. Å skille mellom `null` som returneres fordi den angitte nøkkelen ikke finnes og `null` som returneres fordi verdien for den angitte nøkkelen er `null`, bruker du <xref:System.Collections.Specialized.HybridDictionary.Contains%2A>metode for å finne ut om nøkkelen finnes i listen.</xref:System.Collections.Specialized.HybridDictionary.Contains%2A>       Språket C# bruker nøkkelordet til å definere Indekserere i stedet for å implementere elementegenskapen. Visual Basic implementerer elementet som en egenskap, som gir samme indekserings funksjonalitet.       Henting av verdien for denne egenskapen er en O(1)-operasjonen. angivelse av egenskapen er også en O(1)-operasjon."
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/cpp/p-system.collections.spe_27_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/csharp/p-system.collections.spe_27_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/visualbasic/p-system.collections.spe_27_1.vb)]"
  syntax:
    content: public object this[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: "Nøkkelen som verdien skal hente eller angi."
    return:
      type: System.Object
      description: "Verdien som er knyttet til den angitte nøkkelen. Hvis den angitte nøkkelen ikke finnes, forsøker å få den returnerer <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, og forsøk på å angi den oppretter en ny post ved hjelp av den angitte nøkkelen."
  overload: System.Collections.Specialized.HybridDictionary.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.Keys
  id: Keys
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: Keys
  nameWithType: HybridDictionary.Keys
  fullName: System.Collections.Specialized.HybridDictionary.Keys
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Henter en <xref:System.Collections.ICollection>som inneholder nøklene i den <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>.</xref:System.Collections.ICollection>"
  remarks: "Rekkefølgen på verdiene i den <xref:System.Collections.ICollection>er ikke angitt, men det er den samme rekkefølgen som de tilhørende verdiene i den <xref:System.Collections.ICollection>returnert av den <xref:System.Collections.Specialized.HybridDictionary.Values%2A>metoden.</xref:System.Collections.Specialized.HybridDictionary.Values%2A> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection>       Det returnerte <xref:System.Collections.ICollection>er ikke en statisk kopi; i stedet <xref:System.Collections.ICollection>refererer tilbake til nøklene i opprinnelige <xref:System.Collections.Specialized.HybridDictionary>.</xref:System.Collections.Specialized.HybridDictionary> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection> Endrer derfor <xref:System.Collections.Specialized.HybridDictionary>fortsette skal vises i <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> </xref:System.Collections.Specialized.HybridDictionary>       Henting av verdien for denne egenskapen er en O(1)-operasjon."
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/cpp/p-system.collections.spe_20_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/csharp/p-system.collections.spe_20_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/visualbasic/p-system.collections.spe_20_1.vb)]"
  syntax:
    content: public System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "En <xref:System.Collections.ICollection>som inneholder nøklene i den <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Collections.Specialized.HybridDictionary.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: HybridDictionary.Remove(Object)
  fullName: System.Collections.Specialized.HybridDictionary.Remove(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Fjerner posten med den angitte nøkkelen fra den <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
  remarks: "Hvis den <xref:System.Collections.Specialized.HybridDictionary>ikke inneholder et element med den angitte nøkkelen i <xref:System.Collections.Specialized.HybridDictionary>forblir uendret.</xref:System.Collections.Specialized.HybridDictionary> </xref:System.Collections.Specialized.HybridDictionary> Ingen unntak.       Hvis samlingen allerede er lagret i <xref:System.Collections.Hashtable>og antall elementer som er lavere enn optimale størrelsen for en <xref:System.Collections.Specialized.ListDictionary>samlingen blir værende i til <xref:System.Collections.Hashtable>å unngå overhead med å kopiere elementer fra <xref:System.Collections.Hashtable>tilbake til en <xref:System.Collections.Specialized.ListDictionary>.</xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.Hashtable>       Denne metoden er en O(1)-operasjon."
  example:
  - "The following code example adds to and removes elements from a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_0_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_0_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_0_1.vb)]"
  syntax:
    content: public void Remove (object key);
    parameters:
    - id: key
      type: System.Object
      description: "Nøkkelen for å fjerne."
  overload: System.Collections.Specialized.HybridDictionary.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.SyncRoot
  id: SyncRoot
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: SyncRoot
  nameWithType: HybridDictionary.SyncRoot
  fullName: System.Collections.Specialized.HybridDictionary.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Henter et objekt som kan brukes til å synkronisere tilgang til den <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
  remarks: "Avledede klasser kan gi sin egen synkroniserte versjon av den <xref:System.Collections.Specialized.HybridDictionary>ved hjelp av SyncRoot-egenskapen.</xref:System.Collections.Specialized.HybridDictionary> Synkronisering koden må utføre operasjoner på SyncRoot av den <xref:System.Collections.Specialized.HybridDictionary>, ikke direkte på <xref:System.Collections.Specialized.HybridDictionary>.</xref:System.Collections.Specialized.HybridDictionary> </xref:System.Collections.Specialized.HybridDictionary> Dette sikrer ordentlig med samlinger som er avledet fra andre objekter. Nærmere bestemt den opprettholder riktig synkronisering med andre tråder som kan være samtidig endring av <xref:System.Collections.Specialized.HybridDictionary>objektet.</xref:System.Collections.Specialized.HybridDictionary>       Lister opp i en samling vil si gjelder ikke sikker. Selv når en samling synkroniseres, kan andre tråder fortsatt endre samlingen, som fører til at enumeratoren til Iverksett et unntak. For å garantere tråd sikkerhetsnivået under opplisting, kan du låse samlingen under hele opplistingen eller opp unntak som er et resultat av endringer foretatt av andre tråder."
  example:
  - "The following code example shows how to lock the collection using the SyncRoot during the entire enumeration.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary2#3](~/add/codesnippet/cpp/p-system.collections.spe_22_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary2#3](~/add/codesnippet/csharp/p-system.collections.spe_22_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary2#3](~/add/codesnippet/visualbasic/p-system.collections.spe_22_1.vb)]  \n  \n Retrieving the value of this property is an O(1) operation."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Et objekt som kan brukes til å synkronisere tilgang til den <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
  overload: System.Collections.Specialized.HybridDictionary.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: HybridDictionary.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Specialized.HybridDictionary.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Returnerer en <xref:System.Collections.IEnumerator>som går gjennom den <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  remarks: "Den `foreach` -setningen for språket C# (`for each` i Visual Basic) skjuler av hvor komplekse enumeratorene.  Ved hjelp av derfor `foreach` anbefales, i stedet for direkte manipulering enumeratoren.       Enumeratorene kan brukes til å lese data i samlingen, men de kan ikke brukes til å endre den underliggende samlingen.       I utgangspunktet er enumeratoren plassert før det første elementet i samlingen. <xref:System.Collections.IEnumerator.Reset%2A>henter også enumeratoren tilbake til denne plasseringen.</xref:System.Collections.IEnumerator.Reset%2A> På dette Plasser, kaller <xref:System.Collections.IEnumerator.Current%2A>oppstår det et unntak.</xref:System.Collections.IEnumerator.Current%2A> Du må derfor kalle <xref:System.Collections.IEnumerator.MoveNext%2A>å flytte enumeratoren til det første elementet i samlingen før leser <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>Returnerer det samme objektet før enten <xref:System.Collections.IEnumerator.MoveNext%2A>eller <xref:System.Collections.IEnumerator.Reset%2A>kalles.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>angir <xref:System.Collections.IEnumerator.Current%2A>til neste element.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Hvis <xref:System.Collections.IEnumerator.MoveNext%2A>formidler slutten av samlingen enumeratoren er plassert etter det siste elementet i samlingen og <xref:System.Collections.IEnumerator.MoveNext%2A>returnerer `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Når enumeratoren er på denne plasseringen, etterfølgende kall til <xref:System.Collections.IEnumerator.MoveNext%2A>også returnere `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Hvis siste kall til <xref:System.Collections.IEnumerator.MoveNext%2A>returnerte `false`, kall <xref:System.Collections.IEnumerator.Current%2A>oppstår det et unntak.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Angi <xref:System.Collections.IEnumerator.Current%2A>til det første elementet i samlingen på nytt, kan du kalle <xref:System.Collections.IEnumerator.Reset%2A>etterfulgt av <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A>       En opplisting forblir gyldig så lenge samlingen forblir uendret. Hvis du endrer til samlingen, for eksempel å legge til, endre eller slette elementer, ugyldiggjøres, enumeratoren og neste kall eller <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A>oppstår en <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Hvis samlingen er endret mellom <xref:System.Collections.IEnumerator.MoveNext%2A>og <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>returnerer elementet som det, selv om enumeratoren ugyldiggjøres allerede.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       Enumeratoren har ikke eksklusiv tilgang til samlingen. lister opp i en samling er derfor gjelder ikke en sikker-prosedyre. Selv når en samling synkroniseres, kan andre tråder fortsatt endre samlingen, som fører til at enumeratoren til Iverksett et unntak. For å garantere tråd sikkerhetsnivået under opplisting, kan du låse samlingen under hele opplistingen eller opp unntak som er et resultat av endringer foretatt av andre tråder.       Denne metoden er en O(1)-operasjon."
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/cpp/cfcf8780-64b5-47b8-8217-_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/csharp/cfcf8780-64b5-47b8-8217-_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/visualbasic/cfcf8780-64b5-47b8-8217-_1.vb)]"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> for the <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Collections.Specialized.HybridDictionary.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.Values
  id: Values
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: Values
  nameWithType: HybridDictionary.Values
  fullName: System.Collections.Specialized.HybridDictionary.Values
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Henter en <xref:System.Collections.ICollection>som inneholder verdiene i den <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>.</xref:System.Collections.ICollection>"
  remarks: "Rekkefølgen på verdiene i den <xref:System.Collections.ICollection>er ikke angitt, men det er den samme rekkefølgen som de tilknyttede nøklene i den <xref:System.Collections.ICollection>returnert av den <xref:System.Collections.Specialized.HybridDictionary.Keys%2A>metoden.</xref:System.Collections.Specialized.HybridDictionary.Keys%2A> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection>       Det returnerte <xref:System.Collections.ICollection>er ikke en statisk kopi; i stedet <xref:System.Collections.ICollection>refererer tilbake til verdiene i opprinnelige <xref:System.Collections.Specialized.HybridDictionary>.</xref:System.Collections.Specialized.HybridDictionary> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection> Endrer derfor <xref:System.Collections.Specialized.HybridDictionary>fortsette skal vises i <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> </xref:System.Collections.Specialized.HybridDictionary>       Henting av verdien for denne egenskapen er en O(1)-operasjon."
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/cpp/p-system.collections.spe_14_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/csharp/p-system.collections.spe_14_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/visualbasic/p-system.collections.spe_14_1.vb)]"
  syntax:
    content: public System.Collections.ICollection Values { get; }
    return:
      type: System.Collections.ICollection
      description: "En <xref:System.Collections.ICollection>som inneholder verdiene i den <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Collections.Specialized.HybridDictionary.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Collections.Specialized.HybridDictionary.#ctor
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: HybridDictionary()
  nameWithType: HybridDictionary.HybridDictionary()
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary()
- uid: System.Collections.Specialized.HybridDictionary.#ctor(System.Boolean)
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: HybridDictionary(Boolean)
  nameWithType: HybridDictionary.HybridDictionary(Boolean)
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Specialized.HybridDictionary.#ctor(System.Int32)
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: HybridDictionary(Int32)
  nameWithType: HybridDictionary.HybridDictionary(Int32)
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Specialized.HybridDictionary.#ctor(System.Int32,System.Boolean)
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: HybridDictionary(Int32,Boolean)
  nameWithType: HybridDictionary.HybridDictionary(Int32,Boolean)
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary(Int32,Boolean)
- uid: System.Collections.Specialized.HybridDictionary.Add(System.Object,System.Object)
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Add(Object,Object)
  nameWithType: HybridDictionary.Add(Object,Object)
  fullName: System.Collections.Specialized.HybridDictionary.Add(Object,Object)
- uid: System.Collections.Specialized.HybridDictionary.Clear
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Clear()
  nameWithType: HybridDictionary.Clear()
  fullName: System.Collections.Specialized.HybridDictionary.Clear()
- uid: System.Collections.Specialized.HybridDictionary.Contains(System.Object)
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Contains(Object)
  nameWithType: HybridDictionary.Contains(Object)
  fullName: System.Collections.Specialized.HybridDictionary.Contains(Object)
- uid: System.Collections.Specialized.HybridDictionary.CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: HybridDictionary.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.HybridDictionary.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.Specialized.HybridDictionary.Count
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Count
  nameWithType: HybridDictionary.Count
  fullName: System.Collections.Specialized.HybridDictionary.Count
- uid: System.Collections.Specialized.HybridDictionary.GetEnumerator
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: GetEnumerator()
  nameWithType: HybridDictionary.GetEnumerator()
  fullName: System.Collections.Specialized.HybridDictionary.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Collections.Specialized.HybridDictionary.IsFixedSize
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: IsFixedSize
  nameWithType: HybridDictionary.IsFixedSize
  fullName: System.Collections.Specialized.HybridDictionary.IsFixedSize
- uid: System.Collections.Specialized.HybridDictionary.IsReadOnly
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: IsReadOnly
  nameWithType: HybridDictionary.IsReadOnly
  fullName: System.Collections.Specialized.HybridDictionary.IsReadOnly
- uid: System.Collections.Specialized.HybridDictionary.IsSynchronized
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: IsSynchronized
  nameWithType: HybridDictionary.IsSynchronized
  fullName: System.Collections.Specialized.HybridDictionary.IsSynchronized
- uid: System.Collections.Specialized.HybridDictionary.Item(System.Object)
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Item(Object)
  nameWithType: HybridDictionary.Item(Object)
  fullName: System.Collections.Specialized.HybridDictionary.Item(Object)
- uid: System.Collections.Specialized.HybridDictionary.Keys
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Keys
  nameWithType: HybridDictionary.Keys
  fullName: System.Collections.Specialized.HybridDictionary.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Specialized.HybridDictionary.Remove(System.Object)
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Remove(Object)
  nameWithType: HybridDictionary.Remove(Object)
  fullName: System.Collections.Specialized.HybridDictionary.Remove(Object)
- uid: System.Collections.Specialized.HybridDictionary.SyncRoot
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: SyncRoot
  nameWithType: HybridDictionary.SyncRoot
  fullName: System.Collections.Specialized.HybridDictionary.SyncRoot
- uid: System.Collections.Specialized.HybridDictionary.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: HybridDictionary.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Specialized.HybridDictionary.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Specialized.HybridDictionary.Values
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Values
  nameWithType: HybridDictionary.Values
  fullName: System.Collections.Specialized.HybridDictionary.Values
- uid: System.Collections.Specialized.HybridDictionary.#ctor*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: HybridDictionary
  nameWithType: HybridDictionary.HybridDictionary
- uid: System.Collections.Specialized.HybridDictionary.Add*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Add
  nameWithType: HybridDictionary.Add
- uid: System.Collections.Specialized.HybridDictionary.Clear*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Clear
  nameWithType: HybridDictionary.Clear
- uid: System.Collections.Specialized.HybridDictionary.Contains*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Contains
  nameWithType: HybridDictionary.Contains
- uid: System.Collections.Specialized.HybridDictionary.CopyTo*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: CopyTo
  nameWithType: HybridDictionary.CopyTo
- uid: System.Collections.Specialized.HybridDictionary.Count*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Count
  nameWithType: HybridDictionary.Count
- uid: System.Collections.Specialized.HybridDictionary.GetEnumerator*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: GetEnumerator
  nameWithType: HybridDictionary.GetEnumerator
- uid: System.Collections.Specialized.HybridDictionary.IsFixedSize*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: IsFixedSize
  nameWithType: HybridDictionary.IsFixedSize
- uid: System.Collections.Specialized.HybridDictionary.IsReadOnly*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: IsReadOnly
  nameWithType: HybridDictionary.IsReadOnly
- uid: System.Collections.Specialized.HybridDictionary.IsSynchronized*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: IsSynchronized
  nameWithType: HybridDictionary.IsSynchronized
- uid: System.Collections.Specialized.HybridDictionary.Item*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Item
  nameWithType: HybridDictionary.Item
- uid: System.Collections.Specialized.HybridDictionary.Keys*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Keys
  nameWithType: HybridDictionary.Keys
- uid: System.Collections.Specialized.HybridDictionary.Remove*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Remove
  nameWithType: HybridDictionary.Remove
- uid: System.Collections.Specialized.HybridDictionary.SyncRoot*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: SyncRoot
  nameWithType: HybridDictionary.SyncRoot
- uid: System.Collections.Specialized.HybridDictionary.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: HybridDictionary.System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.Specialized.HybridDictionary.Values*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Values
  nameWithType: HybridDictionary.Values
