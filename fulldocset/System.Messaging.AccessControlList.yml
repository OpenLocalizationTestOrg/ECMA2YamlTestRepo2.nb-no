### YamlMime:ManagedReference
items:
- uid: System.Messaging.AccessControlList
  id: AccessControlList
  children:
  - System.Messaging.AccessControlList.#ctor
  - System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)
  - System.Messaging.AccessControlList.Contains(System.Messaging.AccessControlEntry)
  - System.Messaging.AccessControlList.CopyTo(System.Messaging.AccessControlEntry[],System.Int32)
  - System.Messaging.AccessControlList.IndexOf(System.Messaging.AccessControlEntry)
  - System.Messaging.AccessControlList.Insert(System.Int32,System.Messaging.AccessControlEntry)
  - System.Messaging.AccessControlList.Remove(System.Messaging.AccessControlEntry)
  langs:
  - csharp
  name: AccessControlList
  nameWithType: AccessControlList
  fullName: System.Messaging.AccessControlList
  type: Class
  summary: "Inneholder en liste over tilgangskontrolloppføringer angir tilgangsrettigheter for én eller flere trustee-informasjon."
  remarks: "Bruk klassen AccessControlList til å angi flere trustee-informasjon og tilgang til rettigheter til å legge til med et enkelt kall når du angir. Konstruere din tilgangskontrollisten ved å legge til en access control for hver trustee og tilgang rettigheter kombinasjon.       En AccessControlList identifiserer trustee-informasjon som er gitt eller nektet tilgang til sikrede objektet. Når en prosess prøver å få tilgang til en som kan sikres, kontrollerer systemet tilgangskontrolloppføringer i objektets tilgangskontrolliste å avgjøre om å gi tilgang til den. Hvis objektet ikke har en tilgangskontrolliste, gir full tilgang til alt i systemet. Hvis objektets tilgangskontrolliste har ingen oppføringer, nekter systemet alle forsøk på å få tilgang til objektet.       Systemet kontrollerer tilgangskontrolloppføringene i rekkefølge til det finner en eller flere som tillater at de forespurte tilgangsrettighetene eller til noen av de forespurte tilgangsrettighetene er avvist.       Undersøker systemet hver <xref:System.Messaging.AccessControlEntry>i rekkefølge til én av følgende hendelser oppstår: – en tilgang- <xref:System.Messaging.AccessControlEntry>eksplisitt nekter noen av de forespurte tilgangsrettighetene til en av trustee-informasjon som er oppført i trådens tilgangsmerke.</xref:System.Messaging.AccessControlEntry> </xref:System.Messaging.AccessControlEntry>      – Én eller flere tilgang tillatte <xref:System.Messaging.AccessControlEntry>elementer for trustee-informasjon som vises i trådens tilgangsmerke eksplisitt gi de forespurte tilgangsrettighetene.</xref:System.Messaging.AccessControlEntry>      -Alle <xref:System.Messaging.AccessControlEntry>elementer er kontrollert og det fremdeles minst én forespurte tilgangsrettigheter som ikke har blitt eksplisitt tillatelse, og da implisitt tilgang.</xref:System.Messaging.AccessControlEntry>"
  syntax:
    content: 'public class AccessControlList : System.Collections.CollectionBase'
  inheritance:
  - System.Object
  - System.Collections.CollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.CollectionBase.Capacity
  - System.Collections.CollectionBase.Clear
  - System.Collections.CollectionBase.Count
  - System.Collections.CollectionBase.GetEnumerator
  - System.Collections.CollectionBase.InnerList
  - System.Collections.CollectionBase.List
  - System.Collections.CollectionBase.OnClear
  - System.Collections.CollectionBase.OnClearComplete
  - System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.OnValidate(System.Object)
  - System.Collections.CollectionBase.RemoveAt(System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot
  - System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IsFixedSize
  - System.Collections.CollectionBase.System#Collections#IList#IsReadOnly
  - System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
  - System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
  platform:
  - net462
- uid: System.Messaging.AccessControlList.#ctor
  id: '#ctor'
  parent: System.Messaging.AccessControlList
  langs:
  - csharp
  name: AccessControlList()
  nameWithType: AccessControlList.AccessControlList()
  fullName: System.Messaging.AccessControlList.AccessControlList()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Messaging.AccessControlList&quot;> </xref> klasse."
  syntax:
    content: public AccessControlList ();
    parameters: []
  overload: System.Messaging.AccessControlList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)
  id: Add(System.Messaging.AccessControlEntry)
  parent: System.Messaging.AccessControlList
  langs:
  - csharp
  name: Add(AccessControlEntry)
  nameWithType: AccessControlList.Add(AccessControlEntry)
  fullName: System.Messaging.AccessControlList.Add(AccessControlEntry)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Tilføyer en oppføring for kontroll av tilgang til tilgangskontrollisten."
  syntax:
    content: public int Add (System.Messaging.AccessControlEntry entry);
    parameters:
    - id: entry
      type: System.Messaging.AccessControlEntry
      description: "En <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> skal føyes til slutten av tilgangskontrollisten."
    return:
      type: System.Int32
      description: "Posisjonen den nye access control oppføringen ble satt inn."
  overload: System.Messaging.AccessControlList.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>entry</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.AccessControlList.Contains(System.Messaging.AccessControlEntry)
  id: Contains(System.Messaging.AccessControlEntry)
  parent: System.Messaging.AccessControlList
  langs:
  - csharp
  name: Contains(AccessControlEntry)
  nameWithType: AccessControlList.Contains(AccessControlEntry)
  fullName: System.Messaging.AccessControlList.Contains(AccessControlEntry)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Bestemmer om tilgangskontrollisten inneholder en bestemt access control oppføring."
  syntax:
    content: public bool Contains (System.Messaging.AccessControlEntry entry);
    parameters:
    - id: entry
      type: System.Messaging.AccessControlEntry
      description: "Den <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> i tilgangskontrollisten."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis oppføringen access control finnes i tilgangskontrollisten; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.AccessControlList.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.AccessControlList.CopyTo(System.Messaging.AccessControlEntry[],System.Int32)
  id: CopyTo(System.Messaging.AccessControlEntry[],System.Int32)
  parent: System.Messaging.AccessControlList
  langs:
  - csharp
  name: CopyTo(AccessControlEntry[],Int32)
  nameWithType: AccessControlList.CopyTo(AccessControlEntry[],Int32)
  fullName: System.Messaging.AccessControlList.CopyTo(AccessControlEntry[],Int32)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Kopier hele tilgangskontrollisten til en kompatibel endimensjonal matrise tilgang kontrollere oppføringene, med Start fra den angitte indeksen på Målmatrisen."
  syntax:
    content: public void CopyTo (System.Messaging.AccessControlEntry[] array, int index);
    parameters:
    - id: array
      type: System.Messaging.AccessControlEntry[]
      description: "En matrise av typen <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> til listen for tilgangskontrolloppføringer skal kopieres. Matrisen må ha nullbasert indeksering."
    - id: index
      type: System.Int32
      description: "Indeksen i matrisen som du vil kopiere listen for tilgangskontrolloppføringer."
  overload: System.Messaging.AccessControlList.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>array</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den <code> index </code> parameteren er mindre enn null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> index </code> parameteren er større enn eller lik lengden på den <code> array </code> parameteren.       - eller - antallet elementer i kilde-tilgangskontrollisten er større enn den tilgjengelige plassen fra <code> index </code> til slutten av Målmatrisen for tilgangskontrolloppføringer."
  platform:
  - net462
- uid: System.Messaging.AccessControlList.IndexOf(System.Messaging.AccessControlEntry)
  id: IndexOf(System.Messaging.AccessControlEntry)
  parent: System.Messaging.AccessControlList
  langs:
  - csharp
  name: IndexOf(AccessControlEntry)
  nameWithType: AccessControlList.IndexOf(AccessControlEntry)
  fullName: System.Messaging.AccessControlList.IndexOf(AccessControlEntry)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Bestemmer bestemte indeksen for en access control-oppføring i tilgangskontrollisten."
  syntax:
    content: public int IndexOf (System.Messaging.AccessControlEntry entry);
    parameters:
    - id: entry
      type: System.Messaging.AccessControlEntry
      description: "Den <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> i tilgangskontrollisten."
    return:
      type: System.Int32
      description: "Indeksen for posten hvis det ble funnet i listen. Ellers, -1"
  overload: System.Messaging.AccessControlList.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.AccessControlList.Insert(System.Int32,System.Messaging.AccessControlEntry)
  id: Insert(System.Int32,System.Messaging.AccessControlEntry)
  parent: System.Messaging.AccessControlList
  langs:
  - csharp
  name: Insert(Int32,AccessControlEntry)
  nameWithType: AccessControlList.Insert(Int32,AccessControlEntry)
  fullName: System.Messaging.AccessControlList.Insert(Int32,AccessControlEntry)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Setter inn en access control oppføring i tilgangskontrollisten fra den angitte posisjonen."
  remarks: "Hvis den `index` parameteren er lik antallet elementer i tilgangskontrollisten og posten føyes til slutten. Oppføringene etter pekeren Flytt ellers ned å gi plass til nye elementet i listen."
  syntax:
    content: public void Insert (int index, System.Messaging.AccessControlEntry entry);
    parameters:
    - id: index
      type: System.Int32
      description: "Access control posten skal settes den nullbaserte indeksen."
    - id: entry
      type: System.Messaging.AccessControlEntry
      description: "En <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> å sette inn i tilgangskontrollisten."
  overload: System.Messaging.AccessControlList.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den <code> index </code> -parameteren er ikke en gyldig indeks i denne tilgangskontrollisten."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>entry</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.AccessControlList.Remove(System.Messaging.AccessControlEntry)
  id: Remove(System.Messaging.AccessControlEntry)
  parent: System.Messaging.AccessControlList
  langs:
  - csharp
  name: Remove(AccessControlEntry)
  nameWithType: AccessControlList.Remove(AccessControlEntry)
  fullName: System.Messaging.AccessControlList.Remove(AccessControlEntry)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Fjerner den første forekomsten av en bestemt access control oppføring fra tilgangskontrollisten."
  remarks: "Tilgangskontrolloppføringer som følger fjernes elementet Flytt opp skal ha vacated punktet."
  syntax:
    content: public void Remove (System.Messaging.AccessControlEntry entry);
    parameters:
    - id: entry
      type: System.Messaging.AccessControlEntry
      description: "Den <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> fjerne fra tilgangskontrollisten."
  overload: System.Messaging.AccessControlList.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>entry</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.CollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Messaging.AccessControlList.#ctor
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: AccessControlList()
  nameWithType: AccessControlList.AccessControlList()
  fullName: System.Messaging.AccessControlList.AccessControlList()
- uid: System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: Add(AccessControlEntry)
  nameWithType: AccessControlList.Add(AccessControlEntry)
  fullName: System.Messaging.AccessControlList.Add(AccessControlEntry)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Messaging.AccessControlEntry
  parent: System.Messaging
  isExternal: false
  name: AccessControlEntry
  nameWithType: AccessControlEntry
  fullName: System.Messaging.AccessControlEntry
- uid: System.Messaging.AccessControlList.Contains(System.Messaging.AccessControlEntry)
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: Contains(AccessControlEntry)
  nameWithType: AccessControlList.Contains(AccessControlEntry)
  fullName: System.Messaging.AccessControlList.Contains(AccessControlEntry)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Messaging.AccessControlList.CopyTo(System.Messaging.AccessControlEntry[],System.Int32)
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: CopyTo(AccessControlEntry[],Int32)
  nameWithType: AccessControlList.CopyTo(AccessControlEntry[],Int32)
  fullName: System.Messaging.AccessControlList.CopyTo(AccessControlEntry[],Int32)
- uid: System.Messaging.AccessControlEntry[]
  parent: System.Messaging
  isExternal: false
  name: AccessControlEntry
  nameWithType: AccessControlEntry
  fullName: System.Messaging.AccessControlEntry[]
  spec.csharp:
  - uid: System.Messaging.AccessControlEntry
    name: AccessControlEntry
    nameWithType: AccessControlEntry
    fullName: AccessControlEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Messaging.AccessControlList.IndexOf(System.Messaging.AccessControlEntry)
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: IndexOf(AccessControlEntry)
  nameWithType: AccessControlList.IndexOf(AccessControlEntry)
  fullName: System.Messaging.AccessControlList.IndexOf(AccessControlEntry)
- uid: System.Messaging.AccessControlList.Insert(System.Int32,System.Messaging.AccessControlEntry)
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: Insert(Int32,AccessControlEntry)
  nameWithType: AccessControlList.Insert(Int32,AccessControlEntry)
  fullName: System.Messaging.AccessControlList.Insert(Int32,AccessControlEntry)
- uid: System.Messaging.AccessControlList.Remove(System.Messaging.AccessControlEntry)
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: Remove(AccessControlEntry)
  nameWithType: AccessControlList.Remove(AccessControlEntry)
  fullName: System.Messaging.AccessControlList.Remove(AccessControlEntry)
- uid: System.Messaging.AccessControlList.#ctor*
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: AccessControlList
  nameWithType: AccessControlList.AccessControlList
- uid: System.Messaging.AccessControlList.Add*
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: Add
  nameWithType: AccessControlList.Add
- uid: System.Messaging.AccessControlList.Contains*
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: Contains
  nameWithType: AccessControlList.Contains
- uid: System.Messaging.AccessControlList.CopyTo*
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: CopyTo
  nameWithType: AccessControlList.CopyTo
- uid: System.Messaging.AccessControlList.IndexOf*
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: IndexOf
  nameWithType: AccessControlList.IndexOf
- uid: System.Messaging.AccessControlList.Insert*
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: Insert
  nameWithType: AccessControlList.Insert
- uid: System.Messaging.AccessControlList.Remove*
  parent: System.Messaging.AccessControlList
  isExternal: false
  name: Remove
  nameWithType: AccessControlList.Remove
