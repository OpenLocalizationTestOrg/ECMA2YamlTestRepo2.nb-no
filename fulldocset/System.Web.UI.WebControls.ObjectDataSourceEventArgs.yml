### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  id: ObjectDataSourceEventArgs
  children:
  - System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor(System.Object)
  - System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance
  langs:
  - csharp
  name: ObjectDataSourceEventArgs
  nameWithType: ObjectDataSourceEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  type: Class
  summary: "Gir dataene for den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&quot;> </xref> og <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&quot;> </xref> hendelser i den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> kontrollen."
  remarks: "Klassen ObjectDataSourceEventArgs brukes i den <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>og <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A>metoder for å gi tilgang til business objektforekomsten før alle dataene operasjoner som bruker den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen og business objekt er utført.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A> Business-objektet er angitt, og tilgang til ved hjelp av <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>egenskapen.</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> Ved å legge til en hendelse behandlingsprogrammet representant til å håndtere den <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>hendelse, kan du opprette en forekomst av business-objektet i egendefinert kode i stedet for den <xref:System.Web.UI.WebControls.ObjectDataSource>utføring av instantiering.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating> Dette er nyttig når du vil bruke en ikke-Standardforekomst for business-objekt eller å kalle en ikke-standard konstruktør for å opprette forekomst. den <xref:System.Web.UI.WebControls.ObjectDataSource>kaller alltid Standardkonstruktøren for å opprette en forekomst av business-objektet prosessen fungerer med.</xref:System.Web.UI.WebControls.ObjectDataSource> Du kan også legge til en hendelse behandlingsprogrammet representant til å håndtere den <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>som gjør det mulig å få tilgang til noen offentlig eksponert medlemmer for business-objektet til å utføre flere initiering eller jobb.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>       Den <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>og <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A>metoder kalles ikke av den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollere hvis metoden for business-objektet som utfører dataoperasjoner er `static`.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>       Den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen viser mange hendelser som kan håndtere, for å fungere med det underliggende objektet business på ulike tidspunkter i livssyklusen.</xref:System.Web.UI.WebControls.ObjectDataSource> Tabellen nedenfor viser hendelser og det tilknyttede <xref:System.EventArgs>klasser og hendelsen behandlingsprogrammet representanter.</xref:System.EventArgs>      | Hendelsen | EventArgs kan | EventHandler |   |-----------|---------------|------------------|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating><br /><br /> Skjer umiddelbart før forekomsten av business-objektet er opprettet. | ObjectDataSourceEventArgs | <xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler><br /><br /> Skjer umiddelbart etter at forekomsten av business-objektet er opprettet. | ObjectDataSourceEventArgs | <xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Selecting></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler><br /><br /> Forekommer før data som hentes. | <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleting></xref:System.Web.UI.WebControls.ObjectDataSource.Updating></xref:System.Web.UI.WebControls.ObjectDataSource.Inserting></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs><br /><br /> Forekommer før en insert-, update eller delete-operasjonen utføres. | <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>.</xref:System.Web.UI.WebControls.ObjectDataSource.Selected></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs><br /><br /> Inntreffer etter at dataene er hentet. | <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted></xref:System.Web.UI.WebControls.ObjectDataSource.Updated></xref:System.Web.UI.WebControls.ObjectDataSource.Inserted></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs><br /><br /> Inntreffer etter insert-, update eller delete-operasjonen er fullført. | <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs><br /><br /> Forekommer før en business-objekt er ødelagt. | <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|</xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to retrieve and display information. The second code example provides the example basic business object that the first code example uses.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to retrieve and display information. In this example, as in many real-world scenarios, it might not be possible nor appropriate to use a default instance of the business object with the <xref:System.Web.UI.WebControls.ObjectDataSource> control. In this example, the <xref:System.Web.UI.WebControls.ObjectDataSource> cannot successfully call the default constructor because it will throw an exception. In some cases, the default constructor might be protected and in others it might not initialize the business object to a desired state. Whatever the reason, you can create an instance of the business object yourself and set the instance to the <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> property of the ObjectDataSourceEventArgs object that is passed to the handler. This is the business object instance that the <xref:System.Web.UI.WebControls.ObjectDataSource> will use to perform its work.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_15#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_139_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_139_1.aspx)]  \n  \n The following code example demonstrates the example basic business object that the preceding code example uses.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_15#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_139_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_139_2.vb)]"
  syntax:
    content: 'public class ObjectDataSourceEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  langs:
  - csharp
  name: ObjectDataSourceEventArgs(Object)
  nameWithType: ObjectDataSourceEventArgs.ObjectDataSourceEventArgs(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectDataSourceEventArgs(Object)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref> klasse ved hjelp av det angitte objektet."
  syntax:
    content: public ObjectDataSourceEventArgs (object objectInstance);
    parameters:
    - id: objectInstance
      type: System.Object
      description: "Business-objektet som den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> samhandler for å utføre dataoperasjoner."
  overload: System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance
  id: ObjectInstance
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  langs:
  - csharp
  name: ObjectInstance
  nameWithType: ObjectDataSourceEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir et objekt som representerer business-objekt som den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> kontrollen utfører av data."
  remarks: ''
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to retrieve and display information. The second code example provides the example basic business object that the first code example uses.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to retrieve and display information. In this example, as in many real-world scenarios, it might not be possible nor appropriate to use a default instance of the business object with the <xref:System.Web.UI.WebControls.ObjectDataSource> control. In this example, the <xref:System.Web.UI.WebControls.ObjectDataSource> cannot successfully call the default constructor because it will throw an exception. In some cases, the default constructor might be protected and in others it might not initialize the business object to a desired state. Whatever the reason, you can create an instance of the business object yourself and set the instance to the ObjectInstance property of the <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> object that is passed to the handler. This is the business object instance that the <xref:System.Web.UI.WebControls.ObjectDataSource> will use to perform its work.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_15#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1184_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1184_1.aspx)]  \n  \n The following code example demonstrates the example basic business object that the preceding code example uses.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_15#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1184_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1184_2.vb)]"
  syntax:
    content: public object ObjectInstance { get; set; }
    return:
      type: System.Object
      description: "Business-objektet i <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> bruker til å utføre dataoperasjoner; ellers <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, hvis <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> er sendt til den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  isExternal: false
  name: ObjectDataSourceEventArgs(Object)
  nameWithType: ObjectDataSourceEventArgs.ObjectDataSourceEventArgs(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectDataSourceEventArgs(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: ObjectDataSourceEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor*
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  isExternal: false
  name: ObjectDataSourceEventArgs
  nameWithType: ObjectDataSourceEventArgs.ObjectDataSourceEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance*
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: ObjectDataSourceEventArgs.ObjectInstance
