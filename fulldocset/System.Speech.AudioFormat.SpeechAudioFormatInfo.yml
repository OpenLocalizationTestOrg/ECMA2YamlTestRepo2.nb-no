### YamlMime:ManagedReference
items:
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo
  id: SpeechAudioFormatInfo
  children:
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Int32,System.Speech.AudioFormat.AudioBitsPerSample,System.Speech.AudioFormat.AudioChannel)
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Speech.AudioFormat.EncodingFormat,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals(System.Object)
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond
  langs:
  - csharp
  name: SpeechAudioFormatInfo
  nameWithType: SpeechAudioFormatInfo
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo
  type: Class
  summary: "Representerer informasjon om et lyd format."
  syntax:
    content: public class SpeechAudioFormatInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Int32,System.Speech.AudioFormat.AudioBitsPerSample,System.Speech.AudioFormat.AudioChannel)
  id: '#ctor(System.Int32,System.Speech.AudioFormat.AudioBitsPerSample,System.Speech.AudioFormat.AudioChannel)'
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: SpeechAudioFormatInfo(Int32,AudioBitsPerSample,AudioChannel)
  nameWithType: SpeechAudioFormatInfo.SpeechAudioFormatInfo(Int32,AudioBitsPerSample,AudioChannel)
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.SpeechAudioFormatInfo(Int32,AudioBitsPerSample,AudioChannel)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Speech.AudioFormat.SpeechAudioFormatInfo&quot;> </xref> klasse og angir eksempler per sekund, biter per prøve og antall kanaler."
  remarks: ''
  example:
  - "The following example shows a typical use of SpeechAudioFormatInfo to specify the format of audio to output to a WAV file. The SpeechAudioFormatInfo instance is an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> method.  \n  \n```c#  \nusing System;  \nusing System.IO;  \nusing System.Speech.Synthesis;  \nusing System.Speech.AudioFormat;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToWaveFile(@\"C:\\temp\\test.wav\",   \n          new SpeechAudioFormatInfo(32000, AudioBitsPerSample.Sixteen, AudioChannel.Mono));  \n  \n        // Create a SoundPlayer instance to play output audio file.  \n        System.Media.SoundPlayer m_SoundPlayer =   \n          new System.Media.SoundPlayer(@\"C:\\temp\\test.wav\");  \n  \n        // Build a prompt.  \n        PromptBuilder builder = new PromptBuilder();  \n        builder.AppendText(\"This is sample output to a WAVE file.\");  \n  \n        // Speak the prompt.  \n        synth.Speak(builder);  \n        m_SoundPlayer.Play();  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public SpeechAudioFormatInfo (int samplesPerSecond, System.Speech.AudioFormat.AudioBitsPerSample bitsPerSample, System.Speech.AudioFormat.AudioChannel channel);
    parameters:
    - id: samplesPerSecond
      type: System.Int32
      description: "Verdien for eksempler per sekund."
    - id: bitsPerSample
      type: System.Speech.AudioFormat.AudioBitsPerSample
      description: "Verdien for biter per prøve."
    - id: channel
      type: System.Speech.AudioFormat.AudioChannel
      description: "Et medlem av den <xref href=&quot;System.Speech.AudioFormat.AudioChannel&quot;> </xref> opplisting (som angir `Mono` eller `Stereo`)."
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Speech.AudioFormat.EncodingFormat,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])
  id: '#ctor(System.Speech.AudioFormat.EncodingFormat,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])'
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: SpeechAudioFormatInfo(EncodingFormat,Int32,Int32,Int32,Int32,Int32,Byte[])
  nameWithType: SpeechAudioFormatInfo.SpeechAudioFormatInfo(EncodingFormat,Int32,Int32,Int32,Int32,Int32,Byte[])
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.SpeechAudioFormatInfo(EncodingFormat,Int32,Int32,Int32,Int32,Int32,Byte[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Speech.AudioFormat.SpeechAudioFormatInfo&quot;> </xref> klasse og angir formatet, eksempler per sekund, biter per utvalg, antall kanaler, gjennomsnittlig byte per sekund, block justering verdi og en matrise som inneholder data, bestemt format."
  syntax:
    content: public SpeechAudioFormatInfo (System.Speech.AudioFormat.EncodingFormat encodingFormat, int samplesPerSecond, int bitsPerSample, int channelCount, int averageBytesPerSecond, int blockAlign, byte[] formatSpecificData);
    parameters:
    - id: encodingFormat
      type: System.Speech.AudioFormat.EncodingFormat
      description: "Kodeformatet."
    - id: samplesPerSecond
      type: System.Int32
      description: "Verdien for eksempler per sekund."
    - id: bitsPerSample
      type: System.Int32
      description: "Verdien for biter per prøve."
    - id: channelCount
      type: System.Int32
      description: "Verdien for antallet kanal."
    - id: averageBytesPerSecond
      type: System.Int32
      description: "Verdien for de gjennomsnittlige bytene per sekund."
    - id: blockAlign
      type: System.Int32
      description: "Verdien for BlockAlign."
    - id: formatSpecificData
      type: System.Byte[]
      description: "En bytematrise som inneholder dataene bestemt format."
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond
  id: AverageBytesPerSecond
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: AverageBytesPerSecond
  nameWithType: SpeechAudioFormatInfo.AverageBytesPerSecond
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "Henter de gjennomsnittlige bytene per sekund for lyden."
  syntax:
    content: public int AverageBytesPerSecond { get; }
    return:
      type: System.Int32
      description: "Verdien for de gjennomsnittlige bytene per sekund."
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample
  id: BitsPerSample
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: BitsPerSample
  nameWithType: SpeechAudioFormatInfo.BitsPerSample
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "Henter biter per prøve for lyden."
  syntax:
    content: public int BitsPerSample { get; }
    return:
      type: System.Int32
      description: "Verdien for biter per prøve."
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign
  id: BlockAlign
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: BlockAlign
  nameWithType: SpeechAudioFormatInfo.BlockAlign
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "Henter eller angir justeringen blokk i byte."
  remarks: "Programvare for avspilling og innspilling av lyd behandler lyd data i blokker. Størrelsen på disse blokker er multipler av verdien for egenskapen BlockAlign. Blokker justering verdien er antall byte i en atomic enheten (det vil si en blokk) lyd for et bestemt format. Pulse Code Modulation (PCM) formater formelen for beregning blokkjustering er som følger:-blokkjustering = byte per prøve x tall for kanaler kan For eksempel block justering verdi for 16-biters PCM format mono lyd er 2 (2 byte per utvalg x 1 kanal). 16-biters PCM format stereolyd er blokk justering verdien 4.       Data skrevet og lese fra en enhet må alltid starte på begynnelsen av en blokk. For eksempel er det ulovlig å starte avspilling av PCM data midt i et utvalg (mening i en grense som ikke er justert for block)."
  syntax:
    content: public int BlockAlign { get; }
    return:
      type: System.Int32
      description: "Verdien for blokkjustering."
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount
  id: ChannelCount
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: ChannelCount
  nameWithType: SpeechAudioFormatInfo.ChannelCount
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "Henter kanal antall lyden."
  syntax:
    content: public int ChannelCount { get; }
    return:
      type: System.Int32
      description: "Verdien for antallet kanal."
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat
  id: EncodingFormat
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: EncodingFormat
  nameWithType: SpeechAudioFormatInfo.EncodingFormat
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "Henter kodeformatet for lyden."
  syntax:
    content: public System.Speech.AudioFormat.EncodingFormat EncodingFormat { get; }
    return:
      type: System.Speech.AudioFormat.EncodingFormat
      description: "Kodeformatet for lyden."
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SpeechAudioFormatInfo.Equals(Object)
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals(Object)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "Returnerer om et gitt objekt er en forekomst av <xref href=&quot;System.Speech.AudioFormat.SpeechAudioFormatInfo&quot;> </xref> og lik den gjeldende forekomsten av <xref href=&quot;System.Speech.AudioFormat.SpeechAudioFormatInfo&quot;> </xref>."
  remarks: "Metoden returnerer `false` hvis den <xref:System.Object>fra den `obj` argumentet kan ikke endres til <xref:System.Speech.AudioFormat.SpeechAudioFormatInfo>.</xref:System.Speech.AudioFormat.SpeechAudioFormatInfo> </xref:System.Object>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Objektet som skal sammenlignes."
    return:
      type: System.Boolean
      description: "Returnerer <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> hvis den gjeldende forekomsten av <xref href=&quot;System.Speech.AudioFormat.SpeechAudioFormatInfo&quot;> </xref> og som har fått fra den <code> obj </code> argumentet er like, ellers returnerer <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData
  id: FormatSpecificData
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: FormatSpecificData()
  nameWithType: SpeechAudioFormatInfo.FormatSpecificData()
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "Returnerer bestemt format-data for formatet."
  syntax:
    content: public byte[] FormatSpecificData ();
    parameters: []
    return:
      type: System.Byte[]
      description: "En bytematrise som inneholder dataene bestemt format."
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode
  id: GetHashCode
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SpeechAudioFormatInfo.GetHashCode()
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "Returnerer hashkoden for formatet."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Verdien for hash-koden."
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond
  id: SamplesPerSecond
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: SamplesPerSecond
  nameWithType: SpeechAudioFormatInfo.SamplesPerSecond
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "Henter eksempler per sekund for formatet."
  syntax:
    content: public int SamplesPerSecond { get; }
    return:
      type: System.Int32
      description: "Verdien for eksempler per sekund."
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Int32,System.Speech.AudioFormat.AudioBitsPerSample,System.Speech.AudioFormat.AudioChannel)
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: SpeechAudioFormatInfo(Int32,AudioBitsPerSample,AudioChannel)
  nameWithType: SpeechAudioFormatInfo.SpeechAudioFormatInfo(Int32,AudioBitsPerSample,AudioChannel)
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.SpeechAudioFormatInfo(Int32,AudioBitsPerSample,AudioChannel)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Speech.AudioFormat.AudioBitsPerSample
  parent: System.Speech.AudioFormat
  isExternal: false
  name: AudioBitsPerSample
  nameWithType: AudioBitsPerSample
  fullName: System.Speech.AudioFormat.AudioBitsPerSample
- uid: System.Speech.AudioFormat.AudioChannel
  parent: System.Speech.AudioFormat
  isExternal: false
  name: AudioChannel
  nameWithType: AudioChannel
  fullName: System.Speech.AudioFormat.AudioChannel
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Speech.AudioFormat.EncodingFormat,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: SpeechAudioFormatInfo(EncodingFormat,Int32,Int32,Int32,Int32,Int32,Byte[])
  nameWithType: SpeechAudioFormatInfo.SpeechAudioFormatInfo(EncodingFormat,Int32,Int32,Int32,Int32,Int32,Byte[])
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.SpeechAudioFormatInfo(EncodingFormat,Int32,Int32,Int32,Int32,Int32,Byte[])
- uid: System.Speech.AudioFormat.EncodingFormat
  parent: System.Speech.AudioFormat
  isExternal: false
  name: EncodingFormat
  nameWithType: EncodingFormat
  fullName: System.Speech.AudioFormat.EncodingFormat
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: AverageBytesPerSecond
  nameWithType: SpeechAudioFormatInfo.AverageBytesPerSecond
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: BitsPerSample
  nameWithType: SpeechAudioFormatInfo.BitsPerSample
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: BlockAlign
  nameWithType: SpeechAudioFormatInfo.BlockAlign
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: ChannelCount
  nameWithType: SpeechAudioFormatInfo.ChannelCount
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: EncodingFormat
  nameWithType: SpeechAudioFormatInfo.EncodingFormat
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals(System.Object)
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: SpeechAudioFormatInfo.Equals(Object)
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: FormatSpecificData()
  nameWithType: SpeechAudioFormatInfo.FormatSpecificData()
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData()
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: SpeechAudioFormatInfo.GetHashCode()
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode()
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: SamplesPerSecond
  nameWithType: SpeechAudioFormatInfo.SamplesPerSecond
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: SpeechAudioFormatInfo
  nameWithType: SpeechAudioFormatInfo.SpeechAudioFormatInfo
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: AverageBytesPerSecond
  nameWithType: SpeechAudioFormatInfo.AverageBytesPerSecond
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: BitsPerSample
  nameWithType: SpeechAudioFormatInfo.BitsPerSample
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: BlockAlign
  nameWithType: SpeechAudioFormatInfo.BlockAlign
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: ChannelCount
  nameWithType: SpeechAudioFormatInfo.ChannelCount
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: EncodingFormat
  nameWithType: SpeechAudioFormatInfo.EncodingFormat
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: Equals
  nameWithType: SpeechAudioFormatInfo.Equals
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: FormatSpecificData
  nameWithType: SpeechAudioFormatInfo.FormatSpecificData
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: GetHashCode
  nameWithType: SpeechAudioFormatInfo.GetHashCode
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: SamplesPerSecond
  nameWithType: SpeechAudioFormatInfo.SamplesPerSecond
