### YamlMime:ManagedReference
items:
- uid: System.Configuration.IdnElement
  id: IdnElement
  children:
  - System.Configuration.IdnElement.#ctor
  - System.Configuration.IdnElement.Enabled
  - System.Configuration.IdnElement.Properties
  langs:
  - csharp
  name: IdnElement
  nameWithType: IdnElement
  fullName: System.Configuration.IdnElement
  type: Class
  summary: "Gir konfigurasjonsinnstillingen for International domene navnet (IDN) behandling i den &lt;xref:System.Uri?displayProperty=fullName&gt; klasse."
  remarks: "Den eksisterende <xref:System.Uri?displayProperty=fullName>klassen er utvidet for å gi kundestøtte for International ressursen identifikatorer (IRI) basert på RFC 3987.</xref:System.Uri?displayProperty=fullName> Gjeldende brukere vil ikke ser noen endring fra .NET Framework 2.0 virkemåte med mindre de spesielt aktiverer IRI. Dette sikrer programmet kompatibilitet med tidligere versjoner av .NET Framework.       Konfigurasjonsinnstillingen for IdnElement kontrolleres indirekte av <xref:System.Configuration.IriParsingElement>konfigurasjonen innstilling som styrer IRI behandling i <xref:System.Uri?displayProperty=fullName>klasse.</xref:System.Uri?displayProperty=fullName> </xref:System.Configuration.IriParsingElement> IRI behandling må være aktivert for IDN behandling for å være mulig. Hvis IRI behandling er deaktivert, settes IDN behandling til standardinnstillingen der .NET Framework 2.0-virkemåten brukes for kompatibilitet og IDN-navn er ikke brukt.       Attributtet internasjonale domene navnet (IDN) kontrollerer bare IDN-behandling. Alle andre IRI behandling (for eksempel tegn normalization) utføres som standard.       Konfigurasjon av innstillingen for IdnElement leses når når første <xref:System.Uri?displayProperty=fullName>klassen bygges.</xref:System.Uri?displayProperty=fullName> Endringer i konfigurasjonsinnstillingene da ignoreres.       Hvis du vil ha mer informasjon om IRI støtte, kan du se delen Merknader for <xref:System.Uri?displayProperty=fullName>klasse.</xref:System.Uri?displayProperty=fullName>"
  syntax:
    content: 'public sealed class IdnElement : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.Configuration.IdnElement.#ctor
  id: '#ctor'
  parent: System.Configuration.IdnElement
  langs:
  - csharp
  name: IdnElement()
  nameWithType: IdnElement.IdnElement()
  fullName: System.Configuration.IdnElement.IdnElement()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Configuration.IdnElement&quot;> </xref> klasse."
  remarks: "Denne konstruktøren oppretter en <xref:System.Configuration.IdnElement>forekomst</xref:System.Configuration.IdnElement>"
  syntax:
    content: public IdnElement ();
    parameters: []
  overload: System.Configuration.IdnElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IdnElement.Enabled
  id: Enabled
  parent: System.Configuration.IdnElement
  langs:
  - csharp
  name: Enabled
  nameWithType: IdnElement.Enabled
  fullName: System.Configuration.IdnElement.Enabled
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Henter eller angir verdien for den <xref href=&quot;System.Configuration.IdnElement&quot;> </xref> konfigurasjonsinnstilling."
  remarks: "Attributtet International domene navnet (IDN) kontrollerer bare IDN-behandling. Alle andre International ressursen identifikatorer (IRI)-behandling (for eksempel tegn normalization) utføres som standard.       Konfigurasjonsinnstillingen for <xref:System.Configuration.IdnElement>indirekte kontrolleres av <xref:System.Configuration.IriParsingElement?displayProperty=fullName>konfigurasjonsinnstilling som kontrollerer IRI behandling i <xref:System.Uri?displayProperty=fullName>klasse.</xref:System.Uri?displayProperty=fullName> </xref:System.Configuration.IriParsingElement?displayProperty=fullName> </xref:System.Configuration.IdnElement> IRI behandling må være aktivert for IDN behandling for å være mulig. Hvis IRI behandling er deaktivert, settes IDN behandling til standardinnstillingen der .NET Framework 2.0-virkemåten brukes for kompatibilitet og IDN-navn er ikke brukt.       Konfigurasjonsinnstillingen for den <xref:System.Configuration.IdnElement>leses når når første <xref:System.Uri?displayProperty=fullName>klassen bygges.</xref:System.Uri?displayProperty=fullName> </xref:System.Configuration.IdnElement> Endringer i konfigurasjonsinnstillingene da ignoreres.       Hvis du vil ha mer informasjon om IRI støtte, kan du se delen Merknader for <xref:System.Uri?displayProperty=fullName>klasse.</xref:System.Uri?displayProperty=fullName>"
  syntax:
    content: public UriIdnScope Enabled { get; set; }
    return:
      type: System.UriIdnScope
      description: "En <xref href=&quot;System.UriIdnScope&quot;> </xref> som inneholder gjeldende konfigurasjonsinnstillingen for IDN-behandling."
  overload: System.Configuration.IdnElement.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IdnElement.Properties
  id: Properties
  parent: System.Configuration.IdnElement
  langs:
  - csharp
  name: Properties
  nameWithType: IdnElement.Properties
  fullName: System.Configuration.IdnElement.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "Som skal legges til."
  overload: System.Configuration.IdnElement.Properties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.Configuration.IdnElement.#ctor
  parent: System.Configuration.IdnElement
  isExternal: false
  name: IdnElement()
  nameWithType: IdnElement.IdnElement()
  fullName: System.Configuration.IdnElement.IdnElement()
- uid: System.Configuration.IdnElement.Enabled
  parent: System.Configuration.IdnElement
  isExternal: false
  name: Enabled
  nameWithType: IdnElement.Enabled
  fullName: System.Configuration.IdnElement.Enabled
- uid: System.UriIdnScope
  parent: System
  isExternal: false
  name: UriIdnScope
  nameWithType: UriIdnScope
  fullName: System.UriIdnScope
- uid: System.Configuration.IdnElement.Properties
  parent: System.Configuration.IdnElement
  isExternal: false
  name: Properties
  nameWithType: IdnElement.Properties
  fullName: System.Configuration.IdnElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Configuration.IdnElement.#ctor*
  parent: System.Configuration.IdnElement
  isExternal: false
  name: IdnElement
  nameWithType: IdnElement.IdnElement
- uid: System.Configuration.IdnElement.Enabled*
  parent: System.Configuration.IdnElement
  isExternal: false
  name: Enabled
  nameWithType: IdnElement.Enabled
- uid: System.Configuration.IdnElement.Properties*
  parent: System.Configuration.IdnElement
  isExternal: false
  name: Properties
  nameWithType: IdnElement.Properties
