### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.HMACSHA512
  id: HMACSHA512
  children:
  - System.Security.Cryptography.HMACSHA512.#ctor
  - System.Security.Cryptography.HMACSHA512.#ctor(System.Byte[])
  - System.Security.Cryptography.HMACSHA512.ProduceLegacyHmacValues
  langs:
  - csharp
  name: HMACSHA512
  nameWithType: HMACSHA512
  fullName: System.Security.Cryptography.HMACSHA512
  type: Class
  summary: "Behandling Hash-baserte Message Authentication Code (HMAC) ved hjelp av den <xref href=&quot;System.Security.Cryptography.SHA512&quot;> </xref> hash-funksjonen."
  remarks: "HMACSHA512 er en type kodede nummeralgoritmen som konstruert fra SHA&512; hash-funksjonen og brukes som en Hash-baserte Message Authentication Code (HMAC). Prosessen for HMAC blander en hemmelig nøkkel med datatypen melding og hashes resultatet. Hash-verdien er blandet med hemmelig nøkkel på nytt, og deretter bruke hash-kode en gang. Output-hash er 512 biter lang.       En HMAC kan brukes til å fastsette om en melding sendt via en usikker kanal tuklet med, forutsatt at avsender og mottakeren dele en hemmelig nøkkel. Avsenderen beregner hash-verdien for den opprinnelige dataene, og sender både opprinnelige dataene og hash-verdi som én enkelt melding. Mottakeren beregner hash-verdien for den mottatte meldingen på nytt, og kontrollerer at beregnede HMAC samsvarer med overførte HMAC.       Hvis opprinnelige og beregnede hash-verdiene er like, er meldingen godkjent. Hvis de ikke samsvarer med er datatypen eller hash-verdien som endret. HMACs sikkerheten mot forfalskning fordi kunnskap om hemmelig nøkkel er nødvendig endre meldingen for å reprodusere riktig hash-verdien.       HMACSHA512 godtar nøkler noen størrelsen, og produserer en hash-sekvens med lengden 512 biter."
  example:
  - "The following example shows how to sign a file by using the HMACSHA512 object and then how to verify the file.  \n  \n [!code-cpp[HMACSHA512#1](~/add/codesnippet/cpp/t-system.security.crypto_83_1.cpp)]\n [!code-vb[HMACSHA512#1](~/add/codesnippet/visualbasic/t-system.security.crypto_83_1.vb)]\n [!code-cs[HMACSHA512#1](~/add/codesnippet/csharp/t-system.security.crypto_83_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class HMACSHA512 : System.Security.Cryptography.HMAC
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  - System.Security.Cryptography.KeyedHashAlgorithm
  - System.Security.Cryptography.HMAC
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HMAC.BlockSizeValue
  - System.Security.Cryptography.HMAC.Create
  - System.Security.Cryptography.HMAC.Create(System.String)
  - System.Security.Cryptography.HMAC.Dispose(System.Boolean)
  - System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HMAC.HashFinal
  - System.Security.Cryptography.HMAC.HashName
  - System.Security.Cryptography.HMAC.Initialize
  - System.Security.Cryptography.HMAC.Key
  - System.Security.Cryptography.KeyedHashAlgorithm.KeyValue
  platform:
  - net462
- uid: System.Security.Cryptography.HMACSHA512.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.HMACSHA512
  langs:
  - csharp
  name: HMACSHA512()
  nameWithType: HMACSHA512.HMACSHA512()
  fullName: System.Security.Cryptography.HMACSHA512.HMACSHA512()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.HMACSHA512&quot;> </xref> klassen med en tilfeldig generert nøkkel."
  remarks: "Med denne konstruktøren brukes en 64-byte, tilfeldig generert nøkkel."
  syntax:
    content: public HMACSHA512 ();
    parameters: []
  overload: System.Security.Cryptography.HMACSHA512.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HMACSHA512.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.HMACSHA512
  langs:
  - csharp
  name: HMACSHA512(Byte[])
  nameWithType: HMACSHA512.HMACSHA512(Byte[])
  fullName: System.Security.Cryptography.HMACSHA512.HMACSHA512(Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.HMACSHA512&quot;> </xref> klassen med de angitte key dataene."
  remarks: ''
  example:
  - For an example of how to use this constructor, see the <xref:System.Security.Cryptography.HMACSHA512> class.
  syntax:
    content: public HMACSHA512 (byte[] key);
    parameters:
    - id: key
      type: System.Byte[]
      description: "Hemmelig nøkkel for <xref href=&quot;System.Security.Cryptography.HMACSHA512&quot;> </xref> kryptering. Nøkkelen kan være. Anbefalt størrelse er imidlertid 128 byte. Hvis nøkkelen er mer enn 128 byte lang, den er bruke hash-kode (ved hjelp av SHA 512) avledes en 128-biters nøkkel. Hvis det er mindre enn 128 byte lang, er det utfylt til 128 byte."
  overload: System.Security.Cryptography.HMACSHA512.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.HMACSHA512.ProduceLegacyHmacValues
  id: ProduceLegacyHmacValues
  parent: System.Security.Cryptography.HMACSHA512
  langs:
  - csharp
  name: ProduceLegacyHmacValues
  nameWithType: HMACSHA512.ProduceLegacyHmacValues
  fullName: System.Security.Cryptography.HMACSHA512.ProduceLegacyHmacValues
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inneholder en løsning for den [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)] implementering av <xref href=&quot;System.Security.Cryptography.HMACSHA512&quot;> </xref> algoritmen som er inkonsekvent med den [!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)] implementering."
  remarks: "Formålet med egenskapen ProduceLegacyHmacValues boolsk er å aktivere [!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)] programmer kan samhandle med [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] programmer. Når du setter denne egenskapen til `true`, <xref:System.Security.Cryptography.HMACSHA512>objektet produserer verdier som samsvarer med verdier fra det [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)].</xref:System.Security.Cryptography.HMACSHA512> Du må sette denne egenskapen bare én gang når du oppretter HMAC-objekt. Du må tilbakestille nøkkelen etterpå som vist i eksemplet nedenfor.      ```   public static void Test()       {       HMACSHA512 hmac = new HMACSHA512();       hmac.ProduceLegacyHmacValues = true;       hmac.Key = // ...Get the HMAC key.       // ...       // Use the HMAC algorithm.       // ...       }   ```"
  syntax:
    content: public bool ProduceLegacyHmacValues { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>aktivere [!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)] programmer kan samhandle med [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] programmer; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.HMACSHA512.ProduceLegacyHmacValues*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.HMAC
  isExternal: false
  name: System.Security.Cryptography.HMAC
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.HMACSHA512.#ctor
  parent: System.Security.Cryptography.HMACSHA512
  isExternal: false
  name: HMACSHA512()
  nameWithType: HMACSHA512.HMACSHA512()
  fullName: System.Security.Cryptography.HMACSHA512.HMACSHA512()
- uid: System.Security.Cryptography.HMACSHA512.#ctor(System.Byte[])
  parent: System.Security.Cryptography.HMACSHA512
  isExternal: false
  name: HMACSHA512(Byte[])
  nameWithType: HMACSHA512.HMACSHA512(Byte[])
  fullName: System.Security.Cryptography.HMACSHA512.HMACSHA512(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.HMACSHA512.ProduceLegacyHmacValues
  parent: System.Security.Cryptography.HMACSHA512
  isExternal: false
  name: ProduceLegacyHmacValues
  nameWithType: HMACSHA512.ProduceLegacyHmacValues
  fullName: System.Security.Cryptography.HMACSHA512.ProduceLegacyHmacValues
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.HMACSHA512.#ctor*
  parent: System.Security.Cryptography.HMACSHA512
  isExternal: false
  name: HMACSHA512
  nameWithType: HMACSHA512.HMACSHA512
- uid: System.Security.Cryptography.HMACSHA512.ProduceLegacyHmacValues*
  parent: System.Security.Cryptography.HMACSHA512
  isExternal: false
  name: ProduceLegacyHmacValues
  nameWithType: HMACSHA512.ProduceLegacyHmacValues
