### YamlMime:ManagedReference
items:
- uid: System.Transactions.Enlistment
  id: Enlistment
  children:
  - System.Transactions.Enlistment.Done
  langs:
  - csharp
  name: Enlistment
  nameWithType: Enlistment
  fullName: System.Transactions.Enlistment
  type: Class
  summary: "Muliggjør kommunikasjon mellom en innrullerte transaksjonen deltakeren og transaksjonsbehandling under den siste fasen av transaksjonen."
  remarks: "Når den <xref:System.Transactions.Transaction.EnlistVolatile%2A>og <xref:System.Transactions.Transaction.EnlistDurable%2A>metoder for den <xref:System.Transactions.Transaction>objektet er startet for å registrere deltar i en transaksjon, de returnerer dette objektet som beskriver innrulleringen.</xref:System.Transactions.Transaction> </xref:System.Transactions.Transaction.EnlistDurable%2A> </xref:System.Transactions.Transaction.EnlistVolatile%2A>       Under den siste fasen av transaksjon transaksjonen sender transaksjonsbehandling for dette objektet til en ressursansvarlig implementering av <xref:System.Transactions.IEnlistmentNotification>grensesnitt som er oppført i en transaksjon.</xref:System.Transactions.IEnlistmentNotification> Nærmere bestemt transaksjonsbehandling kaller enten den <xref:System.Transactions.IEnlistmentNotification.Commit%2A>eller <xref:System.Transactions.IEnlistmentNotification.Rollback%2A>metode for deltakeren, avhengig av om den siste har valgt å lagre eller rulle tilbake transaksjonen.</xref:System.Transactions.IEnlistmentNotification.Rollback%2A> </xref:System.Transactions.IEnlistmentNotification.Commit%2A> Deltakeren må kalle den <xref:System.Transactions.Enlistment.Done%2A>metoden for dette objektet la transaksjonsbehandlingen vite at den er fullført arbeidet.</xref:System.Transactions.Enlistment.Done%2A>       En oppføring kan kalle den <xref:System.Transactions.Enlistment.Done%2A>-metoden på når som helst før det kalt <xref:System.Transactions.PreparingEnlistment.Prepared%2A>på prepare-fase.</xref:System.Transactions.PreparingEnlistment.Prepared%2A> </xref:System.Transactions.Enlistment.Done%2A>  På denne måten kaster innrulleringen en lesefeil bare stemme, betyr det commit-svar på transaksjonen, men trenger ikke å motta endelige resultatet. Legg merke til at, etter den <xref:System.Transactions.Enlistment.Done%2A>-metoden, innrullerte deltakeren mottar ingen flere meldinger fra transaksjonsbehandling.</xref:System.Transactions.Enlistment.Done%2A>"
  example:
  - "The following example shows an implementation of the <xref:System.Transactions.IEnlistmentNotification> interface, and when the <xref:System.Transactions.Enlistment.Done%2A> method should be called.  \n  \n [!code-cs[Tx_Enlist#2](~/add/codesnippet/csharp/t-system.transactions.en_1.cs)]\n [!code-vb[Tx_Enlist#2](~/add/codesnippet/visualbasic/t-system.transactions.en_1.vb)]"
  syntax:
    content: public class Enlistment
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Transactions.Enlistment.Done
  id: Done
  parent: System.Transactions.Enlistment
  langs:
  - csharp
  name: Done()
  nameWithType: Enlistment.Done()
  fullName: System.Transactions.Enlistment.Done()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Angir at deltakeren transaksjonen er fullført arbeidet."
  remarks: "Under den siste fasen av transaksjonen transaksjon, kaller transaksjonsbehandling enten den <xref:System.Transactions.IEnlistmentNotification.Commit%2A>, <xref:System.Transactions.IEnlistmentNotification.Rollback%2A>eller <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>metode for deltakeren, avhengig av om transaksjonen er iverksatt eller rullet tilbake.</xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> </xref:System.Transactions.IEnlistmentNotification.Rollback%2A> </xref:System.Transactions.IEnlistmentNotification.Commit%2A> Ressursbehandling må utføre arbeid nødvendig for å fullføre transaksjonen, og informere transaksjonsbehandling at det er ferdig ved å kalle metoden ferdig på den `enlistment` parameteren.       Hvis ressursbehandling er oppført robust, men ikke svarer ved å kalle metoden har gjort, er transaksjonsbehandling sikker på at Ressursbehandling har mottatt respektive varsling-kall. Som en transaksjonsbehandling beholder venter på svar, og beholder informasjon som er relevante for denne transaksjonen.  Hvis gjort er aldri kalles denne opplysning holdes rundt på ubestemt tid i minnet eller i en systemomfattende ressurs. Dette resulterer i ressurser som ikke kunne være gode. Hvis det er en distribuert transaksjon, kan dette oppgavestatusen fylt MSDTC-loggen som stanser MSDTC-tjenesten. Hvis det er en transaksjon som administreres av <xref:System.Transactions>, dette fører til en gradvis og kontinuerlige økning i minneforbruk av prosessen for ressursbehandlingen.</xref:System.Transactions> Det er derfor viktig at du kalle metoden ferdig når ressursbehandlingen er ferdig med din forberede jobb.       En oppføring kan kalle metoden ferdig når som helst før det kalles <xref:System.Transactions.PreparingEnlistment.Prepared%2A>på prepare-fase.</xref:System.Transactions.PreparingEnlistment.Prepared%2A> På denne måten kaster innrulleringen en lesefeil bare stemme, betyr det commit-svar på transaksjonen, men trenger ikke å motta endelige resultatet. Merk at når denne metoden kalles, innrullerte deltakeren mottar ingen flere meldinger fra transaksjonsbehandling."
  syntax:
    content: public void Done ();
    parameters: []
  overload: System.Transactions.Enlistment.Done*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Transactions.Enlistment.Done
  parent: System.Transactions.Enlistment
  isExternal: false
  name: Done()
  nameWithType: Enlistment.Done()
  fullName: System.Transactions.Enlistment.Done()
- uid: System.Transactions.Enlistment.Done*
  parent: System.Transactions.Enlistment
  isExternal: false
  name: Done
  nameWithType: Enlistment.Done
