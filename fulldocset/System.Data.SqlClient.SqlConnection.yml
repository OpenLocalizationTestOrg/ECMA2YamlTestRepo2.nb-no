### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlConnection
  id: SqlConnection
  children:
  - System.Data.SqlClient.SqlConnection.#ctor
  - System.Data.SqlClient.SqlConnection.#ctor(System.String)
  - System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)
  - System.Data.SqlClient.SqlConnection.AccessToken
  - System.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel)
  - System.Data.SqlClient.SqlConnection.BeginTransaction
  - System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)
  - System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)
  - System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)
  - System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)
  - System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)
  - System.Data.SqlClient.SqlConnection.ClearAllPools
  - System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)
  - System.Data.SqlClient.SqlConnection.ClientConnectionId
  - System.Data.SqlClient.SqlConnection.Close
  - System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl
  - System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
  - System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
  - System.Data.SqlClient.SqlConnection.ConnectionString
  - System.Data.SqlClient.SqlConnection.ConnectionTimeout
  - System.Data.SqlClient.SqlConnection.CreateCommand
  - System.Data.SqlClient.SqlConnection.CreateDbCommand
  - System.Data.SqlClient.SqlConnection.Credential
  - System.Data.SqlClient.SqlConnection.Database
  - System.Data.SqlClient.SqlConnection.DataSource
  - System.Data.SqlClient.SqlConnection.DbProviderFactory
  - System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)
  - System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  - System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)
  - System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors
  - System.Data.SqlClient.SqlConnection.GetSchema
  - System.Data.SqlClient.SqlConnection.GetSchema(System.String)
  - System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])
  - System.Data.SqlClient.SqlConnection.InfoMessage
  - System.Data.SqlClient.SqlConnection.Open
  - System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlConnection.PacketSize
  - System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})
  - System.Data.SqlClient.SqlConnection.ResetStatistics
  - System.Data.SqlClient.SqlConnection.RetrieveStatistics
  - System.Data.SqlClient.SqlConnection.ServerVersion
  - System.Data.SqlClient.SqlConnection.State
  - System.Data.SqlClient.SqlConnection.StatisticsEnabled
  - System.Data.SqlClient.SqlConnection.System#ICloneable#Clone
  - System.Data.SqlClient.SqlConnection.WorkstationId
  langs:
  - csharp
  name: SqlConnection
  nameWithType: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
  type: Class
  summary: "Representerer en Ã¥pen tilkobling til en [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] database. Denne klassen kan ikke arves."
  remarks: "A SqlConnection object represents a unique session to a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] data source. With a client/server database system, it is equivalent to a network connection to the server. SqlConnection is used together with <xref:System.Data.SqlClient.SqlDataAdapter> and <xref:System.Data.SqlClient.SqlCommand> to increase performance when connecting to a Microsoft [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] database. For all third-party [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] products, and other OLE DB-supported data sources, use <xref:System.Data.OleDb.OleDbConnection>.  \n  \n When you create an instance of SqlConnection, all properties are set to their initial values. For a list of these values, see the SqlConnection constructor.  \n  \n See <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> for a list of the keywords in a connection string.  \n  \n If the SqlConnection goes out of scope, it won't be closed. Therefore, you must explicitly close the connection by calling `Close` or `Dispose`. `Close` and `Dispose` are functionally equivalent. If the connection pooling value `Pooling` is set to `true` or `yes`, the underlying connection is returned back to the connection pool. On the other hand, if `Pooling` is set to `false` or `no`, the underlying connection to the server is actually closed.  \n  \n> [!NOTE]\n>  Login and logout events will not be raised on the server when a connection is fetched from or returned to the connection pool, because the connection is not actually closed when it is returned to the connection pool. For more information, see [SQL Server Connection Pooling (ADO.NET)](~/add/includes/ajax-current-ext-md.md).  \n  \n To ensure that connections are always closed, open the connection inside of a `using` block, as shown in the following code fragment. Doing so ensures that the connection is automatically closed when the code exits the block.  \n  \n```vb#  \nUsing connection As New SqlConnection(connectionString)  \n    connection.Open()  \n    ' Do work here; connection closed on following line.  \nEnd Using  \n  \n```  \n  \n```c#  \nusing (SqlConnection connection = new SqlConnection(connectionString))  \n    {  \n        connection.Open();  \n        // Do work here; connection closed on following line.  \n    }  \n```  \n  \n> [!NOTE]\n>  To deploy high-performance applications, you must use connection pooling. When you use the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], you do not have to enable connection pooling because the provider manages this automatically, although you can modify some settings. For more information, see [SQL Server Connection Pooling (ADO.NET)](../Topic/SQL%20Server%20Connection%20Pooling%20\\(ADO.NET\\).md).  \n  \n If a <xref:System.Data.SqlClient.SqlException> is generated by the method executing a <xref:System.Data.SqlClient.SqlCommand>, the SqlConnection remains open when the severity level is 19 or less. When the severity level is 20 or greater, the server ordinarily closes the SqlConnection. However, the user can reopen the connection and continue.  \n  \n An application that creates an instance of the SqlConnection object can require all direct and indirect callers to have sufficient permission to the code by setting declarative or imperative security demands. SqlConnection makes security demands using the <xref:System.Data.SqlClient.SqlClientPermission> object. Users can verify that their code has sufficient permissions by using the <xref:System.Data.SqlClient.SqlClientPermissionAttribute> object. Users and administrators can also use the [Caspol.exe (Code Access Security Policy Tool)](~/add/includes/ajax-current-ext-md.md) to modify security policy at the machine, user, and enterprise levels. For more information, see [Security](~/add/includes/ajax-current-ext-md.md). For an example demonstrating how to use security demands, see [Code Access Security and ADO.NET](~/add/includes/ajax-current-ext-md.md).  \n  \n For more information about handling warning and informational messages from the server, see [Connection Events](~/add/includes/ajax-current-ext-md.md). [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] engine errors and error messages are documented in [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online.  \n  \n> [!CAUTION]\n>  You can force TCP instead of shared memory. You can do that by prefixing tcp: to the server name in the connection string or you can use localhost."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and a SqlConnection. The SqlConnection is opened and set as the <xref:System.Data.SqlClient.SqlCommand.Connection%2A> for the <xref:System.Data.SqlClient.SqlCommand>. The example then calls <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>. To accomplish this, the <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is a [!INCLUDE[tsql](~/add/includes/tsql-md.md)] INSERT statement. The connection is closed automatically when the code exits the using block.  \n  \n [!code-cs[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/add/codesnippet/csharp/t-system.data.sqlclient._4_1.cs)]\n [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._4_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("InfoMessage")]

      public sealed class SqlConnection : System.Data.Common.DbConnection, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbConnection
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  - System.Data.Common.DbConnection.OpenAsync
  - System.Data.Common.DbConnection.StateChange
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: SqlConnection()
  nameWithType: SqlConnection.SqlConnection()
  fullName: System.Data.SqlClient.SqlConnection.SqlConnection()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> klasse."
  remarks: "NÃ¥r en ny forekomst av <xref:System.Data.SqlClient.SqlConnection>er opprettet, lese-og skrivetilgang er angitt til fÃ¸lgende opprinnelige verdiene med mindre de er angitt med sine tilknyttede nÃ¸kkelord i den <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>egenskapen.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> </xref:System.Data.SqlClient.SqlConnection>      | Egenskaper | Standardverdi |   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>| tom streng (&quot;&quot;) |   | <xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>|&15; |   | <xref:System.Data.SqlClient.SqlConnection.Database%2A>| tom streng (&quot;&quot;) |   | <xref:System.Data.SqlClient.SqlConnection.DataSource%2A>| tom streng (&quot;&quot;) |       Du kan endre verdien for disse egenskapene bare ved hjelp av den <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>egenskapen.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> </xref:System.Data.SqlClient.SqlConnection.DataSource%2A> </xref:System.Data.SqlClient.SqlConnection.Database%2A> </xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A> </xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> Den <xref:System.Data.SqlClient.SqlConnectionStringBuilder>klassen gir funksjonaliteten for Ã¥ opprette og administrere innholdet i tilkoblingsstrenger.</xref:System.Data.SqlClient.SqlConnectionStringBuilder>"
  example:
  - "The following example creates and opens a <xref:System.Data.SqlClient.SqlConnection>.  \n  \n [!code-vb[Classic WebData SqlConnection.SqlConnection Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._17_1.vb)]\n [!code-cs[Classic WebData SqlConnection.SqlConnection Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._17_1.cs)]"
  syntax:
    content: public SqlConnection ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: SqlConnection(String)
  nameWithType: SqlConnection.SqlConnection(String)
  fullName: System.Data.SqlClient.SqlConnection.SqlConnection(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> klasse nÃ¥r gitt en streng som inneholder tilkoblingsstrengen."
  remarks: "NÃ¥r en ny forekomst av <xref:System.Data.SqlClient.SqlConnection>er opprettet, lese-og skrivetilgang er angitt til fÃ¸lgende opprinnelige verdiene med mindre de er angitt med sine tilknyttede nÃ¸kkelord i den <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>egenskapen.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> </xref:System.Data.SqlClient.SqlConnection>      | Egenskaper | Standardverdi |   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>| `connectionString`|   | <xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>|&15; |   | <xref:System.Data.SqlClient.SqlConnection.Database%2A>| tom streng (&quot;&quot;) |   | <xref:System.Data.SqlClient.SqlConnection.DataSource%2A>| tom streng (&quot;&quot;) |       Du kan endre verdien for disse egenskapene bare ved hjelp av den <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>egenskapen.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> </xref:System.Data.SqlClient.SqlConnection.DataSource%2A> </xref:System.Data.SqlClient.SqlConnection.Database%2A> </xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A> </xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> Den <xref:System.Data.SqlClient.SqlConnection>klassen gir funksjonaliteten for Ã¥ opprette og administrere innholdet i tilkoblingsstrenger.</xref:System.Data.SqlClient.SqlConnection>"
  example:
  - "The following example creates and opens a <xref:System.Data.SqlClient.SqlConnection>.  \n  \n [!code-vb[Classic WebData SqlConnection.SqlConnection1 Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._38_1.vb)]\n [!code-cs[Classic WebData SqlConnection.SqlConnection1 Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._38_1.cs)]"
  syntax:
    content: public SqlConnection (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "Tilkoblingen som brukes til Ã¥ Ã¥pne den [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] databasen."
  overload: System.Data.SqlClient.SqlConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)
  id: '#ctor(System.String,System.Data.SqlClient.SqlCredential)'
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: SqlConnection(String,SqlCredential)
  nameWithType: SqlConnection.SqlConnection(String,SqlCredential)
  fullName: System.Data.SqlClient.SqlConnection.SqlConnection(String,SqlCredential)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> klassen som er angitt en tilkoblingsstreng som ikke bruker <xref uid=&quot;langword_csharp_Integrated Security = true&quot; name=&quot;Integrated Security = true&quot; href=&quot;&quot;> </xref> og en <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> objekt som inneholder bruker-ID og passord."
  syntax:
    content: public SqlConnection (string connectionString, System.Data.SqlClient.SqlCredential credential);
    parameters:
    - id: connectionString
      type: System.String
      description: 'En tilkoblingsstreng som ikke inneholder noen av fÃ¸lgende tilkoblingsstreng nÃ¸kkelord: <xref uid=&quot;langword_csharp_Integrated Security = true&quot; name=&quot;Integrated Security = true&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_UserId&quot; name=&quot;UserId&quot; href=&quot;&quot;> </xref>, eller <xref uid=&quot;langword_csharp_Password&quot; name=&quot;Password&quot; href=&quot;&quot;> </xref>; eller som ikke bruker <xref uid=&quot;langword_csharp_ContextConnection = true&quot; name=&quot;ContextConnection = true&quot; href=&quot;&quot;> </xref>.'
    - id: credential
      type: System.Data.SqlClient.SqlCredential
      description: "A <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;></xref> object. Hvis `credential` er null, SqlConnection tilsvarer Funksjonsmessig &lt;xref:System.Data.SqlClient.SqlConnection.%23ctor%2A&gt;."
  overload: System.Data.SqlClient.SqlConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.AccessToken
  id: AccessToken
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: AccessToken
  nameWithType: SqlConnection.AccessToken
  fullName: System.Data.SqlClient.SqlConnection.AccessToken
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter eller angir tokenet for tilkoblingen."
  syntax:
    content: public string AccessToken { get; set; }
    return:
      type: System.String
      description: "Tokenet for tilkoblingen."
  overload: System.Data.SqlClient.SqlConnection.AccessToken*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel)
  id: BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: SqlConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.SqlClient.SqlConnection.BeginDbTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "Som skal legges til."
    return:
      type: System.Data.Common.DbTransaction
      description: "Som skal legges til."
  overload: System.Data.SqlClient.SqlConnection.BeginDbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: BeginTransaction()
  nameWithType: SqlConnection.BeginTransaction()
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Starter en transaksjon for databasen."
  remarks: "Denne kommandoen som er tilordnet til den [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] implementeringen av BEGIN TRANSACTION.       Du mÃ¥ eksplisitt lagre eller rulle tilbake transaksjonen ved hjelp av <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>eller <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>metode.</xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> </xref:System.Data.SqlClient.SqlTransaction.Commit%2A> Forsikre deg om at den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dataleverandÃ¸ren for [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] transaksjonen management modellen utfÃ¸rer pÃ¥ riktig mÃ¥te, unngÃ¥ Ã¥ bruke andre transaksjonen management modeller, for eksempel Ã©n fra [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)].      > [!NOTE] > Hvis du ikke angir IsolasjonsnivÃ¥et IsolasjonsnivÃ¥et standard brukes. Til Ã¥ angi et isolasjonsnivÃ¥ med den <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>metoden, Bruk overlasten tar i `iso` parameteren (<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>).</xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> </xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> IsolasjonsnivÃ¥et som er angitt for en transaksjon vedvarer etter at transaksjonen er fullfÃ¸rt, og til tilkoblingen er lukket eller fjernet. Angivelse av IsolasjonsnivÃ¥et tilgangsnivÃ¥ for **Snapshot** i en database der IsolasjonsnivÃ¥et statisk utvalg ikke er aktivert ikke iverksette et unntak. Transaksjonen fullfÃ¸rer ved hjelp av IsolasjonsnivÃ¥et standard.      > [!CAUTION] > Hvis en transaksjon er startet, og en nivÃ¥ 16 eller hÃ¸yere feil oppstÃ¥r pÃ¥ serveren, transaksjonen ikke rulles tilbake til den <xref:System.Data.SqlClient.SqlDataReader.Read%2A>metoden aktiveres.</xref:System.Data.SqlClient.SqlDataReader.Read%2A> Ingen unntak for **ExecuteReader**.      > [!CAUTION] > NÃ¥r spÃ¸rringen returnerer store mengder data og kall `BeginTransaction`, en <xref:System.Data.SqlClient.SqlException>et fordi [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] tillater ikke parallelle transaksjoner ved MARS.</xref:System.Data.SqlClient.SqlException> For Ã¥ unngÃ¥ problemet, alltid knytte en transaksjon kommandoen og/eller tilkoblingen fÃ¸r alle lesere er Ã¥pen.       For mer informasjon om [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] transaksjoner, kan du se &quot;eksplisitt&quot; og &quot;Koding effektiv transaksjoner&quot; i [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the BeginTransaction, a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._1_1.cs)]\n [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._1_1.vb)]"
  syntax:
    content: public System.Data.SqlClient.SqlTransaction BeginTransaction ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlTransaction
      description: "Et objekt som representerer den nye transaksjonen."
  overload: System.Data.SqlClient.SqlConnection.BeginTransaction*
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Parallelle transaksjoner tillates ikke ved bruk av flere aktive resultatsett (MARS)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Parallelle transaksjoner stÃ¸ttes ikke."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel)
  nameWithType: SqlConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Starter en database transaksjon med IsolasjonsnivÃ¥et angitt."
  remarks: "Denne kommandoen som er tilordnet til den [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] implementeringen av BEGIN TRANSACTION.       Du mÃ¥ eksplisitt lagre eller rulle tilbake transaksjonen ved hjelp av <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>eller <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>metode.</xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> </xref:System.Data.SqlClient.SqlTransaction.Commit%2A> Forsikre deg om at den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dataleverandÃ¸ren for [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] transaksjonen management modellen utfÃ¸rer pÃ¥ riktig mÃ¥te, unngÃ¥ Ã¥ bruke andre transaksjonen management modeller, for eksempel Ã©n fra [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)].      > [!NOTE] > Etter en transaksjon er iverksatt eller rullet tilbake, IsolasjonsnivÃ¥et for transaksjonen vedvarer for alle etterfÃ¸lgende kommandoer som er i modus for autocommit (den [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] standard). Det kan fÃ¸re til uventede resultater, for eksempel en IsolasjonsnivÃ¥et for REPEATABLE READ vedvarende og lÃ¥se andre brukere utenfor en rad. Tilbakestill IsolasjonsnivÃ¥et til standard (READ COMMITTED), kan du utfÃ¸re den [!INCLUDE[tsql](~/add/includes/tsql-md.md)] angitt TRANSACTION ISOLATION LEVEL READ COMMITTED setningen eller kall <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=fullName>etterfulgt av <xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=fullName>.</xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=fullName> umiddelbart</xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=fullName> For mer informasjon om [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] isolasjonsnivÃ¥ene, kan du se &quot;Isolasjon nivÃ¥er i databasemotoren&quot; i [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online.       For mer informasjon om [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] transaksjoner, kan du se &quot;eksplisitt&quot; og &quot;Koding effektiv transaksjoner&quot; i [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online.      > [!CAUTION] > NÃ¥r spÃ¸rringen returnerer store mengder data og kall `BeginTransaction`, en <xref:System.Data.SqlClient.SqlException>et fordi [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] tillater ikke parallelle transaksjoner ved MARS.</xref:System.Data.SqlClient.SqlException> For Ã¥ unngÃ¥ problemet, alltid knytte en transaksjon kommandoen og/eller tilkoblingen fÃ¸r alle lesere er Ã¥pen."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-vb[Classic WebData SqlConnection.BeginTransaction1 Example#1](~/add/codesnippet/visualbasic/b09ea924-5f89-4203-b010-_1.vb)]\n [!code-cs[Classic WebData SqlConnection.BeginTransaction1 Example#1](~/add/codesnippet/csharp/b09ea924-5f89-4203-b010-_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlTransaction BeginTransaction (System.Data.IsolationLevel iso);
    parameters:
    - id: iso
      type: System.Data.IsolationLevel
      description: "IsolasjonsnivÃ¥et som transaksjonen skal kjÃ¸res."
    return:
      type: System.Data.SqlClient.SqlTransaction
      description: "Et objekt som representerer den nye transaksjonen."
  overload: System.Data.SqlClient.SqlConnection.BeginTransaction*
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Parallelle transaksjoner tillates ikke ved bruk av flere aktive resultatsett (MARS)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Parallelle transaksjoner stÃ¸ttes ikke."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)
  id: BeginTransaction(System.String)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: BeginTransaction(String)
  nameWithType: SqlConnection.BeginTransaction(String)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Starter en transaksjon for databasen med navnet pÃ¥ angitt transaksjon."
  remarks: "Denne kommandoen som er tilordnet til den [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] implementeringen av BEGIN TRANSACTION.       Lengden pÃ¥ den `transactionName` parameteren mÃ¥ ikke vÃ¦re lengre enn 32 tegn; hvis du vil utlÃ¸st et unntak.       Verdien i den `transactionName` parameter kan brukes i senere kall til <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>og i den `savePoint` -parameteren for den <xref:System.Data.SqlClient.SqlTransaction.Save%2A>metoden.</xref:System.Data.SqlClient.SqlTransaction.Save%2A> </xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>       Du mÃ¥ eksplisitt lagre eller rulle tilbake transaksjonen ved hjelp av <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>eller <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>metode.</xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> </xref:System.Data.SqlClient.SqlTransaction.Commit%2A> Forsikre deg om at den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dataleverandÃ¸ren for [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] transaksjonen management modellen utfÃ¸rer pÃ¥ riktig mÃ¥te, unngÃ¥ Ã¥ bruke andre transaksjonen management modeller, for eksempel Ã©n fra [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)].       For mer informasjon om [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] transaksjoner, kan du se &quot;eksplisitt&quot; og &quot;Koding effektiv transaksjoner&quot; i [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online.      > [!CAUTION] > NÃ¥r spÃ¸rringen returnerer store mengder data og kall `BeginTransaction`, en <xref:System.Data.SqlClient.SqlException>et fordi [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] tillater ikke parallelle transaksjoner ved MARS.</xref:System.Data.SqlClient.SqlException> For Ã¥ unngÃ¥ problemet, alltid knytte en transaksjon kommandoen og/eller tilkoblingen fÃ¸r alle lesere er Ã¥pen."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._36_1.cs)]\n [!code-vb[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._36_1.vb)]"
  syntax:
    content: public System.Data.SqlClient.SqlTransaction BeginTransaction (string transactionName);
    parameters:
    - id: transactionName
      type: System.String
      description: "Navnet pÃ¥ transaksjonen."
    return:
      type: System.Data.SqlClient.SqlTransaction
      description: "Et objekt som representerer den nye transaksjonen."
  overload: System.Data.SqlClient.SqlConnection.BeginTransaction*
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Parallelle transaksjoner tillates ikke ved bruk av flere aktive resultatsett (MARS)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Parallelle transaksjoner stÃ¸ttes ikke."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)
  id: BeginTransaction(System.Data.IsolationLevel,System.String)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel,String)
  nameWithType: SqlConnection.BeginTransaction(IsolationLevel,String)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(IsolationLevel,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Starter en transaksjon for databasen med navnet angitte IsolasjonsnivÃ¥et nivÃ¥ og transaksjon."
  remarks: "Denne kommandoen som er tilordnet til den [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] implementeringen av BEGIN TRANSACTION.       Verdien i den `transactionName` parameter kan brukes i senere kall til <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>og i den `savePoint` -parameteren for den <xref:System.Data.SqlClient.SqlTransaction.Save%2A>metoden.</xref:System.Data.SqlClient.SqlTransaction.Save%2A> </xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>       Du mÃ¥ eksplisitt lagre eller rulle tilbake transaksjonen ved hjelp av <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>eller <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>metode.</xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> </xref:System.Data.SqlClient.SqlTransaction.Commit%2A> Forsikre deg om at den [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] transaksjonen management modellen utfÃ¸rer pÃ¥ riktig mÃ¥te, unngÃ¥ Ã¥ bruke andre transaksjonen management modeller, for eksempel Ã©n fra [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)].      > [!NOTE] > Etter en transaksjon er iverksatt eller rullet tilbake, IsolasjonsnivÃ¥et for transaksjonen vedvarer for alle etterfÃ¸lgende kommandoer som er i modus for autocommit (den [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] standard). Det kan fÃ¸re til uventede resultater, for eksempel en IsolasjonsnivÃ¥et for REPEATABLE READ vedvarende og lÃ¥se andre brukere utenfor en rad. Tilbakestill IsolasjonsnivÃ¥et til standard (READ COMMITTED), kan du utfÃ¸re den [!INCLUDE[tsql](~/add/includes/tsql-md.md)] angitt TRANSACTION ISOLATION LEVEL READ COMMITTED setningen eller kall <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=fullName>etterfulgt av <xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=fullName>.</xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=fullName> umiddelbart</xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=fullName> For mer informasjon om [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] isolasjonsnivÃ¥ene, kan du se &quot;Isolasjon nivÃ¥er i databasemotoren&quot; i [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online.       For mer informasjon om [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] transaksjoner, kan du se &quot;eksplisitt&quot; og &quot;Koding effektiv transaksjoner&quot; i [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online.      > [!CAUTION] > NÃ¥r spÃ¸rringen returnerer store mengder data og kall `BeginTransaction`, en <xref:System.Data.SqlClient.SqlException>et fordi [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] tillater ikke parallelle transaksjoner ved MARS.</xref:System.Data.SqlClient.SqlException> For Ã¥ unngÃ¥ problemet, alltid knytte en transaksjon kommandoen og/eller tilkoblingen fÃ¸r alle lesere er Ã¥pen."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData SqlConnection.BeginTransaction3 Example#1](~/add/codesnippet/csharp/1f00ab5d-aff7-46ea-8f1d-_1.cs)]\n [!code-vb[Classic WebData SqlConnection.BeginTransaction3 Example#1](~/add/codesnippet/visualbasic/1f00ab5d-aff7-46ea-8f1d-_1.vb)]"
  syntax:
    content: public System.Data.SqlClient.SqlTransaction BeginTransaction (System.Data.IsolationLevel iso, string transactionName);
    parameters:
    - id: iso
      type: System.Data.IsolationLevel
      description: "IsolasjonsnivÃ¥et som transaksjonen skal kjÃ¸res."
    - id: transactionName
      type: System.String
      description: "Navnet pÃ¥ transaksjonen."
    return:
      type: System.Data.SqlClient.SqlTransaction
      description: "Et objekt som representerer den nye transaksjonen."
  overload: System.Data.SqlClient.SqlConnection.BeginTransaction*
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Parallelle transaksjoner tillates ikke ved bruk av flere aktive resultatsett (MARS)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Parallelle transaksjoner stÃ¸ttes ikke."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ChangeDatabase(String)
  nameWithType: SqlConnection.ChangeDatabase(String)
  fullName: System.Data.SqlClient.SqlConnection.ChangeDatabase(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Endrer den gjeldende databasen for en Ã¥pen <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>."
  remarks: "Verdien som er angitt i den `database` parameteren mÃ¥ vÃ¦re et gyldig databasenavn. Den `database` parameteren kan ikke inneholde en nullverdi, en tom streng eller en streng med bare tomme tegn."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and displays some of its read-only properties.  \n  \n [!code-cs[Classic WebData SqlConnection.Database Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._10_1.cs)]\n [!code-vb[Classic WebData SqlConnection.Database Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._10_1.vb)]"
  syntax:
    content: public override void ChangeDatabase (string database);
    parameters:
    - id: database
      type: System.String
      description: "Navnet pÃ¥ databasen som skal brukes i stedet for den gjeldende databasen."
  overload: System.Data.SqlClient.SqlConnection.ChangeDatabase*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Databasenavnet er ikke gyldig."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Tilkoblingen er Ã¥pen."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Kan ikke endre databasen."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)
  id: ChangePassword(System.String,System.String)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ChangePassword(String,String)
  nameWithType: SqlConnection.ChangePassword(String,String)
  fullName: System.Data.SqlClient.SqlConnection.ChangePassword(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Endringer i [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] passordet for brukeren som er angitt i tilkoblingsstrengen for Ã¥ det angitte nye passordet."
  remarks: "NÃ¥r du bruker [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] utviklere kan dra nytte av funksjonalitet som lar klientprogrammet oppgi bÃ¥de gjeldende og et nytt passord for Ã¥ endre gjeldende passord pÃ¥ Windows Server. Programmer kan implementere funksjonaliteten som ber brukeren om et nytt passord under fÃ¸rste pÃ¥logging hvis det gamle er utlÃ¸pt, og operasjonen kan fullfÃ¸res uten administrator inngripen.       Endring av passordet ble metoden endringene i [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] passordet for brukeren som er angitt i den angitte `connectionString` parameter til verdien som er angitt i den `newPassword` parameteren. Hvis tilkoblingsstrengen med alternativet for integrert sikkerhet (det vil si &quot;integrert sikkerhet = True&quot; eller tilsvarende), et unntak.       Ã fastslÃ¥ at passordet er utlÃ¸pt, kaller <xref:System.Data.SqlClient.SqlConnection.Open%2A>metoden opphÃ¸yer <xref:System.Data.SqlClient.SqlException>.</xref:System.Data.SqlClient.SqlException> </xref:System.Data.SqlClient.SqlConnection.Open%2A> For Ã¥ angi at mÃ¥ du tilbakestille passordet i tilkoblingsstrengen, den <xref:System.Data.SqlClient.SqlException.Number%2A>-egenskapen for unntaket inneholder statusverdien 18487 eller 18488.</xref:System.Data.SqlClient.SqlException.Number%2A> Den fÃ¸rste verdien (18487) indikerer at passordet er utlÃ¸pt, og andre (18488) som angir at passordet mÃ¥ tilbakestilles fÃ¸r du logger pÃ¥.       Denne metoden Ã¥pner sin egen tilkobling til serveren, ber om at passordet er endret og lukker tilkoblingen sÃ¥ snart den er fullfÃ¸rt. Denne tilkoblingen er ikke hentet fra eller returnerte til den [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] tilkoblingsutvalget."
  example:
  - "The following is a simple example of changing a password:  \n  \n```  \nclass Program {  \n   static void Main(string[] args) {  \n      System.Data.SqlClient.SqlConnection.ChangePassword(  \n        \"Data Source=a_server;Initial Catalog=a_database;UID=user;PWD=old_password\",   \n       \"new_password\");  \n   }  \n}  \n  \n```  \n  \n```  \nModule Module1  \n    Sub Main()  \nSystem.Data.SqlClient.SqlConnection.ChangePassword(  \n        \"Data Source=a_server;Initial Catalog=a_database;UID=user;PWD=old_password\",   \n       \"new_password\")  \n    End Sub  \nEnd Module  \n  \n```  \n  \n The following console application demonstrates the issues involved in changing a user's password because the current password has expired.  \n  \n [!code-cs[DataWorks SqlConnection.ChangePassword#1](~/add/codesnippet/csharp/7b66f468-c7fc-4a76-bd4e-_1.cs)]\n [!code-vb[DataWorks SqlConnection.ChangePassword#1](~/add/codesnippet/visualbasic/7b66f468-c7fc-4a76-bd4e-_1.vb)]"
  syntax:
    content: public static void ChangePassword (string connectionString, string newPassword);
    parameters:
    - id: connectionString
      type: System.String
      description: "Tilkoblingsstrengen som inneholder nok informasjon til Ã¥ koble til serveren som du Ã¸nsker. Tilkoblingsstrengen mÃ¥ inneholde bruker-IDen og det gjeldende passordet."
    - id: newPassword
      type: System.String
      description: "Det nye passordet til Ã¥ angi. Dette passordet mÃ¥ samsvare med en sikkerhetspolicy for passord angitt pÃ¥ serveren, inkludert Minimumslengde, krav for bestemte tegn og sÃ¥ videre."
  overload: System.Data.SqlClient.SqlConnection.ChangePassword*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Tilkoblingsstrengen inneholder mulighet til Ã¥ bruke integrert sikkerhet.       Eller <code> newPassword </code> inneholder mer enn 128 tegn."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Enten den <code> connectionString </code> eller <code> newPassword </code> -parameteren er null."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)
  id: ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ChangePassword(String,SqlCredential,SecureString)
  nameWithType: SqlConnection.ChangePassword(String,SqlCredential,SecureString)
  fullName: System.Data.SqlClient.SqlConnection.ChangePassword(String,SqlCredential,SecureString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Endringer i [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] passordet for brukeren som er angitt i den <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> objektet."
  syntax:
    content: public static void ChangePassword (string connectionString, System.Data.SqlClient.SqlCredential credential, System.Security.SecureString newSecurePassword);
    parameters:
    - id: connectionString
      type: System.String
      description: 'Tilkoblingsstrengen som inneholder nok informasjon til Ã¥ koble til en server. Tilkoblingsstrengen kan ikke bruke fÃ¸lgende tilkoblingsstreng nÃ¸kkelord: <xref uid=&quot;langword_csharp_Integrated Security = true&quot; name=&quot;Integrated Security = true&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_UserId&quot; name=&quot;UserId&quot; href=&quot;&quot;> </xref>, eller <xref uid=&quot;langword_csharp_Password&quot; name=&quot;Password&quot; href=&quot;&quot;> </xref>; eller <xref uid=&quot;langword_csharp_ContextConnection = true&quot; name=&quot;ContextConnection = true&quot; href=&quot;&quot;> </xref>.'
    - id: credential
      type: System.Data.SqlClient.SqlCredential
      description: "A <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;></xref> object."
    - id: newSecurePassword
      type: System.Security.SecureString
      description: "Det nye passordet. `newSecurePassword`mÃ¥ vÃ¦re skrivebeskyttet. Passordet mÃ¥ ogsÃ¥ overholde alle passord sikkerhetspolicyen angitt pÃ¥ serveren (for eksempel Minimumslengde og krav for bestemte tegn)."
  overload: System.Data.SqlClient.SqlConnection.ChangePassword*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "1.Tilkoblingsstrengen inneholder en kombinasjon av <xref uid=&quot;langword_csharp_UserId&quot; name=&quot;UserId&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Password&quot; name=&quot;Password&quot; href=&quot;&quot;> </xref>, eller <xref uid=&quot;langword_csharp_Integrated Security=true&quot; name=&quot;Integrated Security=true&quot; href=&quot;&quot;> </xref>.      2.  Tilkoblingsstrengen inneholder <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;> </xref>.      3.  <code>newSecurePassword</code>er stÃ¸rre enn 128 tegn.      4.  <code>newSecurePassword</code>er ikke skrivebeskyttet.      5.  <code>newSecurePassword</code>er en tom streng."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One of the parameters (<code>connectionString</code>, <code>credential</code>, or <code>newSecurePassword</code>) is null."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ClearAllPools
  id: ClearAllPools
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ClearAllPools()
  nameWithType: SqlConnection.ClearAllPools()
  fullName: System.Data.SqlClient.SqlConnection.ClearAllPools()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "TÃ¸mmer tilkoblingsutvalget."
  remarks: "ClearAllPools tilbakestiller (eller tÃ¸mmer) tilkoblingsutvalget. Hvis det er tilkoblinger i bruk da ble kallet, de merkes pÃ¥ riktig mÃ¥te og forkastes (i stedet for returneres til utvalget) nÃ¥r <xref:System.Data.SqlClient.SqlConnection.Close%2A>kalles pÃ¥ dem.</xref:System.Data.SqlClient.SqlConnection.Close%2A>"
  syntax:
    content: public static void ClearAllPools ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnection.ClearAllPools*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)
  id: ClearPool(System.Data.SqlClient.SqlConnection)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ClearPool(SqlConnection)
  nameWithType: SqlConnection.ClearPool(SqlConnection)
  fullName: System.Data.SqlClient.SqlConnection.ClearPool(SqlConnection)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "TÃ¸mmer tilkoblingsutvalget knyttet til den angitte tilkoblingen."
  remarks: "ClearPool tÃ¸mmes tilkoblingsutvalget som er tilknyttet den `connection`. Hvis flere tilkoblinger som er tilknyttet `connection` er i bruk da ble kallet de merkes pÃ¥ riktig mÃ¥te og forkastes (i stedet for returneres til utvalget) nÃ¥r <xref:System.Data.SqlClient.SqlConnection.Close%2A>kalles pÃ¥ dem.</xref:System.Data.SqlClient.SqlConnection.Close%2A>"
  syntax:
    content: public static void ClearPool (System.Data.SqlClient.SqlConnection connection);
    parameters:
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: "Den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> fjernes fra utvalget."
  overload: System.Data.SqlClient.SqlConnection.ClearPool*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ClientConnectionId
  id: ClientConnectionId
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ClientConnectionId
  nameWithType: SqlConnection.ClientConnectionId
  fullName: System.Data.SqlClient.SqlConnection.ClientConnectionId
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Tilkoblingen-ID for siste forsÃ¸k pÃ¥ tilkobling, uavhengig om forsÃ¸ket var vellykket eller mislykket."
  remarks: "ClientConnectionId fungerer uansett hvilken versjon av serveren du kobler til, men utvidede hendelser Ytelseslogger og -posten pÃ¥ tilkobling ringen bufferen feil blir ikke finnes i [!INCLUDE[sskatmai_r2](~/add/includes/ajax-current-ext-md.md)] og tidligere.       Du finner tilkoblings-ID i den utvidede hendelsesloggen for Ã¥ vise Hvis feilen oppstod pÃ¥ serveren hvis utvidet hendelse for logging tilkoblings-ID er aktivert. Du kan ogsÃ¥ finne tilkoblings-ID i tilkoblingen ringbufferen ([tilkobling feilsÃ¸king i SQL Server 2008 med tilkobling ringbufferen](http://go.microsoft.com/fwlink/?LinkId=207752)) for en bestemt tilkoblingsfeil. Hvis tilkoblingen-IDen ikke er i tilkoblingen ringbufferen, kan du ta en nettverksfeil."
  syntax:
    content: public Guid ClientConnectionId { get; }
    return:
      type: System.Guid
      description: "ForsÃ¸k pÃ¥ tilkobling-IDen for den siste tilkoblingen."
  overload: System.Data.SqlClient.SqlConnection.ClientConnectionId*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.Close
  id: Close
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: Close()
  nameWithType: SqlConnection.Close()
  fullName: System.Data.SqlClient.SqlConnection.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Lukker tilkobling til databasen. Dette er den foretrukne metoden for lukker en Ã¥pen tilkobling."
  remarks: "Metoden Close ruller tilbake eventuelle ventende transaksjoner. Den deretter frigir tilkoblingen til tilkoblingsutvalget eller lukker tilkoblingen hvis tilkoblingsutvalg er deaktivert.      > [!NOTE] > Ventende transaksjoner startet ved hjelp av [!INCLUDE[tsql](~/add/includes/tsql-md.md)] eller <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>automatisk rullet tilbake under tilkoblingen blir tilbakestilt hvis tilkoblingsgruppering er aktivert.</xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> Hvis tilkoblingsutvalg er deaktivert, transaksjonen er rullet tilbake etter `SqlConnection.Close` kalles. Transaksjoner startet via <xref:System.Transactions>kontrolleres via den `System.Transactions` infrastruktur og er ikke berÃ¸rt av `SqlConnection.Close`.</xref:System.Transactions>       Et program kan ringe Lukk mer enn Ã©n gang. Ingen unntak genereres.       Hvis den <xref:System.Data.SqlClient.SqlConnection>gÃ¥r ut av omrÃ¥de, vil bli lukket.</xref:System.Data.SqlClient.SqlConnection> Du mÃ¥ derfor eksplisitt lukke tilkoblingen ved Ã¥ kalle `Close` eller `Dispose`. `Close`og `Dispose` ekvivalente Funksjonsmessig. Hvis tilkoblingsutvalget verdi `Pooling` er satt til `true` eller `yes`, underliggende tilkobling returneres tilbake til tilkoblingsutvalget. PÃ¥ den annen side hvis `Pooling` er satt til `false` eller `no`, underliggende tilkobling til serveren er lukket.      > [!NOTE] > PÃ¥logging og Logg av hendelser blir ikke oppstÃ¥ pÃ¥ serveren nÃ¥r en tilkobling er hentet fra eller returneres til tilkoblingsutvalget, fordi tilkoblingen ikke er faktisk lukket nÃ¥r det returneres til tilkoblingsutvalget. Hvis du vil ha mer informasjon, se [SQL Server tilkoblingen Pooling (ADO.NET)](~/add/includes/ajax-current-ext-md.md).      > [!CAUTION] > Ikke kall `Close` eller `Dispose` pÃ¥ en tilkobling, en DataReader eller andre administrerte objekter i den `Finalize` metode for klassen. Du bÃ¸r bare frigi uforvaltede ressurser som klassen eier direkte i en sluttbehandler. Hvis klassen ikke eier uforvaltede ressurser, inneholder ikke en `Finalize` metoden i klassedefinisjonen. Hvis du vil ha mer informasjon, se [datasanering](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, opens it, displays some of its properties. The connection is automatically closed at the end of the `using` block.  \n  \n [!code-vb[Classic WebData SqlConnection.Open Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._20_1.vb)]\n [!code-cs[Classic WebData SqlConnection.Open Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._20_1.cs)]"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnection.Close*
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "TilkoblingsnivÃ¥ feilen som oppstod under Ã¥pning av tilkoblingen."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl
  id: ColumnEncryptionKeyCacheTtl
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ColumnEncryptionKeyCacheTtl
  nameWithType: SqlConnection.ColumnEncryptionKeyCacheTtl
  fullName: System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter eller angir den--levetid for kolonnekrypteringsnÃ¸kkelen nÃ¸kkeloppfÃ¸ringer i kolonnen kryptering key hurtigbufferen for den [alltid krypteres](https://msdn.microsoft.com/library/mt163865.aspx) funksjonen. Standardverdien er 2 timer. 0 betyr ingen hurtigbufring i det hele tatt."
  syntax:
    content: public static TimeSpan ColumnEncryptionKeyCacheTtl { get; set; }
    return:
      type: System.TimeSpan
      description: "Tidsintervallet."
  overload: System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
  id: ColumnEncryptionQueryMetadataCacheEnabled
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ColumnEncryptionQueryMetadataCacheEnabled
  nameWithType: SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
  fullName: System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter eller angir en verdi som angir om spÃ¸rringen metadata hurtigbufring er aktivert (true) eller ikke (false) for parametriske spÃ¸rringer som kjÃ¸rer mot [alltid krypteres](https://msdn.microsoft.com/library/mt163865.aspx) aktivert databaser. Standardverdien er true."
  remarks: "For parametriske spÃ¸rringer SqlClient gjÃ¸r en tur-retur i SQL Server for parametermetadata, se som parameter som er nÃ¸dvendige for Ã¥ kryptere og hvordan (som nÃ¸kler og algoritmer bÃ¸r brukes). Hvis programmet kaller den samme spÃ¸rringen flere ganger, gjÃ¸res en ekstra tur-retur serveren hver gang som blir dÃ¥rligere ytelse.       Med **ColumnEncryptionQueryMetadataCacheEnabled** satt til SANN, hvis den samme spÃ¸rringen kalles flere ganger, tur-retur til serveren gjÃ¸res bare Ã©n gang. Bufferen har en ikke-konfigurerbare Max parameteren som er satt til 2000 spÃ¸rringer."
  syntax:
    content: public static bool ColumnEncryptionQueryMetadataCacheEnabled { get; set; }
    return:
      type: System.Boolean
      description: "Returnerer true Hvis spÃ¸rringen metadata hurtigbufring er aktivert. Ellers false. True er standard."
  overload: System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
  id: ColumnEncryptionTrustedMasterKeyPaths
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ColumnEncryptionTrustedMasterKeyPaths
  nameWithType: SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
  fullName: System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Lar deg angi en liste over baner, klarert nÃ¸kkel for en databaseserver. Hvis under behandling av en spÃ¸rring med programmet driveren mottar en key-bane som ikke er i listen, mislykkes spÃ¸rringen. Denne egenskapen gir ekstra beskyttelse mot eventuelle som omfatter en skadet SQL-Server gir baner med falske, som kan fÃ¸re til at lekker key store legitimasjon."
  syntax:
    content: public static System.Collections.Generic.IDictionary<string,System.Collections.Generic.IList<string>> ColumnEncryptionTrustedMasterKeyPaths { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IList{System.String}}
      description: "Listen over klarerte hovednÃ¸kkelen baner for kolonne-kryptering."
  overload: System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ConnectionString
  nameWithType: SqlConnection.ConnectionString
  fullName: System.Data.SqlClient.SqlConnection.ConnectionString
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter eller angir Formatstrengen som brukes til Ã¥ Ã¥pne en [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] database."
  remarks: "ConnectionString ligner en OLE DB-tilkoblingsstreng, men er ikke identiske. I motsetning til OLE DB- eller ADO tilkoblingsstrengen som er returnert er lik minus sikkerhetsinformasjon ConnectionString brukersett Hvis beholde sikkerhetsinformasjonen-verdien er satt til `false` (standard). Den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dataleverandÃ¸ren for [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] ikke beholde eller Returner passordet i en tilkoblingsstreng med mindre du angir beholde sikkerhetsinformasjonen til `true`.       Du kan bruke ConnectionString-egenskapen til Ã¥ koble til en database. FÃ¸lgende eksempel illustrerer en vanlig tilkoblingsstreng.      ```   &quot;Persist Security Info=False;Integrated Security=true;Initial Catalog=Northwind;server=(local)&quot;   ```Bruk den nye <xref:System.Data.SqlClient.SqlConnectionStringBuilder>ikke konstruere tilkoblingsstrenger, er ugyldig pÃ¥ kjÃ¸retidspunktet.</xref:System.Data.SqlClient.SqlConnectionStringBuilder> Hvis du vil ha mer informasjon, se [tilkoblingsstreng verktÃ¸y](~/add/includes/ajax-current-ext-md.md).       ConnectionString-egenskapen kan angis bare nÃ¥r tilkoblingen er lukket. Mange av strengverdier tilkobling har tilsvarende skrivebeskyttede egenskaper. NÃ¥r tilkoblingsstrengen er angitt, vil disse egenskapene er oppdatert, bortsett fra nÃ¥r det er oppdaget en feil. I dette tilfellet er ingen av egenskapene oppdatert. <xref:System.Data.SqlClient.SqlConnection>Egenskaper returnerer innstillingene som finnes i ConnectionString.</xref:System.Data.SqlClient.SqlConnection>       Angi &quot;(lokalt)&quot; for serveren for Ã¥ koble til en lokal datamaskin. Hvis et servernavn ikke er angitt, vil bli forsÃ¸kt en tilkobling til standardforekomsten pÃ¥ den lokale datamaskinen.       Tilbakestille ConnectionString i en lukket tilkobling tilbakestiller alle tilkoblingen strengverdier (og relaterte egenskaper) som inkludert passordet. Hvis du har angitt en tilkoblingsstreng som inkluderer for eksempel &quot;Database = AdventureWorks&quot;, og tilbakestille tilkoblingsstrengen for Ã¥ &quot;datakilden = minserver; integrert sikkerhet = true&quot;, <xref:System.Data.SqlClient.SqlConnection.Database%2A>ikke lenger er satt til &quot;AdventureWorks&quot;.</xref:System.Data.SqlClient.SqlConnection.Database%2A>       Tilkoblingsstrengen analyseres umiddelbart etter at du har angitt. Hvis feil i syntaksen blir funnet ved analysering av, et runtime unntak som <xref:System.ArgumentException>, er generert.</xref:System.ArgumentException> Du finner andre feil nÃ¥r er gjort forsÃ¸k pÃ¥ Ã¥ Ã¥pne tilkoblingen.       Standardformatet for en tilkoblingsstreng inneholder en serie med nÃ¸kkelordet/verdi-par atskilt med semikolon. Likhetstegnet (=) kobler hvert nÃ¸kkelord og verdien. Verdien mÃ¥ vÃ¦re angitt i doble anfÃ¸rselstegn for Ã¥ ta med verdier som inneholder et semikolon, enkle anfÃ¸rselstegn og doble anfÃ¸rselstegn. Verdien inneholder bÃ¥de et semikolon og doble anfÃ¸rselstegn, kan verdien vÃ¦re angitt i enkle anfÃ¸rselstegn. Enkle anfÃ¸rselstegn er ogsÃ¥ nyttig hvis verdien begynner med doble anfÃ¸rselstegn. Derimot kan du doble anfÃ¸rselstegn brukes hvis verdien starter med et enkelt anfÃ¸rselstegn. Hvis verdien inneholder bÃ¥de enkle anfÃ¸rselstegn og doble anfÃ¸rselstegn tegn, mÃ¥ vÃ¦re anfÃ¸rselstegn tegnet som brukes til Ã¥ omslutte verdien dobbel alle forekomster i verdien.       Hvis du vil inkludere foregÃ¥ende eller etterfÃ¸lgende mellomrom i strengverdien, mÃ¥ verdien vÃ¦re angitt i enkle anfÃ¸rselstegn eller doble anfÃ¸rselstegn. Innledende eller avsluttende mellomrom rundt integer, boolsk eller nummererte verdiene ignoreres, selv om i anfÃ¸rselstegn. Imidlertid beholdes mellomrom i en streng litteral nÃ¸kkelordet eller verdi. Kan brukes i en tilkoblingsstreng enkle eller doble anfÃ¸rselstegn uten Ã¥ bruke skilletegn (for eksempel datakilden = my&quot;Server eller datakilden = min &quot;-Server), med mindre en anfÃ¸rselstegn er det fÃ¸rste eller siste tegnet i verdien.       NÃ¸kkelord er ikke mellom store og smÃ¥ bokstaver.       Tabellen nedenfor viser gyldige navn for nÃ¸kkelordet verdier i ConnectionString.        FÃ¸lgende liste viser gyldige navn for tilkoblingsutvalg verdier i ConnectionString. Hvis du vil ha mer informasjon, se [SQL Server tilkoblingen Pooling (ADO.NET)](~/add/includes/ajax-current-ext-md.md).      -Levetid for tilkobling (eller tidsavbrudd for Datainnlasting saldo) - registrere - maksimal stÃ¸rrelse for tilkoblingsutvalg - stÃ¸rrelse for tilkoblingsutvalg for Min - utvalg nÃ¥r du er innstillingen nÃ¸kkelordet eller tilkoblingsutvalg verdier som krever en boolsk verdi, kan du bruke &quot;Ja&quot; i stedet for &quot;true&quot; og &quot;Nei&quot; i stedet for &quot;false&quot;. Heltallsverdier representeres som strenger.      > [!NOTE] > Den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dataleverandÃ¸ren for [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] bruker sine egne protokollen til Ã¥ kommunisere med [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]. Derfor det stÃ¸tter ikke bruk av en ODBC-navn (DSN) nÃ¥r du kobler til [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] fordi den ikke legge til en ODBC-laget.      > [!NOTE] > Universal datafiler for koblingen (UDL) stÃ¸ttes ikke for den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dataleverandÃ¸ren for [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)].      > [!CAUTION] > I denne utgaven programmet skal bruke forsiktig ved Ã¥ opprette en tilkoblingsstreng basert pÃ¥ brukerinndata (for eksempel under henting av bruker-ID og passord informasjon fra en dialogboks og tilfÃ¸ye den i tilkoblingsstrengen). Programmet mÃ¥ kontrollere at en bruker ikke kan bygge inn flere streng tilkoblingsparameterne disse verdiene (for eksempel skriver inn et passord som &quot;validpassword; database = somedb&quot; i et forsÃ¸k pÃ¥ Ã¥ koble til en annen database). Hvis du trenger Ã¥ konstruere tilkoblingsstrenger basert pÃ¥ brukerinndata, kan du bruke den nye <xref:System.Data.SqlClient.SqlConnectionStringBuilder>, som validerer tilkoblingsstrengen og bidrar til Ã¥ fjerne dette problemet.</xref:System.Data.SqlClient.SqlConnectionStringBuilder> Se [tilkoblingsstreng verktÃ¸y](../Topic/Connection%20String%20Builders.md) for mer informasjon."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and sets the ConnectionString property before opening the connection.  \n  \n [!code-vb[Classic WebData SqlConnection.ConnectionString Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._24_1.vb)]\n [!code-cs[Classic WebData SqlConnection.ConnectionString Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._24_1.cs)]"
  syntax:
    content: public override string ConnectionString { get; set; }
    return:
      type: System.String
      description: "Tilkoblingsstrengen som inkluderer navnet pÃ¥ kildedatabasen og andre parametere som kreves for Ã¥ opprette den fÃ¸rste tilkoblingen. Standardverdien er en tom streng."
  overload: System.Data.SqlClient.SqlConnection.ConnectionString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "En ugyldig tilkobling strengargument er angitt, eller argumentet for en obligatorisk tilkoblingen er ikke angitt."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ConnectionTimeout
  nameWithType: SqlConnection.ConnectionTimeout
  fullName: System.Data.SqlClient.SqlConnection.ConnectionTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter ventetiden under forsÃ¸k pÃ¥ Ã¥ opprette en tilkobling fÃ¸r forsÃ¸ket avbrytes og det genereres en feil."
  remarks: "Du kan angi hvor lenge en tilkobling venter stopper ved hjelp av `Connect``Timeout` eller `Connection Timeout` nÃ¸kkelord i tilkoblingsstrengen. Verdien 0 indikerer ingen grense og bÃ¸r unngÃ¥s i en <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>fordi et forsÃ¸k pÃ¥ Ã¥ koble venter pÃ¥ ubestemt tid.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and sets the `Connection Timeout` to 30 seconds in the connection string. The code opens the connection and displays the ConnectionTimeout property in the console window.  \n  \n [!code-vb[Classic WebData SqlConnection.ConnectionTimeout Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._28_1.vb)]\n [!code-cs[Classic WebData SqlConnection.ConnectionTimeout Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._28_1.cs)]"
  syntax:
    content: public override int ConnectionTimeout { get; }
    return:
      type: System.Int32
      description: "Tiden (i sekunder) skal ventes pÃ¥ tilkobling til Ã¥ Ã¥pne. Standardverdien er 15 sekunder."
  overload: System.Data.SqlClient.SqlConnection.ConnectionTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Verdien er mindre enn 0."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: SqlConnection.CreateCommand()
  fullName: System.Data.SqlClient.SqlConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Oppretter og returnerer en <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> tilknyttet den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>."
  remarks: ''
  example:
  - >-
    [!code-vb[SqlConnection_CreateCommand#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._32_1.vb)]
     [!code-cs[SqlConnection_CreateCommand#1](~/add/codesnippet/csharp/m-system.data.sqlclient._32_1.cs)]
  syntax:
    content: public System.Data.SqlClient.SqlCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "A <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;></xref> object."
  overload: System.Data.SqlClient.SqlConnection.CreateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.CreateDbCommand
  id: CreateDbCommand
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: CreateDbCommand()
  nameWithType: SqlConnection.CreateDbCommand()
  fullName: System.Data.SqlClient.SqlConnection.CreateDbCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbCommand CreateDbCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "Som skal legges til."
  overload: System.Data.SqlClient.SqlConnection.CreateDbCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.Credential
  id: Credential
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: Credential
  nameWithType: SqlConnection.Credential
  fullName: System.Data.SqlClient.SqlConnection.Credential
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter eller angir den <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> objekt for denne tilkoblingen."
  remarks: "`Persist Security Info = true`kreves for Ã¥ hente verdien for den <xref:System.Data.SqlClient.SqlCredential>objekt med legitimasjon.</xref:System.Data.SqlClient.SqlCredential>       Standardverdien for legitimasjonen er null.       En <xref:System.InvalidOperationException>unntaket kan oppstÃ¥: â Hvis legitimasjon er angitt for en Ã¥pen tilkobling.</xref:System.InvalidOperationException>      -Hvis legitimasjon er angitt nÃ¥r `Context Connection=true`.      -Hvis legitimasjon er angitt nÃ¥r `Integrated Security = true`.      -Hvis legitimasjon er angitt nÃ¥r tilkoblingsstrengen `Password`.      -Hvis legitimasjon er angitt nÃ¥r tilkoblingsstrengen `UserID`."
  syntax:
    content: public System.Data.SqlClient.SqlCredential Credential { get; set; }
    return:
      type: System.Data.SqlClient.SqlCredential
      description: "Den <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> objekt for denne tilkoblingen."
  overload: System.Data.SqlClient.SqlConnection.Credential*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.Database
  id: Database
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: Database
  nameWithType: SqlConnection.Database
  fullName: System.Data.SqlClient.SqlConnection.Database
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter navnet pÃ¥ den gjeldende databasen eller database som skal brukes nÃ¥r en tilkobling er Ã¥pnet."
  remarks: "Databaseegenskapen oppdaterer dynamisk. Hvis du endrer den gjeldende databasen ved hjelp av en [!INCLUDE[tsql](~/add/includes/tsql-md.md)] setningen eller <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A>metoden, sendes en Informasjonsmelding og egenskapen oppdateres automatisk.</xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and displays some of its read-only properties.  \n  \n [!code-cs[Classic WebData SqlConnection.Database Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._26_1.cs)]\n [!code-vb[Classic WebData SqlConnection.Database Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._26_1.vb)]"
  syntax:
    content: public override string Database { get; }
    return:
      type: System.String
      description: "Navnet pÃ¥ den gjeldende databasen eller navnet pÃ¥ databasen som skal brukes nÃ¥r en tilkobling er Ã¥pnet. Standardverdien er en tom streng."
  overload: System.Data.SqlClient.SqlConnection.Database*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.DataSource
  id: DataSource
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: DataSource
  nameWithType: SqlConnection.DataSource
  fullName: System.Data.SqlClient.SqlConnection.DataSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter navnet pÃ¥ forekomsten av [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] for tilkobling."
  remarks: >-
    > [!NOTE]

    >  The DataSource property returns `null` if the connection string for the <xref:System.Data.SqlClient.SqlConnection> is "context connection=true".
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and displays some of its read-only properties.  \n  \n [!code-vb[Classic WebData SqlConnection.DataSource Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._62_1.vb)]\n [!code-cs[Classic WebData SqlConnection.DataSource Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._62_1.cs)]"
  syntax:
    content: public override string DataSource { get; }
    return:
      type: System.String
      description: "Navnet pÃ¥ forekomsten av [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] for tilkobling. Standardverdien er en tom streng."
  overload: System.Data.SqlClient.SqlConnection.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.DbProviderFactory
  id: DbProviderFactory
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: DbProviderFactory
  nameWithType: SqlConnection.DbProviderFactory
  fullName: System.Data.SqlClient.SqlConnection.DbProviderFactory
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbProviderFactory DbProviderFactory { get; }
    return:
      type: System.Data.Common.DbProviderFactory
      description: "Som skal legges til."
  overload: System.Data.SqlClient.SqlConnection.DbProviderFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SqlConnection.Dispose(Boolean)
  fullName: System.Data.SqlClient.SqlConnection.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Som skal legges til."
  overload: System.Data.SqlClient.SqlConnection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  id: EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: SqlConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(ITransaction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Innrullerer i den angitte transaksjonen som en distribuert transaksjon."
  remarks: "Du kan bruke den <xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A>metode for Ã¥ registrere i en distribuert transaksjon.</xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A> Fordi den innrullerer en tilkobling i en <xref:System.Transactions.Transaction>forekomsten **EnlistTransaction** utnytter funksjoner er tilgjengelig i den <xref:System.Transactions>navneomrÃ¥de for behandling av distribuerte transaksjoner, slik at det er best Ã¥ **EnlistDistributedTransaction** for dette formÃ¥let.</xref:System.Transactions> </xref:System.Transactions.Transaction> Hvis du vil ha mer informasjon, se [distribuerte transaksjoner](~/add/includes/ajax-current-ext-md.md).       Du kan fortsette Ã¥ registrere i en eksisterende distribuert transaksjon ved hjelp av den **EnlistDistributedTransaction** metoden hvis automatisk oppfÃ¸ring er deaktivert. Innrullering i en eksisterende distribuert transaksjon sÃ¸rger for at, hvis transaksjonen er iverksatt eller rullet tilbake, endringer foretatt av koden i datakilden er ogsÃ¥ iverksatt eller rullet tilbake.       `EnlistDistributedTransaction`Returnerer et unntak hvis du <xref:System.Data.SqlClient.SqlConnection>allerede har startet en transaksjon med <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>.</xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> </xref:System.Data.SqlClient.SqlConnection> Men hvis transaksjonen er en lokal transaksjon startet datakilden (for eksempel ved Ã¥ kjÃ¸re eksplisitt BEGIN TRANSACTION-setning ved hjelp av en <xref:System.Data.SqlClient.SqlCommand>objektet), **EnlistDistributedTransaction** ruller tilbake lokale transaksjoner og innrullerer i den eksisterende distribuert transaksjonen som ble forespurt.</xref:System.Data.SqlClient.SqlCommand> Du mottar ikke Legg merke til at den lokale transaksjonen ble rullet tilbake, og er ansvarlig for Ã¥ administrere lokale transaksjoner ikke startet ved hjelp av <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>.</xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>"
  syntax:
    content: public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);
    parameters:
    - id: transaction
      type: System.EnterpriseServices.ITransaction
      description: "En referanse til en eksisterende <xref href=&quot;System.EnterpriseServices.ITransaction&quot;> </xref> der du vil registrere."
  overload: System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)
  id: EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: EnlistTransaction(Transaction)
  nameWithType: SqlConnection.EnlistTransaction(Transaction)
  fullName: System.Data.SqlClient.SqlConnection.EnlistTransaction(Transaction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Innrullerer i den angitte transaksjonen som en distribuert transaksjon."
  remarks: 'Du kan bruke metoden EnlistTransaction oppfÃ¸ring i en distribuert transaksjon. Fordi den innrullerer en tilkobling i en <xref:System.Transactions.Transaction>forekomsten **EnlistTransaction** utnytter funksjoner er tilgjengelig i den <xref:System.Transactions>navneomrÃ¥de for behandling av distribuerte transaksjoner, slik at det er best Ã¥ **EnlistDistributedTransaction**, som bruker en **System.EnterpriseServices.ITransaction** objektet.</xref:System.Transactions> </xref:System.Transactions.Transaction> Det er ogsÃ¥ litt annerledes semantikk: nÃ¥r en tilkobling er eksplisitt innrullert i en transaksjon, kan ikke unenlisted eller innrullert i en annen transaksjon fÃ¸r den fÃ¸rste transaksjonen er fullfÃ¸rt. Du finner mer informasjon om distribuerte transaksjoner [distribuerte transaksjoner](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public override void EnlistTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "En referanse til en eksisterende <xref href=&quot;System.Transactions.Transaction&quot;> </xref> der du vil registrere."
  overload: System.Data.SqlClient.SqlConnection.EnlistTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors
  id: FireInfoMessageEventOnUserErrors
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: FireInfoMessageEventOnUserErrors
  nameWithType: SqlConnection.FireInfoMessageEventOnUserErrors
  fullName: System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter eller angir FireInfoMessageEventOnUserErrors-egenskapen."
  remarks: "NÃ¥r du angir FireInfoMessageEventOnUserErrors `true`, feil som ble behandlet tidligere som behandles nÃ¥ unntak som <xref:System.Data.SqlClient.SqlConnection.InfoMessage>hendelser.</xref:System.Data.SqlClient.SqlConnection.InfoMessage> Alle hendelser fire umiddelbart og behandles av hendelsesbehandlingen. Hvis er FireInfoMessageEventOnUserErrors er satt til `false`, deretter <xref:System.Data.SqlClient.SqlConnection.InfoMessage>hendelser behandles pÃ¥ slutten av prosedyren.</xref:System.Data.SqlClient.SqlConnection.InfoMessage>      > [!NOTE] > En feil med et sikkerhetsnivÃ¥ 17 eller nyere som fÃ¸rer til at serveren skal stoppes behandling av kommandoen mÃ¥ hÃ¥ndteres som et unntak. I dette tilfellet et unntak uavhengig av hvordan feilen hÃ¥ndteres i den <xref:System.Data.SqlClient.SqlConnection.InfoMessage>hendelsen.</xref:System.Data.SqlClient.SqlConnection.InfoMessage>       Du finner mer informasjon om Ã¥ arbeide med hendelser [tilkobling hendelser](~/add/includes/ajax-current-ext-md.md). For mer informasjon om feilene som er generert av den [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] motor, kan du se [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online."
  syntax:
    content: public bool FireInfoMessageEventOnUserErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis egenskapen FireInfoMessageEventOnUserErrors er angitt; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.GetSchema
  id: GetSchema
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: GetSchema()
  nameWithType: SqlConnection.GetSchema()
  fullName: System.Data.SqlClient.SqlConnection.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Returnerer skjemainformasjon for datakilden for denne <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>. Du finner mer informasjon om skjemaet [SQL Server-Skjemasamlinger](http://msdn.microsoft.com/library/ms254969.aspx)."
  syntax:
    content: public override System.Data.DataTable GetSchema ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "En <xref href=&quot;System.Data.DataTable&quot;> </xref> som inneholder skjemainformasjon."
  overload: System.Data.SqlClient.SqlConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.GetSchema(System.String)
  id: GetSchema(System.String)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: GetSchema(String)
  nameWithType: SqlConnection.GetSchema(String)
  fullName: System.Data.SqlClient.SqlConnection.GetSchema(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Returnerer skjemainformasjon for datakilden for denne <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> ved hjelp av den angitte strengen for skjemanavnet."
  remarks: "Du mÃ¥ kanskje skjemainformasjon over databasen, tabeller eller kolonner. Dette eksemplet:-bruker GetSchema ikke hente skjemainformasjon.      -Bruk skjemaet begrensninger for den angitte informasjonen.      -Henter skjemainformasjon for databasen, tabeller og noen kolonner.       FÃ¸r du kjÃ¸rer eksemplet, mÃ¥ du opprette databasen utvalg ved hjelp av fÃ¸lgende [!INCLUDE[tsql](~/add/includes/tsql-md.md)]: ```   USE [master]   GO      CREATE DATABASE [MySchool]       GO      USE [MySchool]   GO      SET ANSI_NULLS ON   GO   SET QUOTED_IDENTIFIER ON   GO   CREATE TABLE [dbo].[Course](~/add/includes/ajax-current-ext-md.md [nvarchar](10) NOT NULL,   [Year] [smallint] NOT NULL,   [Title] [nvarchar](100) NOT NULL,   [Credits] [int] NOT NULL,   [DepartmentID] [int] NOT NULL,    CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED    (   [CourseID] ASC,   [Year] ASC   )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]      GO      SET ANSI_NULLS ON   GO   SET QUOTED_IDENTIFIER ON   GO   CREATE TABLE [dbo].[Department](~/add/includes/ajax-current-ext-md.md [int] IDENTITY(1,1) NOT NULL,   [Name] [nvarchar](50) NOT NULL,   [Budget] [money] NOT NULL,   [StartDate] [datetime] NOT NULL,   [Administrator] [int] NULL,    CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED    (   [DepartmentID] ASC   )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]      GO      INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N&quot;C1045&quot;, 2012, N&quot;Calculus&quot;, 4, 7)   INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N&quot;C1061&quot;, 2012, N&quot;Physics&quot;, 4, 1)   INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N&quot;C2021&quot;, 2012, N&quot;Composition&quot;, 3, 2)   INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N&quot;C2042&quot;, 2012, N&quot;Literature&quot;, 4, 2)      SET IDENTITY_INSERT [dbo].[Department] ON       INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N&quot;Engineering&quot;, 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)   INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N&quot;English&quot;, 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)   INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N&quot;Economics&quot;, 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)   INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N&quot;Mathematics&quot;, 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)   SET IDENTITY_INSERT [dbo].[Department] OFF      ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])   REFERENCES [dbo].[Department] ([DepartmentID])   GO   ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]   GO   ``` [slik hente skjemainformasjon fra databasen](http://code.msdn.microsoft.com/How-to-Get-Schema-b66d62e2) har C# og Visual Basic versjoner av dette kodeeksempel i et Visual Studio-prosjekt.             ```   using System;   using System.Data;   using System.Data.SqlClient;      class Program {      static void Main(string[] args) {            using (SqlConnection conn = new SqlConnection(&quot;Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;&quot;)) {            conn.Open();               // Get the Meta Data for Supported Schema Collections            DataTable metaDataTable = conn.GetSchema(&quot;MetaDataCollections&quot;);               Console.WriteLine(&quot;Meta Data for Supported Schema Collections:&quot;);            ShowDataTable(metaDataTable, 25);            Console.WriteLine();               // Get the schema information of Databases in your instance            DataTable databasesSchemaTable = conn.GetSchema(&quot;Databases&quot;);               Console.WriteLine(&quot;Schema Information of Databases:&quot;);            ShowDataTable(databasesSchemaTable, 25);            Console.WriteLine();               // First, get schema information of all the tables in current database;            DataTable allTablesSchemaTable = conn.GetSchema(&quot;Tables&quot;);               Console.WriteLine(&quot;Schema Information of All Tables:&quot;);            ShowDataTable(allTablesSchemaTable, 20);            Console.WriteLine();               // You can specify the Catalog, Schema, Table Name, Table Type to get             // the specified table(s).            // You can use four restrictions for Table, so you should create a 4 members array.            String[] tableRestrictions = new String[4];               // For the array, 0-member represents Catalog; 1-member represents Schema;             // 2-member represents Table Name; 3-member represents Table Type.             // Now we specify the Table Name of the table what we want to get schema information.            tableRestrictions[2] = &quot;Course&quot;;               DataTable courseTableSchemaTable = conn.GetSchema(&quot;Tables&quot;, tableRestrictions);               Console.WriteLine(&quot;Schema Information of Course Tables:&quot;);            ShowDataTable(courseTableSchemaTable, 20);            Console.WriteLine();               // First, get schema information of all the columns in current database.            DataTable allColumnsSchemaTable = conn.GetSchema(&quot;Columns&quot;);               Console.WriteLine(&quot;Schema Information of All Columns:&quot;);            ShowColumns(allColumnsSchemaTable);            Console.WriteLine();               // You can specify the Catalog, Schema, Table Name, Column Name to get the specified column(s).            // You can use four restrictions for Column, so you should create a 4 members array.            String[] columnRestrictions = new String[4];               // For the array, 0-member represents Catalog; 1-member represents Schema;             // 2-member represents Table Name; 3-member represents Column Name.             // Now we specify the Table_Name and Column_Name of the columns what we want to get schema information.            columnRestrictions[2] = &quot;Course&quot;;            columnRestrictions[3] = &quot;DepartmentID&quot;;               DataTable departmentIDSchemaTable = conn.GetSchema(&quot;Columns&quot;, columnRestrictions);               Console.WriteLine(&quot;Schema Information of DepartmentID Column in Course Table:&quot;);            ShowColumns(departmentIDSchemaTable);            Console.WriteLine();               // First, get schema information of all the IndexColumns in current database            DataTable allIndexColumnsSchemaTable = conn.GetSchema(&quot;IndexColumns&quot;);               Console.WriteLine(&quot;Schema Information of All IndexColumns:&quot;);            ShowIndexColumns(allIndexColumnsSchemaTable);            Console.WriteLine();               // You can specify the Catalog, Schema, Table Name, Constraint Name, Column Name to             // get the specified column(s).            // You can use five restrictions for Column, so you should create a 5 members array.            String[] indexColumnsRestrictions = new String[5];               // For the array, 0-member represents Catalog; 1-member represents Schema;             // 2-member represents Table Name; 3-member represents Constraint Name;4-member represents Column Name.             // Now we specify the Table_Name and Column_Name of the columns what we want to get schema information.            indexColumnsRestrictions[2] = &quot;Course&quot;;            indexColumnsRestrictions[4] = &quot;CourseID&quot;;               DataTable courseIdIndexSchemaTable = conn.GetSchema(&quot;IndexColumns&quot;, indexColumnsRestrictions);               Console.WriteLine(&quot;Index Schema Information of CourseID Column in Course Table:&quot;);            ShowIndexColumns(courseIdIndexSchemaTable);            Console.WriteLine();         }            Console.WriteLine(&quot;Please press any key to exit...&quot;);         Console.ReadKey();      }         private static void ShowDataTable(DataTable table, Int32 length) {         foreach (DataColumn col in table.Columns) {            Console.Write(&quot;{0,-&quot; + length + &quot;}&quot;, col.ColumnName);         }         Console.WriteLine();            foreach (DataRow row in table.Rows) {            foreach (DataColumn col in table.Columns) {               if (col.DataType.Equals(typeof(DateTime)))                  Console.Write(&quot;{0,-&quot; + length + &quot;:d}&quot;, row[col]);               else if (col.DataType.Equals(typeof(Decimal)))                  Console.Write(&quot;{0,-&quot; + length + &quot;:C}&quot;, row[col]);               else                  Console.Write(&quot;{0,-&quot; + length + &quot;}&quot;, row[col]);            }            Console.WriteLine();         }      }         private static void ShowDataTable(DataTable table) {         ShowDataTable(table, 14);      }         private static void ShowColumns(DataTable columnsTable) {         var selectedRows = from info in columnsTable.AsEnumerable()                            select new {                               TableCatalog = info[&quot;TABLE_CATALOG&quot;],                               TableSchema = info[&quot;TABLE_SCHEMA&quot;],                               TableName = info[&quot;TABLE_NAME&quot;],                               ColumnName = info[&quot;COLUMN_NAME&quot;],                               DataType = info[&quot;DATA_TYPE&quot;]                            };            Console.WriteLine(&quot;{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}&quot;, &quot;TableCatalog&quot;, &quot;TABLE_SCHEMA&quot;,             &quot;TABLE_NAME&quot;, &quot;COLUMN_NAME&quot;, &quot;DATA_TYPE&quot;);         foreach (var row in selectedRows) {            Console.WriteLine(&quot;{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}&quot;, row.TableCatalog,                row.TableSchema, row.TableName, row.ColumnName, row.DataType);         }      }         private static void ShowIndexColumns(DataTable indexColumnsTable) {         var selectedRows = from info in indexColumnsTable.AsEnumerable()                            select new {                               TableSchema = info[&quot;table_schema&quot;],                               TableName = info[&quot;table_name&quot;],                               ColumnName = info[&quot;column_name&quot;],                               ConstraintSchema = info[&quot;constraint_schema&quot;],                               ConstraintName = info[&quot;constraint_name&quot;],                               KeyType = info[&quot;KeyType&quot;]                            };            Console.WriteLine(&quot;{0,-14}{1,-11}{2,-14}{3,-18}{4,-16}{5,-8}&quot;, &quot;table_schema&quot;, &quot;table_name&quot;, &quot;column_name&quot;, &quot;constraint_schema&quot;, &quot;constraint_name&quot;, &quot;KeyType&quot;);         foreach (var row in selectedRows) {            Console.WriteLine(&quot;{0,-14}{1,-11}{2,-14}{3,-18}{4,-16}{5,-8}&quot;, row.TableSchema,                row.TableName, row.ColumnName, row.ConstraintSchema, row.ConstraintName, row.KeyType);         }      }   }   ```"
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName);
    parameters:
    - id: collectionName
      type: System.String
      description: "Angir navnet pÃ¥ skjemaet til Ã¥ returnere."
    return:
      type: System.Data.DataTable
      description: "En <xref href=&quot;System.Data.DataTable&quot;> </xref> som inneholder skjemainformasjon."
  overload: System.Data.SqlClient.SqlConnection.GetSchema*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>collectionName</code>angis som null."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])
  id: GetSchema(System.String,System.String[])
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: GetSchema(String,String[])
  nameWithType: SqlConnection.GetSchema(String,String[])
  fullName: System.Data.SqlClient.SqlConnection.GetSchema(String,String[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Returnerer skjemainformasjon for datakilden for denne <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> ved hjelp av den angitte strengen for skjemanavnet og den angitte strengmatrise for begrensning-verdier."
  remarks: "Den `restrictionValues` parameteren kan angi *n* av verdier, som er angitt av begrensningssamlingen for en bestemt samling. For Ã¥ angi verdier for en gitt begrensning, og ikke angi verdier for andre begrensninger, mÃ¥ du angi foregÃ¥ende begrensningene `null` og sette inn verdien i for begrensningen som du vil angi en verdi for.       Et eksempel pÃ¥ dette er &quot;Tabeller&quot;-samling. Hvis &quot;Tabeller&quot;-samlingen inneholder tre begrensninger--database, eier, og navnet pÃ¥ tabellen, og du vil komme bare tabellene som er knyttet til eieren &quot;Carl&quot;, mÃ¥ du sende i fÃ¸lgende verdier: null, &quot;Carl&quot;. Hvis en begrensning-verdien ikke er sendt, brukes standardverdien for denne begrensningen. Dette er den samme tilordningen som sende i `null`, som er forskjellig fra sende i en tom streng for parameterverdien. I dette tilfellet en tom streng (&quot;&quot;) anses Ã¥ vÃ¦re verdien for den angitte parameteren.       Hvis et kodeeksempel demonstrerer GetSchema, kan du se <xref:System.Data.SqlClient.SqlConnection.GetSchema%2A>.</xref:System.Data.SqlClient.SqlConnection.GetSchema%2A>"
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);
    parameters:
    - id: collectionName
      type: System.String
      description: "Angir navnet pÃ¥ skjemaet til Ã¥ returnere."
    - id: restrictionValues
      type: System.String[]
      description: "Et sett med verdier for begrensning for det forespurte skjemaet."
    return:
      type: System.Data.DataTable
      description: "En <xref href=&quot;System.Data.DataTable&quot;> </xref> som inneholder skjemainformasjon."
  overload: System.Data.SqlClient.SqlConnection.GetSchema*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>collectionName</code>angis som null."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.InfoMessage
  id: InfoMessage
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: InfoMessage
  nameWithType: SqlConnection.InfoMessage
  fullName: System.Data.SqlClient.SqlConnection.InfoMessage
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Forekommer nÃ¥r [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] returnerer en advarsel eller informasjon melding."
  remarks: "Klienter vil behandle advarsler eller informasjonsmeldinger sendt av serveren mÃ¥ opprette en <xref:System.Data.SqlClient.SqlInfoMessageEventHandler>representant for Ã¥ lytte til denne hendelsen.</xref:System.Data.SqlClient.SqlInfoMessageEventHandler>       InfoMessage hendelsen oppstÃ¥r nÃ¥r en melding med en alvorsgrad 10 eller mindre returneres av [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]. Meldinger som har en alvorsgrad mellom 11 og 20 Ã¸ke det en feilen og meldinger som har en alvorsgrad over 20 Ã¥rsaker tilkoblingen lukkes. For mer informasjon om [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] feilnivÃ¥er, kan du se &quot;Database Engine feil Severities&quot; i [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online.       Hvis du vil ha mer informasjon og et eksempel, kan du se [tilkobling hendelser](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Data.SqlClient.SqlInfoMessageEventHandler InfoMessage;
    return:
      type: System.Data.SqlClient.SqlInfoMessageEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.Open
  id: Open
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: Open()
  nameWithType: SqlConnection.Open()
  fullName: System.Data.SqlClient.SqlConnection.Open()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Ãpner en databasetilkobling med egenskapsinnstillingene angitt av <xref:System.Data.SqlClient.SqlConnection.ConnectionString*>.</xref:System.Data.SqlClient.SqlConnection.ConnectionString*>"
  remarks: "Den <xref:System.Data.SqlClient.SqlConnection>trekker en Ã¥pen tilkobling fra tilkoblingsutvalget Hvis det er tilgjengelig.</xref:System.Data.SqlClient.SqlConnection> Hvis ikke, den oppretter en ny tilkobling til en forekomst av [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)].      > [!NOTE] > Hvis den <xref:System.Data.SqlClient.SqlConnection>gÃ¥r ut av omrÃ¥de, den ikke er lukket.</xref:System.Data.SqlClient.SqlConnection> Du mÃ¥ derfor eksplisitt lukke tilkoblingen ved Ã¥ kalle <xref:System.Data.SqlClient.SqlConnection.Close%2A>.</xref:System.Data.SqlClient.SqlConnection.Close%2A>      > [!NOTE] > Hvis du angir et portnummer enn 1433 nÃ¥r du prÃ¸ver Ã¥ koble til en forekomst av [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] og ved hjelp av en annen protokoll enn TCP/IP-metoden Open mislykkes. Hvis du vil angi et portnummer enn 1433 inkluderer &quot;server = maskinnavn, portnummeret&quot; i tilkoblingsstrengen, og bruk av TCP/IP-protokoll.      > [!NOTE] > Den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dataleverandÃ¸ren for [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] krever sikkerhetstillatelsen med &quot;tillater at kall til uforvaltede samlinger&quot; aktivert (<xref:System.Security.Permissions.SecurityPermission> med <xref:System.Security.Permissions.SecurityPermissionFlag>satt til `UnmanagedCode`) til Ã¥ Ã¥pne en <xref:System.Data.SqlClient.SqlConnection>med SQL-feilsÃ¸king er aktivert.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Security.Permissions.SecurityPermissionFlag> </xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, opens it, and displays some of its properties. The connection is automatically closed at the end of the `using` block.  \n  \n [!code-vb[Classic WebData SqlConnection.Open Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._18_1.vb)]\n [!code-cs[Classic WebData SqlConnection.Open Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._18_1.cs)]"
  syntax:
    content: public override void Open ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnection.Open*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Kan ikke Ã¥pne en tilkobling uten Ã¥ angi en datakilde eller serveren.       eller tilkoblingen er allerede Ã¥pen."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "En tilkobling det oppstod en feil oppstod under Ã¥pning av tilkoblingen. Hvis den <> </> *> egenskapen inneholder verdien 18487 eller 18488, betyr dette at det angitte passordet er utlÃ¸pt eller mÃ¥ tilbakestilles. Se den <> </> *> metode for mer informasjon.       Den <xref uid=&quot;langword_csharp_&lt;system.data.localdb&gt;&quot; name=&quot;&lt;system.data.localdb&gt;&quot; href=&quot;&quot;> </xref> kode i filen app.config er ugyldig eller ukjent elementer."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Det finnes to oppfÃ¸ringer med samme navn i den <xref uid=&quot;langword_csharp_&lt;localdbinstances&gt;&quot; name=&quot;&lt;localdbinstances&gt;&quot; href=&quot;&quot;> </xref> delen."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)
  id: OpenAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: OpenAsync(CancellationToken)
  nameWithType: SqlConnection.OpenAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "En asynkron versjon av <> </> *>, som Ã¥pner en databasetilkobling med egenskapsinnstillingene angitt av den <> </> *>. Avbryte tokenet kan brukes til Ã¥ be om at operasjonen forlates fÃ¸r tidsavbrudd for tilkoblingen.  Unntak overfÃ¸res via returnerte oppgaven. Hvis tilkoblingen tidsavbrudd tid det gÃ¥r uten har koblet deg, merkes returnerte oppgaven som mislyktes med et unntak. Implementeringen returnerer en aktivitet uten blokkerer kall trÃ¥den for bÃ¥de gruppert og ikke-gruppert tilkoblinger."
  remarks: "Etter Ã¥ OpenAsync, <xref:System.Data.SqlClient.SqlConnection.State%2A>mÃ¥ returnere <xref:System.Data.ConnectionState>fÃ¸r det returnerte <xref:System.Threading.Tasks.Task>er fullfÃ¸rt.</xref:System.Threading.Tasks.Task> </xref:System.Data.ConnectionState> </xref:System.Data.SqlClient.SqlConnection.State%2A> Hvis tilkoblingen ble fullfÃ¸rt, <xref:System.Data.SqlClient.SqlConnection.State%2A>mÃ¥ returnere <xref:System.Data.ConnectionState>.</xref:System.Data.ConnectionState> </xref:System.Data.SqlClient.SqlConnection.State%2A> Hvis tilkoblingen mislykkes, <xref:System.Data.SqlClient.SqlConnection.State%2A>mÃ¥ returnere <xref:System.Data.ConnectionState>.</xref:System.Data.ConnectionState> </xref:System.Data.SqlClient.SqlConnection.State%2A>       Et kall til <xref:System.Data.SqlClient.SqlConnection.Close%2A>vil prÃ¸ve Ã¥ avbryte eller lukke det tilsvarende OpenAsync-kallet.</xref:System.Data.SqlClient.SqlConnection.Close%2A>       For mer informasjon om asynkrone programming i den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dataleverandÃ¸ren for [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], se [asynkront Programming](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Threading.Tasks.Task OpenAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Instruksjonene for annullering."
    return:
      type: System.Threading.Tasks.Task
      description: "En oppgave som representerer den asynkrone operasjonen."
  overload: System.Data.SqlClient.SqlConnection.OpenAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Kaller OpenAsync flere ganger for samme forekomsten fÃ¸r fullfÃ¸ring av oppgaven.       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>er angitt i tilkoblingsstrengen.       En tilkobling er ikke tilgjengelige fra tilkoblingsutvalget fÃ¸r tilkoblingen Tidsavbrudd utlÃ¸pt."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Noen feil ble returnert av [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] som oppstod under Ã¥pning av tilkoblingen."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.PacketSize
  id: PacketSize
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: PacketSize
  nameWithType: SqlConnection.PacketSize
  fullName: System.Data.SqlClient.SqlConnection.PacketSize
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter stÃ¸rrelsen (i byte) pÃ¥ nettverkspakkene som brukes til Ã¥ kommunisere med en forekomst av [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]."
  remarks: "Hvis et program utfÃ¸rer massekopieringsoperasjoner, sender eller mottar mye text- eller image-data, pakkestÃ¸rrelse som er stÃ¸rre enn standard kan forbedre effektiviteten fordi den fÃ¸rer til fÃ¦rre nettverket lese og skrive operasjoner. Hvis et program sender og mottar litt informasjon, kan du angi pakkestÃ¸rrelsen til 512 byte (av pakkestÃ¸rrelse verdien i den <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>), som er tilstrekkelig for de fleste dataoverfÃ¸ring operasjoner.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> Standard pakkestÃ¸rrelse er best for de fleste programmer.       PacketSize kan vÃ¦re en verdi mellom 512 og 32767 byte. Hvis verdien er utenfor dette omrÃ¥det, genereres det et unntak.       Hvis du setter standardverdien til et tall som er stÃ¸rre enn 8000 vil fÃ¸re til at pakkene til bruk med flere sider tildeler i forekomsten av [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] i stedet for mye mer effektiv SinglePage-tildeler redusere den totale skalerbarheten til den [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]. For mer informasjon om hvordan [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] bruker minnet, se [minnearkitektur](http://go.microsoft.com/fwlink/?LinkId=143705) i [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, including setting the `Packet Size` to 512 in the connection string. It displays the PacketSize and <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> properties in the console window.  \n  \n [!code-vb[Classic WebData SqlConnection.PacketSize Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._63_1.vb)]\n [!code-cs[Classic WebData SqlConnection.PacketSize Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._63_1.cs)]"
  syntax:
    content: public int PacketSize { get; }
    return:
      type: System.Int32
      description: "StÃ¸rrelsen (i byte) pÃ¥ nettverkspakker. Standardverdien er 8000."
  overload: System.Data.SqlClient.SqlConnection.PacketSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})
  id: RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: RegisterColumnEncryptionKeyStoreProviders(IDictionary<String,SqlColumnEncryptionKeyStoreProvider>)
  nameWithType: SqlConnection.RegisterColumnEncryptionKeyStoreProviders(IDictionary<String,SqlColumnEncryptionKeyStoreProvider>)
  fullName: System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(IDictionary<String,SqlColumnEncryptionKeyStoreProvider>)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Registrerer kolonnen kryptering key store leverandÃ¸rer."
  syntax:
    content: public static void RegisterColumnEncryptionKeyStoreProviders (System.Collections.Generic.IDictionary<string,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider> customProviders);
    parameters:
    - id: customProviders
      type: System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider}
      description: "De egendefinerte tjenestene"
  overload: System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ResetStatistics
  id: ResetStatistics
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ResetStatistics()
  nameWithType: SqlConnection.ResetStatistics()
  fullName: System.Data.SqlClient.SqlConnection.ResetStatistics()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hvis innhenting av statistikk er aktivert, tilbakestilles alle verdier til null."
  remarks: "Hvis statistikk innsamling ikke er aktivert, og denne metoden, oppstÃ¥r uten feil."
  syntax:
    content: public void ResetStatistics ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnection.ResetStatistics*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.RetrieveStatistics
  id: RetrieveStatistics
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: RetrieveStatistics()
  nameWithType: SqlConnection.RetrieveStatistics()
  fullName: System.Data.SqlClient.SqlConnection.RetrieveStatistics()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Returnerer en navnet verdi-par samling av statistikk pÃ¥ punktet i gang metoden kalles."
  remarks: "NÃ¥r denne metoden kalles, er verdiene som er hentet de pÃ¥ gjeldende punkt i tide. Hvis du fortsetter ved hjelp av tilkoblingen, er verdiene feil. Du mÃ¥ kjÃ¸re pÃ¥ nytt metode for Ã¥ fÃ¥ de nyeste verdiene."
  syntax:
    content: public System.Collections.IDictionary RetrieveStatistics ();
    parameters: []
    return:
      type: System.Collections.IDictionary
      description: "Returnerer en referanse av typen <xref:System.Collections.IDictionary>for <xref:System.Collections.DictionaryEntry>elementer.</xref:System.Collections.DictionaryEntry> </xref:System.Collections.IDictionary>"
  overload: System.Data.SqlClient.SqlConnection.RetrieveStatistics*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ServerVersion
  id: ServerVersion
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ServerVersion
  nameWithType: SqlConnection.ServerVersion
  fullName: System.Data.SqlClient.SqlConnection.ServerVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter en streng som inneholder versjonen av forekomsten av [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] til klienten er tilkoblet."
  remarks: "Versjonen er i formatet *##. ##. ###*, der de fÃ¸rste to sifrene er hoved, de neste to sifrene er den underordnede versjonen, og de fire siste sifrene er versjonen. Er en streng i formatet *major.minor.build*, der overordnede og underordnede nÃ¸yaktig to sifre og kompilering er nÃ¸yaktig fire sifre.       ServerVersion ble kalt mens returnerte oppgaven ikke ble fullfÃ¸rt, og tilkoblingen ble ikke Ã¥pnet etter et kall til <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A>.</xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and displays the ServerVersion property.  \n  \n [!code-vb[Classic WebData ISqlConnection.ServerVersion Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._30_1.vb)]\n [!code-cs[Classic WebData ISqlConnection.ServerVersion Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._30_1.cs)]"
  syntax:
    content: public override string ServerVersion { get; }
    return:
      type: System.String
      description: "Versjonen av forekomsten av [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]."
  overload: System.Data.SqlClient.SqlConnection.ServerVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Tilkoblingen er lukket.       ServerVersion ble kalt mens returnerte oppgaven ikke ble fullfÃ¸rt, og tilkoblingen ble ikke Ã¥pnet etter et kall til <xref:System.Data.SqlClient.SqlConnection.OpenAsync*>.</xref:System.Data.SqlClient.SqlConnection.OpenAsync*>"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.State
  id: State
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: State
  nameWithType: SqlConnection.State
  fullName: System.Data.SqlClient.SqlConnection.State
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Angir tilstanden til den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> under siste nettverket operasjonen utfÃ¸res pÃ¥ tilkoblingen."
  remarks: "Returnerer en <xref:System.Data.ConnectionState>opplisting som angir statusen for <xref:System.Data.SqlClient.SqlConnection>.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.ConnectionState> Lukke og Ã¥pne tilkoblingen vil oppdatere verdien for tilstand."
  syntax:
    content: public override System.Data.ConnectionState State { get; }
    return:
      type: System.Data.ConnectionState
      description: "En <xref href=&quot;System.Data.ConnectionState&quot;> </xref> opplisting."
  overload: System.Data.SqlClient.SqlConnection.State*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.StatisticsEnabled
  id: StatisticsEnabled
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: StatisticsEnabled
  nameWithType: SqlConnection.StatisticsEnabled
  fullName: System.Data.SqlClient.SqlConnection.StatisticsEnabled
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hvis du velger <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>og aktiverer statistikk innsamling for gjeldende tilkobling."
  remarks: "Aktivering av statistikk innsamlingen har underordnede, men mÃ¥lbare innvirking pÃ¥ ytelsen, og derfor kan aktiveres nÃ¥r det kreves."
  syntax:
    content: public bool StatisticsEnabled { get; set; }
    return:
      type: System.Boolean
      description: "Returnerer <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Hvis innhenting av statistikk er aktivert, ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>er standard."
  overload: System.Data.SqlClient.SqlConnection.StatisticsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: SqlConnection.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlConnection.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Oppretter et nytt objekt som er en kopi av den gjeldende forekomsten."
  remarks: "Dette medlemmet er implementering eksplisitt grensesnitt medlem. Den kan brukes bare nÃ¥r den <xref:System.Data.SqlClient.SqlConnection>forekomsten endres til en <xref:System.ICloneable>grensesnittet.</xref:System.ICloneable> </xref:System.Data.SqlClient.SqlConnection>       Dette medlemmet stÃ¸ttes bare av .NET Compact Framework."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Et nytt objekt som er en kopi av denne forekomsten."
  overload: System.Data.SqlClient.SqlConnection.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.WorkstationId
  id: WorkstationId
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: WorkstationId
  nameWithType: SqlConnection.WorkstationId
  fullName: System.Data.SqlClient.SqlConnection.WorkstationId
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter en streng som identifiserer database-klienten."
  remarks: "Strengen inneholder vanligvis Nettverksnavnet pÃ¥ klienten. Egenskapen WorkstationId samsvarer med den `Workstation ID` tilkoblingsstreng."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and displays the WorkstationId property.  \n  \n [!code-vb[Classic WebData SqlConnection.WorkstationId Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._7_1.vb)]\n [!code-cs[Classic WebData SqlConnection.WorkstationId Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._7_1.cs)]"
  syntax:
    content: public string WorkstationId { get; }
    return:
      type: System.String
      description: "En streng som identifiserer database-klienten. Hvis ikke angitt, navnet pÃ¥ klientdatamaskinen. Hvis ingen er angitt, er verdien som er en tom streng."
  overload: System.Data.SqlClient.SqlConnection.WorkstationId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.Common.DbConnection
- uid: System.Data.SqlClient.SqlException
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlException
  nameWithType: SqlException
  fullName: System.Data.SqlClient.SqlException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Data.SqlClient.SqlConnection.#ctor
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: SqlConnection()
  nameWithType: SqlConnection.SqlConnection()
  fullName: System.Data.SqlClient.SqlConnection.SqlConnection()
- uid: System.Data.SqlClient.SqlConnection.#ctor(System.String)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: SqlConnection(String)
  nameWithType: SqlConnection.SqlConnection(String)
  fullName: System.Data.SqlClient.SqlConnection.SqlConnection(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: SqlConnection(String,SqlCredential)
  nameWithType: SqlConnection.SqlConnection(String,SqlCredential)
  fullName: System.Data.SqlClient.SqlConnection.SqlConnection(String,SqlCredential)
- uid: System.Data.SqlClient.SqlCredential
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCredential
  nameWithType: SqlCredential
  fullName: System.Data.SqlClient.SqlCredential
- uid: System.Data.SqlClient.SqlConnection.AccessToken
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: AccessToken
  nameWithType: SqlConnection.AccessToken
  fullName: System.Data.SqlClient.SqlConnection.AccessToken
- uid: System.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: SqlConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.SqlClient.SqlConnection.BeginDbTransaction(IsolationLevel)
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: SqlConnection.BeginTransaction()
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction()
- uid: System.Data.SqlClient.SqlTransaction
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlTransaction
  nameWithType: SqlTransaction
  fullName: System.Data.SqlClient.SqlTransaction
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  nameWithType: SqlConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginTransaction(String)
  nameWithType: SqlConnection.BeginTransaction(String)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(String)
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel,String)
  nameWithType: SqlConnection.BeginTransaction(IsolationLevel,String)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(IsolationLevel,String)
- uid: System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ChangeDatabase(String)
  nameWithType: SqlConnection.ChangeDatabase(String)
  fullName: System.Data.SqlClient.SqlConnection.ChangeDatabase(String)
- uid: System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ChangePassword(String,String)
  nameWithType: SqlConnection.ChangePassword(String,String)
  fullName: System.Data.SqlClient.SqlConnection.ChangePassword(String,String)
- uid: System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ChangePassword(String,SqlCredential,SecureString)
  nameWithType: SqlConnection.ChangePassword(String,SqlCredential,SecureString)
  fullName: System.Data.SqlClient.SqlConnection.ChangePassword(String,SqlCredential,SecureString)
- uid: System.Security.SecureString
  parent: System.Security
  isExternal: false
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: System.Data.SqlClient.SqlConnection.ClearAllPools
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ClearAllPools()
  nameWithType: SqlConnection.ClearAllPools()
  fullName: System.Data.SqlClient.SqlConnection.ClearAllPools()
- uid: System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ClearPool(SqlConnection)
  nameWithType: SqlConnection.ClearPool(SqlConnection)
  fullName: System.Data.SqlClient.SqlConnection.ClearPool(SqlConnection)
- uid: System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnection
  nameWithType: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
- uid: System.Data.SqlClient.SqlConnection.ClientConnectionId
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ClientConnectionId
  nameWithType: SqlConnection.ClientConnectionId
  fullName: System.Data.SqlClient.SqlConnection.ClientConnectionId
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.SqlClient.SqlConnection.Close
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Close()
  nameWithType: SqlConnection.Close()
  fullName: System.Data.SqlClient.SqlConnection.Close()
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ColumnEncryptionKeyCacheTtl
  nameWithType: SqlConnection.ColumnEncryptionKeyCacheTtl
  fullName: System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ColumnEncryptionQueryMetadataCacheEnabled
  nameWithType: SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
  fullName: System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ColumnEncryptionTrustedMasterKeyPaths
  nameWithType: SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
  fullName: System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
- uid: System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IList{System.String}}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,IList<String>>
  nameWithType: IDictionary<String,IList<String>>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Collections.Generic.IList<System.String>>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Collections.Generic.IList<System.String>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlConnection.ConnectionString
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ConnectionString
  nameWithType: SqlConnection.ConnectionString
  fullName: System.Data.SqlClient.SqlConnection.ConnectionString
- uid: System.Data.SqlClient.SqlConnection.ConnectionTimeout
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: SqlConnection.ConnectionTimeout
  fullName: System.Data.SqlClient.SqlConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlConnection.CreateCommand
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: CreateCommand()
  nameWithType: SqlConnection.CreateCommand()
  fullName: System.Data.SqlClient.SqlConnection.CreateCommand()
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: System.Data.SqlClient.SqlConnection.CreateDbCommand
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: CreateDbCommand()
  nameWithType: SqlConnection.CreateDbCommand()
  fullName: System.Data.SqlClient.SqlConnection.CreateDbCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.SqlClient.SqlConnection.Credential
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Credential
  nameWithType: SqlConnection.Credential
  fullName: System.Data.SqlClient.SqlConnection.Credential
- uid: System.Data.SqlClient.SqlConnection.Database
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Database
  nameWithType: SqlConnection.Database
  fullName: System.Data.SqlClient.SqlConnection.Database
- uid: System.Data.SqlClient.SqlConnection.DataSource
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: DataSource
  nameWithType: SqlConnection.DataSource
  fullName: System.Data.SqlClient.SqlConnection.DataSource
- uid: System.Data.SqlClient.SqlConnection.DbProviderFactory
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: DbProviderFactory
  nameWithType: SqlConnection.DbProviderFactory
  fullName: System.Data.SqlClient.SqlConnection.DbProviderFactory
- uid: System.Data.Common.DbProviderFactory
  parent: System.Data.Common
  isExternal: false
  name: DbProviderFactory
  nameWithType: DbProviderFactory
  fullName: System.Data.Common.DbProviderFactory
- uid: System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SqlConnection.Dispose(Boolean)
  fullName: System.Data.SqlClient.SqlConnection.Dispose(Boolean)
- uid: System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: SqlConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(ITransaction)
- uid: System.EnterpriseServices.ITransaction
  parent: System.EnterpriseServices
  isExternal: false
  name: ITransaction
  nameWithType: ITransaction
  fullName: System.EnterpriseServices.ITransaction
- uid: System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: EnlistTransaction(Transaction)
  nameWithType: SqlConnection.EnlistTransaction(Transaction)
  fullName: System.Data.SqlClient.SqlConnection.EnlistTransaction(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: FireInfoMessageEventOnUserErrors
  nameWithType: SqlConnection.FireInfoMessageEventOnUserErrors
  fullName: System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors
- uid: System.Data.SqlClient.SqlConnection.GetSchema
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: GetSchema()
  nameWithType: SqlConnection.GetSchema()
  fullName: System.Data.SqlClient.SqlConnection.GetSchema()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.SqlClient.SqlConnection.GetSchema(System.String)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: GetSchema(String)
  nameWithType: SqlConnection.GetSchema(String)
  fullName: System.Data.SqlClient.SqlConnection.GetSchema(String)
- uid: System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: GetSchema(String,String[])
  nameWithType: SqlConnection.GetSchema(String,String[])
  fullName: System.Data.SqlClient.SqlConnection.GetSchema(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.SqlClient.SqlConnection.InfoMessage
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: InfoMessage
  nameWithType: SqlConnection.InfoMessage
  fullName: System.Data.SqlClient.SqlConnection.InfoMessage
- uid: System.Data.SqlClient.SqlInfoMessageEventHandler
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlInfoMessageEventHandler
  nameWithType: SqlInfoMessageEventHandler
  fullName: System.Data.SqlClient.SqlInfoMessageEventHandler
- uid: System.Data.SqlClient.SqlConnection.Open
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Open()
  nameWithType: SqlConnection.Open()
  fullName: System.Data.SqlClient.SqlConnection.Open()
- uid: System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: OpenAsync(CancellationToken)
  nameWithType: SqlConnection.OpenAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.SqlClient.SqlConnection.PacketSize
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: PacketSize
  nameWithType: SqlConnection.PacketSize
  fullName: System.Data.SqlClient.SqlConnection.PacketSize
- uid: System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: RegisterColumnEncryptionKeyStoreProviders(IDictionary<String,SqlColumnEncryptionKeyStoreProvider>)
  nameWithType: SqlConnection.RegisterColumnEncryptionKeyStoreProviders(IDictionary<String,SqlColumnEncryptionKeyStoreProvider>)
  fullName: System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(IDictionary<String,SqlColumnEncryptionKeyStoreProvider>)
- uid: System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,SqlColumnEncryptionKeyStoreProvider>
  nameWithType: IDictionary<String,SqlColumnEncryptionKeyStoreProvider>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider
    name: SqlColumnEncryptionKeyStoreProvider
    nameWithType: SqlColumnEncryptionKeyStoreProvider
    fullName: SqlColumnEncryptionKeyStoreProvider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlConnection.ResetStatistics
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ResetStatistics()
  nameWithType: SqlConnection.ResetStatistics()
  fullName: System.Data.SqlClient.SqlConnection.ResetStatistics()
- uid: System.Data.SqlClient.SqlConnection.RetrieveStatistics
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: RetrieveStatistics()
  nameWithType: SqlConnection.RetrieveStatistics()
  fullName: System.Data.SqlClient.SqlConnection.RetrieveStatistics()
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Data.SqlClient.SqlConnection.ServerVersion
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ServerVersion
  nameWithType: SqlConnection.ServerVersion
  fullName: System.Data.SqlClient.SqlConnection.ServerVersion
- uid: System.Data.SqlClient.SqlConnection.State
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: State
  nameWithType: SqlConnection.State
  fullName: System.Data.SqlClient.SqlConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.SqlClient.SqlConnection.StatisticsEnabled
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: StatisticsEnabled
  nameWithType: SqlConnection.StatisticsEnabled
  fullName: System.Data.SqlClient.SqlConnection.StatisticsEnabled
- uid: System.Data.SqlClient.SqlConnection.System#ICloneable#Clone
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: SqlConnection.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlConnection.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlClient.SqlConnection.WorkstationId
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: WorkstationId
  nameWithType: SqlConnection.WorkstationId
  fullName: System.Data.SqlClient.SqlConnection.WorkstationId
- uid: System.Data.SqlClient.SqlConnection.#ctor*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: SqlConnection
  nameWithType: SqlConnection.SqlConnection
- uid: System.Data.SqlClient.SqlConnection.AccessToken*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: AccessToken
  nameWithType: SqlConnection.AccessToken
- uid: System.Data.SqlClient.SqlConnection.BeginDbTransaction*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginDbTransaction
  nameWithType: SqlConnection.BeginDbTransaction
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginTransaction
  nameWithType: SqlConnection.BeginTransaction
- uid: System.Data.SqlClient.SqlConnection.ChangeDatabase*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ChangeDatabase
  nameWithType: SqlConnection.ChangeDatabase
- uid: System.Data.SqlClient.SqlConnection.ChangePassword*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ChangePassword
  nameWithType: SqlConnection.ChangePassword
- uid: System.Data.SqlClient.SqlConnection.ClearAllPools*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ClearAllPools
  nameWithType: SqlConnection.ClearAllPools
- uid: System.Data.SqlClient.SqlConnection.ClearPool*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ClearPool
  nameWithType: SqlConnection.ClearPool
- uid: System.Data.SqlClient.SqlConnection.ClientConnectionId*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ClientConnectionId
  nameWithType: SqlConnection.ClientConnectionId
- uid: System.Data.SqlClient.SqlConnection.Close*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Close
  nameWithType: SqlConnection.Close
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ColumnEncryptionKeyCacheTtl
  nameWithType: SqlConnection.ColumnEncryptionKeyCacheTtl
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ColumnEncryptionQueryMetadataCacheEnabled
  nameWithType: SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ColumnEncryptionTrustedMasterKeyPaths
  nameWithType: SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
- uid: System.Data.SqlClient.SqlConnection.ConnectionString*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ConnectionString
  nameWithType: SqlConnection.ConnectionString
- uid: System.Data.SqlClient.SqlConnection.ConnectionTimeout*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: SqlConnection.ConnectionTimeout
- uid: System.Data.SqlClient.SqlConnection.CreateCommand*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: CreateCommand
  nameWithType: SqlConnection.CreateCommand
- uid: System.Data.SqlClient.SqlConnection.CreateDbCommand*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: CreateDbCommand
  nameWithType: SqlConnection.CreateDbCommand
- uid: System.Data.SqlClient.SqlConnection.Credential*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Credential
  nameWithType: SqlConnection.Credential
- uid: System.Data.SqlClient.SqlConnection.Database*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Database
  nameWithType: SqlConnection.Database
- uid: System.Data.SqlClient.SqlConnection.DataSource*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: DataSource
  nameWithType: SqlConnection.DataSource
- uid: System.Data.SqlClient.SqlConnection.DbProviderFactory*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: DbProviderFactory
  nameWithType: SqlConnection.DbProviderFactory
- uid: System.Data.SqlClient.SqlConnection.Dispose*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Dispose
  nameWithType: SqlConnection.Dispose
- uid: System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: EnlistDistributedTransaction
  nameWithType: SqlConnection.EnlistDistributedTransaction
- uid: System.Data.SqlClient.SqlConnection.EnlistTransaction*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: EnlistTransaction
  nameWithType: SqlConnection.EnlistTransaction
- uid: System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: FireInfoMessageEventOnUserErrors
  nameWithType: SqlConnection.FireInfoMessageEventOnUserErrors
- uid: System.Data.SqlClient.SqlConnection.GetSchema*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: GetSchema
  nameWithType: SqlConnection.GetSchema
- uid: System.Data.SqlClient.SqlConnection.Open*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Open
  nameWithType: SqlConnection.Open
- uid: System.Data.SqlClient.SqlConnection.OpenAsync*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: OpenAsync
  nameWithType: SqlConnection.OpenAsync
- uid: System.Data.SqlClient.SqlConnection.PacketSize*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: PacketSize
  nameWithType: SqlConnection.PacketSize
- uid: System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: RegisterColumnEncryptionKeyStoreProviders
  nameWithType: SqlConnection.RegisterColumnEncryptionKeyStoreProviders
- uid: System.Data.SqlClient.SqlConnection.ResetStatistics*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ResetStatistics
  nameWithType: SqlConnection.ResetStatistics
- uid: System.Data.SqlClient.SqlConnection.RetrieveStatistics*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: RetrieveStatistics
  nameWithType: SqlConnection.RetrieveStatistics
- uid: System.Data.SqlClient.SqlConnection.ServerVersion*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ServerVersion
  nameWithType: SqlConnection.ServerVersion
- uid: System.Data.SqlClient.SqlConnection.State*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: State
  nameWithType: SqlConnection.State
- uid: System.Data.SqlClient.SqlConnection.StatisticsEnabled*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: StatisticsEnabled
  nameWithType: SqlConnection.StatisticsEnabled
- uid: System.Data.SqlClient.SqlConnection.System#ICloneable#Clone*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: SqlConnection.System.ICloneable.Clone
- uid: System.Data.SqlClient.SqlConnection.WorkstationId*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: WorkstationId
  nameWithType: SqlConnection.WorkstationId
