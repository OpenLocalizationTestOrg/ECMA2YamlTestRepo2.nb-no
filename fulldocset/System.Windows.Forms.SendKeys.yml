### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.SendKeys
  id: SendKeys
  children:
  - System.Windows.Forms.SendKeys.Flush
  - System.Windows.Forms.SendKeys.Send(System.String)
  - System.Windows.Forms.SendKeys.SendWait(System.String)
  langs:
  - csharp
  name: SendKeys
  nameWithType: SendKeys
  fullName: System.Windows.Forms.SendKeys
  type: Class
  summary: "Inneholder metoder for å sende tastetrykk til en applikasjon."
  remarks: "Bruk SendTastetrykk å sende tastetrykk tastetrykk kombinasjoner aktive programmet. Denne klassen kan ikke startes. For å sende et tastetrykk til en klasse og Fortsett arbeidet av programmet umiddelbart, kan du bruke <xref:System.Windows.Forms.SendKeys.Send%2A>.</xref:System.Windows.Forms.SendKeys.Send%2A> Hvis du vil vente noen av prosessene startes av tastetrykket, kan du bruke <xref:System.Windows.Forms.SendKeys.SendWait%2A>.</xref:System.Windows.Forms.SendKeys.SendWait%2A>       Hver nøkkel representeres av ett eller flere tegn. Hvis du vil angi en enkelt tegnet, kan du bruke selve tegnet. For eksempel for å representere bokstaven A, sender du i strengen &quot;A&quot; til metoden. For å representere mer enn ett tegn, legge til hvert ekstra tegn det foregående den. For å representere bokstavene angi A B og C, parameteren &quot;ABC&quot;.       Har egne definisjoner til SendTastetrykk plusstegnet (+), synlig (^), prosent Logg (%), tilde (~) og parentes (). Hvis du vil angi ett av disse tegnene, omslutter du den i klammeparenteser ({}). Hvis du vil angi plusstegnet, kan du for eksempel bruke &quot;{+}&quot;. Angi klammeparentes tegn, bruk &quot;{{}&quot; og &quot;{}}&quot;. Hakeparenteser ([]) har ingen spesiell betydning for SendTastetrykk, men du må sette dem i klammeparenteser. Hakeparenteser har en spesialbetydning som kan være betydelige når (dynamisk datautveksling) forekommer i andre programmer.      > [!CAUTION] > Hvis programmet er ment for internasjonal bruk med en rekke tastatur, bruk av <xref:System.Windows.Forms.SendKeys.Send%2A>kan føre til uventede resultater og bør unngås.</xref:System.Windows.Forms.SendKeys.Send%2A>       Bruk kodene i tabellen nedenfor for å angi tegn som ikke vises når du trykker en nøkkel, for eksempel angi eller kategorien og nøkler som representerer handlinger i stedet for tegn.      | Nøkkelen | Kode |   |---------|----------|   | TILBAKE | {TILBAKE}, {BS} eller {BKSP} |   | SIDESKIFT | {SIDESKIFT} |   | CAPSLOCK | {CAPSLOCK} |   | DEL eller slette | {SLETTE} eller {DEL} |   | PIL NED | {NEDOVER} |   | END | {SLUTTEN} |   | ANGI | {Angi} eller ~ |   | ESC | {ESC} |   | HJELP | {HJELPE} |   | HJEM | {HOME} |   | Moduler eller INSERT | {Sette inn} eller {Moduler} |   | PIL VENSTRE | {LEFT} |   | ANTALL LÅS | {NUMLOCK} |   | SIDEN NED | {PGDN} |   | SIDEN OPP | {PGUP} |   | SKRIV UT SKJERMEN | {PRTSC} (reservert for fremtidig bruk) |   | PIL | {HØYRE} |   | SCROLL LOCK | {SCROLLLOCK} |   | KATEGORIEN | {KATEGORIEN} |   | PIL OPP | {OPP} |   | F1 | {F1} |   | F2 | {F2} |   | F3 | {F3} |   | F4 | {F4} |   | F5 | {F5} |   | F6 | {F6} |   | F7 | {F7} |   | F8 | {F8} |   | F9 | {F9} |   | F10 | {F10} |   | F11 | {F11} |   | F12 | {F12} |   | F13 | {F13} |   | F14 | {F14} |   | F15 | {F15} |   | F16 | {F16} |   | Legg til tastaturet | {LEGGE TIL} |   | Tastaturet trekke | {TREKKE} |   | Tastaturet for å multiplisere | {MULTIPLISERE} |   | Tastaturet deling | {DIVIDERE} |       Komme foran nøkkelen koden med ett eller flere av følgende koder for å angi nøkler kombineres med en kombinasjon av SKIFT, CTRL- og ALT nøkler.      | Nøkkelen | Kode |   |---------|----------|   | SKIFT | + |   | CTRL | ^ |   | ALT | % |       Hvis du vil angi at en kombinasjon av SKIFT, CTRL og ALT skal holdes nede mens flere nøkler trykkes, kan du angi koden for disse nøklene i parentes. Hvis du vil angi for å holde nede SKIFT mens E og C trykkes, kan du for eksempel bruke &quot;+ (EU)&quot;. Hvis du vil angi for å holde nede SKIFT mens E trykkes, etterfulgt av C uten SKIFT, kan du bruke &quot;+ EU&quot;.       For å angi identiske nøkler, kan du bruke formatet {nøkkel number}. Du må sette et mellomrom mellom nøkkel og tall. {LEFT 42} betyr for eksempel Trykk Pil venstre 42 ganger. {h 10} betyr Trykk H 10 ganger.      > [!NOTE] > Fordi det finnes ingen administrerte metode for å aktivere et annet program, du kan bruke denne klassen i gjeldende program eller bruke Windows-metoder, for eksempel `FindWindow` og `SetForegroundWindow`, til å fremtvinge fokus på andre programmer.      > [!NOTE] > For SendTastetrykk klassen er oppdatert for .NET Framework 3.0 å aktivere bruk i programmer som kjører på Windows Vista. Bedre sikkerhet for Windows Vista (kjent som Brukerkontokontroll eller Brukerkontokontroll) hindrer at tidligere implementeringen i å fungere som forventet.   >> SendTastetrykk klassen som er utsatt for tidsberegningsproblemer, som har hatt noen utviklere å omgå. Oppdaterte implementeringen er fortsatt mottakelig for tidsberegningsproblemer, men er litt raskere og kan gjøre endringer i løsningene. Klassen SendTastetrykk prøver å bruke den forrige implementeringen først, og hvis dette mislykkes, bruker du den nye implementeringen. Resultatet oppføre SendKeys-klassen forskjellig på ulike operativsystemer. I tillegg når SendKeys-klassen bruker den nye implementeringen av <xref:System.Windows.Forms.SendKeys.SendWait%2A>metoden venter ikke på meldinger som skal behandles når de sendes til en annen prosess.</xref:System.Windows.Forms.SendKeys.SendWait%2A>   >> Hvis programmet er avhengig av konsekvent virkemåte uavhengig av operativsystemet, kan du tvinge SendTastetrykk klassen for å bruke den nye implementeringen ved å legge til følgende applikasjonsinnstilling app.config-filen.   >> `<appSettings>` >> `<add key=&quot;SendKeys&quot; value=&quot;SendInput&quot;/>` >> `</appSettings>` >> Tvinge SendTastetrykk klassen for å bruke den forrige implementeringen, bruker verdien `&quot;JournalHook&quot;` i stedet."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.SendKeys.Send%2A> method. To run the example, paste the following code in a form called Form1 containing a button called Button1. Ensure the click events are associated with their event-handling methods in this example. The button control's <xref:System.Windows.Forms.Control.TabIndex%2A> property should be set to 0. When the example is running, double-click the form to trigger the button's click event.  \n  \n [!code-cs[System.Windows.Forms.SendKeys#1](~/add/codesnippet/csharp/t-system.windows.forms.s_16_1.cs)]\n [!code-cpp[System.Windows.Forms.SendKeys#1](~/add/codesnippet/cpp/t-system.windows.forms.s_16_1.cpp)]\n [!code-vb[System.Windows.Forms.SendKeys#1](~/add/codesnippet/visualbasic/t-system.windows.forms.s_16_1.vb)]"
  syntax:
    content: public class SendKeys
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.SendKeys.Flush
  id: Flush
  parent: System.Windows.Forms.SendKeys
  langs:
  - csharp
  name: Flush()
  nameWithType: SendKeys.Flush()
  fullName: System.Windows.Forms.SendKeys.Flush()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Behandler alle Windows-meldinger som meldingskøen."
  remarks: "Bruk tømming venter programmet til å behandle tastetrykk og andre operativsystemet meldinger i meldingskøen. Dette er det samme kaller <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=fullName>før det finnes ingen flere nøkler til å behandle.</xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=fullName>      > [!NOTE] > Fordi det finnes ingen administrerte metode for å aktivere et annet program, du kan bruke denne klassen i gjeldende program eller bruke Windows-metoder, for eksempel `FindWindow` og `SetForegroundWindow`, til å fremtvinge fokus på andre programmer."
  syntax:
    content: public static void Flush ();
    parameters: []
  overload: System.Windows.Forms.SendKeys.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.SendKeys.Send(System.String)
  id: Send(System.String)
  parent: System.Windows.Forms.SendKeys
  langs:
  - csharp
  name: Send(String)
  nameWithType: SendKeys.Send(String)
  fullName: System.Windows.Forms.SendKeys.Send(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Sender tastetrykk til det aktive programmet."
  remarks: "Hver nøkkel representeres av ett eller flere tegn. Hvis du vil angi en enkelt tegnet, kan du bruke selve tegnet. For eksempel for å representere bokstaven A, sender du i strengen &quot;A&quot; til metoden. For å representere mer enn ett tegn, legge til hvert ekstra tegn det foregående den. For å representere bokstavene angi A B og C, parameteren &quot;ABC&quot;.       Har egne definisjoner til <xref:System.Windows.Forms.SendKeys>.</xref:System.Windows.Forms.SendKeys> plusstegnet (+), synlig (^), prosent Logg (%), tilde (~) og parentes) Hvis du vil angi ett av disse tegnene, omslutter du den i klammeparenteser ({}). Hvis du vil angi plusstegnet, kan du for eksempel bruke &quot;{+}&quot;. Angi klammeparentes tegn, bruk &quot;{{}&quot; og &quot;{}}&quot;. Hakeparenteser ([]) har ingen spesiell betydning for <xref:System.Windows.Forms.SendKeys>, men du må sette dem i klammeparenteser.</xref:System.Windows.Forms.SendKeys> Hakeparenteser har en spesialbetydning som kan være betydelige når (dynamisk datautveksling) forekommer i andre programmer.      > [!CAUTION] > Hvis programmet er ment for internasjonal bruk med en rekke tastatur, bruk av Send kan føre til uventede resultater og bør unngås.       Bruk kodene i tabellen nedenfor for å angi tegn som ikke vises når du trykker en nøkkel, for eksempel angi eller kategorien og nøkler som representerer handlinger i stedet for tegn.      | Nøkkelen | Kode |   |---------|----------|   | TILBAKE | {TILBAKE}, {BS} eller {BKSP} |   | SIDESKIFT | {SIDESKIFT} |   | CAPSLOCK | {CAPSLOCK} |   | DEL eller slette | {SLETTE} eller {DEL} |   | PIL NED | {NEDOVER} |   | END | {SLUTTEN} |   | ANGI | {Angi} eller ~ |   | ESC | {ESC} |   | HJELP | {HJELPE} |   | HJEM | {HOME} |   | Moduler eller INSERT | {Sette inn} eller {Moduler} |   | PIL VENSTRE | {LEFT} |   | ANTALL LÅS | {NUMLOCK} |   | SIDEN NED | {PGDN} |   | SIDEN OPP | {PGUP} |   | SKRIV UT SKJERMEN | {PRTSC} (reservert for fremtidig bruk) |   | PIL | {HØYRE} |   | SCROLL LOCK | {SCROLLLOCK} |   | KATEGORIEN | {KATEGORIEN} |   | PIL OPP | {OPP} |   | F1 | {F1} |   | F2 | {F2} |   | F3 | {F3} |   | F4 | {F4} |   | F5 | {F5} |   | F6 | {F6} |   | F7 | {F7} |   | F8 | {F8} |   | F9 | {F9} |   | F10 | {F10} |   | F11 | {F11} |   | F12 | {F12} |   | F13 | {F13} |   | F14 | {F14} |   | F15 | {F15} |   | F16 | {F16} |   | Legg til tastaturet | {LEGGE TIL} |   | Tastaturet trekke | {TREKKE} |   | Tastaturet for å multiplisere | {MULTIPLISERE} |   | Tastaturet deling | {DIVIDERE} |       Komme foran nøkkelen koden med ett eller flere av følgende koder for å angi nøkler kombineres med en kombinasjon av SKIFT, CTRL- og ALT nøkler.      | Nøkkelen | Kode |   |---------|----------|   | SKIFT | + |   | CTRL | ^ |   | ALT | % |       Hvis du vil angi at en kombinasjon av SKIFT, CTRL og ALT skal holdes nede mens flere nøkler trykkes, kan du angi koden for disse nøklene i parentes. Hvis du vil angi for å holde nede SKIFT mens E og C trykkes, kan du for eksempel bruke &quot;+ (EU)&quot;. Hvis du vil angi for å holde nede SKIFT mens E trykkes, etterfulgt av C uten SKIFT, kan du bruke &quot;+ EU&quot;.       For å angi identiske nøkler, kan du bruke formatet {nøkkel number}. Du må sette et mellomrom mellom nøkkel og tall. {LEFT 42} betyr for eksempel Trykk Pil venstre 42 ganger. {h 10} betyr Trykk H 10 ganger.      > [!NOTE] > Fordi det finnes ingen administrerte metode for å aktivere et annet program, du kan bruke denne klassen i gjeldende program eller bruke Windows-metoder, for eksempel `FindWindow` og `SetForegroundWindow`, til å fremtvinge fokus på andre programmer.      > [!NOTE] > Den <xref:System.Windows.Forms.SendKeys>klassen er oppdatert for .NET Framework 3.0 å aktivere bruk i programmer som kjører på Windows Vista.</xref:System.Windows.Forms.SendKeys> Bedre sikkerhet for Windows Vista (kjent som Brukerkontokontroll eller Brukerkontokontroll) hindrer at tidligere implementeringen i å fungere som forventet.   >> Den <xref:System.Windows.Forms.SendKeys>klassen er mottakelig for tidsberegningsproblemer, som har hatt noen utviklere å omgå.</xref:System.Windows.Forms.SendKeys> Oppdaterte implementeringen er fortsatt mottakelig for tidsberegningsproblemer, men er litt raskere og kan gjøre endringer i løsningene. Den <xref:System.Windows.Forms.SendKeys>klassen prøver å bruke den forrige implementeringen først, og hvis dette mislykkes, bruker du den nye implementeringen.</xref:System.Windows.Forms.SendKeys> Resultatet av <xref:System.Windows.Forms.SendKeys>klassen oppføre forskjellig på ulike operativsystemer.</xref:System.Windows.Forms.SendKeys> I tillegg, når den <xref:System.Windows.Forms.SendKeys>klassen bruker den nye implementeringen av <xref:System.Windows.Forms.SendKeys.SendWait%2A>metoden venter ikke på meldinger som skal behandles når de sendes til en annen prosess.</xref:System.Windows.Forms.SendKeys.SendWait%2A> </xref:System.Windows.Forms.SendKeys>   >> Hvis programmet er avhengig av konsekvent virkemåte uavhengig av operativsystemet, kan du tvinge den <xref:System.Windows.Forms.SendKeys>klassen for å bruke den nye implementeringen ved å legge til følgende applikasjonsinnstilling app.config-filen.</xref:System.Windows.Forms.SendKeys>   >> `<appSettings>` >> `<add key=&quot;SendKeys&quot; value=&quot;SendInput&quot;/>` >> `</appSettings>` >> Å fremtvinge det <xref:System.Windows.Forms.SendKeys>klassen for å bruke den forrige implementeringen, må du bruke verdien `&quot;JournalHook&quot;` i stedet.</xref:System.Windows.Forms.SendKeys>"
  example:
  - "The following code example demonstrates how to use the Send method.To run the example, paste the following code in a form called Form1 containing a button called Button1. Ensure the click events are associated with their event-handling methods in this example. The button control's <xref:System.Windows.Forms.Control.TabIndex%2A> property should be set to 0. When the example is running, double-click the form to trigger the button's click event.  \n  \n [!code-cs[System.Windows.Forms.SendKeys#1](~/add/codesnippet/csharp/m-system.windows.forms.s_9_1.cs)]\n [!code-cpp[System.Windows.Forms.SendKeys#1](~/add/codesnippet/cpp/m-system.windows.forms.s_9_1.cpp)]\n [!code-vb[System.Windows.Forms.SendKeys#1](~/add/codesnippet/visualbasic/m-system.windows.forms.s_9_1.vb)]"
  syntax:
    content: public static void Send (string keys);
    parameters:
    - id: keys
      type: System.String
      description: "Tekststrengen tastetrykk til å sende."
  overload: System.Windows.Forms.SendKeys.Send*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det er ikke et aktivt program til å sende tastetrykk til."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>keys</code>er ikke gyldig tastetrykk"
  platform:
  - net462
- uid: System.Windows.Forms.SendKeys.SendWait(System.String)
  id: SendWait(System.String)
  parent: System.Windows.Forms.SendKeys
  langs:
  - csharp
  name: SendWait(String)
  nameWithType: SendKeys.SendWait(String)
  fullName: System.Windows.Forms.SendKeys.SendWait(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Sender de angitte nøklene til det aktive programmet, og deretter venter på meldinger som skal behandles."
  remarks: "Bruk SendWait sende tastetrykk eller kombinasjoner av tastetrykk til det aktive programmet og venter på tastetrykk-postmeldinger som kan behandles. Du kan bruke denne metoden sende tastetrykk til et program og venter på noen av prosessene som startes av tastetrykkene skal fullføres. Dette kan være viktig hvis det andre programmet må avsluttes før programmet kan fortsette.      > [!NOTE] > Fordi det finnes ingen administrerte metode for å aktivere et annet program, du kan bruke denne klassen i gjeldende program eller bruke Windows-metoder, for eksempel `FindWindow` og `SetForegroundWindow`, til å fremtvinge fokus på andre programmer.      > [!NOTE] > Den <xref:System.Windows.Forms.SendKeys>klassen er oppdatert for .NET Framework 3.0 å aktivere bruk i programmer som kjører på Windows Vista.</xref:System.Windows.Forms.SendKeys> Bedre sikkerhet for Windows Vista (kjent som Brukerkontokontroll eller Brukerkontokontroll) hindrer at tidligere implementeringen i å fungere som forventet.   >> Den <xref:System.Windows.Forms.SendKeys>klassen er mottakelig for tidsberegningsproblemer, som har hatt noen utviklere å omgå.</xref:System.Windows.Forms.SendKeys> Oppdaterte implementeringen er fortsatt mottakelig for tidsberegningsproblemer, men er litt raskere og kan gjøre endringer i løsningene. Den <xref:System.Windows.Forms.SendKeys>klassen prøver å bruke den forrige implementeringen først, og hvis dette mislykkes, bruker du den nye implementeringen.</xref:System.Windows.Forms.SendKeys> Resultatet av <xref:System.Windows.Forms.SendKeys>klassen oppføre forskjellig på ulike operativsystemer.</xref:System.Windows.Forms.SendKeys> I tillegg, når den <xref:System.Windows.Forms.SendKeys>klassen bruker nye implementeringen, metoden SendWait venter ikke på meldinger som skal behandles når de sendes til en annen prosess.</xref:System.Windows.Forms.SendKeys>   >> Hvis programmet er avhengig av konsekvent virkemåte uavhengig av operativsystemet, kan du tvinge den <xref:System.Windows.Forms.SendKeys>klassen for å bruke den nye implementeringen ved å legge til følgende applikasjonsinnstilling app.config-filen.</xref:System.Windows.Forms.SendKeys>   >> `<appSettings>` >> `<add key=&quot;SendKeys&quot; value=&quot;SendInput&quot;/>` >> `</appSettings>` >> Å fremtvinge det <xref:System.Windows.Forms.SendKeys>klassen for å bruke den forrige implementeringen, må du bruke verdien `&quot;JournalHook&quot;` i stedet.</xref:System.Windows.Forms.SendKeys>"
  syntax:
    content: public static void SendWait (string keys);
    parameters:
    - id: keys
      type: System.String
      description: "Tekststrengen tastetrykk til å sende."
  overload: System.Windows.Forms.SendKeys.SendWait*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Forms.SendKeys.Flush
  parent: System.Windows.Forms.SendKeys
  isExternal: false
  name: Flush()
  nameWithType: SendKeys.Flush()
  fullName: System.Windows.Forms.SendKeys.Flush()
- uid: System.Windows.Forms.SendKeys.Send(System.String)
  parent: System.Windows.Forms.SendKeys
  isExternal: false
  name: Send(String)
  nameWithType: SendKeys.Send(String)
  fullName: System.Windows.Forms.SendKeys.Send(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.SendKeys.SendWait(System.String)
  parent: System.Windows.Forms.SendKeys
  isExternal: false
  name: SendWait(String)
  nameWithType: SendKeys.SendWait(String)
  fullName: System.Windows.Forms.SendKeys.SendWait(String)
- uid: System.Windows.Forms.SendKeys.Flush*
  parent: System.Windows.Forms.SendKeys
  isExternal: false
  name: Flush
  nameWithType: SendKeys.Flush
- uid: System.Windows.Forms.SendKeys.Send*
  parent: System.Windows.Forms.SendKeys
  isExternal: false
  name: Send
  nameWithType: SendKeys.Send
- uid: System.Windows.Forms.SendKeys.SendWait*
  parent: System.Windows.Forms.SendKeys
  isExternal: false
  name: SendWait
  nameWithType: SendKeys.SendWait
