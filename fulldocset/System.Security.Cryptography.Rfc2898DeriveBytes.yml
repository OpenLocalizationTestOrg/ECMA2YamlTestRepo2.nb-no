### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Rfc2898DeriveBytes
  id: Rfc2898DeriveBytes
  children:
  - System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])
  - System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)
  - System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)
  - System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)
  - System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)
  - System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])
  - System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)
  - System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)
  - System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount
  - System.Security.Cryptography.Rfc2898DeriveBytes.Reset
  - System.Security.Cryptography.Rfc2898DeriveBytes.Salt
  langs:
  - csharp
  name: Rfc2898DeriveBytes
  nameWithType: Rfc2898DeriveBytes
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes
  type: Class
  summary: "Implementerer passordbaserte nøkkelkolonner utledning funksjonalitet, PBKDF2, ved hjelp av en pseudo generatoren for tilfeldige tall basert på <xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;> </xref>."
  remarks: "Rfc2898DeriveBytes tar et passord, et salt og et antall iterasjoner og genererer nøkler i kall til den <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A>metoden.</xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A>       RFC 2898 inneholder metoder for å opprette en nøkkel og initialisering vektor (IV) fra et passord og salt. Du kan bruke PBKDF2, passordbaserte nøkler utleding funksjonen avledes ved hjelp av en pseudo-tilfeldige funksjon som tillater nøklene i nærmest ubegrenset lengde som skal genereres. Klassen Rfc2898DeriveBytes kan brukes til å generere en avledet nøkkel fra en base nøkkel og andre parametere. De andre parameterne som er en salt verdi og en antall iterasjoner i en passordbaserte key utledning funksjon base nøkkelen er et passord.       Hvis du vil ha mer informasjon om PBKDF2, kan du se RFC 2898 &quot;PKCS #5: passordbaserte kryptografi spesifikasjonen versjon 2.0,&quot; tilgjengelig på den [be om hvorfor webområdet](http://go.microsoft.com/fwlink/?LinkID=37119). Se 5.2, &quot;PBKDF2&quot; informasjon.      > [!IMPORTANT] > Aldri harddisken kode et passord i kildekode.  Hardkodet passord kan hentes fra en samling ved hjelp av den [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), ved hjelp av et heksadesimalt redigeringsprogram, eller du åpner opp samlingen i et tekstredigeringsprogram, for eksempel Notepad.exe."
  example:
  - "The following code example uses the Rfc2898DeriveBytes class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.  It then encrypts and decrypts some data using the keys.  \n  \n [!code-cs[rfc28981#1](~/add/codesnippet/csharp/t-system.security.crypto_117_1.cs)]\n [!code-vb[rfc28981#1](~/add/codesnippet/visualbasic/t-system.security.crypto_117_1.vb)]\n [!code-cpp[rfc28981#1](~/add/codesnippet/cpp/t-system.security.crypto_117_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class Rfc2898DeriveBytes : System.Security.Cryptography.DeriveBytes
  inheritance:
  - System.Object
  - System.Security.Cryptography.DeriveBytes
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.DeriveBytes.Dispose
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])
  id: '#ctor(System.String,System.Byte[])'
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Rfc2898DeriveBytes(String,Byte[])
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[])
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> klasse ved hjelp av et passord og salt avledes nøkkelen."
  remarks: "Salt-størrelsen må være 8 byte eller større.       RFC 2898 inneholder metoder for å opprette en nøkkel og initialisering vektor (IV) fra et passord og salt. Du kan bruke PBKDF2, passordbaserte nøkler utleding funksjonen avledes ved hjelp av en pseudo-tilfeldige funksjon som tillater nøklene i nærmest ubegrenset lengde som skal genereres. Den <xref:System.Security.Cryptography.Rfc2898DeriveBytes>klassen kan brukes til å generere en avledet nøkkel fra en base nøkkel og andre parametere.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> De andre parameterne som er en salt verdi og en antall iterasjoner i en passordbaserte key utledning funksjon base nøkkelen er et passord.       Hvis du vil ha mer informasjon om PBKDF2, kan du se RFC 2898 &quot;PKCS #5: passordbaserte kryptografi spesifikasjonen versjon 2.0,&quot; tilgjengelig på den [be om hvorfor webområdet](http://go.microsoft.com/fwlink/?LinkID=37119). Se 5.2, &quot;PBKDF2&quot; informasjon.      > [!IMPORTANT] > Aldri harddisken kode et passord i kildekode.  Hardkodet passord kan hentes fra en samling ved hjelp av den [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), ved hjelp av et heksadesimalt redigeringsprogram, eller du åpner opp samlingen i et tekstredigeringsprogram, for eksempel Notepad.exe."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.  It then encrypts and decrypts some data using the keys.  \n  \n [!code-cs[rfc28981#1](~/add/codesnippet/csharp/7aa0756c-8905-4e75-ae9a-_1.cs)]\n [!code-vb[rfc28981#1](~/add/codesnippet/visualbasic/7aa0756c-8905-4e75-ae9a-_1.vb)]\n [!code-cpp[rfc28981#1](~/add/codesnippet/cpp/7aa0756c-8905-4e75-ae9a-_1.cpp)]"
  syntax:
    content: public Rfc2898DeriveBytes (string password, byte[] salt);
    parameters:
    - id: password
      type: System.String
      description: "Passordet som brukes avledes nøkkelen."
    - id: salt
      type: System.Byte[]
      description: "Salt-nøkkel brukes avledes nøkkelen."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den angitte salt-størrelsen er mindre enn 8 byte eller antall iterasjoner er mindre enn 1."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Passordet eller salt <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Rfc2898DeriveBytes(String,Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> klasse ved hjelp av passord og salt-størrelsen avledes nøkkelen."
  remarks: "Salt-størrelsen må være 8 byte eller større.       RFC 2898 inneholder metoder for å opprette en nøkkel og initialisering vektor (IV) fra et passord og salt. Du kan bruke PBKDF2, passordbaserte nøkler utleding funksjonen avledes ved hjelp av en pseudo-tilfeldige funksjon som tillater nøklene i nærmest ubegrenset lengde som skal genereres. Den <xref:System.Security.Cryptography.Rfc2898DeriveBytes>klassen kan brukes til å generere en avledet nøkkel fra en base nøkkel og andre parametere.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> De andre parameterne som er en salt verdi og en antall iterasjoner i en passordbaserte key utledning funksjon base nøkkelen er et passord.       Hvis du vil ha mer informasjon om PBKDF2, kan du se RFC 2898 &quot;PKCS #5: passordbaserte kryptografi spesifikasjonen versjon 2.0,&quot; tilgjengelig på den [be om hvorfor webområdet](http://go.microsoft.com/fwlink/?LinkID=37119). Se 5.2, &quot;PBKDF2&quot; informasjon.      > [!IMPORTANT] > Aldri harddisken kode et passord i kildekode.  Hardkodet passord kan hentes fra en samling ved hjelp av den [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), ved hjelp av et heksadesimalt redigeringsprogram, eller du åpner opp samlingen i et tekstredigeringsprogram, for eksempel Notepad.exe."
  syntax:
    content: public Rfc2898DeriveBytes (string password, int saltSize);
    parameters:
    - id: password
      type: System.String
      description: "Passordet som brukes avledes nøkkelen."
    - id: saltSize
      type: System.Int32
      description: "Størrelsen på tilfeldig salt ønskede klassen for å generere."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den angitte salt-størrelsen er mindre enn 8 byte."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Passordet eller salt <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)
  id: '#ctor(System.Byte[],System.Byte[],System.Int32)'
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Rfc2898DeriveBytes(Byte[],Byte[],Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(Byte[],Byte[],Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(Byte[],Byte[],Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> klasse ved hjelp av et passord, salt og antall iterasjoner avledes nøkkelen."
  remarks: "Salt-størrelsen må være 8 byte eller større og antall iterasjoner må være større enn null. Anbefalte minimumsantallet iterasjoner er 1000.       RFC 2898 inneholder metoder for å opprette en nøkkel og initialisering vektor (IV) fra et passord og salt. Du kan bruke PBKDF2, passordbaserte nøkler utleding funksjonen avledes ved hjelp av en pseudo-tilfeldige funksjon som tillater nøklene i nærmest ubegrenset lengde som skal genereres. Den <xref:System.Security.Cryptography.Rfc2898DeriveBytes>klassen kan brukes til å generere en avledet nøkkel fra en base nøkkel og andre parametere.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> De andre parameterne som er en salt verdi og en antall iterasjoner i en passordbaserte key utledning funksjon base nøkkelen er et passord.       Hvis du vil ha mer informasjon om PBKDF2, kan du se RFC 2898 &quot;PKCS #5: passordbaserte kryptografi spesifikasjonen versjon 2.0,&quot; tilgjengelig på den [be om hvorfor webområdet](http://go.microsoft.com/fwlink/?LinkID=37119). Se 5.2, &quot;PBKDF2&quot; informasjon.      > [!IMPORTANT] > Aldri harddisken kode et passord i kildekode.  Hardkodet passord kan hentes fra en samling ved hjelp av den [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), ved hjelp av et heksadesimalt redigeringsprogram, eller du åpner opp samlingen i et tekstredigeringsprogram, for eksempel Notepad.exe."
  syntax:
    content: public Rfc2898DeriveBytes (byte[] password, byte[] salt, int iterations);
    parameters:
    - id: password
      type: System.Byte[]
      description: "Passordet som brukes avledes nøkkelen."
    - id: salt
      type: System.Byte[]
      description: "Salt-nøkkel brukes avledes nøkkelen."
    - id: iterations
      type: System.Int32
      description: "Antall iterasjoner for operasjonen."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den angitte salt-størrelsen er mindre enn 8 byte eller antall iterasjoner er mindre enn 1."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Passordet eller salt <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)
  id: '#ctor(System.String,System.Byte[],System.Int32)'
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Rfc2898DeriveBytes(String,Byte[],Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[],Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[],Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> klasse ved hjelp av et passord, salt og antall iterasjoner avledes nøkkelen."
  remarks: "Salt-størrelsen må være 8 byte eller større og antall iterasjoner må være større enn null. Anbefalte minimumsantallet iterasjoner er 1000.       RFC 2898 inneholder metoder for å opprette en nøkkel og initialisering vektor (IV) fra et passord og salt. Du kan bruke PBKDF2, passordbaserte nøkler utleding funksjonen avledes ved hjelp av en pseudo-tilfeldige funksjon som tillater nøklene i nærmest ubegrenset lengde som skal genereres. Den <xref:System.Security.Cryptography.Rfc2898DeriveBytes>klassen kan brukes til å generere en avledet nøkkel fra en base nøkkel og andre parametere.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> De andre parameterne som er en salt verdi og en antall iterasjoner i en passordbaserte key utledning funksjon base nøkkelen er et passord.       Hvis du vil ha mer informasjon om PBKDF2, kan du se RFC 2898 &quot;PKCS #5: passordbaserte kryptografi spesifikasjonen versjon 2.0,&quot; tilgjengelig på den [be om hvorfor webområdet](http://go.microsoft.com/fwlink/?LinkID=37119). Se 5.2, &quot;PBKDF2&quot; informasjon.      > [!IMPORTANT] > Aldri harddisken kode et passord i kildekode.  Hardkodet passord kan hentes fra en samling ved hjelp av den [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), ved hjelp av et heksadesimalt redigeringsprogram, eller du åpner opp samlingen i et tekstredigeringsprogram, for eksempel Notepad.exe."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.  It then encrypts and decrypts some data using the keys.  \n  \n [!code-cs[rfc28981#1](~/add/codesnippet/csharp/8b79aa42-3b6a-4a39-985a-_1.cs)]\n [!code-vb[rfc28981#1](~/add/codesnippet/visualbasic/8b79aa42-3b6a-4a39-985a-_1.vb)]\n [!code-cpp[rfc28981#1](~/add/codesnippet/cpp/8b79aa42-3b6a-4a39-985a-_1.cpp)]"
  syntax:
    content: public Rfc2898DeriveBytes (string password, byte[] salt, int iterations);
    parameters:
    - id: password
      type: System.String
      description: "Passordet som brukes avledes nøkkelen."
    - id: salt
      type: System.Byte[]
      description: "Salt-nøkkel brukes avledes nøkkelen."
    - id: iterations
      type: System.Int32
      description: "Antall iterasjoner for operasjonen."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den angitte salt-størrelsen er mindre enn 8 byte eller antall iterasjoner er mindre enn 1."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Passordet eller salt <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Int32,System.Int32)'
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Rfc2898DeriveBytes(String,Int32,Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32,Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> klasse ved hjelp av et passord, salt-størrelsen og antall iterasjoner avledes nøkkelen."
  remarks: "Salt-størrelsen må være 8 byte eller større og antall iterasjoner må være større enn null. Anbefalte minimumsantallet iterasjoner er 1000.       RFC 2898 inneholder metoder for å opprette en nøkkel og initialisering vektor (IV) fra et passord og salt. Du kan bruke PBKDF2, passordbaserte nøkler utleding funksjonen avledes ved hjelp av en pseudo-tilfeldige funksjon som tillater nøklene i nærmest ubegrenset lengde som skal genereres. Den <xref:System.Security.Cryptography.Rfc2898DeriveBytes>klassen kan brukes til å generere en avledet nøkkel fra en base nøkkel og andre parametere.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> De andre parameterne som er en salt verdi og en antall iterasjoner i en passordbaserte key utledning funksjon base nøkkelen er et passord.       Hvis du vil ha mer informasjon om PBKDF2, kan du se RFC 2898 &quot;PKCS #5: passordbaserte kryptografi spesifikasjonsversjon 2.0,&quot; tilgjengelig på den [be om hvorfor webområdet](http://go.microsoft.com/fwlink/?LinkID=37119). Se 5.2, &quot;PBKDF2&quot; informasjon.      > [!IMPORTANT] > Aldri harddisken kode et passord i kildekode.  Hardkodet passord kan hentes fra en samling ved hjelp av den [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), ved hjelp av et heksadesimalt redigeringsprogram, eller du åpner opp samlingen i et tekstredigeringsprogram, for eksempel Notepad.exe."
  syntax:
    content: public Rfc2898DeriveBytes (string password, int saltSize, int iterations);
    parameters:
    - id: password
      type: System.String
      description: "Passordet som brukes avledes nøkkelen."
    - id: saltSize
      type: System.Int32
      description: "Størrelsen på tilfeldig salt ønskede klassen for å generere."
    - id: iterations
      type: System.Int32
      description: "Antall iterasjoner for operasjonen."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den angitte salt-størrelsen er mindre enn 8 byte eller antall iterasjoner er mindre enn 1."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Passordet eller salt <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>iterations </code>er utenfor området. Denne parameteren krever et negativt tall."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])
  id: CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: CryptDeriveKey(String,String,Int32,Byte[])
  nameWithType: Rfc2898DeriveBytes.CryptDeriveKey(String,String,Int32,Byte[])
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(String,String,Int32,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Avledes krypteringsnøkkel fra den <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> objektet."
  remarks: "Denne funksjonen er en tekstbryting for funksjonen kryptering API CryptDeriveKey(), og er ment å tilby interoperabilitet med programmer som bruker API for kryptering.       Hvis den `keySize` parameteren er satt til 0 biter, standard nøkkelstørrelsen for den angitte algoritmen brukes."
  syntax:
    content: public byte[] CryptDeriveKey (string algname, string alghashname, int keySize, byte[] rgbIV);
    parameters:
    - id: algname
      type: System.String
      description: "Algoritmen navnet som avledes nøkkelen."
    - id: alghashname
      type: System.String
      description: "Hash-algoritmen navnet Bruk avledes nøkkelen."
    - id: keySize
      type: System.Int32
      description: "Størrelsen på nøkkelen i biter avledes."
    - id: rgbIV
      type: System.Byte[]
      description: "Av Initialiseringsvektoren (IV) til å bruke avledes nøkkelen."
    return:
      type: System.Byte[]
      description: "Avledede nøkkelen."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Den <code> keySize </code> parameteren er feil.       - eller - kan ikke være anskaffet kryptografitjenesteleverandør (CSP).       - eller - <code> algname </code> parameteren er ikke et gyldig algoritmenavn.       - eller - <code> alghashname </code> parameteren er ikke et gyldig hash-algoritmenavn."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Rfc2898DeriveBytes.Dispose(Boolean)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Frigir uforvaltede ressursene som brukes av den <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> klasse og eventuelt frigir administrerte ressurser."
  remarks: "Denne metoden kalles av offentlig `Dispose()` metoden og `Finalize` metoden. `Dispose()`Aktiverer den beskyttede `Dispose(Boolean)` metoden med den `disposing` parameteren satt til `true`. `Finalize`aktiverer `Dispose` med `disposing` satt til `false`.       Når den `disposing` parameteren er `true`, denne metoden Frigjør alle ressurser holdes av administrerte objekter som denne <xref:System.Security.Cryptography.Rfc2898DeriveBytes>referanser.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> Denne metoden starter den `Dispose()` metode for hver referert objekt."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>å frigjøre både administrerte og uforvaltede ressurser. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> frigi bare uforvaltede ressurser."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)
  id: GetBytes(System.Int32)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: GetBytes(Int32)
  nameWithType: Rfc2898DeriveBytes.GetBytes(Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Returnerer den pseudo-tilfeldige nøkkelen for dette objektet."
  remarks: "<xref:System.Security.Cryptography.Rfc2898DeriveBytes>Klassen implementerer PBKDF2 funksjonalitet ved bruk av en varianter av tilfeldige generatoren for tall basert på <xref:System.Security.Cryptography.HMACSHA1>.</xref:System.Security.Cryptography.HMACSHA1> </xref:System.Security.Cryptography.Rfc2898DeriveBytes> Den <xref:System.Security.Cryptography.Rfc2898DeriveBytes>tar et passord, et salt og et antall iterasjoner og genererer nøkler i kall til metoden GetBytes.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> Gjentatte kall til denne metoden kan ikke generere den samme nøkkelen. i stedet tilføying to kall av metoden GetBytes med en `cb` parameterverdien `20` tilsvarer å kalle metoden GetBytes én gang med en `cb` parameterverdien `40`."
  example:
  - "The following example shows how to use the GetBytes method to get the key for an instance of <xref:System.Security.Cryptography.Rfc2898DeriveBytes>. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.  \n  \n [!code-cs[rfc28981#2](~/add/codesnippet/csharp/m-system.security.crypto_127_1.cs)]\n [!code-vb[rfc28981#2](~/add/codesnippet/visualbasic/m-system.security.crypto_127_1.vb)]\n [!code-cpp[rfc28981#2](~/add/codesnippet/cpp/m-system.security.crypto_127_1.cpp)]"
  syntax:
    content: public override byte[] GetBytes (int cb);
    parameters:
    - id: cb
      type: System.Int32
      description: "Antall pseudo-tilfeldige key byte til å generere."
    return:
      type: System.Byte[]
      description: "En bytematrise fylt med pseudo-tilfeldige key byte."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>cb </code>er utenfor området. Denne parameteren krever et negativt tall."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount
  id: IterationCount
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: IterationCount
  nameWithType: Rfc2898DeriveBytes.IterationCount
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Henter eller angir antall gjentakelser for operasjonen."
  remarks: "Antall iterasjoner er hvor mange ganger en operasjon utføres. Antallet må være større enn null for denne metoden. Anbefalte minimumsantallet iterasjoner er 1000."
  example:
  - "The following example shows how to use the IterationCount property to display the number of iterations used in the generation of the key. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.  \n  \n [!code-cs[rfc28981#3](~/add/codesnippet/csharp/p-system.security.crypto_117_1.cs)]\n [!code-vb[rfc28981#3](~/add/codesnippet/visualbasic/p-system.security.crypto_117_1.vb)]\n [!code-cpp[rfc28981#3](~/add/codesnippet/cpp/p-system.security.crypto_117_1.cpp)]"
  syntax:
    content: public int IterationCount { get; set; }
    return:
      type: System.Int32
      description: "Antall iterasjoner for operasjonen."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Antall iterasjoner er mindre enn 1."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Reset
  id: Reset
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Reset()
  nameWithType: Rfc2898DeriveBytes.Reset()
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Tilbakestiller tilstand for operasjonen."
  remarks: "Denne metoden kalles automatisk hvis salt eller gjentakelse count er endret."
  example:
  - "The following example shows how to use the Reset method. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.  \n  \n [!code-cs[rfc28981#5](~/add/codesnippet/csharp/m-system.security.crypto_26_1.cs)]\n [!code-vb[rfc28981#5](~/add/codesnippet/visualbasic/m-system.security.crypto_26_1.vb)]\n [!code-cpp[rfc28981#5](~/add/codesnippet/cpp/m-system.security.crypto_26_1.cpp)]"
  syntax:
    content: public override void Reset ();
    parameters: []
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Salt
  id: Salt
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Salt
  nameWithType: Rfc2898DeriveBytes.Salt
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Salt
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Henter eller angir salt nøkkelverdien for operasjonen."
  remarks: "Salt, et tilfeldig antall byte brukes til å gjøre uautorisert dekryptering av en melding vanskeligere. En ordliste angrep er et angrep der angriperen prøver å dekryptere en kryptert melding ved å sammenligne den krypterte verdien med tidligere beregnede krypterte verdier for de mest sannsynlige nøklene. Denne angrep gjøres mye vanskeligere av lanseringen av salt eller tilfeldig byte på slutten av passordet før key utledningen."
  syntax:
    content: public byte[] Salt { get; set; }
    return:
      type: System.Byte[]
      description: "Salt nøkkelverdien for operasjonen."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.Salt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den angitte salt-størrelsen er mindre enn 8 byte."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Salt er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: System.Security.Cryptography.DeriveBytes
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Rfc2898DeriveBytes(String,Byte[])
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[])
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Rfc2898DeriveBytes(String,Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Rfc2898DeriveBytes(Byte[],Byte[],Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(Byte[],Byte[],Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(Byte[],Byte[],Int32)
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Rfc2898DeriveBytes(String,Byte[],Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[],Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[],Int32)
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Rfc2898DeriveBytes(String,Int32,Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32,Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32,Int32)
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: CryptDeriveKey(String,String,Int32,Byte[])
  nameWithType: Rfc2898DeriveBytes.CryptDeriveKey(String,String,Int32,Byte[])
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(String,String,Int32,Byte[])
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Rfc2898DeriveBytes.Dispose(Boolean)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: GetBytes(Int32)
  nameWithType: Rfc2898DeriveBytes.GetBytes(Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(Int32)
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: IterationCount
  nameWithType: Rfc2898DeriveBytes.IterationCount
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Reset
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Reset()
  nameWithType: Rfc2898DeriveBytes.Reset()
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Reset()
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Salt
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Salt
  nameWithType: Rfc2898DeriveBytes.Salt
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Salt
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Rfc2898DeriveBytes
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: CryptDeriveKey
  nameWithType: Rfc2898DeriveBytes.CryptDeriveKey
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Dispose
  nameWithType: Rfc2898DeriveBytes.Dispose
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: GetBytes
  nameWithType: Rfc2898DeriveBytes.GetBytes
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: IterationCount
  nameWithType: Rfc2898DeriveBytes.IterationCount
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Reset*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Reset
  nameWithType: Rfc2898DeriveBytes.Reset
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Salt*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Salt
  nameWithType: Rfc2898DeriveBytes.Salt
