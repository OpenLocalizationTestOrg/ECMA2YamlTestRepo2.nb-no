### YamlMime:ManagedReference
items:
- uid: System.Windows.DependencyObject
  id: DependencyObject
  children:
  - System.Windows.DependencyObject.#ctor
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  langs:
  - csharp
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
  type: Class
  summary: "Representerer et objekt som deltar i avhengighet egenskapen systemet."
  remarks: "DependencyObject klassen aktiverer [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] egenskapen systemtjenester på de mange avledede klassene.       Egenskapen systemets primærfunksjon er ikke beregne verdier for egenskapene og gi systemstatus for verdier som er endret. En annen nøkkel klasse som deltar i egenskapen systemet er <xref:System.Windows.DependencyProperty>.</xref:System.Windows.DependencyProperty> <xref:System.Windows.DependencyProperty>Aktiverer registrering av egenskaper for avhengighet i egenskapen systemet og gir identifikasjon og informasjon om hver avhengighetsegenskapen mens DependencyObject som en basisklasse aktiverer objektene som skal bruke egenskapene avhengighet.</xref:System.Windows.DependencyProperty>       DependencyObject tjenester og egenskaper omfatter følgende:-avhengighetsegenskapen som er vert for støtte. Du registrerer en avhengighetsegenskapen ved å ringe til <xref:System.Windows.DependencyProperty.Register%2A>metoden, og lagre den metoden returverdien som et offentlig statiske felt i din klasse.</xref:System.Windows.DependencyProperty.Register%2A>      -Vedlagte egenskap som er vert for støtte. Du registrerer en vedlagte egenskap ved å ringe til <xref:System.Windows.DependencyProperty.RegisterAttached%2A>metoden, og lagre den metoden returverdien som et offentlig statisk skrivebeskyttet felt i din klasse.</xref:System.Windows.DependencyProperty.RegisterAttached%2A> (Det finnes også disse kravene; Vær oppmerksom på at dette representerer en [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] bestemte implementeringer for vedlagte egenskaper. Hvis du vil ha mer informasjon, se [knyttet egenskaper oversikt over](~/add/includes/ajax-current-ext-md.md).) Den tilknyttede egenskapen kan deretter angis på en klasse som er avledet fra DependencyObject.      -Få, angi, og Fjern verktøyet metoder for verdiene i avhengighetsegenskaper som finnes på DependencyObject.      -Metadata, tvungne verdien støtte, egenskapen endres varsling og override tilbakeringinger for avhengighetsegenskaper eller koblet egenskaper. Klassen DependencyObject muliggjør også per eieren egenskapen metadataene for en avhengighetsegenskapen.      – En vanlig basisklasse for klasser som er avledet fra <xref:System.Windows.ContentElement>, <xref:System.Windows.Freezable>, eller <xref:System.Windows.Media.Visual>.</xref:System.Windows.Media.Visual> </xref:System.Windows.Freezable> </xref:System.Windows.ContentElement> (<xref:System.Windows.UIElement>, en annen base elementet klasse er et hierarki med klassen som inkluderer <xref:System.Windows.Media.Visual>.)</xref:System.Windows.Media.Visual> </xref:System.Windows.UIElement>"
  example:
  - "The following example derives from DependencyObject to create a new abstract class. The class then registers an attached property and includes support members for that attached property.  \n  \n [!code-cs[WPFAquariumSln#DOMain](~/add/codesnippet/csharp/WPFAquariumSln/WPFAquariumObjects/Class1.cs#domain)]\n [!code-vb[WPFAquariumSln#DOMain](~/add/codesnippet/visualbasic/wpfaquariumobjects/class1.vb#domain)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeDescriptionProvider(typeof(MS.Internal.ComponentModel.DependencyObjectProvider))]

      [System.Windows.Markup.NameScopeProperty("NameScope", typeof(System.Windows.NameScope))]

      public class DependencyObject : System.Windows.Threading.DispatcherObject
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.DependencyObject.#ctor
  id: '#ctor'
  parent: System.Windows.DependencyObject
  langs:
  - csharp
  name: DependencyObject()
  nameWithType: DependencyObject.DependencyObject()
  fullName: System.Windows.DependencyObject.DependencyObject()
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> klasse."
  syntax:
    content: public DependencyObject ();
    parameters: []
  overload: System.Windows.DependencyObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  id: ClearValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  langs:
  - csharp
  name: ClearValue(DependencyProperty)
  nameWithType: DependencyObject.ClearValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.ClearValue(DependencyProperty)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Tømmer den lokale verdien. Egenskapen som skal tømmes er angitt i en <xref href=&quot;System.Windows.DependencyProperty&quot;> </xref> identifikator."
  remarks: "Tømming egenskapsverdien ved å kalle ClearValue gir ikke nødvendigvis en avhengighetsegenskapen standardverdien som er angitt i egenskapen metadataene avhengighet. Å fjerne egenskapen bare spesielt fjerner den lokale verdien kan ha vært brukt. Hvis du vil ha mer informasjon, se [avhengighet egenskapen verdien prioriteten](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example iterates all properties that have local values set on an object, then calls ClearValue to clear the values of each such property.  \n  \n [!code-cs[DPClearValue#IterateLocalValuesAndClear](~/add/codesnippet/csharp/DPClearValue/default.xaml.cs#iteratelocalvaluesandclear)]\n [!code-vb[DPClearValue#IterateLocalValuesAndClear](~/add/codesnippet/visualbasic/DPClearValue/default.xaml.vb#iteratelocalvaluesandclear)]"
  syntax:
    content: public void ClearValue (System.Windows.DependencyProperty dp);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "Avhengighetsegenskapen slettes, identifisert av en <xref href=&quot;System.Windows.DependencyProperty&quot;> </xref> objekt-referanse."
  overload: System.Windows.DependencyObject.ClearValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Forsøkte å kalle ClearValue i en lukket <xref href=&quot;System.Windows.DependencyObject&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  id: ClearValue(System.Windows.DependencyPropertyKey)
  parent: System.Windows.DependencyObject
  langs:
  - csharp
  name: ClearValue(DependencyPropertyKey)
  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)
  fullName: System.Windows.DependencyObject.ClearValue(DependencyPropertyKey)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Fjerner lokale verdien i en skrivebeskyttet egenskap. Egenskapen som skal tømmes er angitt i en <xref href=&quot;System.Windows.DependencyPropertyKey&quot;> </xref>."
  remarks: "En <xref:System.Windows.DependencyPropertyKey>identifiserer en skrivebeskyttet avhengighetsegenskapen for egenskapen systemoperasjoner.</xref:System.Windows.DependencyPropertyKey> Klasser som definerer skrivebeskyttet avhengighetsegenskaper kan ikke utløse denne nøkkelen med public-tilgang. En offentlig åpne nøkkel vil angi en offentlig code-banen som negated skrivebeskyttet tegnet for egenskapen, hvis metoder som <xref:System.Windows.DependencyObject.ClearValue%2A>eller <xref:System.Windows.DependencyObject.SetValue%2A>kan kalles utenfor klassen eller samlingen, refererer til nøkkelen.</xref:System.Windows.DependencyObject.SetValue%2A> </xref:System.Windows.DependencyObject.ClearValue%2A>       Tømming egenskapsverdien ved å kalle ClearValue gir ikke nødvendigvis en avhengighetsegenskapen standardverdien som er angitt i egenskapen metadataene avhengighet. Hvis du fjerner verdien bare spesielt fjerner den lokale verdien kan ha vært brukt. Hvis du vil ha mer informasjon, se [avhengighet egenskapen verdien prioriteten](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void ClearValue (System.Windows.DependencyPropertyKey key);
    parameters:
    - id: key
      type: System.Windows.DependencyPropertyKey
      description: "Nøkkelen for avhengighetsegenskapen som skal tømmes."
  overload: System.Windows.DependencyObject.ClearValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Forsøkte å kalle <xref:System.Windows.DependencyObject.ClearValue*>i en lukket <xref href=&quot;System.Windows.DependencyObject&quot;> </xref>.</xref:System.Windows.DependencyObject.ClearValue*>"
  platform:
  - net462
- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  id: CoerceValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  langs:
  - csharp
  name: CoerceValue(DependencyProperty)
  nameWithType: DependencyObject.CoerceValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.CoerceValue(DependencyProperty)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Konverterer verdien for den angitte avhengighetsegenskapen. Dette gjøres ved å bruke en <xref href=&quot;System.Windows.CoerceValueCallback&quot;> </xref> funksjonen som er angitt i egenskapmetadata for avhengighetsegenskapen som den finnes på kaller <xref href=&quot;System.Windows.DependencyObject&quot;> </xref>."
  remarks: "I tillegg til er eksplisitt aktivert via kaller CoerceValue, den <xref:System.Windows.CoerceValueCallback>for en avhengighet egenskapen også aktiveres internt når avhengighet egenskapsverdien på nytt evalueres av den [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] egenskapen system.</xref:System.Windows.CoerceValueCallback>       Når du starter CoerceValue-metoden, er du til slutt aktivering av tilbakeringing for coerce-verdien for egenskapen som du angir. Vanligvis vil du aktivere CoerceValue bare hvis du vet at en coerce verdien tilbakeringing finnes, og hvis du kjenner av tilbakeringing vilkårene for rangeringen.       Det vanligste scenariet for å kalle CoerceValue er innenfor klassen håndtering eller egenskapen endre tilbakeringinger for egenskaper som har innvirkning på hverandre verdier i en avhengige måte. Hvis du vil ha mer informasjon, se [avhengighet egenskapen tilbakeringinger og validering](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example calls CoerceValue within a <xref:System.Windows.PropertyChangedCallback> implementation that is used as the <xref:System.Windows.PropertyMetadata.PropertyChangedCallback%2A> for a different dependency properties on the same class. This is a common pattern for introducing true value dependencies between dependency properties.  \n  \n [!code-cs[DPCallbackOverride#OnPCCurrent](~/add/codesnippet/csharp/DPCallbackOverride/SDKSampleLibrary/class1.cs#onpccurrent)]\n [!code-vb[DPCallbackOverride#OnPCCurrent](~/add/codesnippet/visualbasic/DPCallbackOverride.sdksamplelibrary/class1.vb#onpccurrent)]"
  syntax:
    content: public void CoerceValue (System.Windows.DependencyProperty dp);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "ID for avhengighetsegenskapen til tvungne."
  overload: System.Windows.DependencyObject.CoerceValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den angitte <code> dp </code> eller verdien er ugyldig eller finnes ikke."
  platform:
  - net462
- uid: System.Windows.DependencyObject.DependencyObjectType
  id: DependencyObjectType
  parent: System.Windows.DependencyObject
  langs:
  - csharp
  name: DependencyObjectType
  nameWithType: DependencyObject.DependencyObjectType
  fullName: System.Windows.DependencyObject.DependencyObjectType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Henter den <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> som bryter det [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] typen for denne forekomsten."
  remarks: "Denne egenskapen er nyttig hvis et objekt som er returnert fra en annen metode har en returverdi type <xref:System.Windows.DependencyObject>og du vil utføre egenskapen system bestemte operasjoner av den avhengig av filtypen.</xref:System.Windows.DependencyObject> Det er for eksempel mer effektivt å kalle <xref:System.Windows.DependencyProperty.GetMetadata%28System.Windows.DependencyObjectType%29>ved hjelp av den <xref:System.Windows.DependencyObjectType>i stedet for den [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] type.</xref:System.Windows.DependencyObjectType> </xref:System.Windows.DependencyProperty.GetMetadata%28System.Windows.DependencyObjectType%29> <xref:System.Windows.DependencyObjectType>muliggjør raskere oppslag.</xref:System.Windows.DependencyObjectType>"
  example:
  - "In the following pseudocode example, `MySubClass` anticipates that additional derived classes might change the default value of the `MyCustom` dependency property. The class implements a default constructor that can determine the actual derived class by taking advantage of polymorphism on the <xref:System.Windows.DependencyObjectType> value whenever that constructor is used as a derived class instantiator.  \n  \n `public DOClass() : base()`  \n  \n `{`  \n  \n `__customPropertyCache = (CustomDP)`  \n  \n `CustomDPProperty.GetMetadata(DependencyObjectType).DefaultValue;`  \n  \n `}`"
  syntax:
    content: public System.Windows.DependencyObjectType DependencyObjectType { get; }
    return:
      type: System.Windows.DependencyObjectType
      description: "En <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> som bryter det [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] typen for denne forekomsten."
  overload: System.Windows.DependencyObject.DependencyObjectType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObject.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.DependencyObject
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: DependencyObject.Equals(Object)
  fullName: System.Windows.DependencyObject.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Bestemmer om en angitt <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> tilsvarer gjeldende <xref href=&quot;System.Windows.DependencyObject&quot;> </xref>."
  remarks: "Denne implementeringen er bare referanse likhet, og prøver ikke å evaluere verdien likhet inneholder egenskapene."
  syntax:
    content: public override sealed bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Den <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> til å sammenligne den gjeldende forekomsten."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis to forekomster er den samme. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.DependencyObject.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObject.GetHashCode
  id: GetHashCode
  parent: System.Windows.DependencyObject
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: DependencyObject.GetHashCode()
  fullName: System.Windows.DependencyObject.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Henter en hash-kode for denne <xref href=&quot;System.Windows.DependencyObject&quot;> </xref>."
  syntax:
    content: public override sealed int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "En 32-biters heltall med fortegn hash-kode."
  overload: System.Windows.DependencyObject.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObject.GetLocalValueEnumerator
  id: GetLocalValueEnumerator
  parent: System.Windows.DependencyObject
  langs:
  - csharp
  name: GetLocalValueEnumerator()
  nameWithType: DependencyObject.GetLocalValueEnumerator()
  fullName: System.Windows.DependencyObject.GetLocalValueEnumerator()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Oppretter en spesialiserte enumerator for å finne ut hvilke avhengighetsegenskaper som lokalt har angitt verdiene i denne <xref href=&quot;System.Windows.DependencyObject&quot;> </xref>."
  remarks: "En *lokal* er en avhengighet-egenskapsverdi som er angitt av <xref:System.Windows.DependencyObject.SetValue%2A>, i motsetning til andre aspektene av egenskapen.</xref:System.Windows.DependencyObject.SetValue%2A>       Den <xref:System.Windows.LocalValueEnumerator>skaffet kaller GetLocalValueEnumerator kan brukes til å liste opp egenskaper som har en lokalt angitt verdien for en <xref:System.Windows.DependencyObject>forekomsten.</xref:System.Windows.DependencyObject> </xref:System.Windows.LocalValueEnumerator> Hver slik egenskap som er representert i opplisting av en <xref:System.Windows.LocalValueEntry>-objektet som har egenskaper som refererer til bestemt <xref:System.Windows.DependencyProperty>og tilhørende verdier.</xref:System.Windows.DependencyProperty> </xref:System.Windows.LocalValueEntry> Denne metoden for nummerering over lokalt angitt verdier kan brukes for optimalisering eller andre behandling av lokale verdier, som å finne ut hvilke egenskapsverdier for en <xref:System.Windows.DependencyObject>ville ha blitt endret hvis de ble tømt.</xref:System.Windows.DependencyObject>      > [!IMPORTANT] > Det returnerte <xref:System.Windows.LocalValueEnumerator>kan inneholde <xref:System.Windows.LocalValueEntry>poster for avhengighet som skrivebeskyttet, avhengighetsegenskaper eller der verdiene skal beregnes ved egenskapen-systemet.</xref:System.Windows.LocalValueEntry> </xref:System.Windows.LocalValueEnumerator> For eksempel registrerer et visual framework-element som har en opprettet bredden via oppsettet en lokal verdi for <xref:System.Windows.FrameworkElement.ActualWidth%2A>.</xref:System.Windows.FrameworkElement.ActualWidth%2A> Hvis du får lokale verdier for å tilbakestille dem, kan du se den <xref:System.Windows.DependencyProperty.ReadOnly%2A>verdi på egenskapsidentifikator for hver <xref:System.Windows.LocalValueEntry>bekrefte at den <xref:System.Windows.DependencyProperty>aktuelle er skrivebeskyttet.</xref:System.Windows.DependencyProperty> </xref:System.Windows.LocalValueEntry> </xref:System.Windows.DependencyProperty.ReadOnly%2A>"
  example:
  - "The following example iterates all properties that have local values set on an object, then calls <xref:System.Windows.DependencyObject.ClearValue%2A> to clear the values of each such property.  \n  \n [!code-cs[DPClearValue#IterateLocalValuesAndClear](~/add/codesnippet/csharp/DPClearValue/default.xaml.cs#iteratelocalvaluesandclear)]\n [!code-vb[DPClearValue#IterateLocalValuesAndClear](~/add/codesnippet/visualbasic/DPClearValue/default.xaml.vb#iteratelocalvaluesandclear)]"
  syntax:
    content: public System.Windows.LocalValueEnumerator GetLocalValueEnumerator ();
    parameters: []
    return:
      type: System.Windows.LocalValueEnumerator
      description: "Dataenumerator spesialiserte lokal verdi."
  overload: System.Windows.DependencyObject.GetLocalValueEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  id: GetValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  langs:
  - csharp
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetValue(DependencyProperty)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Returnerer gjeldende gjeldende verdi for en avhengighetsegenskap i denne forekomsten av en <xref href=&quot;System.Windows.DependencyObject&quot;> </xref>."
  remarks: "Den *effektiv* verdi for egenskapen som returneres av egenskapen systemet til oppkalleren som ber om verdien. Den gjeldende verdien er et resultat av egenskapen systemet har evalueres alle mulige inndata som deltar i egenskapen systemet verdien prioritet. Dette omfatter rangeringen og animasjon. Hvis du vil ha mer informasjon, se [avhengighet egenskapen verdien prioriteten](~/add/includes/ajax-current-ext-md.md).       Denne metoden tilbakestiller aldri <xref:System.Windows.DependencyProperty>.</xref:System.Windows.DependencyProperty> Den <xref:System.Windows.DependencyProperty>er en sentinel verdi for egenskapen systemet som brukes i forskjellige kapasitet internt og noen ganger også eksponert via rangeringen tilbakeringinger.</xref:System.Windows.DependencyProperty>       Hvis du er sikker på hva egenskapstypen må være, kan du spørre identifikatoren for den forespurte avhengighetsegenskapen å finne ut om det er en mer bestemt <xref:System.Windows.DependencyProperty.PropertyType%2A>som returverdien kan konverteres til.</xref:System.Windows.DependencyProperty.PropertyType%2A>"
  syntax:
    content: public object GetValue (System.Windows.DependencyProperty dp);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "Den <xref href=&quot;System.Windows.DependencyProperty&quot;> </xref> identifikator for egenskapen for å hente verdien for."
    return:
      type: System.Object
      description: "Returnerer gjeldende gjeldende verdi."
  overload: System.Windows.DependencyObject.GetValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den angitte <code> dp </code> eller verdien er ugyldig, eller den angitte <code> dp </code> finnes ikke."
  platform:
  - net462
- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  id: InvalidateProperty(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  langs:
  - csharp
  name: InvalidateProperty(DependencyProperty)
  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)
  fullName: System.Windows.DependencyObject.InvalidateProperty(DependencyProperty)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Returnerer den gjeldende verdien for den angitte avhengighetsegenskapen på nytt"
  remarks: "Når du kaller InvalidateProperty alle tilknyttede og gjelder <xref:System.Windows.CoerceValueCallback>eller <xref:System.Windows.PropertyChangedCallback>funksjoner registrert for denne avhengighetsegenskapen kan aktiveres.</xref:System.Windows.PropertyChangedCallback> </xref:System.Windows.CoerceValueCallback>       Kaller InvalidateProperty på en egenskap som er det lokale verdisettet må ingen innvirkning fordi verdien for lokale overstyrer andre egenskapen systeminndata, bortsett fra animasjoner. Du kan imidlertid kaller <xref:System.Windows.DependencyObject.ClearValue%2A>, kalle InvalidateProperty.</xref:System.Windows.DependencyObject.ClearValue%2A> Hvis du vil ha mer informasjon, se [avhengighet egenskapen verdien prioriteten](~/add/includes/ajax-current-ext-md.md).       Kaller InvalidateProperty gjelder ikke nødvendigvis for mange avhengighet egenskapen scenarier. Hvis en avhengighetsegenskapen blir gjort ugyldig på grunn av verdiendringer i noen av constituents, egenskapen systemet ugyldiggjøres og evaluerer på nytt avhengighetsegenskapen automatisk. Det er imidlertid fortsatt noen passende scenarioer der InvalidateProperty er nyttig. Spesielt, kan du bruke InvalidateProperty i coerce verdien eller egenskapen endres tilbakeringing for en annen avhengighetsegenskapen. Du kan også bruke InvalidateProperty for å fremtvinge ny evalueringen av en binding mot en datakilde som ikke kunne implementere den anbefalte <xref:System.ComponentModel.INotifyPropertyChanged>varsling mekanisme (kanskje om mye dataklasser som kan ikke utledes fra, eller der datatypen er et statisk medlem).</xref:System.ComponentModel.INotifyPropertyChanged>"
  example:
  - "The following example calls InvalidateProperty on a custom property, whenever properties that are involved in the invalidated property's calculations change. This is an alternative technique to calling the <xref:System.Windows.DependencyObject.CoerceValue%2A> method, because invalidating the property will also call any registered <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A>.  \n  \n [!code-cs[PropertySystemEsoterics#InvalidateProperty](~/add/codesnippet/csharp/PropertySystemEsoterics/SDKSampleLibrary/class1.cs#invalidateproperty)]\n [!code-vb[PropertySystemEsoterics#InvalidateProperty](~/add/codesnippet/visualbasic/PropertySystemEsoterics.sdksamplelibrary/class1.vb#invalidateproperty)]"
  syntax:
    content: public void InvalidateProperty (System.Windows.DependencyProperty dp);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "Den <xref href=&quot;System.Windows.DependencyProperty&quot;> </xref> identifikator for egenskapen for å gjøre."
  overload: System.Windows.DependencyObject.InvalidateProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObject.IsSealed
  id: IsSealed
  parent: System.Windows.DependencyObject
  langs:
  - csharp
  name: IsSealed
  nameWithType: DependencyObject.IsSealed
  fullName: System.Windows.DependencyObject.IsSealed
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Henter en verdi som angir om denne forekomsten er for øyeblikket lukket (skrivebeskyttet)."
  remarks: "Denne verdien settes internt."
  syntax:
    content: public bool IsSealed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis denne forekomsten er lukket; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.DependencyObject.IsSealed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyObject
  langs:
  - csharp
  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)
  nameWithType: DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Aktiveres når gjeldende verdi for en avhengighetsegenskap i denne <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> er oppdatert. Den bestemte avhengighetsegenskapen som endret rapporteres i hendelsesdataene."
  remarks: "Denne metoden er ikke ment å oppdage vanligvis individuelle egenskapsendringer eller utføre invalidations egenskapene fra per tilfelle. OnPropertyChanged er beregnet i stedet for endringer av mønster for generell invalidation hvis informasjon er kjent om bred klassifiseringer over egenskaper. For eksempel endringer i en <xref:System.Windows.Freezable>kanskje endringer i verdityper for den <xref:System.Windows.Freezable>, eller kanskje delegenskaper, der endringene trer i andre <xref:System.Windows.Freezable>referanser.</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Den <xref:System.Windows.Freezable>override implementeringen av OnPropertyChanged bruker intern informasjon til å bestemme om egenskapene er delegenskaper, og har riktige basisklassen logikken for uansett.</xref:System.Windows.Freezable>       OnPropertyChanged aktiveres potensielt mange ganger i løpet av et objekt. Derfor kan du få bedre ytelse for den totale egenskapen systemet hvis du overstyrer metadataene for bestemte egenskaper og deretter legge ved <xref:System.Windows.CoerceValueCallback>eller <xref:System.Windows.PropertyChangedCallback>funksjoner for individuelle egenskaper.</xref:System.Windows.PropertyChangedCallback> </xref:System.Windows.CoerceValueCallback> Du vil bruke denne metoden hvis en <xref:System.Windows.DependencyObject>inneholder et stort antall verdien beslektede avhengighetsegenskaper, eller hvis den inneholder logic som gjengivelse virkemåte som må kjøres på nytt etter flere beslektede tilfeller av egenskapen invalidations.</xref:System.Windows.DependencyObject>"
  syntax:
    content: protected virtual void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "Hendelsesdata som skal inneholde avhengighet egenskapsidentifikator renter, egenskapen metadataene for typen og gammel og ny verdier."
  overload: System.Windows.DependencyObject.OnPropertyChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  id: ReadLocalValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  langs:
  - csharp
  name: ReadLocalValue(DependencyProperty)
  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.ReadLocalValue(DependencyProperty)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Returnerer den lokale verdien i en avhengighetsegenskap hvis den finnes."
  remarks: "Du må bruke <xref:System.Windows.DependencyObject.GetValue%2A>for de vanligste &quot;hente&quot; operasjoner for en avhengighetsegenskapen.</xref:System.Windows.DependencyObject.GetValue%2A> ReadLocalValue returnerer ikke gjeldende verdien for en rekke tilfeller der verdien ble ikke lokalt angitt.       Verdier som er angitt av stiler, oppsett, maler, standardverdien fra metadata eller egenskapen verdien arv ikke regnes lokale verdier. Imidlertid regnes bindinger og andre uttrykk lokale verdier, når de er evaluert.       Når ingen lokale verdi angis, returnerer denne metoden <xref:System.Windows.DependencyProperty.UnsetValue>.</xref:System.Windows.DependencyProperty.UnsetValue>       Hvis den returnerte verdien er annet enn <xref:System.Windows.DependencyProperty.UnsetValue>, du kan spørre metadataene for den forespurte avhengighetsegenskapen å finne ut om det er en mer begrenset type returverdien kan konverteres til.</xref:System.Windows.DependencyProperty.UnsetValue>"
  syntax:
    content: public object ReadLocalValue (System.Windows.DependencyProperty dp);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "Den <xref href=&quot;System.Windows.DependencyProperty&quot;> </xref> identifikator for egenskapen for å hente verdien for."
    return:
      type: System.Object
      description: "Returnerer verdien for lokale, eller verdien sentinel <xref href=&quot;System.Windows.DependencyProperty&quot;> </xref> Hvis ingen lokale verdi er angitt."
  overload: System.Windows.DependencyObject.ReadLocalValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  id: SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  langs:
  - csharp
  name: SetCurrentValue(DependencyProperty,Object)
  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty,Object)
  fullName: System.Windows.DependencyObject.SetCurrentValue(DependencyProperty,Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Angir verdien for en avhengighetsegenskapen uten å endre verdien kilden."
  remarks: "Denne metoden brukes av en komponent som angir verdien for en av sine egne egenskaper programmatisk uten å deaktivere en applikasjon deklarerte bruk av egenskapen. Metoden SetCurrentValue endres effektive verdien for egenskapen, men eksisterende utløsere, databindinger og stiler fortsetter å fungere."
  syntax:
    content: public void SetCurrentValue (System.Windows.DependencyProperty dp, object value);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "Identifikatoren for avhengighet til å angi."
    - id: value
      type: System.Object
      description: "Den nye lokale verdien."
  overload: System.Windows.DependencyObject.SetCurrentValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Forsøkte å endre en skrivebeskyttet avhengighetsegenskapen eller en egenskap i en lukket <xref href=&quot;System.Windows.DependencyObject&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>er ikke av riktig type som er registrert for den <code>dp</code> egenskapen."
  platform:
  - net462
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  id: SetValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  langs:
  - csharp
  name: SetValue(DependencyProperty,Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty,Object)
  fullName: System.Windows.DependencyObject.SetValue(DependencyProperty,Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Angir den lokale verdien avhengighet, angitt av sin avhengighet egenskapen identifier."
  remarks: "Hvis den angitte typen ikke samsvarer med typen som er angitt for avhengighetsegenskapen som opprinnelig ble registrert, er det et unntaket. Den `value` parameteren må alltid angis som riktig type.       Unntak betingelsene potensielt er påvirket av den <xref:System.Windows.DependencyProperty.ValidateValueCallback%2A>tilbakeringing som finnes på avhengighet egenskapsidentifikator for avhengighetsegenskapen settes.</xref:System.Windows.DependencyProperty.ValidateValueCallback%2A> Den angitte verdien kan ellers mislykkes generell kontroll av typen betingelser (for eksempel sende en streng når den opprinnelige typen er dobbel)."
  syntax:
    content: public void SetValue (System.Windows.DependencyProperty dp, object value);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "Identifikatoren for avhengighet til å angi."
    - id: value
      type: System.Object
      description: "Den nye lokale verdien."
  overload: System.Windows.DependencyObject.SetValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Forsøkte å endre en skrivebeskyttet avhengighetsegenskapen eller en egenskap i en lukket <xref href=&quot;System.Windows.DependencyObject&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>er ikke av riktig type som er registrert for den <code>dp</code> egenskapen."
  platform:
  - net462
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  id: SetValue(System.Windows.DependencyPropertyKey,System.Object)
  parent: System.Windows.DependencyObject
  langs:
  - csharp
  name: SetValue(DependencyPropertyKey,Object)
  nameWithType: DependencyObject.SetValue(DependencyPropertyKey,Object)
  fullName: System.Windows.DependencyObject.SetValue(DependencyPropertyKey,Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Angir lokale verdien til en skrivebeskyttet avhengighetsegenskapen, angitt av den <xref href=&quot;System.Windows.DependencyPropertyKey&quot;> </xref> identifikatoren for avhengighetsegenskapen."
  remarks: "Denne signaturen brukes vanligvis når du har angitt verdier for skrivebeskyttet avhengighetsegenskaper som er definert av de egendefinerte klassene. SetValue kalles vanligvis bare fra typen som er registrert at avhengighetsegenskapen som implementerer intern logikken som gir fastslått verdien for avhengighetsegenskapen. Hvis du vil ha mer informasjon, se [egenskaper for skrivebeskyttelse avhengighet](~/add/includes/ajax-current-ext-md.md).       Hvis den angitte typen ikke samsvarer med typen som er angitt for avhengighetsegenskapen som opprinnelig ble registrert, er det et unntaket. Den `value` parameteren må alltid angis som riktig type. Unntak betingelsene potensielt er påvirket av den <xref:System.Windows.DependencyProperty.ValidateValueCallback%2A>tilbakeringing som finnes på avhengighet egenskapsidentifikator for avhengighetsegenskapen settes.</xref:System.Windows.DependencyProperty.ValidateValueCallback%2A>"
  example:
  - "The following example defines a read-only dependency property, along with a `public static readonly` <xref:System.Windows.DependencyProperty> that provides necessary read-only exposure to property consumers, and the get accessor for the [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] wrapper.  \n  \n [!code-cs[WPFAquariumSln#RODP](~/add/codesnippet/csharp/WPFAquariumSln/WPFAquariumObjects/Class1.cs#rodp)]\n [!code-vb[WPFAquariumSln#RODP](~/add/codesnippet/visualbasic/wpfaquariumobjects/class1.vb#rodp)]"
  syntax:
    content: public void SetValue (System.Windows.DependencyPropertyKey key, object value);
    parameters:
    - id: key
      type: System.Windows.DependencyPropertyKey
      description: "Den <xref href=&quot;System.Windows.DependencyPropertyKey&quot;> </xref> identifikator for egenskapen som angis."
    - id: value
      type: System.Object
      description: "Den nye lokale verdien."
  overload: System.Windows.DependencyObject.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  id: ShouldSerializeProperty(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  langs:
  - csharp
  name: ShouldSerializeProperty(DependencyProperty)
  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)
  fullName: System.Windows.DependencyObject.ShouldSerializeProperty(DependencyProperty)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Returnerer en verdi som angir om serialisering prosesser må serialisere verdien for den angitte avhengighetsegenskapen."
  remarks: "Standard implementering returnerer `true` for alle tilfeller der en avhengighetsegenskapen hadde en lokal verdi som er opprettet på <xref:System.Windows.DependencyObject>.</xref:System.Windows.DependencyObject>"
  syntax:
    content: protected virtual bool ShouldSerializeProperty (System.Windows.DependencyProperty dp);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "ID for avhengighetsegenskapen skal serialiseres."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis avhengighetsegenskapen som er oppgitt skal være serialisert av verdien. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.DependencyObject.ShouldSerializeProperty*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: System.Windows.Threading.DispatcherObject
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.DependencyObject.#ctor
  parent: System.Windows.DependencyObject
  isExternal: false
  name: DependencyObject()
  nameWithType: DependencyObject.DependencyObject()
  fullName: System.Windows.DependencyObject.DependencyObject()
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: ClearValue(DependencyProperty)
  nameWithType: DependencyObject.ClearValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.ClearValue(DependencyProperty)
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: ClearValue(DependencyPropertyKey)
  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)
  fullName: System.Windows.DependencyObject.ClearValue(DependencyPropertyKey)
- uid: System.Windows.DependencyPropertyKey
  parent: System.Windows
  isExternal: false
  name: DependencyPropertyKey
  nameWithType: DependencyPropertyKey
  fullName: System.Windows.DependencyPropertyKey
- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: CoerceValue(DependencyProperty)
  nameWithType: DependencyObject.CoerceValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.CoerceValue(DependencyProperty)
- uid: System.Windows.DependencyObject.DependencyObjectType
  parent: System.Windows.DependencyObject
  isExternal: false
  name: DependencyObjectType
  nameWithType: DependencyObject.DependencyObjectType
  fullName: System.Windows.DependencyObject.DependencyObjectType
- uid: System.Windows.DependencyObjectType
  parent: System.Windows
  isExternal: false
  name: DependencyObjectType
  nameWithType: DependencyObjectType
  fullName: System.Windows.DependencyObjectType
- uid: System.Windows.DependencyObject.Equals(System.Object)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: Equals(Object)
  nameWithType: DependencyObject.Equals(Object)
  fullName: System.Windows.DependencyObject.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.DependencyObject.GetHashCode
  parent: System.Windows.DependencyObject
  isExternal: false
  name: GetHashCode()
  nameWithType: DependencyObject.GetHashCode()
  fullName: System.Windows.DependencyObject.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.DependencyObject.GetLocalValueEnumerator
  parent: System.Windows.DependencyObject
  isExternal: false
  name: GetLocalValueEnumerator()
  nameWithType: DependencyObject.GetLocalValueEnumerator()
  fullName: System.Windows.DependencyObject.GetLocalValueEnumerator()
- uid: System.Windows.LocalValueEnumerator
  parent: System.Windows
  isExternal: false
  name: LocalValueEnumerator
  nameWithType: LocalValueEnumerator
  fullName: System.Windows.LocalValueEnumerator
- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetValue(DependencyProperty)
- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: InvalidateProperty(DependencyProperty)
  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)
  fullName: System.Windows.DependencyObject.InvalidateProperty(DependencyProperty)
- uid: System.Windows.DependencyObject.IsSealed
  parent: System.Windows.DependencyObject
  isExternal: false
  name: IsSealed
  nameWithType: DependencyObject.IsSealed
  fullName: System.Windows.DependencyObject.IsSealed
- uid: System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)
  nameWithType: DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.DependencyPropertyChangedEventArgs
  parent: System.Windows
  isExternal: false
  name: DependencyPropertyChangedEventArgs
  nameWithType: DependencyPropertyChangedEventArgs
  fullName: System.Windows.DependencyPropertyChangedEventArgs
- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: ReadLocalValue(DependencyProperty)
  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.ReadLocalValue(DependencyProperty)
- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: SetCurrentValue(DependencyProperty,Object)
  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty,Object)
  fullName: System.Windows.DependencyObject.SetCurrentValue(DependencyProperty,Object)
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: SetValue(DependencyProperty,Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty,Object)
  fullName: System.Windows.DependencyObject.SetValue(DependencyProperty,Object)
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: SetValue(DependencyPropertyKey,Object)
  nameWithType: DependencyObject.SetValue(DependencyPropertyKey,Object)
  fullName: System.Windows.DependencyObject.SetValue(DependencyPropertyKey,Object)
- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: ShouldSerializeProperty(DependencyProperty)
  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)
  fullName: System.Windows.DependencyObject.ShouldSerializeProperty(DependencyProperty)
- uid: System.Windows.DependencyObject.#ctor*
  parent: System.Windows.DependencyObject
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject.DependencyObject
- uid: System.Windows.DependencyObject.ClearValue*
  parent: System.Windows.DependencyObject
  isExternal: false
  name: ClearValue
  nameWithType: DependencyObject.ClearValue
- uid: System.Windows.DependencyObject.CoerceValue*
  parent: System.Windows.DependencyObject
  isExternal: false
  name: CoerceValue
  nameWithType: DependencyObject.CoerceValue
- uid: System.Windows.DependencyObject.DependencyObjectType*
  parent: System.Windows.DependencyObject
  isExternal: false
  name: DependencyObjectType
  nameWithType: DependencyObject.DependencyObjectType
- uid: System.Windows.DependencyObject.Equals*
  parent: System.Windows.DependencyObject
  isExternal: false
  name: Equals
  nameWithType: DependencyObject.Equals
- uid: System.Windows.DependencyObject.GetHashCode*
  parent: System.Windows.DependencyObject
  isExternal: false
  name: GetHashCode
  nameWithType: DependencyObject.GetHashCode
- uid: System.Windows.DependencyObject.GetLocalValueEnumerator*
  parent: System.Windows.DependencyObject
  isExternal: false
  name: GetLocalValueEnumerator
  nameWithType: DependencyObject.GetLocalValueEnumerator
- uid: System.Windows.DependencyObject.GetValue*
  parent: System.Windows.DependencyObject
  isExternal: false
  name: GetValue
  nameWithType: DependencyObject.GetValue
- uid: System.Windows.DependencyObject.InvalidateProperty*
  parent: System.Windows.DependencyObject
  isExternal: false
  name: InvalidateProperty
  nameWithType: DependencyObject.InvalidateProperty
- uid: System.Windows.DependencyObject.IsSealed*
  parent: System.Windows.DependencyObject
  isExternal: false
  name: IsSealed
  nameWithType: DependencyObject.IsSealed
- uid: System.Windows.DependencyObject.OnPropertyChanged*
  parent: System.Windows.DependencyObject
  isExternal: false
  name: OnPropertyChanged
  nameWithType: DependencyObject.OnPropertyChanged
- uid: System.Windows.DependencyObject.ReadLocalValue*
  parent: System.Windows.DependencyObject
  isExternal: false
  name: ReadLocalValue
  nameWithType: DependencyObject.ReadLocalValue
- uid: System.Windows.DependencyObject.SetCurrentValue*
  parent: System.Windows.DependencyObject
  isExternal: false
  name: SetCurrentValue
  nameWithType: DependencyObject.SetCurrentValue
- uid: System.Windows.DependencyObject.SetValue*
  parent: System.Windows.DependencyObject
  isExternal: false
  name: SetValue
  nameWithType: DependencyObject.SetValue
- uid: System.Windows.DependencyObject.ShouldSerializeProperty*
  parent: System.Windows.DependencyObject
  isExternal: false
  name: ShouldSerializeProperty
  nameWithType: DependencyObject.ShouldSerializeProperty
