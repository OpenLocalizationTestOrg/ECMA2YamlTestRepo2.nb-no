### YamlMime:ManagedReference
items:
- uid: System.IO.Ports.SerialPort
  id: SerialPort
  children:
  - System.IO.Ports.SerialPort.#ctor
  - System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)
  - System.IO.Ports.SerialPort.#ctor(System.String)
  - System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)
  - System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)
  - System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  - System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  - System.IO.Ports.SerialPort.BaseStream
  - System.IO.Ports.SerialPort.BaudRate
  - System.IO.Ports.SerialPort.BreakState
  - System.IO.Ports.SerialPort.BytesToRead
  - System.IO.Ports.SerialPort.BytesToWrite
  - System.IO.Ports.SerialPort.CDHolding
  - System.IO.Ports.SerialPort.Close
  - System.IO.Ports.SerialPort.CtsHolding
  - System.IO.Ports.SerialPort.DataBits
  - System.IO.Ports.SerialPort.DataReceived
  - System.IO.Ports.SerialPort.DiscardInBuffer
  - System.IO.Ports.SerialPort.DiscardNull
  - System.IO.Ports.SerialPort.DiscardOutBuffer
  - System.IO.Ports.SerialPort.Dispose(System.Boolean)
  - System.IO.Ports.SerialPort.DsrHolding
  - System.IO.Ports.SerialPort.DtrEnable
  - System.IO.Ports.SerialPort.Encoding
  - System.IO.Ports.SerialPort.ErrorReceived
  - System.IO.Ports.SerialPort.GetPortNames
  - System.IO.Ports.SerialPort.Handshake
  - System.IO.Ports.SerialPort.InfiniteTimeout
  - System.IO.Ports.SerialPort.IsOpen
  - System.IO.Ports.SerialPort.NewLine
  - System.IO.Ports.SerialPort.Open
  - System.IO.Ports.SerialPort.Parity
  - System.IO.Ports.SerialPort.ParityReplace
  - System.IO.Ports.SerialPort.PinChanged
  - System.IO.Ports.SerialPort.PortName
  - System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)
  - System.IO.Ports.SerialPort.ReadBufferSize
  - System.IO.Ports.SerialPort.ReadByte
  - System.IO.Ports.SerialPort.ReadChar
  - System.IO.Ports.SerialPort.ReadExisting
  - System.IO.Ports.SerialPort.ReadLine
  - System.IO.Ports.SerialPort.ReadTimeout
  - System.IO.Ports.SerialPort.ReadTo(System.String)
  - System.IO.Ports.SerialPort.ReceivedBytesThreshold
  - System.IO.Ports.SerialPort.RtsEnable
  - System.IO.Ports.SerialPort.StopBits
  - System.IO.Ports.SerialPort.Write(System.String)
  - System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)
  - System.IO.Ports.SerialPort.WriteBufferSize
  - System.IO.Ports.SerialPort.WriteLine(System.String)
  - System.IO.Ports.SerialPort.WriteTimeout
  langs:
  - csharp
  name: SerialPort
  nameWithType: SerialPort
  fullName: System.IO.Ports.SerialPort
  type: Class
  summary: "Representerer en seriellport ressurs.       For å bla gjennom .NET Framework-kildekode for denne typen, kan du se den [Referansekilde](http://referencesource.microsoft.com/#System/sys/system/io/ports/SerialPort.cs#ae0a3218c6c9f7fe)."
  remarks: "> [!NOTE]> For å vise .NET Framework-kildekode for denne typen, kan du se den [Referansekilde](http://referencesource.microsoft.com/#System/sys/system/io/ports/SerialPort.cs#ae0a3218c6c9f7fe). Du kan bla gjennom kildekode online Last ned referansen i frakoblet modus og gå gjennom datakilder (inkludert oppdateringer) under feilsøking; Se [instruksjonene](http://referencesource.microsoft.com/).       Bruk denne klassen for å kontrollere seriellport-filressurs. Denne klassen gir synkrone og hendelsen datadrevne i/u-tilgang til PIN-kode og break tilstander og tilgang til seriell driveregenskaper. I tillegg funksjonaliteten til denne klassen kan være omsluttet av en intern <xref:System.IO.Stream>objektet tilgjengelig gjennom den <xref:System.IO.Ports.SerialPort.BaseStream%2A>egenskapen og sendt til klasser som bryte, eller bruk flyter.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Stream>       Klassen SerialPort støtter følgende koder: <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, <xref:System.Text.UTF32Encoding>, og koding definert i mscorlib.dll der tegntabellen er mindre enn 50000 eller tegntabellen 54936.</xref:System.Text.UTF32Encoding> </xref:System.Text.UnicodeEncoding> </xref:System.Text.UTF8Encoding> </xref:System.Text.ASCIIEncoding>  Du kan bruke alternative koding, men du må bruke den <xref:System.IO.Ports.SerialPort.ReadByte%2A>eller <xref:System.IO.Ports.SerialPort.Write%2A>metoden og utføre kodingen selv.</xref:System.IO.Ports.SerialPort.Write%2A> </xref:System.IO.Ports.SerialPort.ReadByte%2A>       Du bruker den <xref:System.IO.Ports.SerialPort.GetPortNames%2A>metode for å hente portene som er ugyldig for den gjeldende datamaskinen.</xref:System.IO.Ports.SerialPort.GetPortNames%2A>       Hvis et SerialPort objekt blir blokkert under en leseoperasjon, ikke avbryte tråden. I stedet å lukke grunntallet flyten eller fjerne SerialPort-objektet."
  example:
  - "The following code example demonstrates the use of the SerialPort class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. Both computers must be executing the program to achieve full functionality of this example.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#10](~/add/codesnippet/cpp/t-system.io.ports.serial_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#10](~/add/codesnippet/csharp/t-system.io.ports.serial_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#10](~/add/codesnippet/visualbasic/t-system.io.ports.serial_1.vb)]"
  syntax:
    content: >-
      [System.Diagnostics.MonitoringDescription("SerialPortDesc")]

      public class SerialPort : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor
  id: '#ctor'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort()
  nameWithType: SerialPort.SerialPort()
  fullName: System.IO.Ports.SerialPort.SerialPort()
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> klasse."
  remarks: "Denne konstruktøren bruker standard egenskapsverdier når ingen er angitt. For eksempel den <xref:System.IO.Ports.SerialPort.DataBits%2A>egenskapen standardverdien 8, den <xref:System.IO.Ports.SerialPort.Parity%2A>egenskapen som standard i `None` opplistingsverdien den <xref:System.IO.Ports.SerialPort.StopBits%2A>egenskapen standardverdien 1 og port standardnavnet COM1.</xref:System.IO.Ports.SerialPort.StopBits%2A> </xref:System.IO.Ports.SerialPort.Parity%2A> </xref:System.IO.Ports.SerialPort.DataBits%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/m-system.io.ports.serial_4_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/m-system.io.ports.serial_4_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/m-system.io.ports.serial_4_1.vb)]"
  syntax:
    content: public SerialPort ();
    parameters: []
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)
  id: '#ctor(System.ComponentModel.IContainer)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(IContainer)
  nameWithType: SerialPort.SerialPort(IContainer)
  fullName: System.IO.Ports.SerialPort.SerialPort(IContainer)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> klasse parametersettet med de angitte <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> objektet."
  remarks: "Denne konstruktøren bruker standard egenskapsverdier når ingen er angitt. For eksempel den <xref:System.IO.Ports.SerialPort.DataBits%2A>egenskapen standardverdien 8, den <xref:System.IO.Ports.SerialPort.Parity%2A>egenskapen som standard i `None` opplistingsverdien den <xref:System.IO.Ports.SerialPort.StopBits%2A>egenskapen standardverdien 1 og port standardnavnet COM1.</xref:System.IO.Ports.SerialPort.StopBits%2A> </xref:System.IO.Ports.SerialPort.Parity%2A> </xref:System.IO.Ports.SerialPort.DataBits%2A>"
  syntax:
    content: public SerialPort (System.ComponentModel.IContainer container);
    parameters:
    - id: container
      type: System.ComponentModel.IContainer
      description: "Et grensesnitt til en beholder."
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke den angitte porten, eller det kan ikke åpnes."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(String)
  nameWithType: SerialPort.SerialPort(String)
  fullName: System.IO.Ports.SerialPort.SerialPort(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> klasse med navnet på angitt port."
  remarks: "Bruk denne konstruktøren til å opprette en ny forekomst av den <xref:System.IO.Ports.SerialPort>klasse når du vil angi navnet på porten.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public SerialPort (string portName);
    parameters:
    - id: portName
      type: System.String
      description: "Porten som skal brukes (for eksempel COM1)."
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke den angitte porten, eller det kan ikke åpnes."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(String,Int32)
  nameWithType: SerialPort.SerialPort(String,Int32)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> klasse ved hjelp av den angitte porten navn og overføringshastighet ofte."
  remarks: "Bruk denne konstruktøren til å opprette en ny forekomst av den <xref:System.IO.Ports.SerialPort>klasse når du vil angi navnet på porten og overføringshastigheten.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public SerialPort (string portName, int baudRate);
    parameters:
    - id: portName
      type: System.String
      description: "Porten som skal brukes (for eksempel COM1)."
    - id: baudRate
      type: System.Int32
      description: "Overføringshastighet."
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke den angitte porten, eller det kan ikke åpnes."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)
  id: '#ctor(System.String,System.Int32,System.IO.Ports.Parity)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(String,Int32,Parity)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> klasse ved hjelp av den angitte portnavn overføringshastighet og paritetsbiten."
  remarks: "Bruk denne konstruktøren til å opprette en ny forekomst av den <xref:System.IO.Ports.SerialPort>klasse når du vil angi navnet på porten, overføringshastigheten og paritetsbiten.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity);
    parameters:
    - id: portName
      type: System.String
      description: "Porten som skal brukes (for eksempel COM1)."
    - id: baudRate
      type: System.Int32
      description: "Overføringshastighet."
    - id: parity
      type: System.IO.Ports.Parity
      description: "Én av de <xref:System.IO.Ports.SerialPort.Parity*>verdier.</xref:System.IO.Ports.SerialPort.Parity*>"
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke den angitte porten, eller det kan ikke åpnes."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  id: '#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(String,Int32,Parity,Int32)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity,Int32)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> klasse ved hjelp av den angitte portnavn overføringshastighet, paritetsbit og databiter."
  remarks: "Bruk denne konstruktøren til å opprette en ny forekomst av den <xref:System.IO.Ports.SerialPort>klasse når du vil angi navnet på porten, overføringshastigheten, paritetsbit og databiter.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits);
    parameters:
    - id: portName
      type: System.String
      description: "Porten som skal brukes (for eksempel COM1)."
    - id: baudRate
      type: System.Int32
      description: "Overføringshastighet."
    - id: parity
      type: System.IO.Ports.Parity
      description: "Én av de <xref:System.IO.Ports.SerialPort.Parity*>verdier.</xref:System.IO.Ports.SerialPort.Parity*>"
    - id: dataBits
      type: System.Int32
      description: "Dataverdien biter."
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke den angitte porten, eller det kan ikke åpnes."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  id: '#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(String,Int32,Parity,Int32,StopBits)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity,Int32,StopBits)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity,Int32,StopBits)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> klasse ved hjelp av angitt portnavn, overføringshastighet, paritetsbit, data bits og stoppe biters."
  remarks: "Bruk denne konstruktøren til å opprette en ny forekomst av den <xref:System.IO.Ports.SerialPort>klasse når du vil angi navnet på porten, overføringshastigheten, paritetsbit, data bits og stoppe biters.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits, System.IO.Ports.StopBits stopBits);
    parameters:
    - id: portName
      type: System.String
      description: "Porten som skal brukes (for eksempel COM1)."
    - id: baudRate
      type: System.Int32
      description: "Overføringshastighet."
    - id: parity
      type: System.IO.Ports.Parity
      description: "Én av de <xref:System.IO.Ports.SerialPort.Parity*>verdier.</xref:System.IO.Ports.SerialPort.Parity*>"
    - id: dataBits
      type: System.Int32
      description: "Dataverdien biter."
    - id: stopBits
      type: System.IO.Ports.StopBits
      description: "Én av de <xref:System.IO.Ports.SerialPort.StopBits*>verdier.</xref:System.IO.Ports.SerialPort.StopBits*>"
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke den angitte porten, eller det kan ikke åpnes."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.BaseStream
  id: BaseStream
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: BaseStream
  nameWithType: SerialPort.BaseStream
  fullName: System.IO.Ports.SerialPort.BaseStream
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Henter den underliggende <xref:System.IO.Stream>objekt en <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> objektet.</xref:System.IO.Stream>"
  remarks: "Bruk denne egenskapen for eksplisitte asynkrone i/u-operasjoner eller til å sende <xref:System.IO.Ports.SerialPort>objekt til en <xref:System.IO.Stream>wrapper klassen som <xref:System.IO.StreamWriter>.</xref:System.IO.StreamWriter> </xref:System.IO.Stream> </xref:System.IO.Ports.SerialPort>       Åpne et objekt som er avledet fra abstract seriell port BaseStream returnerer <xref:System.IO.Stream>klassen, og implementerer lese og skrive til metoder ved hjelp av prototyper arvet fra den <xref:System.IO.Stream>klasse: <xref:System.IO.Stream.BeginRead%2A>, <xref:System.IO.Stream.BeginWrite%2A>, <xref:System.IO.Stream.Read%2A>, <xref:System.IO.Stream.ReadByte%2A>, <xref:System.IO.Stream.Write%2A>, og <xref:System.IO.Stream.WriteByte%2A>.</xref:System.IO.Stream.WriteByte%2A> </xref:System.IO.Stream.Write%2A> </xref:System.IO.Stream.ReadByte%2A> </xref:System.IO.Stream.Read%2A> </xref:System.IO.Stream.BeginWrite%2A> </xref:System.IO.Stream.BeginRead%2A> </xref:System.IO.Stream> </xref:System.IO.Stream> Disse metodene kan være nyttig ved sending av en innpakket seriell ressurs til <xref:System.IO.Stream>wrapper klasse.</xref:System.IO.Stream>       På grunn av inaccessibility av innpakket filreferansen den <xref:System.IO.Stream.Length%2A>og <xref:System.IO.Stream.Position%2A>Egenskaper støttes ikke, og <xref:System.IO.Stream.Seek%2A>og <xref:System.IO.Stream.SetLength%2A>metoder støttes ikke.</xref:System.IO.Stream.SetLength%2A> </xref:System.IO.Stream.Seek%2A> </xref:System.IO.Stream.Position%2A> </xref:System.IO.Stream.Length%2A>"
  syntax:
    content: public System.IO.Stream BaseStream { get; }
    return:
      type: System.IO.Stream
      description: "En <xref:System.IO.Stream>objektet.</xref:System.IO.Stream>"
  overload: System.IO.Ports.SerialPort.BaseStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Dataflyten er lukket. Dette kan skje fordi det <> </> *> har ikke blitt kalt eller <> </> *> har blitt kalt."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Det er i et .NET Compact Framework-program og ett av følgende metoder ble kalt: <> </> *> <> </> *> <> </> *> <> </> *> i .NET Compact Framework støtter ikke asynkron modellen med grunntallet dataflyter."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.BaudRate
  id: BaudRate
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: BaudRate
  nameWithType: SerialPort.BaudRate
  fullName: System.IO.Ports.SerialPort.BaudRate
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Henter eller angir den serielle overføringshastigheten."
  remarks: "Overføringshastigheten må støttes av brukerens seriell driver. Standardverdien er 9 600 biter per sekund (byte /)."
  example:
  - "The following example shows how to set the BaudRate property to `9600`.  \n  \n [!code-cs[System.IO.Ports.SerialPort#20](~/add/codesnippet/csharp/p-system.io.ports.serial_3_1.cs)]\n [!code-cpp[System.IO.Ports.SerialPort#20](~/add/codesnippet/cpp/p-system.io.ports.serial_3_1.cpp)]\n [!code-vb[System.IO.Ports.SerialPort#20](~/add/codesnippet/visualbasic/p-system.io.ports.serial_3_1.vb)]  \n  \n The following example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_3_2.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_3_2.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_3_2.vb)]"
  syntax:
    content: public int BaudRate { get; set; }
    return:
      type: System.Int32
      description: "Overføringshastighet."
  overload: System.IO.Ports.SerialPort.BaudRate*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Angitt overføringshastighet er mindre enn eller lik null, eller er større enn den maksimale tillatte overføringshastigheten for enheten."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.BreakState
  id: BreakState
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: BreakState
  nameWithType: SerialPort.BreakState
  fullName: System.IO.Ports.SerialPort.BreakState
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Henter eller angir break signal tilstand."
  remarks: "Tilstanden break signal oppstår når en overføring er utsatt og linjen er plassert i en break-tilstand (alle lav, ingen stop-biters) til frigitt. Hvis du vil angi en break-tilstand, må du angi denne egenskapen `true`. Hvis porten er allerede i en break-tilstand, når egenskapen settes til på nytt `true` ikke føre til et unntak. Det er ikke mulig å skrive til den <xref:System.IO.Ports.SerialPort>objekt under BreakState `true`.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public bool BreakState { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis porten er i en break-tilstanden. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.BreakState*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Dataflyten er lukket. Dette kan skje fordi det <> </> *> har ikke blitt kalt eller <> </> *> har blitt kalt."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.BytesToRead
  id: BytesToRead
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: BytesToRead
  nameWithType: SerialPort.BytesToRead
  fullName: System.IO.Ports.SerialPort.BytesToRead
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Henter antall byte med data i mottaksbufferen."
  remarks: "Mottaksbufferen inkluderer den serielle driveren mottaksbufferen samt intern bufring i den <xref:System.IO.Ports.SerialPort>selve objektet.</xref:System.IO.Ports.SerialPort>       Fordi egenskapen BytesToRead representerer både den <xref:System.IO.Ports.SerialPort>bufferen og bufferen som opprettes av Windows, kan det returnere en høyere verdi enn den <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A>egenskapen som representerer bare Windows-opprettet bufferen.</xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> </xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public int BytesToRead { get; }
    return:
      type: System.Int32
      description: "Antall byte i mottaksbufferen."
  overload: System.IO.Ports.SerialPort.BytesToRead*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Porten er ikke åpen."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.BytesToWrite
  id: BytesToWrite
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: BytesToWrite
  nameWithType: SerialPort.BytesToWrite
  fullName: System.IO.Ports.SerialPort.BytesToWrite
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Henter antall byte med data i sendebufferen."
  remarks: "Sendebufferen inkluderer den serielle driveren sendebufferen samt intern bufring i den <xref:System.IO.Ports.SerialPort>selve objektet.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public int BytesToWrite { get; }
    return:
      type: System.Int32
      description: "Antall byte i sendebufferen."
  overload: System.IO.Ports.SerialPort.BytesToWrite*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Porten er en ugyldig tilstand."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Dataflyten er lukket. Dette kan skje fordi det <> </> *> har ikke blitt kalt eller <> </> *> har blitt kalt."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.CDHolding
  id: CDHolding
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: CDHolding
  nameWithType: SerialPort.CDHolding
  fullName: System.IO.Ports.SerialPort.CDHolding
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Får statusen for linjen operatør oppdage for porten."
  remarks: "Denne egenskapen kan brukes til å overvåke tilstanden til operatør gjenkjenning linjen for en port. Ingen leverandør angir vanligvis at mottakeren har hengt seg og blitt slettet av leverandøren."
  syntax:
    content: public bool CDHolding { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis operatør oppdages; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.CDHolding*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Dataflyten er lukket. Dette kan skje fordi det <> </> *> har ikke blitt kalt eller <> </> *> har blitt kalt."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Close
  id: Close
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Close()
  nameWithType: SerialPort.Close()
  fullName: System.IO.Ports.SerialPort.Close()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Lukker porttilkoblingen, angir du <xref:System.IO.Ports.SerialPort.IsOpen*>egenskapen <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, og disposes for den interne <xref:System.IO.Stream>objektet.</xref:System.IO.Stream> </xref:System.IO.Ports.SerialPort.IsOpen*>"
  remarks: "Kaller denne metoden lukker den <xref:System.IO.Ports.SerialPort>objekt fjerner både mottaket og overføre buffere.</xref:System.IO.Ports.SerialPort> Denne metoden kaller den <xref:System.ComponentModel.Component.Dispose?displayProperty=fullName>metode, som aktiverer den beskyttede <xref:System.IO.Ports.SerialPort.Dispose%28System.Boolean%29?displayProperty=fullName>metoden med den `disposing` parameteren satt til `true`.</xref:System.IO.Ports.SerialPort.Dispose%28System.Boolean%29?displayProperty=fullName> </xref:System.ComponentModel.Component.Dispose?displayProperty=fullName>       Det er best for alle programmer er å vente på noen tidsperiode etter kaller Close-metoden før du prøver å kalle den <xref:System.IO.Ports.SerialPort.Open%2A>metoden porten kan ikke lukkes umiddelbart.</xref:System.IO.Ports.SerialPort.Open%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/m-system.io.ports.serial_5_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/m-system.io.ports.serial_5_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/m-system.io.ports.serial_5_1.vb)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.IO.Ports.SerialPort.Close*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.CtsHolding
  id: CtsHolding
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: CtsHolding
  nameWithType: SerialPort.CtsHolding
  fullName: System.IO.Ports.SerialPort.CtsHolding
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Får statusen for Fjern-Send linjen."
  remarks: "Fjern du vil sende (CTS) linjen er brukt i forespørselen om å sende/Nullstill sende (RTS/CTS) maskinvare-håndtrykk. CTS linjen forespørres av en port før data sendes."
  syntax:
    content: public bool CtsHolding { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis Fjern-Send linjen oppdages; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.CtsHolding*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Dataflyten er lukket. Dette kan skje fordi det <> </> *> har ikke blitt kalt eller <> </> *> har blitt kalt."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DataBits
  id: DataBits
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DataBits
  nameWithType: SerialPort.DataBits
  fullName: System.IO.Ports.SerialPort.DataBits
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Henter eller angir standard lang databiter per byte."
  remarks: "Verdiområdet for denne egenskapen er fra 5 til 8. Standardverdien er 8."
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_7_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_7_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_7_1.vb)]"
  syntax:
    content: public int DataBits { get; set; }
    return:
      type: System.Int32
      description: "Datalengden biter."
  overload: System.IO.Ports.SerialPort.DataBits*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Bits dataverdien er mindre enn 5 eller mer enn 8."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DataReceived
  id: DataReceived
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DataReceived
  nameWithType: SerialPort.DataReceived
  fullName: System.IO.Ports.SerialPort.DataReceived
  type: Event
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Indikerer at data er mottatt via en port som representeres av den <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> objektet."
  remarks: "Datahendelser kan skyldes ett av elementene i den <xref:System.IO.Ports.SerialData>opplisting.</xref:System.IO.Ports.SerialData> Fordi operativsystemet bestemmer om opphøye denne hendelsen eller ikke, kanskje ikke alle paritetsfeil rapporteres.       DataReceived denne hendelsen oppstår også hvis det Eof-tegnet mottas, uansett hvor mange byte intern inndatabufferen og verdien for den <xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A>egenskapen.</xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A>       <xref:System.IO.Ports.SerialPort.PinChanged>, DataReceived, og <xref:System.IO.Ports.SerialPort.ErrorReceived>hendelser kan kalles utenfor gyldig område, og det kan være en liten forsinkelse mellom når underliggende dataflyt rapporteres feil og når hendelsesbehandlingen er utført.</xref:System.IO.Ports.SerialPort.ErrorReceived></xref:System.IO.Ports.SerialPort.PinChanged> Bare én hendelsesbehandling kan kjøres samtidig.       Hendelsen DataReceived garanteres ikke til å være hevet for hver byte mottatt. Bruk av <xref:System.IO.Ports.SerialPort.BytesToRead%2A>til å fastslå hvor mye data som gjenstår for å lese i bufferen.</xref:System.IO.Ports.SerialPort.BytesToRead%2A>       DataReceived denne hendelsen oppstår i en sekundær tråd når data mottas fra den <xref:System.IO.Ports.SerialPort>objektet.</xref:System.IO.Ports.SerialPort> Fordi denne hendelsen oppstår på en sekundær tråd og ikke hovedtråden, prøver å endre enkelte elementer i hovedtråden, for eksempel UI-elementene kan vise en trådmodell unntak. Hvis det er nødvendig for å endre elementer i hovedvinduet <xref:System.Windows.Forms.Form>eller <xref:System.Windows.Forms.Control>, post endringsforespørsler igjen ved hjelp av <xref:System.Windows.Forms.Control.Invoke%2A>, som vil arbeidet på riktig tråden.</xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Form>       Du finner mer informasjon om behandling av hendelser [hendelser](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This example adds a <xref:System.IO.Ports.SerialDataReceivedEventHandler> to DataReceived to read all the available data received on the COM1 port. Note that to test this code it is necessary to have hardware attached to COM1 that will send data.  \n  \n [!code-cs[System.IO.Ports.SerialPort#06](~/add/codesnippet/csharp/e-system.io.ports.serial_1.cs)]\n [!code-cpp[System.IO.Ports.SerialPort#06](~/add/codesnippet/cpp/e-system.io.ports.serial_1.cpp)]\n [!code-vb[System.IO.Ports.SerialPort#06](~/add/codesnippet/visualbasic/e-system.io.ports.serial_1.vb)]"
  syntax:
    content: public event System.IO.Ports.SerialDataReceivedEventHandler DataReceived;
    return:
      type: System.IO.Ports.SerialDataReceivedEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DiscardInBuffer
  id: DiscardInBuffer
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DiscardInBuffer()
  nameWithType: SerialPort.DiscardInBuffer()
  fullName: System.IO.Ports.SerialPort.DiscardInBuffer()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ignorerer data fra den serielle driveren motta bufferen."
  remarks: 'Denne metoden, tilsvarer følgende Visual Basic-kode: `MSComm1.InBufferCount = 0`. Den fjernes mottaksbufferen, men påvirker ikke sender-bufferen.'
  syntax:
    content: public void DiscardInBuffer ();
    parameters: []
  overload: System.IO.Ports.SerialPort.DiscardInBuffer*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Dataflyten er lukket. Dette kan skje fordi det <> </> *> har ikke blitt kalt eller <> </> *> har blitt kalt."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DiscardNull
  id: DiscardNull
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DiscardNull
  nameWithType: SerialPort.DiscardNull
  fullName: System.IO.Ports.SerialPort.DiscardNull
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Henter eller angir en verdi som angir om null byte ignoreres når mellom porten og mottaksbufferen."
  remarks: "Denne verdien vanligvis må være satt til `false`, spesielt for binære overføringer.  Når egenskapen settes `true` kan føre til uventede resultater for UTF32 - og UTF16-kodet byte."
  syntax:
    content: public bool DiscardNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis null byte ignoreres. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.DiscardNull*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Dataflyten er lukket. Dette kan skje fordi det <> </> *> har ikke blitt kalt eller <> </> *> har blitt kalt."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DiscardOutBuffer
  id: DiscardOutBuffer
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DiscardOutBuffer()
  nameWithType: SerialPort.DiscardOutBuffer()
  fullName: System.IO.Ports.SerialPort.DiscardOutBuffer()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ignorerer data fra den serielle driveren sende bufferen."
  remarks: 'Denne metoden, tilsvarer følgende Visual Basic-kode: `MSComm1.OutBufferCount = 0`. Den fjernes sender bufferen, men påvirker ikke mottaksbufferen.'
  syntax:
    content: public void DiscardOutBuffer ();
    parameters: []
  overload: System.IO.Ports.SerialPort.DiscardOutBuffer*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Dataflyten er lukket. Dette kan skje fordi det <> </> *> har ikke blitt kalt eller <> </> *> har blitt kalt."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SerialPort.Dispose(Boolean)
  fullName: System.IO.Ports.SerialPort.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Frigir uforvaltede ressursene som brukes av den <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> og eventuelt frigir administrerte ressurser."
  remarks: "Denne metoden kalles av offentlig <xref:System.ComponentModel.Component.Dispose%2A>metoden og <xref:System.Object.Finalize%2A>metode.</xref:System.Object.Finalize%2A> </xref:System.ComponentModel.Component.Dispose%2A> <xref:System.ComponentModel.Component.Dispose%2A>Aktiverer beskyttede fjerningsmetoden med den `disposing` parameteren satt til `true`.</xref:System.ComponentModel.Component.Dispose%2A> <xref:System.Object.Finalize%2A>Aktiverer avhending med `disposing` satt til `false`.</xref:System.Object.Finalize%2A>       Når den `disposing` parameteren er `true`, denne metoden Frigjør alle ressurser holdes av administrerte objekter som denne <xref:System.IO.Ports.SerialPort>referanser.</xref:System.IO.Ports.SerialPort> Denne metoden starter den <xref:System.ComponentModel.Component.Dispose%2A>metode for hver referert objekt.</xref:System.ComponentModel.Component.Dispose%2A>       Denne metoden Hurtigbuffertømminger og lukker stream-objektet den <xref:System.IO.Ports.SerialPort.BaseStream%2A>egenskapen.</xref:System.IO.Ports.SerialPort.BaseStream%2A>"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>å frigjøre både administrerte og uforvaltede ressurser. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> frigi bare uforvaltede ressurser."
  overload: System.IO.Ports.SerialPort.Dispose*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DsrHolding
  id: DsrHolding
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DsrHolding
  nameWithType: SerialPort.DsrHolding
  fullName: System.IO.Ports.SerialPort.DsrHolding
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Får statusen for datasett klar DSR-signalet."
  remarks: "Denne egenskapen brukes i datasett klar/Data Terminal klar (DSR/DTR) håndtrykk. Datasettet klar DSR-signalet sendes vanligvis av et modem til en port for å angi at den er klar for dataoverføring eller mottak av data."
  syntax:
    content: public bool DsrHolding { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis et datasett klar signal er sendt til port; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.DsrHolding*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Dataflyten er lukket. Dette kan skje fordi det <> </> *> har ikke blitt kalt eller <> </> *> har blitt kalt."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DtrEnable
  id: DtrEnable
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DtrEnable
  nameWithType: SerialPort.DtrEnable
  fullName: System.IO.Ports.SerialPort.DtrEnable
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Henter eller angir en verdi som aktiverer signalet Data Terminal klar (DTR) under seriell kommunikasjon."
  remarks: "Data Terminal klar (DTR) aktiveres vanligvis under XON/XOFF programvarehåndtrykk og forespørsel om å sende/Nullstill sende (RTS/CTS) maskinvare-håndtrykk og modem-kommunikasjon."
  syntax:
    content: public bool DtrEnable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>aktivere Data Terminal klar (DTR); Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.DtrEnable*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Encoding
  id: Encoding
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Encoding
  nameWithType: SerialPort.Encoding
  fullName: System.IO.Ports.SerialPort.Encoding
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Henter eller angir byte kodingen for før og etter overføring konvertering av tekst."
  syntax:
    content: public System.Text.Encoding Encoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "En <xref:System.Text.Encoding>objektet.</xref:System.Text.Encoding> Standard er <xref:System.Text.ASCIIEncoding>.</xref:System.Text.ASCIIEncoding>"
  overload: System.IO.Ports.SerialPort.Encoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Egenskapen koding skulle <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Egenskapen koding skulle koding som ikke er <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, <xref:System.Text.UnicodeEncoding>, én for Windows enkel byte koding eller en av Windows DBCS-koding.</xref:System.Text.UnicodeEncoding> </xref:System.Text.UTF32Encoding> </xref:System.Text.UTF8Encoding> </xref:System.Text.ASCIIEncoding>"
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ErrorReceived
  id: ErrorReceived
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ErrorReceived
  nameWithType: SerialPort.ErrorReceived
  fullName: System.IO.Ports.SerialPort.ErrorReceived
  type: Event
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Angir at det har oppstått en feil med en port som representerer en <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> objektet."
  remarks: "Feil kan skyldes ett av elementene i den <xref:System.IO.Ports.SerialError>opplisting.</xref:System.IO.Ports.SerialError> Fordi operativsystemet bestemmer om opphøye denne hendelsen eller ikke, kanskje ikke alle paritetsfeil rapporteres.       <xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, ErrorReceived hendelser kan kalles utenfor gyldig område, og det kan være en liten forsinkelse mellom når underliggende dataflyt rapporteres feil og når kode kan når hendelsesbehandlingen utføres.</xref:System.IO.Ports.SerialPort.DataReceived></xref:System.IO.Ports.SerialPort.PinChanged> Bare én hendelsesbehandling kan kjøres samtidig.       Hvis det oppstår en paritetsfeil på etterfølgende byte av en dataflyt, legges det en ekstra byte til inndatabufferen med verdien 126.       ErrorReceived denne hendelsen oppstår ved en sekundær tråd når feilmeldingen mottas fra den <xref:System.IO.Ports.SerialPort>objektet.</xref:System.IO.Ports.SerialPort> Fordi denne hendelsen oppstår på en sekundær tråd og ikke hovedtråden, prøver å endre enkelte elementer i hovedtråden, for eksempel UI-elementene kan vise en trådmodell unntak. Hvis det er nødvendig for å endre elementer i hovedvinduet <xref:System.Windows.Forms.Form>eller <xref:System.Windows.Forms.Control>, post endringsforespørsler igjen ved hjelp av <xref:System.Windows.Forms.Control.Invoke%2A>, som vil arbeidet på riktig tråden.</xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Form>       Du finner mer informasjon om behandling av hendelser [hendelser](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.IO.Ports.SerialErrorReceivedEventHandler ErrorReceived;
    return:
      type: System.IO.Ports.SerialErrorReceivedEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.GetPortNames
  id: GetPortNames
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: GetPortNames()
  nameWithType: SerialPort.GetPortNames()
  fullName: System.IO.Ports.SerialPort.GetPortNames()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Henter en matrise av seriellport navn for den gjeldende datamaskinen."
  remarks: "The order of port names returned from GetPortNames is not specified.  \n  \n Use the GetPortNames method to query the current computer for a list of valid serial port names. For example, you can use this method to determine whether COM1 and COM2 are valid serial ports for the current computer.  \n  \n The port names are obtained from the system registry (for example, HKEY_LOCAL_MACHINE\\HARDWARE\\DEVICEMAP\\SERIALCOMM). If the registry contains stale or otherwise incorrect data then the GetPortNames method will return incorrect data."
  example:
  - "The following code example uses the GetPortNames method to display serial port names to the console.  \n  \n [!code-cs[IO.Ports.GetPortNames#1](~/add/codesnippet/csharp/m-system.io.ports.serial_3_1.cs)]\n [!code-cpp[IO.Ports.GetPortNames#1](~/add/codesnippet/cpp/m-system.io.ports.serial_3_1.cpp)]\n [!code-vb[IO.Ports.GetPortNames#1](~/add/codesnippet/visualbasic/m-system.io.ports.serial_3_1.vb)]"
  syntax:
    content: public static string[] GetPortNames ();
    parameters: []
    return:
      type: System.String[]
      description: "En matrise med seriellport navn for den gjeldende datamaskinen."
  overload: System.IO.Ports.SerialPort.GetPortNames*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Seriellport navn kan ikke spørres."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Handshake
  id: Handshake
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Handshake
  nameWithType: SerialPort.Handshake
  fullName: System.IO.Ports.SerialPort.Handshake
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Henter eller angir Handshake-protokollen for seriellport overføring av data ved hjelp av en verdi fra <xref href=&quot;System.IO.Ports.Handshake&quot;> </xref>."
  remarks: "Når håndtrykk brukes, enheten koblet til den <xref:System.IO.Ports.SerialPort>objektet er bedt om å stoppe sending av data når det er minst (<xref:System.IO.Ports.SerialPort.ReadBufferSize%2A>-1024) byte i bufferen.</xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> </xref:System.IO.Ports.SerialPort> Enheten er bedt om å starte sending av data på nytt når det er 1024 eller færre byte i bufferen. Hvis enheten sender data i blokker som er større enn 1024 byte, kan dette føre til overflyt.       Hvis Handshake-egenskapen er satt til <xref:System.IO.Ports.Handshake>og <xref:System.IO.Ports.SerialPort.CtsHolding%2A>er satt til `false`, XOff-tegnet vil ikke bli sendt.</xref:System.IO.Ports.SerialPort.CtsHolding%2A> </xref:System.IO.Ports.Handshake> Hvis <xref:System.IO.Ports.SerialPort.CtsHolding%2A>deretter er satt til `true`, mer data må sendes før XOff-tegnet vil bli sendt.</xref:System.IO.Ports.SerialPort.CtsHolding%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_0_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_0_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_0_1.vb)]"
  syntax:
    content: public System.IO.Ports.Handshake Handshake { get; set; }
    return:
      type: System.IO.Ports.Handshake
      description: "Én av de <xref href=&quot;System.IO.Ports.Handshake&quot;> </xref> verdier. Standard <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.Handshake*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Verdien som ble sendt, er ikke en gyldig verdi i den <xref href=&quot;System.IO.Ports.Handshake&quot;> </xref> opplisting."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.InfiniteTimeout
  id: InfiniteTimeout
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: InfiniteTimeout
  nameWithType: SerialPort.InfiniteTimeout
  fullName: System.IO.Ports.SerialPort.InfiniteTimeout
  type: Field
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Angir at ingen tidsavbrudd må forekomme."
  remarks: "Denne verdien brukes med den <xref:System.IO.Ports.SerialPort.ReadTimeout%2A>og <xref:System.IO.Ports.SerialPort.WriteTimeout%2A>Egenskaper.</xref:System.IO.Ports.SerialPort.WriteTimeout%2A> </xref:System.IO.Ports.SerialPort.ReadTimeout%2A>"
  syntax:
    content: public const int InfiniteTimeout = -1;
    return:
      type: System.Int32
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.IsOpen
  id: IsOpen
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: IsOpen
  nameWithType: SerialPort.IsOpen
  fullName: System.IO.Ports.SerialPort.IsOpen
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Henter en verdi som angir åpen eller lukket statusen for den <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> objektet."
  remarks: "Egenskapen IsOpen sporer om porten er åpen for bruk av oppkalleren, ikke om porten er åpnet av alle applikasjoner på maskinen."
  syntax:
    content: public bool IsOpen { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis serieporten er åpen. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.IsOpen*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Verdien IsOpen sendt <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "IsOpen-verdien som ble sendt er en tom streng (&quot;&quot;)."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.NewLine
  id: NewLine
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: NewLine
  nameWithType: SerialPort.NewLine
  fullName: System.IO.Ports.SerialPort.NewLine
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Henter eller angir verdien som brukes til å tolke slutten av et kall til den <> </> *> og <> </> *> metoder."
  remarks: "Denne egenskapen bestemmer hvilken verdi (byte) definerer slutten av en linje for den <xref:System.IO.Ports.SerialPort.ReadLine%2A>og <xref:System.IO.Ports.SerialPort.WriteLine%2A>metoder.</xref:System.IO.Ports.SerialPort.WriteLine%2A> </xref:System.IO.Ports.SerialPort.ReadLine%2A> Verdien for slutten av linjen er som standard <xref:System.Environment.NewLine%2A>.</xref:System.Environment.NewLine%2A> Du vil endre dette til en annen verdi hvis du arbeider med bestemte seriell enheten bruker en annen verdi på samme måte."
  syntax:
    content: public string NewLine { get; set; }
    return:
      type: System.String
      description: "En verdi som representerer slutten på en linje. Standarden er linjeskifttegn, <xref:System.Environment.NewLine*>.</xref:System.Environment.NewLine*>"
  overload: System.IO.Ports.SerialPort.NewLine*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Egenskapsverdien er tom."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Egenskapsverdien er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Open
  id: Open
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Open()
  nameWithType: SerialPort.Open()
  fullName: System.IO.Ports.SerialPort.Open()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Åpner en ny serieporttilkoblingen."
  remarks: "Bare én åpen tilkobling kan finnes per <xref:System.IO.Ports.SerialPort>objektet.</xref:System.IO.Ports.SerialPort>       Det er best for alle programmer er å vente på noen tidsperiode etter kaller den <xref:System.IO.Ports.SerialPort.Close%2A>metoden før du prøver å kalle metoden Open som porten ikke kan lukkes umiddelbart.</xref:System.IO.Ports.SerialPort.Close%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/m-system.io.ports.serial_2_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/m-system.io.ports.serial_2_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/m-system.io.ports.serial_2_1.vb)]"
  syntax:
    content: public void Open ();
    parameters: []
  overload: System.IO.Ports.SerialPort.Open*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Access is denied to the port.  \n  \n \\- or -  \n  \n The current process, or another process on the system, already has the specified COM port open either by a <xref href=\"System.IO.Ports.SerialPort\"></xref> instance or in unmanaged code."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Én eller flere av egenskapene for denne forekomsten er ugyldig. For eksempel den <> </> *>, <> </> *>, eller <> </> *> egenskaper er ikke gyldige verdier; <> </> *> er mindre enn eller lik null; den <> </> *> eller <> </> *> egenskapen er mindre enn null og ikke <xref href=&quot;System.IO.Ports.SerialPort.InfiniteTimeout&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The port name does not begin with \"COM\".  \n  \n \\- or -  \n  \n The file type of the port is not supported."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den angitte porten på den gjeldende forekomsten av den <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> er allerede åpen."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Parity
  id: Parity
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Parity
  nameWithType: SerialPort.Parity
  fullName: System.IO.Ports.SerialPort.Parity
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Henter eller angir paritetskontroll protokollen."
  remarks: "Paritet er en fremgangsmåte for feilsøking som antall 1s må alltid være den samme – selv eller er et oddetall, for hver gruppe biter som er overført uten feil. I modem til modem kommunikasjon er paritet ofte en av parameterne som må være enige parter for sending og mottak av tredjepartene før overføring kan ta plassere.       Hvis det oppstår en paritetsfeil på etterfølgende byte av en dataflyt, legges det en ekstra byte til inndatabufferen med verdien 126."
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_6_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_6_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_6_1.vb)]"
  syntax:
    content: public System.IO.Ports.Parity Parity { get; set; }
    return:
      type: System.IO.Ports.Parity
      description: "En av opplistingsverdiene som som representerer paritetskontroll protokollen. Standard <xref href=&quot;System.IO.Ports.Parity&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.Parity*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Paritetsverdien sendt er ikke en gyldig verdi i den <xref href=&quot;System.IO.Ports.Parity&quot;> </xref> opplisting."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ParityReplace
  id: ParityReplace
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ParityReplace
  nameWithType: SerialPort.ParityReplace
  fullName: System.IO.Ports.SerialPort.ParityReplace
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Henter eller angir byte som erstatter ugyldige byte i en dataflyt når det oppstår en paritetsfeil."
  remarks: "Hvis verdien er satt til null-tegn, deaktiveres paritet erstatning."
  syntax:
    content: public byte ParityReplace { get; set; }
    return:
      type: System.Byte
      description: "En byte som erstatter ugyldige byte."
  overload: System.IO.Ports.SerialPort.ParityReplace*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.PinChanged
  id: PinChanged
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: PinChanged
  nameWithType: SerialPort.PinChanged
  fullName: System.IO.Ports.SerialPort.PinChanged
  type: Event
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Indikerer at det har oppstått en ikke-data signal-hendelse på port representert av den <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> objektet."
  remarks: "Seriell PIN-kode endret hendelser kan skyldes ett av elementene i den <xref:System.IO.Ports.SerialPinChange>opplisting.</xref:System.IO.Ports.SerialPinChange> Fordi operativsystemet bestemmer om opphøye denne hendelsen eller ikke, kanskje ikke alle paritetsfeil rapporteres. Den nye verdien for PIN-koden er angitt som en del av hendelsen.       PinChanged denne hendelsen oppstår når en <xref:System.IO.Ports.SerialPort>objektet går inn i den <xref:System.IO.Ports.SerialPort.BreakState%2A>, men ikke når porten avslutter <xref:System.IO.Ports.SerialPort.BreakState%2A>.</xref:System.IO.Ports.SerialPort.BreakState%2A> </xref:System.IO.Ports.SerialPort.BreakState%2A> </xref:System.IO.Ports.SerialPort> Dette gjelder ikke for andre verdier i de <xref:System.IO.Ports.SerialPinChange>opplisting.</xref:System.IO.Ports.SerialPinChange>       PinChanged, <xref:System.IO.Ports.SerialPort.DataReceived>, og <xref:System.IO.Ports.SerialPort.ErrorReceived>hendelser kan kalles utenfor gyldig område, og det kan være en liten forsinkelse mellom når underliggende dataflyt rapporteres feil og når hendelsesbehandlingen er utført.</xref:System.IO.Ports.SerialPort.ErrorReceived> </xref:System.IO.Ports.SerialPort.DataReceived> Bare én hendelsesbehandling kan kjøres samtidig.       PinChanged denne hendelsen oppstår ved en sekundær tråd. Fordi denne hendelsen oppstår på en sekundær tråd og ikke hovedtråden, prøver å endre enkelte elementer i hovedtråden, for eksempel UI-elementene kan vise en trådmodell unntak. Hvis det er nødvendig for å endre elementer i hovedvinduet <xref:System.Windows.Forms.Form>eller <xref:System.Windows.Forms.Control>, post endringsforespørsler igjen ved hjelp av <xref:System.Windows.Forms.Control.Invoke%2A>, som vil arbeidet på riktig tråden.</xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Form>       Du finner mer informasjon om behandling av hendelser [hendelser](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.IO.Ports.SerialPinChangedEventHandler PinChanged;
    return:
      type: System.IO.Ports.SerialPinChangedEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.PortName
  id: PortName
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: PortName
  nameWithType: SerialPort.PortName
  fullName: System.IO.Ports.SerialPort.PortName
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Henter eller angir porten for kommunikasjon, inkludert, men ikke begrenset til alle tilgjengelige COM-porter."
  remarks: "En liste over gyldige portnumre navn kan hentes ved hjelp av <xref:System.IO.Ports.SerialPort.GetPortNames%2A>metode.</xref:System.IO.Ports.SerialPort.GetPortNames%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_4_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_4_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_4_1.vb)]"
  syntax:
    content: public string PortName { get; set; }
    return:
      type: System.String
      description: "Kommunikasjonsporten. Standarden er COM1."
  overload: System.IO.Ports.SerialPort.PortName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The PortName property was set to a value with a length of zero.  \n  \n -or-  \n  \n The PortName property was set to a value that starts with \"\\\\\\\\\".  \n  \n -or-  \n  \n The port name was not valid."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Egenskapen PortName skulle <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den angitte porten er åpen."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: SerialPort.Read(Byte[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Viser antall byte fra den <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> inndatabufferen og skriver disse byte til en bytematrise fra den angitte forskyvningen."
  remarks: "Hvis det er nødvendig å bytte mellom lese tekst og lesing av binære data fra dataflyten, velger du en protokoll som definerer nøye grensen mellom teksten og binære data, for eksempel lesing byte og dekoding dataene manuelt.       Fordi den <xref:System.IO.Ports.SerialPort>klassen bufrer data og dataflyten finnes i den <xref:System.IO.Ports.SerialPort.BaseStream%2A>egenskapen ikke, to kan konflikt om hvor mange byte er tilgjengelige for lesing.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  Den <xref:System.IO.Ports.SerialPort.BytesToRead%2A>egenskapen kan tyde på at det byte som leses, men disse byte kan ikke være tilgjengelig for dataflyten finnes i den <xref:System.IO.Ports.SerialPort.BaseStream%2A>egenskapen fordi de har blitt bufret til <xref:System.IO.Ports.SerialPort>klasse.</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>       Metoden lese blokkerer ikke andre operasjoner når antall byte lest er lik `count` , men det finnes fremdeles uleste byte på serieporten."
  syntax:
    content: public int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Bytematrise å skrive inndataene."
    - id: offset
      type: System.Int32
      description: "Forskyvning i `buffer` vil skrive byte."
    - id: count
      type: System.Int32
      description: "Maksimalt antall byte som skal leses. Færre byte er lest Hvis `count` er større enn antall byte i inndatabufferen."
    return:
      type: System.Int32
      description: "Antall byte som leses."
  overload: System.IO.Ports.SerialPort.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Bufferen som ble sendt er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den angitte porten er ikke åpen."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den <code> offset </code> eller <code> count </code> parametere er utenfor gyldig område for den <code> buffer </code> sendes. Either <code>offset</code> or <code>count</code> is less than zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>pluss <code>count</code> er større enn lengden på den <code>buffer</code>."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "Ingen byte var tilgjengelige lese."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)
  id: Read(System.Char[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Read(Char[],Int32,Int32)
  nameWithType: SerialPort.Read(Char[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Read(Char[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Viser antall tegn fra den <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> inndatabufferen og skriver dem til en matrise med tegn fra angitte forskyvningen."
  remarks: "Bruk denne metoden for lesing tegn fra serieporten.       Hvis det er nødvendig å bytte mellom lese tekst og lesing av binære data fra dataflyten, velger du en protokoll som definerer nøye grensen mellom teksten og binære data, for eksempel lesing byte og dekoding dataene manuelt.       Fordi den <xref:System.IO.Ports.SerialPort>klassen bufrer data og dataflyten finnes i den <xref:System.IO.Ports.SerialPort.BaseStream%2A>egenskapen ikke, to kan konflikt om hvor mange tegn som er tilgjengelige for lesing.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  Den <xref:System.IO.Ports.SerialPort.BytesToRead%2A>egenskapen kan tyde på at det tegn til å lese, men disse tegnene er ikke kanskje tilgjengelig for dataflyten finnes i den <xref:System.IO.Ports.SerialPort.BaseStream%2A>egenskapen fordi de har blitt bufret til <xref:System.IO.Ports.SerialPort>klasse.</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>       Metoden lese blokkerer ikke andre operasjoner når antall byte lest er lik `count` , men det finnes fremdeles uleste byte på serieporten."
  syntax:
    content: public int Read (char[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Tegn matrisen til å skrive inndataene."
    - id: offset
      type: System.Int32
      description: "Forskyvning i `buffer` vil skrive tegnene."
    - id: count
      type: System.Int32
      description: "Maksimalt antall tegn som skal leses. Færre tegn lese Hvis `count` er større enn antallet tegn i inndatabufferen."
    return:
      type: System.Int32
      description: "Antall tegn er lest."
  overload: System.IO.Ports.SerialPort.Read*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code> plus <code>count</code> is greater than the length of the buffer.  \n  \n \\- or -  \n  \n <code>count</code> is 1 and there is a surrogate character in the buffer."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>buffer</code> passed is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den <code> offset </code> eller <code> count </code> parametere er utenfor gyldig område for den <code> buffer </code> sendes. Either <code>offset</code> or <code>count</code> is less than zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den angitte porten er ikke åpen."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "Ingen tegn er tilgjengelig for lesing."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadBufferSize
  id: ReadBufferSize
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadBufferSize
  nameWithType: SerialPort.ReadBufferSize
  fullName: System.IO.Ports.SerialPort.ReadBufferSize
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Henter eller angir størrelsen på den <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> inndatabufferen."
  remarks: "Egenskapen ReadBufferSize ignorerer verdien som er mindre enn 4096.       Fordi egenskapen ReadBufferSize representerer bare Windows-opprettet bufferen, kan det returnere en lavere verdi enn den <xref:System.IO.Ports.SerialPort.BytesToRead%2A>egenskapen som representerer både den <xref:System.IO.Ports.SerialPort>bufferen og opprettet på Windows-bufferen.</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>"
  syntax:
    content: public int ReadBufferSize { get; set; }
    return:
      type: System.Int32
      description: "Bufferstørrelsen, i byte. Standardverdien er 4096; Maksimumsverdien er med et positivt int eller 2147483647."
  overload: System.IO.Ports.SerialPort.ReadBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "ReadBufferSize er verdi mindre enn eller lik null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Egenskapen ReadBufferSize ble angitt under dataflyten er åpen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Egenskapen ReadBufferSize ble satt til en verdi for oddetall."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadByte
  id: ReadByte
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadByte()
  nameWithType: SerialPort.ReadByte()
  fullName: System.IO.Ports.SerialPort.ReadByte()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Synkron leser en byte fra den <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> inndatabufferen."
  remarks: "Denne metoden leser en byte.       Vær forsiktig ved ReadByte og <xref:System.IO.Ports.SerialPort.ReadChar%2A>sammen.</xref:System.IO.Ports.SerialPort.ReadChar%2A> Veksle mellom at byte og lese tegn, kan det føre til at ekstra data leses og/eller andre utilsiktede virkemåte. Hvis det er nødvendig å bytte mellom lese tekst og lesing av binære data fra dataflyten, velger du en protokoll som definerer nøye grensen mellom teksten og binære data, for eksempel lesing byte og dekoding dataene manuelt.      > [!NOTE] > Fordi den <xref:System.IO.Ports.SerialPort>klassen bufrer data og dataflyten finnes i den <xref:System.IO.Ports.SerialPort.BaseStream%2A>egenskapen ikke, to kan konflikt om hvor mange byte er tilgjengelige for lesing.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  Den <xref:System.IO.Ports.SerialPort.BytesToRead%2A>egenskapen kan tyde på at det byte som leses, men disse byte kan ikke være tilgjengelig for dataflyten finnes i den <xref:System.IO.Ports.SerialPort.BaseStream%2A>egenskapen fordi de har blitt bufret til <xref:System.IO.Ports.SerialPort>klasse.</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>"
  syntax:
    content: public int ReadByte ();
    parameters: []
    return:
      type: System.Int32
      description: "Byte, endres til en <xref:System.Int32>, eller -1 Hvis slutten på dataflyten er lest.</xref:System.Int32>"
  overload: System.IO.Ports.SerialPort.ReadByte*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den angitte porten er ikke åpen."
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "The operation did not complete before the time-out period ended.  \n  \n \\- or -  \n  \n No byte was read."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadChar
  id: ReadChar
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadChar()
  nameWithType: SerialPort.ReadChar()
  fullName: System.IO.Ports.SerialPort.ReadChar()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Leser synkront ett tegn fra den <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> inndatabufferen."
  remarks: "Denne metoden leser en fullstendig tegn som er basert på kodingen.       Vær forsiktig ved <xref:System.IO.Ports.SerialPort.ReadByte%2A>og ReadChar sammen.</xref:System.IO.Ports.SerialPort.ReadByte%2A> Veksle mellom at byte og lese tegn, kan det føre til at ekstra data leses og/eller andre utilsiktede virkemåte. Hvis det er nødvendig å bytte mellom lese tekst og lesing av binære data fra dataflyten, velger du en protokoll som definerer nøye grensen mellom teksten og binære data, for eksempel lesing byte og dekoding dataene manuelt.      > [!NOTE] > Fordi den <xref:System.IO.Ports.SerialPort>klassen bufrer data og dataflyten finnes i den <xref:System.IO.Ports.SerialPort.BaseStream%2A>egenskapen ikke, to kan konflikt om hvor mange byte er tilgjengelige for lesing.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  Den <xref:System.IO.Ports.SerialPort.BytesToRead%2A>egenskapen kan tyde på at det byte som leses, men disse byte kan ikke være tilgjengelig for dataflyten finnes i den <xref:System.IO.Ports.SerialPort.BaseStream%2A>egenskapen fordi de har blitt bufret til <xref:System.IO.Ports.SerialPort>klasse.</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>"
  syntax:
    content: public int ReadChar ();
    parameters: []
    return:
      type: System.Int32
      description: "Tegnet som ble lest."
  overload: System.IO.Ports.SerialPort.ReadChar*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den angitte porten er ikke åpen."
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "The operation did not complete before the time-out period ended.  \n  \n \\- or -  \n  \n No character was available in the allotted time-out period."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadExisting
  id: ReadExisting
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadExisting()
  nameWithType: SerialPort.ReadExisting()
  fullName: System.IO.Ports.SerialPort.ReadExisting()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Leser alle umiddelbart tilgjengelige byte, basert på kodingen, både dataflyten og inndatabufferen av den <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> objektet."
  remarks: "Denne metoden returnerer innholdet i dataflyten og intern buffer med den <xref:System.IO.Ports.SerialPort>objektet som en streng.</xref:System.IO.Ports.SerialPort> Denne metoden brukes ikke et tidsavbrudd. Merk at denne metoden kan la etterfølgende emnet byte i den interne bufferen, noe som gjør det <xref:System.IO.Ports.SerialPort.BytesToRead%2A>verdi større enn null.</xref:System.IO.Ports.SerialPort.BytesToRead%2A>       Hvis det er nødvendig å bytte mellom lese tekst og lesing av binære data fra dataflyten, velger du en protokoll som definerer nøye grensen mellom teksten og binære data, for eksempel lesing byte og dekoding dataene manuelt.      > [!NOTE] > Den <xref:System.IO.Ports.SerialPort>klassen bufrer data, men objektet dataflyten finnes i den <xref:System.IO.Ports.SerialPort.BaseStream%2A?displayProperty=fullName>egenskapen finnes ikke.</xref:System.IO.Ports.SerialPort.BaseStream%2A?displayProperty=fullName> </xref:System.IO.Ports.SerialPort> Derfor den <xref:System.IO.Ports.SerialPort>-objektet og dataflyten objektet avvike for antall byte som er tilgjengelige for lesing.</xref:System.IO.Ports.SerialPort> Når byte bufret til det <xref:System.IO.Ports.SerialPort>objektet i <xref:System.IO.Ports.SerialPort.BytesToRead%2A>egenskapen inkluderer disse byte i verdien; imidlertid disse byte kan ikke være tilgjengelig for dataflyten finnes i den <xref:System.IO.Ports.SerialPort.BaseStream%2A>egenskapen.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A> </xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public string ReadExisting ();
    parameters: []
    return:
      type: System.String
      description: "Innholdet i dataflyten og inndatabufferen av den <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> objektet."
  overload: System.IO.Ports.SerialPort.ReadExisting*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den angitte porten er ikke åpen."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadLine
  id: ReadLine
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadLine()
  nameWithType: SerialPort.ReadLine()
  fullName: System.IO.Ports.SerialPort.ReadLine()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Leser opptil den <xref:System.IO.Ports.SerialPort.NewLine*>verdien i inndatabufferen.</xref:System.IO.Ports.SerialPort.NewLine*>"
  remarks: "Legg merke til at mens denne metoden ikke returnerer den <xref:System.IO.Ports.SerialPort.NewLine%2A>verdien av <xref:System.IO.Ports.SerialPort.NewLine%2A>verdien er fjernet fra inndatabufferen.</xref:System.IO.Ports.SerialPort.NewLine%2A> </xref:System.IO.Ports.SerialPort.NewLine%2A>       Som standard blokkerer metoden ReadLine før du har mottatt en linje. Hvis dette problemet er uønsket, angi <xref:System.IO.Ports.SerialPort.ReadTimeout%2A>egenskapen til en ikke - nullverdi tvinge metoden ReadLine skal returneres en <xref:System.TimeoutException>Hvis en linje er ikke tilgjengelig på port.</xref:System.TimeoutException> </xref:System.IO.Ports.SerialPort.ReadTimeout%2A>       Hvis det er nødvendig å bytte mellom lese tekst og lesing av binære data fra dataflyten, velger du en protokoll som definerer nøye grensen mellom teksten og binære data, for eksempel lesing byte og dekoding dataene manuelt.      > [!NOTE] > Fordi den <xref:System.IO.Ports.SerialPort>klassen bufrer data og dataflyten finnes i den <xref:System.IO.Ports.SerialPort.BaseStream%2A>egenskapen ikke, to kan konflikt om hvor mange byte er tilgjengelige for lesing.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  Den <xref:System.IO.Ports.SerialPort.BytesToRead%2A>egenskapen kan tyde på at det byte som leses, men disse byte kan ikke være tilgjengelig for dataflyten finnes i den <xref:System.IO.Ports.SerialPort.BaseStream%2A>egenskapen fordi de har blitt bufret til <xref:System.IO.Ports.SerialPort>klasse.</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/m-system.io.ports.serial_0_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/m-system.io.ports.serial_0_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/m-system.io.ports.serial_0_1.vb)]"
  syntax:
    content: public string ReadLine ();
    parameters: []
    return:
      type: System.String
      description: "Innholdet i inndatabufferen frem til den første forekomsten av en <xref:System.IO.Ports.SerialPort.NewLine*>verdi.</xref:System.IO.Ports.SerialPort.NewLine*>"
  overload: System.IO.Ports.SerialPort.ReadLine*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den angitte porten er ikke åpen."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "The operation did not complete before the time-out period ended.  \n  \n \\- or -  \n  \n No bytes were read."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadTimeout
  id: ReadTimeout
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadTimeout
  nameWithType: SerialPort.ReadTimeout
  fullName: System.IO.Ports.SerialPort.ReadTimeout
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Henter eller angir antall millisekunder før et tidsavbrudd oppstår når en leseoperasjon ikke fullført."
  remarks: "Les Tidsavbruddverdien ble opprinnelig angitt ved 500 millisekunder i kommunikasjon Win32. Denne egenskapen kan du angir denne verdien. Tidsavbruddet kan være satt til en verdi større enn null eller satt til <xref:System.IO.Ports.SerialPort.InfiniteTimeout>, da ingen tidsavbrudd oppstår.</xref:System.IO.Ports.SerialPort.InfiniteTimeout> <xref:System.IO.Ports.SerialPort.InfiniteTimeout>er standard.</xref:System.IO.Ports.SerialPort.InfiniteTimeout>      > [!NOTE] > Brukere av den uforvaltede `COMMTIMEOUTS` strukturen forventer å angi verdien for tidsavbrudd for null for å skjule tidsavbrudd. Hvis du vil skjule tidsavbrudd med egenskapen ReadTimeout imidlertid at du må angi <xref:System.IO.Ports.SerialPort.InfiniteTimeout>.</xref:System.IO.Ports.SerialPort.InfiniteTimeout>       Denne egenskapen påvirker ikke det <xref:System.IO.Stream.BeginRead%2A>metode for dataflyten som ble returnert av den <xref:System.IO.Ports.SerialPort.BaseStream%2A>egenskapen.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Stream.BeginRead%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_1_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_1_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_1_1.vb)]"
  syntax:
    content: public int ReadTimeout { get; set; }
    return:
      type: System.Int32
      description: "Antall millisekunder før et tidsavbrudd oppstår når en leseoperasjon ikke fullført."
  overload: System.IO.Ports.SerialPort.ReadTimeout*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Les Tidsavbruddverdien er mindre enn null og ikke er lik <xref href=&quot;System.IO.Ports.SerialPort.InfiniteTimeout&quot;> </xref>."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadTo(System.String)
  id: ReadTo(System.String)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadTo(String)
  nameWithType: SerialPort.ReadTo(String)
  fullName: System.IO.Ports.SerialPort.ReadTo(String)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Leser en streng frem til den angitte <code> value </code> i inndatabufferen."
  remarks: "Denne metoden leser en streng frem til den angitte `value`. Mens den returnerte strengen ikke inneholder den `value`, `value` er fjernet fra inndatabufferen.       Hvis det er nødvendig å bytte mellom lese tekst og lesing av binære data fra dataflyten, velger du en protokoll som definerer nøye grensen mellom teksten og binære data, for eksempel lesing byte og dekoding dataene manuelt.      > [!NOTE] > Fordi den <xref:System.IO.Ports.SerialPort>klassen bufrer data og dataflyten finnes i den <xref:System.IO.Ports.SerialPort.BaseStream%2A>egenskapen ikke, to kan konflikt om hvor mange byte er tilgjengelige for lesing.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  Den <xref:System.IO.Ports.SerialPort.BytesToRead%2A>egenskapen kan tyde på at det byte som leses, men disse byte kan ikke være tilgjengelig for dataflyten finnes i den <xref:System.IO.Ports.SerialPort.BaseStream%2A>egenskapen fordi de har blitt bufret til <xref:System.IO.Ports.SerialPort>klasse.</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>"
  syntax:
    content: public string ReadTo (string value);
    parameters:
    - id: value
      type: System.String
      description: "En verdi som angir hvor leseoperasjonen stopper."
    return:
      type: System.String
      description: "Innholdet i inndatabufferen frem til den angitte <code> value </code>."
  overload: System.IO.Ports.SerialPort.ReadTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Lengden på den <code> value </code> parameteren er 0."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den angitte porten er ikke åpen."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "Operasjonen ble ikke fullført før tidsavbruddet ble avsluttet."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReceivedBytesThreshold
  id: ReceivedBytesThreshold
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReceivedBytesThreshold
  nameWithType: SerialPort.ReceivedBytesThreshold
  fullName: System.IO.Ports.SerialPort.ReceivedBytesThreshold
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Henter eller angir antall byte i intern inndatabufferen før en <xref href=&quot;System.IO.Ports.SerialPort.DataReceived&quot;> </xref> inntreffer."
  remarks: "Den <xref:System.IO.Ports.SerialPort.DataReceived>denne hendelsen oppstår også hvis en <xref:System.IO.Ports.SerialData>tegn er mottatt uavhengig antall byte i intern inndatabufferen og verdien for egenskapen ReceivedBytesThreshold.</xref:System.IO.Ports.SerialData> </xref:System.IO.Ports.SerialPort.DataReceived>"
  syntax:
    content: public int ReceivedBytesThreshold { get; set; }
    return:
      type: System.Int32
      description: "Antall byte i intern inndatabufferen før en <xref href=&quot;System.IO.Ports.SerialPort.DataReceived&quot;> </xref> hendelsen startes. Standard er 1."
  overload: System.IO.Ports.SerialPort.ReceivedBytesThreshold*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "ReceivedBytesThreshold-verdien er mindre enn eller lik null."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.RtsEnable
  id: RtsEnable
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: RtsEnable
  nameWithType: SerialPort.RtsEnable
  fullName: System.IO.Ports.SerialPort.RtsEnable
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Henter eller angir en verdi som angir om forespørselen om å sende (RTS) signal aktiveres under seriell kommunikasjon."
  remarks: "Forespørselen om å overføre (RTS) signal brukes vanligvis forespørselen om å sende/Fjern for å sende (RTS/CTS) maskinvare-håndtrykk."
  syntax:
    content: public bool RtsEnable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>aktivere forespørselen om å overføre (RTS); Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.RtsEnable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Verdien for egenskapen ingen tilgang ble angi eller hente mens den <xref:System.IO.Ports.SerialPort.Handshake*>er satt til den <xref href=&quot;System.IO.Ports.Handshake&quot;> </xref> verdien eller <xref href=&quot;System.IO.Ports.Handshake&quot;> </xref> verdi.</xref:System.IO.Ports.SerialPort.Handshake*>"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.StopBits
  id: StopBits
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: StopBits
  nameWithType: SerialPort.StopBits
  fullName: System.IO.Ports.SerialPort.StopBits
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Henter eller angir standard antall stopbits per byte."
  remarks: "Standardverdien for StopBits er <xref:System.IO.Ports.StopBits>.</xref:System.IO.Ports.StopBits>       Den <xref:System.IO.Ports.StopBits?displayProperty=fullName>verdien støttes ikke.</xref:System.IO.Ports.StopBits?displayProperty=fullName>"
  example:
  - "The following example shows how to set the StopBits property to `One`.  \n  \n [!code-cs[System.IO.Ports.SerialPort#20](~/add/codesnippet/csharp/p-system.io.ports.serial_2_1.cs)]\n [!code-cpp[System.IO.Ports.SerialPort#20](~/add/codesnippet/cpp/p-system.io.ports.serial_2_1.cpp)]\n [!code-vb[System.IO.Ports.SerialPort#20](~/add/codesnippet/visualbasic/p-system.io.ports.serial_2_1.vb)]  \n  \n The following example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_2_2.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_2_2.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_2_2.vb)]"
  syntax:
    content: public System.IO.Ports.StopBits StopBits { get; set; }
    return:
      type: System.IO.Ports.StopBits
      description: "Én av de <xref href=&quot;System.IO.Ports.StopBits&quot;> </xref> verdier."
  overload: System.IO.Ports.SerialPort.StopBits*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Verdien StopBits <xref href=&quot;System.IO.Ports.StopBits&quot;> </xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Write(System.String)
  id: Write(System.String)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Write(String)
  nameWithType: SerialPort.Write(String)
  fullName: System.IO.Ports.SerialPort.Write(String)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Skriver den angitte strengen serieporten."
  remarks: "Bruk denne metoden hvis du vil skrive en streng som output til seriellport.       Hvis det er for mange byte i utdatabufferen og <xref:System.IO.Ports.SerialPort.Handshake%2A>er satt til <xref:System.IO.Ports.Handshake>vil <xref:System.IO.Ports.SerialPort>objekt kan generere en <xref:System.ServiceProcess.TimeoutException>mens den venter på enheten for å kunne godta flere data.</xref:System.ServiceProcess.TimeoutException> </xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.Handshake> </xref:System.IO.Ports.SerialPort.Handshake%2A>       Som standard <xref:System.IO.Ports.SerialPort>bruker <xref:System.Text.ASCIIEncoding>til kode tegnene.</xref:System.Text.ASCIIEncoding> </xref:System.IO.Ports.SerialPort> <xref:System.Text.ASCIIEncoding>koder alle tegn som er større enn 127 som (char) 63 eller &quot;?&quot;.</xref:System.Text.ASCIIEncoding> For å støtte flere tegn i dette området, kan du angi <xref:System.IO.Ports.SerialPort.Encoding%2A>til <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, eller <xref:System.Text.UnicodeEncoding>.</xref:System.Text.UnicodeEncoding> </xref:System.Text.UTF32Encoding> </xref:System.Text.UTF8Encoding> </xref:System.IO.Ports.SerialPort.Encoding%2A>"
  syntax:
    content: public void Write (string text);
    parameters:
    - id: text
      type: System.String
      description: "Strengen for utdata."
  overload: System.IO.Ports.SerialPort.Write*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den angitte porten er ikke åpen."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>str</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "Operasjonen ble ikke fullført før tidsavbruddet ble avsluttet."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: SerialPort.Write(Byte[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Skriver et angitt antall byte serieporten bruker data fra en buffer."
  remarks: "Bruk denne metoden hvis du ønsker å skrive til en byte buffer til å opprette utdata til seriellport.       Hvis det er for mange byte i utdatabufferen og <xref:System.IO.Ports.SerialPort.Handshake%2A>er satt til <xref:System.IO.Ports.Handshake>vil <xref:System.IO.Ports.SerialPort>objekt kan generere en <xref:System.ServiceProcess.TimeoutException>mens den venter på enheten for å kunne godta flere data.</xref:System.ServiceProcess.TimeoutException> </xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.Handshake> </xref:System.IO.Ports.SerialPort.Handshake%2A>       Som standard <xref:System.IO.Ports.SerialPort>bruker <xref:System.Text.ASCIIEncoding>til kode tegnene.</xref:System.Text.ASCIIEncoding> </xref:System.IO.Ports.SerialPort> <xref:System.Text.ASCIIEncoding>koder alle tegn som er større enn 127 som (char) 63 eller &quot;?&quot;.</xref:System.Text.ASCIIEncoding> For å støtte flere tegn i dette området, kan du angi <xref:System.IO.Ports.SerialPort.Encoding%2A>til <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, eller <xref:System.Text.UnicodeEncoding>.</xref:System.Text.UnicodeEncoding> </xref:System.Text.UTF32Encoding> </xref:System.Text.UTF8Encoding> </xref:System.IO.Ports.SerialPort.Encoding%2A>"
  syntax:
    content: public void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Bytematrise som inneholder dataene for å skrive til porten."
    - id: offset
      type: System.Int32
      description: "Nullbasert byteforskyvning i den `buffer` parameteren der du vil kopiere byte til porten."
    - id: count
      type: System.Int32
      description: "Antall byte som skrive."
  overload: System.IO.Ports.SerialPort.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>buffer</code> passed is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den angitte porten er ikke åpen."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den <code> offset </code> eller <code> count </code> parametere er utenfor gyldig område for den <code> buffer </code> sendes. Either <code>offset</code> or <code>count</code> is less than zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>pluss <code>count</code> er større enn lengden på den <code>buffer</code>."
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "Operasjonen ble ikke fullført før tidsavbruddet ble avsluttet."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)
  id: Write(System.Char[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Write(Char[],Int32,Int32)
  nameWithType: SerialPort.Write(Char[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Write(Char[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Skriver et angitt antall tegn til serieporten bruker data fra en buffer."
  remarks: "Bruk denne metoden hvis du ønsker å skrive til en tegn buffer til å opprette utdata til seriellport.       Hvis det er for mange byte i utdatabufferen og <xref:System.IO.Ports.SerialPort.Handshake%2A>er satt til <xref:System.IO.Ports.Handshake>vil <xref:System.IO.Ports.SerialPort>objekt kan generere en <xref:System.ServiceProcess.TimeoutException>mens den venter på enheten for å kunne godta flere data.</xref:System.ServiceProcess.TimeoutException> </xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.Handshake> </xref:System.IO.Ports.SerialPort.Handshake%2A>       Som standard <xref:System.IO.Ports.SerialPort>bruker <xref:System.Text.ASCIIEncoding>til kode tegnene.</xref:System.Text.ASCIIEncoding> </xref:System.IO.Ports.SerialPort> <xref:System.Text.ASCIIEncoding>koder alle tegn som er større enn 127 som (char) 63 eller &quot;?&quot;.</xref:System.Text.ASCIIEncoding> For å støtte flere tegn i dette området, kan du angi <xref:System.IO.Ports.SerialPort.Encoding%2A>til <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, eller <xref:System.Text.UnicodeEncoding>.</xref:System.Text.UnicodeEncoding> </xref:System.Text.UTF32Encoding> </xref:System.Text.UTF8Encoding> </xref:System.IO.Ports.SerialPort.Encoding%2A>"
  syntax:
    content: public void Write (char[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Tegnmatrise som inneholder dataene for å skrive til porten."
    - id: offset
      type: System.Int32
      description: "Nullbasert byteforskyvning i den `buffer` parameteren der du vil kopiere byte til porten."
    - id: count
      type: System.Int32
      description: "Antallet tegn du skriver."
  overload: System.IO.Ports.SerialPort.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>buffer</code> passed is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den angitte porten er ikke åpen."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den <code> offset </code> eller <code> count </code> parametere er utenfor gyldig område for den <code> buffer </code> sendes. Either <code>offset</code> or <code>count</code> is less than zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>pluss <code>count</code> er større enn lengden på den <code>buffer</code>."
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "Operasjonen ble ikke fullført før tidsavbruddet ble avsluttet."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.WriteBufferSize
  id: WriteBufferSize
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: WriteBufferSize
  nameWithType: SerialPort.WriteBufferSize
  fullName: System.IO.Ports.SerialPort.WriteBufferSize
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Henter eller angir størrelsen på utdatabufferen seriellport."
  remarks: "Egenskapen WriteBufferSize ignorerer verdien som er mindre enn 2048."
  syntax:
    content: public int WriteBufferSize { get; set; }
    return:
      type: System.Int32
      description: "Størrelsen på utdatabufferen. Standard er 2048."
  overload: System.IO.Ports.SerialPort.WriteBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "WriteBufferSize-verdien er mindre enn eller lik null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Egenskapen WriteBufferSize ble angitt under dataflyten er åpen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Egenskapen WriteBufferSize ble satt til en verdi for oddetall."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: SerialPort.WriteLine(String)
  fullName: System.IO.Ports.SerialPort.WriteLine(String)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Skriver den angitte strengen og <xref:System.IO.Ports.SerialPort.NewLine*>verdi til utdatabufferen.</xref:System.IO.Ports.SerialPort.NewLine*>"
  remarks: "Hvis det finnes for mange byte i inndatabufferen og <xref:System.IO.Ports.SerialPort.Handshake%2A>er satt til <xref:System.IO.Ports.Handshake>vil <xref:System.IO.Ports.SerialPort>objekt kan generere en <xref:System.ServiceProcess.TimeoutException>mens den venter på enheten for å kunne godta flere data.</xref:System.ServiceProcess.TimeoutException> </xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.Handshake> </xref:System.IO.Ports.SerialPort.Handshake%2A>       Skriftlig utdataene inneholder den <xref:System.IO.Ports.SerialPort.NewLine%2A>streng.</xref:System.IO.Ports.SerialPort.NewLine%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/m-system.io.ports.serial_1_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/m-system.io.ports.serial_1_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/m-system.io.ports.serial_1_1.vb)]"
  syntax:
    content: public void WriteLine (string text);
    parameters:
    - id: text
      type: System.String
      description: "Strengen som skal skrive til utdatabufferen."
  overload: System.IO.Ports.SerialPort.WriteLine*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>str</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den angitte porten er ikke åpen."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "Metoden WriteLine kan ikke skrive til dataflyten."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.WriteTimeout
  id: WriteTimeout
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: WriteTimeout
  nameWithType: SerialPort.WriteTimeout
  fullName: System.IO.Ports.SerialPort.WriteTimeout
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Henter eller angir antall millisekunder før et tidsavbrudd oppstår når en skriveoperasjon ikke fullført."
  remarks: "Verdien for tidsavbrudd for skriving ble opprinnelig angitt ved 500 millisekunder i kommunikasjon Win32. Denne egenskapen kan du angir denne verdien. Tidsavbruddet kan være satt til en verdi større enn null eller satt til <xref:System.IO.Ports.SerialPort.InfiniteTimeout>, da ingen tidsavbrudd oppstår.</xref:System.IO.Ports.SerialPort.InfiniteTimeout> <xref:System.IO.Ports.SerialPort.InfiniteTimeout>er standard.</xref:System.IO.Ports.SerialPort.InfiniteTimeout>      > [!NOTE] > Brukere av den uforvaltede `COMMTIMEOUTS` strukturen forventer å angi verdien for tidsavbrudd for null for å skjule tidsavbrudd. Hvis du vil skjule tidsavbrudd med egenskapen WriteTimeout imidlertid at du må angi <xref:System.IO.Ports.SerialPort.InfiniteTimeout>.</xref:System.IO.Ports.SerialPort.InfiniteTimeout>       Denne egenskapen påvirker ikke det <xref:System.IO.Stream.BeginWrite%2A>metode for dataflyten som ble returnert av den <xref:System.IO.Ports.SerialPort.BaseStream%2A>egenskapen.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Stream.BeginWrite%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_5_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_5_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_5_1.vb)]"
  syntax:
    content: public int WriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "Antall millisekunder før et tidsavbrudd forekommer. Standard <xref href=&quot;System.IO.Ports.SerialPort.InfiniteTimeout&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.WriteTimeout*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "WriteTimeout-verdien er mindre enn null og ikke er lik <xref href=&quot;System.IO.Ports.SerialPort.InfiniteTimeout&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.TimeoutException
  isExternal: true
  name: System.TimeoutException
- uid: System.ServiceProcess.TimeoutException
  parent: System.ServiceProcess
  isExternal: false
  name: TimeoutException
  nameWithType: TimeoutException
  fullName: System.ServiceProcess.TimeoutException
- uid: System.IO.Ports.SerialPort.#ctor
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort()
  nameWithType: SerialPort.SerialPort()
  fullName: System.IO.Ports.SerialPort.SerialPort()
- uid: System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(IContainer)
  nameWithType: SerialPort.SerialPort(IContainer)
  fullName: System.IO.Ports.SerialPort.SerialPort(IContainer)
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.IO.Ports.SerialPort.#ctor(System.String)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(String)
  nameWithType: SerialPort.SerialPort(String)
  fullName: System.IO.Ports.SerialPort.SerialPort(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(String,Int32)
  nameWithType: SerialPort.SerialPort(String,Int32)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(String,Int32,Parity)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity)
- uid: System.IO.Ports.Parity
  parent: System.IO.Ports
  isExternal: false
  name: Parity
  nameWithType: Parity
  fullName: System.IO.Ports.Parity
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(String,Int32,Parity,Int32)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity,Int32)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity,Int32)
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(String,Int32,Parity,Int32,StopBits)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity,Int32,StopBits)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity,Int32,StopBits)
- uid: System.IO.Ports.StopBits
  parent: System.IO.Ports
  isExternal: false
  name: StopBits
  nameWithType: StopBits
  fullName: System.IO.Ports.StopBits
- uid: System.IO.Ports.SerialPort.BaseStream
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BaseStream
  nameWithType: SerialPort.BaseStream
  fullName: System.IO.Ports.SerialPort.BaseStream
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.Ports.SerialPort.BaudRate
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BaudRate
  nameWithType: SerialPort.BaudRate
  fullName: System.IO.Ports.SerialPort.BaudRate
- uid: System.IO.Ports.SerialPort.BreakState
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BreakState
  nameWithType: SerialPort.BreakState
  fullName: System.IO.Ports.SerialPort.BreakState
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Ports.SerialPort.BytesToRead
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BytesToRead
  nameWithType: SerialPort.BytesToRead
  fullName: System.IO.Ports.SerialPort.BytesToRead
- uid: System.IO.Ports.SerialPort.BytesToWrite
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BytesToWrite
  nameWithType: SerialPort.BytesToWrite
  fullName: System.IO.Ports.SerialPort.BytesToWrite
- uid: System.IO.Ports.SerialPort.CDHolding
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: CDHolding
  nameWithType: SerialPort.CDHolding
  fullName: System.IO.Ports.SerialPort.CDHolding
- uid: System.IO.Ports.SerialPort.Close
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Close()
  nameWithType: SerialPort.Close()
  fullName: System.IO.Ports.SerialPort.Close()
- uid: System.IO.Ports.SerialPort.CtsHolding
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: CtsHolding
  nameWithType: SerialPort.CtsHolding
  fullName: System.IO.Ports.SerialPort.CtsHolding
- uid: System.IO.Ports.SerialPort.DataBits
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DataBits
  nameWithType: SerialPort.DataBits
  fullName: System.IO.Ports.SerialPort.DataBits
- uid: System.IO.Ports.SerialPort.DataReceived
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DataReceived
  nameWithType: SerialPort.DataReceived
  fullName: System.IO.Ports.SerialPort.DataReceived
- uid: System.IO.Ports.SerialDataReceivedEventHandler
  parent: System.IO.Ports
  isExternal: false
  name: SerialDataReceivedEventHandler
  nameWithType: SerialDataReceivedEventHandler
  fullName: System.IO.Ports.SerialDataReceivedEventHandler
- uid: System.IO.Ports.SerialPort.DiscardInBuffer
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardInBuffer()
  nameWithType: SerialPort.DiscardInBuffer()
  fullName: System.IO.Ports.SerialPort.DiscardInBuffer()
- uid: System.IO.Ports.SerialPort.DiscardNull
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardNull
  nameWithType: SerialPort.DiscardNull
  fullName: System.IO.Ports.SerialPort.DiscardNull
- uid: System.IO.Ports.SerialPort.DiscardOutBuffer
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardOutBuffer()
  nameWithType: SerialPort.DiscardOutBuffer()
  fullName: System.IO.Ports.SerialPort.DiscardOutBuffer()
- uid: System.IO.Ports.SerialPort.Dispose(System.Boolean)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SerialPort.Dispose(Boolean)
  fullName: System.IO.Ports.SerialPort.Dispose(Boolean)
- uid: System.IO.Ports.SerialPort.DsrHolding
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DsrHolding
  nameWithType: SerialPort.DsrHolding
  fullName: System.IO.Ports.SerialPort.DsrHolding
- uid: System.IO.Ports.SerialPort.DtrEnable
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DtrEnable
  nameWithType: SerialPort.DtrEnable
  fullName: System.IO.Ports.SerialPort.DtrEnable
- uid: System.IO.Ports.SerialPort.Encoding
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Encoding
  nameWithType: SerialPort.Encoding
  fullName: System.IO.Ports.SerialPort.Encoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.IO.Ports.SerialPort.ErrorReceived
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ErrorReceived
  nameWithType: SerialPort.ErrorReceived
  fullName: System.IO.Ports.SerialPort.ErrorReceived
- uid: System.IO.Ports.SerialErrorReceivedEventHandler
  parent: System.IO.Ports
  isExternal: false
  name: SerialErrorReceivedEventHandler
  nameWithType: SerialErrorReceivedEventHandler
  fullName: System.IO.Ports.SerialErrorReceivedEventHandler
- uid: System.IO.Ports.SerialPort.GetPortNames
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: GetPortNames()
  nameWithType: SerialPort.GetPortNames()
  fullName: System.IO.Ports.SerialPort.GetPortNames()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Ports.SerialPort.Handshake
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Handshake
  nameWithType: SerialPort.Handshake
  fullName: System.IO.Ports.SerialPort.Handshake
- uid: System.IO.Ports.Handshake
  parent: System.IO.Ports
  isExternal: false
  name: Handshake
  nameWithType: Handshake
  fullName: System.IO.Ports.Handshake
- uid: System.IO.Ports.SerialPort.InfiniteTimeout
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: InfiniteTimeout
  nameWithType: SerialPort.InfiniteTimeout
  fullName: System.IO.Ports.SerialPort.InfiniteTimeout
- uid: System.IO.Ports.SerialPort.IsOpen
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: IsOpen
  nameWithType: SerialPort.IsOpen
  fullName: System.IO.Ports.SerialPort.IsOpen
- uid: System.IO.Ports.SerialPort.NewLine
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: NewLine
  nameWithType: SerialPort.NewLine
  fullName: System.IO.Ports.SerialPort.NewLine
- uid: System.IO.Ports.SerialPort.Open
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Open()
  nameWithType: SerialPort.Open()
  fullName: System.IO.Ports.SerialPort.Open()
- uid: System.IO.Ports.SerialPort.Parity
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Parity
  nameWithType: SerialPort.Parity
  fullName: System.IO.Ports.SerialPort.Parity
- uid: System.IO.Ports.SerialPort.ParityReplace
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ParityReplace
  nameWithType: SerialPort.ParityReplace
  fullName: System.IO.Ports.SerialPort.ParityReplace
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.IO.Ports.SerialPort.PinChanged
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: PinChanged
  nameWithType: SerialPort.PinChanged
  fullName: System.IO.Ports.SerialPort.PinChanged
- uid: System.IO.Ports.SerialPinChangedEventHandler
  parent: System.IO.Ports
  isExternal: false
  name: SerialPinChangedEventHandler
  nameWithType: SerialPinChangedEventHandler
  fullName: System.IO.Ports.SerialPinChangedEventHandler
- uid: System.IO.Ports.SerialPort.PortName
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: PortName
  nameWithType: SerialPort.PortName
  fullName: System.IO.Ports.SerialPort.PortName
- uid: System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: SerialPort.Read(Byte[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Read(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Read(Char[],Int32,Int32)
  nameWithType: SerialPort.Read(Char[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Read(Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Ports.SerialPort.ReadBufferSize
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadBufferSize
  nameWithType: SerialPort.ReadBufferSize
  fullName: System.IO.Ports.SerialPort.ReadBufferSize
- uid: System.IO.Ports.SerialPort.ReadByte
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadByte()
  nameWithType: SerialPort.ReadByte()
  fullName: System.IO.Ports.SerialPort.ReadByte()
- uid: System.IO.Ports.SerialPort.ReadChar
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadChar()
  nameWithType: SerialPort.ReadChar()
  fullName: System.IO.Ports.SerialPort.ReadChar()
- uid: System.IO.Ports.SerialPort.ReadExisting
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadExisting()
  nameWithType: SerialPort.ReadExisting()
  fullName: System.IO.Ports.SerialPort.ReadExisting()
- uid: System.IO.Ports.SerialPort.ReadLine
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadLine()
  nameWithType: SerialPort.ReadLine()
  fullName: System.IO.Ports.SerialPort.ReadLine()
- uid: System.IO.Ports.SerialPort.ReadTimeout
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadTimeout
  nameWithType: SerialPort.ReadTimeout
  fullName: System.IO.Ports.SerialPort.ReadTimeout
- uid: System.IO.Ports.SerialPort.ReadTo(System.String)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadTo(String)
  nameWithType: SerialPort.ReadTo(String)
  fullName: System.IO.Ports.SerialPort.ReadTo(String)
- uid: System.IO.Ports.SerialPort.ReceivedBytesThreshold
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReceivedBytesThreshold
  nameWithType: SerialPort.ReceivedBytesThreshold
  fullName: System.IO.Ports.SerialPort.ReceivedBytesThreshold
- uid: System.IO.Ports.SerialPort.RtsEnable
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: RtsEnable
  nameWithType: SerialPort.RtsEnable
  fullName: System.IO.Ports.SerialPort.RtsEnable
- uid: System.IO.Ports.SerialPort.StopBits
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: StopBits
  nameWithType: SerialPort.StopBits
  fullName: System.IO.Ports.SerialPort.StopBits
- uid: System.IO.Ports.SerialPort.Write(System.String)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Write(String)
  nameWithType: SerialPort.Write(String)
  fullName: System.IO.Ports.SerialPort.Write(String)
- uid: System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: SerialPort.Write(Byte[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Write(Byte[],Int32,Int32)
- uid: System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Write(Char[],Int32,Int32)
  nameWithType: SerialPort.Write(Char[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Write(Char[],Int32,Int32)
- uid: System.IO.Ports.SerialPort.WriteBufferSize
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteBufferSize
  nameWithType: SerialPort.WriteBufferSize
  fullName: System.IO.Ports.SerialPort.WriteBufferSize
- uid: System.IO.Ports.SerialPort.WriteLine(System.String)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteLine(String)
  nameWithType: SerialPort.WriteLine(String)
  fullName: System.IO.Ports.SerialPort.WriteLine(String)
- uid: System.IO.Ports.SerialPort.WriteTimeout
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteTimeout
  nameWithType: SerialPort.WriteTimeout
  fullName: System.IO.Ports.SerialPort.WriteTimeout
- uid: System.IO.Ports.SerialPort.#ctor*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort
  nameWithType: SerialPort.SerialPort
- uid: System.IO.Ports.SerialPort.BaseStream*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BaseStream
  nameWithType: SerialPort.BaseStream
- uid: System.IO.Ports.SerialPort.BaudRate*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BaudRate
  nameWithType: SerialPort.BaudRate
- uid: System.IO.Ports.SerialPort.BreakState*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BreakState
  nameWithType: SerialPort.BreakState
- uid: System.IO.Ports.SerialPort.BytesToRead*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BytesToRead
  nameWithType: SerialPort.BytesToRead
- uid: System.IO.Ports.SerialPort.BytesToWrite*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BytesToWrite
  nameWithType: SerialPort.BytesToWrite
- uid: System.IO.Ports.SerialPort.CDHolding*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: CDHolding
  nameWithType: SerialPort.CDHolding
- uid: System.IO.Ports.SerialPort.Close*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Close
  nameWithType: SerialPort.Close
- uid: System.IO.Ports.SerialPort.CtsHolding*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: CtsHolding
  nameWithType: SerialPort.CtsHolding
- uid: System.IO.Ports.SerialPort.DataBits*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DataBits
  nameWithType: SerialPort.DataBits
- uid: System.IO.Ports.SerialPort.DiscardInBuffer*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardInBuffer
  nameWithType: SerialPort.DiscardInBuffer
- uid: System.IO.Ports.SerialPort.DiscardNull*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardNull
  nameWithType: SerialPort.DiscardNull
- uid: System.IO.Ports.SerialPort.DiscardOutBuffer*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardOutBuffer
  nameWithType: SerialPort.DiscardOutBuffer
- uid: System.IO.Ports.SerialPort.Dispose*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Dispose
  nameWithType: SerialPort.Dispose
- uid: System.IO.Ports.SerialPort.DsrHolding*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DsrHolding
  nameWithType: SerialPort.DsrHolding
- uid: System.IO.Ports.SerialPort.DtrEnable*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DtrEnable
  nameWithType: SerialPort.DtrEnable
- uid: System.IO.Ports.SerialPort.Encoding*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Encoding
  nameWithType: SerialPort.Encoding
- uid: System.IO.Ports.SerialPort.GetPortNames*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: GetPortNames
  nameWithType: SerialPort.GetPortNames
- uid: System.IO.Ports.SerialPort.Handshake*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Handshake
  nameWithType: SerialPort.Handshake
- uid: System.IO.Ports.SerialPort.IsOpen*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: IsOpen
  nameWithType: SerialPort.IsOpen
- uid: System.IO.Ports.SerialPort.NewLine*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: NewLine
  nameWithType: SerialPort.NewLine
- uid: System.IO.Ports.SerialPort.Open*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Open
  nameWithType: SerialPort.Open
- uid: System.IO.Ports.SerialPort.Parity*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Parity
  nameWithType: SerialPort.Parity
- uid: System.IO.Ports.SerialPort.ParityReplace*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ParityReplace
  nameWithType: SerialPort.ParityReplace
- uid: System.IO.Ports.SerialPort.PortName*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: PortName
  nameWithType: SerialPort.PortName
- uid: System.IO.Ports.SerialPort.Read*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Read
  nameWithType: SerialPort.Read
- uid: System.IO.Ports.SerialPort.ReadBufferSize*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadBufferSize
  nameWithType: SerialPort.ReadBufferSize
- uid: System.IO.Ports.SerialPort.ReadByte*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadByte
  nameWithType: SerialPort.ReadByte
- uid: System.IO.Ports.SerialPort.ReadChar*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadChar
  nameWithType: SerialPort.ReadChar
- uid: System.IO.Ports.SerialPort.ReadExisting*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadExisting
  nameWithType: SerialPort.ReadExisting
- uid: System.IO.Ports.SerialPort.ReadLine*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadLine
  nameWithType: SerialPort.ReadLine
- uid: System.IO.Ports.SerialPort.ReadTimeout*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadTimeout
  nameWithType: SerialPort.ReadTimeout
- uid: System.IO.Ports.SerialPort.ReadTo*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadTo
  nameWithType: SerialPort.ReadTo
- uid: System.IO.Ports.SerialPort.ReceivedBytesThreshold*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReceivedBytesThreshold
  nameWithType: SerialPort.ReceivedBytesThreshold
- uid: System.IO.Ports.SerialPort.RtsEnable*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: RtsEnable
  nameWithType: SerialPort.RtsEnable
- uid: System.IO.Ports.SerialPort.StopBits*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: StopBits
  nameWithType: SerialPort.StopBits
- uid: System.IO.Ports.SerialPort.Write*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Write
  nameWithType: SerialPort.Write
- uid: System.IO.Ports.SerialPort.WriteBufferSize*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteBufferSize
  nameWithType: SerialPort.WriteBufferSize
- uid: System.IO.Ports.SerialPort.WriteLine*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteLine
  nameWithType: SerialPort.WriteLine
- uid: System.IO.Ports.SerialPort.WriteTimeout*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteTimeout
  nameWithType: SerialPort.WriteTimeout
