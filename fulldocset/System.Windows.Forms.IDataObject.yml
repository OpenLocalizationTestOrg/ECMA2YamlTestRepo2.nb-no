### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.IDataObject
  id: IDataObject
  children:
  - System.Windows.Forms.IDataObject.GetData(System.String)
  - System.Windows.Forms.IDataObject.GetData(System.Type)
  - System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  - System.Windows.Forms.IDataObject.GetFormats
  - System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  - System.Windows.Forms.IDataObject.SetData(System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  langs:
  - csharp
  name: IDataObject
  nameWithType: IDataObject
  fullName: System.Windows.Forms.IDataObject
  type: Interface
  summary: "Har en uavhengig av formatet for overføring av data."
  remarks: "Den `IDataObject` grensesnittet brukes av den <xref:System.Windows.Forms.Clipboard>klassen og dra og slipp-operasjoner.</xref:System.Windows.Forms.Clipboard>       Når implementert i en klasse, Tillat metodene IDataObject brukeren å lagre data i flere formater i en forekomst av klassen. Lagring av data i mer enn ett format øker sannsynlig at et målprogram, der du ikke kan kjenner, formatkravene kan hente lagrede dataene. Hvis du vil lagre data i en forekomst av IDataObject, kan du kalle den <xref:System.Windows.Forms.IDataObject.SetData%2A>metoden og angi dataformat i den `format` parameteren.</xref:System.Windows.Forms.IDataObject.SetData%2A> Angi den `autoConvert` parameter `false` Hvis du ikke vil lagrede data som skal konverteres til et annet format, når de hentes. Aktivere <xref:System.Windows.Forms.IDataObject.SetData%2A>flere ganger på én forekomst av IDataObject å lagre data i mer enn ett format.</xref:System.Windows.Forms.IDataObject.SetData%2A>       Du hente lagrede data fra en IDataObject ved å kalle den <xref:System.Windows.Forms.IDataObject.GetData%2A>metoden og å angi dataene formatere i den `format` parameteren.</xref:System.Windows.Forms.IDataObject.GetData%2A> Angi den `autoConvert` parameter `false` til å hente data som er lagret i det angitte formatet. Hvis du vil konvertere de lagrede dataene til det angitte formatet, kan du angi `autoConvert` til `true`, eller du ikke bruke `autoConvert`.       Bruk følgende IDataObject til å fastslå formatene for dataene som er lagret i en IDataObject.      -Kall i <xref:System.Windows.Forms.IDataObject.GetFormats%2A>metode for å hente en matrise av formatene som dataene som er tilgjengelige.</xref:System.Windows.Forms.IDataObject.GetFormats%2A> Angi den `autoConvert` parameter `false` å hente bare formatene dataene lagres. Alle formater dataene er tilgjengelige angi `autoConvert` til `true`, eller du ikke bruke denne parameteren.      -Kall i <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>metode for å finne ut om lagrede data er tilgjengelig i et bestemt format.</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Hvis du ikke vil lagrede data som skal konverteres til det angitte formatet, angi den `autoConvert` parameter `false`.       Se den <xref:System.Windows.Forms.DataObject>klasse for implementering av dette grensesnittet.</xref:System.Windows.Forms.DataObject> Se den <xref:System.Windows.Forms.DataFormats>klasse for det forhåndsdefinerte <xref:System.Windows.Forms.Clipboard>datoformater.</xref:System.Windows.Forms.Clipboard> </xref:System.Windows.Forms.DataFormats>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IDataObject
  implements: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.String)
  id: GetData(System.String)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(String)
  nameWithType: IDataObject.GetData(String)
  fullName: System.Windows.Forms.IDataObject.GetData(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Henter data som er knyttet til det angitte dataformatet."
  remarks: "Hvis denne metoden ikke kan finne data i det angitte formatet, forsøker å Konverter dataene til formatet. Hvis dataene ikke kan konverteres til det angitte formatet, metoden returnerer `null`.       Å avgjøre om dataene er knyttet til, eller kan konverteres til et format, kall <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>før du kaller <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Kall <xref:System.Windows.Forms.IDataObject.GetFormats%2A>en liste over gyldige formater for dataene som er lagret i denne forekomsten.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Data kan konverteres til et annet format hvis den er lagret som konvertering er tillatt å angi, og hvis det forespurte formatet er kompatibel med det lagrede formatet. For eksempel data som er lagret som Unicode kan konvertere til tekst.       Hvis en implementering av denne metoden, kan du se <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject,` to demonstrate the use of the `GetData` method. The method is used to retrieve the data stored in `myDataObject`, which is associated with the `Text` format. The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.  \n  \n [!code-cpp[GetData1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_9_1.cpp)]\n [!code-cs[GetData1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_9_1.cs)]\n [!code-vb[GetData1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_9_1.vb)]"
  syntax:
    content: public object GetData (string format);
    parameters:
    - id: format
      type: System.String
      description: "Formatet for dataene som skal hentes. Se <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> for forhåndsdefinerte formater."
    return:
      type: System.Object
      description: "Data som er tilknyttet det angitte formatet eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.Type)
  id: GetData(System.Type)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(Type)
  nameWithType: IDataObject.GetData(Type)
  fullName: System.Windows.Forms.IDataObject.GetData(Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Henter data som er knyttet til den angitte klassen typeformatet."
  remarks: "Hvis denne metoden ikke kan finne data i det angitte formatet, forsøker å Konverter dataene til formatet. Hvis dataene ikke kan konverteres til det angitte formatet, metoden returnerer `null`.       Å avgjøre om dataene er knyttet til, eller kan konverteres til et format, kall <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>før du kaller <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Kall <xref:System.Windows.Forms.IDataObject.GetFormats%2A>en liste over gyldige formater for dataene som er lagret i denne forekomsten.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Data kan konverteres til et annet format hvis den er lagret som konvertering er tillatt å angi, og hvis det forespurte formatet er kompatibel med det lagrede formatet. For eksempel data som er lagret som Unicode kan konvertere til tekst.       Hvis en implementering av denne metoden, kan du se <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method. The method is used to retrieve the data stored in `myObject`, which is associated with a specific type, `myType`. The type of the retrieved data is displayed in a message box. The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[GetData2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_4_1.cpp)]\n [!code-cs[GetData2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_4_1.cs)]\n [!code-vb[GetData2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_4_1.vb)]"
  syntax:
    content: public object GetData (Type format);
    parameters:
    - id: format
      type: System.Type
      description: "En <xref:System.Type>som representerer formatet for dataene som skal hentes.</xref:System.Type> Se <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> for forhåndsdefinerte formater."
    return:
      type: System.Object
      description: "Data som er tilknyttet det angitte formatet eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  id: GetData(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(String,Boolean)
  nameWithType: IDataObject.GetData(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetData(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Henter data som er knyttet til det angitte dataformatet ved hjelp av en boolsk verdi om skal Konverter dataene til formatet."
  remarks: "Hvis den `autoConvert` parameteren er `true` og denne metoden kan ikke finne data i det angitte formatet, forsøker å konvertere data til formatet. Hvis dataene ikke kan konverteres til det angitte formatet eller dataene ble lagret med den `autoConvert` parameteren satt til `false`, metoden returnerer `null`.       Hvis den `autoConvert` parameteren er `false`, denne metoden returnerer data i det angitte formatet eller `null` Hvis det finnes ingen data i dette formatet.       Hvis du vil finne ut om dataene er knyttet til og kan konverteres til et format, kan du kalle <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>før du ringer GetData.</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Kall <xref:System.Windows.Forms.IDataObject.GetFormats%2A>en liste over gyldige formater for dataene som er lagret i denne forekomsten.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Data kan konverteres til et annet format hvis den er lagret som konvertering er tillatt å angi, og hvis det forespurte formatet er kompatibel med det lagrede formatet. For eksempel data som er lagret som Unicode kan konvertere til tekst.       Hvis en implementering av denne metoden, kan du se <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method. The example retrieves the data stored in a `DataObject`, using the `autoConvert` parameter to specify whether or not to convert the data format. First, `myDataObject` is created with text data. Then the example tries twice to retrieve the data. In the first trial, it specifies its format as a string and sets the `autoConvert` parameter to `false`. This trial fails, and the result is displayed in a message box labeled \"Message #1.\" In the second trial, the example retrieves the same data with the `autoConvert` parameter set to `true`. This trial succeeds, and the result is displayed in a message box labeled \"Message #2.\" The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetData3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_14_1.cs)]\n [!code-cpp[GetData3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_14_1.cpp)]\n [!code-vb[GetData3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_14_1.vb)]"
  syntax:
    content: public object GetData (string format, bool autoConvert);
    parameters:
    - id: format
      type: System.String
      description: "Formatet for dataene som skal hentes. Se <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> for forhåndsdefinerte formater."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ikke konvertere datatypen til det angitte formatet. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Data som er tilknyttet det angitte formatet eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  id: GetDataPresent(System.String)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(String)
  nameWithType: IDataObject.GetDataPresent(String)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Bestemmer om data som er lagret i denne forekomsten er knyttet til og kan konverteres til det angitte formatet."
  remarks: "Kalle denne metoden for å fastslå om det finnes et format i dette <xref:System.Windows.Forms.DataObject>før du kaller <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.DataObject> Kall <xref:System.Windows.Forms.IDataObject.GetFormats%2A>for formatene som er tilgjengelige i denne forekomsten.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Data kan konverteres til et annet format hvis den er lagret som konvertering er tillatt å angi, og hvis det forespurte formatet er kompatibel med det lagrede formatet. For eksempel data som er lagret som Unicode kan konvertere til tekst.       Hvis en implementering av denne metoden, kan du se <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a data object using a string and the `Text` format. Then it verifies that the data is present in the `Text` format and displays the results in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[GetDataPresent1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_12_1.vb)]\n [!code-cs[GetDataPresent1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_12_1.cs)]\n [!code-cpp[GetDataPresent1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_12_1.cpp)]"
  syntax:
    content: public bool GetDataPresent (string format);
    parameters:
    - id: format
      type: System.String
      description: "Formatet for skal kontrolleres. Se <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> for forhåndsdefinerte formater."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis data som er lagret i denne forekomsten er knyttet til, eller kan konverteres til det angitte formatet. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  id: GetDataPresent(System.Type)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(Type)
  nameWithType: IDataObject.GetDataPresent(Type)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Bestemmer om data som er lagret i denne forekomsten er knyttet til og kan konverteres til det angitte formatet."
  remarks: "Kalle denne metoden for å fastslå om det finnes et format i dette <xref:System.Windows.Forms.DataObject>før du kaller <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.DataObject> Kall <xref:System.Windows.Forms.IDataObject.GetFormats%2A>for formatene som er tilgjengelige i denne forekomsten.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Data kan konverteres til et annet format hvis den er lagret som konvertering er tillatt å angi, og hvis det forespurte formatet er kompatibel med det lagrede formatet. For eksempel data som er lagret som Unicode kan konvertere til tekst.       Hvis en implementering av denne metoden, kan du se <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`). Then it checks whether the specified data is stored in `myDataObject`. If the test evaluates `true`, it displays the result in a message box and displays the data type in a text box. This example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.  \n  \n [!code-cs[GetDataPresent2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_15_1.cs)]\n [!code-cpp[GetDataPresent2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_15_1.cpp)]\n [!code-vb[GetDataPresent2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_15_1.vb)]"
  syntax:
    content: public bool GetDataPresent (Type format);
    parameters:
    - id: format
      type: System.Type
      description: "En <xref:System.Type>som representerer formatet for skal kontrolleres.</xref:System.Type> Se <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> for forhåndsdefinerte formater."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis data som er lagret i denne forekomsten er knyttet til, eller kan konverteres til det angitte formatet. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  id: GetDataPresent(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(String,Boolean)
  nameWithType: IDataObject.GetDataPresent(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Bestemmer om data som er lagret i denne forekomsten er knyttet til det angitte formatet, ved hjelp av en boolsk verdi for å finne ut om du vil konvertere data til formatet."
  remarks: "Kalle denne metoden for å fastslå om det finnes et format i dette <xref:System.Windows.Forms.DataObject>før du kaller <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.DataObject> Kall <xref:System.Windows.Forms.IDataObject.GetFormats%2A>for formatene som er tilgjengelige i denne forekomsten.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>       Denne metoden returnerer `true` når: - `autoConvert` parameteren er `true` og dataene i et format som kan konverteres til riktig format.      - `autoConvert` Parameteren er `false` og dataene er i riktig format.       Denne metoden returnerer `false` når: - `autoConvert` parameteren er `true` og denne metoden kan ikke finne data i det angitte formatet, og den kan ikke konvertere data til det angitte formatet, eller dataene ble lagret med `autoConvert` satt til `false`.      - `autoConvert` Parameteren er `false`, og data finnes ikke i denne forekomsten i det angitte formatet.      > [!NOTE] > Data kan konverteres til et annet format hvis den er lagret som konvertering er tillatt å angi, og hvis det forespurte formatet er kompatibel med det lagrede formatet. For eksempel data som er lagret som Unicode kan konvertere til tekst.       Hvis en implementering av denne metoden, kan du se <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a data object (`myDataObject`) using a string and the `Text` format. Then it queries the object for data associated with the `Text` format, with the `autoConvert` parameter set to `false`. This trial fails, and the result is displayed in a message box labeled \"Message #1.\" In the second trial, it sets the `autoConvert` parameter to `true`. This trial succeeds, and the result is displayed in a message box labeled \"Message #2.\" The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetDataPresent3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_17_1.cs)]\n [!code-cpp[GetDataPresent3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_17_1.cpp)]\n [!code-vb[GetDataPresent3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_17_1.vb)]"
  syntax:
    content: public bool GetDataPresent (string format, bool autoConvert);
    parameters:
    - id: format
      type: System.String
      description: "Formatet for skal kontrolleres. Se <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> for forhåndsdefinerte formater."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>for å finne ut om data som er lagret i denne forekomsten kan konverteres til det angitte formatet. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> å kontrollere om dataene er i det angitte formatet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis dataene i, eller kan konverteres til det angitte formatet. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetFormats
  id: GetFormats
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetFormats()
  nameWithType: IDataObject.GetFormats()
  fullName: System.Windows.Forms.IDataObject.GetFormats()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returnerer en liste over formater som alle data som er lagret i denne forekomsten er knyttet til eller kan konverteres til."
  remarks: "Kalle denne metoden hvis du vil ha støttet formatene før du kaller den <xref:System.Windows.Forms.IDataObject.GetData%2A>metoden.</xref:System.Windows.Forms.IDataObject.GetData%2A> Se den <xref:System.Windows.Forms.DataFormats>klasse for de forhåndsdefinerte formatene.</xref:System.Windows.Forms.DataFormats>      > [!NOTE] > Data kan konverteres til et annet format hvis den er lagret som konvertering er tillatt å angi, og hvis det forespurte formatet er kompatibel med det lagrede formatet. For eksempel data som er lagret som Unicode kan konvertere til tekst.       Hvis en implementering av denne metoden, kan du se <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method. First, it creates a data object (`myDataObject`) using a string and the `Text` format. Then it retrieves all the data formats and data conversion formats in the data object, and displays the resulting list in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetFormats1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_3_1.cs)]\n [!code-cpp[GetFormats1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_3_1.cpp)]\n [!code-vb[GetFormats1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_3_1.vb)]"
  syntax:
    content: public string[] GetFormats ();
    parameters: []
    return:
      type: System.String[]
      description: "En matrise med navn som representerer en liste over alle formater som støttes av data som er lagret i dette objektet."
  overload: System.Windows.Forms.IDataObject.GetFormats*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  id: GetFormats(System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetFormats(Boolean)
  nameWithType: IDataObject.GetFormats(Boolean)
  fullName: System.Windows.Forms.IDataObject.GetFormats(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Henter en liste over alle formater som data som er lagret i denne forekomsten er knyttet til eller kan konverteres til, ved hjelp av en boolsk verdi for å finne ut om å hente alle formater dataene kan konverteres til eller bare opprinnelige data formater."
  remarks: "Kalle denne metoden hvis du vil ha støttet formatene før du kaller den <xref:System.Windows.Forms.IDataObject.GetData%2A>metoden.</xref:System.Windows.Forms.IDataObject.GetData%2A> Se den <xref:System.Windows.Forms.DataFormats>klasse for de forhåndsdefinerte formatene.</xref:System.Windows.Forms.DataFormats>      > [!NOTE] > Data kan konverteres til et annet format hvis den er lagret som konvertering er tillatt å angi, og hvis det forespurte formatet er kompatibel med det lagrede formatet. For eksempel data som er lagret som Unicode kan konvertere til tekst.       Hvis en implementering av denne metoden, kan du se <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method. First, it creates a data object (`myDataObject`) using a string and the `UnicodeText` format. Then it makes two queries to get the formats associated with the data. In the first query, it sets the `autoConvert` parameter to `false` : in this case, only the native format of the data is returned. In the second query, it sets the `autoConvert` parameter to `true`, so that it gets the list of formats, including the formats that the data can be converted to. In each case, the resulting list is displayed in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[GetFormats2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_13_1.vb)]\n [!code-cpp[GetFormats2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_13_1.cpp)]\n [!code-cs[GetFormats2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_13_1.cs)]"
  syntax:
    content: public string[] GetFormats (bool autoConvert);
    parameters:
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>hente alle formater at data som er lagret i denne forekomsten er knyttet til eller kan konverteres til; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> til å hente bare opprinnelige datoformater."
    return:
      type: System.String[]
      description: "En matrise med navn som representerer en liste over alle formater som støttes av data som er lagret i dette objektet."
  overload: System.Windows.Forms.IDataObject.GetFormats*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.Object)
  id: SetData(System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(Object)
  nameWithType: IDataObject.SetData(Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lagrer de angitte dataene i denne forekomsten, ved hjelp av klassen av dataene for format."
  remarks: "Formatet som er avledet fra klassen data.       Data som er lagret på denne måten kan konverteres til et kompatibelt format ved henting.       Hvis en implementering av denne metoden, kan du se <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`). Then it checks whether the specified data is stored in the data object, and displays the result in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[SetData1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_1_1.cs)]\n [!code-vb[SetData1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_1_1.vb)]\n [!code-cpp[SetData1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_1_1.cpp)]"
  syntax:
    content: public void SetData (object data);
    parameters:
    - id: data
      type: System.Object
      description: "Dataene som skal lagres."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  id: SetData(System.String,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(String,Object)
  nameWithType: IDataObject.SetData(String,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lagrer de angitte dataene og tilknyttede formatet i denne forekomsten."
  remarks: "Hvis du ikke vet formatet til målprogrammet, kan du lagre data i flere formater ved hjelp av denne metoden.       Data som er lagret på denne måten kan konverteres til et kompatibelt format ved henting.       Hvis en implementering av denne metoden, kan du se <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a data object (`myDataObject`) and stores a string in the object specifying the `UnicodeText` format. Then it retrieves that data stored in the object specifying the `Text` format, so that the data is converted to the `Text` format. The result is displayed in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[SetData2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_0_1.cs)]\n [!code-cpp[SetData2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_0_1.cpp)]\n [!code-vb[SetData2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_0_1.vb)]"
  syntax:
    content: public void SetData (string format, object data);
    parameters:
    - id: format
      type: System.String
      description: "Formatet som er forbundet med dataene. Se <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> for forhåndsdefinerte formater."
    - id: data
      type: System.Object
      description: "Dataene som skal lagres."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  id: SetData(System.Type,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(Type,Object)
  nameWithType: IDataObject.SetData(Type,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Type,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lagrer de angitte dataene og klassetypen dens tilknyttede i denne forekomsten."
  remarks: "Hvis du ikke vet formatet til målprogrammet, kan du lagre data i flere formater ved hjelp av denne metoden.       Data som er lagret på denne måten kan konverteres til et kompatibelt format ved henting.       Hvis en implementering av denne metoden, kan du se <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`), using `myType` to specify the data format. Then it checks whether the data of the specified type is stored in the object, and displays the result in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[SetData3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_11_1.vb)]\n [!code-cpp[SetData3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_11_1.cpp)]\n [!code-cs[SetData3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_11_1.cs)]"
  syntax:
    content: public void SetData (Type format, object data);
    parameters:
    - id: format
      type: System.Type
      description: "En <xref:System.Type>som representerer formatet som er forbundet med dataene.</xref:System.Type> Se <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> for forhåndsdefinerte formater."
    - id: data
      type: System.Object
      description: "Dataene som skal lagres."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  id: SetData(System.String,System.Boolean,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(String,Boolean,Object)
  nameWithType: IDataObject.SetData(String,Boolean,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Boolean,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lagrer de angitte dataene og tilknyttede formatet i denne forekomsten, ved hjelp av en boolsk verdi til å angi om dataene kan konverteres til et annet format."
  remarks: "Hvis du ikke vet formatet til målprogrammet, kan du lagre data i flere formater ved hjelp av denne metoden.       Hvis en implementering av denne metoden, kan du se <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a data object (`myDataObject`) and stores a `UnicodeText` string in it, with the `autoConvert` parameter set to `false`. Then it retrieves the format(s) associated with the data stored in the object and displays the result in a message box. The only format associated with the data is the `UnicodeText` format. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[SetData4#1](~/add/codesnippet/cpp/14ad2ca0-1678-4ad5-a287-_1.cpp)]\n [!code-vb[SetData4#1](~/add/codesnippet/visualbasic/14ad2ca0-1678-4ad5-a287-_1.vb)]\n [!code-cs[SetData4#1](~/add/codesnippet/csharp/14ad2ca0-1678-4ad5-a287-_1.cs)]"
  syntax:
    content: public void SetData (string format, bool autoConvert, object data);
    parameters:
    - id: format
      type: System.String
      description: "Formatet som er forbundet med dataene. Se <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> for forhåndsdefinerte formater."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>slik at dataene som skal konverteres til et annet format. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: data
      type: System.Object
      description: "Dataene som skal lagres."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.IDataObject.GetData(System.String)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(String)
  nameWithType: IDataObject.GetData(String)
  fullName: System.Windows.Forms.IDataObject.GetData(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.IDataObject.GetData(System.Type)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(Type)
  nameWithType: IDataObject.GetData(Type)
  fullName: System.Windows.Forms.IDataObject.GetData(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(String,Boolean)
  nameWithType: IDataObject.GetData(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetData(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(String)
  nameWithType: IDataObject.GetDataPresent(String)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String)
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(Type)
  nameWithType: IDataObject.GetDataPresent(Type)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(Type)
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(String,Boolean)
  nameWithType: IDataObject.GetDataPresent(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String,Boolean)
- uid: System.Windows.Forms.IDataObject.GetFormats
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats()
  nameWithType: IDataObject.GetFormats()
  fullName: System.Windows.Forms.IDataObject.GetFormats()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats(Boolean)
  nameWithType: IDataObject.GetFormats(Boolean)
  fullName: System.Windows.Forms.IDataObject.GetFormats(Boolean)
- uid: System.Windows.Forms.IDataObject.SetData(System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(Object)
  nameWithType: IDataObject.SetData(Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(String,Object)
  nameWithType: IDataObject.SetData(String,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(Type,Object)
  nameWithType: IDataObject.SetData(Type,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Type,Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(String,Boolean,Object)
  nameWithType: IDataObject.SetData(String,Boolean,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Boolean,Object)
- uid: System.Windows.Forms.IDataObject.GetData*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData
  nameWithType: IDataObject.GetData
- uid: System.Windows.Forms.IDataObject.GetDataPresent*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent
  nameWithType: IDataObject.GetDataPresent
- uid: System.Windows.Forms.IDataObject.GetFormats*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats
  nameWithType: IDataObject.GetFormats
- uid: System.Windows.Forms.IDataObject.SetData*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData
  nameWithType: IDataObject.SetData
