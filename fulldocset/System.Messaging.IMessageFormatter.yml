### YamlMime:ManagedReference
items:
- uid: System.Messaging.IMessageFormatter
  id: IMessageFormatter
  children:
  - System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)
  - System.Messaging.IMessageFormatter.Read(System.Messaging.Message)
  - System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)
  langs:
  - csharp
  name: IMessageFormatter
  nameWithType: IMessageFormatter
  fullName: System.Messaging.IMessageFormatter
  type: Interface
  summary: "Serializes eller deserializes objekter fra brødteksten i en Message Queuing-melding."
  remarks: "Når et program sender meldingen til køen med en forekomst av den <xref:System.Messaging.MessageQueue>klassen formateringen serializes objektet (som kan være en forekomst av en klasse) til en dataflyt og setter den inn meldingsteksten.</xref:System.Messaging.MessageQueue> Ved lesing fra en kø ved hjelp av en <xref:System.Messaging.MessageQueue>formateringen deserializes meldingsdataene i <xref:System.Messaging.Message.Body%2A>egenskapen for <xref:System.Messaging.Message>.</xref:System.Messaging.Message> </xref:System.Messaging.Message.Body%2A> </xref:System.Messaging.MessageQueue>       <xref:System.Messaging.BinaryMessageFormatter>og <xref:System.Messaging.ActiveXMessageFormatter>gi raskere ytelse enn <xref:System.Messaging.XmlMessageFormatter>.</xref:System.Messaging.XmlMessageFormatter> </xref:System.Messaging.ActiveXMessageFormatter></xref:System.Messaging.BinaryMessageFormatter> Den <xref:System.Messaging.ActiveXMessageFormatter>tillater samhandling med Visual Basic 6.0 Message Queuing-programmer.</xref:System.Messaging.ActiveXMessageFormatter> Den <xref:System.Messaging.XmlMessageFormatter>er løst kombinert, noe som betyr at serveren og klientprogrammene kan versjon typen som er sendt og mottatt uavhengig.</xref:System.Messaging.XmlMessageFormatter>"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.MessageFormatterConverter))]

      public interface IMessageFormatter : ICloneable
  implements:
  - System.ICloneable
  platform:
  - net462
- uid: System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)
  id: CanRead(System.Messaging.Message)
  parent: System.Messaging.IMessageFormatter
  langs:
  - csharp
  name: CanRead(Message)
  nameWithType: IMessageFormatter.CanRead(Message)
  fullName: System.Messaging.IMessageFormatter.CanRead(Message)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Når implementert i en klasse, bestemmer om formateringen kan deserialisere innholdet i meldingen."
  syntax:
    content: public bool CanRead (System.Messaging.Message message);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "Den <xref href=&quot;System.Messaging.Message&quot;> </xref> skal undersøkes."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis formateringen kan deserialisere meldingen. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.IMessageFormatter.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.IMessageFormatter.Read(System.Messaging.Message)
  id: Read(System.Messaging.Message)
  parent: System.Messaging.IMessageFormatter
  langs:
  - csharp
  name: Read(Message)
  nameWithType: IMessageFormatter.Read(Message)
  fullName: System.Messaging.IMessageFormatter.Read(Message)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Når implementert i en klasse, leser innholdet fra den gitte meldingen og oppretter et objekt som inneholder data fra meldingen."
  syntax:
    content: public object Read (System.Messaging.Message message);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "Den <xref href=&quot;System.Messaging.Message&quot;> </xref> deserialisering."
    return:
      type: System.Object
      description: "Deserialisert meldingen."
  overload: System.Messaging.IMessageFormatter.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)
  id: Write(System.Messaging.Message,System.Object)
  parent: System.Messaging.IMessageFormatter
  langs:
  - csharp
  name: Write(Message,Object)
  nameWithType: IMessageFormatter.Write(Message,Object)
  fullName: System.Messaging.IMessageFormatter.Write(Message,Object)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Når implementert i en klasse, serializes et objekt i meldingsteksten i meldingen."
  syntax:
    content: public void Write (System.Messaging.Message message, object obj);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "Den <xref href=&quot;System.Messaging.Message&quot;> </xref> som inneholder det serialiserte objektet."
    - id: obj
      type: System.Object
      description: "Objektet som skal serialiseres til meldingen."
  overload: System.Messaging.IMessageFormatter.Write*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)
  parent: System.Messaging.IMessageFormatter
  isExternal: false
  name: CanRead(Message)
  nameWithType: IMessageFormatter.CanRead(Message)
  fullName: System.Messaging.IMessageFormatter.CanRead(Message)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Messaging.Message
  parent: System.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Messaging.Message
- uid: System.Messaging.IMessageFormatter.Read(System.Messaging.Message)
  parent: System.Messaging.IMessageFormatter
  isExternal: false
  name: Read(Message)
  nameWithType: IMessageFormatter.Read(Message)
  fullName: System.Messaging.IMessageFormatter.Read(Message)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)
  parent: System.Messaging.IMessageFormatter
  isExternal: false
  name: Write(Message,Object)
  nameWithType: IMessageFormatter.Write(Message,Object)
  fullName: System.Messaging.IMessageFormatter.Write(Message,Object)
- uid: System.Messaging.IMessageFormatter.CanRead*
  parent: System.Messaging.IMessageFormatter
  isExternal: false
  name: CanRead
  nameWithType: IMessageFormatter.CanRead
- uid: System.Messaging.IMessageFormatter.Read*
  parent: System.Messaging.IMessageFormatter
  isExternal: false
  name: Read
  nameWithType: IMessageFormatter.Read
- uid: System.Messaging.IMessageFormatter.Write*
  parent: System.Messaging.IMessageFormatter
  isExternal: false
  name: Write
  nameWithType: IMessageFormatter.Write
