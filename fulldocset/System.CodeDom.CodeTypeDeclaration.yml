### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeTypeDeclaration
  id: CodeTypeDeclaration
  children:
  - System.CodeDom.CodeTypeDeclaration.#ctor
  - System.CodeDom.CodeTypeDeclaration.#ctor(System.String)
  - System.CodeDom.CodeTypeDeclaration.BaseTypes
  - System.CodeDom.CodeTypeDeclaration.IsClass
  - System.CodeDom.CodeTypeDeclaration.IsEnum
  - System.CodeDom.CodeTypeDeclaration.IsInterface
  - System.CodeDom.CodeTypeDeclaration.IsPartial
  - System.CodeDom.CodeTypeDeclaration.IsStruct
  - System.CodeDom.CodeTypeDeclaration.Members
  - System.CodeDom.CodeTypeDeclaration.PopulateBaseTypes
  - System.CodeDom.CodeTypeDeclaration.PopulateMembers
  - System.CodeDom.CodeTypeDeclaration.TypeAttributes
  - System.CodeDom.CodeTypeDeclaration.TypeParameters
  langs:
  - csharp
  name: CodeTypeDeclaration
  nameWithType: CodeTypeDeclaration
  fullName: System.CodeDom.CodeTypeDeclaration
  type: Class
  summary: "Representerer en deklarasjon av typen for en klasse, strukturen, grensesnittet eller opplisting."
  remarks: "CodeTypeDeclaration kan brukes til å representere kode som angir en klasse, strukturen, grensesnittet eller opplisting. CodeTypeDeclaration kan brukes til å deklarere en type som er nestet i en annen type.       Den <xref:System.CodeDom.CodeTypeDeclaration.BaseTypes%2A>egenskapen angir basistypen eller basistyper av typen deklareres.</xref:System.CodeDom.CodeTypeDeclaration.BaseTypes%2A> Den <xref:System.CodeDom.CodeTypeDeclaration.Members%2A>egenskapen inneholder typen-medlemmer, som kan inneholde metoder, felt, egenskaper, kommentarer og andre typer.</xref:System.CodeDom.CodeTypeDeclaration.Members%2A> Den <xref:System.CodeDom.CodeTypeDeclaration.TypeAttributes%2A>egenskapen angir de <xref:System.Reflection.TypeAttributes>verdier for deklarasjon av typen som angir typen kategorien av typen.</xref:System.Reflection.TypeAttributes> </xref:System.CodeDom.CodeTypeDeclaration.TypeAttributes%2A> Den <xref:System.CodeDom.CodeTypeDeclaration.IsClass%2A>, <xref:System.CodeDom.CodeTypeDeclaration.IsStruct%2A>, <xref:System.CodeDom.CodeTypeDeclaration.IsEnum%2A>, og <xref:System.CodeDom.CodeTypeDeclaration.IsInterface%2A>metoder viser om typen en klasse, struktur, opplisting eller grensesnittype, henholdsvis.</xref:System.CodeDom.CodeTypeDeclaration.IsInterface%2A> </xref:System.CodeDom.CodeTypeDeclaration.IsEnum%2A> </xref:System.CodeDom.CodeTypeDeclaration.IsStruct%2A> </xref:System.CodeDom.CodeTypeDeclaration.IsClass%2A>      > [!NOTE] > Noen programmeringsspråk støtter bare deklarasjon av referansetyper eller klasser. Undersøk en språk-spesifikke CodeDOM kode generatoren for støtte for deklarerer grensesnitt, opplistinger eller verdityper ved kall av <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>metode for å teste mot riktig <xref:System.CodeDom.Compiler.GeneratorSupport>flagg.</xref:System.CodeDom.Compiler.GeneratorSupport> </xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> <xref:System.CodeDom.Compiler.GeneratorSupport>Angir støtte for grensesnitt <xref:System.CodeDom.Compiler.GeneratorSupport>angir støtte for opplistinger, og <xref:System.CodeDom.Compiler.GeneratorSupport>angir støtte for verdityper som strukturer.</xref:System.CodeDom.Compiler.GeneratorSupport> </xref:System.CodeDom.Compiler.GeneratorSupport></xref:System.CodeDom.Compiler.GeneratorSupport>       Du kan bygge en klasse eller en struktur implementering i én fullstendig deklarasjon eller spredt implementeringen på flere deklareringer. Den <xref:System.CodeDom.CodeTypeDeclaration.IsPartial%2A>egenskapen angir om deklarasjonen av typen er fullført eller delvis.</xref:System.CodeDom.CodeTypeDeclaration.IsPartial%2A> Ikke alle kode generatorer støtter delvis type deklareringer, slik at du skal teste dette ved å kalle <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>metoden med flagget <xref:System.CodeDom.Compiler.GeneratorSupport>.</xref:System.CodeDom.Compiler.GeneratorSupport> </xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>"
  example:
  - "This example demonstrates using a CodeTypeDeclaration to declare a type.  \n  \n [!code-cs[CodeTypeDeclarationExample#2](~/add/codesnippet/csharp/t-system.codedom.codetyp_7_1.cs)]\n [!code-vb[CodeTypeDeclarationExample#2](~/add/codesnippet/visualbasic/t-system.codedom.codetyp_7_1.vb)]\n [!code-cpp[CodeTypeDeclarationExample#2](~/add/codesnippet/cpp/t-system.codedom.codetyp_7_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeTypeDeclaration : System.CodeDom.CodeTypeMember
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  - System.CodeDom.CodeTypeMember
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  - System.CodeDom.CodeTypeMember.Attributes
  - System.CodeDom.CodeTypeMember.Comments
  - System.CodeDom.CodeTypeMember.CustomAttributes
  - System.CodeDom.CodeTypeMember.EndDirectives
  - System.CodeDom.CodeTypeMember.LinePragma
  - System.CodeDom.CodeTypeMember.Name
  - System.CodeDom.CodeTypeMember.StartDirectives
  platform:
  - net462
- uid: System.CodeDom.CodeTypeDeclaration.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeTypeDeclaration
  langs:
  - csharp
  name: CodeTypeDeclaration()
  nameWithType: CodeTypeDeclaration.CodeTypeDeclaration()
  fullName: System.CodeDom.CodeTypeDeclaration.CodeTypeDeclaration()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.CodeDom.CodeTypeDeclaration&quot;> </xref> klasse."
  syntax:
    content: public CodeTypeDeclaration ();
    parameters: []
  overload: System.CodeDom.CodeTypeDeclaration.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeDeclaration.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.CodeDom.CodeTypeDeclaration
  langs:
  - csharp
  name: CodeTypeDeclaration(String)
  nameWithType: CodeTypeDeclaration.CodeTypeDeclaration(String)
  fullName: System.CodeDom.CodeTypeDeclaration.CodeTypeDeclaration(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.CodeDom.CodeTypeDeclaration&quot;> </xref> klassen med det angitte navnet."
  syntax:
    content: public CodeTypeDeclaration (string name);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på den nye typen."
  overload: System.CodeDom.CodeTypeDeclaration.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeDeclaration.BaseTypes
  id: BaseTypes
  parent: System.CodeDom.CodeTypeDeclaration
  langs:
  - csharp
  name: BaseTypes
  nameWithType: CodeTypeDeclaration.BaseTypes
  fullName: System.CodeDom.CodeTypeDeclaration.BaseTypes
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Henter basistyper av typen."
  remarks: "For å generere en klasse i Visual Basic som ikke arver fra en basistype, men som implementerer grensesnittet én eller flere, må du ta med <xref:System.Object>som det første elementet i samlingen BaseTypes.</xref:System.Object>      > [!NOTE] > I i .NET Framework, versjon 2.0, ikke trenger du det <xref:System.CodeDom.CodeTypeReference>for <xref:System.Object>Hvis grensesnittet du implementere allerede finnes, og du refererer til den etter type.</xref:System.Object> </xref:System.CodeDom.CodeTypeReference> Hvis for eksempel, du implementering av <xref:System.Collections.ICollection>grensesnittet og legge den til samlingen med denne setningen `ctd.BaseTypes.Add(New CodeTypeReference(typeof(ICollection)))`, trenger du ikke det foregående `ctd.BaseTypes.Add(New CodeTypeReference(GetType(Object)))` setningen.</xref:System.Collections.ICollection>       Følgende kode illustrerer i tillegg til en <xref:System.CodeDom.CodeTypeReference>som refererer til <xref:System.Object>.</xref:System.Object> -samlingen</xref:System.CodeDom.CodeTypeReference>       [Visual Basic]      ```   Dim ctd As New CodeTypeDeclaration(&quot;Class1&quot;)   ctd.IsClass = True   ctd.BaseTypes.Add(New CodeTypeReference(GetType(Object)))   ctd.BaseTypes.Add(New CodeTypeReference(&quot;Interface1&quot;))   ``` [C#] ```   CodeTypeDeclaration ctd = new CodeTypeDeclaration(&quot;Class1&quot;);   ctd.IsClass = true;   ctd.BaseTypes.Add(new CodeTypeReference(typeof(Object)));   ctd.BaseTypes.Add(new CodeTypeReference(&quot;Interface1&quot;));   ``` koden ovenfor genererer tilsvarer følgende kode i Visual Basic.      ```   Public Class Class1   Implements Interface1   ```Visual Basic koden generert faktisk er imidlertid følgende.      ```   Public Class Class1   Inherits Object   Implements Interface1   ```"
  syntax:
    content: public System.CodeDom.CodeTypeReferenceCollection BaseTypes { get; }
    return:
      type: System.CodeDom.CodeTypeReferenceCollection
      description: "En <xref href=&quot;System.CodeDom.CodeTypeReferenceCollection&quot;> </xref> objekt som angir basistyper av typen."
  overload: System.CodeDom.CodeTypeDeclaration.BaseTypes*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeDeclaration.IsClass
  id: IsClass
  parent: System.CodeDom.CodeTypeDeclaration
  langs:
  - csharp
  name: IsClass
  nameWithType: CodeTypeDeclaration.IsClass
  fullName: System.CodeDom.CodeTypeDeclaration.IsClass
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Henter eller angir en verdi som angir om typen er av typen klassen eller referanse."
  syntax:
    content: public bool IsClass { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis typen er en type som klassen eller referanse. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.CodeTypeDeclaration.IsClass*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeDeclaration.IsEnum
  id: IsEnum
  parent: System.CodeDom.CodeTypeDeclaration
  langs:
  - csharp
  name: IsEnum
  nameWithType: CodeTypeDeclaration.IsEnum
  fullName: System.CodeDom.CodeTypeDeclaration.IsEnum
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Henter eller angir en verdi som angir om typen er en opplisting."
  syntax:
    content: public bool IsEnum { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis typen er en opplisting; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.CodeTypeDeclaration.IsEnum*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeDeclaration.IsInterface
  id: IsInterface
  parent: System.CodeDom.CodeTypeDeclaration
  langs:
  - csharp
  name: IsInterface
  nameWithType: CodeTypeDeclaration.IsInterface
  fullName: System.CodeDom.CodeTypeDeclaration.IsInterface
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Henter eller angir en verdi som angir om typen er et grensesnitt."
  syntax:
    content: public bool IsInterface { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis typen er et grensesnitt. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.CodeTypeDeclaration.IsInterface*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeDeclaration.IsPartial
  id: IsPartial
  parent: System.CodeDom.CodeTypeDeclaration
  langs:
  - csharp
  name: IsPartial
  nameWithType: CodeTypeDeclaration.IsPartial
  fullName: System.CodeDom.CodeTypeDeclaration.IsPartial
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Henter eller angir en verdi som angir om deklarasjonen av typen er fullført eller delvis."
  remarks: "Du kan bygge en klasse eller strukturen implementering i én fullstendig deklarasjon eller spredt implementeringen på flere deklareringer. Implementeringer er vanligvis angitt i én fullstendig type-deklarasjon. I dette tilfellet egenskapen type deklarasjon IsPartial til `false`, noe som angir at deklarasjon av typen representerer alle detaljene for implementering klassen eller -strukturen.       En delvis type-deklarasjon gjør det enklere å bygge forskjellige deler av en implementering klassen eller strukturen i forskjellige modulene av programmet. Delvis type deklareringer kan lagres i én kildefilen, eller spredt på flere kildefiler oppgavestatusen kompileres sammen for å danne kombinert typen implementeringen.       Språket C# støtter delvis type deklareringer klasser og strukturerer via den `partial` nøkkelord. Visual Basic støtter delvis type deklareringer klasser og strukturerer med den `Partial` nøkkelord. Ikke alle kode generatorer støtter delvis type deklareringer, slik at du skal teste dette ved å kalle <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>metoden med flagget <xref:System.CodeDom.Compiler.GeneratorSupport>.</xref:System.CodeDom.Compiler.GeneratorSupport> </xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>      > [!NOTE] > Delvis type deklareringer støttes for klasser og -strukturer. Hvis du angir en delvis type deklarasjon for en opplisting eller grensesnittet, produserer koden genererte kompilatorfeil.       Når du angir en klasse eller strukturen implementering på tvers av flere deklareringer, angi IsPartial egenskapen `true` for første deklarasjonen og alle ekstra deklareringer. Første deklarasjonen fullstendig må angi hvilken signatur, inkludert Tilgangsmodifikatorer, arvet typer og implementert grensesnitt. Ekstra deklareringer trenger ikke å angi typen signaturen på nytt. En kompilatorfeil oppstår vanligvis hvis du redigerer typen signaturen i en ekstra deklarasjon.       Visual Studio 2005 bruker delvise typene til å skille brukergenerert koden fra designer-kode. I Visual Basic Windows-program prosjekter av brukerkode er plassert i en delvis klasse ikke er kvalifisert av den `Partial` nøkkelordet; i designer fra kode vises i delvis klassen som er den `Partial` nøkkelord. C# både brukerkode og designer kode vises i delvis klasser som er identifisert av den `partial` nøkkelord."
  example:
  - "This example demonstrates using a <xref:System.CodeDom.CodeTypeDeclaration> to supply a class implementation across multiple declarations. The example builds the initial class declaration statement and sets the IsPartial property to `true`.  \n  \n [!code-cpp[CodeDomPartialTypeExample#3](~/add/codesnippet/cpp/p-system.codedom.codetyp_2_1.cpp)]\n [!code-cs[CodeDomPartialTypeExample#3](~/add/codesnippet/csharp/p-system.codedom.codetyp_2_1.cs)]\n [!code-vb[CodeDomPartialTypeExample#3](~/add/codesnippet/visualbasic/p-system.codedom.codetyp_2_1.vb)]  \n  \n A different method in the example extends the class implementation. This method builds a new type declaration statement for the existing class and sets the IsPartial property to `true`. The compiler combines the two partial type declarations together for the complete class implementation.  \n  \n [!code-cpp[CodeDomPartialTypeExample#7](~/add/codesnippet/cpp/p-system.codedom.codetyp_2_2.cpp)]\n [!code-cs[CodeDomPartialTypeExample#7](~/add/codesnippet/csharp/p-system.codedom.codetyp_2_2.cs)]\n [!code-vb[CodeDomPartialTypeExample#7](~/add/codesnippet/visualbasic/p-system.codedom.codetyp_2_2.vb)]"
  syntax:
    content: public bool IsPartial { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis klassen eller strukturen deklarasjonen er en delvis representasjon av implementeringen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Hvis deklarasjonen er en komplett implementering av klassen eller strukturen. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.CodeTypeDeclaration.IsPartial*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeDeclaration.IsStruct
  id: IsStruct
  parent: System.CodeDom.CodeTypeDeclaration
  langs:
  - csharp
  name: IsStruct
  nameWithType: CodeTypeDeclaration.IsStruct
  fullName: System.CodeDom.CodeTypeDeclaration.IsStruct
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Henter eller angir en verdi som angir om typen er en verditype (struktur)."
  syntax:
    content: public bool IsStruct { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis typen er en verditype som. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.CodeTypeDeclaration.IsStruct*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeDeclaration.Members
  id: Members
  parent: System.CodeDom.CodeTypeDeclaration
  langs:
  - csharp
  name: Members
  nameWithType: CodeTypeDeclaration.Members
  fullName: System.CodeDom.CodeTypeDeclaration.Members
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Henter samlingen av klassemedlemmer for representeres typen."
  syntax:
    content: public System.CodeDom.CodeTypeMemberCollection Members { get; }
    return:
      type: System.CodeDom.CodeTypeMemberCollection
      description: "En <xref href=&quot;System.CodeDom.CodeTypeMemberCollection&quot;> </xref> objekt som angir klassemedlemmer."
  overload: System.CodeDom.CodeTypeDeclaration.Members*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeDeclaration.PopulateBaseTypes
  id: PopulateBaseTypes
  parent: System.CodeDom.CodeTypeDeclaration
  langs:
  - csharp
  name: PopulateBaseTypes
  nameWithType: CodeTypeDeclaration.PopulateBaseTypes
  fullName: System.CodeDom.CodeTypeDeclaration.PopulateBaseTypes
  type: Event
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Forekommer når den <xref:System.CodeDom.CodeTypeDeclaration.BaseTypes*>samlingen er tilgjengelig for første gang.</xref:System.CodeDom.CodeTypeDeclaration.BaseTypes*>"
  syntax:
    content: public event EventHandler PopulateBaseTypes;
    return:
      type: System.EventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeDeclaration.PopulateMembers
  id: PopulateMembers
  parent: System.CodeDom.CodeTypeDeclaration
  langs:
  - csharp
  name: PopulateMembers
  nameWithType: CodeTypeDeclaration.PopulateMembers
  fullName: System.CodeDom.CodeTypeDeclaration.PopulateMembers
  type: Event
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Forekommer når den <xref:System.CodeDom.CodeTypeDeclaration.Members*>samlingen er tilgjengelig for første gang.</xref:System.CodeDom.CodeTypeDeclaration.Members*>"
  syntax:
    content: public event EventHandler PopulateMembers;
    return:
      type: System.EventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeDeclaration.TypeAttributes
  id: TypeAttributes
  parent: System.CodeDom.CodeTypeDeclaration
  langs:
  - csharp
  name: TypeAttributes
  nameWithType: CodeTypeDeclaration.TypeAttributes
  fullName: System.CodeDom.CodeTypeDeclaration.TypeAttributes
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Henter eller angir attributter av typen."
  remarks: "Den <xref:System.Reflection.TypeAttributes>egenskapen inneholder den samme verdier som brukes av <xref:System.Reflection>når undersøker en type på kjøretidspunktet.</xref:System.Reflection> </xref:System.Reflection.TypeAttributes> Mange av disse flaggene ikke samsvarer med syntaksen typen deklarasjonen for noe språk. Resultatet bare følgende flagg er viktige for <xref:System.CodeDom.CodeTypeDeclaration>: <xref:System.Reflection.TypeAttributes>, <xref:System.Reflection.TypeAttributes>, <xref:System.Reflection.TypeAttributes>, <xref:System.Reflection.TypeAttributes>, <xref:System.Reflection.TypeAttributes>, <xref:System.Reflection.TypeAttributes>, <xref:System.Reflection.TypeAttributes>, og <xref:System.Reflection.TypeAttributes>.</xref:System.Reflection.TypeAttributes> </xref:System.Reflection.TypeAttributes> </xref:System.Reflection.TypeAttributes> </xref:System.Reflection.TypeAttributes> </xref:System.Reflection.TypeAttributes> </xref:System.Reflection.TypeAttributes> </xref:System.Reflection.TypeAttributes> </xref:System.Reflection.TypeAttributes> </xref:System.CodeDom.CodeTypeDeclaration>      > [!NOTE] > Noen av flaggene som for eksempel <xref:System.Reflection.TypeAttributes>overlappe med betydning flaggene <xref:System.CodeDom.CodeTypeMember.Attributes%2A>for <xref:System.CodeDom.CodeTypeDeclaration>som er arvet fra <xref:System.CodeDom.CodeTypeMember>.</xref:System.CodeDom.CodeTypeMember> </xref:System.CodeDom.CodeTypeDeclaration> </xref:System.CodeDom.CodeTypeMember.Attributes%2A> </xref:System.Reflection.TypeAttributes> Den <xref:System.CodeDom.CodeTypeMember.Attributes%2A>egenskapen er en side effekten av den <xref:System.CodeDom.CodeTypeDeclaration>klassen som arver fra <xref:System.CodeDom.CodeTypeMember>slik at klasser kan nestes.</xref:System.CodeDom.CodeTypeMember> </xref:System.CodeDom.CodeTypeDeclaration> </xref:System.CodeDom.CodeTypeMember.Attributes%2A> Flaggene i egenskapen TypeAttributes skal brukes i stedet for flaggene i den <xref:System.CodeDom.CodeTypeMember.Attributes%2A>egenskapen.</xref:System.CodeDom.CodeTypeMember.Attributes%2A>      > [!NOTE] > Mønsteret for å angi synlighet flaggene (flaggene som inneholder ordene `Public` eller `Nested`) skal maske ut alle synlighet flagg ved hjelp av den <xref:System.Reflection.TypeAttributes>og angi deretter ønsket synlighet-flagget.</xref:System.Reflection.TypeAttributes> For eksempel C# kode uttrykket til å identifisere den <xref:System.CodeDom.CodeTypeDeclaration>(navnet `cd`) som er en intern klasse `cd.TypeAttributes = (cd.TypeAttributes & ~TypeAttributes.VisibilityMask) | TypeAttributes.NotPublic;`.</xref:System.CodeDom.CodeTypeDeclaration>  Koden for å angi samme verdi i Visual Basic er `cd.TypeAttributes = (cd.TypeAttributes And (TypeAttributes.VisibilityMask Xor -1)) Or TypeAttributes.NotPublic`. Angi egenskapen TypeAttributes direkte til et synlighetsflagg (`cd.TypeAttributes = TypeAttributes.NotPublic;`), slettes alle andre flaggene som kan angis."
  syntax:
    content: public System.Reflection.TypeAttributes TypeAttributes { get; set; }
    return:
      type: System.Reflection.TypeAttributes
      description: "En <xref:System.Reflection.TypeAttributes>objekt som angir attributter av typen.</xref:System.Reflection.TypeAttributes>"
  overload: System.CodeDom.CodeTypeDeclaration.TypeAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeDeclaration.TypeParameters
  id: TypeParameters
  parent: System.CodeDom.CodeTypeDeclaration
  langs:
  - csharp
  name: TypeParameters
  nameWithType: CodeTypeDeclaration.TypeParameters
  fullName: System.CodeDom.CodeTypeDeclaration.TypeParameters
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Henter de for deklarasjon av typen."
  remarks: "En generell type-deklarasjon inneholder én eller flere uspesifiserte typer kjent som typen parametere. Et typenavn parameteren står for typen i meldingsteksten generisk-deklarering. For eksempel generisk deklarasjonen for den <xref:System.Collections.Generic.List%601>klassen inneholder typeparameteren `T`.</xref:System.Collections.Generic.List%601>       Hvis du vil ha mer informasjon om generiske elementer, se [generiske elementer i .NET Framework klassen biblioteket](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.CodeDom.CodeTypeParameterCollection TypeParameters { get; }
    return:
      type: System.CodeDom.CodeTypeParameterCollection
      description: "En <xref href=&quot;System.CodeDom.CodeTypeParameterCollection&quot;> </xref> som inneholder typen parameterne for deklarasjon av typen."
  overload: System.CodeDom.CodeTypeDeclaration.TypeParameters*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeTypeMember
  isExternal: false
  name: System.CodeDom.CodeTypeMember
- uid: System.CodeDom.CodeTypeDeclaration.#ctor
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: CodeTypeDeclaration()
  nameWithType: CodeTypeDeclaration.CodeTypeDeclaration()
  fullName: System.CodeDom.CodeTypeDeclaration.CodeTypeDeclaration()
- uid: System.CodeDom.CodeTypeDeclaration.#ctor(System.String)
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: CodeTypeDeclaration(String)
  nameWithType: CodeTypeDeclaration.CodeTypeDeclaration(String)
  fullName: System.CodeDom.CodeTypeDeclaration.CodeTypeDeclaration(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.CodeTypeDeclaration.BaseTypes
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: BaseTypes
  nameWithType: CodeTypeDeclaration.BaseTypes
  fullName: System.CodeDom.CodeTypeDeclaration.BaseTypes
- uid: System.CodeDom.CodeTypeReferenceCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReferenceCollection
  nameWithType: CodeTypeReferenceCollection
  fullName: System.CodeDom.CodeTypeReferenceCollection
- uid: System.CodeDom.CodeTypeDeclaration.IsClass
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: IsClass
  nameWithType: CodeTypeDeclaration.IsClass
  fullName: System.CodeDom.CodeTypeDeclaration.IsClass
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CodeDom.CodeTypeDeclaration.IsEnum
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: IsEnum
  nameWithType: CodeTypeDeclaration.IsEnum
  fullName: System.CodeDom.CodeTypeDeclaration.IsEnum
- uid: System.CodeDom.CodeTypeDeclaration.IsInterface
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: IsInterface
  nameWithType: CodeTypeDeclaration.IsInterface
  fullName: System.CodeDom.CodeTypeDeclaration.IsInterface
- uid: System.CodeDom.CodeTypeDeclaration.IsPartial
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: IsPartial
  nameWithType: CodeTypeDeclaration.IsPartial
  fullName: System.CodeDom.CodeTypeDeclaration.IsPartial
- uid: System.CodeDom.CodeTypeDeclaration.IsStruct
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: IsStruct
  nameWithType: CodeTypeDeclaration.IsStruct
  fullName: System.CodeDom.CodeTypeDeclaration.IsStruct
- uid: System.CodeDom.CodeTypeDeclaration.Members
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: Members
  nameWithType: CodeTypeDeclaration.Members
  fullName: System.CodeDom.CodeTypeDeclaration.Members
- uid: System.CodeDom.CodeTypeMemberCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeMemberCollection
  nameWithType: CodeTypeMemberCollection
  fullName: System.CodeDom.CodeTypeMemberCollection
- uid: System.CodeDom.CodeTypeDeclaration.PopulateBaseTypes
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: PopulateBaseTypes
  nameWithType: CodeTypeDeclaration.PopulateBaseTypes
  fullName: System.CodeDom.CodeTypeDeclaration.PopulateBaseTypes
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.CodeDom.CodeTypeDeclaration.PopulateMembers
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: PopulateMembers
  nameWithType: CodeTypeDeclaration.PopulateMembers
  fullName: System.CodeDom.CodeTypeDeclaration.PopulateMembers
- uid: System.CodeDom.CodeTypeDeclaration.TypeAttributes
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: TypeAttributes
  nameWithType: CodeTypeDeclaration.TypeAttributes
  fullName: System.CodeDom.CodeTypeDeclaration.TypeAttributes
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: true
  name: TypeAttributes
  nameWithType: TypeAttributes
  fullName: System.Reflection.TypeAttributes
- uid: System.CodeDom.CodeTypeDeclaration.TypeParameters
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: TypeParameters
  nameWithType: CodeTypeDeclaration.TypeParameters
  fullName: System.CodeDom.CodeTypeDeclaration.TypeParameters
- uid: System.CodeDom.CodeTypeParameterCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeParameterCollection
  nameWithType: CodeTypeParameterCollection
  fullName: System.CodeDom.CodeTypeParameterCollection
- uid: System.CodeDom.CodeTypeDeclaration.#ctor*
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: CodeTypeDeclaration
  nameWithType: CodeTypeDeclaration.CodeTypeDeclaration
- uid: System.CodeDom.CodeTypeDeclaration.BaseTypes*
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: BaseTypes
  nameWithType: CodeTypeDeclaration.BaseTypes
- uid: System.CodeDom.CodeTypeDeclaration.IsClass*
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: IsClass
  nameWithType: CodeTypeDeclaration.IsClass
- uid: System.CodeDom.CodeTypeDeclaration.IsEnum*
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: IsEnum
  nameWithType: CodeTypeDeclaration.IsEnum
- uid: System.CodeDom.CodeTypeDeclaration.IsInterface*
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: IsInterface
  nameWithType: CodeTypeDeclaration.IsInterface
- uid: System.CodeDom.CodeTypeDeclaration.IsPartial*
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: IsPartial
  nameWithType: CodeTypeDeclaration.IsPartial
- uid: System.CodeDom.CodeTypeDeclaration.IsStruct*
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: IsStruct
  nameWithType: CodeTypeDeclaration.IsStruct
- uid: System.CodeDom.CodeTypeDeclaration.Members*
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: Members
  nameWithType: CodeTypeDeclaration.Members
- uid: System.CodeDom.CodeTypeDeclaration.TypeAttributes*
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: TypeAttributes
  nameWithType: CodeTypeDeclaration.TypeAttributes
- uid: System.CodeDom.CodeTypeDeclaration.TypeParameters*
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: TypeParameters
  nameWithType: CodeTypeDeclaration.TypeParameters
