### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.MetadataImporter
  id: MetadataImporter
  children:
  - System.ServiceModel.Description.MetadataImporter.Errors
  - System.ServiceModel.Description.MetadataImporter.ImportAllContracts
  - System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints
  - System.ServiceModel.Description.MetadataImporter.KnownContracts
  - System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions
  - System.ServiceModel.Description.MetadataImporter.State
  langs:
  - csharp
  name: MetadataImporter
  nameWithType: MetadataImporter
  fullName: System.ServiceModel.Description.MetadataImporter
  type: Class
  summary: "Importerer metadata i &lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName&gt; objekter."
  remarks: "Bruk en implementering av den abstrakte klassen MetadataImporter for å importere metadataene for tjenesten. Typene som er avledet fra klassen MetadataImporter implementere støtte for import metadata formatene som drar nytte av WS-Policy importere logikken i [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)].       En MetadataImporter implementering samler inn policy-uttrykk som er knyttet til tjenesten metadataene i en <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=fullName>objektet.</xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=fullName> MetadataImporter behandler deretter policyene som en del av importere metadataene ved å kalle implementeringer av den <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName>grensesnitt i den <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName>egenskapen.</xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName>       Du kan legge til støtte for import av nye policydeklarasjon til en MetadataImporter ved å legge til egne implementering av den <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName>brukergrensesnitt i <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName>egenskap i en forekomst av MetadataImporter.</xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName> Du kan eventuelt registrere policy import-utvidelsen i programmets konfigurasjonsfil.       Den <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName>typen er implementeringen av den abstrakte klassen MetadataImporter er inkludert i [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)].</xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> Den <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName>typen importerer WSDL metadata med tilknyttede policyer som er pakket i en <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>objektet.</xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName> </xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName>       Du kan legge til støtte for å importere WSDL-utvidelser ved å implementere den <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName>grensesnittet og deretter legge implementeringen din til den <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=fullName>egenskap i den <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName>forekomsten.</xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> </xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> Den <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName>kan også laste implementeringer av den <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName>grensesnittet registrert i programmets konfigurasjonsfil.</xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> </xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName>      > [!NOTE] > Fordi MetadataImporter konstruktøren intern, kan du være avledet fra MetadataImporter i denne versjonen."
  example:
  - "The following example shows the use of the <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> derived class to import metadata using custom state, checking the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property, compiling imported metadata to managed types and saving the result to a code file.  \n  \n [!code-cs[C_CustomWSDLExtensions#8](~/add/codesnippet/csharp/c_customwsdlextensions.client/client.cs#8)]"
  syntax:
    content: public abstract class MetadataImporter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataImporter.Errors
  id: Errors
  parent: System.ServiceModel.Description.MetadataImporter
  langs:
  - csharp
  name: Errors
  nameWithType: MetadataImporter.Errors
  fullName: System.ServiceModel.Description.MetadataImporter.Errors
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Henter en verdi som angir om det oppstod feil under import av metadataene."
  remarks: "Alltid se egenskapen feil når du har importert metadataene og før du bruker metadataene."
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.ServiceModel.Description.MetadataConversionError> Errors { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.MetadataConversionError}
      description: "En samling av <xref href=&quot;System.ServiceModel.Description.MetadataConversionError&quot;> </xref> objekter."
  overload: System.ServiceModel.Description.MetadataImporter.Errors*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataImporter.ImportAllContracts
  id: ImportAllContracts
  parent: System.ServiceModel.Description.MetadataImporter
  langs:
  - csharp
  name: ImportAllContracts()
  nameWithType: MetadataImporter.ImportAllContracts()
  fullName: System.ServiceModel.Description.MetadataImporter.ImportAllContracts()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Returnerer en samling av kontrakter importert fra metadataene når overstyres i en avledet klasse."
  syntax:
    content: public abstract System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ContractDescription> ImportAllContracts ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ContractDescription}
      description: "Kontraktene importert fra metadataene."
  overload: System.ServiceModel.Description.MetadataImporter.ImportAllContracts*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints
  id: ImportAllEndpoints
  parent: System.ServiceModel.Description.MetadataImporter
  langs:
  - csharp
  name: ImportAllEndpoints()
  nameWithType: MetadataImporter.ImportAllEndpoints()
  fullName: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Når overstyrt i en avledet klasse, returnerer alle endepunkt i metadataene."
  remarks: "Implementere ImportAllEndpoints-metoden for å returnere alle endepunkt i de importerte metadataene. Metadataene som er importert som tjenesten endepunkter kan ikke brukes til å opprette en runtime eller eksportere metadata fordi de importerte endepunktene inneholder ingen behandlede typen informasjon. Hvis du vil bruke metadataene til å opprette en klient eller tjenesten runtime eller generere metadata, må du først generere kompilere koden fra metadataene og bruke denne typen informasjon for å opprette et nytt <xref:System.ServiceModel.Description.ContractDescription?displayProperty=fullName>objekt som bruker <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.</xref:System.ServiceModel.Description.ContractDescription.GetContract%2A> </xref:System.ServiceModel.Description.ContractDescription?displayProperty=fullName>"
  syntax:
    content: public abstract System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints ();
    parameters: []
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "En samling av &lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName&gt; objekter som er publisert av en tjeneste."
  overload: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataImporter.KnownContracts
  id: KnownContracts
  parent: System.ServiceModel.Description.MetadataImporter
  langs:
  - csharp
  name: KnownContracts
  nameWithType: MetadataImporter.KnownContracts
  fullName: System.ServiceModel.Description.MetadataImporter.KnownContracts
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Henter en ordliste for kontrakter etter navn som import kjenner til."
  remarks: "Bruk egenskapen KnownContracts til å legge til eller fjerne kontrakten beskrivelser og tilknyttede XML-navnene som kan referere til import."
  syntax:
    content: public System.Collections.Generic.Dictionary<System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription> KnownContracts { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription}
      description: "En ordliste for kontrakter oppført etter XML-kvalifisert navn."
  overload: System.ServiceModel.Description.MetadataImporter.KnownContracts*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions
  id: PolicyImportExtensions
  parent: System.ServiceModel.Description.MetadataImporter
  langs:
  - csharp
  name: PolicyImportExtensions
  nameWithType: MetadataImporter.PolicyImportExtensions
  fullName: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Henter en samling av policy-import av importer kall å behandle policydeklarasjon."
  remarks: "Bruk PolicyImportExtensions-egenskapen til å legge til eller fjerne policyen import som startes for å behandle policydeklarasjon i metadataene."
  syntax:
    content: public System.Collections.Generic.KeyedByTypeCollection<System.ServiceModel.Description.IPolicyImportExtension> PolicyImportExtensions { get; }
    return:
      type: System.Collections.Generic.KeyedByTypeCollection{System.ServiceModel.Description.IPolicyImportExtension}
      description: "En samling av policyen import som den <xref href=&quot;System.ServiceModel.Description.MetadataImporter&quot;> </xref> bruker til å behandle policydeklarasjon."
  overload: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataImporter.State
  id: State
  parent: System.ServiceModel.Description.MetadataImporter
  langs:
  - csharp
  name: State
  nameWithType: MetadataImporter.State
  fullName: System.ServiceModel.Description.MetadataImporter.State
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Henter eller angir en samling av objektene som brukes i import av metadata."
  remarks: "Bruk av `State` til å legge til eller fjerne objekter som brukes i import av metadata."
  example:
  - "The following example shows the use of the State property to add a custom <xref:System.Runtime.Serialization.XsdDataContractImporter?displayProperty=fullName> to import data structures in a particular way.  \n  \n [!code-cs[C_CustomWSDLExtensions#8](~/add/codesnippet/csharp/c_customwsdlextensions.client/client.cs#8)]"
  syntax:
    content: public System.Collections.Generic.Dictionary<object,object> State { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.Object,System.Object}
      description: "En ordliste for objekter som er rettet etter type."
  overload: System.ServiceModel.Description.MetadataImporter.State*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Description.MetadataImporter.Errors
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: Errors
  nameWithType: MetadataImporter.Errors
  fullName: System.ServiceModel.Description.MetadataImporter.Errors
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.MetadataConversionError}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<MetadataConversionError>
  nameWithType: Collection<MetadataConversionError>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.MetadataConversionError>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Description.MetadataConversionError>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.MetadataConversionError
    name: MetadataConversionError
    nameWithType: MetadataConversionError
    fullName: MetadataConversionError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Description.MetadataImporter.ImportAllContracts
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: ImportAllContracts()
  nameWithType: MetadataImporter.ImportAllContracts()
  fullName: System.ServiceModel.Description.MetadataImporter.ImportAllContracts()
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ContractDescription}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ContractDescription>
  nameWithType: Collection<ContractDescription>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ContractDescription>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Description.ContractDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ContractDescription
    name: ContractDescription
    nameWithType: ContractDescription
    fullName: ContractDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: ImportAllEndpoints()
  nameWithType: MetadataImporter.ImportAllEndpoints()
  fullName: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints()
- uid: System.ServiceModel.Description.ServiceEndpointCollection
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceEndpointCollection
  nameWithType: ServiceEndpointCollection
  fullName: System.ServiceModel.Description.ServiceEndpointCollection
- uid: System.ServiceModel.Description.MetadataImporter.KnownContracts
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: KnownContracts
  nameWithType: MetadataImporter.KnownContracts
  fullName: System.ServiceModel.Description.MetadataImporter.KnownContracts
- uid: System.Collections.Generic.Dictionary{System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<XmlQualifiedName,ContractDescription>
  nameWithType: Dictionary<XmlQualifiedName,ContractDescription>
  fullName: System.Collections.Generic.Dictionary<System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.XmlQualifiedName
    name: XmlQualifiedName
    nameWithType: XmlQualifiedName
    fullName: XmlQualifiedName
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.ServiceModel.Description.ContractDescription
    name: ContractDescription
    nameWithType: ContractDescription
    fullName: ContractDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: PolicyImportExtensions
  nameWithType: MetadataImporter.PolicyImportExtensions
  fullName: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions
- uid: System.Collections.Generic.KeyedByTypeCollection{System.ServiceModel.Description.IPolicyImportExtension}
  parent: System.Collections.Generic
  isExternal: false
  name: KeyedByTypeCollection<IPolicyImportExtension>
  nameWithType: KeyedByTypeCollection<IPolicyImportExtension>
  fullName: System.Collections.Generic.KeyedByTypeCollection<System.ServiceModel.Description.IPolicyImportExtension>
  spec.csharp:
  - uid: System.Collections.Generic.KeyedByTypeCollection`1
    name: KeyedByTypeCollection
    nameWithType: KeyedByTypeCollection
    fullName: KeyedByTypeCollection<System.ServiceModel.Description.IPolicyImportExtension>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.IPolicyImportExtension
    name: IPolicyImportExtension
    nameWithType: IPolicyImportExtension
    fullName: IPolicyImportExtension
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Description.MetadataImporter.State
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: State
  nameWithType: MetadataImporter.State
  fullName: System.ServiceModel.Description.MetadataImporter.State
- uid: System.Collections.Generic.Dictionary{System.Object,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<Object,Object>
  nameWithType: Dictionary<Object,Object>
  fullName: System.Collections.Generic.Dictionary<System.Object,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.Object,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Description.MetadataImporter.Errors*
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: Errors
  nameWithType: MetadataImporter.Errors
- uid: System.ServiceModel.Description.MetadataImporter.ImportAllContracts*
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: ImportAllContracts
  nameWithType: MetadataImporter.ImportAllContracts
- uid: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints*
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: ImportAllEndpoints
  nameWithType: MetadataImporter.ImportAllEndpoints
- uid: System.ServiceModel.Description.MetadataImporter.KnownContracts*
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: KnownContracts
  nameWithType: MetadataImporter.KnownContracts
- uid: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions*
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: PolicyImportExtensions
  nameWithType: MetadataImporter.PolicyImportExtensions
- uid: System.ServiceModel.Description.MetadataImporter.State*
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: State
  nameWithType: MetadataImporter.State
