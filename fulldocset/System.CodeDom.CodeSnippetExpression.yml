### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeSnippetExpression
  id: CodeSnippetExpression
  children:
  - System.CodeDom.CodeSnippetExpression.#ctor
  - System.CodeDom.CodeSnippetExpression.#ctor(System.String)
  - System.CodeDom.CodeSnippetExpression.Value
  langs:
  - csharp
  name: CodeSnippetExpression
  nameWithType: CodeSnippetExpression
  fullName: System.CodeDom.CodeSnippetExpression
  type: Class
  summary: "Representerer et litteralt uttrykk."
  remarks: "En litteral uttrykket lagrer koden for et uttrykk som en litteral code-fragment. CodeDOM oversetter ikke litteral kodefragmenter. Litteralen kodefragmenter lagres, og sender slik de er. CodeDOM objekter som inneholder litteral kode er angitt slik at utviklere kan omfatter kode som allerede finnes p책 spr책ket som m책l.       Den <xref:System.CodeDom.CodeSnippetExpression.Value%2A>egenskapen inneholder litteral koden for dette uttrykket kodesnutt.</xref:System.CodeDom.CodeSnippetExpression.Value%2A>"
  example:
  - "The following code example demonstrates how to create an instance of the CodeSnippetExpression class using a literal code fragment.  \n  \n [!code-cpp[CodeDomSampleBatch#9](~/add/codesnippet/cpp/t-system.codedom.codesni_1_1.cpp)]\n [!code-vb[CodeDomSampleBatch#9](~/add/codesnippet/visualbasic/t-system.codedom.codesni_1_1.vb)]\n [!code-cs[CodeDomSampleBatch#9](~/add/codesnippet/csharp/t-system.codedom.codesni_1_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeSnippetExpression : System.CodeDom.CodeExpression
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  - System.CodeDom.CodeExpression
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  platform:
  - net462
- uid: System.CodeDom.CodeSnippetExpression.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeSnippetExpression
  langs:
  - csharp
  name: CodeSnippetExpression()
  nameWithType: CodeSnippetExpression.CodeSnippetExpression()
  fullName: System.CodeDom.CodeSnippetExpression.CodeSnippetExpression()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.CodeDom.CodeSnippetExpression&quot;> </xref> klasse."
  syntax:
    content: public CodeSnippetExpression ();
    parameters: []
  overload: System.CodeDom.CodeSnippetExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeSnippetExpression.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.CodeDom.CodeSnippetExpression
  langs:
  - csharp
  name: CodeSnippetExpression(String)
  nameWithType: CodeSnippetExpression.CodeSnippetExpression(String)
  fullName: System.CodeDom.CodeSnippetExpression.CodeSnippetExpression(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.CodeDom.CodeSnippetExpression&quot;> </xref> klasse ved hjelp av det angitte Litteralen uttrykket."
  remarks: ''
  example:
  - "The following code example demonstrates in the use of the CodeSnippetExpression constructor to create an instance of the <xref:System.CodeDom.CodeSnippetExpression> class.  \n  \n [!code-cpp[CodeDomSampleBatch#9](~/add/codesnippet/cpp/m-system.codedom.codesni_0_1.cpp)]\n [!code-vb[CodeDomSampleBatch#9](~/add/codesnippet/visualbasic/m-system.codedom.codesni_0_1.vb)]\n [!code-cs[CodeDomSampleBatch#9](~/add/codesnippet/csharp/m-system.codedom.codesni_0_1.cs)]"
  syntax:
    content: public CodeSnippetExpression (string value);
    parameters:
    - id: value
      type: System.String
      description: "Litteralen uttrykket til 책 representere."
  overload: System.CodeDom.CodeSnippetExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeSnippetExpression.Value
  id: Value
  parent: System.CodeDom.CodeSnippetExpression
  langs:
  - csharp
  name: Value
  nameWithType: CodeSnippetExpression.Value
  fullName: System.CodeDom.CodeSnippetExpression.Value
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Henter eller angir strenglitteral code."
  remarks: "Dette kan inneholde kode eller kommentarer."
  syntax:
    content: public string Value { get; set; }
    return:
      type: System.String
      description: "Strenglitteral."
  overload: System.CodeDom.CodeSnippetExpression.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeExpression
  isExternal: false
  name: System.CodeDom.CodeExpression
- uid: System.CodeDom.CodeSnippetExpression.#ctor
  parent: System.CodeDom.CodeSnippetExpression
  isExternal: false
  name: CodeSnippetExpression()
  nameWithType: CodeSnippetExpression.CodeSnippetExpression()
  fullName: System.CodeDom.CodeSnippetExpression.CodeSnippetExpression()
- uid: System.CodeDom.CodeSnippetExpression.#ctor(System.String)
  parent: System.CodeDom.CodeSnippetExpression
  isExternal: false
  name: CodeSnippetExpression(String)
  nameWithType: CodeSnippetExpression.CodeSnippetExpression(String)
  fullName: System.CodeDom.CodeSnippetExpression.CodeSnippetExpression(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.CodeSnippetExpression.Value
  parent: System.CodeDom.CodeSnippetExpression
  isExternal: false
  name: Value
  nameWithType: CodeSnippetExpression.Value
  fullName: System.CodeDom.CodeSnippetExpression.Value
- uid: System.CodeDom.CodeSnippetExpression.#ctor*
  parent: System.CodeDom.CodeSnippetExpression
  isExternal: false
  name: CodeSnippetExpression
  nameWithType: CodeSnippetExpression.CodeSnippetExpression
- uid: System.CodeDom.CodeSnippetExpression.Value*
  parent: System.CodeDom.CodeSnippetExpression
  isExternal: false
  name: Value
  nameWithType: CodeSnippetExpression.Value
