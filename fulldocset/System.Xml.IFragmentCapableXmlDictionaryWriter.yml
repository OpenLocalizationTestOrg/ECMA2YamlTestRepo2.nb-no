### YamlMime:ManagedReference
items:
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter
  id: IFragmentCapableXmlDictionaryWriter
  children:
  - System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment
  - System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment
  - System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)
  - System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  name: IFragmentCapableXmlDictionaryWriter
  nameWithType: IFragmentCapableXmlDictionaryWriter
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter
  type: Interface
  summary: "Inneholder egenskaper og metoder som på implementeres av en <xref:System.Xml.XmlDictionaryWriter>, tillater behandling av XML-fragmenter.</xref:System.Xml.XmlDictionaryWriter>"
  remarks: "Denne klassen definerer egenskaper og metoder som er relatert til muligheten til en <xref:System.Xml.XmlDictionaryWriter>å omdirigere en del av utdataene (et, fragment,) til en annen dataflyt enn stream den ble opprettet med. og sette inn fragmentet hentes av omadressering tilbake til den primære dataflyten for samme skriveren senere direkte.</xref:System.Xml.XmlDictionaryWriter>"
  syntax:
    content: public interface IFragmentCapableXmlDictionaryWriter
  implements: []
  platform:
  - net462
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment
  id: CanFragment
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  langs:
  - csharp
  name: CanFragment
  nameWithType: IFragmentCapableXmlDictionaryWriter.CanFragment
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment
  type: Property
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Xml
  summary: "Henter en verdi som angir om dette <xref:System.Xml.XmlDictionaryWriter>kan behandle XML-fragmenter.</xref:System.Xml.XmlDictionaryWriter>"
  remarks: "Returnerer t`r`ue Hvis skriveren som implementerer dette grensesnittet kan generere og godta XML-fragmenter."
  syntax:
    content: public bool CanFragment { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref:System.Xml.XmlDictionaryWriter>kan behandle XML-fragmenter; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlDictionaryWriter>"
  overload: System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment
  id: EndFragment
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  langs:
  - csharp
  name: EndFragment()
  nameWithType: IFragmentCapableXmlDictionaryWriter.EndFragment()
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment()
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Xml
  summary: "Avslutter behandling av en XML-fragment."
  remarks: "Stopper omadressere utdata til dataflyten ble levert av den tilsvarende `StartFragment` kall. Etter dette kallet XML skriving utdata går til dataflyten opprinnelig brukes av skriveren før den `StartFragment` kall."
  syntax:
    content: public void EndFragment ();
    parameters: []
  overload: System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)
  id: StartFragment(System.IO.Stream,System.Boolean)
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  langs:
  - csharp
  name: StartFragment(Stream,Boolean)
  nameWithType: IFragmentCapableXmlDictionaryWriter.StartFragment(Stream,Boolean)
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(Stream,Boolean)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Xml
  summary: "Starter behandling av en XML-fragment."
  remarks: "Starter midlertidig omadressering skriving av XML-utdataene til den angitte dataflyten før `EndFragment` kalles. Hvis `generateSelfContainedTextFragment` er `true`, og deretter sender omdirigerte XML er alltid teksten XML og uavhengige med hensyn til navneområde konteksten. `StartFragment`kan ikke nestes ()-kall."
  syntax:
    content: public void StartFragment (System.IO.Stream stream, bool generateSelfContainedTextFragment);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Ikke skrive til dataflyten."
    - id: generateSelfContainedTextFragment
      type: System.Boolean
      description: "Hvis <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, navneområder som er deklarert utenfor fragmentet er deklarert på nytt hvis brukes inni den; hvis <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> navneområdene ikke er deklarert på nytt."
  overload: System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)
  id: WriteFragment(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  langs:
  - csharp
  name: WriteFragment(Byte[],Int32,Int32)
  nameWithType: IFragmentCapableXmlDictionaryWriter.WriteFragment(Byte[],Int32,Int32)
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Xml
  summary: "Skriver en XML-fragmentet underliggende dataflyten for skriveren."
  remarks: "Skriver en fragment hentet mellom `StartFragment` og `EndFragment` og kall tilbake til det XmlDictionaryWriter primære dataflyten. Fragment skrevet er `count` byte som starter ved indeks `offset` fra den angitte `buffer`. Virkemåten er ikke definert hvis det angitte fragmentet ikke ble lagret med denne writer-forekomsten."
  example:
  - "```  \nMemoryStream stream = new MemoryStream();  \nMemoryStream fragmentStream = new MemoryStream();  \nXmlDictionaryWriter writer = XmlDictionaryWriter.CreateTextWriter(stream);  \nIXmlFragmentCapableXmlDictionaryWriter fragmentWriter = writer as IXmlFragmentCapableXmlDictionaryWriter;  \nif (fragmentWriter == null || !fragmentWriter.CanFragment)  \n{  \nConsole.WriteLine(\"This writer doesn't support fragments\");  \nreturn;  \n}  \nwriter.WriteStartElement(\"Root\");  \nfragmentWriter.StartFragment(fragmentStream, false);  \nwriter.WriteStartElement(\"Body\");  \nwriter.WriteString(\"This is my body\");  \nwriter.WriteEndElement();  \nfragmentWriter.EndFragment();  \nwriter.WriteStartElement(\"CharsInTheBody\");  \nwriter.WriteValue(fragmentStream.Length);  \nwriter.WriteEndElement();  \nfragmentWriter.WriteFragment(fragmentStream.GetBuffer(), 0, (int)fragmentStream.Length);  \nwriter.WriteEndElement(); // Root  \n```"
  syntax:
    content: public void WriteFragment (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Buffer til å skrive til."
    - id: offset
      type: System.Int32
      description: "Startposisjonen som å skrive i `buffer`."
    - id: count
      type: System.Int32
      description: "Antall byte som skrives til det `buffer`."
  overload: System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  isExternal: false
  name: CanFragment
  nameWithType: IFragmentCapableXmlDictionaryWriter.CanFragment
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  isExternal: false
  name: EndFragment()
  nameWithType: IFragmentCapableXmlDictionaryWriter.EndFragment()
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment()
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  isExternal: false
  name: StartFragment(Stream,Boolean)
  nameWithType: IFragmentCapableXmlDictionaryWriter.StartFragment(Stream,Boolean)
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(Stream,Boolean)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  isExternal: false
  name: WriteFragment(Byte[],Int32,Int32)
  nameWithType: IFragmentCapableXmlDictionaryWriter.WriteFragment(Byte[],Int32,Int32)
  fullName: System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment*
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  isExternal: false
  name: CanFragment
  nameWithType: IFragmentCapableXmlDictionaryWriter.CanFragment
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment*
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  isExternal: false
  name: EndFragment
  nameWithType: IFragmentCapableXmlDictionaryWriter.EndFragment
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment*
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  isExternal: false
  name: StartFragment
  nameWithType: IFragmentCapableXmlDictionaryWriter.StartFragment
- uid: System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment*
  parent: System.Xml.IFragmentCapableXmlDictionaryWriter
  isExternal: false
  name: WriteFragment
  nameWithType: IFragmentCapableXmlDictionaryWriter.WriteFragment
