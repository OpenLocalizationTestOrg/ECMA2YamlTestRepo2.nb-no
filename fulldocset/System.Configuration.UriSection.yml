### YamlMime:ManagedReference
items:
- uid: System.Configuration.UriSection
  id: UriSection
  children:
  - System.Configuration.UriSection.#ctor
  - System.Configuration.UriSection.Idn
  - System.Configuration.UriSection.IriParsing
  - System.Configuration.UriSection.Properties
  - System.Configuration.UriSection.SchemeSettings
  langs:
  - csharp
  name: UriSection
  nameWithType: UriSection
  fullName: System.Configuration.UriSection
  type: Class
  summary: "Representerer Uri-delen i en konfigurasjonsfil."
  remarks: "Den eksisterende <xref:System.Uri?displayProperty=fullName>klassen er utvidet for å gi støtte for International ressursen identifikatorer (IRI) og internasjonale domenenavn.</xref:System.Uri?displayProperty=fullName> Gjeldende brukere vil ikke ser noen endring fra .NET Framework 2.0 virkemåte med mindre de spesielt gir IRI IDN. Dette sikrer programmet kompatibilitet med tidligere versjoner av .NET Framework.       Konfigurasjonsinnstillingene for IRI og IDN kan hentes ved hjelp av UriSection-klassen."
  syntax:
    content: 'public sealed class UriSection : System.Configuration.ConfigurationSection'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.Configuration.ConfigurationSection
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)
  - System.Configuration.ConfigurationSection.GetRuntimeObject
  - System.Configuration.ConfigurationSection.IsModified
  - System.Configuration.ConfigurationSection.ResetModified
  - System.Configuration.ConfigurationSection.SectionInformation
  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)
  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)
  platform:
  - net462
- uid: System.Configuration.UriSection.#ctor
  id: '#ctor'
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: UriSection()
  nameWithType: UriSection.UriSection()
  fullName: System.Configuration.UriSection.UriSection()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Configuration.UriSection&quot;> </xref> klasse."
  remarks: "Den eksisterende <xref:System.Uri?displayProperty=fullName>klassen er utvidet for å gi støtte for International ressursen identifikatorer (IRI) og internasjonale domenenavn.</xref:System.Uri?displayProperty=fullName> Gjeldende brukere vil ikke ser noen endring fra .NET Framework 2.0 virkemåte med mindre de spesielt gir IRI IDN. Dette sikrer programmet kompatibilitet med tidligere versjoner av .NET Framework.       Konfigurasjonsinnstillingene for IRI og IDN kan hentes ved å bruke <xref:System.Configuration.UriSection>klasse.</xref:System.Configuration.UriSection>       Hvis du vil ha mer informasjon om IRI støtte, kan du se delen Merknader for <xref:System.Uri?displayProperty=fullName>klasse.</xref:System.Uri?displayProperty=fullName>"
  syntax:
    content: public UriSection ();
    parameters: []
  overload: System.Configuration.UriSection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.UriSection.Idn
  id: Idn
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: Idn
  nameWithType: UriSection.Idn
  fullName: System.Configuration.UriSection.Idn
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Henter en <xref href=&quot;System.Configuration.IdnElement&quot;> </xref> objekt som inneholder konfigurasjonsinnstillingen for International domene navnet (IDN) behandling i den &lt;xref:System.Uri?displayProperty=fullName&gt; klasse."
  remarks: "Den eksisterende <xref:System.Uri?displayProperty=fullName>klassen er utvidet for å gi støtte for International ressursen identifikatorer (IRI) og internasjonale domenenavn.</xref:System.Uri?displayProperty=fullName> Gjeldende brukere vil ikke ser noen endring fra .NET Framework 2.0 virkemåte med mindre de spesielt gir IRI IDN. Dette sikrer programmet kompatibilitet med tidligere versjoner av .NET Framework.       Konfigurasjonsinnstillingene for IRI og IDN kan hentes ved å bruke <xref:System.Configuration.UriSection>klasse.</xref:System.Configuration.UriSection> Egenskapen Idn returnerer konfigurasjonsinnstillingen for IDN behandling i <xref:System.Uri?displayProperty=fullName>klasse.</xref:System.Uri?displayProperty=fullName>       IRI behandling må være aktivert for IDN behandling for å være mulig. Hvis IRI behandling er deaktivert, settes IDN behandling til standardinnstillingen der .NET Framework 2.0-virkemåten brukes for kompatibilitet og IDN-navn er ikke brukt.       Attributtet internasjonale domene navnet (IDN) kontrollerer bare IDN-behandling. Alle andre IRI behandling (for eksempel tegn normalization) utføres som standard.       Konfigurasjonsinnstillingen for den <xref:System.Configuration.IdnElement>leses når når første <xref:System.Uri?displayProperty=fullName>klassen bygges.</xref:System.Uri?displayProperty=fullName> </xref:System.Configuration.IdnElement> Endringer i konfigurasjonsinnstillingene da ignoreres.       Hvis du vil ha mer informasjon om IRI støtte, kan du se delen Merknader for <xref:System.Uri?displayProperty=fullName>klasse.</xref:System.Uri?displayProperty=fullName>"
  syntax:
    content: public System.Configuration.IdnElement Idn { get; }
    return:
      type: System.Configuration.IdnElement
      description: "Konfigurasjonsinnstillingen for International domene navnet (IDN) behandling i den &lt;xref:System.Uri?displayProperty=fullName&gt; klasse."
  overload: System.Configuration.UriSection.Idn*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.UriSection.IriParsing
  id: IriParsing
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: IriParsing
  nameWithType: UriSection.IriParsing
  fullName: System.Configuration.UriSection.IriParsing
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Henter en <xref href=&quot;System.Configuration.IriParsingElement&quot;> </xref> objekt som inneholder konfigurasjonsinnstillingen for International ressursen identifikatorer (IRI) analyse av &lt;xref:System.Uri?displayProperty=fullName&gt; klasse."
  remarks: "Den eksisterende <xref:System.Uri?displayProperty=fullName>klassen er utvidet for å gi støtte for International ressursen identifikatorer (IRI) og internasjonale domenenavn.</xref:System.Uri?displayProperty=fullName> Gjeldende brukere vil ikke ser noen endring fra .NET Framework 2.0 virkemåte med mindre de spesielt gir IRI IDN. Dette sikrer programmet kompatibilitet med tidligere versjoner av .NET Framework.       Konfigurasjonsinnstillingene for IRI og IDN kan hentes ved å bruke <xref:System.Configuration.UriSection>klasse.</xref:System.Configuration.UriSection> Egenskapen IriParsing returnerer konfigurasjonsinnstillingen for IRI analyse <xref:System.Uri?displayProperty=fullName>klasse.</xref:System.Uri?displayProperty=fullName>       IRI behandling må være aktivert for IDN behandling for å være mulig. Hvis IRI behandling er deaktivert, settes IDN behandling til standardinnstillingen der .NET Framework 2.0-virkemåten brukes for kompatibilitet og IDN-navn er ikke brukt.       Attributtet internasjonale domene navnet (IDN) kontrollerer bare IDN-behandling. Alle andre IRI behandling (for eksempel tegn normalization) utføres som standard.       Konfigurasjonsinnstillingen for den <xref:System.Configuration.IriParsingElement>leses når når første <xref:System.Uri?displayProperty=fullName>klassen bygges.</xref:System.Uri?displayProperty=fullName> </xref:System.Configuration.IriParsingElement> Endringer i konfigurasjonsinnstillingene da ignoreres.       Hvis du vil ha mer informasjon om IRI støtte, kan du se delen Merknader for <xref:System.Uri?displayProperty=fullName>klasse.</xref:System.Uri?displayProperty=fullName>"
  syntax:
    content: public System.Configuration.IriParsingElement IriParsing { get; }
    return:
      type: System.Configuration.IriParsingElement
      description: "Konfigurasjonsinnstillingen for International ressursen identifikatorer (IRI) analyse av &lt;xref:System.Uri?displayProperty=fullName&gt; klasse."
  overload: System.Configuration.UriSection.IriParsing*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.UriSection.Properties
  id: Properties
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: Properties
  nameWithType: UriSection.Properties
  fullName: System.Configuration.UriSection.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "Som skal legges til."
  overload: System.Configuration.UriSection.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.UriSection.SchemeSettings
  id: SchemeSettings
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: SchemeSettings
  nameWithType: UriSection.SchemeSettings
  fullName: System.Configuration.UriSection.SchemeSettings
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Henter en <xref href=&quot;System.Configuration.SchemeSettingElementCollection&quot;> </xref> objekt som inneholder konfigurasjonsinnstillingene for skjemaet analyse av &lt;xref:System.Uri?displayProperty=fullName&gt; klasse."
  remarks: "Egenskapen SchemeSettings er generisk. Bare genericUriParserOptions = &quot;DontUnescapePathDotsAndSlashes&quot; konfigurasjonsinnstillingen for HTTP og HTTPS skjemaene støttes. Alle andre innstillinger, ignoreres."
  syntax:
    content: public System.Configuration.SchemeSettingElementCollection SchemeSettings { get; }
    return:
      type: System.Configuration.SchemeSettingElementCollection
      description: "Konfigurasjonsinnstillingene for skjemaet analyse av &lt;xref:System.Uri?displayProperty=fullName&gt; klassen"
  overload: System.Configuration.UriSection.SchemeSettings*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationSection
  isExternal: false
  name: System.Configuration.ConfigurationSection
- uid: System.Configuration.UriSection.#ctor
  parent: System.Configuration.UriSection
  isExternal: false
  name: UriSection()
  nameWithType: UriSection.UriSection()
  fullName: System.Configuration.UriSection.UriSection()
- uid: System.Configuration.UriSection.Idn
  parent: System.Configuration.UriSection
  isExternal: false
  name: Idn
  nameWithType: UriSection.Idn
  fullName: System.Configuration.UriSection.Idn
- uid: System.Configuration.IdnElement
  parent: System.Configuration
  isExternal: false
  name: IdnElement
  nameWithType: IdnElement
  fullName: System.Configuration.IdnElement
- uid: System.Configuration.UriSection.IriParsing
  parent: System.Configuration.UriSection
  isExternal: false
  name: IriParsing
  nameWithType: UriSection.IriParsing
  fullName: System.Configuration.UriSection.IriParsing
- uid: System.Configuration.IriParsingElement
  parent: System.Configuration
  isExternal: false
  name: IriParsingElement
  nameWithType: IriParsingElement
  fullName: System.Configuration.IriParsingElement
- uid: System.Configuration.UriSection.Properties
  parent: System.Configuration.UriSection
  isExternal: false
  name: Properties
  nameWithType: UriSection.Properties
  fullName: System.Configuration.UriSection.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Configuration.UriSection.SchemeSettings
  parent: System.Configuration.UriSection
  isExternal: false
  name: SchemeSettings
  nameWithType: UriSection.SchemeSettings
  fullName: System.Configuration.UriSection.SchemeSettings
- uid: System.Configuration.SchemeSettingElementCollection
  parent: System.Configuration
  isExternal: false
  name: SchemeSettingElementCollection
  nameWithType: SchemeSettingElementCollection
  fullName: System.Configuration.SchemeSettingElementCollection
- uid: System.Configuration.UriSection.#ctor*
  parent: System.Configuration.UriSection
  isExternal: false
  name: UriSection
  nameWithType: UriSection.UriSection
- uid: System.Configuration.UriSection.Idn*
  parent: System.Configuration.UriSection
  isExternal: false
  name: Idn
  nameWithType: UriSection.Idn
- uid: System.Configuration.UriSection.IriParsing*
  parent: System.Configuration.UriSection
  isExternal: false
  name: IriParsing
  nameWithType: UriSection.IriParsing
- uid: System.Configuration.UriSection.Properties*
  parent: System.Configuration.UriSection
  isExternal: false
  name: Properties
  nameWithType: UriSection.Properties
- uid: System.Configuration.UriSection.SchemeSettings*
  parent: System.Configuration.UriSection
  isExternal: false
  name: SchemeSettings
  nameWithType: UriSection.SchemeSettings
