### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.NestedContainer
  id: NestedContainer
  children:
  - System.ComponentModel.NestedContainer.#ctor(System.ComponentModel.IComponent)
  - System.ComponentModel.NestedContainer.CreateSite(System.ComponentModel.IComponent,System.String)
  - System.ComponentModel.NestedContainer.Dispose(System.Boolean)
  - System.ComponentModel.NestedContainer.GetService(System.Type)
  - System.ComponentModel.NestedContainer.Owner
  - System.ComponentModel.NestedContainer.OwnerName
  langs:
  - csharp
  name: NestedContainer
  nameWithType: NestedContainer
  fullName: System.ComponentModel.NestedContainer
  type: Class
  summary: "Gir base implementering for den <xref href=&quot;System.ComponentModel.INestedContainer&quot;> </xref> grensesnittet som aktiverer beholdere har en eier komponent."
  remarks: "Klassen NestedContainer er en enkel implementering av den <xref:System.ComponentModel.INestedContainer>grensesnittet som definerer en komponent som inneholder null eller flere komponenter logisk og eies av en overordnet komponent.</xref:System.ComponentModel.INestedContainer> Virkemåten for nestede beholdere er forskjellig fra en standard <xref:System.ComponentModel.Container>på en rekke måter, inkludert følgende:-område egenskaper som <xref:System.ComponentModel.Component.DesignMode%2A>og <xref:System.ComponentModel.Component.GetService%2A>rutes gjennom eier komponentens området.</xref:System.ComponentModel.Component.GetService%2A> </xref:System.ComponentModel.Component.DesignMode%2A> </xref:System.ComponentModel.Container>      -Området <xref:System.ComponentModel.ISite.Name%2A>egenskapen er et kvalifisert navn som inkluderer eier komponentens navnet etterfulgt av et punktum (.) og underordnede Komponentnavn.</xref:System.ComponentModel.ISite.Name%2A>      - <xref:System.ComponentModel.NestedContainer.GetService%2A>gir støtte for den <xref:System.ComponentModel.INestedContainer>som en tjeneste.</xref:System.ComponentModel.INestedContainer> </xref:System.ComponentModel.NestedContainer.GetService%2A>      -Når eier komponenten er fjernet, er fjernet samt i beholderen.       I tillegg behandle utviklere nestede beholdere på en annen måte. Spørringsutformer vert bare er interessert i én beholder – det som er forbundet med verten. Derfor komponent legge til og fjerne hendelser, ikke aktiveres når en komponent er lagt til eller fjernes fra en nestet beholder. Imidlertid fordi services flyte gjennom nestede beholderen, komponenten endre hendelser registreres når en komponent i en nestet beholder er endret.       Denne disparity i hendelsessporing påvirker også Angre funksjonalitet, noe som er nært knyttet til serialisering. Standard Angre motoren bruker <xref:System.ComponentModel.Design.IReferenceService>for sporing av endringer i komponenter.</xref:System.ComponentModel.Design.IReferenceService> Hvis Angre motoren ikke kan identifisere et navn for en komponent gjennom tjenesten referanse, ignorere motoren endringer for denne komponenten. Denne tjenesten gjenkjenner automatisk endringer av inneholder komponenter bare hvis de vises som offentlig skrivebeskyttede egenskaper med samme navn i sine eiere. Utvikleren må ellers sendes komponent endre hendelser opptil eieren. Hvis en nestet komponent for eksempel `Text` egenskapen resurfaced på den eier komponenten som en `Address` egenskapen, når den `Text` -egenskapen, endring av en må gjøres programmatisk for den tilsvarende `Address` egenskapen, ellers endringen ikke vil spores av Angre."
  syntax:
    content: 'public class NestedContainer : System.ComponentModel.Container, IDisposable, System.ComponentModel.INestedContainer'
  inheritance:
  - System.Object
  - System.ComponentModel.Container
  implements:
  - System.ComponentModel.INestedContainer
  - System.IDisposable
  inheritedMembers:
  - System.ComponentModel.Container.Add(System.ComponentModel.IComponent)
  - System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)
  - System.ComponentModel.Container.Components
  - System.ComponentModel.Container.Dispose
  - System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)
  - System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)
  - System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)
  platform:
  - net462
- uid: System.ComponentModel.NestedContainer.#ctor(System.ComponentModel.IComponent)
  id: '#ctor(System.ComponentModel.IComponent)'
  parent: System.ComponentModel.NestedContainer
  langs:
  - csharp
  name: NestedContainer(IComponent)
  nameWithType: NestedContainer.NestedContainer(IComponent)
  fullName: System.ComponentModel.NestedContainer.NestedContainer(IComponent)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.ComponentModel.NestedContainer&quot;> </xref> klasse."
  remarks: "Denne konstruktøren innrullerer i eieren <xref:System.ComponentModel.IComponent.Disposed>hendelsen slik at den nestede beholderen <xref:System.ComponentModel.NestedContainer.Dispose%2A>metoden vil automatisk bli kalt.</xref:System.ComponentModel.NestedContainer.Dispose%2A> </xref:System.ComponentModel.IComponent.Disposed>"
  syntax:
    content: public NestedContainer (System.ComponentModel.IComponent owner);
    parameters:
    - id: owner
      type: System.ComponentModel.IComponent
      description: "Den <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> som eier denne nestede beholderen."
  overload: System.ComponentModel.NestedContainer.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>owner</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.NestedContainer.CreateSite(System.ComponentModel.IComponent,System.String)
  id: CreateSite(System.ComponentModel.IComponent,System.String)
  parent: System.ComponentModel.NestedContainer
  langs:
  - csharp
  name: CreateSite(IComponent,String)
  nameWithType: NestedContainer.CreateSite(IComponent,String)
  fullName: System.ComponentModel.NestedContainer.CreateSite(IComponent,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Oppretter et område for komponenten i beholderen."
  remarks: "Hvis den `name` parameteren er `null`, <xref:System.ComponentModel.IComponent>legges til i beholderen nestede uten et identifiserende navn.</xref:System.ComponentModel.IComponent>"
  syntax:
    content: protected override System.ComponentModel.ISite CreateSite (System.ComponentModel.IComponent component, string name);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Den <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> du oppretter et område for."
    - id: name
      type: System.String
      description: "Navnet skal tilordnes `component`, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> å hoppe over tilordningen navn."
    return:
      type: System.ComponentModel.ISite
      description: "Den nyopprettede <xref href=&quot;System.ComponentModel.ISite&quot;> </xref>."
  overload: System.ComponentModel.NestedContainer.CreateSite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.NestedContainer.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.NestedContainer
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: NestedContainer.Dispose(Boolean)
  fullName: System.ComponentModel.NestedContainer.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Frigir ressursene som brukes av nestede beholderen."
  remarks: "Denne metoden kalles av offentlig `Dispose()` metoden og <xref:System.Object.Finalize%2A>metode.</xref:System.Object.Finalize%2A> `Dispose()`Aktiverer den beskyttede `Dispose(Boolean)` metoden med den `disposing` parameteren satt til `true`. <xref:System.Object.Finalize%2A>aktiverer `Dispose` med `disposing` satt til `false`.</xref:System.Object.Finalize%2A>       Når den `disposing` -parameteren er SANN, denne metoden Frigjør alle ressurser holdes av administrerte objekter som denne <xref:System.ComponentModel.NestedContainer>referanser.</xref:System.ComponentModel.NestedContainer> Denne metoden starter den `Dispose()` metode for hver referert objekt."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>å frigjøre både administrerte og uforvaltede ressurser. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> frigi bare uforvaltede ressurser."
  overload: System.ComponentModel.NestedContainer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.NestedContainer.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.NestedContainer
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: NestedContainer.GetService(Type)
  fullName: System.ComponentModel.NestedContainer.GetService(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Henter serviceobjekt av den angitte typen hvis den er tilgjengelig."
  remarks: "Denne metoden overstyrer den <xref:System.ComponentModel.Container.GetService%2A?displayProperty=fullName>metoden.</xref:System.ComponentModel.Container.GetService%2A?displayProperty=fullName> Denne implementeringen løser bare forespørsler for den <xref:System.ComponentModel.INestedContainer>og <xref:System.ComponentModel.IContainer>services.</xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.INestedContainer>"
  syntax:
    content: protected override object GetService (Type service);
    parameters:
    - id: service
      type: System.Type
      description: "Den <xref:System.Type>på tjenesten som skal hente.</xref:System.Type>"
    return:
      type: System.Object
      description: "En <xref:System.Object>som implementerer tjenesten, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis tjenesten kan ikke løses.</xref:System.Object>"
  overload: System.ComponentModel.NestedContainer.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.NestedContainer.Owner
  id: Owner
  parent: System.ComponentModel.NestedContainer
  langs:
  - csharp
  name: Owner
  nameWithType: NestedContainer.Owner
  fullName: System.ComponentModel.NestedContainer.Owner
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Henter eier komponenten for denne nestede beholderen."
  remarks: "Eier komponenten er kjennetegn som skiller nestede beholdere fra vanlige beholdere."
  syntax:
    content: public System.ComponentModel.IComponent Owner { get; }
    return:
      type: System.ComponentModel.IComponent
      description: "Den <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> som eier denne nestede beholderen."
  overload: System.ComponentModel.NestedContainer.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.NestedContainer.OwnerName
  id: OwnerName
  parent: System.ComponentModel.NestedContainer
  langs:
  - csharp
  name: OwnerName
  nameWithType: NestedContainer.OwnerName
  fullName: System.ComponentModel.NestedContainer.OwnerName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Henter navnet på komponenten eier."
  remarks: "Denne egenskapen kan overstyres for å angi et eiernavn på egendefinerte. Standard implementering søker eieren av området for <xref:System.ComponentModel.INestedSite>og samtaler <xref:System.ComponentModel.INestedSite.FullName%2A>, eller <xref:System.ComponentModel.ISite.Name%2A>Hvis det er ingen nestede områder.</xref:System.ComponentModel.ISite.Name%2A> </xref:System.ComponentModel.INestedSite.FullName%2A> </xref:System.ComponentModel.INestedSite> Hvis ingen er tilgjengelig, denne egenskapen returnerer `null`."
  syntax:
    content: protected virtual string OwnerName { get; }
    return:
      type: System.String
      description: "Navnet på komponenten eier."
  overload: System.ComponentModel.NestedContainer.OwnerName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Container
  isExternal: false
  name: System.ComponentModel.Container
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.NestedContainer.#ctor(System.ComponentModel.IComponent)
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: NestedContainer(IComponent)
  nameWithType: NestedContainer.NestedContainer(IComponent)
  fullName: System.ComponentModel.NestedContainer.NestedContainer(IComponent)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ComponentModel.NestedContainer.CreateSite(System.ComponentModel.IComponent,System.String)
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: CreateSite(IComponent,String)
  nameWithType: NestedContainer.CreateSite(IComponent,String)
  fullName: System.ComponentModel.NestedContainer.CreateSite(IComponent,String)
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.NestedContainer.Dispose(System.Boolean)
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: NestedContainer.Dispose(Boolean)
  fullName: System.ComponentModel.NestedContainer.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.NestedContainer.GetService(System.Type)
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: GetService(Type)
  nameWithType: NestedContainer.GetService(Type)
  fullName: System.ComponentModel.NestedContainer.GetService(Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.NestedContainer.Owner
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: Owner
  nameWithType: NestedContainer.Owner
  fullName: System.ComponentModel.NestedContainer.Owner
- uid: System.ComponentModel.NestedContainer.OwnerName
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: OwnerName
  nameWithType: NestedContainer.OwnerName
  fullName: System.ComponentModel.NestedContainer.OwnerName
- uid: System.ComponentModel.NestedContainer.#ctor*
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: NestedContainer
  nameWithType: NestedContainer.NestedContainer
- uid: System.ComponentModel.NestedContainer.CreateSite*
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: CreateSite
  nameWithType: NestedContainer.CreateSite
- uid: System.ComponentModel.NestedContainer.Dispose*
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: Dispose
  nameWithType: NestedContainer.Dispose
- uid: System.ComponentModel.NestedContainer.GetService*
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: GetService
  nameWithType: NestedContainer.GetService
- uid: System.ComponentModel.NestedContainer.Owner*
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: Owner
  nameWithType: NestedContainer.Owner
- uid: System.ComponentModel.NestedContainer.OwnerName*
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: OwnerName
  nameWithType: NestedContainer.OwnerName
