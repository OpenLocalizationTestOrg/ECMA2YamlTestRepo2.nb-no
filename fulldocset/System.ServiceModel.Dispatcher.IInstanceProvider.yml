### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.IInstanceProvider
  id: IInstanceProvider
  children:
  - System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext)
  - System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)
  - System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance(System.ServiceModel.InstanceContext,System.Object)
  langs:
  - csharp
  name: IInstanceProvider
  nameWithType: IInstanceProvider
  fullName: System.ServiceModel.Dispatcher.IInstanceProvider
  type: Interface
  summary: "Deklarerer metoder som gir en objekt- eller Resirkuler et serviceobjekt for en [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] tjenesten."
  remarks: "Implementere grensesnittet IInstanceProvider for å styre oppretting og resirkulering av tjenesteobjekter når én forespurte eller fjernet av en <xref:System.ServiceModel.InstanceContext>objektet.</xref:System.ServiceModel.InstanceContext>       Når grensesnittet IInstanceProvider implementeres, må du tilordne egendefinert forekomst leverandøren objektet til den <xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider%2A>egenskapen ved hjelp av en endpoint virkemåte (en <xref:System.ServiceModel.Description.IEndpointBehavior>objektet) eller en kontrakten virkemåte (en <xref:System.ServiceModel.Description.IContractBehavior>objektet).</xref:System.ServiceModel.Description.IContractBehavior> </xref:System.ServiceModel.Description.IEndpointBehavior> </xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider%2A>       Hvis innsetting mekanisme er en endpoint virkemåte kan du også implementere en <xref:System.ServiceModel.Configuration.BehaviorExtensionElement>objekt som kan sette inn den egendefinerte virkemåten ved hjelp av en konfigurasjonsfil.</xref:System.ServiceModel.Configuration.BehaviorExtensionElement> Hvis innsetting mekanisme kontrakten virkemåte, du kan sette inn virkemåten programmatisk før åpning av Tjenesteverten, eller du kan implementere et egendefinert attributt. (Se delen eksempel et eksempel på kontrakten virkemåte tilnærmingen.)       IInstanceProvider har to måter, <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A>og <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A>.</xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> </xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> Disse metodene implementeres vanligvis til å opprette-tjenesteobjekter ved hjelp av en ikke-standard konstruktør eller for å initialisere eller fjerne en tilstand som er relatert til levetiden for objektet. Tjenesten objektutvalg er et eksempel på egendefinert IInstanceProvider funksjonalitet.       Vanligvis av <xref:System.ServiceModel.InstanceContext>aktiverer den <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A>når den <xref:System.ServiceModel.InstanceContext>opprettes og aktiverer det <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A>metoden når den <xref:System.ServiceModel.InstanceContext>er lukket.</xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> </xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> </xref:System.ServiceModel.InstanceContext>       Det er to måter å få en <xref:System.ServiceModel.InstanceContext>objektet å lansere en Webtjenesteobjektet før den <xref:System.ServiceModel.InstanceContext>er lukket.</xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.InstanceContext> Metoden første er å angi den <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A>eller <xref:System.ServiceModel.ReleaseInstanceMode> <xref:System.ServiceModel.ReleaseInstanceMode>.</xref:System.ServiceModel.ReleaseInstanceMode> </xref:System.ServiceModel.ReleaseInstanceMode> </xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> Metoden andre er å kalle den <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A>metoden.</xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A> Hvis dette er gjort i <xref:System.ServiceModel.InstanceContext>kall av <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A>-metoden på den dispatcher leverandøren.</xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> </xref:System.ServiceModel.InstanceContext> Hvis nye ankommer etter at forekomsten er utgitt, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] oppretter en ny forekomst ved hjelp av den <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A>metoden.</xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A>      > [!NOTE] > Hvis <xref:System.ServiceModel.InstanceContextMode>av tjenesten er at <xref:System.ServiceModel.InstanceContextMode>systemet ikke kall til <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A>eller <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A>metoder selv om brukeren ikke har oppgitt et kjent tjeneste-objekt med mindre brukeren direkte kall <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A>deretter kalles <xref:System.ServiceModel.InstanceContext.GetServiceInstance%2A>.</xref:System.ServiceModel.InstanceContext.GetServiceInstance%2A> </xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A> </xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> </xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> </xref:System.ServiceModel.InstanceContextMode> </xref:System.ServiceModel.InstanceContextMode>"
  example:
  - "The following code example shows how to implement IInstanceProvider that provides \"singleton\" behavior; it always returns the same service instance and does not recycle it.  \n  \n [!code-cs[IContractBehavior#1](~/add/codesnippet/csharp/icontractbehavior.client/objectproviderbehavior.cs#1)]\n [!code-vb[IContractBehavior#1](~/add/codesnippet/visualbasic/icontractbehavior.client/objectproviderbehavior.vb#1)]  \n  \n The following code example shows how to implement a custom attribute that implements <xref:System.ServiceModel.Description.IContractBehavior> to insert the custom service instance provider. It also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, which binds its use to a specific contract.  \n  \n [!code-cs[IContractBehavior#2](~/add/codesnippet/csharp/icontractbehavior.client/objectproviderbehavior.cs#2)]\n [!code-vb[IContractBehavior#2](~/add/codesnippet/visualbasic/icontractbehavior.client/objectproviderbehavior.vb#2)]"
  syntax:
    content: public interface IInstanceProvider
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext)
  id: GetInstance(System.ServiceModel.InstanceContext)
  parent: System.ServiceModel.Dispatcher.IInstanceProvider
  langs:
  - csharp
  name: GetInstance(InstanceContext)
  nameWithType: IInstanceProvider.GetInstance(InstanceContext)
  fullName: System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(InstanceContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Returnerer et serviceobjekt som er angitt for den angitte <xref:System.ServiceModel.InstanceContext>objektet.</xref:System.ServiceModel.InstanceContext>"
  remarks: "Bruk GetInstance-metode for å styre nøyaktige tjenesten objekt som en [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] tjenesten mottar når den prøver å opprette en ny."
  example:
  - "The following code example shows how to implement <xref:System.ServiceModel.Dispatcher.IInstanceProvider> that provides \"singleton\" behavior; it always returns the same service instance and does not recycle it.  \n  \n [!code-cs[IContractBehavior#1](~/add/codesnippet/csharp/icontractbehavior.client/objectproviderbehavior.cs#1)]\n [!code-vb[IContractBehavior#1](~/add/codesnippet/visualbasic/icontractbehavior.client/objectproviderbehavior.vb#1)]  \n  \n The following code example shows how to implement a custom attribute that implements <xref:System.ServiceModel.Description.IContractBehavior> to insert the custom service instance provider. It also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, which binds its use to a specific contract.  \n  \n [!code-cs[IContractBehavior#2](~/add/codesnippet/csharp/icontractbehavior.client/objectproviderbehavior.cs#2)]\n [!code-vb[IContractBehavior#2](~/add/codesnippet/visualbasic/icontractbehavior.client/objectproviderbehavior.vb#2)]"
  syntax:
    content: public object GetInstance (System.ServiceModel.InstanceContext instanceContext);
    parameters:
    - id: instanceContext
      type: System.ServiceModel.InstanceContext
      description: "Gjeldende <xref:System.ServiceModel.InstanceContext>objektet.</xref:System.ServiceModel.InstanceContext>"
    return:
      type: System.Object
      description: "Et brukerdefinert serviceobjekt."
  overload: System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)
  id: GetInstance(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.IInstanceProvider
  langs:
  - csharp
  name: GetInstance(InstanceContext,Message)
  nameWithType: IInstanceProvider.GetInstance(InstanceContext,Message)
  fullName: System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(InstanceContext,Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Returnerer et serviceobjekt som er angitt for den angitte <xref:System.ServiceModel.InstanceContext>objektet.</xref:System.ServiceModel.InstanceContext>"
  remarks: "Bruk GetInstance-metode for å styre nøyaktige tjenesten objekt som en [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] tjenesten mottar når den prøver å opprette en ny."
  example:
  - "The following code example shows how to implement <xref:System.ServiceModel.Dispatcher.IInstanceProvider> that provides \"singleton\" behavior; it always returns the same service instance and does not recycle it.  \n  \n [!code-cs[IContractBehavior#1](~/add/codesnippet/csharp/icontractbehavior.client/objectproviderbehavior.cs#1)]\n [!code-vb[IContractBehavior#1](~/add/codesnippet/visualbasic/icontractbehavior.client/objectproviderbehavior.vb#1)]  \n  \n The following code example shows how to implement a custom attribute that implements <xref:System.ServiceModel.Description.IContractBehavior> to insert the custom service instance provider. It also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, which binds its use to a specific contract.  \n  \n [!code-cs[IContractBehavior#2](~/add/codesnippet/csharp/icontractbehavior.client/objectproviderbehavior.cs#2)]\n [!code-vb[IContractBehavior#2](~/add/codesnippet/visualbasic/icontractbehavior.client/objectproviderbehavior.vb#2)]"
  syntax:
    content: public object GetInstance (System.ServiceModel.InstanceContext instanceContext, System.ServiceModel.Channels.Message message);
    parameters:
    - id: instanceContext
      type: System.ServiceModel.InstanceContext
      description: "Gjeldende <xref:System.ServiceModel.InstanceContext>objektet.</xref:System.ServiceModel.InstanceContext>"
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "Meldingen som utløses oppretting av et serviceobjekt."
    return:
      type: System.Object
      description: "Serviceobjekt."
  overload: System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance(System.ServiceModel.InstanceContext,System.Object)
  id: ReleaseInstance(System.ServiceModel.InstanceContext,System.Object)
  parent: System.ServiceModel.Dispatcher.IInstanceProvider
  langs:
  - csharp
  name: ReleaseInstance(InstanceContext,Object)
  nameWithType: IInstanceProvider.ReleaseInstance(InstanceContext,Object)
  fullName: System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance(InstanceContext,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Kalles når en <xref:System.ServiceModel.InstanceContext>objektet resirkuleres et serviceobjekt.</xref:System.ServiceModel.InstanceContext>"
  remarks: "Bruk ReleaseInstance-metoden til å utføre noen egendefinert ressurs salg eller andre resirkulering tilpassing når en tjeneste resirkuleres et serviceobjekt."
  syntax:
    content: public void ReleaseInstance (System.ServiceModel.InstanceContext instanceContext, object instance);
    parameters:
    - id: instanceContext
      type: System.ServiceModel.InstanceContext
      description: "Tjenestens forekomsten kontekst."
    - id: instance
      type: System.Object
      description: "Serviceobjektet som skal resirkuleres."
  overload: System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext)
  parent: System.ServiceModel.Dispatcher.IInstanceProvider
  isExternal: false
  name: GetInstance(InstanceContext)
  nameWithType: IInstanceProvider.GetInstance(InstanceContext)
  fullName: System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(InstanceContext)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.InstanceContext
  parent: System.ServiceModel
  isExternal: true
  name: InstanceContext
  nameWithType: InstanceContext
  fullName: System.ServiceModel.InstanceContext
- uid: System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.IInstanceProvider
  isExternal: false
  name: GetInstance(InstanceContext,Message)
  nameWithType: IInstanceProvider.GetInstance(InstanceContext,Message)
  fullName: System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(InstanceContext,Message)
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance(System.ServiceModel.InstanceContext,System.Object)
  parent: System.ServiceModel.Dispatcher.IInstanceProvider
  isExternal: false
  name: ReleaseInstance(InstanceContext,Object)
  nameWithType: IInstanceProvider.ReleaseInstance(InstanceContext,Object)
  fullName: System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance(InstanceContext,Object)
- uid: System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance*
  parent: System.ServiceModel.Dispatcher.IInstanceProvider
  isExternal: false
  name: GetInstance
  nameWithType: IInstanceProvider.GetInstance
- uid: System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance*
  parent: System.ServiceModel.Dispatcher.IInstanceProvider
  isExternal: false
  name: ReleaseInstance
  nameWithType: IInstanceProvider.ReleaseInstance
