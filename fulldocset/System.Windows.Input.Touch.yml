### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.Touch
  id: Touch
  children:
  - System.Windows.Input.Touch.FrameReported
  langs:
  - csharp
  name: Touch
  nameWithType: Touch
  fullName: System.Windows.Input.Touch
  type: Class
  summary: "Gir programnivå som behandler multitouch inndata fra operativsystemet og oppretter den <xref href=&quot;System.Windows.Input.Touch.FrameReported&quot;> </xref> hendelsen."
  remarks: "Den <xref:System.Windows.Input.Touch.FrameReported>hendelsen er inkludert i [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] å støtte kompatibilitet med Silverlight.</xref:System.Windows.Input.Touch.FrameReported> Hvis du ikke har sikre kompatibilitet med Silverlight, bruker du hendelsene berøring eksempel <xref:System.Windows.UIElement.TouchDown>og <xref:System.Windows.UIElement.TouchMove>, på <xref:System.Windows.UIElement>, <xref:System.Windows.UIElement3D>, eller <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement> </xref:System.Windows.UIElement3D> </xref:System.Windows.UIElement> </xref:System.Windows.UIElement.TouchMove> </xref:System.Windows.UIElement.TouchDown>       <xref:System.Windows.Input.Touch.FrameReported>Hendelsen bruker ikke den samme hendelse modellen som andre WPF inndata hendelser, for eksempel <xref:System.Windows.UIElement.TouchDown>og <xref:System.Windows.UIElement.TouchMove>.</xref:System.Windows.UIElement.TouchMove> </xref:System.Windows.UIElement.TouchDown> </xref:System.Windows.Input.Touch.FrameReported> I stedet for som vises som en element-spesifikke hendelse som potensielt ruter via objekttreet for et brukergrensesnitt i <xref:System.Windows.Input.Touch.FrameReported>hendelsen er én hendelse som behandles på programnivå.</xref:System.Windows.Input.Touch.FrameReported> Du kan derfor ikke bruke den `sender` -parameteren for å finne ut hvilken elementet endres i hendelsesbehandlingen.       Bruk av <xref:System.Windows.Input.TouchFrameEventArgs>å hente den <xref:System.Windows.Input.TouchPoint>verdier som er relevante for hendelsen berøring.</xref:System.Windows.Input.TouchPoint> </xref:System.Windows.Input.TouchFrameEventArgs> Fra den <xref:System.Windows.Input.TouchPoint>, du får den <xref:System.Windows.Input.TouchPoint.Position%2A>for berøring og finne ut om den <xref:System.Windows.Input.TouchAction>er en <xref:System.Windows.Input.TouchAction>, <xref:System.Windows.Input.TouchAction>, eller <xref:System.Windows.Input.TouchAction>handlingen.</xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchPoint.Position%2A> </xref:System.Windows.Input.TouchPoint> Du kan også bruke til <xref:System.Windows.Input.TouchPoint>å hente <xref:System.Windows.Input.TouchDevice>.</xref:System.Windows.Input.TouchDevice> </xref:System.Windows.Input.TouchPoint> Fra den <xref:System.Windows.Input.TouchDevice>, kan du bestemme enheten <xref:System.Windows.Input.TouchDevice.Id%2A>og få informasjon om elementet er endres.</xref:System.Windows.Input.TouchDevice.Id%2A> </xref:System.Windows.Input.TouchDevice>"
  example:
  - "The following example enables you to create simple patterns on a <xref:System.Windows.Controls.Canvas> by dragging two fingers across a touchscreen. Each touch is represented by a <xref:System.Windows.Input.TouchDevice>.The pattern is created by drawing a line between the touch points provided by the touches. This example requires a Windows Touch–compatible screen.  \n  \n The following markup creates the user interface, which consists of a <xref:System.Windows.Controls.Canvas> that is centered in a <xref:System.Windows.Controls.Grid>.  \n  \n [!code-xml[TouchFrameSample#000](~/add/codesnippet/xaml/wpftouchframesample/mainwindow.xaml#000)]  \n  \n The following code handles the <xref:System.Windows.Input.Touch.FrameReported> event. When a touch presses on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>. When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released. When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked. If the move came from the first touch, its location is recorded. If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.  \n  \n [!code-vb[TouchFrameSample#100](~/add/codesnippet/visualbasic/wpftouchframesample/mainwindow.xaml.vb#100)]\n [!code-cs[TouchFrameSample#100](~/add/codesnippet/csharp/wpftouchframesample/mainwindow.xaml.cs#100)]"
  syntax:
    content: public static class Touch
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.Touch.FrameReported
  id: FrameReported
  parent: System.Windows.Input.Touch
  langs:
  - csharp
  name: FrameReported
  nameWithType: Touch.FrameReported
  fullName: System.Windows.Input.Touch.FrameReported
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Forekommer når en berøring meldingen sendes."
  remarks: "Ramme inngår i en serie med flerberørings meldinger eller berøringspunkt. Du kan svare på finpussen ved behandling av hendelsen FrameReported og tilgang til detaljene for den <xref:System.Windows.Input.TouchPoint>fra den <xref:System.Windows.Input.TouchFrameEventArgs>Hendelsesdata.</xref:System.Windows.Input.TouchFrameEventArgs> </xref:System.Windows.Input.TouchPoint>       Hendelsen FrameReported bruker ikke samme hendelsen modellen som andre [!INCLUDE[TLA#tla_titlewinclient](~/add/includes/tlasharptla-titlewinclient-md.md)] inndata hendelser, for eksempel <xref:System.Windows.UIElement.TouchDown>og <xref:System.Windows.UIElement.TouchMove>.</xref:System.Windows.UIElement.TouchMove> </xref:System.Windows.UIElement.TouchDown> I stedet for som vises som en element-spesifikke hendelse som potensielt ruter via objekttreet for et brukergrensesnitt, er FrameReported-hendelsen én hendelse som behandles på programnivå. Du kan derfor ikke bruke den `sender` -parameteren for å finne ut hvilken elementet endres i hendelsesbehandlingen."
  example:
  - "The following example handles the FrameReported event. When a touch presses on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>. When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released. When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked. If the move came from the first touch, its location is recorded. If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.  \n  \n This example is part of a larger example that is available in the <xref:System.Windows.Input.Touch> class overview.  \n  \n [!code-vb[TouchFrameSample#110](~/add/codesnippet/visualbasic/wpftouchframesample/mainwindow.xaml.vb#110)]\n [!code-cs[TouchFrameSample#110](~/add/codesnippet/csharp/wpftouchframesample/mainwindow.xaml.cs#110)]"
  syntax:
    content: public static event System.Windows.Input.TouchFrameEventHandler FrameReported;
    return:
      type: System.Windows.Input.TouchFrameEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Input.Touch.FrameReported
  parent: System.Windows.Input.Touch
  isExternal: false
  name: FrameReported
  nameWithType: Touch.FrameReported
  fullName: System.Windows.Input.Touch.FrameReported
- uid: System.Windows.Input.TouchFrameEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: TouchFrameEventHandler
  nameWithType: TouchFrameEventHandler
  fullName: System.Windows.Input.TouchFrameEventHandler
