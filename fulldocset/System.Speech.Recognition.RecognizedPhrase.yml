### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.RecognizedPhrase
  id: RecognizedPhrase
  children:
  - System.Speech.Recognition.RecognizedPhrase.Confidence
  - System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics
  - System.Speech.Recognition.RecognizedPhrase.Grammar
  - System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  - System.Speech.Recognition.RecognizedPhrase.Homophones
  - System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  - System.Speech.Recognition.RecognizedPhrase.Semantics
  - System.Speech.Recognition.RecognizedPhrase.Text
  - System.Speech.Recognition.RecognizedPhrase.Words
  langs:
  - csharp
  name: RecognizedPhrase
  nameWithType: RecognizedPhrase
  fullName: System.Speech.Recognition.RecognizedPhrase
  type: Class
  summary: "Inneholder detaljert informasjon, generert om gjenkjent inndataene kontrolleres tale."
  remarks: "Denne klassen inneholder detaljert informasjon om ord og uttrykk behandlet under tale recognition operasjoner, inkludert følgende: - <xref:System.Speech.Recognition.RecognizedPhrase.Grammar%2A>egenskapen refererer til den <xref:System.Speech.Recognition.Grammar>at gjenkjenneren brukes til å identifisere inndataene.</xref:System.Speech.Recognition.Grammar> </xref:System.Speech.Recognition.RecognizedPhrase.Grammar%2A>      - <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>Egenskapen inneholder normalisert for uttrykket.</xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>      - <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A>Egenskapen refererer semantisk informasjonen i resultatet.</xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> Semantiske informasjonen er en ordliste for nøkkelnavn og tilhørende semantisk data.      - <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>Egenskapen inneholder en sortert samling av <xref:System.Speech.Recognition.RecognizedWordUnit>objekter som representerer hver gjenkjent ord i inndataene.</xref:System.Speech.Recognition.RecognizedWordUnit> </xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> Hver word inneholder visningsformatet, Leksikalsk format og uttale informasjon for den tilsvarende word.      - <xref:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits%2A>Egenskapen inneholder informasjon om spesialiserte word erstatning.</xref:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits%2A>      - <xref:System.Speech.Recognition.RecognizedPhrase.Homophones%2A>Og <xref:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId%2A>egenskapene inneholder informasjon om recognition alternativer som har samme eller lignende uttalen.</xref:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId%2A> </xref:System.Speech.Recognition.RecognizedPhrase.Homophones%2A>      -Verdien for den <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A>egenskapen angir i hvor stor grad av sikkerhet, tilordnet tale-kontrolleres en gjenkjent uttrykk er inndataene.</xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A>       Dikterings-gjenkjenner returnerer recognition resultater i en <xref:System.Speech.Recognition.RecognitionResult>-objektet som arver fra RecognizedPhrase.</xref:System.Speech.Recognition.RecognitionResult> Gjenkjenning resultatet <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>egenskapen inneholder en sortert samling av RecognizedPhrase objekter hver er mulig samsvar for inndataene gjenkjenneren.</xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>"
  example:
  - "The following example shows a handler for a <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName>, <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>, or <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=fullName> event and some of the information associated with the <xref:System.Speech.Recognition.RecognitionResult> object. The <xref:System.Speech.Recognition.RecognitionResult> class derives from the RecognizedPhrase class.  \n  \n```c#  \nvoid SpeechRecognizedHandler(object sender, SpeechRecognizedEventArgs e)  \n{  \n  if (e.Result == null) return;  \n  \n  // Add event handler code here.  \n  \n  // The following code illustrates some of the information available  \n  // in the recognition result.  \n  Console.WriteLine(\"Recognition result summary:\");  \n  Console.WriteLine(  \n    \"  Recognized phrase: {0}\\n\" +   \n    \"  Confidence score {1}\\n\" +   \n    \"  Grammar used: {2}\\n\",   \n    e.Result.Text, e.Result.Confidence, e.Result.Grammar.Name);  \n  \n  // Display the semantic values in the recognition result.  \n  Console.WriteLine(\"  Semantic results:\");  \n  foreach (KeyValuePair<String, SemanticValue> child in e.Result.Semantics)  \n  {  \n    Console.WriteLine(\"    The {0} city is {1}\",  \n      child.Key, child.Value.Value ?? \"null\");  \n  }  \n  Console.WriteLine();  \n  \n  // Display information about the words in the recognition result.  \n  Console.WriteLine(\"  Word summary: \");  \n  foreach (RecognizedWordUnit word in e.Result.Words)  \n  {  \n    Console.WriteLine(  \n      \"    Lexical form ({1})\" +  \n      \" Pronunciation ({0})\" +  \n      \" Display form ({2})\",  \n      word.Pronunciation, word.LexicalForm, word.DisplayAttributes);  \n  }  \n  \n  // Display information about the audio in the recognition result.  \n  Console.WriteLine(\"  Input audio summary:\\n\" +  \n    \"    Candidate Phrase at:       {0} mSec\\n\" +  \n    \"    Phrase Length:             {1} mSec\\n\" +  \n    \"    Input State Time:          {2}\\n\" +  \n    \"    Input Format:              {3}\\n\",  \n    e.Result.Audio.AudioPosition,  \n    e.Result.Audio.Duration,  \n    e.Result.Audio.StartTime,  \n    e.Result.Audio.Format.EncodingFormat);  \n  \n  // Display information about the alternate recognitions in the recognition result.  \n  Console.WriteLine(\"  Alternate phrase collection:\");  \n  foreach (RecognizedPhrase phrase in e.Result.Alternates)  \n  {  \n    Console.WriteLine(\"    Phrase: \" + phrase.Text);  \n    Console.WriteLine(\"    Confidence score: \" + phrase.Confidence);  \n  }  \n}  \n```"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{Text}")]

      public class RecognizedPhrase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Confidence
  id: Confidence
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Confidence
  nameWithType: RecognizedPhrase.Confidence
  fullName: System.Speech.Recognition.RecognizedPhrase.Confidence
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Henter en verdi som er tilordnet kontrolleres, som representerer sannsynligheten som en <xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;> </xref> samsvarer med en gitt inndata."
  remarks: "Konfidensnivået resultater angir ikke absolutt sannsynligheten for at et uttrykk gjenkjennes riktig. I stedet mekanisme konfidensnivået resultater for sammenligning av relative nøyaktigheten av flere recognition alternativer for en gitt inndata. Dette gjør det enklere å returnere mest nøyaktige recognition resultatet. For eksempel hvis et gjenkjent uttrykk har konfidensnivået ligge på 0,8, betyr dette ikke uttrykket har en 80% mulighet for å bli riktig treff for inndata.  Det vil si at uttrykket er større sannsynlighet for å være riktig treff for inndataene enn andre resultater som har konfidensnivået scores mindre enn 0,8.       Konfidensnivået ligge på sin egen er meningsløst Hvis du ikke har alternative resultatene skal sammenlignes med, fra samme recognition-operasjon eller fra forrige anerkjennelser på samme inndataene. Verdiene som brukes til å rangere alternative candidate uttrykk som er returnert av den <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>egenskapen for <xref:System.Speech.Recognition.RecognitionResult>objekter.</xref:System.Speech.Recognition.RecognitionResult> </xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>       Konfidensnivået verdier er relativ og unikt hver recognition-motoren. Konfidensnivået verdiene som returneres av to ulike recognition motorer kan ikke sammenlignes hverandre.       En motor for talegjenkjenning kan tilordnes lav konfidensnivået ligge sier inndata for ulike årsaker, inkludert bakgrunnen forstyrrelser, inarticulate tale, eller uventet ord eller word-sekvenser. Hvis programmet bruker en <xref:System.Speech.Recognition.SpeechRecognitionEngine>forekomsten, kan du endre konfidensnivået ved som tale inndataene godkjennes eller avvises med én av de <xref:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting%2A>metoder.</xref:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting%2A> </xref:System.Speech.Recognition.SpeechRecognitionEngine> Konfidensnivået terskelverdi for den delte gjenkjenneren administreres av <xref:System.Speech.Recognition.SpeechRecognizer>, er tilknyttet en brukerprofil og lagres i Windows-registret.</xref:System.Speech.Recognition.SpeechRecognizer> Programmer kan ikke skrive endringene i registret for egenskaper av delt gjenkjenner.       Den <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>-egenskapen til det <xref:System.Speech.Recognition.RecognitionResult>objektet inneholder en sortert samling av <xref:System.Speech.Recognition.RecognizedPhrase>objekter, hver er mulig samsvar for inndataene gjenkjenneren.</xref:System.Speech.Recognition.RecognizedPhrase> </xref:System.Speech.Recognition.RecognitionResult> </xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> Andre er ordnet i rekkefølge fra høyeste til laveste konfidensnivået."
  example:
  - "The following example shows a handler for a <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName>, <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>, or <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=fullName> event. The example shows information associated with the <xref:System.Speech.Recognition.RecognitionResult> object, some of which is derived from <xref:System.Speech.Recognition.RecognizedPhrase>. The handler displays confidence scores for a recognized phrase as well as for recognition alternates.  \n  \n```c#  \nvoid SpeechRecognizedHandler(object sender, SpeechRecognizedEventArgs e)  \n{  \n  if (e.Result == null) return;  \n  \n  // Add event handler code here.  \n  \n  // The following code illustrates some of the information available  \n  // in the recognition result.  \n  Console.WriteLine(\"Recognition result summary:\");  \n  Console.WriteLine(  \n    \"  Recognized phrase: {0}\\n\" +   \n    \"  Confidence score {1}\\n\" +   \n    \"  Grammar used: {2}\\n\",   \n    e.Result.Text, e.Result.Confidence, e.Result.Grammar.Name);  \n  \n  // Display the semantic values in the recognition result.  \n  Console.WriteLine(\"  Semantic results:\");  \n  foreach (KeyValuePair<String, SemanticValue> child in e.Result.Semantics)  \n  {  \n    Console.WriteLine(\"    The {0} city is {1}\",  \n      child.Key, child.Value.Value ?? \"null\");  \n  }  \n  Console.WriteLine();  \n  \n  // Display information about the words in the recognition result.  \n  Console.WriteLine(\"  Word summary: \");  \n  foreach (RecognizedWordUnit word in e.Result.Words)  \n  {  \n    Console.WriteLine(  \n      \"    Lexical form ({1})\" +  \n      \" Pronunciation ({0})\" +  \n      \" Display form ({2})\",  \n      word.Pronunciation, word.LexicalForm, word.DisplayAttributes);  \n  }  \n  \n  // Display information about the audio in the recognition result.  \n  Console.WriteLine(\"  Input audio summary:\\n\" +  \n    \"    Candidate Phrase at:       {0} mSec\\n\" +  \n    \"    Phrase Length:             {1} mSec\\n\" +  \n    \"    Input State Time:          {2}\\n\" +  \n    \"    Input Format:              {3}\\n\",  \n    e.Result.Audio.AudioPosition,  \n    e.Result.Audio.Duration,  \n    e.Result.Audio.StartTime,  \n    e.Result.Audio.Format.EncodingFormat);  \n  \n  // Display information about the alternate recognitions in the recognition result.  \n  Console.WriteLine(\"  Alternate phrase collection:\");  \n  foreach (RecognizedPhrase phrase in e.Result.Alternates)  \n  {  \n    Console.WriteLine(\"    Phrase: \" + phrase.Text);  \n    Console.WriteLine(\"    Confidence score: \" + phrase.Confidence);  \n  }  \n}  \n  \n```"
  syntax:
    content: public float Confidence { get; }
    return:
      type: System.Single
      description: "En relativ mål av sikkerhet for riktig gjenkjenning av et uttrykk. Verdien er fra 0,0 1.0 for til konfidensnivået henholdsvis."
  overload: System.Speech.Recognition.RecognizedPhrase.Confidence*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics
  id: ConstructSmlFromSemantics
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: ConstructSmlFromSemantics()
  nameWithType: RecognizedPhrase.ConstructSmlFromSemantics()
  fullName: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Returnerer et dokument for semantisk markup language (SML) for semantisk informasjonen i den <xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;> </xref> objektet."
  remarks: "For informasjon om semantisk markup language (SML), kan du se den [semantisk Markup Language referanse](http://msdn.microsoft.com/en-us/f9d83443-2cac-49bc-a447-210feda62f5d)."
  example:
  - "In the following example, a method returns a string that contains the SML for the semantics of a recognized phrase.  \n  \n```  \nprivate string GetSemanticsSML(RecognizedPhrase result)  \n{  \n  if (result.Semantics.Count > 0)  \n  {  \n    return result.ConstructSmlFromSemantics().CreateNavigator().OuterXml;  \n  }  \n  else  \n  {  \n    return null;  \n  }  \n}  \n```"
  syntax:
    content: public System.Xml.XPath.IXPathNavigable ConstructSmlFromSemantics ();
    parameters: []
    return:
      type: System.Xml.XPath.IXPathNavigable
      description: "Returnerer en SML beskrivelse av semantikk for den <xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;> </xref> som en [XPath](http://msdn.microsoft.com/library/ms256115.aspx) navigerbar objektet."
  overload: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Grammar
  id: Grammar
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Grammar
  nameWithType: RecognizedPhrase.Grammar
  fullName: System.Speech.Recognition.RecognizedPhrase.Grammar
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Henter den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> som tale gjenkjenner til å returnere den <xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;> </xref>."
  syntax:
    content: public System.Speech.Recognition.Grammar Grammar { get; }
    return:
      type: System.Speech.Recognition.Grammar
      description: "Grammatikk-objekt som tale gjenkjenner brukes til å identifisere inndataene."
  overload: System.Speech.Recognition.RecognizedPhrase.Grammar*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  id: HomophoneGroupId
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: HomophoneGroupId
  nameWithType: RecognizedPhrase.HomophoneGroupId
  fullName: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Henter identifikatoren for gruppen homophone for uttrykket."
  remarks: "Dikterings-gjenkjenner tilordner en gruppe-IDen til alle recognition alternativer som har samme uttalen. For hvert alternativ som har en unik uttale, oppretter du gjenkjenner en homophone-gruppe. Dikterings-gjenkjenner genererer ny gruppe med identifikatorer for hver recognition-operasjon, og identifikatorene kan ikke brukes til å sammenligne alternativer fra generert fra egen recognition operasjoner.       For eksempel for fører recognition som finnes i Alternativer &quot;historie&quot;, &quot;tail&quot; og &quot;ale&quot; de første to alternativer vil tilhører én homophone gruppe, og den siste alternativt vil være ett medlem av en annen homophone-gruppe."
  syntax:
    content: public int HomophoneGroupId { get; }
    return:
      type: System.Int32
      description: "IDen for gruppen homophone for uttrykket."
  overload: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Homophones
  id: Homophones
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Homophones
  nameWithType: RecognizedPhrase.Homophones
  fullName: System.Speech.Recognition.RecognizedPhrase.Homophones
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Henter en samling av recognition alternativer som har samme uttalen som gjenkjennes uttrykket."
  remarks: "Denne egenskapen returnerer alle andre recognition alternativer som har samme uttalen som gjenkjennes uttrykket.       Gjenkjenning resultatet som finnes i Alternativer, &quot;historie&quot; og &quot;tail&quot;, for eksempel inneholder homophones-samlingen for det første alternativt, &quot;historie&quot;, det andre uttrykket, &quot;tail&quot;. Samlingen homophones for andre alternativ, &quot;tail&quot;, inneholder det første uttrykket, &quot;historie&quot;."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedPhrase> Homophones { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedPhrase}
      description: "En skrivebeskyttet samling recognition alternativer som har samme uttalen som gjenkjennes uttrykket."
  overload: System.Speech.Recognition.RecognizedPhrase.Homophones*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  id: ReplacementWordUnits
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: ReplacementWordUnits
  nameWithType: RecognizedPhrase.ReplacementWordUnits
  fullName: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Henter informasjon om teksten tale gjenkjenner endret som en del av tale fulltekst normalization."
  remarks: "Som en del av prosessen tale recognition normaliserer tale gjenkjenner gjenkjent inndataene til en visning form.       For eksempel sier inndataene, &quot;twenty fem bruker&quot; genererer fører recognition der den <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>egenskapen inneholder ordene &quot;20&quot;, &quot;fem&quot; og &quot;bruker&quot; og <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>egenskapen inneholder uttrykket &quot;$25,00&quot;.</xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> </xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> Du finner mer informasjon om teksten normalization se <xref:System.Speech.Recognition.ReplacementText>klasse.</xref:System.Speech.Recognition.ReplacementText>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Speech.Recognition.ReplacementText> ReplacementWordUnits { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Speech.Recognition.ReplacementText}
      description: "En samling av <xref href=&quot;System.Speech.Recognition.ReplacementText&quot;> </xref> objekter som beskriver delene som tale gjenkjenner erstattet når den har normalisert seg gjenkjent inndataene."
  overload: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Semantics
  id: Semantics
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Semantics
  nameWithType: RecognizedPhrase.Semantics
  fullName: System.Speech.Recognition.RecognizedPhrase.Semantics
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Henter den semantiske informasjonen som er forbundet med gjenkjent uttrykket."
  remarks: "En tale recognition grammatikk kan inneholde semantisk informasjon. Når en tale gjenkjenner genererer et recognition resultat for slike grammatikk, kan semantisk informasjonen inkluderes i resultatet av recognition, i samsvar med reglene grammatikk og inndataene gjenkjenneren. Hvis du vil ha mer informasjon om semantisk informasjon, se [forstå semantisk resultater](http://msdn.microsoft.com/en-us/2a9dbd8b-cf6d-42cd-bbb9-ca0b3e534005) og <xref:System.Speech.Recognition.SemanticResultKey>og <xref:System.Speech.Recognition.SemanticResultValue>klasser.</xref:System.Speech.Recognition.SemanticResultValue> </xref:System.Speech.Recognition.SemanticResultKey>"
  example:
  - "The following example defines a method that gets specific semantic information from a recognized phrase. When this method returns, it contains the value for the semantic key, or null if the value was not retrieved. This method checks only for top-level keys. Since the semantic information is contained in a tree of values, lower-level keys must be accessed through the returned semantic value.  \n  \n```  \nstatic bool TryGetSemanticValue(  \n      RecognizedPhrase phrase, string key, out SemanticValue value)  \n{  \n  value = null;  \n  bool found = phrase.Semantics.ContainsKey(key);  \n  if (found)  \n  {  \n    value = phrase.Semantics[key];  \n  }  \n  \n  return found;  \n}  \n```"
  syntax:
    content: public System.Speech.Recognition.SemanticValue Semantics { get; }
    return:
      type: System.Speech.Recognition.SemanticValue
      description: "Semantisk informasjon knyttet gjenkjent uttrykket."
  overload: System.Speech.Recognition.RecognizedPhrase.Semantics*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Text
  id: Text
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Text
  nameWithType: RecognizedPhrase.Text
  fullName: System.Speech.Recognition.RecognizedPhrase.Text
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Henter normalisert teksten generert av en tale gjenkjenner gjenkjent inndata."
  remarks: "Som en del av prosessen tale recognition utfører tale gjenkjenner tale fulltekst normaliseringen av gjenkjent inndataene til en visning form.       For eksempel sier inndataene, &quot;twenty fem bruker&quot; genererer fører recognition der den <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>egenskapen inneholder ordene &quot;20&quot;, &quot;fem&quot; og &quot;bruker&quot; og Text-egenskapen inneholder uttrykket &quot;$25,00&quot;.</xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> For mer informasjon om teksten normalization, kan du se <xref:System.Speech.Recognition.ReplacementText>.</xref:System.Speech.Recognition.ReplacementText>"
  syntax:
    content: public string Text { get; }
    return:
      type: System.String
      description: "Normalisert teksten generert av en tale gjenkjenner gjenkjent inndata."
  overload: System.Speech.Recognition.RecognizedPhrase.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Words
  id: Words
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Words
  nameWithType: RecognizedPhrase.Words
  fullName: System.Speech.Recognition.RecognizedPhrase.Words
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Henter ordene som er generert av en tale gjenkjenner gjenkjent inndata."
  remarks: "Denne egenskapen inneholder ord som er generert fra inndataene tale kontrolleres før den gjenkjenner tale fulltekst normaliseringen av resultatet.       For eksempel sier inndataene, &quot;twenty fem bruker&quot; genererer fører recognition der egenskapen ord inneholder ordene &quot;20&quot;, &quot;fem&quot; og &quot;bruker&quot; og <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>egenskapen inneholder uttrykket &quot;$25,00&quot;.</xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> For mer informasjon om teksten normalization, kan du se <xref:System.Speech.Recognition.ReplacementText>.</xref:System.Speech.Recognition.ReplacementText>"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedWordUnit> Words { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedWordUnit}
      description: "Samlingen av <xref href=&quot;System.Speech.Recognition.RecognizedWordUnit&quot;> </xref> objekter som er generert av en tale gjenkjenner for gjenkjent inndata."
  overload: System.Speech.Recognition.RecognizedPhrase.Words*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Speech.Recognition.RecognizedPhrase.Confidence
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Confidence
  nameWithType: RecognizedPhrase.Confidence
  fullName: System.Speech.Recognition.RecognizedPhrase.Confidence
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ConstructSmlFromSemantics()
  nameWithType: RecognizedPhrase.ConstructSmlFromSemantics()
  fullName: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics()
- uid: System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: false
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.Speech.Recognition.RecognizedPhrase.Grammar
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Grammar
  nameWithType: RecognizedPhrase.Grammar
  fullName: System.Speech.Recognition.RecognizedPhrase.Grammar
- uid: System.Speech.Recognition.Grammar
  parent: System.Speech.Recognition
  isExternal: false
  name: Grammar
  nameWithType: Grammar
  fullName: System.Speech.Recognition.Grammar
- uid: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: HomophoneGroupId
  nameWithType: RecognizedPhrase.HomophoneGroupId
  fullName: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Speech.Recognition.RecognizedPhrase.Homophones
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Homophones
  nameWithType: RecognizedPhrase.Homophones
  fullName: System.Speech.Recognition.RecognizedPhrase.Homophones
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedPhrase}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<RecognizedPhrase>
  nameWithType: ReadOnlyCollection<RecognizedPhrase>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedPhrase>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Speech.Recognition.RecognizedPhrase>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.RecognizedPhrase
    name: RecognizedPhrase
    nameWithType: RecognizedPhrase
    fullName: RecognizedPhrase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ReplacementWordUnits
  nameWithType: RecognizedPhrase.ReplacementWordUnits
  fullName: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
- uid: System.Collections.ObjectModel.Collection{System.Speech.Recognition.ReplacementText}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ReplacementText>
  nameWithType: Collection<ReplacementText>
  fullName: System.Collections.ObjectModel.Collection<System.Speech.Recognition.ReplacementText>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Speech.Recognition.ReplacementText>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.ReplacementText
    name: ReplacementText
    nameWithType: ReplacementText
    fullName: ReplacementText
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.RecognizedPhrase.Semantics
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Semantics
  nameWithType: RecognizedPhrase.Semantics
  fullName: System.Speech.Recognition.RecognizedPhrase.Semantics
- uid: System.Speech.Recognition.SemanticValue
  parent: System.Speech.Recognition
  isExternal: false
  name: SemanticValue
  nameWithType: SemanticValue
  fullName: System.Speech.Recognition.SemanticValue
- uid: System.Speech.Recognition.RecognizedPhrase.Text
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Text
  nameWithType: RecognizedPhrase.Text
  fullName: System.Speech.Recognition.RecognizedPhrase.Text
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.RecognizedPhrase.Words
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Words
  nameWithType: RecognizedPhrase.Words
  fullName: System.Speech.Recognition.RecognizedPhrase.Words
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedWordUnit}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<RecognizedWordUnit>
  nameWithType: ReadOnlyCollection<RecognizedWordUnit>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedWordUnit>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Speech.Recognition.RecognizedWordUnit>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.RecognizedWordUnit
    name: RecognizedWordUnit
    nameWithType: RecognizedWordUnit
    fullName: RecognizedWordUnit
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.RecognizedPhrase.Confidence*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Confidence
  nameWithType: RecognizedPhrase.Confidence
- uid: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ConstructSmlFromSemantics
  nameWithType: RecognizedPhrase.ConstructSmlFromSemantics
- uid: System.Speech.Recognition.RecognizedPhrase.Grammar*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Grammar
  nameWithType: RecognizedPhrase.Grammar
- uid: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: HomophoneGroupId
  nameWithType: RecognizedPhrase.HomophoneGroupId
- uid: System.Speech.Recognition.RecognizedPhrase.Homophones*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Homophones
  nameWithType: RecognizedPhrase.Homophones
- uid: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ReplacementWordUnits
  nameWithType: RecognizedPhrase.ReplacementWordUnits
- uid: System.Speech.Recognition.RecognizedPhrase.Semantics*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Semantics
  nameWithType: RecognizedPhrase.Semantics
- uid: System.Speech.Recognition.RecognizedPhrase.Text*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Text
  nameWithType: RecognizedPhrase.Text
- uid: System.Speech.Recognition.RecognizedPhrase.Words*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Words
  nameWithType: RecognizedPhrase.Words
