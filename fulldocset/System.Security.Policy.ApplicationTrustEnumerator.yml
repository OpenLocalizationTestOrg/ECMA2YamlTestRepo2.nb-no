### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.ApplicationTrustEnumerator
  id: ApplicationTrustEnumerator
  children:
  - System.Security.Policy.ApplicationTrustEnumerator.Current
  - System.Security.Policy.ApplicationTrustEnumerator.MoveNext
  - System.Security.Policy.ApplicationTrustEnumerator.Reset
  - System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current
  langs:
  - csharp
  name: ApplicationTrustEnumerator
  nameWithType: ApplicationTrustEnumerator
  fullName: System.Security.Policy.ApplicationTrustEnumerator
  type: Class
  summary: "Representerer enumeratoren for <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> objekter i den <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> samling."
  remarks: "Enumeratorene tillater bare lesing av data i samlingen. Enumeratorene kan ikke brukes til å endre den underliggende samlingen.       I utgangspunktet er enumeratoren plassert før det første elementet i samlingen. Den <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>metoden henter også enumeratoren tilbake til denne plasseringen.</xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> På dette Plasser, kaller den <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>egenskapen oppstår det et unntak.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> Du må derfor kalle den <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>metode for å gå videre enumeratoren til det første elementet i samlingen før lese verdien for den <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>egenskapen.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>       <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>Returnerer det samme objektet før enten <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>eller <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>kalles.</xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A></xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>angir <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>til neste element.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A></xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>       Etter at slutten av samlingen er utløpt, enumeratoren er plassert etter det siste elementet i samlingen, og kall <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>returnerer `false`.</xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> Hvis siste kall til <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>returnerte `false`, kall <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>oppstår det et unntak.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> Slik tilbakestiller du <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>kalle <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>etterfulgt av et kall til <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>.</xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> til det første elementet i samlingen</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>       En opplisting forblir gyldig så lenge samlingen forblir uendret. Hvis endringer i samlingen, for eksempel lagt til, endre, eller hvis du sletter elementer enumeratoren, ugyldig og neste kall til <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>eller <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>oppstår en <xref:System.InvalidOperationException>unntak.</xref:System.InvalidOperationException> </xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> Hvis samlingen er endret mellom kaller <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>og <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>, <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>returnerer elementet som det er angitt, selv om enumeratoren ugyldiggjøres allerede.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>       Enumeratoren har ikke eksklusiv tilgang til samlingen. lister opp i en samling er derfor gjelder ikke en sikker-prosedyre. Selv når en samling synkroniseres, kan andre tråder fortsatt endre samlingen, som fører til at enumeratoren til Iverksett et unntak. For å garantere tråd sikkerhetsnivået under opplisting, kan du låse samlingen under hele opplistingen eller opp unntak som er et resultat av endringer foretatt av andre tråder."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ApplicationTrustEnumerator : System.Collections.IEnumerator
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerator
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustEnumerator.Current
  id: Current
  parent: System.Security.Policy.ApplicationTrustEnumerator
  langs:
  - csharp
  name: Current
  nameWithType: ApplicationTrustEnumerator.Current
  fullName: System.Security.Policy.ApplicationTrustEnumerator.Current
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Henter gjeldende <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> objekt i den <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> samling."
  remarks: "Når enumeratoren opprettes, peker den ikke til et objekt, slik at den gjeldende egenskapen er ikke gyldig, og Iverksett et unntak hvis den er åpnet. Du må først kalle den <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>metoden Plasser markøren på det første objektet i samlingen.</xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>       Flere kall til gjeldende med ingen mellomliggende kall til <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>tilbakestiller samme <xref:System.Security.Policy.ApplicationTrust>objektet.</xref:System.Security.Policy.ApplicationTrust> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>"
  syntax:
    content: public System.Security.Policy.ApplicationTrust Current { get; }
    return:
      type: System.Security.Policy.ApplicationTrust
      description: "The current <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;></xref> in the <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;></xref>."
  overload: System.Security.Policy.ApplicationTrustEnumerator.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustEnumerator.MoveNext
  id: MoveNext
  parent: System.Security.Policy.ApplicationTrustEnumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: ApplicationTrustEnumerator.MoveNext()
  fullName: System.Security.Policy.ApplicationTrustEnumerator.MoveNext()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Går videre til neste element i den <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> samling."
  remarks: "Metoden MoveNext umiddelbart returnerer `false` Hvis det er ingen objekter i samlingen.       MoveNext tilbakestiller `true` til den har nådd slutten av samlingen. Deretter returneres `false` for hvert etterfølgende kall. Imidlertid etter MoveNext returnerte `false`, få tilgang til den <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>egenskapen vil Iverksett et unntak.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>       Når det er opprettet, en opplisting som er plassert før først <xref:System.Security.Policy.ApplicationTrust>objektet i samlingen, og det første kallet til MoveNext plasserer opplistingen for den første objekt i samlingen.</xref:System.Security.Policy.ApplicationTrust>"
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis enumeratoren ble fullført avansert til neste element; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Hvis Enumeratoren har passert slutten av samlingen."
  overload: System.Security.Policy.ApplicationTrustEnumerator.MoveNext*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustEnumerator.Reset
  id: Reset
  parent: System.Security.Policy.ApplicationTrustEnumerator
  langs:
  - csharp
  name: Reset()
  nameWithType: ApplicationTrustEnumerator.Reset()
  fullName: System.Security.Policy.ApplicationTrustEnumerator.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Tilbakestiller enumeratoren til starten av den <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> samling."
  remarks: "En opplisting flytter i et radsett bare retning. Bruk denne metoden til å returnere enumeratoren til starten av samlingen av <xref:System.Security.Policy.ApplicationTrust>objekter.</xref:System.Security.Policy.ApplicationTrust>       Metoden tilbakestilling av markøren på det første objektet i samlingen. Etter å tilbakestille, trenger du ikke å kalle den <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>metode for å flytte markøren tilbake til det første objektet.</xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Security.Policy.ApplicationTrustEnumerator.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  isEii: true
  parent: System.Security.Policy.ApplicationTrustEnumerator
  langs:
  - csharp
  name: System.Collections.IEnumerator.Current
  nameWithType: ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Security.Policy.ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Henter gjeldende <xref:System.Object>i den <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> samlingen.</xref:System.Object>"
  remarks: "Ikke kall denne metoden. Bruk av <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>egenskapen i stedet.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>"
  syntax:
    content: object System.Collections.IEnumerator.Current { get; }
    return:
      type: System.Object
      description: "Gjeldende <xref:System.Object>i den <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref>.</xref:System.Object>"
  overload: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Policy.ApplicationTrustEnumerator.Current
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: Current
  nameWithType: ApplicationTrustEnumerator.Current
  fullName: System.Security.Policy.ApplicationTrustEnumerator.Current
- uid: System.Security.Policy.ApplicationTrust
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust
- uid: System.Security.Policy.ApplicationTrustEnumerator.MoveNext
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: MoveNext()
  nameWithType: ApplicationTrustEnumerator.MoveNext()
  fullName: System.Security.Policy.ApplicationTrustEnumerator.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Policy.ApplicationTrustEnumerator.Reset
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: Reset()
  nameWithType: ApplicationTrustEnumerator.Reset()
  fullName: System.Security.Policy.ApplicationTrustEnumerator.Reset()
- uid: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Security.Policy.ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
- uid: System.Security.Policy.ApplicationTrustEnumerator.Current*
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: Current
  nameWithType: ApplicationTrustEnumerator.Current
- uid: System.Security.Policy.ApplicationTrustEnumerator.MoveNext*
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: MoveNext
  nameWithType: ApplicationTrustEnumerator.MoveNext
- uid: System.Security.Policy.ApplicationTrustEnumerator.Reset*
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: Reset
  nameWithType: ApplicationTrustEnumerator.Reset
- uid: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current*
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
