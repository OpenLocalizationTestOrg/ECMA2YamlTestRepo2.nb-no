### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.FileIOPermission
  id: FileIOPermission
  children:
  - System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String)
  - System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String[])
  - System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  - System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String[])
  - System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)
  - System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])
  - System.Security.Permissions.FileIOPermission.AllFiles
  - System.Security.Permissions.FileIOPermission.AllLocalFiles
  - System.Security.Permissions.FileIOPermission.Copy
  - System.Security.Permissions.FileIOPermission.Equals(System.Object)
  - System.Security.Permissions.FileIOPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.FileIOPermission.GetHashCode
  - System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)
  - System.Security.Permissions.FileIOPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.FileIOPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.FileIOPermission.IsUnrestricted
  - System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)
  - System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])
  - System.Security.Permissions.FileIOPermission.ToXml
  - System.Security.Permissions.FileIOPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: FileIOPermission
  nameWithType: FileIOPermission
  fullName: System.Security.Permissions.FileIOPermission
  type: Class
  summary: "Kontrollerer muligheten til å få tilgang til filer og mapper. Denne klassen kan ikke arves."
  remarks: "This permission distinguishes between the following four types of file IO access provided by <xref:System.Security.Permissions.FileIOPermissionAccess>:  \n  \n-   `Read`: Read access to the contents of the file or access to information about the file, such as its length or last modification time.  \n  \n-   `Write`: Write access to the contents of the file or access to change information about the file, such as its name. Also allows for deletion and overwriting.  \n  \n-   `Append`: Ability to write to the end of a file only. No ability to read.  \n  \n-   `PathDiscovery`: Access to the information in the path itself. This helps protect sensitive information in the path, such as user names, as well as information about the directory structure that is revealed in the path. This value does not grant access to files or folders represented by the path.  \n  \n> [!NOTE]\n>  Giving <xref:System.Security.Permissions.FileIOPermissionAccess> access to an assembly is similar to granting it full trust. If an application should not write to the file system, it should not have <xref:System.Security.Permissions.FileIOPermissionAccess> access.  \n  \n All these permissions are independent, meaning that rights to one do not imply rights to another. For example, `Write` permission does not imply permission to `Read` or `Append`. If more than one permission is desired, they can be combined using a bitwise OR as shown in the code example that follows. File permission is defined in terms of canonical absolute paths; calls should always be made with canonical file paths.  \n  \n FileIOPermission describes protected operations on files and folders. The <xref:System.IO.File> class helps provide secure access to files and folders. The security access check is performed when the handle to the file is created. By doing the check at creation time, the performance impact of the security check is minimized. Opening a file happens once, while reading and writing can happen multiple times. Once the file is opened, no further checks are done. If the object is passed to an untrusted caller, it can be misused. For example, file handles should not be stored in public global statics where code with less permission can access them.  \n  \n <xref:System.Security.Permissions.FileIOPermissionAccess> specifies actions that can be performed on the file or folder. In addition, these actions can be combined using a bitwise OR to form complex instances.  \n  \n Access to a folder implies access to all the files it contains, as well as access to all the files and folders in its subfolders. For example, `Read` access to C:\\folder1\\ implies `Read` access to C:\\folder1\\file1.txt, C:\\folder1\\folder2\\\\, C:\\folder1\\folder2\\file2.txt, and so on.  \n  \n> [!NOTE]\n>  In versions of the .NET Framework before the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], you could use the <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName> method to prevent inadvertent access to system resources by trusted code. <xref:System.Security.CodeAccessPermission.Deny%2A> is now obsolete, and access to resources is now determined solely by the granted permission set for an assembly. To limit access to files, you must run partially trusted code in a sandbox and assign it permissions only to resources that the code is allowed to access. For information about running an application in a sandbox, see [How to: Run Partially Trusted Code in a Sandbox](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following examples illustrate code that uses FileIOPermission. After the following two lines of code, the object `f` represents permission to read all files on the client computer's local disks. The code example then demands the permission to determine whether the application has permission to read the files.  \n  \n [!code-cs[Classic FileIOPermission Example#1](~/add/codesnippet/csharp/t-system.security.permis_23_1.cs)]\n [!code-vb[Classic FileIOPermission Example#1](~/add/codesnippet/visualbasic/t-system.security.permis_23_1.vb)]\n [!code-cpp[Classic FileIOPermission Example#1](~/add/codesnippet/cpp/t-system.security.permis_23_1.cpp)]  \n  \n After the following two lines of code, the object `f2` represents permissions to read C:\\test_r and read and write to C:\\example\\out.txt. `Read` and `Write` represent the file/folder permissions as previously described. After creating the permission, the code demands the permission to determine whether the application has the right to read and write to the file.  \n  \n [!code-cs[Classic FileIOPermission Example#2](~/add/codesnippet/csharp/t-system.security.permis_23_2.cs)]\n [!code-vb[Classic FileIOPermission Example#2](~/add/codesnippet/visualbasic/t-system.security.permis_23_2.vb)]\n [!code-cpp[Classic FileIOPermission Example#2](~/add/codesnippet/cpp/t-system.security.permis_23_2.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class FileIOPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: FileIOPermission(PermissionState)
  nameWithType: FileIOPermission.FileIOPermission(PermissionState)
  fullName: System.Security.Permissions.FileIOPermission.FileIOPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Permissions.FileIOPermission&quot;> </xref> klasse fullstendig begrenset eller ubegrenset tilgang som er angitt."
  remarks: "Oppretter en fullstendig begrenset (`None`) eller `Unrestricted` tilgang til filer og mapper."
  example:
  - "The following code example creates a new instance of the <xref:System.Security.Permissions.FileIOPermission> class with fully restricted read access.  \n  \n [!code-cs[Classic FileIOPermission Example#1](~/add/codesnippet/csharp/77d769e4-2464-4991-ba06-_1.cs)]\n [!code-vb[Classic FileIOPermission Example#1](~/add/codesnippet/visualbasic/77d769e4-2464-4991-ba06-_1.vb)]\n [!code-cpp[Classic FileIOPermission Example#1](~/add/codesnippet/cpp/77d769e4-2464-4991-ba06-_1.cpp)]"
  syntax:
    content: public FileIOPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Én av de <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> nummereringsverdier."
  overload: System.Security.Permissions.FileIOPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> state </code> parameteren er ikke en gyldig verdi for <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String)
  id: '#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String)'
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: FileIOPermission(FileIOPermissionAccess,String)
  nameWithType: FileIOPermission.FileIOPermission(FileIOPermissionAccess,String)
  fullName: System.Security.Permissions.FileIOPermission.FileIOPermission(FileIOPermissionAccess,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Permissions.FileIOPermission&quot;> </xref> klassen med den angitte tilgangen til den angitte filen eller mappen."
  remarks: "Denne konstruktøren tillater bare én av de <xref:System.Security.Permissions.FileIOPermissionAccess>verdiene som skal angis for den angitte filen eller mappen.</xref:System.Security.Permissions.FileIOPermissionAccess> Bruk av <xref:System.Security.Permissions.FileIOPermission.AddPathList%2A>metode for å definere komplekse tillatelser.</xref:System.Security.Permissions.FileIOPermission.AddPathList%2A>"
  example:
  - "The following code example shows the use of the FileIOPermission constructor to create a new instance of the <xref:System.Security.Permissions.FileIOPermission> class, which provides complete access to the C:\\test_r file.  \n  \n [!code-cs[Classic FileIOPermission Example#2](~/add/codesnippet/csharp/51a3f39e-30ae-4011-8c38-_1.cs)]\n [!code-vb[Classic FileIOPermission Example#2](~/add/codesnippet/visualbasic/51a3f39e-30ae-4011-8c38-_1.vb)]\n [!code-cpp[Classic FileIOPermission Example#2](~/add/codesnippet/cpp/51a3f39e-30ae-4011-8c38-_1.cpp)]"
  syntax:
    content: public FileIOPermission (System.Security.Permissions.FileIOPermissionAccess access, string path);
    parameters:
    - id: access
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "En bitvis kombinasjon av det <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref> nummereringsverdier."
    - id: path
      type: System.String
      description: "Den absolutte banen til filen eller mappen."
  overload: System.Security.Permissions.FileIOPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> access </code> parameteren er ikke en gyldig verdi for <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>.       - eller - <code> path </code> parameteren er ikke en gyldig streng.       - eller - <code> path </code> parameter ikke angi den absolutte banen til filen eller mappen."
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String[])
  id: '#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String[])'
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: FileIOPermission(FileIOPermissionAccess,String[])
  nameWithType: FileIOPermission.FileIOPermission(FileIOPermissionAccess,String[])
  fullName: System.Security.Permissions.FileIOPermission.FileIOPermission(FileIOPermissionAccess,String[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Permissions.FileIOPermission&quot;> </xref> klassen med den angitte tilgangen til den angitte filer og mapper."
  remarks: "Denne konstruktøren tillater bare én <xref:System.Security.Permissions.FileIOPermissionAccess>verdien angis for den angitte filer og mapper.</xref:System.Security.Permissions.FileIOPermissionAccess> Bruk av <xref:System.Security.Permissions.FileIOPermission.AddPathList%2A>metode for å definere komplekse tillatelser.</xref:System.Security.Permissions.FileIOPermission.AddPathList%2A>"
  syntax:
    content: public FileIOPermission (System.Security.Permissions.FileIOPermissionAccess access, string[] pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "En bitvis kombinasjon av det <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref> nummereringsverdier."
    - id: pathList
      type: System.String[]
      description: "En matrise som inneholder hele banen til filer og mapper."
  overload: System.Security.Permissions.FileIOPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> access </code> parameteren er ikke en gyldig verdi for <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>.       - eller - en oppføring i den <code> pathList </code> matrise er ikke en gyldig streng."
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  id: '#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)'
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: FileIOPermission(FileIOPermissionAccess,AccessControlActions,String)
  nameWithType: FileIOPermission.FileIOPermission(FileIOPermissionAccess,AccessControlActions,String)
  fullName: System.Security.Permissions.FileIOPermission.FileIOPermission(FileIOPermissionAccess,AccessControlActions,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Permissions.FileIOPermission&quot;> </xref> klassen med den angitte tilgangen til den angitte filen eller mappen og angitte tilgangsrettigheter til informasjon om kontroll."
  remarks: "Denne konstruktøren tillater bare én <xref:System.Security.Permissions.FileIOPermissionAccess>verdien angis for den angitte filen eller mapper.</xref:System.Security.Permissions.FileIOPermissionAccess> Bruk av <xref:System.Security.Permissions.FileIOPermission.AddPathList%2A>metode for å definere komplekse tillatelser.</xref:System.Security.Permissions.FileIOPermission.AddPathList%2A>       Den `control` parameteren angir om tilgangskontroll listen (ACL) for filen eller mappen som er angitt av `path` kan endres, vises, eller er ikke tilgjengelig.      > [!IMPORTANT] > En tilgangskontrolliste (ACL) som beskriver personer eller grupper som har, eller har ikke tilgangsrettigheter, med bestemte handlinger på den angitte og egenskaper.  Muligheten til å endre eller vise en tilgangskontrolliste (ACL) er en viktig tillatelse, og bør gis forsiktig."
  syntax:
    content: public FileIOPermission (System.Security.Permissions.FileIOPermissionAccess access, System.Security.AccessControl.AccessControlActions control, string path);
    parameters:
    - id: access
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "En bitvis kombinasjon av det <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref> nummereringsverdier."
    - id: control
      type: System.Security.AccessControl.AccessControlActions
      description: "En bitvis kombinasjon av det <xref href=&quot;System.Security.AccessControl.AccessControlActions&quot;> </xref> nummereringsverdier."
    - id: path
      type: System.String
      description: "Den absolutte banen til filen eller mappen."
  overload: System.Security.Permissions.FileIOPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> access </code> parameteren er ikke en gyldig verdi for <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>.       - eller - <code> path </code> parameteren er ikke en gyldig streng.       - eller - <code> path </code> parameter ikke angi den absolutte banen til filen eller mappen."
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String[])
  id: '#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String[])'
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: FileIOPermission(FileIOPermissionAccess,AccessControlActions,String[])
  nameWithType: FileIOPermission.FileIOPermission(FileIOPermissionAccess,AccessControlActions,String[])
  fullName: System.Security.Permissions.FileIOPermission.FileIOPermission(FileIOPermissionAccess,AccessControlActions,String[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Permissions.FileIOPermission&quot;> </xref> klassen med den angitte tilgangen til de angitte filene og mapper og angitte tilgangsrettigheter til informasjon om kontroll."
  remarks: "Denne konstruktøren tillater bare én <xref:System.Security.Permissions.FileIOPermissionAccess>verdien angis for den angitte filer og mapper.</xref:System.Security.Permissions.FileIOPermissionAccess> Bruk av <xref:System.Security.Permissions.FileIOPermission.AddPathList%2A>metode for å definere komplekse tillatelser.</xref:System.Security.Permissions.FileIOPermission.AddPathList%2A>       Den `control` parameteren angir om tilgangskontroll listen (ACL) for filen eller mappen som er angitt av `path` kan endres, vises, eller er ikke tilgjengelig.      > [!IMPORTANT] > En tilgangskontrolliste (ACL) som beskriver personer eller grupper som har, eller har ikke tilgangsrettigheter, med bestemte handlinger på den angitte og egenskaper.  Muligheten til å endre eller vise en tilgangskontrolliste (ACL) er en viktig tillatelse, og bør gis forsiktig."
  syntax:
    content: public FileIOPermission (System.Security.Permissions.FileIOPermissionAccess access, System.Security.AccessControl.AccessControlActions control, string[] pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "En bitvis kombinasjon av det <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref> nummereringsverdier."
    - id: control
      type: System.Security.AccessControl.AccessControlActions
      description: "En bitvis kombinasjon av det <xref href=&quot;System.Security.AccessControl.AccessControlActions&quot;> </xref> nummereringsverdier."
    - id: pathList
      type: System.String[]
      description: "En matrise som inneholder hele banen til filer og mapper."
  overload: System.Security.Permissions.FileIOPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> access </code> parameteren er ikke en gyldig verdi for <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>.       - eller - en oppføring i den <code> pathList </code> matrise er ikke en gyldig streng."
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)
  id: AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: AddPathList(FileIOPermissionAccess,String)
  nameWithType: FileIOPermission.AddPathList(FileIOPermissionAccess,String)
  fullName: System.Security.Permissions.FileIOPermission.AddPathList(FileIOPermissionAccess,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Legger til tilgang for den angitte filen eller mappen i den eksisterende tilstanden til tillatelsen."
  remarks: "Bruk denne metoden til å endre fil-og ved å legge til tillatelsen gjeldende systemtilstand."
  example:
  - "The following code example shows the use of the AddPathList method.  \n  \n [!code-cs[Classic FileIOPermission Example#2](~/add/codesnippet/csharp/179395dd-6ede-43e0-bf6e-_1.cs)]\n [!code-vb[Classic FileIOPermission Example#2](~/add/codesnippet/visualbasic/179395dd-6ede-43e0-bf6e-_1.vb)]\n [!code-cpp[Classic FileIOPermission Example#2](~/add/codesnippet/cpp/179395dd-6ede-43e0-bf6e-_1.cpp)]"
  syntax:
    content: public void AddPathList (System.Security.Permissions.FileIOPermissionAccess access, string path);
    parameters:
    - id: access
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "En bitvis kombinasjon av det <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref> verdier."
    - id: path
      type: System.String
      description: "Den absolutte banen til en fil eller mappe."
  overload: System.Security.Permissions.FileIOPermission.AddPathList*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> access </code> parameteren er ikke en gyldig verdi for <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>.       - eller - <code> path </code> parameteren er ikke en gyldig streng.       - eller - <code> path </code> parameteren angav ikke den absolutte banen til filen eller mappen."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <code> path </code> parameteren har et ugyldig format."
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])
  id: AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: AddPathList(FileIOPermissionAccess,String[])
  nameWithType: FileIOPermission.AddPathList(FileIOPermissionAccess,String[])
  fullName: System.Security.Permissions.FileIOPermission.AddPathList(FileIOPermissionAccess,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Legger til tilgang for de angitte filene og mappene i den eksisterende tilstanden til tillatelsen."
  remarks: "Bruk denne metoden til å endre fil-og ved å legge til tillatelsen gjeldende systemtilstand."
  syntax:
    content: public void AddPathList (System.Security.Permissions.FileIOPermissionAccess access, string[] pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "En bitvis kombinasjon av det <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref> verdier."
    - id: pathList
      type: System.String[]
      description: "En matrise som inneholder hele banen til filer og mapper."
  overload: System.Security.Permissions.FileIOPermission.AddPathList*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> access </code> parameteren er ikke en gyldig verdi for <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>.       - eller - en oppføring i den <code> pathList </code> matrise er ikke gyldig."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "En oppføring i den <code> pathList </code> matrise har et ugyldig format."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>pathList</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.AllFiles
  id: AllFiles
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: AllFiles
  nameWithType: FileIOPermission.AllFiles
  fullName: System.Security.Permissions.FileIOPermission.AllFiles
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Henter eller angir den tillatte tilgangen til alle filer."
  remarks: "Denne egenskapen henter eller angir den tillatte tilgangen til alle filer på de lokale datamaskinen og nettverket stasjonene.       En individuell <xref:System.Security.Permissions.FileIOPermissionAccess>verdien kan kontrolleres for å bruke en bitvis AND-operasjon.</xref:System.Security.Permissions.FileIOPermissionAccess>"
  example:
  - "The following code example shows the use of the AllFiles property.  \n  \n [!code-cs[Classic FileIOPermission Example#3](~/add/codesnippet/csharp/p-system.security.permis_9_1.cs)]\n [!code-vb[Classic FileIOPermission Example#3](~/add/codesnippet/visualbasic/p-system.security.permis_9_1.vb)]\n [!code-cpp[Classic FileIOPermission Example#3](~/add/codesnippet/cpp/p-system.security.permis_9_1.cpp)]"
  syntax:
    content: public System.Security.Permissions.FileIOPermissionAccess AllFiles { get; set; }
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "Settet med filen i/u flaggene for alle filer."
  overload: System.Security.Permissions.FileIOPermission.AllFiles*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.AllLocalFiles
  id: AllLocalFiles
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: AllLocalFiles
  nameWithType: FileIOPermission.AllLocalFiles
  fullName: System.Security.Permissions.FileIOPermission.AllLocalFiles
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Henter eller angir den tillatte tilgangen til alle lokale filer."
  remarks: "Lokale filer er finnes på den lokale datamaskinen. Noen filer som er ikke tilgjengelig via en nettverksstasjoner er lokale.       En individuell <xref:System.Security.Permissions.FileIOPermissionAccess>verdien kan kontrolleres for å bruke en bitvis AND-operasjon.</xref:System.Security.Permissions.FileIOPermissionAccess>"
  example:
  - "The following code example shows the use of the AllLocalFiles property.  \n  \n [!code-cs[Classic FileIOPermission Example#1](~/add/codesnippet/csharp/p-system.security.permis_10_1.cs)]\n [!code-vb[Classic FileIOPermission Example#1](~/add/codesnippet/visualbasic/p-system.security.permis_10_1.vb)]\n [!code-cpp[Classic FileIOPermission Example#1](~/add/codesnippet/cpp/p-system.security.permis_10_1.cpp)]"
  syntax:
    content: public System.Security.Permissions.FileIOPermissionAccess AllLocalFiles { get; set; }
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "Settet med filen i/u flaggene for alle lokale filer."
  overload: System.Security.Permissions.FileIOPermission.AllLocalFiles*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.Copy
  id: Copy
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: FileIOPermission.Copy()
  fullName: System.Security.Permissions.FileIOPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Oppretter og returnerer en identisk kopi av gjeldende tillatelse."
  remarks: "En kopi av tillatelsen representerer samme tilgang til ressurser som den opprinnelige tillatelsen."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "En kopi av gjeldende tillatelse."
  overload: System.Security.Permissions.FileIOPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: FileIOPermission.Equals(Object)
  fullName: System.Security.Permissions.FileIOPermission.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Bestemmer om den angitte <xref href=&quot;System.Security.Permissions.FileIOPermission&quot;> </xref> objektet som er lik gjeldende <xref href=&quot;System.Security.Permissions.FileIOPermission&quot;> </xref>."
  remarks: "Hvis du vil ha mer informasjon, kan du se <xref:System.Object.Equals%2A>.</xref:System.Object.Equals%2A>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Den <xref href=&quot;System.Security.Permissions.FileIOPermission&quot;> </xref> objektet skal sammenlignes med gjeldende <xref href=&quot;System.Security.Permissions.FileIOPermission&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den angitte <xref href=&quot;System.Security.Permissions.FileIOPermission&quot;> </xref> er lik gjeldende <xref href=&quot;System.Security.Permissions.FileIOPermission&quot;> </xref> objekt; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.FileIOPermission.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: FileIOPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.FileIOPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Rekonstruerer en tillatelse med en angitt tilstand fra en XML-koding."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "XML-kodingen brukes til å Bygg opp tillatelsen."
  overload: System.Security.Permissions.FileIOPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> esd </code> -parameteren er ikke et gyldig tillatelse-element.       - eller - <code> esd </code> versjonsnummeret for parameteren er ikke kompatibel."
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.GetHashCode
  id: GetHashCode
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: FileIOPermission.GetHashCode()
  fullName: System.Security.Permissions.FileIOPermission.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Henter en hash-kode for den <xref href=&quot;System.Security.Permissions.FileIOPermission&quot;> </xref> objektet som passer for bruk i nummer algoritmer og data strukturer som en hash-tabell."
  remarks: "Hash-kode for to forekomster av samme tillatelse kan være forskjellig, en hash-kode må derfor ikke brukes til å sammenligne to <xref:System.Security.Permissions.FileIOPermission>objekter.</xref:System.Security.Permissions.FileIOPermission>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "En hash-kode for gjeldende <xref href=&quot;System.Security.Permissions.FileIOPermission&quot;> </xref> objektet."
  overload: System.Security.Permissions.FileIOPermission.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)
  id: GetPathList(System.Security.Permissions.FileIOPermissionAccess)
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: GetPathList(FileIOPermissionAccess)
  nameWithType: FileIOPermission.GetPathList(FileIOPermissionAccess)
  fullName: System.Security.Permissions.FileIOPermission.GetPathList(FileIOPermissionAccess)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Henter alle filer og mapper med angitt <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>."
  remarks: "Bruk denne metoden til å hente tilstanden for gjeldende tillatelse. Ikke hente tilstanden for begge `Read` og `Write` tilgang, to kall til denne metoden er påkrevd.      > [!NOTE] > Den `access` parameteren er begrenset til verdiene i <xref:System.Security.Permissions.FileIOPermissionAccess>, som representerer enkle typer tilgang til filen.</xref:System.Security.Permissions.FileIOPermissionAccess> Verdiene er <xref:System.Security.Permissions.FileIOPermissionAccess>, <xref:System.Security.Permissions.FileIOPermissionAccess>, <xref:System.Security.Permissions.FileIOPermissionAccess>, og <xref:System.Security.Permissions.FileIOPermissionAccess>.</xref:System.Security.Permissions.FileIOPermissionAccess> </xref:System.Security.Permissions.FileIOPermissionAccess> </xref:System.Security.Permissions.FileIOPermissionAccess> </xref:System.Security.Permissions.FileIOPermissionAccess> Verdiene som er godkjent til `access` , inkluderer ikke <xref:System.Security.Permissions.FileIOPermissionAccess>og <xref:System.Security.Permissions.FileIOPermissionAccess>, som representerer ikke enkelt tilgangstyper filen.</xref:System.Security.Permissions.FileIOPermissionAccess> </xref:System.Security.Permissions.FileIOPermissionAccess>"
  example:
  - "The following code example shows the use of the GetPathList method. This example is part of a larger example provided for the <xref:System.Security.Permissions.FileIOPermission> class.  \n  \n [!code-cpp[System.Security.Permissions.FileIOPermission#7](~/add/codesnippet/cpp/996247c6-c512-46ad-9cab-_1.cpp)]\n [!code-cs[System.Security.Permissions.FileIOPermission#7](~/add/codesnippet/csharp/996247c6-c512-46ad-9cab-_1.cs)]\n [!code-vb[System.Security.Permissions.FileIOPermission#7](~/add/codesnippet/visualbasic/996247c6-c512-46ad-9cab-_1.vb)]"
  syntax:
    content: public string[] GetPathList (System.Security.Permissions.FileIOPermissionAccess access);
    parameters:
    - id: access
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "Én av de <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref> verdier som representerer en enkel type tilgang til filen."
    return:
      type: System.String[]
      description: "En matrise som inneholder banene på filer og mapper som Access angitt av den <code> access </code> parameteren gis."
  overload: System.Security.Permissions.FileIOPermission.GetPathList*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>access</code>er ikke en gyldig verdi for <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>.       - eller - <code>access</code> er <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>, som representerer flere tilgangstypen filen, eller <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>, som representerer alle typer tilgang til filen."
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: FileIOPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.FileIOPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Oppretter og returnerer en tillatelse som er i skjæringspunktet mellom den gjeldende tillatelsene og angitt."
  remarks: "Skjæringspunktet mellom to tillatelsene er en tillatelse som beskriver operasjoner begge beskriver felles. En forespørsel som sender begge opprinnelige tillatelser vil sende skjæringspunktet."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Tillatelse til å intersect med gjeldende tillatelse. Det må være den samme typen som gjeldende tillatelse."
    return:
      type: System.Security.IPermission
      description: "En ny tillatelse som representerer skjæringspunktet for den gjeldende tillatelsene og angitt. Denne nye tillatelsen er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis skjæringspunktet er tom."
  overload: System.Security.Permissions.FileIOPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> target </code> -parameteren er ikke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> og er ikke av samme type som gjeldende tillatelse."
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: FileIOPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.FileIOPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Avgjør om gjeldende tillatelsen er et delsett av den angitte tillatelsen."
  remarks: "Gjeldende tillatelsen er et delsett av den angitte tillatelsen hvis gjeldende tillatelsen angir et sett med operasjoner som finnes i den angitte tillatelsen. For eksempel en tillatelse som representerer lesetilgang til C:\\example.txt er et delsett for en tillatelse som representerer lesetilgang til C:\\\\. Hvis denne metoden returnerer `true`, gjeldende tillatelsen representerer ingen flere tilgang til beskyttet ressurs enn den angitte tillatelsen."
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Tillatelse som skal testes for delsett-relasjonen. Denne tillatelsen må være den samme typen som gjeldende tillatelse."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den gjeldende tillatelsen er et delsett av den angitte tillatelsen. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.FileIOPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> target </code> -parameteren er ikke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> og er ikke av samme type som gjeldende tillatelse."
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: FileIOPermission.IsUnrestricted()
  fullName: System.Security.Permissions.FileIOPermission.IsUnrestricted()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Returnerer en verdi som angir om den gjeldende tillatelsen er ubegrenset."
  remarks: "En ubegrenset tilgang representerer tilgang til alle ressurser som er beskyttet av tillatelsen."
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den gjeldende tillatelsen er ubegrenset; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.FileIOPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)
  id: SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: SetPathList(FileIOPermissionAccess,String)
  nameWithType: FileIOPermission.SetPathList(FileIOPermissionAccess,String)
  fullName: System.Security.Permissions.FileIOPermission.SetPathList(FileIOPermissionAccess,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Angir den angitte tilgangen til den angitte filen eller katalogen erstatte den eksisterende tilstanden til tillatelsen."
  remarks: "The previous state of the current permission for the specified access type is overwritten. The following code sets the access for C:\\temp to <xref:System.Security.Permissions.FileIOPermissionAccess>.  \n  \n [!code-cpp[System.Security.Permissions.FileIOPermission#12](~/add/codesnippet/cpp/21456ab4-f876-4c97-b331-_1.cpp)]\n [!code-vb[System.Security.Permissions.FileIOPermission#12](~/add/codesnippet/visualbasic/21456ab4-f876-4c97-b331-_1.vb)]\n [!code-cs[System.Security.Permissions.FileIOPermission#12](~/add/codesnippet/csharp/21456ab4-f876-4c97-b331-_1.cs)]  \n  \n This access will not be overwritten by the following code because the access types are not the same.  \n  \n [!code-cpp[System.Security.Permissions.FileIOPermission#13](~/add/codesnippet/cpp/21456ab4-f876-4c97-b331-_2.cpp)]\n [!code-vb[System.Security.Permissions.FileIOPermission#13](~/add/codesnippet/visualbasic/21456ab4-f876-4c97-b331-_2.vb)]\n [!code-cs[System.Security.Permissions.FileIOPermission#13](~/add/codesnippet/csharp/21456ab4-f876-4c97-b331-_2.cs)]"
  example:
  - "The following code example shows the use of the SetPathList method.  \n  \n [!code-cpp[System.Security.Permissions.FileIOPermission#7](~/add/codesnippet/cpp/21456ab4-f876-4c97-b331-_3.cpp)]\n [!code-cs[System.Security.Permissions.FileIOPermission#7](~/add/codesnippet/csharp/21456ab4-f876-4c97-b331-_3.cs)]\n [!code-vb[System.Security.Permissions.FileIOPermission#7](~/add/codesnippet/visualbasic/21456ab4-f876-4c97-b331-_3.vb)]"
  syntax:
    content: public void SetPathList (System.Security.Permissions.FileIOPermissionAccess access, string path);
    parameters:
    - id: access
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "En bitvis kombinasjon av det <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref> verdier."
    - id: path
      type: System.String
      description: "Den absolutte banen til filen eller mappen."
  overload: System.Security.Permissions.FileIOPermission.SetPathList*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> access </code> parameteren er ikke en gyldig verdi for <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>.       - eller - <code> path </code> parameteren er ikke en gyldig streng.       - eller - <code> path </code> parameteren angav ikke den absolutte banen til filen eller mappen."
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])
  id: SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: SetPathList(FileIOPermissionAccess,String[])
  nameWithType: FileIOPermission.SetPathList(FileIOPermissionAccess,String[])
  fullName: System.Security.Permissions.FileIOPermission.SetPathList(FileIOPermissionAccess,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Angir den angitte tilgangen til den angitte filer og mapper, å erstatte den gjeldende tilstanden for den angitte tilgangen med det nye settet med baner."
  remarks: "The previous state of the current permission for the specified access type is overwritten. The following code sets the access for C:\\temp to <xref:System.Security.Permissions.FileIOPermissionAccess>.  \n  \n This access will not be overwritten by the following code because the access types are not the same.  \n  \n [!code-cpp[System.Security.Permissions.FileIOPermission#15](~/add/codesnippet/cpp/653665a4-6451-42cc-8bd1-_1.cpp)]\n [!code-vb[System.Security.Permissions.FileIOPermission#15](~/add/codesnippet/visualbasic/653665a4-6451-42cc-8bd1-_1.vb)]\n [!code-cs[System.Security.Permissions.FileIOPermission#15](~/add/codesnippet/csharp/653665a4-6451-42cc-8bd1-_1.cs)]"
  syntax:
    content: public void SetPathList (System.Security.Permissions.FileIOPermissionAccess access, string[] pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "En bitvis kombinasjon av det <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref> verdier."
    - id: pathList
      type: System.String[]
      description: "En matrise som inneholder hele banen til filer og mapper."
  overload: System.Security.Permissions.FileIOPermission.SetPathList*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> access </code> parameteren er ikke en gyldig verdi for <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>.       - eller - en oppføring i den <code> pathList </code> parameteren er ikke en gyldig streng."
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: FileIOPermission.ToXml()
  fullName: System.Security.Permissions.FileIOPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Oppretter en XML-koding av tillatelsen og den gjeldende tilstanden."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "XML-koding for tillatelse, inkludert tilstandsinformasjon."
  overload: System.Security.Permissions.FileIOPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.FileIOPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: FileIOPermission.Union(IPermission)
  fullName: System.Security.Permissions.FileIOPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Oppretter en tillatelse som Unionen av de gjeldende tillatelsene og angitt."
  remarks: "Resultatet av et kall til Union er en tillatelse som representerer alle operasjoner som er representert av både den gjeldende tillatelsene og angitt. En forespørsel som sender enten tillatelse sender sine union."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission other);
    parameters:
    - id: other
      type: System.Security.IPermission
      description: "Tillatelse til å kombineres med gjeldende tillatelse. Det må være den samme typen som gjeldende tillatelse."
    return:
      type: System.Security.IPermission
      description: "En ny tillatelse som representerer Unionen av de gjeldende tillatelsene og angitt."
  overload: System.Security.Permissions.FileIOPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> other </code> -parameteren er ikke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> og er ikke av samme type som gjeldende tillatelse."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: FileIOPermission(PermissionState)
  nameWithType: FileIOPermission.FileIOPermission(PermissionState)
  fullName: System.Security.Permissions.FileIOPermission.FileIOPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String)
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: FileIOPermission(FileIOPermissionAccess,String)
  nameWithType: FileIOPermission.FileIOPermission(FileIOPermissionAccess,String)
  fullName: System.Security.Permissions.FileIOPermission.FileIOPermission(FileIOPermissionAccess,String)
- uid: System.Security.Permissions.FileIOPermissionAccess
  parent: System.Security.Permissions
  isExternal: false
  name: FileIOPermissionAccess
  nameWithType: FileIOPermissionAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String[])
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: FileIOPermission(FileIOPermissionAccess,String[])
  nameWithType: FileIOPermission.FileIOPermission(FileIOPermissionAccess,String[])
  fullName: System.Security.Permissions.FileIOPermission.FileIOPermission(FileIOPermissionAccess,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: FileIOPermission(FileIOPermissionAccess,AccessControlActions,String)
  nameWithType: FileIOPermission.FileIOPermission(FileIOPermissionAccess,AccessControlActions,String)
  fullName: System.Security.Permissions.FileIOPermission.FileIOPermission(FileIOPermissionAccess,AccessControlActions,String)
- uid: System.Security.AccessControl.AccessControlActions
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlActions
  nameWithType: AccessControlActions
  fullName: System.Security.AccessControl.AccessControlActions
- uid: System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String[])
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: FileIOPermission(FileIOPermissionAccess,AccessControlActions,String[])
  nameWithType: FileIOPermission.FileIOPermission(FileIOPermissionAccess,AccessControlActions,String[])
  fullName: System.Security.Permissions.FileIOPermission.FileIOPermission(FileIOPermissionAccess,AccessControlActions,String[])
- uid: System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: AddPathList(FileIOPermissionAccess,String)
  nameWithType: FileIOPermission.AddPathList(FileIOPermissionAccess,String)
  fullName: System.Security.Permissions.FileIOPermission.AddPathList(FileIOPermissionAccess,String)
- uid: System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: AddPathList(FileIOPermissionAccess,String[])
  nameWithType: FileIOPermission.AddPathList(FileIOPermissionAccess,String[])
  fullName: System.Security.Permissions.FileIOPermission.AddPathList(FileIOPermissionAccess,String[])
- uid: System.Security.Permissions.FileIOPermission.AllFiles
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: AllFiles
  nameWithType: FileIOPermission.AllFiles
  fullName: System.Security.Permissions.FileIOPermission.AllFiles
- uid: System.Security.Permissions.FileIOPermission.AllLocalFiles
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: AllLocalFiles
  nameWithType: FileIOPermission.AllLocalFiles
  fullName: System.Security.Permissions.FileIOPermission.AllLocalFiles
- uid: System.Security.Permissions.FileIOPermission.Copy
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: Copy()
  nameWithType: FileIOPermission.Copy()
  fullName: System.Security.Permissions.FileIOPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.FileIOPermission.Equals(System.Object)
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: Equals(Object)
  nameWithType: FileIOPermission.Equals(Object)
  fullName: System.Security.Permissions.FileIOPermission.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Permissions.FileIOPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: FileIOPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.FileIOPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.FileIOPermission.GetHashCode
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: GetHashCode()
  nameWithType: FileIOPermission.GetHashCode()
  fullName: System.Security.Permissions.FileIOPermission.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: GetPathList(FileIOPermissionAccess)
  nameWithType: FileIOPermission.GetPathList(FileIOPermissionAccess)
  fullName: System.Security.Permissions.FileIOPermission.GetPathList(FileIOPermissionAccess)
- uid: System.Security.Permissions.FileIOPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: FileIOPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.FileIOPermission.Intersect(IPermission)
- uid: System.Security.Permissions.FileIOPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: FileIOPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.FileIOPermission.IsSubsetOf(IPermission)
- uid: System.Security.Permissions.FileIOPermission.IsUnrestricted
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: FileIOPermission.IsUnrestricted()
  fullName: System.Security.Permissions.FileIOPermission.IsUnrestricted()
- uid: System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: SetPathList(FileIOPermissionAccess,String)
  nameWithType: FileIOPermission.SetPathList(FileIOPermissionAccess,String)
  fullName: System.Security.Permissions.FileIOPermission.SetPathList(FileIOPermissionAccess,String)
- uid: System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: SetPathList(FileIOPermissionAccess,String[])
  nameWithType: FileIOPermission.SetPathList(FileIOPermissionAccess,String[])
  fullName: System.Security.Permissions.FileIOPermission.SetPathList(FileIOPermissionAccess,String[])
- uid: System.Security.Permissions.FileIOPermission.ToXml
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: ToXml()
  nameWithType: FileIOPermission.ToXml()
  fullName: System.Security.Permissions.FileIOPermission.ToXml()
- uid: System.Security.Permissions.FileIOPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: FileIOPermission.Union(IPermission)
  fullName: System.Security.Permissions.FileIOPermission.Union(IPermission)
- uid: System.Security.Permissions.FileIOPermission.#ctor*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: FileIOPermission
  nameWithType: FileIOPermission.FileIOPermission
- uid: System.Security.Permissions.FileIOPermission.AddPathList*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: AddPathList
  nameWithType: FileIOPermission.AddPathList
- uid: System.Security.Permissions.FileIOPermission.AllFiles*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: AllFiles
  nameWithType: FileIOPermission.AllFiles
- uid: System.Security.Permissions.FileIOPermission.AllLocalFiles*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: AllLocalFiles
  nameWithType: FileIOPermission.AllLocalFiles
- uid: System.Security.Permissions.FileIOPermission.Copy*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: Copy
  nameWithType: FileIOPermission.Copy
- uid: System.Security.Permissions.FileIOPermission.Equals*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: Equals
  nameWithType: FileIOPermission.Equals
- uid: System.Security.Permissions.FileIOPermission.FromXml*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: FromXml
  nameWithType: FileIOPermission.FromXml
- uid: System.Security.Permissions.FileIOPermission.GetHashCode*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: GetHashCode
  nameWithType: FileIOPermission.GetHashCode
- uid: System.Security.Permissions.FileIOPermission.GetPathList*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: GetPathList
  nameWithType: FileIOPermission.GetPathList
- uid: System.Security.Permissions.FileIOPermission.Intersect*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: Intersect
  nameWithType: FileIOPermission.Intersect
- uid: System.Security.Permissions.FileIOPermission.IsSubsetOf*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: FileIOPermission.IsSubsetOf
- uid: System.Security.Permissions.FileIOPermission.IsUnrestricted*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: FileIOPermission.IsUnrestricted
- uid: System.Security.Permissions.FileIOPermission.SetPathList*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: SetPathList
  nameWithType: FileIOPermission.SetPathList
- uid: System.Security.Permissions.FileIOPermission.ToXml*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: ToXml
  nameWithType: FileIOPermission.ToXml
- uid: System.Security.Permissions.FileIOPermission.Union*
  parent: System.Security.Permissions.FileIOPermission
  isExternal: false
  name: Union
  nameWithType: FileIOPermission.Union
