### YamlMime:ManagedReference
items:
- uid: System.Runtime.Versioning.ComponentGuaranteesAttribute
  id: ComponentGuaranteesAttribute
  children:
  - System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)
  - System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees
  langs:
  - csharp
  name: ComponentGuaranteesAttribute
  nameWithType: ComponentGuaranteesAttribute
  fullName: System.Runtime.Versioning.ComponentGuaranteesAttribute
  type: Class
  summary: "Definerer kompatibilitet garantere for en komponent, type eller typemedlemmet som kan går over flere versjoner."
  remarks: "ComponentGuaranteesAttribute brukes til å angi gjeldende kompatibilitetsnivået forbrukere av deres bibliotekene kan forventer på tvers av flere versjoner av utviklerne av komponenter og klassebiblioteker. Angir hvor mange garantere at en fremtidig versjon av biblioteket eller komponenten ikke bryter en eksisterende klient. Klienter kan bruke ComponentGuaranteesAttribute som hjelp til utformer sine egne grensesnitt for å sikre stabiliteten på tvers av versjoner.      > [!NOTE] > Common language runtime (CLR) bruker ikke dette attributtet på noen måte. Verdien ligger dokumentere tidligere meningen av forfatteren av komponenten. Kompileringstidspunktet verktøy kan også bruke disse deklareringer oppdager kompileringstidspunktet feil som ellers brytes deklarerte garantere.      ## Nivåer i kompatibilitetsnivået for ComponentGuaranteesAttribute støtter følgende nivåer kompatibilitet, som er representert av medlemmer av den <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>opplisting:-kompatibilitet ingen til versjon (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName>).</xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName> </xref:System.Runtime.Versioning.ComponentGuaranteesOptions> Klienten kan forventer at fremtidige versjoner ødelegger eksisterende klienten. Hvis du vil ha mer informasjon, se den [Nei kompatibilitet](#None) senere i dette emnet.      -Kompatibilitet med side-ved-side til versjon (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName>).</xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName> Komponenten er testet for å arbeide når flere versjoner av samlingen er lastet inn i samme programdomene. Fremtidige versjoner kan vanligvis bryte kompatibiliteten. Men bryte endringer er utført, den gamle versjonen er ikke endret, men finnes ved siden av den nye versjonen. Kjøring av side-ved-side er forventet måte å kontrollere eksisterende klienter fungere bryte endringer er utført. Hvis du vil ha mer informasjon, se den [Side-ved-Side kompatibilitet](#SideBySide) senere i dette emnet.      -Stabil versjon-versjonskompatibiliteten (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName>).</xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName> Fremtidige versjoner kan ikke dele klienten og side-ved-side-kjøring må ikke være nødvendig. Hvis klienten er utilsiktet brutt, kan det være mulig å bruke kjøring av side ved side til å løse problemet. Hvis du vil ha mer informasjon, se den [stabil kompatibilitet](#Standard) delen.      – Exchange-versjonen til versjonskompatibiliteten (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName>).</xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName> Ekstraordinær er tas slik at fremtidige versjoner ikke ødelegger klienten. Klienten skal bruke bare disse typene i signaturen for grensesnitt som brukes til kommunikasjon med andre samlinger som er distribuert uavhengig av hverandre. Bare én versjon av disse typene er forventet å være i en gitt programdomenet som betyr at hvis en klient bryter, side-ved-side-kjøring ikke kan løse problemet kompatibilitetsnivå. Hvis du vil ha mer informasjon, se den [Exchange typen kompatibilitet](#Exchange) delen.       Følgende avsnitt beskriver nivåene i garantere med flere detaljer.      <a name=&quot;None&quot;></a>### Ingen kompatibilitet merke en komponent som <xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName>indikerer at leverandøren ikke garanterer kompatibilitet.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName> Klienter bør ikke tar noen avhengigheter for grensesnittene. Dette nivået kompatibilitetsnivået er nyttig for typer som experimental eller utsettes offentlig, men er bare beregnet for komponenter som alltid er oppdatert om gangen. <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>angir eksplisitt denne komponenten ikke bør brukes av eksterne komponenter.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions>      <a name=&quot;SideBySide&quot;></a>### Side-ved-Side kompatibilitet merke en komponent som <xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName>indikerer at komponenten er testet for å arbeide når flere versjoner av samlingen er lastet inn i samme programdomene.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName> Brytes endringer tillates så lenge det settes til samlingen med høyere versjonsnummer. Komponenter som er bundet til en gammel versjon av samlingen forventes å fortsette å binde til den gamle versjonen, og andre komponenter kan binde til den nye versjonen. Det er også mulig å oppdatere en komponent som er deklarert skal <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>ved å endre den gamle versjonen ødeleggende måte.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions>      <a name=&quot;Standard&quot;></a>### Stabil kompatibilitet merke en type som <xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName>indikerer at typen skal forbli stabil på tvers av versjoner.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName> Men kan det også være mulig for side ved side-versjoner av en stabil type finnes i samme programdomene.       Stabil typer Vedlikehold en høy binære kompatibilitet stolpe. Derfor bør leverandører unngå endringer bryte stabil typer. Følgende typer endringer godtas: – å legge til private forekomstfelt til eller fjerne felt fra en type, så dette ikke brytes serialiseringsformatet.      -Hvis du endrer en serialiserbar type som ikke til en serialiserbar type. (Imidlertid en serialiserbar type kan ikke endres til en ikke-serialiserbare.)      -Forårsaket nye, avledet mer unntak fra en annen metode.      -Forbedre ytelsen til en annen metode.      -Endre området for returverdier, så lenge endringen ikke påvirker fleste klienter får negativ.      -Reparerer Hvis business begrunnelsen er høyt og antallet negativt berørte klienter har lite alvorlig feil.       Fordi nye versjoner av stabil komponentene ikke er forventet å bryte eksisterende klienter, vanligvis nødvendig bare én versjon av en stabil komponent i et programdomene. Dette er imidlertid ikke et krav fordi stabil typer ikke brukes som velkjente exchange-typer som alle komponentene enige om. Hvis en ny versjon av en stabil komponent ved en feiltakelse ødelegger noen komponent og andre komponenter, må den nye versjonen, kan det derfor være mulig å løse problemet ved å laste inn både gammel og ny komponenten.       <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>gir et sterkere versjon kompatibilitet garantere enn <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions></xref:System.Runtime.Versioning.ComponentGuaranteesOptions> Det er en vanlig standard for flere versjon komponenter.       <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>kan kombineres med <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>, som angir at komponenten ødelegger ikke kompatibilitet, men testes for å arbeide når mer enn én versjon er lastet inn i en gitt programdomenet.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions></xref:System.Runtime.Versioning.ComponentGuaranteesOptions>       Når en type eller metode er merket som <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>, den kan oppgraderes til <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions> </xref:System.Runtime.Versioning.ComponentGuaranteesOptions> Men kan det ikke degraderes til <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions>      <a name=&quot;Exchange&quot;></a>### Exchange typen kompatibilitet merke en type som <xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName>gir et sterkere versjon kompatibilitet garantere enn <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>, og bør brukes til mest stabil alle typer.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions> </xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName> Disse typene skal brukes for interchange mellom uavhengig innebygde komponenter på tvers av alle komponent grenser tidspunkt både (alle versjoner av CLR) eller en versjon av en komponent eller et program og mellomrom (tvers-prosessen tvers-CLR i én gang, tvers programdomenet én CLR). Hvis bryte er endret til en exchange-type, er det ikke mulig å løse problemet ved å laste inn flere versjoner av typen.       Exchange typer kan bare endres hvis et problem er svært alvorlig (for eksempel et alvorlig sikkerhetsproblem) eller sannsynligheten for knusing lite (det vil si hvis virkemåten er allerede ødelagt tilfeldig slik at koden ikke kan ha sannsynligvis vil utført en avhengighet i). Du kan gjøre følgende typer endringer i en exchange-type:-Legg til arvingen for nye grensesnittet definisjoner.      -Legg til nye private metoder som implementerer metoder for nylig arvede grensesnittet definisjoner.      -Legg til nye statiske felt.      -Legg til nye statiske metoder.      -Legg til nye ikke virtuelle Forekomstmetoder.       Følgende regnes brytes endringer og er ikke tillatt for primitive typer:-endrer serialiseringsformat. Serialisering av versjon feiltoleranseindeks er obligatorisk.      -Legge til eller fjerne private forekomstfelt. Dette sikkerhetsrisikoer endrer serialiseringsformat av typen og dele Klientkoden som bruker gjenspeiling.      -Endrer serialiserbarhet av en type. En serialiserbar type som ikke kan ikke gjøres serialiserbare, og omvendt.      -At det oppstår forskjellige unntak fra en annen metode.      -Endre området for en metode returverdier, med mindre medlemsdefinisjonen hever denne muligheten og angir tydelig hvordan klienter skal håndtere ukjente verdier.      -Reparerer de fleste feilene. Forbrukere av typen er avhengige av den eksisterende virkemåten.       Etter en komponent er typen eller medlemmet merket med <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>garantere at den ikke endres til enten <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>eller <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions> </xref:System.Runtime.Versioning.ComponentGuaranteesOptions> </xref:System.Runtime.Versioning.ComponentGuaranteesOptions>       Vanligvis exchange typer er basistypene (eksempel <xref:System.Int32>og <xref:System.String>i .NET Framework) og grensesnitt (eksempel <xref:System.Collections.Generic.IList%601>, <xref:System.Collections.Generic.IEnumerable%601>, og <xref:System.IComparable%601>) som brukes ofte i offentlige grensesnitt.</xref:System.IComparable%601> </xref:System.Collections.Generic.IEnumerable%601> </xref:System.Collections.Generic.IList%601> </xref:System.String> </xref:System.Int32>       Exchange-typer kan offentlig utsette bare andre typer som også er merket med <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>kompatibilitetsnivået.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions> I tillegg kan exchange avhenger virkemåten for Windows-API-er som er utsatt for å endre.      ## Komponenten garantier: Sammendrag følgende tabell angir hvordan en komponent egenskaper og bruk påvirker den kompatibilitet garantere.      | Komponenten egenskaper | Exchange | Stabil | Side-ved-Side | Ingen |   |-------------------------------|--------------|------------|--------------------|----------|   | Kan brukes i grensesnitt mellom komponenter som versjon uavhengig. | Y | N | N | N |   | Kan brukes (privat) av en samling som versjoner uavhengig. | Y | Y | Y | N |   | Kan ha flere versjoner i et enkelt programdomenet. | N | Y | Y | Y |   | Kan endre bryte | N | N | Y | Y |   | Testes foreta noen flere versjoner av samlingen kan ikke lastes inn sammen. | N | N | Y | N |   | Kan endre bryte i stedet. | N | N | N | Y |   | Kan gjøre svært sikker hardt Vedlikehold endringer i stedet. | Y | Y | Y | Y |      ## At attributtet du kan bruke ComponentGuaranteesAttribute en samling, en type eller et medlem av typen. Programmet er hierarkisk. Det vil si som standard i garantere som er definert av den <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A>for attributtet på nivået samlingen definerer garantere alle typer i samlingen og alle medlemmer i disse typene.</xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> På samme måte hvis garantere brukes til typen, gjelder som standard det også for hvert medlem av typen.       Denne arvede garantere kan overstyres ved å bruke ComponentGuaranteesAttribute individuelle typer, og Skriv inn medlemmer. Garantier som overstyrer standard kan imidlertid bare svekke garantere; de kan styrke den. For eksempel hvis en samling som er merket med den <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>garantere at typer og medlemmer har ikke garantere for kompatibilitet, og andre garantere som brukes på typer eller medlemmer i samlingen ignoreres.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions>      ## Testing av garantere den <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A>egenskapen returnerer et medlem av den <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>opplisting som er merket med den <xref:System.FlagsAttribute>attributtet.</xref:System.FlagsAttribute> </xref:System.Runtime.Versioning.ComponentGuaranteesOptions> </xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> Dette betyr at du skal teste flagget som du er interessert i ved å merke plassering potensielt ukjent flagg. For eksempel tester følgende eksempel om en type som er merket som <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions>       [!code-cs[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1](~/add/codesnippet/csharp/t-system.runtime.version_1.cs)][!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1](~/add/codesnippet/visualbasic/t-system.runtime.version_1.vb) ] følgende eksempel tester om en type som er merket som <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>eller <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions> </xref:System.Runtime.Versioning.ComponentGuaranteesOptions>         [!code-cs[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2](~/add/codesnippet/csharp/t-system.runtime.version_2.cs)][!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2](~/add/codesnippet/visualbasic/t-system.runtime.version_2.vb) ] følgende eksempel tester fordeler typen er merket som <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>(det vil si ingen <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>eller <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>).</xref:System.Runtime.Versioning.ComponentGuaranteesOptions> </xref:System.Runtime.Versioning.ComponentGuaranteesOptions> </xref:System.Runtime.Versioning.ComponentGuaranteesOptions>         [!code-cs[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3](~/add/codesnippet/csharp/t-system.runtime.version_3.cs)][!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3  ](~/add/codesnippet/visualbasic/t-system.runtime.version_3.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Module | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Event | System.AttributeTargets.Interface | System.AttributeTargets.Delegate, AllowMultiple=false, Inherited=false)]

      public sealed class ComponentGuaranteesAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)
  id: '#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)'
  parent: System.Runtime.Versioning.ComponentGuaranteesAttribute
  langs:
  - csharp
  name: ComponentGuaranteesAttribute(ComponentGuaranteesOptions)
  nameWithType: ComponentGuaranteesAttribute.ComponentGuaranteesAttribute(ComponentGuaranteesOptions)
  fullName: System.Runtime.Versioning.ComponentGuaranteesAttribute.ComponentGuaranteesAttribute(ComponentGuaranteesOptions)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Versioning
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Runtime.Versioning.ComponentGuaranteesAttribute&quot;> </xref> klassen med en verdi som angir et bibliotek, type eller medlemmets garanteres kompatibilitetsnivået på tvers av flere versjoner."
  remarks: "Når den <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute>klassen startes, verdien for den `guarantees` parameteren er tilordnet til den <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A>egenskapen.</xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> </xref:System.Runtime.Versioning.ComponentGuaranteesAttribute>"
  syntax:
    content: public ComponentGuaranteesAttribute (System.Runtime.Versioning.ComponentGuaranteesOptions guarantees);
    parameters:
    - id: guarantees
      type: System.Runtime.Versioning.ComponentGuaranteesOptions
      description: "En av verdiene for enumeration som angir gjeldende kompatibilitetsnivået garanteres på tvers av flere versjoner."
  overload: System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees
  id: Guarantees
  parent: System.Runtime.Versioning.ComponentGuaranteesAttribute
  langs:
  - csharp
  name: Guarantees
  nameWithType: ComponentGuaranteesAttribute.Guarantees
  fullName: System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Versioning
  summary: "Henter en verdi som angir den garanterer kompatibilitetsnivået for biblioteket, type eller typemedlemmet som går over flere versjoner."
  remarks: "Verdien for egenskapen garantier samsvarer med den `guarantees` -parameteren for den <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.%23ctor%2A>konstruktør.</xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.%23ctor%2A>"
  syntax:
    content: public System.Runtime.Versioning.ComponentGuaranteesOptions Guarantees { get; }
    return:
      type: System.Runtime.Versioning.ComponentGuaranteesOptions
      description: "En av verdiene for enumeration som angir gjeldende kompatibilitetsnivået garanteres på tvers av flere versjoner."
  overload: System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)
  parent: System.Runtime.Versioning.ComponentGuaranteesAttribute
  isExternal: false
  name: ComponentGuaranteesAttribute(ComponentGuaranteesOptions)
  nameWithType: ComponentGuaranteesAttribute.ComponentGuaranteesAttribute(ComponentGuaranteesOptions)
  fullName: System.Runtime.Versioning.ComponentGuaranteesAttribute.ComponentGuaranteesAttribute(ComponentGuaranteesOptions)
- uid: System.Runtime.Versioning.ComponentGuaranteesOptions
  parent: System.Runtime.Versioning
  isExternal: false
  name: ComponentGuaranteesOptions
  nameWithType: ComponentGuaranteesOptions
  fullName: System.Runtime.Versioning.ComponentGuaranteesOptions
- uid: System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees
  parent: System.Runtime.Versioning.ComponentGuaranteesAttribute
  isExternal: false
  name: Guarantees
  nameWithType: ComponentGuaranteesAttribute.Guarantees
  fullName: System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees
- uid: System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor*
  parent: System.Runtime.Versioning.ComponentGuaranteesAttribute
  isExternal: false
  name: ComponentGuaranteesAttribute
  nameWithType: ComponentGuaranteesAttribute.ComponentGuaranteesAttribute
- uid: System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees*
  parent: System.Runtime.Versioning.ComponentGuaranteesAttribute
  isExternal: false
  name: Guarantees
  nameWithType: ComponentGuaranteesAttribute.Guarantees
