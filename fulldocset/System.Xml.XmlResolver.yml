### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlResolver
  id: XmlResolver
  children:
  - System.Xml.XmlResolver.#ctor
  - System.Xml.XmlResolver.Credentials
  - System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)
  - System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  - System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)
  - System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
  type: Class
  summary: "Løser eksterne XML-ressurser navnet med en URI Uniform Resource Identifier ()."
  remarks: "Typen XmlResolver brukes til å løse eksterne XML-ressurser, for eksempel enheter, dokumentet typedefinisjoner (DTDer) eller XML-skjemaer. Det er også brukes til å behandle inkluderer, og Importer elementene som finnes i omfattende stilarket XSL (Language) stilark eller XML-skjema definition language (XSD) skjemaer.       XmlResolver behandler alle aspekter ved forhandling tilkoblingen til ressurser, inkludert behandler sikkerhetsinformasjonen, åpne tilkobling til datakilden, og returnerer ressursen i form av en dataflyt eller annen objekttype. Objektet som kaller XmlResolver har oppgaven tolke dataflyten.       Den <xref:System.Xml>navneområdet inneholder to konkrete implementeringer av klassen XmlResolver:- <xref:System.Xml.XmlUrlResolver>er Standardløsningsprogrammet for alle klasser i den <xref:System.Xml>navneområde.</xref:System.Xml> </xref:System.Xml.XmlUrlResolver> </xref:System.Xml> Den støtter den `file://` og `http://` protokoller og forespørsler fra <xref:System.Net.WebRequest?displayProperty=fullName>klasse.</xref:System.Net.WebRequest?displayProperty=fullName> Eksempler for å utvide klassen for å forbedre ytelsen i <xref:System.Xml.XmlUrlResolver>referansesiden.</xref:System.Xml.XmlUrlResolver>      - <xref:System.Xml.XmlSecureResolver>bidrar til å sikre et annet objekt for XmlResolver ved wrapping objekt-objektet og begrense som den har tilgang til ressurser.</xref:System.Xml.XmlSecureResolver> For eksempel den <xref:System.Xml.XmlSecureResolver>kan forhindre tilgang til bestemte webområder eller soner.</xref:System.Xml.XmlSecureResolver>       Du kan opprette og angi din egen Løsningsprogrammet. Hvis du ikke angir et Løsningsprogram, leseren bruker standard <xref:System.Xml.XmlUrlResolver>med ingen legitimasjonsbeskrivelse.</xref:System.Xml.XmlUrlResolver>       Du angir XmlResolver skal brukes ved å angi den <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName>egenskapen og sende det <xref:System.Xml.XmlReaderSettings>objekt i <xref:System.Xml.XmlReader.Create%2A>metode.</xref:System.Xml.XmlReader.Create%2A> </xref:System.Xml.XmlReaderSettings> </xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName>       Hvis ressursen er lagret på et system som krever godkjenning, kan du bruke den <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName>til å angi legitimasjonen som er nødvendig.</xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName>      ## Oppgir autentiseringsinformasjonen kanskje filen som inneholder XML-dataene for å lese har en policy for begrenset tilgang. Hvis godkjenning kreves for å få tilgang til en nettverksressurs, kan du bruke den <xref:System.Xml.XmlResolver.Credentials%2A>til å angi legitimasjonen som er nødvendig.</xref:System.Xml.XmlResolver.Credentials%2A> Hvis den <xref:System.Xml.XmlResolver.Credentials%2A>egenskapen er ikke angitt, legitimasjon er satt til `null`.</xref:System.Xml.XmlResolver.Credentials%2A>       For eksempel anta at legitimasjonen er nødvendig når du ber om data fra weben forbindelse med godkjenning. Med mindre virtuell webkatalog tillater anonym tilgang, må du angi den <xref:System.Xml.XmlResolver.Credentials%2A>til å angi legitimasjon.</xref:System.Xml.XmlResolver.Credentials%2A> Følgende eksempel oppretter en <xref:System.Xml.XmlReader>objekt som bruker en <xref:System.Xml.XmlUrlResolver>med standardlegitimasjon tilgang til området http://localhost/bookstore/inventory.xml.</xref:System.Xml.XmlUrlResolver> </xref:System.Xml.XmlReader>       [!code-cpp[XmlReaderSettings.cctor#2](~/add/codesnippet/cpp/t-system.xml.xmlresolver_1.cpp)][!code-cs[XmlReaderSettings.cctor#2](~/add/codesnippet/csharp/t-system.xml.xmlresolver_1.cs)][!code-vb[XmlReaderSettings.cctor#2](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_1.vb) ] du kan angi annen legitimasjon for forskjellige URIer og Legg dem til en hurtigbuffer.     Denne legitimasjonen brukes til å kontrollere godkjenning for forskjellige URIer uavhengig av den opprinnelige kilden for XML. Eksemplet nedenfor viser hvordan du legger til en hurtigbuffer legitimasjon.       [!code-vb[XslCompiledTransform.Load#11](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_2.vb)][!code-cs[XslCompiledTransform.Load#11](~/add/codesnippet/csharp/t-system.xml.xmlresolver_2.cs) ] ## sikkerhetshensyn Vurder følgende elementer når du arbeider med XmlResolver-klassen.        -XmlResolver objekter kan inneholder sensitiv informasjon, for eksempel brukerlegitimasjonen. Du bør være forsiktig når hurtigbufring XmlResolver objekter og kan ikke sende XmlResolver-objekt til et uklarert komponenten.      -Hvis du utformer klasseegenskap som bruker klassen XmlResolver, må egenskapen defineres som en skrivebeskyttet egenskap. Egenskapen kan brukes til å angi XmlResolver å bruke, men den kan ikke brukes til å returnere et XmlResolver-objekt.      -Hvis programmet godtar XmlResolver objekter fra uklarerte kode, kan du anta at URIEN ble sendt til den <xref:System.Xml.XmlResolver.GetEntity%2A>metoden skal være den samme som ble returnert av den <xref:System.Xml.XmlResolver.ResolveUri%2A>metoden.</xref:System.Xml.XmlResolver.ResolveUri%2A> </xref:System.Xml.XmlResolver.GetEntity%2A> Klasser som er avledet fra klassen XmlResolver kan overstyre den <xref:System.Xml.XmlResolver.GetEntity%2A>metoden og Returner data som er forskjellig fra det fantes i den opprinnelige URIEN.</xref:System.Xml.XmlResolver.GetEntity%2A>      -Programmet kan redusere minne avslått for tjenesten trusler til den <xref:System.Xml.XmlResolver.GetEntity%2A>metoden ved å implementere et <xref:System.Runtime.InteropServices.ComTypes.IStream>som begrenser antall byte som leses.</xref:System.Runtime.InteropServices.ComTypes.IStream> </xref:System.Xml.XmlResolver.GetEntity%2A> Dette bidrar til å beskytte mot situasjoner der skadelig kode prøver å sende en uendelig dataflyten for byte som den <xref:System.Xml.XmlResolver.GetEntity%2A>metoden.</xref:System.Xml.XmlResolver.GetEntity%2A>"
  example:
  - "The following example creates an <xref:System.Xml.XmlUrlResolver> with default credentials. A <xref:System.Xml.XmlReader> is used to read and display the resulting data stream.  \n  \n [!code-cs[XmlResolver_ex#1](~/add/codesnippet/csharp/t-system.xml.xmlresolver_3.cs)]\n [!code-vb[XmlResolver_ex#1](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_3.vb)]"
  syntax:
    content: public abstract class XmlResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.#ctor
  id: '#ctor'
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: XmlResolver()
  nameWithType: XmlResolver.XmlResolver()
  fullName: System.Xml.XmlResolver.XmlResolver()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> klasse."
  remarks: "Denne konstruktøren kalles av utledede klassen brukes til å initialisere tilstand i denne typen."
  syntax:
    content: protected XmlResolver ();
    parameters: []
  overload: System.Xml.XmlResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.Credentials
  id: Credentials
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: Credentials
  nameWithType: XmlResolver.Credentials
  fullName: System.Xml.XmlResolver.Credentials
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Når overstyrt i en avledet klasse, angir du legitimasjonen som brukes til å godkjenne webforespørsler."
  remarks: "Hvis den virtuelle mappen ikke krever godkjenning, har ikke denne egenskapen må være angitt. Ellers må legitimasjonen for brukeren angis.       Følgende C# kode angir legitimasjonen i <xref:System.Xml.XmlResolver>objektet.</xref:System.Xml.XmlResolver>      ```   NetworkCredential nc = new NetWorkCredential(UserName,SecurelyStoredPassword,Domain);   XmlUrlResolver resolver = new XmlUrlResolver();   resolver.Credentials = nc;   ```Du kan knytte annen legitimasjon til annen URIer og Legg dem til en hurtigbuffer. Du kan deretter bruke legitimasjonen til å kontrollere godkjenning for forskjellige URIer uavhengig av den opprinnelige kilden for XML.      ```   NetworkCredential myCred = new NetworkCredential(UserName,SecurelyStoredPassword,Domain);    CredentialCache myCache = new CredentialCache();    myCache.Add(new Uri(&quot;http://www.contoso.com/&quot;), &quot;Basic&quot;, myCred);    myCache.Add(new Uri(&quot;http://app.contoso.com/&quot;), &quot;Basic&quot;, myCred);   XmlUrlResolver resolver = new XmlUrlResolver();   resolver.Credentials = myCache;   ```"
  example:
  - See <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName> for an example that uses this property.
  syntax:
    content: public virtual System.Net.ICredentials Credentials { set; }
    return:
      type: System.Net.ICredentials
      description: "Legitimasjonen som skal brukes til å godkjenne webforespørsler. Hvis denne egenskapen ikke er angitt, bruker du verdien på <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; som er den <xref uid=&quot;langword_csharp_XmlResolver&quot; name=&quot;XmlResolver&quot; href=&quot;&quot;> </xref> har ingen brukerlegitimasjonen."
  overload: System.Xml.XmlResolver.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)
  id: GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntity(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Når overstyrt i en avledet klasse, tilordner en URI-adresse til et objekt som inneholder den faktiske ressursen."
  remarks: "Denne metoden brukes når oppkalleren ønsker å tilordne en gitt URI i objektet som inneholder den faktiske ressursen URIEN representerer. Objektet som ble returnert, er negotiable; implementeringen må alltid støtter imidlertid <xref:System.IO.Stream?displayProperty=fullName>.</xref:System.IO.Stream?displayProperty=fullName>       Hvis du vil ha asynkrone versjon av denne metoden, kan du se <xref:System.Xml.XmlResolver.GetEntityAsync%2A>.</xref:System.Xml.XmlResolver.GetEntityAsync%2A>      > [!IMPORTANT] > Programmet, kan begrense minne avslått for tjenesten trusler til metoden GetEntity ved å implementere et <xref:System.Runtime.InteropServices.ComTypes.IStream>som begrenser antall byte som leses.</xref:System.Runtime.InteropServices.ComTypes.IStream> Dette bidrar til å beskytte mot situasjoner der skadelig kode prøver å sende en uendelig dataflyten for byte til GetEntity-metoden."
  example:
  - See <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> for an example using this method.
  syntax:
    content: public abstract object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "URIEN som er returnert fra <xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "For øyeblikket brukt ikke."
    - id: ofObjectToReturn
      type: System.Type
      description: "Objekttypen som skal returneres. Den gjeldende versjonen returnerer bare System.IO.Stream objekter."
    return:
      type: System.Object
      description: "Et objekt for dataflyten eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis en annen type enn dataflyten er angitt."
  overload: System.Xml.XmlResolver.GetEntity*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>ofObjectToReturn</code>er ikke en <xref uid=&quot;langword_csharp_Stream&quot; name=&quot;Stream&quot; href=&quot;&quot;> </xref> type."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "Den angitte URIEN er ikke en absolutt URI."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>absoluteUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Det er en kjøretidsfeil (for eksempel en avbrutt servertilkobling)."
  platform:
  - net462
- uid: System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  id: GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntityAsync(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Asynkront tilordner en URI-adresse til et objekt som inneholder den faktiske ressursen."
  remarks: "Dette er den asynkrone versjonen av <xref:System.Xml.XmlResolver.GetEntity%2A>, med de samme funksjonene.</xref:System.Xml.XmlResolver.GetEntity%2A> Hvis du vil bruke denne metoden, må du angi den <xref:System.Xml.XmlReaderSettings.Async%2A>flagget som `true`.</xref:System.Xml.XmlReaderSettings.Async%2A>"
  syntax:
    content: public virtual System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "URIEN som er returnert fra <xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "For øyeblikket brukt ikke."
    - id: ofObjectToReturn
      type: System.Type
      description: "Objekttypen som skal returneres. Den gjeldende versjonen returnerer bare <xref:System.IO.Stream>objekter.</xref:System.IO.Stream>"
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "Et objekt for dataflyten eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis en annen type enn dataflyten er angitt."
  overload: System.Xml.XmlResolver.GetEntityAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)
  id: ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: ResolveUri(Uri,String)
  nameWithType: XmlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlResolver.ResolveUri(Uri,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Når overstyrt i en avledet klasse, løser den absolutte URIEN fra basistypen og den relative URIer."
  remarks: "Den absolutte URIEN kan brukes som basis-URIEN for etterfølgende forespørsler for enheter som er relative til denne URIEN."
  example:
  - See <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> for an example that uses this method.
  syntax:
    content: public virtual Uri ResolveUri (Uri baseUri, string relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "Basis-URIEN er brukt til å løse den relative URIEN."
    - id: relativeUri
      type: System.String
      description: "URIEN ikke løse. URIEN kan være en absolutt eller relativ. Hvis absolutt denne effektivt erstatter det `baseUri` verdi. Hvis relative, den kombinerer med den `baseUri` foreta en absolutt URI."
    return:
      type: System.Uri
      description: "Den absolutte URIEN eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> hvis den relative URIEN kan ikke løses."
  overload: System.Xml.XmlResolver.ResolveUri*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>relativeUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  id: SupportsType(System.Uri,System.Type)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: SupportsType(Uri,Type)
  nameWithType: XmlResolver.SupportsType(Uri,Type)
  fullName: System.Xml.XmlResolver.SupportsType(Uri,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Aktiverer Løsningsprogrammet å returnere typer enn &lt;xref:System.IO.Stream?displayProperty=fullName&gt;."
  syntax:
    content: public virtual bool SupportsType (Uri absoluteUri, Type type);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "URIEN."
    - id: type
      type: System.Type
      description: "Typen som skal returneres."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den <code> type </code> er støttet; ellers, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlResolver.SupportsType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.XmlResolver.#ctor
  parent: System.Xml.XmlResolver
  isExternal: false
  name: XmlResolver()
  nameWithType: XmlResolver.XmlResolver()
  fullName: System.Xml.XmlResolver.XmlResolver()
- uid: System.Xml.XmlResolver.Credentials
  parent: System.Xml.XmlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlResolver.Credentials
  fullName: System.Xml.XmlResolver.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntity(Uri,String,Type)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntityAsync(Uri,String,Type)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: ResolveUri(Uri,String)
  nameWithType: XmlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlResolver.ResolveUri(Uri,String)
- uid: System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: SupportsType(Uri,Type)
  nameWithType: XmlResolver.SupportsType(Uri,Type)
  fullName: System.Xml.XmlResolver.SupportsType(Uri,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlResolver.#ctor*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver.XmlResolver
- uid: System.Xml.XmlResolver.Credentials*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlResolver.Credentials
- uid: System.Xml.XmlResolver.GetEntity*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntity
  nameWithType: XmlResolver.GetEntity
- uid: System.Xml.XmlResolver.GetEntityAsync*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntityAsync
  nameWithType: XmlResolver.GetEntityAsync
- uid: System.Xml.XmlResolver.ResolveUri*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: ResolveUri
  nameWithType: XmlResolver.ResolveUri
- uid: System.Xml.XmlResolver.SupportsType*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: SupportsType
  nameWithType: XmlResolver.SupportsType
