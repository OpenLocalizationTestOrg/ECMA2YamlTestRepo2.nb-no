### YamlMime:ManagedReference
items:
- uid: System.Management.ManagementObjectCollection
  id: ManagementObjectCollection
  children:
  - System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)
  - System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)
  - System.Management.ManagementObjectCollection.Count
  - System.Management.ManagementObjectCollection.Dispose
  - System.Management.ManagementObjectCollection.Finalize
  - System.Management.ManagementObjectCollection.GetEnumerator
  - System.Management.ManagementObjectCollection.IsSynchronized
  - System.Management.ManagementObjectCollection.SyncRoot
  - System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: ManagementObjectCollection
  nameWithType: ManagementObjectCollection
  fullName: System.Management.ManagementObjectCollection
  type: Class
  summary: "Representerer forskjellige samlinger av management objects hentes med WMI. Objekter i denne samlingen er av <xref href=&quot;System.Management.ManagementBaseObject&quot;> </xref>-avledede typer, inkludert <xref href=&quot;System.Management.ManagementObject&quot;> </xref> og <xref href=&quot;System.Management.ManagementClass&quot;> </xref>. Samlingen kan være et resultat av en WMI-spørring utføres via en <xref href=&quot;System.Management.ManagementObjectSearcher&quot;> </xref>, eller en opplisting av management objects av angitt type hentet via en <xref href=&quot;System.Management.ManagementClass&quot;> </xref> som representerer denne typen. I tillegg dette kan være en samling av management objects relatert på en angitt måte til et bestemt management-objekt - i dette tilfellet samlingen vil hentes via en metode som <xref href=&quot;System.Management.ManagementObject.GetRelated&quot;> </xref>. Samlingen kan gikk ved hjelp av den <xref:System.Management.ManagementObjectCollection.ManagementObjectEnumerator>og objekter i den kan kontrolleres eller endres for ulike administrasjonsoppgaver.</xref:System.Management.ManagementObjectCollection.ManagementObjectEnumerator>"
  syntax:
    content: 'public class ManagementObjectCollection : IDisposable, System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: ManagementObjectCollection.CopyTo(Array,Int32)
  fullName: System.Management.ManagementObjectCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Overfører samlingen til en matrise."
  remarks: "##.NET framework sikkerhet fullstendig klarering av direkte oppkaller. Dette medlemmet kan ikke brukes av delvis klarert kode. Hvis du vil ha mer informasjon, se [ved hjelp av biblioteker fra delvis klarert kode](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Tabelldata skal kopieres til."
    - id: index
      type: System.Int32
      description: "Indeksen til å starte fra."
  overload: System.Management.ManagementObjectCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)
  id: CopyTo(System.Management.ManagementBaseObject[],System.Int32)
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: CopyTo(ManagementBaseObject[],Int32)
  nameWithType: ManagementObjectCollection.CopyTo(ManagementBaseObject[],Int32)
  fullName: System.Management.ManagementObjectCollection.CopyTo(ManagementBaseObject[],Int32)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Kopierer elementer i samlingen en <xref href=&quot;System.Management.ManagementBaseObject&quot;> </xref> matrise."
  remarks: "##.NET framework sikkerhet fullstendig klarering av direkte oppkaller. Dette medlemmet kan ikke brukes av delvis klarert kode. Hvis du vil ha mer informasjon, se [ved hjelp av biblioteker fra delvis klarert kode](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void CopyTo (System.Management.ManagementBaseObject[] objectCollection, int index);
    parameters:
    - id: objectCollection
      type: System.Management.ManagementBaseObject[]
      description: "Målmatrisen."
    - id: index
      type: System.Int32
      description: "Indeksen til å starte fra."
  overload: System.Management.ManagementObjectCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.Count
  id: Count
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: Count
  nameWithType: ManagementObjectCollection.Count
  fullName: System.Management.ManagementObjectCollection.Count
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Henter en verdi som angir antall objekter i samlingen."
  remarks: "Denne egenskapen er svært kostbar – den krever at alle medlemmer i samlingen brukes.      ## Egenskapsverdien antall objekter i samlingen.      ## .NET framework sikkerhet fullstendig klarering av direkte oppkaller. Dette medlemmet kan ikke brukes av delvis klarert kode. Hvis du vil ha mer informasjon, se [ved hjelp av biblioteker fra delvis klarert kode](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Returnerer en <xref:System.Int32>verdi som angir antall objekter i samlingen.</xref:System.Int32>"
  overload: System.Management.ManagementObjectCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.Dispose
  id: Dispose
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: Dispose()
  nameWithType: ManagementObjectCollection.Dispose()
  fullName: System.Management.ManagementObjectCollection.Dispose()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Frigir ressursene som er knyttet til dette objektet. Når denne metoden er kalt, et forsøk på å bruke dette objektet, fører det <xref:System.ObjectDisposedException>som et.</xref:System.ObjectDisposedException>"
  remarks: "##.NET framework sikkerhet fullstendig klarering av direkte oppkaller. Dette medlemmet kan ikke brukes av delvis klarert kode. Hvis du vil ha mer informasjon, se [ved hjelp av biblioteker fra delvis klarert kode](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Management.ManagementObjectCollection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.Finalize
  id: Finalize
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: Finalize()
  nameWithType: ManagementObjectCollection.Finalize()
  fullName: System.Management.ManagementObjectCollection.Finalize()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Disposes for objektet holder ressurser. Dette er ødeleggeren for objektet. Sluttbehandlere uttrykkes med ødelegger syntaksen."
  remarks: "##.NET framework sikkerhet fullstendig klarering av direkte oppkaller. Dette medlemmet kan ikke brukes av delvis klarert kode. Hvis du vil ha mer informasjon, se [ved hjelp av biblioteker fra delvis klarert kode](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: ~ManagementObjectCollection ();
    parameters: []
  overload: System.Management.ManagementObjectCollection.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ManagementObjectCollection.GetEnumerator()
  fullName: System.Management.ManagementObjectCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Returnerer enumeratoren for samlingen."
  remarks: "Du kan bare gå (som i en Visual Basic .NET `For Each` setningen eller en C# `For` setningen) gjennom dataenumerator radsett bare én gang. Minnet som inneholder forekomstene er utgitt av WMI slik at enumeratoren ikke kan være spolt tilbake. Derfor den <xref:System.Management.ManagementObjectCollection.Count%2A>metoden kan ikke brukes fordi det krever spoler tilbake enumeratoren.</xref:System.Management.ManagementObjectCollection.Count%2A>       Bare fremover enumeratorene er vanligvis mye raskere og bruker mindre minne enn konvensjonelt enumeratorene, men de tillater ikke kall til <xref:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Reset%2A>.</xref:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Reset%2A>       Hvis en opplisting rewindable, beholdes objektene i samlingen tilgjengelig for flere opplistinger.      ## .NET framework sikkerhet fullstendig klarering av direkte oppkaller. Dette medlemmet kan ikke brukes av delvis klarert kode. Hvis du vil ha mer informasjon, se [ved hjelp av biblioteker fra delvis klarert kode](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Management.ManagementObjectCollection.ManagementObjectEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Management.ManagementObjectCollection.ManagementObjectEnumerator
      description: "En <xref:System.Collections.IEnumerator>som kan brukes til å gå gjennom samlingen.</xref:System.Collections.IEnumerator>"
  overload: System.Management.ManagementObjectCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ManagementObjectCollection.IsSynchronized
  fullName: System.Management.ManagementObjectCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Henter en verdi som angir om objektet er synkronisert."
  remarks: "##Egenskapsverdien `true`, hvis objektet er synkronisert, ellers `false`.      ## .NET framework sikkerhet fullstendig klarering av direkte oppkaller. Dette medlemmet kan ikke brukes av delvis klarert kode. Hvis du vil ha mer informasjon, se [ved hjelp av biblioteker fra delvis klarert kode](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Returnerer en <xref:System.Boolean>verdi som angir om objektet er synkronisert.</xref:System.Boolean>"
  overload: System.Management.ManagementObjectCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.SyncRoot
  id: SyncRoot
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ManagementObjectCollection.SyncRoot
  fullName: System.Management.ManagementObjectCollection.SyncRoot
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Henter objektet som skal brukes for synkronisering."
  remarks: "##Egenskapsverdien objektet som skal brukes for synkronisering.      ## .NET framework sikkerhet fullstendig klarering av direkte oppkaller. Dette medlemmet kan ikke brukes av delvis klarert kode. Hvis du vil ha mer informasjon, se [ved hjelp av biblioteker fra delvis klarert kode](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Returnerer en <xref:System.Object>verdi som representerer objektet som skal brukes for synkronisering.</xref:System.Object>"
  overload: System.Management.ManagementObjectCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ManagementObjectCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Management.ManagementObjectCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Returnerer en <xref:System.Collections.IEnumerator>som går gjennom den <xref href=&quot;System.Management.ManagementObjectCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  remarks: "[Visual Basic C#]       Den `foreach` -setningen for språket C# (`for each` i Visual Basic) skjuler av hvor komplekse enumeratorene.  Ved hjelp av derfor `foreach` anbefales, i stedet for direkte manipulering enumeratoren.       Enumeratorene kan brukes til å lese data i samlingen, men de kan ikke brukes til å endre den underliggende samlingen.       I utgangspunktet er enumeratoren plassert før det første elementet i samlingen. <xref:System.Collections.IEnumerator.Reset%2A>henter også enumeratoren tilbake til denne plasseringen.</xref:System.Collections.IEnumerator.Reset%2A> På dette Plasser, kaller <xref:System.Collections.IEnumerator.Current%2A>oppstår det et unntak.</xref:System.Collections.IEnumerator.Current%2A> Du må derfor kalle <xref:System.Collections.IEnumerator.MoveNext%2A>å flytte enumeratoren til det første elementet i samlingen før leser <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>Returnerer det samme objektet før enten <xref:System.Collections.IEnumerator.MoveNext%2A>eller <xref:System.Collections.IEnumerator.Reset%2A>kalles.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>angir <xref:System.Collections.IEnumerator.Current%2A>til neste element.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Hvis <xref:System.Collections.IEnumerator.MoveNext%2A>formidler slutten av samlingen enumeratoren er plassert etter det siste elementet i samlingen og <xref:System.Collections.IEnumerator.MoveNext%2A>returnerer `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Når enumeratoren er på denne plasseringen, etterfølgende kall til <xref:System.Collections.IEnumerator.MoveNext%2A>også returnere `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Hvis siste kall til <xref:System.Collections.IEnumerator.MoveNext%2A>returnerte `false`, kall <xref:System.Collections.IEnumerator.Current%2A>oppstår det et unntak.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Angi <xref:System.Collections.IEnumerator.Current%2A>til det første elementet i samlingen på nytt, kan du kalle <xref:System.Collections.IEnumerator.Reset%2A>etterfulgt av <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A>       En opplisting forblir gyldig så lenge samlingen forblir uendret. Hvis du endrer til samlingen, for eksempel å legge til, endre eller slette elementer, ugyldiggjøres, enumeratoren og neste kall eller <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A>oppstår en <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Hvis samlingen er endret mellom <xref:System.Collections.IEnumerator.MoveNext%2A>og <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>returnerer elementet som det, selv om enumeratoren ugyldiggjøres allerede.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       Enumeratoren har ikke eksklusiv tilgang til samlingen. lister opp i en samling er derfor gjelder ikke en tråd trygt prosedyre. Selv når en samling synkroniseres, kan andre tråder fortsatt endre samlingen, som fører til at enumeratoren til Iverksett et unntak. For å garantere tråd sikkerhetsnivået under opplisting, kan du låse samlingen under hele opplistingen eller opp unntak som er et resultat av endringer foretatt av andre tråder.       Denne metoden er en O(1)-operasjon."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> for the <xref href=&quot;System.Management.ManagementObjectCollection&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: ManagementObjectCollection.CopyTo(Array,Int32)
  fullName: System.Management.ManagementObjectCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: CopyTo(ManagementBaseObject[],Int32)
  nameWithType: ManagementObjectCollection.CopyTo(ManagementBaseObject[],Int32)
  fullName: System.Management.ManagementObjectCollection.CopyTo(ManagementBaseObject[],Int32)
- uid: System.Management.ManagementBaseObject[]
  parent: System.Management
  isExternal: false
  name: ManagementBaseObject
  nameWithType: ManagementBaseObject
  fullName: System.Management.ManagementBaseObject[]
  spec.csharp:
  - uid: System.Management.ManagementBaseObject
    name: ManagementBaseObject
    nameWithType: ManagementBaseObject
    fullName: ManagementBaseObject[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Management.ManagementObjectCollection.Count
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: Count
  nameWithType: ManagementObjectCollection.Count
  fullName: System.Management.ManagementObjectCollection.Count
- uid: System.Management.ManagementObjectCollection.Dispose
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: Dispose()
  nameWithType: ManagementObjectCollection.Dispose()
  fullName: System.Management.ManagementObjectCollection.Dispose()
- uid: System.Management.ManagementObjectCollection.Finalize
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: Finalize()
  nameWithType: ManagementObjectCollection.Finalize()
  fullName: System.Management.ManagementObjectCollection.Finalize()
- uid: System.Management.ManagementObjectCollection.GetEnumerator
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ManagementObjectCollection.GetEnumerator()
  fullName: System.Management.ManagementObjectCollection.GetEnumerator()
- uid: System.Management.ManagementObjectCollection.ManagementObjectEnumerator
  parent: System.Management
  isExternal: false
  name: ManagementObjectCollection+ManagementObjectEnumerator
  nameWithType: ManagementObjectCollection+ManagementObjectEnumerator
  fullName: System.Management.ManagementObjectCollection+ManagementObjectEnumerator
- uid: System.Management.ManagementObjectCollection.IsSynchronized
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ManagementObjectCollection.IsSynchronized
  fullName: System.Management.ManagementObjectCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Management.ManagementObjectCollection.SyncRoot
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ManagementObjectCollection.SyncRoot
  fullName: System.Management.ManagementObjectCollection.SyncRoot
- uid: System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ManagementObjectCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Management.ManagementObjectCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Management.ManagementObjectCollection.CopyTo*
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: CopyTo
  nameWithType: ManagementObjectCollection.CopyTo
- uid: System.Management.ManagementObjectCollection.Count*
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: Count
  nameWithType: ManagementObjectCollection.Count
- uid: System.Management.ManagementObjectCollection.Dispose*
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: Dispose
  nameWithType: ManagementObjectCollection.Dispose
- uid: System.Management.ManagementObjectCollection.Finalize*
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: Finalize
  nameWithType: ManagementObjectCollection.Finalize
- uid: System.Management.ManagementObjectCollection.GetEnumerator*
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ManagementObjectCollection.GetEnumerator
- uid: System.Management.ManagementObjectCollection.IsSynchronized*
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ManagementObjectCollection.IsSynchronized
- uid: System.Management.ManagementObjectCollection.SyncRoot*
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ManagementObjectCollection.SyncRoot
- uid: System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ManagementObjectCollection.System.Collections.IEnumerable.GetEnumerator
