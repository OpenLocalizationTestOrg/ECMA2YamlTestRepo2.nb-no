### YamlMime:ManagedReference
items:
- uid: System.StackOverflowException
  id: StackOverflowException
  children:
  - System.StackOverflowException.#ctor
  - System.StackOverflowException.#ctor(System.String)
  - System.StackOverflowException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: StackOverflowException
  nameWithType: StackOverflowException
  fullName: System.StackOverflowException
  type: Class
  summary: "Unntaket oppstod under kjøring av bunken går ut over fordi den inneholder for mange nestede metodekall. Denne klassen kan ikke arves."
  remarks: "StackOverflowException er registrert for kjøring av bunken overflyt feil, vanligvis hvis det skulle oppstå et svært dype eller ubegrensede rekursjon.       StackOverflowException bruker HRESULT COR_E_STACKOVERFLOW, som har verdien 0x800703E9. Den <xref:System.Reflection.Emit.OpCodes.Localloc>mellomspråk (IL) instruksjon oppstår StackOverflowException.</xref:System.Reflection.Emit.OpCodes.Localloc> En liste med opprinnelige verdier for et StackOverflowException-objekt, kan du se den <xref:System.StackOverflowException.%23ctor%2A>konstruktører.</xref:System.StackOverflowException.%23ctor%2A>      ## Versjonen hensyn i .NET Framework 1.0 og 1.1, kan du faktisk et StackOverflowException objekt (for eksempel for å gjenopprette fra ubegrensede rekursjon). Starter med .NET Framework 2.0, kan du holde deg et StackOverflowException objekt med en `try` / `catch` blokk og tilhørende prosessen avsluttes som standard. Du bør derfor skrive koden for å finne og forhindre stakkoverflyt. For eksempel hvis appen er avhengig av rekursjon, Bruk en teller eller tilstand betingelser avslutte rekursive sløyfen. Følgende eksempel bruker en teller for å sikre at antall rekursive kall til den `Execute` metoden ikke ha flere enn definert av MAX_RECURSIVE_CALLS-konstanten.       [!code-vb[System.StackOverflowException.Class#1](~/add/codesnippet/visualbasic/t-system.stackoverflowex_1.vb)][!code-cs[System.StackOverflowException.Class#1](~/add/codesnippet/csharp/t-system.stackoverflowex_1.cs) ]       >  [!NOTE] > aktiverer den <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute>attributtet en metode som oppstår en StackOverflowException har ingen virkning.</xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute>   Du kan fortsatt håndtere unntak fra brukerkode.       Hvis appen vert common language runtime (CLR), kan det kan du angi at CLR skal laste ut programdomenet der stakk overflyt unntaket forekommer og la tilsvarende prosessen fortsette. Hvis du vil ha mer informasjon, se [ICLRPolicyManager grensesnittet](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class StackOverflowException : SystemException
  inheritance:
  - System.Exception
  - System.SystemException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.StackOverflowException.#ctor
  id: '#ctor'
  parent: System.StackOverflowException
  langs:
  - csharp
  name: StackOverflowException()
  nameWithType: StackOverflowException.StackOverflowException()
  fullName: System.StackOverflowException.StackOverflowException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.StackOverflowException&quot;> </xref> klassen angivelse av <xref:System.Exception.Message*>egenskapen for den nye forekomsten til en system-angitt melding som beskriver feilen, slik som &quot;den forespurte operasjonen førte til stakkoverflyt.&quot;</xref:System.Exception.Message*> Meldingen tar hensyn til den gjeldende kulturen i systemet."
  remarks: "Tabellen nedenfor viser første egenskapsverdiene for en forekomst av <xref:System.StackOverflowException>.</xref:System.StackOverflowException>      | Egenskapen | Verdien |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| `null`.|   | <xref:System.Exception.Message%2A>| Lokaliserte feil melding strengen. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public StackOverflowException ();
    parameters: []
  overload: System.StackOverflowException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.StackOverflowException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.StackOverflowException
  langs:
  - csharp
  name: StackOverflowException(String)
  nameWithType: StackOverflowException.StackOverflowException(String)
  fullName: System.StackOverflowException.StackOverflowException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.StackOverflowException&quot;> </xref> klassen med en angitt feilmelding."
  remarks: "Tabellen nedenfor viser første egenskapsverdiene for en forekomst av <xref:System.StackOverflowException>.</xref:System.StackOverflowException>      | Egenskapen | Verdien |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| En nullreferanse (`Nothing` i Visual Basic). |   | <xref:System.Exception.Message%2A>| Feil melding strengen. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public StackOverflowException (string message);
    parameters:
    - id: message
      type: System.String
      description: "En <xref:System.String>som beskriver problemet.</xref:System.String> Innholdet i meldingen skal være forstått av mennesker. Oppkalleren for denne konstruktøren kreves for å sikre at denne strengen er lokalisert for den gjeldende system-kulturen."
  overload: System.StackOverflowException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.StackOverflowException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.StackOverflowException
  langs:
  - csharp
  name: StackOverflowException(String,Exception)
  nameWithType: StackOverflowException.StackOverflowException(String,Exception)
  fullName: System.StackOverflowException.StackOverflowException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.StackOverflowException&quot;> </xref> klassen med en angitt feilmelding og en referanse til det interne unntaket er årsaken til dette unntaket."
  remarks: "Et unntak som er registrert som en direkte resultatet av et tidligere unntak kan inneholde en referanse til det tidligere unntaket i den <xref:System.Exception.InnerException%2A>egenskapen.</xref:System.Exception.InnerException%2A> Den <xref:System.Exception.InnerException%2A>egenskapen returnerer samme verdi som er sendt til konstruktøren, eller en nullreferanse (`Nothing` i Visual Basic) Hvis den <xref:System.Exception.InnerException%2A>egenskapen leverer ikke internt unntak verdien til konstruktøren.</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       Tabellen nedenfor viser første egenskapsverdiene for en forekomst av <xref:System.StackOverflowException>.</xref:System.StackOverflowException>      | Egenskapen | Verdien |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| Referansen for det indre unntaket. |   | <xref:System.Exception.Message%2A>| Feil melding strengen. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public StackOverflowException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "Feilmelding som forklarer hvorfor unntaket."
    - id: innerException
      type: System.Exception
      description: "Unntaket er årsaken til den gjeldende unntaket. Hvis den `innerException` -parameteren er ikke en nullreferanse (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic), gjeldende unntaket blir opphøyd i en <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> blokken som behandler det interne unntaket."
  overload: System.StackOverflowException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.SystemException
  isExternal: false
  name: System.SystemException
- uid: System.StackOverflowException.#ctor
  parent: System.StackOverflowException
  isExternal: false
  name: StackOverflowException()
  nameWithType: StackOverflowException.StackOverflowException()
  fullName: System.StackOverflowException.StackOverflowException()
- uid: System.StackOverflowException.#ctor(System.String)
  parent: System.StackOverflowException
  isExternal: false
  name: StackOverflowException(String)
  nameWithType: StackOverflowException.StackOverflowException(String)
  fullName: System.StackOverflowException.StackOverflowException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.StackOverflowException.#ctor(System.String,System.Exception)
  parent: System.StackOverflowException
  isExternal: false
  name: StackOverflowException(String,Exception)
  nameWithType: StackOverflowException.StackOverflowException(String,Exception)
  fullName: System.StackOverflowException.StackOverflowException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.StackOverflowException.#ctor*
  parent: System.StackOverflowException
  isExternal: false
  name: StackOverflowException
  nameWithType: StackOverflowException.StackOverflowException
