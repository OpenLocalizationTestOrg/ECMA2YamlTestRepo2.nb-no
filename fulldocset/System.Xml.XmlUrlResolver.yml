### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlUrlResolver
  id: XmlUrlResolver
  children:
  - System.Xml.XmlUrlResolver.#ctor
  - System.Xml.XmlUrlResolver.CachePolicy
  - System.Xml.XmlUrlResolver.Credentials
  - System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)
  - System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  - System.Xml.XmlUrlResolver.Proxy
  - System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)
  langs:
  - csharp
  name: XmlUrlResolver
  nameWithType: XmlUrlResolver
  fullName: System.Xml.XmlUrlResolver
  type: Class
  summary: "Løser eksterne XML-ressurser navnet med en URI Uniform Resource Identifier ()."
  remarks: "XmlUrlResolver brukes til å løse eksterne XML-ressurser for eksempel enheter, dokumentet typedefinisjoner (DTDer) eller XML-skjemaer. Det er også brukes til å behandle inkluderer, og Importer elementene som finnes i omfattende stilarket XSL (Language) stilark eller XML-skjema definition language (XSD) skjemaer.       XmlUrlResolver er Standardløsningsprogrammet for alle klasser i den <xref:System.Xml>navneområde.</xref:System.Xml> Den støtter den `file://` og `http://` protokoller og forespørsler fra <xref:System.Net.WebRequest>klasse.</xref:System.Net.WebRequest>      > [!IMPORTANT] > XmlUrlResolver objekter kan inneholde sensitiv informasjon, for eksempel brukerlegitimasjonen. Du bør være forsiktig når du bufre XmlUrlResolver objekter og skal ikke sende XmlUrlResolver objekter til et uklarert komponent.      ## Løsning DTDer Hvis en XML-leseren (<xref:System.Xml.XmlReader>) leser en XML-fil som inneholder en ekstern DTD, kaller den <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=fullName>metode for å få en dataflyt representasjon av DTD.</xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=fullName> </xref:System.Xml.XmlReader> Hvis URIEN for DTD er en relativ URI, XML-leseren kaller den <xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=fullName>metoden og returnerer en absolutt URI for den angitte `relativeUri` og `baseURi` parametere.</xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=fullName> Hvis XmlUrlResolver vite hvordan du løser URIEN, returneres `null`.       Den <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName>metoden bruker informasjonen i den <xref:System.Xml.XmlUrlResolver.Credentials%2A>egenskapen etter behov for å få tilgang til ressursen.</xref:System.Xml.XmlUrlResolver.Credentials%2A> </xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> Det er ingen `get` aksessor for denne egenskapen av sikkerhetsgrunner. Når du overskriver <xref:System.Xml.XmlResolver>, **GetEntity** er metoden som benytter legitimasjonsinformasjon i den **legitimasjonen** egenskapen.</xref:System.Xml.XmlResolver>       Løsing av andre XML-ressurser ligner løsning DTDer. <xref:System.Xml.XmlResolver>forhandler tilkobling til den eksterne ressursen, og returnerer en <xref:System.IO.Stream>representasjon av innholdet.</xref:System.IO.Stream></xref:System.Xml.XmlResolver> Objektet som gjør kallet til <xref:System.Xml.XmlResolver>tolker dataflyten.</xref:System.Xml.XmlResolver>      ## Utvider klassen XmlUrlResolver standard virkemåte for klassen XmlUrlResolver er å løse et XML-Dataressurs fra kilden, ikke fra hurtigbufferen. I noen tilfeller kan løse en Dataressurs fra hurtigbufferen forbedre ytelsen til en applikasjon ved å lagre en tur til data-ressursen serveren. Bedre her må vektet mot behovet for oppdatert innhold.       Følgende eksempel utvider XmlUrlResolver og bygger en ny klasse `XmlCachingResolver`, for å hente ressurser fra hurtigbufferen. Dette gjøres ved å overstyre den <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName>egenskapen og <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName>metode.</xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> </xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName>       [!code-vb[XmlCachingResolver_ex Nr.&1;](~/add/codesnippet/visualbasic/t-system.xml.xmlurlresol_1.vb)][!code-cs[XmlCachingResolver_ex Nr.&1;](~/add/codesnippet/csharp/t-system.xml.xmlurlresol_1.cs) ] hurtigbufring virkemåten for den `XmlCachingResolver` klassen er implementert i den `GetEntity` metoden.   Dette gjøres ved oppretting av ny <xref:System.Net.WebRequest>og <xref:System.Net.Cache.HttpRequestCachePolicy>objekter.</xref:System.Net.Cache.HttpRequestCachePolicy> </xref:System.Net.WebRequest> Den <xref:System.Net.Cache.HttpRequestCachePolicy>objektet er opprettet ved hjelp av <xref:System.Net.Cache.HttpRequestCacheLevel>medlem av den <xref:System.Net.Cache.HttpRequestCacheLevel>opplisting.</xref:System.Net.Cache.HttpRequestCacheLevel> </xref:System.Net.Cache.HttpRequestCacheLevel> </xref:System.Net.Cache.HttpRequestCachePolicy>       Den <xref:System.Net.WebRequest.CachePolicy%2A>for den <xref:System.Net.WebRequest>objekt er angitt med den <xref:System.Net.Cache.HttpRequestCachePolicy>objektet.</xref:System.Net.Cache.HttpRequestCachePolicy> </xref:System.Net.WebRequest> </xref:System.Net.WebRequest.CachePolicy%2A>       En forekomst av den `XmlCachingResolver` klassen opprettes med den `Boolean``enableHttpCaching`. Når denne verdien er satt til `true`, forekomsten løser en ressurs fra hurtigbufferen standard hvis mulig. Når `enableHttpCaching` er satt til `false`, forekomsten bruker standard virkemåte, og løser ressurser fra kilden.      > [!NOTE] > Dette eksemplet har utvidelse av XML-klasser i .NET Framework. Andre klasser kan utvidet og tilpasses etter behov for en bestemt applikasjon."
  example:
  - "The following example creates an <xref:System.Xml.XmlReader> that uses an XmlUrlResolver with default credentials.  \n  \n [!code-vb[XmlResolver_Samples#1](~/add/codesnippet/visualbasic/t-system.xml.xmlurlresol_2.vb)]\n [!code-cs[XmlResolver_Samples#1](~/add/codesnippet/csharp/t-system.xml.xmlurlresol_2.cs)]"
  syntax:
    content: 'public class XmlUrlResolver : System.Xml.XmlResolver'
  inheritance:
  - System.Object
  - System.Xml.XmlResolver
  implements: []
  inheritedMembers:
  - System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.#ctor
  id: '#ctor'
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: XmlUrlResolver()
  nameWithType: XmlUrlResolver.XmlUrlResolver()
  fullName: System.Xml.XmlUrlResolver.XmlUrlResolver()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Xml.XmlUrlResolver&quot;> </xref> klasse."
  syntax:
    content: public XmlUrlResolver ();
    parameters: []
  overload: System.Xml.XmlUrlResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.CachePolicy
  id: CachePolicy
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: CachePolicy
  nameWithType: XmlUrlResolver.CachePolicy
  fullName: System.Xml.XmlUrlResolver.CachePolicy
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Henter eller angir policy for hurtigbuffer for den underliggende <xref:System.Net.WebRequest>objektet.</xref:System.Net.WebRequest>"
  syntax:
    content: public System.Net.Cache.RequestCachePolicy CachePolicy { set; }
    return:
      type: System.Net.Cache.RequestCachePolicy
      description: "Policy for hurtigbufferen for den underliggende Webforespørselen."
  overload: System.Xml.XmlUrlResolver.CachePolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.Credentials
  id: Credentials
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: Credentials
  nameWithType: XmlUrlResolver.Credentials
  fullName: System.Xml.XmlUrlResolver.Credentials
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Angir brukerlegitimasjonen som skal brukes til å godkjenne webforespørsler."
  remarks: "Hvis den virtuelle mappen ikke krever godkjenning, behøver ikke denne egenskapen må være angitt. Ellers må legitimasjonen for brukeren angis.       Du kan knytte annen legitimasjon til annen URIer og Legg dem til en hurtigbuffer. Du kan deretter bruke legitimasjonen til å kontrollere godkjenning for forskjellige URIer, uavhengig av den opprinnelige kilden for XML.       C# koden nedenfor viser hvordan du tilbakestiller legitimasjonen-egenskapen til en hurtigbuffer for legitimasjonen.      ```   NetworkCredential myCred = new NetworkCredential(UserName,SecurelyStoredPassword,Domain);    CredentialCache myCache = new CredentialCache();    myCache.Add(new Uri(&quot;http://www.contoso.com/&quot;), &quot;Basic&quot;, myCred);    myCache.Add(new Uri(&quot;http://app.contoso.com/&quot;), &quot;Basic&quot;, myCred);   XmlUrlResolver resolver = new XmlUrlResolver();   resolver.Credentials = myCache;   ```"
  example:
  - "The following example creates an <xref:System.Xml.XmlUrlResolver> object with credentials. The <xref:System.Xml.XmlReader> uses the credentials on the <xref:System.Xml.XmlUrlResolver> object to access a network resource.  \n  \n [!code-vb[XmlResolver_Samples#2](~/add/codesnippet/visualbasic/p-system.xml.xmlurlresol_1.vb)]\n [!code-cs[XmlResolver_Samples#2](~/add/codesnippet/csharp/p-system.xml.xmlurlresol_1.cs)]"
  syntax:
    content: public override System.Net.ICredentials Credentials { set; }
    return:
      type: System.Net.ICredentials
      description: "Legitimasjonen som skal brukes til å godkjenne webforespørsler. Hvis denne egenskapen ikke er angitt, bruker du verdien på <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; som er den <xref uid=&quot;langword_csharp_XmlUrlResolver&quot; name=&quot;XmlUrlResolver&quot; href=&quot;&quot;> </xref> har ingen brukerlegitimasjonen."
  overload: System.Xml.XmlUrlResolver.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)
  id: GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlUrlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlUrlResolver.GetEntity(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Tilordner en URI-adresse til et objekt som inneholder den faktiske ressursen."
  remarks: "Denne metoden brukes når oppkalleren ønsker å tilordne en gitt URI til et objekt som inneholder ressursen URIEN representerer.       Hvis du vil ha asynkrone versjon av denne metoden, kan du se <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A>.</xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A>      > [!IMPORTANT] > Programmet, kan begrense minne avslått for tjenesten trusler til metoden GetEntity ved å implementere IStream<xref:System.Runtime.InteropServices.ComTypes.IStream> til å begrense antall byte som leses.</xref:System.Runtime.InteropServices.ComTypes.IStream> Dette bidrar til å beskytte mot situasjoner der skadelig kode prøver å sende en uendelig dataflyten for byte til GetEntity-metoden."
  example:
  - "The following example demonstrates the `GetEntity` and <xref:System.Xml.XmlResolver.ResolveUri%2A> methods.  \n  \n [!code-vb[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlurlresol_1.vb)]\n [!code-cpp[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/add/codesnippet/cpp/m-system.xml.xmlurlresol_1.cpp)]\n [!code-cs[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/add/codesnippet/csharp/m-system.xml.xmlurlresol_1.cs)]"
  syntax:
    content: public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "URIEN som er returnert fra <xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "For øyeblikket brukt ikke."
    - id: ofObjectToReturn
      type: System.Type
      description: "Objekttypen som skal returneres. Den gjeldende implementeringen returnerer bare <xref:System.IO.Stream>objekter.</xref:System.IO.Stream>"
    return:
      type: System.Object
      description: "Et objekt for dataflyten eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis en annen type enn dataflyten er angitt."
  overload: System.Xml.XmlUrlResolver.GetEntity*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>ofObjectToReturn</code>verken <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en <xref uid=&quot;langword_csharp_Stream&quot; name=&quot;Stream&quot; href=&quot;&quot;> </xref> type."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "Den angitte URIEN er ikke en absolutt URI."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>absoluteUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Det er en kjøretidsfeil (for eksempel en avbrutt servertilkobling)."
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  id: GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlUrlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlUrlResolver.GetEntityAsync(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Asynkront tilordner en URI-adresse til et objekt som inneholder den faktiske ressursen."
  syntax:
    content: public override System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "URIEN som er returnert fra <xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "For øyeblikket brukt ikke."
    - id: ofObjectToReturn
      type: System.Type
      description: "Objekttypen som skal returneres. Den gjeldende implementeringen returnerer bare <xref:System.IO.Stream>objekter.</xref:System.IO.Stream>"
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "Et objekt for dataflyten eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis en annen type enn dataflyten er angitt."
  overload: System.Xml.XmlUrlResolver.GetEntityAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.Proxy
  id: Proxy
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: Proxy
  nameWithType: XmlUrlResolver.Proxy
  fullName: System.Xml.XmlUrlResolver.Proxy
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Henter eller angir nettverket proxyen for den underliggende <xref:System.Net.WebRequest>objektet.</xref:System.Net.WebRequest>"
  syntax:
    content: public System.Net.IWebProxy Proxy { set; }
    return:
      type: System.Net.IWebProxy
      description: "Den <xref:System.Net.IWebProxy>skal brukes til å få tilgang til Internett-ressursen.</xref:System.Net.IWebProxy>"
  overload: System.Xml.XmlUrlResolver.Proxy*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)
  id: ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: ResolveUri(Uri,String)
  nameWithType: XmlUrlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlUrlResolver.ResolveUri(Uri,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Løser den absolutte URIEN fra basistypen og den relative URIer."
  remarks: "Den absolutte URIEN kan brukes som basis-URIEN for etterfølgende forespørsler for enheter som er relative til denne URIEN."
  syntax:
    content: public override Uri ResolveUri (Uri baseUri, string relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "Basis-URIEN er brukt til å løse den relative URIEN."
    - id: relativeUri
      type: System.String
      description: "URIEN ikke løse. URIEN kan være en absolutt eller relativ. Hvis absolutt denne effektivt erstatter det `baseUri` verdi. Hvis relative, den kombinerer med den `baseUri` foreta en absolutt URI."
    return:
      type: System.Uri
      description: "Den absolutte URIEN eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> hvis den relative URIEN kan ikke løses."
  overload: System.Xml.XmlUrlResolver.ResolveUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>baseUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or <code>relativeUri</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Xml.XmlResolver
  isExternal: false
  name: System.Xml.XmlResolver
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Xml.XmlUrlResolver.#ctor
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: XmlUrlResolver()
  nameWithType: XmlUrlResolver.XmlUrlResolver()
  fullName: System.Xml.XmlUrlResolver.XmlUrlResolver()
- uid: System.Xml.XmlUrlResolver.CachePolicy
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: CachePolicy
  nameWithType: XmlUrlResolver.CachePolicy
  fullName: System.Xml.XmlUrlResolver.CachePolicy
- uid: System.Net.Cache.RequestCachePolicy
  parent: System.Net.Cache
  isExternal: false
  name: RequestCachePolicy
  nameWithType: RequestCachePolicy
  fullName: System.Net.Cache.RequestCachePolicy
- uid: System.Xml.XmlUrlResolver.Credentials
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlUrlResolver.Credentials
  fullName: System.Xml.XmlUrlResolver.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlUrlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlUrlResolver.GetEntity(Uri,String,Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlUrlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlUrlResolver.GetEntityAsync(Uri,String,Type)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.XmlUrlResolver.Proxy
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: Proxy
  nameWithType: XmlUrlResolver.Proxy
  fullName: System.Xml.XmlUrlResolver.Proxy
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: ResolveUri(Uri,String)
  nameWithType: XmlUrlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlUrlResolver.ResolveUri(Uri,String)
- uid: System.Xml.XmlUrlResolver.#ctor*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: XmlUrlResolver
  nameWithType: XmlUrlResolver.XmlUrlResolver
- uid: System.Xml.XmlUrlResolver.CachePolicy*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: CachePolicy
  nameWithType: XmlUrlResolver.CachePolicy
- uid: System.Xml.XmlUrlResolver.Credentials*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlUrlResolver.Credentials
- uid: System.Xml.XmlUrlResolver.GetEntity*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: GetEntity
  nameWithType: XmlUrlResolver.GetEntity
- uid: System.Xml.XmlUrlResolver.GetEntityAsync*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: GetEntityAsync
  nameWithType: XmlUrlResolver.GetEntityAsync
- uid: System.Xml.XmlUrlResolver.Proxy*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: Proxy
  nameWithType: XmlUrlResolver.Proxy
- uid: System.Xml.XmlUrlResolver.ResolveUri*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: ResolveUri
  nameWithType: XmlUrlResolver.ResolveUri
