### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.IWebPartField
  id: IWebPartField
  children:
  - System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)
  - System.Web.UI.WebControls.WebParts.IWebPartField.Schema
  langs:
  - csharp
  name: IWebPartField
  nameWithType: IWebPartField
  fullName: System.Web.UI.WebControls.WebParts.IWebPartField
  type: Interface
  summary: "Definerer en grensesnitt for å koble sammen to serverkontroller med ett felt av data."
  remarks: "Dette grensesnittet som brukes med webdeler tilkoblinger. I en webdeler tilkobling til to serverkontroller som befinner seg i en <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>sone opprette en tilkobling og dele data med en kontroll som fungerer som forbrukeren og kontrollen fungerer som en leverandør.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Mekanisme mer informasjon om webdeler tilkobling er en grensesnittet-forekomst som leverandøren fungerer til forbrukeren ved hjelp av en tilbakeringing-metoden. Hvis du vil opprette en tilkobling, må de forbrukeren og leverandøren begge samarbeide med samme grensesnittype for deling av data. Hvis forbrukeren ikke gjenkjenner grensesnittype som er sendt av leverandøren, er det likevel hende til kontrollene ved hjelp av en transformering (en <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>objektet) som oversetter grensesnittet-forekomst som er sendt av leverandøren til en type som forbrukeren gjenkjenner.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Mer informasjon om tilkoblinger <xref:System.Web.UI.WebControls.WebParts.WebPartConnection>og [oversikt over webdeler tilkoblinger](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.WebControls.WebParts.WebPartConnection>       Grensesnittet IWebPartField er et grensesnitt som er inkludert i webdeler kontrollen som er angitt som en standard grensesnitt for å opprette tilkoblinger som er basert på et datafelt. Du kan også opprette egendefinerte grensesnitt for å bruke med webdeler tilkoblinger, men det er lurt å opprette tilkoblinger som er basert på en vanlig rad i mange datadrevne webprogrammer (for mer informasjon, kan du se den <xref:System.Web.UI.WebControls.WebParts.IWebPartRow>grensesnittet), tabellen (for mer informasjon, kan du se den <xref:System.Web.UI.WebControls.WebParts.IWebPartTable>grensesnittet), eller felt fra datakilden ved hjelp av IWebPartField-grensesnittet.</xref:System.Web.UI.WebControls.WebParts.IWebPartTable> </xref:System.Web.UI.WebControls.WebParts.IWebPartRow> I en vanlig tilkobling en <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrollere fungerer som en leverandør vil implementere grensesnittet IWebPartField og gir en forekomst av grensesnittet til forbrukere i en bestemt tilbakeringing-metode.</xref:System.Web.UI.WebControls.WebParts.WebPart> Leverandøren kan for eksempel implementere et IWebPartField grensesnitt for et felt i brukeren informasjon tabellen som inneholder en webbruker Postnummerdata. En annen <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrollere fungerer som en forbruker vil definere en spesiell metode for å motta grensesnittet-forekomsten kan trekke ut postnummer-data og slå opp og vise informasjon om været basert på postnummeret.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Grensesnittet IWebPartField har to eksponerte medlemmer. Den <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A>egenskapen returnerer skjemainformasjon om datafeltet innkapslet i en <xref:System.ComponentModel.PropertyDescriptor>objektet.</xref:System.ComponentModel.PropertyDescriptor> </xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A> Den <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A>metoden deklarerer en metode som en implementer (for eksempel en leverandør kontroll) bruker til å hente data for forekomsten av grensesnittet felt når metoden tilbakeringing startes.</xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A>"
  example:
  - "The following code example demonstrates how to create a static connection between two controls using the IWebPartField interface. The code example has three parts:  \n  \n-   Source code for two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can form a connection using the IWebPartField interface, with one control acting as the provider, the other acting as the consumer.  \n  \n-   A Web page that hosts the controls and declares the static connection in persistence format.  \n  \n-   A description of what happens when the example code runs.  \n  \n The first part of the code example is the source code for the two custom controls. First is the code for the provider, which implements the IWebPartField interface. For simplicity in the example, the provider creates a table with some data rather than connecting to a database. The `GetConnectionInterface` method serves as the provider's connection point, the callback method that returns the interface instance to the consumer. As for the consumer, it retrieves the interface instance from the provider in its method named `SetConnectionInterface`, which is marked with a `ConnectionConsumer` attribute. After retrieving the instance of the interface, the consumer, in its `OnPreRender` method, calls the implementation of the <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> method in the provider, to retrieve the actual data.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPartField_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_353_1.cs)]\n [!code-vb[WebParts_IWebPartField_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_353_1.vb)]  \n  \n The second part of the code example is the Web page that declares the static connection and hosts the controls. Near the top of the page is a `Register` directive that declares the namespace of the source code contained in the App_Code directory. The connection is declared using an `<asp:webpartconnection>` element. The custom consumer and provider controls are declared in a `<zonetemplate>` element within an `<asp:webpartzone>` element, which is required for them to be able to connect (they must reside within a zone that inherits from the <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> class).  \n  \n [!code-cs[WebParts_IWebPartField_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_353_2.aspx)]\n [!code-vb[WebParts_IWebPartField_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_353_2.aspx)]  \n  \n Load the page in a browser. The consumer control displays the data provided from the specified field, which the provider makes available through an instance of the IWebPartField interface."
  syntax:
    content: public interface IWebPartField
  implements: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)
  id: GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)
  parent: System.Web.UI.WebControls.WebParts.IWebPartField
  langs:
  - csharp
  name: GetFieldValue(FieldCallback)
  nameWithType: IWebPartField.GetFieldValue(FieldCallback)
  fullName: System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(FieldCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Returnerer verdien av feltet som brukes av grensesnittet som grunnlag for en tilkobling mellom to <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroller."
  remarks: "Bruk denne metoden til å hente datafeltverdier som er sendt av grensesnittet."
  example:
  - "The following code example shows the implementation and use of the GetFieldValue method. The complete example is shown in the class overview for the <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface. The provider control implements the GetFieldValue method, returning the value of a particular field in the data table. The consumer control calls the GetFieldValue method in its `OnPreRender` method, so that the value of the data can be written to the page.  \n  \n [!code-cs[WebParts_IWebPartField_Overview#2](~/add/codesnippet/csharp/c2381a5f-e812-4b8a-be4c-_1.cs)]\n [!code-vb[WebParts_IWebPartField_Overview#2](~/add/codesnippet/visualbasic/c2381a5f-e812-4b8a-be4c-_1.vb)]"
  syntax:
    content: public void GetFieldValue (System.Web.UI.WebControls.WebParts.FieldCallback callback);
    parameters:
    - id: callback
      type: System.Web.UI.WebControls.WebParts.FieldCallback
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.FieldCallback&quot;> </xref> representanten som inneholder adressen til en metode som mottar dataene."
  overload: System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPartField.Schema
  id: Schema
  parent: System.Web.UI.WebControls.WebParts.IWebPartField
  langs:
  - csharp
  name: Schema
  nameWithType: IWebPartField.Schema
  fullName: System.Web.UI.WebControls.WebParts.IWebPartField.Schema
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Henter skjemainformasjon for et datafelt som brukes til å dele data mellom to <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroller."
  remarks: "Denne egenskapen gir informasjon om egenskaper for dataene som ble sendt av grensesnittet. Transformeringen og forbrukeren kontroller kan spørre denne egenskapen for å få informasjon om typen innhold, og andre detaljer i feltet finnes i den <xref:System.Web.UI.WebControls.WebParts.IWebPartField>grensesnittet-forekomst som er sendt av en leverandør.</xref:System.Web.UI.WebControls.WebParts.IWebPartField>"
  example:
  - "The following code example shows the implementation and use of the Schema property. The complete example is shown in the class overview for the <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface. The provider control implements the Schema property. Then, in its `GetFieldValue` method, it uses the property to retrieve the field value.  \n  \n [!code-cs[WebParts_IWebPartField_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_271_1.cs)]\n [!code-vb[WebParts_IWebPartField_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_271_1.vb)]"
  syntax:
    content: public System.ComponentModel.PropertyDescriptor Schema { get; }
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "En <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> som beskriver skjemainformasjonen for data-feltet."
  overload: System.Web.UI.WebControls.WebParts.IWebPartField.Schema*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)
  parent: System.Web.UI.WebControls.WebParts.IWebPartField
  isExternal: false
  name: GetFieldValue(FieldCallback)
  nameWithType: IWebPartField.GetFieldValue(FieldCallback)
  fullName: System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(FieldCallback)
- uid: System.Web.UI.WebControls.WebParts.FieldCallback
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: FieldCallback
  nameWithType: FieldCallback
  fullName: System.Web.UI.WebControls.WebParts.FieldCallback
- uid: System.Web.UI.WebControls.WebParts.IWebPartField.Schema
  parent: System.Web.UI.WebControls.WebParts.IWebPartField
  isExternal: false
  name: Schema
  nameWithType: IWebPartField.Schema
  fullName: System.Web.UI.WebControls.WebParts.IWebPartField.Schema
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue*
  parent: System.Web.UI.WebControls.WebParts.IWebPartField
  isExternal: false
  name: GetFieldValue
  nameWithType: IWebPartField.GetFieldValue
- uid: System.Web.UI.WebControls.WebParts.IWebPartField.Schema*
  parent: System.Web.UI.WebControls.WebParts.IWebPartField
  isExternal: false
  name: Schema
  nameWithType: IWebPartField.Schema
