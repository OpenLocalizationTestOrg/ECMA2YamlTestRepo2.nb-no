### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.RecognizerInfo
  id: RecognizerInfo
  children:
  - System.Speech.Recognition.RecognizerInfo.AdditionalInfo
  - System.Speech.Recognition.RecognizerInfo.Culture
  - System.Speech.Recognition.RecognizerInfo.Description
  - System.Speech.Recognition.RecognizerInfo.Dispose
  - System.Speech.Recognition.RecognizerInfo.Id
  - System.Speech.Recognition.RecognizerInfo.Name
  - System.Speech.Recognition.RecognizerInfo.SupportedAudioFormats
  langs:
  - csharp
  name: RecognizerInfo
  nameWithType: RecognizerInfo
  fullName: System.Speech.Recognition.RecognizerInfo
  type: Class
  summary: "Representerer informasjon om en <xref href=&quot;System.Speech.Recognition.SpeechRecognizer&quot;> </xref> eller <xref href=&quot;System.Speech.Recognition.SpeechRecognitionEngine&quot;> </xref> forekomsten."
  remarks: "Du finner identifiserende for et initialisert recognition motoren ved hjelp av <xref:System.Speech.Recognition.SpeechRecognizer.RecognizerInfo%2A?displayProperty=fullName>for en <xref:System.Speech.Recognition.SpeechRecognizer>objektet eller <xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerInfo%2A?displayProperty=fullName>for en <xref:System.Speech.Recognition.SpeechRecognitionEngine>objektet.</xref:System.Speech.Recognition.SpeechRecognitionEngine> </xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerInfo%2A?displayProperty=fullName> </xref:System.Speech.Recognition.SpeechRecognizer> </xref:System.Speech.Recognition.SpeechRecognizer.RecognizerInfo%2A?displayProperty=fullName>       Informasjonen returnert forekomster av RecognizerInfo hentet fra en <xref:System.Speech.Recognition.SpeechRecognizer>bestemmes av innstillingene i den **egenskaper for tale** medlem av den **Kontrollpanel**.</xref:System.Speech.Recognition.SpeechRecognizer>       Du kan bruke forekomster av RecognizerInfo for å lage en bestemt konfigurasjon av <xref:System.Speech.Recognition.SpeechRecognitionEngine>ved hjelp av den <xref:System.Speech.Recognition.SpeechRecognitionEngine.%23ctor%28System.Speech.Recognition.RecognizerInfo%29>konstruktør.</xref:System.Speech.Recognition.SpeechRecognitionEngine.%23ctor%28System.Speech.Recognition.RecognizerInfo%29> </xref:System.Speech.Recognition.SpeechRecognitionEngine>       Den statiske metoden <xref:System.Speech.Recognition.SpeechRecognitionEngine.InstalledRecognizers%2A>returnerer en liste over alle tilgjengelige <xref:System.Speech.Recognition.SpeechRecognitionEngine>konfigurasjoner som RecognizerInfo forekomster.</xref:System.Speech.Recognition.SpeechRecognitionEngine> </xref:System.Speech.Recognition.SpeechRecognitionEngine.InstalledRecognizers%2A>"
  example:
  - "The following example validates a given <xref:System.Globalization.CultureInfo> and identifier string against the permitted <xref:System.Speech.Recognition.SpeechRecognitionEngine> configurations, expressed as a list of RecognizerInfo objects.  \n  \n If the <xref:System.Globalization.CultureInfo> and identifier string are valid, the example creates a new instance of <xref:System.Speech.Recognition.SpeechRecognitionEngine> using the RecognizerInfo instance as an argument.  \n  \n```c#  \n  \nprivate SpeechRecognitionEngine SelectRecognizer(CultureInfo requiredCulture, string requiredId)   \n{  \n  // Select based on a specific recognizer configuration  \n  SpeechRecognitionEngine speechRecognitionEngine=null;  \n  foreach (RecognizerInfo config in SpeechRecognitionEngine.InstalledRecognizers())   \n  {  \n    if (config.Culture.Equals(requiredCulture) && config.Id== requiredId)   \n    {  \n      speechRecognitionEngine = new SpeechRecognitionEngine(config);  \n      break;  \n    }  \n  }  \n  return speechRecognitionEngine;  \n}  \n```"
  syntax:
    content: 'public class RecognizerInfo : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizerInfo.AdditionalInfo
  id: AdditionalInfo
  parent: System.Speech.Recognition.RecognizerInfo
  langs:
  - csharp
  name: AdditionalInfo
  nameWithType: RecognizerInfo.AdditionalInfo
  fullName: System.Speech.Recognition.RecognizerInfo.AdditionalInfo
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Henter tilleggsinformasjon en <xref href=&quot;System.Speech.Recognition.SpeechRecognizer&quot;> </xref> eller <xref href=&quot;System.Speech.Recognition.SpeechRecognitionEngine&quot;> </xref> forekomsten."
  remarks: ''
  example:
  - "The example below implements a button click which displays all the information in a <xref:System.Speech.Recognition.RecognizerInfo> object in a <xref:System.Windows.Forms.MessageBox>.  \n  \n The key/value pairs contained in the <xref:System.Collections.Generic.IDictionary%602> instance returned by AdditionalInfo are concatenated into a text table.  \n  \n```c#  \nprivate void recognizerInfoButton_Click(object sender, EventArgs e)   \n{  \n  RecognizerInfo info = _recognizer.RecognizerInfo;  \n  string AudioFormats = \"\";  \n  foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)   \n  {  \n    AudioFormats += String.Format(\"       {0}\\n\", fmt.EncodingFormat.ToString());  \n  }  \n  string AdditionalInfo = \"\";  \n  foreach (string key in info.AdditionalInfo.Keys)   \n  {  \n    AdditionalInfo += String.Format(\"      {0}: {1}\\n\", key, info.AdditionalInfo[key]);  \n  }  \n  MessageBox.Show(String.Format(  \n                     \"Name:                 {0 } \\n\" +  \n                     \"Description:          {1} \\n\" +  \n                     \"SupportedAudioFormats:\\n\" +  \n                     \" {2} \" +  \n                     \"Culture:              {3} \\n\" +  \n                     \"AdditionalInfo:       \\n\" +  \n                     \" {4}\\n\",  \n                     info.Name.ToString(),  \n                     info.Description.ToString(),  \n                     AudioFormats,  \n                     info.Culture.ToString(),  \n                     AdditionalInfo));  \n}  \n```"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,string> AdditionalInfo { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Returnerer en forekomst av &lt;xref:System.Collections.Generic.IDictionary%602&gt; som inneholder informasjon om konfigurasjon av en <xref href=&quot;System.Speech.Recognition.SpeechRecognizer&quot;> </xref> eller <xref href=&quot;System.Speech.Recognition.SpeechRecognitionEngine&quot;> </xref> objektet."
  overload: System.Speech.Recognition.RecognizerInfo.AdditionalInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizerInfo.Culture
  id: Culture
  parent: System.Speech.Recognition.RecognizerInfo
  langs:
  - csharp
  name: Culture
  nameWithType: RecognizerInfo.Culture
  fullName: System.Speech.Recognition.RecognizerInfo.Culture
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Henter kultur støttes av en <xref href=&quot;System.Speech.Recognition.SpeechRecognizer&quot;> </xref> eller <xref href=&quot;System.Speech.Recognition.SpeechRecognitionEngine&quot;> </xref> forekomsten."
  remarks: "En <xref:System.Globalization.CultureInfo>objekt kan inneholde navnet på kulturen tilknyttede språket, land/region, kalenderen som skal brukes og hvordan til å formatere datoer og sortere strenger.</xref:System.Globalization.CultureInfo>"
  example:
  - "The following example implements a button click that displays all the information in a <xref:System.Speech.Recognition.RecognizerInfo> instance. The example uses the Culture property to obtain the identifying string for the <xref:System.Globalization.CultureInfo> used by the recognition engine configuration.  \n  \n```c#  \nprivate void recognizerInfoButton_Click(object sender, EventArgs e)   \n{  \n  RecognizerInfo info = _recognizer.RecognizerInfo;  \n  string AudioFormats = \"\";  \n  foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)   \n  {  \n    AudioFormats += String.Format(\"       {0}\\n\", fmt.EncodingFormat.ToString());  \n  }  \n  string AdditionalInfo = \"\";  \n  foreach (string key in info.AdditionalInfo.Keys)   \n  {  \n    AdditionalInfo += String.Format(\"      {0}: {1}\\n\", key, info.AdditionalInfo[key]);  \n  }  \n  MessageBox.Show(String.Format(  \n                     \"Name:                 {0 }\\n\" +  \n                     \"Description:          {1} \\n\" +  \n                     \"SupportedAudioFormats:\\n\" +  \n                     \"{2} \" +  \n                     \"Culture:              {3} \\n\" +  \n                     \"AdditionalInfo:       \\n\" +  \n                     \" {4}\\n\",  \n                     info.Name.ToString(),  \n                     info.Description.ToString(),  \n                     AudioFormats,  \n                     info.Culture.ToString(),  \n                     AdditionalInfo));  \n}  \n```"
  syntax:
    content: public System.Globalization.CultureInfo Culture { get; }
    return:
      type: System.Globalization.CultureInfo
      description: "Returnerer informasjon om kultur støttes av en gitt <xref href=&quot;System.Speech.Recognition.SpeechRecognizer&quot;> </xref> eller <xref href=&quot;System.Speech.Recognition.SpeechRecognitionEngine&quot;> </xref> forekomsten."
  overload: System.Speech.Recognition.RecognizerInfo.Culture*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizerInfo.Description
  id: Description
  parent: System.Speech.Recognition.RecognizerInfo
  langs:
  - csharp
  name: Description
  nameWithType: RecognizerInfo.Description
  fullName: System.Speech.Recognition.RecognizerInfo.Description
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Henter beskrivelsen av et <xref href=&quot;System.Speech.Recognition.SpeechRecognizer&quot;> </xref> eller <xref href=&quot;System.Speech.Recognition.SpeechRecognitionEngine&quot;> </xref> forekomsten."
  remarks: ''
  example:
  - "The following example below implements a button click that displays all the information in a <xref:System.Speech.Recognition.RecognizerInfo> instance. The example uses the Description property to obtain the description of a speech recognition engine configuration, and then displays it in a <xref:System.Windows.Forms.MessageBox>.  \n  \n```c#  \nprivate void recognizerInfoButton_Click(object sender, EventArgs e)   \n{  \n  RecognizerInfo info = _recognizer.RecognizerInfo;  \n  string AudioFormats = \"\";  \n  foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)   \n  {  \n    AudioFormats += String.Format(\"       {0}\\n\", fmt.EncodingFormat.ToString());  \n  }  \n  string AdditionalInfo = \"\";  \n  foreach (string key in info.AdditionalInfo.Keys)   \n  {  \n    AdditionalInfo += String.Format(\"      {0}: {1}\\n\", key, info.AdditionalInfo[key]);  \n  }  \n  MessageBox.Show(String.Format(  \n                     \"Name:                 {0 }\\n\" +  \n                     \"Description:          {1} \\n\" +  \n                     \"SupportedAudioFormats:\\n\" +  \n                     \"{2} \" +  \n                     \"Culture:              {3} \\n\" +  \n                     \"AdditionalInfo:       \\n\" +  \n                     \" {4}\\n\",  \n                     info.Name.ToString(),  \n                     info.Description.ToString(),  \n                     AudioFormats,  \n                     info.Culture.ToString(),  \n                     AdditionalInfo));  \n}  \n```"
  syntax:
    content: public string Description { get; }
    return:
      type: System.String
      description: "Returnerer en <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> som beskriver konfigurasjonen for en bestemt <xref href=&quot;System.Speech.Recognition.SpeechRecognizer&quot;> </xref> eller <xref href=&quot;System.Speech.Recognition.SpeechRecognitionEngine&quot;> </xref> forekomsten."
  overload: System.Speech.Recognition.RecognizerInfo.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizerInfo.Dispose
  id: Dispose
  parent: System.Speech.Recognition.RecognizerInfo
  langs:
  - csharp
  name: Dispose()
  nameWithType: RecognizerInfo.Dispose()
  fullName: System.Speech.Recognition.RecognizerInfo.Dispose()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Disposes den `RecognizerInfo` objektet."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Speech.Recognition.RecognizerInfo.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizerInfo.Id
  id: Id
  parent: System.Speech.Recognition.RecognizerInfo
  langs:
  - csharp
  name: Id
  nameWithType: RecognizerInfo.Id
  fullName: System.Speech.Recognition.RecognizerInfo.Id
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Henter identifikatoren for en <xref href=&quot;System.Speech.Recognition.SpeechRecognizer&quot;> </xref> eller <xref href=&quot;System.Speech.Recognition.SpeechRecognitionEngine&quot;> </xref> forekomsten."
  remarks: "Identifikatoren som er returnert av Id-egenskapen er lik token navnet på recognition motoren i Windows-registret."
  example:
  - "The following example implements a button click that displays all the information in a <xref:System.Speech.Recognition.RecognizerInfo> instance. The example uses the Id property to obtain the identifier string of a recognition engine configuration, and then displays it in a <xref:System.Windows.Forms.MessageBox>.  \n  \n```  \nprivate void recognizerInfoButton_Click(object sender, EventArgs e)   \n{  \n  RecognizerInfo info = _recognizer.RecognizerInfo;  \n  string AudioFormats = \"\";  \n  foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)   \n  {  \n    AudioFormats += String.Format(\"       {0}\\n\",  fmt.EncodingFormat.ToString());  \n  }  \n  string AdditionalInfo = \"\";  \n  foreach (string key in info.AdditionalInfo.Keys)   \n  {  \n    AdditionalInfo += String.Format(\"      {0}: {1}\\n\", key, info.AdditionalInfo[key]);  \n  }  \n  MessageBox.Show(String.Format(  \n                           \"Name:                 {0 }\\n\" +  \n                           \"Description:          {1} \\n\" +  \n                           \"SupportedAudioFormats:\\n\" +  \n                           \"{2} \" +  \n                           \"Culture:              {3} \\n\" +  \n                           \"AdditionalInfo:       \\n\" +  \n                           \" {4}\\n\",  \n                           info.Name.ToString(),  \n                           info.Description.ToString(),  \n                           AudioFormats,  \n                           info.Culture.ToString(),  \n                           AdditionalInfo));  \n}  \n```"
  syntax:
    content: public string Id { get; }
    return:
      type: System.String
      description: "Returnerer identifikatoren for en bestemt <xref href=&quot;System.Speech.Recognition.SpeechRecognizer&quot;> </xref> eller <xref href=&quot;System.Speech.Recognition.SpeechRecognitionEngine&quot;> </xref> forekomsten."
  overload: System.Speech.Recognition.RecognizerInfo.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizerInfo.Name
  id: Name
  parent: System.Speech.Recognition.RecognizerInfo
  langs:
  - csharp
  name: Name
  nameWithType: RecognizerInfo.Name
  fullName: System.Speech.Recognition.RecognizerInfo.Name
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Henter det egendefinerte navnet på en <xref href=&quot;System.Speech.Recognition.SpeechRecognizer&quot;> </xref> eller <xref href=&quot;System.Speech.Recognition.SpeechRecognitionEngine&quot;> </xref> forekomsten."
  remarks: ''
  example:
  - "The following example implements a button click that displays all the information in a <xref:System.Speech.Recognition.RecognizerInfo> instance. The example uses the Name property to obtain the friendly name of a recognition engine configuration, and then displays it in a <xref:System.Windows.Forms.MessageBox>.  \n  \n```  \nprivate void recognizerInfoButton_Click(object sender, EventArgs e)   \n{  \n  RecognizerInfo info = _recognizer.RecognizerInfo;  \n  string AudioFormats = \"\";  \n  foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)   \n  {  \n    AudioFormats += String.Format(\"       {0}\\n\", fmt.EncodingFormat.ToString());  \n  }  \n  string AdditionalInfo = \"\";  \n  foreach (string key in info.AdditionalInfo.Keys)   \n  {  \n    AdditionalInfo += String.Format(\"      {0}: {1}\\n\", key, info.AdditionalInfo[key]);  \n  }  \n  MessageBox.Show(String.Format(  \n                           \"Name:                 {0 }\\n\" +  \n                           \"Description:          {1} \\n\" +  \n                           \"SupportedAudioFormats:\\n\" +  \n                           \"{2} \" +  \n                           \"Culture:              {3} \\n\" +  \n                           \"AdditionalInfo:       \\n\" +  \n                           \" {4}\\n\",  \n                           info.Name.ToString(),  \n                           info.Description.ToString(),  \n                           AudioFormats,  \n                           info.Culture.ToString(),  \n                           AdditionalInfo));  \n}  \n```"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Returnerer det egendefinerte navnet for en bestemt <xref href=&quot;System.Speech.Recognition.SpeechRecognizer&quot;> </xref> eller <xref href=&quot;System.Speech.Recognition.SpeechRecognitionEngine&quot;> </xref> forekomsten."
  overload: System.Speech.Recognition.RecognizerInfo.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizerInfo.SupportedAudioFormats
  id: SupportedAudioFormats
  parent: System.Speech.Recognition.RecognizerInfo
  langs:
  - csharp
  name: SupportedAudioFormats
  nameWithType: RecognizerInfo.SupportedAudioFormats
  fullName: System.Speech.Recognition.RecognizerInfo.SupportedAudioFormats
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Henter lyd formatene som støttes av en <xref href=&quot;System.Speech.Recognition.SpeechRecognizer&quot;> </xref> eller <xref href=&quot;System.Speech.Recognition.SpeechRecognitionEngine&quot;> </xref> forekomsten."
  remarks: ''
  example:
  - "The following example implements a button click that displays all the information in a <xref:System.Speech.Recognition.RecognizerInfo> instance. The example uses the SupportedAudioFormats property to obtain the encoding formats supported by a recognition engine configuration, and then displays it in a <xref:System.Windows.Forms.MessageBox>.  \n  \n```  \nprivate void recognizerInfoButton_Click(object sender, EventArgs e)   \n{  \n  RecognizerInfo info = _recognizer.RecognizerInfo;  \n  string AudioFormats = \"\";  \n  foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)   \n  {  \n    AudioFormats += String.Format(\"       {0}\\n\", fmt.EncodingFormat.ToString());  \n  }  \n  string AdditionalInfo = \"\";  \n  foreach (string key in info.AdditionalInfo.Keys)   \n  {  \n    AdditionalInfo += String.Format(\"      {0}: {1}\\n\", key, info.AdditionalInfo[key]);  \n  }  \n  MessageBox.Show(String.Format(  \n                           \"Name:                 {0 }\\n\" +  \n                           \"Description:          {1} \\n\" +  \n                           \"SupportedAudioFormats:\\n\" +  \n                           \"{2} \" +  \n                           \"Culture:              {3} \\n\" +  \n                           \"AdditionalInfo:       \\n\" +  \n                           \" {4}\\n\",  \n                           info.Name.ToString(),  \n                           info.Description.ToString(),  \n                           AudioFormats,  \n                           info.Culture.ToString(),  \n                           AdditionalInfo));  \n}  \n```"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.AudioFormat.SpeechAudioFormatInfo> SupportedAudioFormats { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.AudioFormat.SpeechAudioFormatInfo}
      description: "Returnerer en liste over lyd formater som støttes av en bestemt <xref href=&quot;System.Speech.Recognition.SpeechRecognizer&quot;> </xref> eller <xref href=&quot;System.Speech.Recognition.SpeechRecognitionEngine&quot;> </xref> forekomsten."
  overload: System.Speech.Recognition.RecognizerInfo.SupportedAudioFormats*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Speech.Recognition.RecognizerInfo.AdditionalInfo
  parent: System.Speech.Recognition.RecognizerInfo
  isExternal: false
  name: AdditionalInfo
  nameWithType: RecognizerInfo.AdditionalInfo
  fullName: System.Speech.Recognition.RecognizerInfo.AdditionalInfo
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.RecognizerInfo.Culture
  parent: System.Speech.Recognition.RecognizerInfo
  isExternal: false
  name: Culture
  nameWithType: RecognizerInfo.Culture
  fullName: System.Speech.Recognition.RecognizerInfo.Culture
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Speech.Recognition.RecognizerInfo.Description
  parent: System.Speech.Recognition.RecognizerInfo
  isExternal: false
  name: Description
  nameWithType: RecognizerInfo.Description
  fullName: System.Speech.Recognition.RecognizerInfo.Description
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.RecognizerInfo.Dispose
  parent: System.Speech.Recognition.RecognizerInfo
  isExternal: false
  name: Dispose()
  nameWithType: RecognizerInfo.Dispose()
  fullName: System.Speech.Recognition.RecognizerInfo.Dispose()
- uid: System.Speech.Recognition.RecognizerInfo.Id
  parent: System.Speech.Recognition.RecognizerInfo
  isExternal: false
  name: Id
  nameWithType: RecognizerInfo.Id
  fullName: System.Speech.Recognition.RecognizerInfo.Id
- uid: System.Speech.Recognition.RecognizerInfo.Name
  parent: System.Speech.Recognition.RecognizerInfo
  isExternal: false
  name: Name
  nameWithType: RecognizerInfo.Name
  fullName: System.Speech.Recognition.RecognizerInfo.Name
- uid: System.Speech.Recognition.RecognizerInfo.SupportedAudioFormats
  parent: System.Speech.Recognition.RecognizerInfo
  isExternal: false
  name: SupportedAudioFormats
  nameWithType: RecognizerInfo.SupportedAudioFormats
  fullName: System.Speech.Recognition.RecognizerInfo.SupportedAudioFormats
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.AudioFormat.SpeechAudioFormatInfo}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<SpeechAudioFormatInfo>
  nameWithType: ReadOnlyCollection<SpeechAudioFormatInfo>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.AudioFormat.SpeechAudioFormatInfo>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Speech.AudioFormat.SpeechAudioFormatInfo>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.AudioFormat.SpeechAudioFormatInfo
    name: SpeechAudioFormatInfo
    nameWithType: SpeechAudioFormatInfo
    fullName: SpeechAudioFormatInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.RecognizerInfo.AdditionalInfo*
  parent: System.Speech.Recognition.RecognizerInfo
  isExternal: false
  name: AdditionalInfo
  nameWithType: RecognizerInfo.AdditionalInfo
- uid: System.Speech.Recognition.RecognizerInfo.Culture*
  parent: System.Speech.Recognition.RecognizerInfo
  isExternal: false
  name: Culture
  nameWithType: RecognizerInfo.Culture
- uid: System.Speech.Recognition.RecognizerInfo.Description*
  parent: System.Speech.Recognition.RecognizerInfo
  isExternal: false
  name: Description
  nameWithType: RecognizerInfo.Description
- uid: System.Speech.Recognition.RecognizerInfo.Dispose*
  parent: System.Speech.Recognition.RecognizerInfo
  isExternal: false
  name: Dispose
  nameWithType: RecognizerInfo.Dispose
- uid: System.Speech.Recognition.RecognizerInfo.Id*
  parent: System.Speech.Recognition.RecognizerInfo
  isExternal: false
  name: Id
  nameWithType: RecognizerInfo.Id
- uid: System.Speech.Recognition.RecognizerInfo.Name*
  parent: System.Speech.Recognition.RecognizerInfo
  isExternal: false
  name: Name
  nameWithType: RecognizerInfo.Name
- uid: System.Speech.Recognition.RecognizerInfo.SupportedAudioFormats*
  parent: System.Speech.Recognition.RecognizerInfo
  isExternal: false
  name: SupportedAudioFormats
  nameWithType: RecognizerInfo.SupportedAudioFormats
