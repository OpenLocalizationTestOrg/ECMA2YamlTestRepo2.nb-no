### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs
  id: DataGridViewCellParsingEventArgs
  children:
  - System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)
  - System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex
  - System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle
  - System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied
  - System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex
  langs:
  - csharp
  name: DataGridViewCellParsingEventArgs
  nameWithType: DataGridViewCellParsingEventArgs
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs
  type: Class
  summary: "Gir dataene for den <xref href=&quot;System.Windows.Forms.DataGridView.CellParsing&quot;> </xref> hendelse for en <xref href=&quot;System.Windows.Forms.DataGridView&quot;> </xref> kontrollen."
  remarks: "Behandle den <xref:System.Windows.Forms.DataGridView.CellParsing>-hendelsen for å angi egendefinert verdi konvertering fra en brukerdefinert verdi til en verdi i typen som er angitt av cellen <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A>egenskapen.</xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> </xref:System.Windows.Forms.DataGridView.CellParsing>       Når du håndtere den <xref:System.Windows.Forms.DataGridView.CellParsing>hendelse, kan du konvertere verdien selv, eller du kan tilpasse standard konverteringen.</xref:System.Windows.Forms.DataGridView.CellParsing> For eksempel kan du konvertere verdien selv med cellen <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A>metode med typen konverteringsprogrammer velger.</xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> Alternativt kan du la standardtype analysere verdien konverteringsprogrammer, men du kan endre den <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, og <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>egenskapene for objektet som returneres av den <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle%2A?displayProperty=fullName>egenskapen som er initialisert med cellen <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A>egenskapen.</xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> </xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle%2A?displayProperty=fullName> </xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> </xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> </xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>       Når du konvertere verdien selv, erstatter innledende, formatert verdien for den <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=fullName>egenskapen med den konverterte verdien i type som er angitt av cellen <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A>egenskapen.</xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> </xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=fullName> For å angi at ytterligere analyse kreves, kan du angi den <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=fullName>egenskapen `true`.</xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=fullName>       Når hendelsesbehandlingen er fullført, hvis den <xref:System.Windows.Forms.ConvertEventArgs.Value%2A>er `null` eller er ikke av riktig type eller <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A>egenskapen `false`, <xref:System.Windows.Forms.ConvertEventArgs.Value%2A>analyseres cellen <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A>metode med standard typen konverteringsprogrammer.</xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> </xref:System.Windows.Forms.ConvertEventArgs.Value%2A> </xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> </xref:System.Windows.Forms.ConvertEventArgs.Value%2A> Standard implementering av denne metoden analyserer verdi ved hjelp av <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, og <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>Egenskaper for cellestil som er sendt inn</xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> </xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> </xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> Hvis verdien ikke er lik <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, verdien analyseres ved hjelp av <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>egenskapen og typen konverteringsprogrammer som er sendt inn</xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> </xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>       Du kan tilpasse konvertering av en celleverdi til en formatert verdi for visning, kan du behandle den <xref:System.Windows.Forms.DataGridView.CellFormatting>hendelsen.</xref:System.Windows.Forms.DataGridView.CellFormatting>       Du finner mer informasjon om behandling av hendelser [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates using DataGridViewCellParsingEventArgs to check the validity of date entries.  \n  \n [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/visualbasic/t-system.windows.forms.d_59_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/cpp/t-system.windows.forms.d_59_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/csharp/t-system.windows.forms.d_59_1.cs)]"
  syntax:
    content: 'public class DataGridViewCellParsingEventArgs : System.Windows.Forms.ConvertEventArgs'
  inheritance:
  - System.EventArgs
  - System.Windows.Forms.ConvertEventArgs
  implements: []
  inheritedMembers:
  - System.Windows.Forms.ConvertEventArgs.DesiredType
  - System.Windows.Forms.ConvertEventArgs.Value
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)
  id: '#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)'
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  langs:
  - csharp
  name: DataGridViewCellParsingEventArgs(Int32,Int32,Object,Type,DataGridViewCellStyle)
  nameWithType: DataGridViewCellParsingEventArgs.DataGridViewCellParsingEventArgs(Int32,Int32,Object,Type,DataGridViewCellStyle)
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.DataGridViewCellParsingEventArgs(Int32,Int32,Object,Type,DataGridViewCellStyle)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Windows.Forms.DataGridViewCellParsingEventArgs&quot;> </xref> klasse."
  syntax:
    content: public DataGridViewCellParsingEventArgs (int rowIndex, int columnIndex, object value, Type desiredType, System.Windows.Forms.DataGridViewCellStyle inheritedCellStyle);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "Radindeksen i cellen som ble endret."
    - id: columnIndex
      type: System.Int32
      description: "Kolonneindeks i cellen som ble endret."
    - id: value
      type: System.Object
      description: "Den nye verdien."
    - id: desiredType
      type: System.Type
      description: "Typen for den nye verdien."
    - id: inheritedCellStyle
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "Stilen som brukes til cellen som ble endret."
  overload: System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex
  id: ColumnIndex
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  langs:
  - csharp
  name: ColumnIndex
  nameWithType: DataGridViewCellParsingEventArgs.ColumnIndex
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Henter kolonneindeks for celledataene som krever analyse."
  remarks: "Bruk ColumnIndex-egenskapen for å hente en indeks i <xref:System.Windows.Forms.DataGridView.Columns%2A>egenskapen for <xref:System.Windows.Forms.DataGridView>.</xref:System.Windows.Forms.DataGridView> </xref:System.Windows.Forms.DataGridView.Columns%2A>"
  example:
  - "The following code example demonstrates using ColumnIndex to discover if the changed cell is in the date column.  \n  \n [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/visualbasic/p-system.windows.forms.d_44_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/cpp/p-system.windows.forms.d_44_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/csharp/p-system.windows.forms.d_44_1.cs)]"
  syntax:
    content: public int ColumnIndex { get; }
    return:
      type: System.Int32
      description: "Kolonneindeks i cellen som ble endret."
  overload: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle
  id: InheritedCellStyle
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  langs:
  - csharp
  name: InheritedCellStyle
  nameWithType: DataGridViewCellParsingEventArgs.InheritedCellStyle
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Henter eller angir stilen som brukes på den redigerte cellen."
  remarks: "Du kan bruke denne egenskapen til å bestemme formateringen aktive cellen. Angi denne egenskapen eller endre egenskapene for objektet som returnerer denne egenskapen har ingen virkning hvis det <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A>er `false` når hendelsesbehandlingen avslutter.</xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> I dette tilfellet den <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, og <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>Egenskaper for cellestilen brukes til å analysere celleverdien.</xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> </xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> </xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#303](~/add/codesnippet/csharp/p-system.windows.forms.d_66_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#303](~/add/codesnippet/visualbasic/p-system.windows.forms.d_66_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewCellStyle InheritedCellStyle { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "En <xref href=&quot;System.Windows.Forms.DataGridViewCellStyle&quot;> </xref> som representerer gjeldende stil i cellen som redigeres. Standardverdien er verdien i cellen <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle*>egenskapen.</xref:System.Windows.Forms.DataGridViewCell.InheritedStyle*>"
  overload: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied
  id: ParsingApplied
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  langs:
  - csharp
  name: ParsingApplied
  nameWithType: DataGridViewCellParsingEventArgs.ParsingApplied
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Henter eller angir en verdi som angir om en celleverdi er analysert."
  remarks: "En <xref:System.Windows.Forms.DataGridViewCellParsingEventHandler>angir egenskapen ParsingApplied som viser om den nye celleverdien ble ble analysert, og ingen flere konvertering er nødvendig.</xref:System.Windows.Forms.DataGridViewCellParsingEventHandler>"
  example:
  - "The following code example sets ParsingApplied to `true` when the cell's value is successfully parsed.  \n  \n [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/visualbasic/p-system.windows.forms.d_1_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/cpp/p-system.windows.forms.d_1_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/csharp/p-system.windows.forms.d_1_1.cs)]"
  syntax:
    content: public bool ParsingApplied { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis celleverdien er analysert; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex
  id: RowIndex
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  langs:
  - csharp
  name: RowIndex
  nameWithType: DataGridViewCellParsingEventArgs.RowIndex
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Henter radindeks i cellen som krever analyse."
  remarks: "Bruk RowIndex-egenskapen for å hente en indeks i <xref:System.Windows.Forms.DataGridView.Rows%2A>egenskapen for <xref:System.Windows.Forms.DataGridView>.</xref:System.Windows.Forms.DataGridView> </xref:System.Windows.Forms.DataGridView.Rows%2A>"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#303](~/add/codesnippet/csharp/p-system.windows.forms.d_48_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#303](~/add/codesnippet/visualbasic/p-system.windows.forms.d_48_1.vb)]"
  syntax:
    content: public int RowIndex { get; }
    return:
      type: System.Int32
      description: "Radindeksen i cellen som ble endret."
  overload: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.ConvertEventArgs
  isExternal: false
  name: System.Windows.Forms.ConvertEventArgs
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: DataGridViewCellParsingEventArgs(Int32,Int32,Object,Type,DataGridViewCellStyle)
  nameWithType: DataGridViewCellParsingEventArgs.DataGridViewCellParsingEventArgs(Int32,Int32,Object,Type,DataGridViewCellStyle)
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.DataGridViewCellParsingEventArgs(Int32,Int32,Object,Type,DataGridViewCellStyle)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.DataGridViewCellStyle
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellStyle
  nameWithType: DataGridViewCellStyle
  fullName: System.Windows.Forms.DataGridViewCellStyle
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: ColumnIndex
  nameWithType: DataGridViewCellParsingEventArgs.ColumnIndex
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: InheritedCellStyle
  nameWithType: DataGridViewCellParsingEventArgs.InheritedCellStyle
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: ParsingApplied
  nameWithType: DataGridViewCellParsingEventArgs.ParsingApplied
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: RowIndex
  nameWithType: DataGridViewCellParsingEventArgs.RowIndex
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor*
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: DataGridViewCellParsingEventArgs
  nameWithType: DataGridViewCellParsingEventArgs.DataGridViewCellParsingEventArgs
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex*
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: ColumnIndex
  nameWithType: DataGridViewCellParsingEventArgs.ColumnIndex
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle*
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: InheritedCellStyle
  nameWithType: DataGridViewCellParsingEventArgs.InheritedCellStyle
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied*
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: ParsingApplied
  nameWithType: DataGridViewCellParsingEventArgs.ParsingApplied
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex*
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: RowIndex
  nameWithType: DataGridViewCellParsingEventArgs.RowIndex
