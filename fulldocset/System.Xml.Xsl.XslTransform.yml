### YamlMime:ManagedReference
items:
- uid: System.Xml.Xsl.XslTransform
  id: XslTransform
  children:
  - System.Xml.Xsl.XslTransform.#ctor
  - System.Xml.Xsl.XslTransform.Load(System.String)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)
  - System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  - System.Xml.Xsl.XslTransform.Transform(System.String,System.String)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  - System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.XmlResolver
  langs:
  - csharp
  name: XslTransform
  nameWithType: XslTransform
  fullName: System.Xml.Xsl.XslTransform
  type: Class
  summary: "Overfører XML-dataene ved hjelp av et omfattende stilarket språk for stilarket som transformeringer (XSLT)."
  remarks: "> [!NOTE]> XslTransform klassen som er foreldet i Microsoft .NET Framework, versjon 2.0. Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       XslTransform støtter syntaksen XSLT 1.0. XSLT-stilarket må bruke navneområdet `http://www.w3.org/1999/XSL/Transform`.       Flere argumenter kan også være lagt til stilarket med <xref:System.Xml.Xsl.XsltArgumentList>klasse.</xref:System.Xml.Xsl.XsltArgumentList> Denne klassen inneholder inndataparametere for stilen ark og filtypen objekter som kan kalles fra stilarket.       Å gjøre XML-dataene: 1.  Opprett et XslTransform-objekt.      2.  Bruk av <xref:System.Xml.Xsl.XslTransform.Load%2A>metode for å laste inn stilarket for transformasjonen.</xref:System.Xml.Xsl.XslTransform.Load%2A> Denne metoden har flere overbelastninger og kan laste inn en stil arket ved hjelp av en <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, eller en URL-adresse med plasseringen av filen.</xref:System.Xml.XPath.IXPathNavigable> </xref:System.Xml.XPath.XPathNavigator> </xref:System.Xml.XmlReader>      3.  Bruk av <xref:System.Xml.Xsl.XslTransform.Transform%2A>metode for å gjøre om XML-data.</xref:System.Xml.Xsl.XslTransform.Transform%2A> Denne metoden har flere overbelastninger og kan håndtere forskjellige typer inndata og utdata. Du kan også angi en <xref:System.Xml.Xsl.XsltArgumentList>som inneholder flere argumenter skal brukes som inndata under transformeringen.</xref:System.Xml.Xsl.XsltArgumentList>       **Sikkerhetshensyn** når du oppretter et program som bruker klassen XslTransform, må du være klar over følgende elementer og hvordan virker:-utvidelse objekter er aktivert som standard. Hvis en <xref:System.Xml.Xsl.XsltArgumentList>objekt som inneholder utvidelsen objekter som er sendt til den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metoden de benyttet.</xref:System.Xml.Xsl.XslTransform.Transform%2A> </xref:System.Xml.Xsl.XsltArgumentList>      -XSLT stilark kan inneholde referanser til andre filer og innebygde Skriptblokkene. En bruker med onde hensikter kan utnytte dette ved å oppgi du med data eller stil ark som når den kjøres vil føre til at datamaskinen for å behandle før datamaskinen kjører lite ressurser.      -XSLT programmer som kjører i et miljø i blandet klarering kan medføre stil arket forfalskning. For eksempel en ondsinnet bruker kan laste inn et objekt med en skadelig stilarket og leverer den til en annen bruker som senere kaller den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metoden og utfører transformeringen.</xref:System.Xml.Xsl.XslTransform.Transform%2A>       Disse sikkerhetsproblemer kan begrenses ved å ikke godta XslTransform objekter, XSLT stilark eller XML-kildedataene fra uklarerte kilder.       **Skripting støtte** denne klassen støtter innebygd skript ved hjelp av den `msxsl:script` elementet.       I versjon 1.1 av .NET Framework avgjør bevis på stilarket som hvilke tillatelser er gitt til innebygde skript.      -Hvis stilarket som ble lastet inn fra en URI Uniform Resource Identifier (), URIEN til å opprette bevis. Denne bevis inneholder URIEN sammen med sin området og sone.      -Hvis stilarket som ble lastet inn med en annen kilde, kan du angi bevis ved å sende en <xref:System.Security.Policy.Evidence?displayProperty=fullName>objekt i <xref:System.Xml.Xsl.XslTransform.Load%2A>metode.</xref:System.Xml.Xsl.XslTransform.Load%2A> </xref:System.Security.Policy.Evidence?displayProperty=fullName> Ellers har skript-samlingen fullstendig klarering.       Bare klarerte brukere: `UnmanagedCode` tillatelse kreves for å kompilere innebygde skriptet. `ControlEvidence`tillatelsen kreves for å angi <xref:System.Security.Policy.Evidence>til den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden.</xref:System.Xml.Xsl.XslTransform.Load%2A> </xref:System.Security.Policy.Evidence> En <xref:System.Security.SecurityException>oppstår hvis oppkalleren ikke har de nødvendige tillatelsene.</xref:System.Security.SecurityException> Se <xref:System.Security.Permissions.SecurityPermission?displayProperty=fullName>og <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>for mer informasjon.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission?displayProperty=fullName>       Den `msxsl:script` elementet har følgende krav: - `msxsl:script` elementet tilhører den `urn:schemas-microsoft-com:xslt` navneområde. Stilarket må inneholde navneområdedeklarasjon `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.      - `msxsl:script` Element kan inneholde en `language` attributt som angir skriptspråket som skal brukes. Verdien for den `language` attributtet må være én av følgende: C#, c Sharp, VB, VisualBasic, JScript eller JavaScript. Fordi språknavnet skiller, er JavaScript og javascript både ugyldig. Hvis en `language` attributtet ikke er angitt, brukes som standard JScript.      - `msxsl:script` Elementet må inneholde en `implements-prefix` attributt som inneholder prefikset som representerer navneområdet som er forbundet med Skriptblokken. Dette navneområdet må være definert i stilarket. En stilarket kan inneholde flere Skriptblokkene som grupperes etter navneområde. Du kan ikke ha Skriptblokkene med flere språk i samme navneområde. Skriptblokkene kan kalle en funksjon som er definert i en annen skriptblokk, angitt i Skriptblokkene ligge i samme navneområde. Innholdet i en skriptblokk analyseres i henhold til reglene og syntaksen skriptspråket (angitt av den `language` attributt). For eksempel hvis du har hatt en C# skriptblokk, kommentarer vil få et prefiks fra den `//` tegn. Kommentarene må være gyldig XML-innholdet.       `Note`Det anbefales at du bryte Skriptblokkene i CDATA-del.      ```   <msxsl:script implements-prefix=&quot;xy&quot; language=&quot;C#&quot;>     <![CDATA[     // Add code here.     ]]>   </msxsl:script>   ```Funksjoner kan deklareres innenfor den `msxsl:script` elementet. Tabellen nedenfor viser navneområdene som støttes av standard.      | Støttede navneområder | Beskrivelse |   |--------------------------|-----------------|   | `System`| Systemklasser. |   | `System.Collection`| Samlingsklasser. |   | `System.Text`| Tekst som behandler klasser. |   | `System.Xml`| Core XML-klasser. |   | `System.Xml.Xsl`| XSLT-klasser. |   | `System.Xml.XPath`| XML Path Language (XPath) klasser. |       Den angitte argumenter og som er definert av funksjonene skriptet må være en av typene det World Wide Web Consortium (W3C) nedenfor. Tabellen nedenfor detaljer tilordningen mellom W3C-typer, XPath eller XSLT-filen, og de tilsvarende .NET Framework-klassene.      | W3C-typen | Tilsvarende .NET klassen |   |--------------|---------------------------|   | Streng (XPath) | `System.String`|   | Boolsk verdi (XPath) | `System.Boolean`|   | Antall (XPath) | `System.Double`|   | Resultat tre Fragment (XSLT) | `System.Xml.XPath.XPathNavigator`|   | Node Set (XPath) | `System.Xml.XPath.XPathNodeIterator`|       Hvis skriptfunksjonen bruker ett av følgende typer numerisk: Int16 UInt16, Int32, UInt32, Int64, UInt64, enkel eller Decimal, disse typene er tvinges til doble som tilordnes til hvor W3C XPath-typen.       Et unntak under kalles en funksjon som kan ikke konvertere resultatet argumentet til en av typene som er nødvendig.      > [!NOTE]  >   `msxsl:script` og `msxsl:node-list` er bare funksjoner fra den `urn:schemas-microsoft-com:xslt` navneområdet som støttes av XslTransform-klassen.       XslTransform har mulighet til å bruke felles language runtime (CLR) kode som en utvidelse mekanisme. Dette gjøres ved å sende en forekomst av en klasse til klassen som XslTransform og kaller offentlige metodene i en XSLT-stilarket. Metodene som er definert med den `params` nøkkelord, slik at et angitt antall parametere som skal sendes, fungerer ikke i dette scenarioet. Se [params](~/add/includes/ajax-current-ext-md.md) for flere detaljer.       Hvis du vil ha mer informasjon se [XSLT-transformeringen med klassen XslTransform](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example transforms the specified XML document and outputs the result to the console.  \n  \n [!code-vb[Classic WebData XslTransform Example#1](~/add/codesnippet/visualbasic/t-system.xml.xsl.xsltran_1.vb)]\n [!code-cs[Classic WebData XslTransform Example#1](~/add/codesnippet/csharp/t-system.xml.xsl.xsltran_1.cs)]"
  syntax:
    content: >-
      [System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")]

      public sealed class XslTransform
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.#ctor
  id: '#ctor'
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: XslTransform()
  nameWithType: XslTransform.XslTransform()
  fullName: System.Xml.Xsl.XslTransform.XslTransform()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Xml.Xsl.XslTransform&quot;> </xref> klasse."
  syntax:
    content: public XslTransform ();
    parameters: []
  overload: System.Xml.Xsl.XslTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.String)
  id: Load(System.String)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(String)
  nameWithType: XslTransform.Load(String)
  fullName: System.Xml.Xsl.XslTransform.Load(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Laster inn XSLT-stilarket som er angitt av en URL-adresse."
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl=``http://www.w3.org/1999/XSL/Transform`.       Denne metoden laster inn XSLT-stilarket, inkludert eventuelle stilark som det refereres til i `xsl:include` og `xsl:import` elementer. Eksterne ressurser oversettes ved hjelp av en <xref:System.Xml.XmlUrlResolver>med ingen legitimasjonsbeskrivelse.</xref:System.Xml.XmlUrlResolver> Hvis stilen ark ligger på en nettverksressurs som krever godkjenning, bruker overbelastningen som tar en <xref:System.Xml.XmlResolver>som ett av argumentene og angi en <xref:System.Xml.XmlResolver>med legitimasjonen som er nødvendig.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       Hvis stilarket som inneholder innebygde skripting, kompilert skriptet med en samling. URIEN på stilarket som brukes til å opprette bevis som brukes til samlingen. Problemer med den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden og stil ark med innebygde skript, se artikkel Q316755 i Microsoft Knowledge Base på http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Hvis oppkalleren ikke har `UnmanagedCode` tillatelse, innebygde skriptet er ikke kompilert og en <xref:System.Security.SecurityException>forårsakes.</xref:System.Security.SecurityException> Se <xref:System.Security.Permissions.SecurityPermission>og <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>for mer informasjon.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example transforms an XML document into an HTML document. It displays the ISBN, title, and price for each book in a table.  \n  \n [!code-cs[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_0_1.cs)]\n [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/cpp/m-system.xml.xsl.xsltran_0_1.cpp)]\n [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_0_1.vb)]  \n  \n The sample uses the following two input files.  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_0_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_0_3.xsl)]"
  syntax:
    content: public void Load (string url);
    parameters:
    - id: url
      type: System.String
      description: "URL-adressen som angir XSLT-stilarket ikke laste inn."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Laste inn ressursen er ikke en gyldig stilarket."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Stilarket som inneholder innebygde skript og oppkalleren har ikke <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> tillatelse."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)
  id: Load(System.Xml.XmlReader)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XmlReader)
  nameWithType: XslTransform.Load(XmlReader)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Laster inn XSLT-stilarket i <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Denne metoden laster inn XSLT-stilarket, inkludert eventuelle stilark som det refereres til i `xsl:include` og `xsl:import` elementer. Eksterne ressurser oversettes ved hjelp av en <xref:System.Xml.XmlUrlResolver>med ingen legitimasjonsbeskrivelse.</xref:System.Xml.XmlUrlResolver> Hvis stilen ark ligger på en nettverksressurs som krever godkjenning, bruker overbelastningen som tar en <xref:System.Xml.XmlResolver>som ett av argumentene og angi en <xref:System.Xml.XmlResolver>med legitimasjonen som er nødvendig.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       Stilarket som laster inn fra den gjeldende noden for den <xref:System.Xml.XmlReader>gjennom alle underordnede verdier.</xref:System.Xml.XmlReader> Dette gjør at du kan bruke en del av et dokument som stilarket. Når den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden returnerer den <xref:System.Xml.XmlReader>plasseres på den neste noden etter slutten på stilarket.</xref:System.Xml.XmlReader> </xref:System.Xml.Xsl.XslTransform.Load%2A> Hvis slutten av dokumentet er nådd, den <xref:System.Xml.XmlReader>er plassert i slutten av filen (EOF).</xref:System.Xml.XmlReader>       Hvis inneholder stilarket enheter, må du angi en <xref:System.Xml.XmlReader>som kan løse enheter (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> returnerer `true`).</xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> </xref:System.Xml.XmlReader> I dette tilfellet en <xref:System.Xml.XmlValidatingReader>kan brukes.</xref:System.Xml.XmlValidatingReader>       Hvis stilarket som inneholder innebygde skripting, kompilert skriptet med en samling. Samlingen har fullstendig klarering. Den anbefalte fremgangsmåten er å angi bevis ved hjelp av den <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>metoden.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Problemer med den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden og stil ark med innebygde skript, se artikkel Q316755 i Microsoft Knowledge Base på http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Hvis oppkalleren ikke har `UnmanagedCode` tillatelse, innebygde skriptet er ikke kompilert og en <xref:System.Security.SecurityException>forårsakes.</xref:System.Security.SecurityException> Se <xref:System.Security.Permissions.SecurityPermission>og <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>for mer informasjon.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example transforms an XML file sorting all the books by title.  \n  \n [!code-cs[XslTransform.Load3#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_1_1.cs)]\n [!code-cpp[XslTransform.Load3#1](~/add/codesnippet/cpp/m-system.xml.xsl.xsltran_1_1.cpp)]\n [!code-vb[XslTransform.Load3#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_1_1.vb)]  \n  \n The example uses the following data files as input.  \n  \n `books.xml`  \n  \n [!code-xml[XslTransform.Load3#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_1_2.xml)]  \n  \n `titles.xsl`  \n  \n [!code-xml[XslTransform.Load3#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_1_3.xsl)]"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "En <xref:System.Xml.XmlReader>objekt som inneholder XSLT-stilarket.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Den gjeldende noden samsvarer ikke med en gyldig stilarket."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Stilarket som inneholder innebygde skript og oppkalleren har ikke <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> tillatelse."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)
  id: Load(System.Xml.XPath.IXPathNavigable)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(IXPathNavigable)
  nameWithType: XslTransform.Load(IXPathNavigable)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Laster inn XSLT-stilarket som finnes i den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>."
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Denne metoden laster inn XSLT-stilarket, inkludert eventuelle stilark som det refereres til i `xsl:include` og `xsl:import` elementer. Eksterne ressurser oversettes ved hjelp av en <xref:System.Xml.XmlUrlResolver>med ingen legitimasjonsbeskrivelse.</xref:System.Xml.XmlUrlResolver> Hvis stilen ark ligger på en nettverksressurs som krever godkjenning, bruker overbelastningen som tar en <xref:System.Xml.XmlResolver>som ett av argumentene og angi en <xref:System.Xml.XmlResolver>med legitimasjonen som er nødvendig.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       Hvis stilarket som inneholder innebygde skripting, kompilert skriptet med en samling. Samlingen har fullstendig klarering. Den anbefalte fremgangsmåten er å angi bevis ved hjelp av den <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>metoden.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Problemer med den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden og stil ark med innebygde skript, se artikkel Q316755 i Microsoft Knowledge Base på http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Hvis oppkalleren ikke har `UnmanagedCode` tillatelse, innebygde skriptet er ikke kompilert og en <xref:System.Security.SecurityException>forårsakes.</xref:System.Security.SecurityException> Se <xref:System.Security.Permissions.SecurityPermission>og <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>for mer informasjon.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "Et objekt som implementerer den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> grensesnitt. I .NET Framework, kan dette være enten en <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (vanligvis en <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), eller en <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> som inneholder XSLT-stilarket."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Laste inn ressursen er ikke en gyldig stilarket."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Stilarket som inneholder innebygde skript og oppkalleren har ikke <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> tillatelse."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)
  id: Load(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XPathNavigator)
  nameWithType: XslTransform.Load(XPathNavigator)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Laster inn XSLT-stilarket som finnes i den <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>."
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Denne metoden laster inn XSLT-stilarket, inkludert eventuelle stilark som det refereres til i `xsl:include` og `xsl:import` elementer. Eksterne ressurser oversettes ved hjelp av en <xref:System.Xml.XmlUrlResolver>med ingen legitimasjonsbeskrivelse.</xref:System.Xml.XmlUrlResolver> Hvis stilen ark ligger på en nettverksressurs som krever godkjenning, bruker overbelastningen som tar en <xref:System.Xml.XmlResolver>som ett av argumentene og angi en <xref:System.Xml.XmlResolver>med legitimasjonen som er nødvendig.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       Stilarket som er lastet inn fra gjeldende posisjon for <xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator> Hvis du vil bruke bare en del av innlastet dokument som stilarket, kan du gå til noden som svarer til starten av stilarket. Når den Versjonsuavhengige innlastingsmetoden returnerer, den <xref:System.Xml.XPath.XPathNavigator>er plassert i begynnelsen av stilarket (på den `xsl:style sheet` node).</xref:System.Xml.XPath.XPathNavigator>       Hvis stilarket som inneholder innebygde skripting, kompilert skriptet med en samling. Samlingen har fullstendig klarering. Den anbefalte fremgangsmåten er å angi bevis ved hjelp av den <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>metoden.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Problemer med den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden og stil ark med innebygde skript, se artikkel Q316755 i Microsoft Knowledge Base på http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Hvis oppkalleren ikke har `UnmanagedCode` tillatelse, innebygde skriptet er ikke kompilert og en <xref:System.Security.SecurityException>forårsakes.</xref:System.Security.SecurityException> Se <xref:System.Security.Permissions.SecurityPermission>og <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>for mer informasjon.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XPath.XPathNavigator stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.XPathNavigator
      description: "En <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> objekt som inneholder XSLT-stilarket."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Den gjeldende noden samsvarer ikke med en gyldig stilarket."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Stilarket som inneholder innebygde skript og oppkalleren har ikke <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> tillatelse."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)
  id: Load(System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(String,XmlResolver)
  nameWithType: XslTransform.Load(String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(String,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Laster inn XSLT-stilarket som er angitt av en URL-adresse."
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Hvis stilarket som inneholder innebygde skripting, kompilert skriptet med en samling. URIEN på stilarket som brukes til å opprette bevis som brukes til samlingen. Problemer med den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden og stil ark med innebygde skript, se artikkel Q316755 i Microsoft Knowledge Base på http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Hvis oppkalleren ikke har `UnmanagedCode` tillatelse, innebygde skriptet er ikke kompilert og en <xref:System.Security.SecurityException>forårsakes.</xref:System.Security.SecurityException> Se <xref:System.Security.Permissions.SecurityPermission>og <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>for mer informasjon.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example transforms an XML document into an HTML document. The example loads an XSLT style sheet which contains an `xsl:include` element referencing another style sheet. An <xref:System.Xml.XmlUrlResolver> is passed to the Load method which sets the credentials necessary to access the network resource for the included style sheet.  \n  \n [!code-vb[XslTransform.Load2#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_3_1.vb)]\n [!code-cs[XslTransform.Load2#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_3_1.cs)]  \n  \n The example uses the following data files as input.  \n  \n `books.xml`  \n  \n [!code-xml[XslTransform.Load2#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_3_2.xml)]  \n  \n `sort.xsl`  \n  \n [!code-xml[XslTransform.Load2#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_3_3.xsl)]  \n  \n `includefile.xsl`  \n  \n [!code-xml[XslTransform.Load2#4](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_3_4.xsl)]"
  syntax:
    content: public void Load (string url, System.Xml.XmlResolver resolver);
    parameters:
    - id: url
      type: System.String
      description: "URL-adressen som angir XSLT-stilarket ikke laste inn."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> skal brukes til å laste inn stilarket og noen stil ark som det refereres til i `xsl:import` og `xsl:include` elementer.       Hvis dette er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, standard <xref href=&quot;System.Xml.XmlUrlResolver&quot;> </xref> med ingen bruker legitimasjonen som brukes til å åpne stilarket. Standard <xref href=&quot;System.Xml.XmlUrlResolver&quot;> </xref> brukes ikke til å løse eventuelle eksterne ressurser i stilarket så `xsl:import` og `xsl:include` elementer ikke er løst.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> hurtigbufres etter Versjonsuavhengige innlastingsmetoden er fullført."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Laste inn ressursen er ikke en gyldig stilarket."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Stilarket som inneholder innebygde skript og oppkalleren har ikke <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> tillatelse."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  id: Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XmlReader,XmlResolver)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Laster inn XSLT-stilarket i <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Denne metoden laster inn XSLT-stilarket, inkludert eventuelle stilark som det refereres til i `xsl:include` og `xsl:import` elementer. Stilarket som laster inn fra den gjeldende noden for den <xref:System.Xml.XmlReader>gjennom alle underordnede verdier.</xref:System.Xml.XmlReader> Dette gjør at du kan bruke en del av et dokument som stilarket.       Når den Versjonsuavhengige innlastingsmetoden returnerer, <xref:System.Xml.XmlReader>plasseres på den neste noden etter slutten på stilarket.</xref:System.Xml.XmlReader> Hvis slutten av dokumentet er nådd, den <xref:System.Xml.XmlReader>er plassert i slutten av filen (EOF).</xref:System.Xml.XmlReader>       Hvis inneholder stilarket enheter, må du angi en <xref:System.Xml.XmlReader>som kan løse enheter (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> returnerer `true`).</xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> </xref:System.Xml.XmlReader> I dette tilfellet en <xref:System.Xml.XmlValidatingReader>kan brukes.</xref:System.Xml.XmlValidatingReader>       Hvis stilarket som inneholder innebygde skripting, kompilert skriptet med en samling. Samlingen har fullstendig klarering. Den anbefalte fremgangsmåten er å angi bevis ved hjelp av den <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>metoden.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Problemer med den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden og stil ark med innebygde skript se artikkel Q316755 i Microsoft Knowledge Base på http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Hvis oppkalleren ikke har `UnmanagedCode` tillatelse, innebygde skriptet er ikke kompilert og en <xref:System.Security.SecurityException>forårsakes.</xref:System.Security.SecurityException> Se <xref:System.Security.Permissions.SecurityPermission>og <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>for mer informasjon.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "En <xref:System.Xml.XmlReader>objekt som inneholder XSLT-stilarket.</xref:System.Xml.XmlReader>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> brukes til å laste inn en CSS-ark som det refereres til i `xsl:import` og `xsl:include` elementer. Hvis dette er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, eksterne ressurser ikke er løst.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> hurtigbufres etter Versjonsuavhengige innlastingsmetoden er fullført."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Den gjeldende noden samsvarer ikke med en gyldig stilarket."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Stilarket som inneholder innebygde skript og oppkalleren har ikke <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> tillatelse."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  id: Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(IXPathNavigable,XmlResolver)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Laster inn XSLT-stilarket som finnes i den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>."
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Hvis stilarket som inneholder innebygde skripting, kompilert skriptet med en samling. Samlingen har fullstendig klarering. Den anbefalte fremgangsmåten er å angi bevis ved hjelp av den <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>metoden.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Problemer med den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden og stil ark med innebygde skript, se artikkel Q316755 i Microsoft Knowledge Base på http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Hvis oppkalleren ikke har `UnmanagedCode` tillatelse, innebygde skriptet er ikke kompilert og en <xref:System.Security.SecurityException>forårsakes.</xref:System.Security.SecurityException> Se <xref:System.Security.Permissions.SecurityPermission>og <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>for mer informasjon.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "Et objekt som implementerer den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> grensesnitt. I .NET Framework, kan dette være enten en <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (vanligvis en <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), eller en <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> som inneholder XSLT-stilarket."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> brukes til å laste inn en CSS-ark som det refereres til i `xsl:import` og `xsl:include` elementer. Hvis dette er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, eksterne ressurser ikke er løst.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> hurtigbufres ikke etter den <xref:System.Xml.Xsl.XslTransform.Load*>metoden er fullført.</xref:System.Xml.Xsl.XslTransform.Load*>"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Laste inn ressursen er ikke en gyldig stilarket."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Stilarket som inneholder innebygde skript og oppkalleren har ikke <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> tillatelse."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  id: Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XPathNavigator,XmlResolver)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Laster inn XSLT-stilarket som finnes i den <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>."
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Stilarket som er lastet inn fra gjeldende posisjon for <xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator> Hvis du vil bruke en del av innlastet dokument som stilarket, kan du gå til noden som svarer til starten av stilarket. Når den Versjonsuavhengige innlastingsmetoden returnerer, den <xref:System.Xml.XPath.XPathNavigator>er plassert i begynnelsen av stilarket (på den `xsl:style sheet` node).</xref:System.Xml.XPath.XPathNavigator>       Hvis stilarket som inneholder innebygde skripting, kompilert skriptet med en samling. Samlingen har fullstendig klarering. Den anbefalte fremgangsmåten er å angi bevis i <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Problemer med den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden og stil ark med innebygde skript, se artikkel Q316755 i Microsoft Knowledge Base på http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Hvis oppkalleren ikke har `UnmanagedCode` tillatelse, innebygde skriptet er ikke kompilert og en <xref:System.Security.SecurityException>forårsakes.</xref:System.Security.SecurityException> Se <xref:System.Security.Permissions.SecurityPermission>og <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>for mer informasjon.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.XPathNavigator
      description: "En <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> objekt som inneholder XSLT-stilarket."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> brukes til å laste inn en CSS-ark som det refereres til i `xsl:import` og `xsl:include` elementer. Hvis dette er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, eksterne ressurser ikke er løst.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> hurtigbufres ikke etter den <xref:System.Xml.Xsl.XslTransform.Load*>metoden er fullført.</xref:System.Xml.Xsl.XslTransform.Load*>"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Den gjeldende noden samsvarer ikke med en gyldig stilarket."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Stilarket som inneholder innebygde skript og oppkalleren har ikke <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> tillatelse."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  id: Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XmlReader,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver,Evidence)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Laster inn XSLT-stilarket i <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> Denne metoden kan du begrense tillatelser på stilarket ved å angi bevis."
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Denne metoden laster inn XSLT-stilarket, inkludert eventuelle stilark som det refereres til i `xsl:include` og `xsl:import` elementer. Stilarket som laster inn fra den gjeldende noden for den <xref:System.Xml.XmlReader>gjennom alle underordnede verdier.</xref:System.Xml.XmlReader> Dette gjør at du kan bruke en del av et dokument som stilarket.       Når den Versjonsuavhengige innlastingsmetoden returnerer, <xref:System.Xml.XmlReader>plasseres på den neste noden etter slutten på stilarket.</xref:System.Xml.XmlReader> Hvis slutten av dokumentet er nådd, den <xref:System.Xml.XmlReader>er plassert i slutten av filen (EOF).</xref:System.Xml.XmlReader>       Hvis inneholder stilarket enheter, må du angi en <xref:System.Xml.XmlReader>som kan løse enheter (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> returnerer `true`).</xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> </xref:System.Xml.XmlReader> I dette tilfellet en <xref:System.Xml.XmlValidatingReader>kan brukes.</xref:System.Xml.XmlValidatingReader>       Problemer med den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden og stil ark med innebygde skript, se artikkel Q316755 i Microsoft Knowledge Base på http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>       Det er forskjellige måter å levere bevis. Tabellen nedenfor beskriver hvilken type bevis oppgi for vanlige scenarier for brukeren."
  example:
  - "The following example performs an XSLT transformation where `xsltReader` is an <xref:System.Xml.XmlReader> containing a style sheet and `secureURL` is a trusted URL that can be used to create <xref:System.Security.Policy.Evidence>. The <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=fullName> method is used to create <xref:System.Security.Policy.Evidence> which is applied to the style sheet.  \n  \n [!code-vb[XslTransform.Load4#1](~/add/codesnippet/visualbasic/a033551f-1c0f-4994-8153-_1.vb)]\n [!code-cs[XslTransform.Load4#1](~/add/codesnippet/csharp/a033551f-1c0f-4994-8153-_1.cs)]\n [!code-cpp[XslTransform.Load4#1](~/add/codesnippet/cpp/a033551f-1c0f-4994-8153-_1.cpp)]"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "En <xref:System.Xml.XmlReader>objektet som inneholder stilarket som skal lastes inn.</xref:System.Xml.XmlReader>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> brukes til å laste inn en CSS-ark som det refereres til i `xsl:import` og `xsl:include` elementer. Hvis dette er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, eksterne ressurser ikke er løst.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> hurtigbufres ikke etter den <xref:System.Xml.Xsl.XslTransform.Load*>metoden er fullført.</xref:System.Xml.Xsl.XslTransform.Load*>"
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "Den <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> angitt for samlingen genereres for Skriptblokken i XSLT-stilarket.       Hvis dette er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, skript ikke støttes behandlet, XSLT `document()` funksjonen støttes ikke, og Privilegerte utvidelsen objekter er ikke tillatt.       Oppkalleren må ha <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> tillatelse for å oppgi bevis for skript-samlingen. Bare klarerte brukere kan angi denne parameteren til <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Den gjeldende noden samsvarer ikke med en gyldig stilarket."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Refereres til stilarket krever funksjoner som ikke er tillatt av bevis som er angitt.       Oppkalleren prøver å oppgi bevis og har ikke <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> tillatelse."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  id: Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(IXPathNavigable,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Laster inn XSLT-stilarket som finnes i den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>. Denne metoden kan du begrense tillatelser på stilarket ved å angi bevis."
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Problemer med den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden og stil ark med innebygde skript, se artikkel Q316755 i Microsoft Knowledge Base på http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>       Det er forskjellige måter å levere bevis. Tabellen nedenfor beskriver hvilken type bevis oppgi for vanlige scenarier for brukeren."
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "Et objekt som implementerer den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> grensesnitt. I .NET Framework, kan dette være enten en <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (vanligvis en <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), eller en <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> som inneholder XSLT-stilarket."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> brukes til å laste inn en CSS-ark som det refereres til i `xsl:import` og `xsl:include` elementer. Hvis dette er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, eksterne ressurser ikke er løst.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> hurtigbufres ikke etter den <xref:System.Xml.Xsl.XslTransform.Load*>metoden er fullført.</xref:System.Xml.Xsl.XslTransform.Load*>"
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "Den <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> angitt for samlingen genereres for Skriptblokken i XSLT-stilarket.       Hvis dette er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, skript ikke støttes behandlet, XSLT `document()` funksjonen støttes ikke, og Privilegerte utvidelsen objekter er ikke tillatt.       Oppkalleren må ha <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> tillatelse for å oppgi bevis for skript-samlingen. Bare klarerte brukere kan angi denne parameteren til <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Laste inn ressursen er ikke en gyldig stilarket."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Refereres til stilarket krever funksjoner som ikke er tillatt av bevis som er angitt.       Oppkalleren prøver å oppgi bevis og har ikke <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> tillatelse."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  id: Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XPathNavigator,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Laster inn XSLT-stilarket som finnes i den <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>. Denne metoden kan du begrense tillatelser på stilarket ved å angi bevis."
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Stilarket som er lastet inn fra gjeldende posisjon for <xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator> Hvis du vil bruke en del av innlastet dokument som stilarket, kan du gå til noden som svarer til starten av stilarket. Når den Versjonsuavhengige innlastingsmetoden returnerer, den <xref:System.Xml.XPath.XPathNavigator>er plassert i begynnelsen av stilarket (på den `xsl:style sheet` node).</xref:System.Xml.XPath.XPathNavigator>       Problemer med den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden og stil ark med innebygde skript, se artikkel Q316755 i Microsoft Knowledge Base på http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>       Det er forskjellige måter å levere bevis. Tabellen nedenfor beskriver hvilken type bevis oppgi for vanlige scenarier for brukeren."
  example:
  - "The following example performs an XSLT transformation using a style sheet from an outside source. Because the style sheet comes from an untrusted source, the `resolver` and `evidence` parameters are set to `null`.  \n  \n [!code-cs[XslTransform.Load5#1](~/add/codesnippet/csharp/3ff68c6b-cad3-409a-909a-_1.cs)]\n [!code-vb[XslTransform.Load5#1](~/add/codesnippet/visualbasic/3ff68c6b-cad3-409a-909a-_1.vb)]"
  syntax:
    content: public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.XPathNavigator
      description: "En <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> objektet som inneholder stilarket som skal lastes inn."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> brukes til å laste inn en CSS-ark som det refereres til i `xsl:import` og `xsl:include` elementer. Hvis dette er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, eksterne ressurser ikke er løst.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> hurtigbufres ikke etter den <xref:System.Xml.Xsl.XslTransform.Load*>metoden er fullført.</xref:System.Xml.Xsl.XslTransform.Load*>"
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "Den <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> angitt for samlingen genereres for Skriptblokken i XSLT-stilarket.       Hvis dette er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, skript ikke støttes behandlet, XSLT `document()` funksjonen støttes ikke, og Privilegerte utvidelsen objekter er ikke tillatt.       Oppkalleren må ha <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> tillatelse for å oppgi bevis for skript-samlingen. Bare klarerte brukere kan angi denne parameteren til <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Den gjeldende noden samsvarer ikke med en gyldig stilarket."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Refereres til stilarket krever funksjoner som ikke er tillatt av bevis som er angitt.       Oppkalleren prøver å oppgi bevis og har ikke <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> tillatelse."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String)
  id: Transform(System.String,System.String)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(String,String)
  nameWithType: XslTransform.Transform(String,String)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformerer XML-dataene i inndatafilen og produserer resultatet til en utdatafil."
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.      > [!NOTE] > Denne metoden er foreldet i .NET Framework-versjonen 1.1. Innstillingen for den <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>bestemmer hvordan XSLT `document()` funksjonen er løst.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Den anbefalte fremgangsmåten er å bruke den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metoden som tar en <xref:System.Xml.XmlResolver>som ett av argumentene.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  example:
  - "The following example transforms the `books.xml` file using the `output.xsl` style sheet and outputs the results to the `books.html` file.  \n  \n [!code-cs[XslTransform.Transform3#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_2_1.cs)]\n [!code-cpp[XslTransform.Transform3#1](~/add/codesnippet/cpp/m-system.xml.xsl.xsltran_2_1.cpp)]\n [!code-vb[XslTransform.Transform3#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_2_1.vb)]  \n  \n The sample uses the following two input files:  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_2_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_2_3.xsl)]"
  syntax:
    content: public void Transform (string inputfile, string outputfile);
    parameters:
    - id: inputfile
      type: System.String
      description: "URL-adressen for om."
    - id: outputfile
      type: System.String
      description: "URL-adressen til utdatafilen."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Overfører XML-dataene i den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> ved hjelp av den angitte <code> args </code> , og resultatet som en <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.      > [!NOTE] > Denne metoden nå er foreldet. Innstillingen for den <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>bestemmer hvordan XSLT `document()` funksjonen er løst.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Den anbefalte fremgangsmåten er å bruke den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metoden som tar en <xref:System.Xml.XmlResolver>som ett av argumentene.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>       Den `args` sammenlignes med den `xsl:param` elementer som er definert i stilarket. Den `xsl:output` elementet støttes ikke når du sender til et <xref:System.Xml.XmlReader>(den `xsl:output` elementet ignoreres).</xref:System.Xml.XmlReader> Se [utdataene fra en XslTransform](~/add/includes/ajax-current-ext-md.md) for mer informasjon.       Dette gjør det mulig å gjøre en asynkron transformering i kildedokumentet.       Transformasjoner gjelder dokumentet som en helhet. Med andre ord, hvis du sender i en node enn rotnoden dokumentet, hindrer dette ikke prosessen transformasjonen tilgang til alle nodene i innlastet dokument. Hvis du vil transformere en node-fragment, må du opprette en <xref:System.Xml.XmlDocument>som inneholder bare noden fragmenter og sende som <xref:System.Xml.XmlDocument>til metoden transformeringen.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       Følgende eksempel utfører en transformering på en node-fragment.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```Eksemplet bruker den `library.xml` og `print_root.xsl` filer som inndata og genererer følgende til konsollen.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Et objekt som implementerer den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> grensesnitt. I .NET Framework, kan dette være enten en <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (vanligvis en <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), eller en <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> som inneholder data om."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som inneholder navneområdet kvalifisert argumentene som brukes som inndata transformeringen."
    return:
      type: System.Xml.XmlReader
      description: "En <xref:System.Xml.XmlReader>som inneholder resultatene av transformeringen.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Overfører XML-dataene i den <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> ved hjelp av den angitte <code> args </code> , og resultatet som en <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den `args` sammenlignes med den `xsl:param` elementer som er definert i stilarket. Transformasjonen valgene gjelder dokumentet som en helhet. Med andre ord, hvis den gjeldende noden angis på en nodetre enn rotnoden dokumentet, hindrer dette ikke prosessen transformasjonen tilgang til alle nodene i innlastet dokument. Etter at transformeringen er utført, den <xref:System.Xml.XPath.XPathNavigator>forblir i sin opprinnelige tilstand.</xref:System.Xml.XPath.XPathNavigator> Dette betyr at noden som er gjeldende før transformasjonen prosessen, forblir den gjeldende noden når av transformeringen har blitt kalt.       Fordi <xref:System.Xml.XmlReader>gir skrivebeskyttet utdata i `xsl:output` elementet ignoreres.</xref:System.Xml.XmlReader> Se [utdataene fra en XslTransform](~/add/includes/ajax-current-ext-md.md) for mer informasjon.       Dette gjør det mulig å gjøre en asynkron transformering i kildedokumentet.      > [!NOTE] > Denne metoden er foreldet. Innstillingen for den <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>egenskapen bestemmer hvordan funksjonen XSLT document() er løst.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Den anbefalte fremgangsmåten er å bruke den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metoden som tar en <xref:System.Xml.XmlResolver>som ett av argumentene.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "En <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> som inneholder data om."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som inneholder navneområdet kvalifisert argumentene som brukes som inndata transformeringen."
    return:
      type: System.Xml.XmlReader
      description: "En <xref:System.Xml.XmlReader>som inneholder resultatene av transformeringen.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod en feil under behandling XSLT-transformeringen.       Merk: Dette er en endring i virkemåten fra tidligere versjoner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> oppstår hvis du bruker Microsoft .NET Framework, versjon 1.1 eller tidligere."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)
  id: Transform(System.String,System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(String,String,XmlResolver)
  nameWithType: XslTransform.Transform(String,String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformerer XML-dataene i inndatafilen og produserer resultatet til en utdatafil."
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`."
  example:
  - "The following example performs an XSLT transformation and outputs to a file. An <xref:System.Xml.XmlUrlResolver> with default credentials is used resolve an external resources. See <xref:System.Net.CredentialCache.DefaultCredentials%2A> for details.  \n  \n [!code-cs[XslTransform.Transform7#1](~/add/codesnippet/csharp/86f1726f-f5ec-4750-8359-_1.cs)]\n [!code-vb[XslTransform.Transform7#1](~/add/codesnippet/visualbasic/86f1726f-f5ec-4750-8359-_1.vb)]\n [!code-cpp[XslTransform.Transform7#1](~/add/codesnippet/cpp/86f1726f-f5ec-4750-8359-_1.cpp)]"
  syntax:
    content: public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);
    parameters:
    - id: inputfile
      type: System.String
      description: "URL-adressen for om."
    - id: outputfile
      type: System.String
      description: "URL-adressen til utdatafilen."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> brukes til å løse XSLT `document()` funksjonen. Hvis dette er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` funksjonen ikke er løst.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> hurtigbufres ikke etter den <xref:System.Xml.Xsl.XslTransform.Transform*>metoden er fullført.</xref:System.Xml.Xsl.XslTransform.Transform*>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Overfører XML-dataene i den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> ved hjelp av den angitte <code> args </code> , og resultatet som <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.      > [!NOTE] > Denne metoden nå er foreldet. Innstillingen for den <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>bestemmer hvordan XSLT `document()` funksjonen er løst.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Den anbefalte fremgangsmåten er å bruke den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metoden som tar en <xref:System.Xml.XmlResolver>som ett av argumentene.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>       Den `args` sammenlignes med den `xsl:param` elementer som er definert i stilarket.       Transformasjoner gjelder dokumentet som en helhet. Med andre ord, hvis du sender i en node enn rotnoden dokumentet, hindrer dette ikke prosessen transformasjonen tilgang til alle nodene i innlastet dokument. Hvis du vil transformere en node-fragment, må du opprette en <xref:System.Xml.XmlDocument>som inneholder bare noden fragmenter og sende som <xref:System.Xml.XmlDocument>til metoden transformeringen.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       Følgende eksempel utfører en transformering på en node-fragment.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```Eksemplet bruker den `library.xml` og `print_root.xsl` filer som inndata og genererer følgende til konsollen.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Et objekt som implementerer den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> grensesnitt. I .NET Framework, kan dette være enten en <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (vanligvis en <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), eller en <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> som inneholder data om."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som inneholder navneområdet kvalifisert argumentene som brukes som inndata transformeringen."
    - id: output
      type: System.IO.Stream
      description: "Dataflyten du vil sende."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod en feil under behandling XSLT-transformeringen.       Merk: Dette er en endring i virkemåten fra tidligere versjoner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> oppstår hvis du bruker Microsoft .NET Framework, versjon 1.1 eller tidligere."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Overfører XML-dataene i den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> ved hjelp av den angitte <code> args </code> , og resultatet som <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>"
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.      > [!NOTE] > Denne metoden nå er foreldet. Innstillingen for den <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>bestemmer hvordan XSLT `document()` funksjonen er løst.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Den anbefalte fremgangsmåten er å bruke den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metoden som tar en <xref:System.Xml.XmlResolver>som ett av argumentene.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>       Den `args` sammenlignes med den `xsl:param` elementer som er definert i stilarket.       Attributtet koding på en `xsl:output` elementet støttes ikke når du sender til <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> Se [utdataene fra en XslTransform](~/add/includes/ajax-current-ext-md.md) for detaljene som `xsl:output` attributter støttes.       Transformasjoner gjelder dokumentet som en helhet. Med andre ord, hvis du sender i en node enn rotnoden dokumentet, hindrer dette ikke prosessen transformasjonen tilgang til alle nodene i innlastet dokument. Hvis du vil transformere en node-fragment, må du opprette en <xref:System.Xml.XmlDocument>som inneholder bare noden fragmenter og sende som <xref:System.Xml.XmlDocument>til metoden transformeringen.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       Følgende eksempel utfører en transformering på en node-fragment.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```Eksemplet bruker den `library.xml` og `print_root.xsl` filer som inndata og genererer følgende til konsollen.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Et objekt som implementerer den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> grensesnitt. I .NET Framework, kan dette være enten en <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (vanligvis en <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), eller en <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> som inneholder data om."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som inneholder navneområdet kvalifisert argumentene som brukes som inndata transformeringen."
    - id: output
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>til som du vil sende.</xref:System.IO.TextWriter>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod en feil under behandling XSLT-transformeringen.       Merk: Dette er en endring i virkemåten fra tidligere versjoner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> oppstår hvis du bruker Microsoft .NET Framework, versjon 1.1 eller tidligere."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Overfører XML-dataene i den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> ved hjelp av den angitte <code> args </code> , og resultatet som en <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den `args` sammenlignes med den `xsl:param` elementer som er definert i stilarket. Den `xsl:output` elementet støttes ikke når du sender til et <xref:System.Xml.XmlReader>(den `xsl:output` elementet ignoreres).</xref:System.Xml.XmlReader> Se [utdataene fra en XslTransform](~/add/includes/ajax-current-ext-md.md) for mer informasjon.       Dette gjør det mulig å gjøre en asynkron transformering i kildedokumentet.       Transformasjoner gjelder dokumentet som en helhet. Med andre ord, hvis du sender i en node enn rotnoden dokumentet, hindrer dette ikke prosessen transformasjonen tilgang til alle nodene i innlastet dokument. Hvis du vil transformere en node-fragment, må du opprette en <xref:System.Xml.XmlDocument>som inneholder bare noden fragmenter og sende som <xref:System.Xml.XmlDocument>til metoden transformeringen.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       Følgende eksempel utfører en transformering på en node-fragment.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```Eksemplet bruker den `library.xml` og `print_root.xsl` filer som inndata og genererer følgende til konsollen.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example transforms an XML document and outputs the results to an `XmlReader`. An <xref:System.Xml.XmlUrlResolver> with the necessary credentials is used to process any XSLT `document()` functions.  \n  \n [!code-cpp[XslTransform.Transform4#1](~/add/codesnippet/cpp/33389ef1-3a26-4334-acdd-_1.cpp)]\n [!code-cs[XslTransform.Transform4#1](~/add/codesnippet/csharp/33389ef1-3a26-4334-acdd-_1.cs)]\n [!code-vb[XslTransform.Transform4#1](~/add/codesnippet/visualbasic/33389ef1-3a26-4334-acdd-_1.vb)]"
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Et objekt som implementerer den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> grensesnitt. I .NET Framework, kan dette være enten en <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (vanligvis en <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), eller en <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> som inneholder data om."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som inneholder navneområdet kvalifisert argumentene som brukes som inndata transformeringen."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> brukes til å løse XSLT `document()` funksjonen. Hvis dette er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` funksjonen ikke er løst.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> hurtigbufres etter metoden transformeringen er fullført."
    return:
      type: System.Xml.XmlReader
      description: "En <xref:System.Xml.XmlReader>som inneholder resultatene av transformeringen.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Overfører XML-dataene i den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> ved hjelp av den angitte <code> args </code> , og resultatet som en <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.      > [!NOTE] > Denne metoden nå er foreldet. Innstillingen for den <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>bestemmer hvordan XSLT `document()` funksjonen er løst.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Den anbefalte fremgangsmåten er å bruke den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metoden som tar en <xref:System.Xml.XmlResolver>som ett av argumentene.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>       Den `args` sammenlignes med den `xsl:param` elementer som er definert i stilarket. Den `xsl:output` elementet støttes ikke når du sender til et <xref:System.Xml.XmlWriter>(`xsl:output` ignoreres).</xref:System.Xml.XmlWriter> Se [utdataene fra en XslTransform](~/add/includes/ajax-current-ext-md.md) for mer informasjon.       Transformasjoner gjelder dokumentet som en helhet. Med andre ord, hvis du sender i en node enn rotnoden dokumentet, hindrer dette ikke prosessen transformasjonen tilgang til alle nodene i innlastet dokument. Hvis du vil transformere en node-fragment, må du opprette en <xref:System.Xml.XmlDocument>som inneholder bare noden fragmenter og sende som <xref:System.Xml.XmlDocument>til metoden transformeringen.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       Følgende eksempel utfører en transformering på en node-fragment.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```Eksemplet bruker den `library.xml` og `print_root.xsl` filer som inndata og genererer følgende til konsollen.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />     <template match=&quot;/&quot;>     Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Et objekt som implementerer den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> grensesnitt. I .NET Framework, kan dette være enten en <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (vanligvis en <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), eller en <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> som inneholder data om."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som inneholder navneområdet kvalifisert argumentene som brukes som inndata transformeringen."
    - id: output
      type: System.Xml.XmlWriter
      description: "Den <xref:System.Xml.XmlWriter>til som du vil sende.</xref:System.Xml.XmlWriter>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod en feil under behandling XSLT-transformeringen.       Merk: Dette er en endring i virkemåten fra tidligere versjoner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> oppstår hvis du bruker Microsoft .NET Framework, versjon 1.1 eller tidligere."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Overfører XML-dataene i den <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> ved hjelp av den angitte <code> args </code> , og resultatet som <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den `args` sammenlignes med den `xsl:param` elementer som er definert i stilarket. Transformasjonen valgene gjelder dokumentet som en helhet. Med andre ord, hvis den gjeldende noden angis på en nodetre enn rotnoden dokumentet, hindrer dette ikke prosessen transformasjonen tilgang til alle nodene i innlastet dokument. Etter at transformeringen er utført, den <xref:System.Xml.XPath.XPathNavigator>forblir i sin opprinnelige tilstand.</xref:System.Xml.XPath.XPathNavigator> Dette betyr at noden som er gjeldende før transformasjonen prosessen, forblir den gjeldende noden når av transformeringen har blitt kalt.       Se [utdataene fra en XslTransform](~/add/includes/ajax-current-ext-md.md) for detaljene som `xsl:output` attributter støttes.      > [!NOTE] > Denne metoden nå er foreldet. Innstillingen for den <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>bestemmer hvordan XSLT `document()` funksjonen er løst.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Den anbefalte fremgangsmåten er å bruke den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metoden som tar en <xref:System.Xml.XmlResolver>som ett av argumentene.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "En <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> som inneholder data om."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som inneholder navneområdet kvalifisert argumentene som brukes som inndata transformeringen."
    - id: output
      type: System.IO.Stream
      description: "Dataflyten du vil sende."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod en feil under behandling XSLT-transformeringen.       Merk: Dette er en endring i virkemåten fra tidligere versjoner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> oppstår hvis du bruker Microsoft .NET Framework, versjon 1.1 eller tidligere."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Overfører XML-dataene i den <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> ved hjelp av den angitte <code> args </code> , og resultatet som <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>"
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den `args` sammenlignes med den `xsl:param` elementer som er definert i stilarket. Transformasjonen valgene gjelder dokumentet som en helhet. Med andre ord, hvis den gjeldende noden angis på en nodetre enn rotnoden dokumentet, hindrer dette ikke prosessen transformasjonen tilgang til alle nodene i innlastet dokument. Når transformasjonen som utføres av <xref:System.Xml.XPath.XPathNavigator>forblir i sin opprinnelige tilstand.</xref:System.Xml.XPath.XPathNavigator> Dette betyr at noden som er gjeldende før transformasjonen prosessen, forblir den gjeldende noden når av transformeringen har blitt kalt.       Attributtet koding på en `xsl:output` elementet støttes ikke når du sender til <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> Se [utdataene fra en XslTransform](~/add/includes/ajax-current-ext-md.md) for detaljene som `xsl:output` attributter støttes.      > [!NOTE] > Denne metoden nå er foreldet. Innstillingen for den <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>bestemmer hvordan XSLT `document()` funksjonen er løst.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Den anbefalte fremgangsmåten er å bruke den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metoden som tar en <xref:System.Xml.XmlResolver>som ett av argumentene.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "En <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> som inneholder data om."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som inneholder navneområdet kvalifisert argumentene som brukes som inndata transformeringen."
    - id: output
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>til som du vil sende.</xref:System.IO.TextWriter>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod en feil under behandling XSLT-transformeringen.       Merk: Dette er en endring i virkemåten fra tidligere versjoner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> oppstår hvis du bruker Microsoft .NET Framework, versjon 1.1 eller tidligere."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Overfører XML-dataene i den <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> ved hjelp av den angitte <code> args </code> , og resultatet som en <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den `args` sammenlignes med den `xsl:param` elementer som er definert i stilarket. Transformasjonen valgene gjelder dokumentet som en helhet. Med andre ord, hvis den gjeldende noden angis på en nodetre enn rotnoden dokumentet, hindrer dette ikke prosessen transformasjonen tilgang til alle nodene i innlastet dokument. Etter at transformeringen er utført, den <xref:System.Xml.XPath.XPathNavigator>forblir i sin opprinnelige tilstand.</xref:System.Xml.XPath.XPathNavigator> Dette betyr at noden som er gjeldende før transformasjonen prosessen, forblir den gjeldende noden når av transformeringen har blitt kalt.       Fordi <xref:System.Xml.XmlReader>gir skrivebeskyttet utdata i `xsl:output` elementet ignoreres.</xref:System.Xml.XmlReader> Se [utdataene fra en XslTransform](~/add/includes/ajax-current-ext-md.md) for mer informasjon.       Dette gjør det mulig å gjøre en asynkron transformering i kildedokumentet."
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "En <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> som inneholder data om."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som inneholder navneområdet kvalifisert argumentene som brukes som inndata transformeringen."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> brukes til å løse XSLT `document()` funksjonen. Hvis dette er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` funksjonen ikke er løst.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> hurtigbufres etter metoden transformeringen er fullført."
    return:
      type: System.Xml.XmlReader
      description: "En <xref:System.Xml.XmlReader>som inneholder resultatene av transformeringen.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod en feil under behandling XSLT-transformeringen.       Merk: Dette er en endring i virkemåten fra tidligere versjoner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> oppstår hvis du bruker Microsoft .NET Framework, versjon 1.1 eller tidligere."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Overfører XML-dataene i den <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> ved hjelp av den angitte argumenter og produserer resultatet som en <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den `args` sammenlignes med den `xsl:param` elementer som er definert i stilarket. Transformasjonen valgene gjelder dokumentet som en helhet. Med andre ord, hvis den gjeldende noden angis på en nodetre enn rotnoden dokumentet, hindrer dette ikke prosessen transformasjonen tilgang til alle nodene i innlastet dokument. Når transformasjonen som utføres av <xref:System.Xml.XPath.XPathNavigator>forblir i sin opprinnelige tilstand.</xref:System.Xml.XPath.XPathNavigator> Dette betyr at noden som er aktuell før transformasjonen prosessen, forblir den gjeldende noden når av transformeringen har blitt kalt.       Den `xsl:output` elementet støttes ikke når du sender til et <xref:System.Xml.XmlWriter>(`xsl:output` ignoreres).</xref:System.Xml.XmlWriter> Se [utdataene fra en XslTransform](~/add/includes/ajax-current-ext-md.md) for mer informasjon.      > [!NOTE] > Denne metoden nå er foreldet. Innstillingen for den <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>bestemmer hvordan XSLT `document()` funksjonen er løst.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Den anbefalte fremgangsmåten er å bruke den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metoden som tar en <xref:System.Xml.XmlResolver>som ett av argumentene.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "En <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> som inneholder data om."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som inneholder navneområdet kvalifisert argumentene som brukes som inndata transformeringen."
    - id: output
      type: System.Xml.XmlWriter
      description: "Den <xref:System.Xml.XmlWriter>til som du vil sende.</xref:System.Xml.XmlWriter>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod en feil under behandling XSLT-transformeringen.       Merk: Dette er en endring i virkemåten fra tidligere versjoner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> oppstår hvis du bruker Microsoft .NET Framework, versjon 1.1 eller tidligere."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Overfører XML-dataene i den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> ved hjelp av den angitte <code> args </code> , og resultatet som <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den `args` sammenlignes med den `xsl:param` elementer som er definert i stilarket.       Transformasjoner gjelder dokumentet som en helhet. Med andre ord, hvis du sender i en node enn rotnoden dokumentet, hindrer dette ikke prosessen transformasjonen tilgang til alle nodene i innlastet dokument. Hvis du vil transformere en node-fragment, må du opprette en <xref:System.Xml.XmlDocument>som inneholder bare noden fragmenter og sende som <xref:System.Xml.XmlDocument>til metoden transformeringen.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       Følgende eksempel utfører en transformering på en node-fragment.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```Eksemplet bruker den `library.xml` og `print_root.xsl` filer som inndata og genererer følgende til konsollen.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example performs a transformation within an ASP.NET page.  \n  \n [!code-vb[XslTransform.Transform5#1](~/add/codesnippet/visualbasic/0aececb0-8968-432a-8b61-_1.aspx)]\n [!code-cs[XslTransform.Transform5#1](~/add/codesnippet/csharp/0aececb0-8968-432a-8b61-_1.aspx)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Et objekt som implementerer den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> grensesnitt. I .NET Framework, kan dette være enten en <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (vanligvis en <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), eller en <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> som inneholder data om."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som inneholder navneområdet kvalifisert argumentene som brukes som inndata transformeringen."
    - id: output
      type: System.IO.Stream
      description: "Dataflyten du vil sende."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> brukes til å løse XSLT `document()` funksjonen. Hvis dette er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` funksjonen ikke er løst.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> hurtigbufres ikke etter den <xref:System.Xml.Xsl.XslTransform.Transform*>metoden er fullført.</xref:System.Xml.Xsl.XslTransform.Transform*>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod en feil under behandling XSLT-transformeringen.       Merk: Dette er en endring i virkemåten fra tidligere versjoner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> oppstår hvis du bruker Microsoft .NET Framework, versjon 1.1 eller tidligere."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Overfører XML-dataene i den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> ved hjelp av den angitte <code> args </code> , og resultatet som <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>"
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den `args` sammenlignes med den `xsl:param` elementer som er definert i stilarket.       Attributtet koding på en `xsl:output` elementet støttes ikke når du sender til <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> Se [utdataene fra en XslTransform](~/add/includes/ajax-current-ext-md.md) for detaljene som `xsl:output` attributter støttes.       Transformasjoner gjelder dokumentet som en helhet. Med andre ord, hvis du sender i en node enn rotnoden dokumentet, hindrer dette ikke prosessen transformasjonen tilgang til alle nodene i innlastet dokument. Hvis du vil transformere en node-fragment, må du opprette en <xref:System.Xml.XmlDocument>som inneholder bare noden fragmenter og sende som <xref:System.Xml.XmlDocument>til metoden transformeringen.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       Følgende eksempel utfører en transformering på en node-fragment.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```Eksemplet bruker den `library.xml` og `print_root.xsl` filer som inndata og genererer følgende til konsollen.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example transforms an XML file and outputs an HTML string. The <xref:System.IO.StringReader> and <xref:System.IO.StringWriter> classes are used to read and write the strings.  \n  \n [!code-vb[XslTransform.Transform6#1](~/add/codesnippet/visualbasic/f37e0493-6ab0-43d9-9439-_1.vb)]\n [!code-cs[XslTransform.Transform6#1](~/add/codesnippet/csharp/f37e0493-6ab0-43d9-9439-_1.cs)]  \n  \n The example uses the `books.xml` file as input.  \n  \n [!code-xml[XslTransform.Transform6#2](~/add/codesnippet/xml/f37e0493-6ab0-43d9-9439-_2.xml)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Et objekt som implementerer den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> grensesnitt. I .NET Framework, kan dette være enten en <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (vanligvis en <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), eller en <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> som inneholder data om."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som inneholder navneområdet kvalifisert argumentene som brukes som inndata transformeringen."
    - id: output
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>til som du vil sende.</xref:System.IO.TextWriter>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> brukes til å løse XSLT `document()` funksjonen. Hvis dette er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` funksjonen ikke er løst.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> hurtigbufres etter metoden transformeringen er fullført."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod en feil under behandling XSLT-transformeringen.       Merk: Dette er en endring i virkemåten fra tidligere versjoner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> oppstår hvis du bruker Microsoft .NET Framework, versjon 1.1 eller tidligere."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Overfører XML-dataene i den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> ved hjelp av den angitte <code> args </code> , og resultatet som en <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den `args` sammenlignes med den `xsl:param` elementer som er definert i stilarket. Den `xsl:output` elementet støttes ikke når du sender til et <xref:System.Xml.XmlWriter>(`xsl:output` ignoreres).</xref:System.Xml.XmlWriter> Se [utdataene fra en XslTransform](~/add/includes/ajax-current-ext-md.md) for mer informasjon.       Transformasjoner gjelder dokumentet som en helhet. Med andre ord, hvis du sender i en node enn rotnoden dokumentet, hindrer dette ikke prosessen transformasjonen tilgang til alle nodene i innlastet dokument. Hvis du vil transformere en node-fragment, må du opprette en <xref:System.Xml.XmlDocument>som inneholder bare noden fragmenter og sende som <xref:System.Xml.XmlDocument>til metoden transformeringen.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       Følgende eksempel utfører en transformering på en node-fragment.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```Eksemplet bruker den `library.xml` og `print_root.xsl` filer som inndata og genererer følgende til konsollen.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />     <template match=&quot;/&quot;>     Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example transforms an XML document into an HTML document. It displays the ISBN, title, and price for each book in a table.  \n  \n [!code-cs[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/csharp/e2f436c8-72f8-4045-80f0-_1.cs)]\n [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/cpp/e2f436c8-72f8-4045-80f0-_1.cpp)]\n [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/visualbasic/e2f436c8-72f8-4045-80f0-_1.vb)]  \n  \n The sample uses the following two input files.  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/e2f436c8-72f8-4045-80f0-_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/e2f436c8-72f8-4045-80f0-_3.xsl)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Et objekt som implementerer den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> grensesnitt. I .NET Framework, kan dette være enten en <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (vanligvis en <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), eller en <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> som inneholder data om."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som inneholder navneområdet kvalifisert argumentene som brukes som inndata transformeringen."
    - id: output
      type: System.Xml.XmlWriter
      description: "Den <xref:System.Xml.XmlWriter>til som du vil sende.</xref:System.Xml.XmlWriter>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> brukes til å løse XSLT `document()` funksjonen. Hvis dette er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` funksjonen ikke er løst.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> hurtigbufres etter metoden transformeringen er fullført."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod en feil under behandling XSLT-transformeringen.       Merk: Dette er en endring i virkemåten fra tidligere versjoner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> oppstår hvis du bruker Microsoft .NET Framework, versjon 1.1 eller tidligere."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Overfører XML-dataene i den <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> ved hjelp av den angitte <code> args </code> , og resultatet som <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den `args` sammenlignes med den `xsl:param` elementer som er definert i stilarket. Transformasjonen valgene gjelder dokumentet som en helhet. Med andre ord, hvis den gjeldende noden angis på en nodetre enn rotnoden dokumentet, hindrer dette ikke prosessen transformasjonen tilgang til alle nodene i innlastet dokument. Etter at transformeringen er utført, den <xref:System.Xml.XPath.XPathNavigator>forblir i sin opprinnelige tilstand.</xref:System.Xml.XPath.XPathNavigator> Dette betyr at noden som er gjeldende før transformasjonen prosessen, forblir den gjeldende noden når av transformeringen har blitt kalt.       Se [utdataene fra en XslTransform](~/add/includes/ajax-current-ext-md.md) for detaljene som `xsl:output` attributter støttes."
  example:
  - "The following example loads a customer table into an <xref:System.Xml.XmlDataDocument> and performs an XSLT transformation to pull the customer data into an HTML table. The example uses the Microsoft SQL Server 2000 Northwind database.  \n  \n [!code-cs[XmlDataDocument.CreateNavigator#1](~/add/codesnippet/csharp/cf85a737-72d0-4c28-b81d-_1.cs)]\n [!code-vb[XmlDataDocument.CreateNavigator#1](~/add/codesnippet/visualbasic/cf85a737-72d0-4c28-b81d-_1.vb)]  \n  \n The example uses the `customers.xsl` file as input.  \n  \n [!code-xml[XmlDataDocument.CreateNavigator#2](~/add/codesnippet/xml/cf85a737-72d0-4c28-b81d-_2.xsl)]"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "En <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> som inneholder data om."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som inneholder navneområdet kvalifisert argumentene som brukes som inndata transformeringen."
    - id: output
      type: System.IO.Stream
      description: "Dataflyten du vil sende."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> brukes til å løse XSLT `document()` funksjonen. Hvis dette er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` funksjonen ikke er løst.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> hurtigbufres etter metoden transformeringen er fullført."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod en feil under behandling XSLT-transformeringen.       Merk: Dette er en endring i virkemåten fra tidligere versjoner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> oppstår hvis du bruker Microsoft .NET Framework, versjon 1.1 eller tidligere."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Overfører XML-dataene i den <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> ved hjelp av den angitte <code> args </code> , og resultatet som <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>"
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den `args` sammenlignes med den `xsl:param` elementer som er definert i stilarket. Transformasjonen valgene gjelder dokumentet som en helhet. Med andre ord, hvis den gjeldende noden angis på en nodetre enn rotnoden dokumentet, hindrer dette ikke prosessen transformasjonen tilgang til alle nodene i innlastet dokument. Når transformasjonen som utføres av <xref:System.Xml.XPath.XPathNavigator>forblir i sin opprinnelige tilstand.</xref:System.Xml.XPath.XPathNavigator> Dette betyr at noden som er gjeldende før transformasjonen prosessen, forblir den gjeldende noden når av transformeringen har blitt kalt.       Attributtet koding på en `xsl:output` elementet støttes ikke når du sender til <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> Se [utdataene fra en XslTransform](~/add/includes/ajax-current-ext-md.md) for detaljene som `xsl:output` attributter støttes."
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "En <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> som inneholder data om."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som inneholder navneområdet kvalifisert argumentene som brukes som inndata transformeringen."
    - id: output
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>til som du vil sende.</xref:System.IO.TextWriter>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> brukes til å løse XSLT `document()` funksjonen. Hvis dette er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` funksjonen ikke er løst.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> hurtigbufres etter metoden transformeringen er fullført."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod en feil under behandling XSLT-transformeringen.       Merk: Dette er en endring i virkemåten fra tidligere versjoner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> oppstår hvis du bruker Microsoft .NET Framework, versjon 1.1 eller tidligere."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Overfører XML-dataene i den <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> ved hjelp av den angitte argumenter og produserer resultatet som en <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>støtter syntaksen XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> XSLT-stilarket må inneholde navneområdedeklarasjon `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den `args` sammenlignes med den `xsl:param` elementer som er definert i stilarket. Transformasjonen valgene gjelder dokumentet som en helhet. Med andre ord, hvis den gjeldende noden angis på en nodetre enn rotnoden dokumentet, hindrer dette ikke prosessen transformasjonen tilgang til alle nodene i innlastet dokument. Når transformasjonen som utføres av <xref:System.Xml.XPath.XPathNavigator>forblir i sin opprinnelige tilstand.</xref:System.Xml.XPath.XPathNavigator> Dette betyr at noden som er aktuell før transformasjonen prosessen, forblir den gjeldende noden når av transformeringen har blitt kalt.       Den `xsl:output` elementet støttes ikke når du sender til et <xref:System.Xml.XmlWriter>(`xsl:output` ignoreres).</xref:System.Xml.XmlWriter> Se [utdataene fra en XslTransform](~/add/includes/ajax-current-ext-md.md) for mer informasjon."
  example:
  - "The following example loads and edits an XML document before performing an XSLT transform.  \n  \n [!code-vb[XslTransform.Transform2#1](~/add/codesnippet/visualbasic/3e32b237-2708-4620-b957-_1.vb)]\n [!code-cs[XslTransform.Transform2#1](~/add/codesnippet/csharp/3e32b237-2708-4620-b957-_1.cs)]\n [!code-cpp[XslTransform.Transform2#1](~/add/codesnippet/cpp/3e32b237-2708-4620-b957-_1.cpp)]"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "En <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> som inneholder data om."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som inneholder navneområdet kvalifisert argumentene som brukes som inndata transformeringen."
    - id: output
      type: System.Xml.XmlWriter
      description: "Den <xref:System.Xml.XmlWriter>til som du vil sende.</xref:System.Xml.XmlWriter>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> brukes til å løse XSLT `document()` funksjonen. Hvis dette er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` funksjonen ikke er løst.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> hurtigbufres etter metoden transformeringen er fullført."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det oppstod en feil under behandling XSLT-transformeringen.       Merk: Dette er en endring i virkemåten fra tidligere versjoner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> oppstår hvis du bruker Microsoft .NET Framework, versjon 1.1 eller tidligere."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.XmlResolver
  id: XmlResolver
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XslTransform.XmlResolver
  fullName: System.Xml.Xsl.XslTransform.XmlResolver
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Angir den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> brukes til å løse eksterne ressurser når den <xref:System.Xml.Xsl.XslTransform.Transform*>-metoden.</xref:System.Xml.Xsl.XslTransform.Transform*>"
  remarks: "> [!NOTE]> Den <xref:System.Xml.Xsl.XslTransform>klassen er foreldet i .NET Framework, versjon 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen er den nye XSLT-prosessoren.</xref:System.Xml.Xsl.XslCompiledTransform> Hvis du vil ha mer informasjon, se [ved hjelp av XslCompiledTransform klassen](~/add/includes/ajax-current-ext-md.md) og [overføring fra XslTransform klasse.](~/add/includes/ajax-current-ext-md.md).       I versjon 1.1 av .NET Framework, bestemmer klareringsnivået for applikasjonen standard virkemåte: `Fully trusted code:` standard <xref:System.Xml.XmlUrlResolver>med ingen bruker legitimasjonen som brukes til å løse den `document()` funksjonen.</xref:System.Xml.XmlUrlResolver> Hvis godkjenning kreves for å få tilgang til eksterne ressursen, kan du bruke denne egenskapen til å angi en <xref:System.Xml.XmlResolver>med legitimasjonen som er nødvendig.</xref:System.Xml.XmlResolver>       `Semi-trusted code:`Egenskapen er satt til `null`, noe som betyr den `document()` funksjonen ikke er løst. Fordi fullstendig klarering kreves for å angi en <xref:System.Xml.XmlResolver>, denne egenskapen også kan ikke angis.</xref:System.Xml.XmlResolver>       Denne løsningen brukes når XSLT `document()` funksjonen aktiveres. Det brukes ikke til å løse `xsl:import` og `xsl:include` elementer som det refereres til i stilarket. Angi en <xref:System.Xml.XmlResolver>brukes til å løse `xsl:import` og `xsl:include` elementer som det refereres til i stilarket bruker den <xref:System.Xml.Xsl.XslTransform.Load%2A>overbelaste som tar en <xref:System.Xml.XmlResolver>som ett av argumentene.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Load%2A> </xref:System.Xml.XmlResolver>      > [!NOTE] > Denne egenskapen er foreldet i .NET Framework-versjonen 1.1. Angi en <xref:System.Xml.XmlResolver>ved hjelp av den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metoden er den anbefalte fremgangsmåten er at.</xref:System.Xml.Xsl.XslTransform.Transform%2A> </xref:System.Xml.XmlResolver> I dette tilfellet den <xref:System.Xml.XmlResolver>hurtigbufres ikke etter den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metoden er fullført.</xref:System.Xml.Xsl.XslTransform.Transform%2A> </xref:System.Xml.XmlResolver>"
  syntax:
    content: public System.Xml.XmlResolver XmlResolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> skal brukes under transformering. Hvis satt til <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, XSLT `document()` funksjonen ikke er løst."
  overload: System.Xml.Xsl.XslTransform.XmlResolver*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.Xsl.XsltCompileException
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltCompileException
  nameWithType: XsltCompileException
  fullName: System.Xml.Xsl.XsltCompileException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Xml.Xsl.XslTransform.#ctor
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XslTransform()
  nameWithType: XslTransform.XslTransform()
  fullName: System.Xml.Xsl.XslTransform.XslTransform()
- uid: System.Xml.Xsl.XslTransform.Load(System.String)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(String)
  nameWithType: XslTransform.Load(String)
  fullName: System.Xml.Xsl.XslTransform.Load(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XmlReader)
  nameWithType: XslTransform.Load(XmlReader)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(IXPathNavigable)
  nameWithType: XslTransform.Load(IXPathNavigable)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable)
- uid: System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: false
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XPathNavigator)
  nameWithType: XslTransform.Load(XPathNavigator)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator)
- uid: System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: false
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(String,XmlResolver)
  nameWithType: XslTransform.Load(String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(String,XmlResolver)
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XmlReader,XmlResolver)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(IXPathNavigable,XmlResolver)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XPathNavigator,XmlResolver)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XmlReader,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver,Evidence)
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(IXPathNavigable,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XPathNavigator,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(String,String)
  nameWithType: XslTransform.Transform(String,String)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList)
- uid: System.Xml.Xsl.XsltArgumentList
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltArgumentList
  nameWithType: XsltArgumentList
  fullName: System.Xml.Xsl.XsltArgumentList
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList)
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(String,String,XmlResolver)
  nameWithType: XslTransform.Transform(String,String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.XmlResolver
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XmlResolver
  nameWithType: XslTransform.XmlResolver
  fullName: System.Xml.Xsl.XslTransform.XmlResolver
- uid: System.Xml.Xsl.XslTransform.#ctor*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XslTransform
  nameWithType: XslTransform.XslTransform
- uid: System.Xml.Xsl.XslTransform.Load*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load
  nameWithType: XslTransform.Load
- uid: System.Xml.Xsl.XslTransform.Transform*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform
  nameWithType: XslTransform.Transform
- uid: System.Xml.Xsl.XslTransform.XmlResolver*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XmlResolver
  nameWithType: XslTransform.XmlResolver
