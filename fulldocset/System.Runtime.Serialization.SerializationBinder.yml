### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.SerializationBinder
  id: SerializationBinder
  children:
  - System.Runtime.Serialization.SerializationBinder.#ctor
  - System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)
  - System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)
  langs:
  - csharp
  name: SerializationBinder
  nameWithType: SerializationBinder
  fullName: System.Runtime.Serialization.SerializationBinder
  type: Class
  summary: "Tillater at brukere styrer innlasting av klassen å kreve hvilken klassen for å laste inn."
  remarks: "Under serialisering sender en formatering informasjonen som kreves for å opprette en forekomst av et objekt av riktig type og versjon. Denne informasjonen inkluderer vanligvis fullstendig navn og samlingsnavnet for objektet. Navnet på samlingen inneholder navn, versjonen og sterkt navn (se [Strong-Named samlinger](~/add/includes/ajax-current-ext-md.md)) hash for samlingen. Som standard bruker deserialisering denne informasjonen til å opprette en forekomst av et identisk objekt (med unntak av samlinger innlasting av begrenset av sikkerhetspolicyen). Noen brukere må kontrollere hvilke klassen for å laste inn, enten fordi klassen har flyttet mellom samlinger eller en annen versjon av klassen kreves på serveren og klientprogrammene.       SerializationBinder kan også brukes for sikkerhet. Det er kanskje noen sikkerhet trusler når du prøver å deserialisere noen data fra en uklarert kilde. Dokumentordneren gir deg muligheten til å kontrollere hvilke typer er lastet inn i din programdomene. Du kan enten beholde forbudte typeliste eller en liste med tillatte typer og for å begrense hvilke typer lastes og forekomstopprettet. I tillegg Vær oppmerksom på hva slags informasjon blir det lagt på nettet, kan du vil sikre (Bruk transport eller melding sikkerhet) når du sender typenavn eller andre data på nettet.      > [!WARNING] > Bare bruke SerializationBinder Hvis du er ferdig sikker på hva slags informasjon serialiseres. Skadelig typer kan føre til uventede resultater.       Dette er en abstrakt basisklasse. Alle dokumentordnere utvide denne klassen."
  example:
  - >-
    [!code-vb[SerializationBinder Example#1](~/add/codesnippet/visualbasic/t-system.runtime.seriali_11_1.vb)]
     [!code-cpp[SerializationBinder Example#1](~/add/codesnippet/cpp/t-system.runtime.seriali_11_1.cpp)]
     [!code-cs[SerializationBinder Example#1](~/add/codesnippet/csharp/t-system.runtime.seriali_11_1.cs)]
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class SerializationBinder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationBinder.#ctor
  id: '#ctor'
  parent: System.Runtime.Serialization.SerializationBinder
  langs:
  - csharp
  name: SerializationBinder()
  nameWithType: SerializationBinder.SerializationBinder()
  fullName: System.Runtime.Serialization.SerializationBinder.SerializationBinder()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Runtime.Serialization.SerializationBinder&quot;> </xref> klasse."
  syntax:
    content: protected SerializationBinder ();
    parameters: []
  overload: System.Runtime.Serialization.SerializationBinder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)
  id: BindToName(System.Type,System.String@,System.String@)
  parent: System.Runtime.Serialization.SerializationBinder
  langs:
  - csharp
  name: BindToName(Type,String,String)
  nameWithType: SerializationBinder.BindToName(Type,String,String)
  fullName: System.Runtime.Serialization.SerializationBinder.BindToName(Type,String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Når overstyrt i en avledet klasse, kontrollerer du bindingen for et serialisert objekt til en type."
  syntax:
    content: public virtual void BindToName (Type serializedType, out string assemblyName, out string typeName);
    parameters:
    - id: serializedType
      type: System.Type
      description: "Typen for objektet i formatering oppretter en ny forekomst av."
    - id: assemblyName
      type: System.String
      description: "Angir den <xref:System.Reflection.Assembly>navnet på serialiserte objektet.</xref:System.Reflection.Assembly>"
    - id: typeName
      type: System.String
      description: "Angir den <xref:System.Type>navnet på serialiserte objektet.</xref:System.Type>"
  overload: System.Runtime.Serialization.SerializationBinder.BindToName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)
  id: BindToType(System.String,System.String)
  parent: System.Runtime.Serialization.SerializationBinder
  langs:
  - csharp
  name: BindToType(String,String)
  nameWithType: SerializationBinder.BindToType(String,String)
  fullName: System.Runtime.Serialization.SerializationBinder.BindToType(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Når overstyrt i en avledet klasse, kontrollerer du bindingen for et serialisert objekt til en type."
  remarks: ''
  example:
  - SerializationBinder Example#1
  syntax:
    content: public abstract Type BindToType (string assemblyName, string typeName);
    parameters:
    - id: assemblyName
      type: System.String
      description: "Angir den <xref:System.Reflection.Assembly>navnet på serialiserte objektet.</xref:System.Reflection.Assembly>"
    - id: typeName
      type: System.String
      description: "Angir den <xref:System.Type>navnet på serialiserte objektet.</xref:System.Type>"
    return:
      type: System.Type
      description: "Typen for objektet i formatering oppretter en ny forekomst av."
  overload: System.Runtime.Serialization.SerializationBinder.BindToType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Serialization.SerializationBinder.#ctor
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: SerializationBinder()
  nameWithType: SerializationBinder.SerializationBinder()
  fullName: System.Runtime.Serialization.SerializationBinder.SerializationBinder()
- uid: System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: BindToName(Type,String,String)
  nameWithType: SerializationBinder.BindToName(Type,String,String)
  fullName: System.Runtime.Serialization.SerializationBinder.BindToName(Type,String,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: BindToType(String,String)
  nameWithType: SerializationBinder.BindToType(String,String)
  fullName: System.Runtime.Serialization.SerializationBinder.BindToType(String,String)
- uid: System.Runtime.Serialization.SerializationBinder.#ctor*
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: SerializationBinder
  nameWithType: SerializationBinder.SerializationBinder
- uid: System.Runtime.Serialization.SerializationBinder.BindToName*
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: BindToName
  nameWithType: SerializationBinder.BindToName
- uid: System.Runtime.Serialization.SerializationBinder.BindToType*
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: BindToType
  nameWithType: SerializationBinder.BindToType
