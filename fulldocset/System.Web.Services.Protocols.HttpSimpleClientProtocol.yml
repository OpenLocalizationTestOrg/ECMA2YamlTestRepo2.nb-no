### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol
  id: HttpSimpleClientProtocol
  children:
  - System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor
  - System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)
  - System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)
  - System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])
  - System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)
  - System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)
  langs:
  - csharp
  name: HttpSimpleClientProtocol
  nameWithType: HttpSimpleClientProtocol
  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol
  type: Class
  summary: "Representerer basisklasse for kommunikasjon med en XML-webtjeneste ved hjelp av enkel protokoller bindinger for HTTP-GET og HTTP-POST."
  remarks: "Denne klassen angir de fleste av implementeringen for kommunikasjon med en XML-webtjeneste sikkerhetskoder ved hjelp av kodere kode parameterne for å returnere verdier til felles MIME-formater. Disse kodere avledet fra <xref:System.Web.Services.Protocols.MimeFormatter>klassen.</xref:System.Web.Services.Protocols.MimeFormatter> Som standard koder en proxy-klassen som er avledet fra HttpSimpleClientProtocol parametere med programmet/x-www-form-urlencoded MIME-typen og svaret i vanlig XML. Egendefinert mime-formaterere kan angis ved hjelp av <xref:System.Web.Services.Protocols.HttpMethodAttribute>attributt, men støttes ikke for integrere dette i en service beskrivelse og proxy generasjon.</xref:System.Web.Services.Protocols.HttpMethodAttribute>       `Notes to Inheritors:`Når du overstyre denne klassen, kan du innføre metoder i den utledede klassen som er spesifikke for en bestemt type en XML-webtjenesten. Metodene bare capture parameterne, og kall basisklassen for å utføre arbeid kommunisere med området. Hvis metodene som er introdusert er asynkrone, kaller den <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A>og <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A>metoder.</xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> </xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> Hvis metodene som er introdusert er synkron, ringer den <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A>metoden.</xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> Angir vanligvis overstyrte konstruktøren den <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A>egenskapen til URIEN for XML-Web service-metoden.</xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A>       Web Services Description Language-verktøyet (Wsdl.exe) genererer avledede klasser av HttpSimpleClientProtocol for en gitt tjenestebeskrivelsen."
  example:
  - "The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service below. The proxy class derives from <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, which derives from the abstract HttpSimpleClientProtocol class.  \n  \n [!code-cs[Classic HttpGetClientProtocol Example#1](~/add/codesnippet/csharp/t-system.web.services.pr_3_1.cs)]\n [!code-cpp[Classic HttpGetClientProtocol Example#1](~/add/codesnippet/cpp/t-system.web.services.pr_3_1.cpp)]\n [!code-vb[Classic HttpGetClientProtocol Example#1](~/add/codesnippet/visualbasic/t-system.web.services.pr_3_1.vb)]  \n  \n The following code example is the `Math` XML Web service, from which the preceding proxy class was created.  \n  \n [!code-vb[Classic HttpSimpleClientProtocol Example#1](~/add/codesnippet/visualbasic/t-system.web.services.pr_3_2.vb)]\n [!code-cpp[Classic HttpSimpleClientProtocol Example#1](~/add/codesnippet/cpp/t-system.web.services.pr_3_2.cpp)]\n [!code-cs[Classic HttpSimpleClientProtocol Example#1](~/add/codesnippet/csharp/t-system.web.services.pr_3_2.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class HttpSimpleClientProtocol : System.Web.Services.Protocols.HttpWebClientProtocol
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Web.Services.Protocols.WebClientProtocol
  - System.Web.Services.Protocols.HttpWebClientProtocol
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  - System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)
  - System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  - System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  - System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  - System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  - System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  - System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  - System.Web.Services.Protocols.WebClientProtocol.Abort
  - System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)
  - System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
  - System.Web.Services.Protocols.WebClientProtocol.Credentials
  - System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)
  - System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
  - System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
  - System.Web.Services.Protocols.WebClientProtocol.Timeout
  - System.Web.Services.Protocols.WebClientProtocol.Url
  - System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  langs:
  - csharp
  name: HttpSimpleClientProtocol()
  nameWithType: HttpSimpleClientProtocol.HttpSimpleClientProtocol()
  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.HttpSimpleClientProtocol()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.Services.Protocols.HttpSimpleClientProtocol&quot;> </xref> klasse."
  syntax:
    content: protected HttpSimpleClientProtocol ();
    parameters: []
  overload: System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)
  id: BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  langs:
  - csharp
  name: BeginInvoke(String,String,Object[],AsyncCallback,Object)
  nameWithType: HttpSimpleClientProtocol.BeginInvoke(String,String,Object[],AsyncCallback,Object)
  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(String,String,Object[],AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Starter en asynkron aktivering av en metode for en XML-webtjenesten."
  remarks: "Den `methodName` parameteren brukes Finn typene for parameterne for å returnere verdier av metoden som aktiverer BeginInvoke-metoden. Den brukes også til å finne egendefinerte attributter som kan ha blitt lagt til metoden. <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>, <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>, og <xref:System.Xml.Serialization.XmlElementAttribute>gir ekstra informasjon om metoden avledede som kreves for HTTP-protokollen.</xref:System.Xml.Serialization.XmlElementAttribute> </xref:System.Web.Services.Protocols.SoapRpcMethodAttribute></xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>       `asyncState`er sendt til `callback` og er inkludert i den <xref:System.IAsyncResult>som er returnert av metoden BeginInvoke.</xref:System.IAsyncResult> Dette er nyttig for å sende informasjon fra konteksten for asynkrone kallet håndtering av asynkront resultat i `callback`."
  example:
  - "The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form starts and completes an asynchronous invocation of the `Add` XML Web service method.  \n  \n [!code-cs[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/add/codesnippet/csharp/610d2bee-8011-4b46-8264-_1.aspx)]\n [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/add/codesnippet/visualbasic/610d2bee-8011-4b46-8264-_1.aspx)]  \n  \n The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below. Within the `BeginAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method starts an asynchronous invocation of the `Add` XML Web service method.  \n  \n [!code-cpp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/add/codesnippet/cpp/610d2bee-8011-4b46-8264-_2.cpp)]\n [!code-cs[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/add/codesnippet/csharp/610d2bee-8011-4b46-8264-_2.cs)]\n [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/add/codesnippet/visualbasic/610d2bee-8011-4b46-8264-_2.vb)]  \n  \n The following code example is the `Math` XML Web service, from which the preceding proxy class was created.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: protected IAsyncResult BeginInvoke (string methodName, string requestUrl, object[] parameters, AsyncCallback callback, object asyncState);
    parameters:
    - id: methodName
      type: System.String
      description: "Navnet på XML Web service-metoden."
    - id: requestUrl
      type: System.String
      description: "URL-adressen skal brukes ved oppretting av <xref:System.Net.WebRequest>.</xref:System.Net.WebRequest>"
    - id: parameters
      type: System.Object[]
      description: "En matrise av objekter som inneholder parametere som skal sendes til XML Web service-metoden. Rekkefølgen på verdiene i matrisen henviser til rekkefølgen parametere i Kall-metoden til den utledede klassen."
    - id: callback
      type: System.AsyncCallback
      description: "Representanten å kalle når asynkrone metodekallet er fullført. Hvis `callback` er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, representanten ikke kalles."
    - id: asyncState
      type: System.Object
      description: "Tilleggsinformasjon som er angitt av en klient."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>som kan sendes til den <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke*>metode for å hente angir returverdier fra XML-Web service-metode.</xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke*> </xref:System.IAsyncResult>"
  overload: System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Forespørselen nådde serverdatamaskinen, men ble ikke behandlet."
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)
  id: EndInvoke(System.IAsyncResult)
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  langs:
  - csharp
  name: EndInvoke(IAsyncResult)
  nameWithType: HttpSimpleClientProtocol.EndInvoke(IAsyncResult)
  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(IAsyncResult)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Fullfører asynkron aktivering av en XML-Web service-metoden ved hjelp av HTTP."
  remarks: ''
  example:
  - "The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form starts and completes an asynchronous invocation of the `Add` XML Web service method.  \n  \n [!code-cs[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/add/codesnippet/csharp/df330565-2b74-43bd-92c4-_1.aspx)]\n [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/add/codesnippet/visualbasic/df330565-2b74-43bd-92c4-_1.aspx)]  \n  \n The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below. Within the `EndAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method starts an asynchronous invocation of the `Add` XML Web service method.  \n  \n [!code-cpp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/add/codesnippet/cpp/df330565-2b74-43bd-92c4-_2.cpp)]\n [!code-cs[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/add/codesnippet/csharp/df330565-2b74-43bd-92c4-_2.cs)]\n [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/add/codesnippet/visualbasic/df330565-2b74-43bd-92c4-_2.vb)]  \n  \n The following code example is the `Math` XML Web service, from which the above proxy class was created.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: protected object EndInvoke (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>returnert fra den <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke*>metoden.</xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke*> </xref:System.IAsyncResult>"
    return:
      type: System.Object
      description: "En matrise av objekter som inneholder returverdien og noen av referanse eller <code> out </code> parametere for XML-Web service-metoden."
  overload: System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>er ikke returverdien fra den <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke*> metoden."
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])
  id: Invoke(System.String,System.String,System.Object[])
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  langs:
  - csharp
  name: Invoke(String,String,Object[])
  nameWithType: HttpSimpleClientProtocol.Invoke(String,String,Object[])
  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(String,String,Object[])
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Aktiverer en XML-Web service-metode ved hjelp av HTTP."
  remarks: "Den `methodName` parameteren brukes Finn typene for parameterne for å returnere verdier av metoden som aktiverer Invoke-metoden. Den brukes også til å finne egendefinerte attributter som kan ha blitt lagt til metoden. <xref:System.Web.Services.Protocols.HttpMethodAttribute>og <xref:System.Xml.Serialization.XmlElementAttribute>gir ekstra informasjon om avledede metoden som kreves for SOAP-protokollen.</xref:System.Xml.Serialization.XmlElementAttribute></xref:System.Web.Services.Protocols.HttpMethodAttribute>"
  example:
  - "The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form synchronously invokes the `Add` XML Web service method.  \n  \n [!code-cs[HttpSimpleClientProtocol.Invoke Example#2](~/add/codesnippet/csharp/3a69f415-9422-4839-9833-_1.aspx)]\n [!code-vb[HttpSimpleClientProtocol.Invoke Example#2](~/add/codesnippet/visualbasic/3a69f415-9422-4839-9833-_1.aspx)]  \n  \n The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below. Within the `Add` method of the proxy class, the Invoke method synchronously invokes the `Add` Web Service method.  \n  \n [!code-vb[HttpSimpleClientProtocol.Invoke Example#1](~/add/codesnippet/visualbasic/3a69f415-9422-4839-9833-_2.vb)]\n [!code-cs[HttpSimpleClientProtocol.Invoke Example#1](~/add/codesnippet/csharp/3a69f415-9422-4839-9833-_2.cs)]\n [!code-cpp[HttpSimpleClientProtocol.Invoke Example#1](~/add/codesnippet/cpp/3a69f415-9422-4839-9833-_2.cpp)]  \n  \n The following code example is the `Math` XML Web service, from which the above proxy class was created.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: protected object Invoke (string methodName, string requestUrl, object[] parameters);
    parameters:
    - id: methodName
      type: System.String
      description: "Navnet på XML Web service-metoden i den utledede klassen som aktiverer Invoke-metoden."
    - id: requestUrl
      type: System.String
      description: "URL-adressen i XML-Web service-metoden klienten ber om."
    - id: parameters
      type: System.Object[]
      description: "En matrise av objekter som inneholder parametere som skal sendes til eksterne XML-webtjenesten. Rekkefølgen på verdiene i matrisen henviser til rekkefølgen parametere i Kall-metoden til den utledede klassen."
    return:
      type: System.Object
      description: "En matrise av objekter som inneholder returverdien og noen ved referanse eller <code> out </code> parameterne utledede klassen-metoden."
  overload: System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Forespørselen nådde serverdatamaskinen, men ble ikke behandlet."
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)
  id: InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  langs:
  - csharp
  name: InvokeAsync(String,String,Object[],SendOrPostCallback)
  nameWithType: HttpSimpleClientProtocol.InvokeAsync(String,String,Object[],SendOrPostCallback)
  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(String,String,Object[],SendOrPostCallback)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Aktiverer den angitte metoden asynkront."
  syntax:
    content: protected void InvokeAsync (string methodName, string requestUrl, object[] parameters, System.Threading.SendOrPostCallback callback);
    parameters:
    - id: methodName
      type: System.String
      description: "Navnet på metoden som skal startes."
    - id: requestUrl
      type: System.String
      description: "Forespørselen URL-adressen for webtjenesten startet."
    - id: parameters
      type: System.Object[]
      description: "Parametere som skal sendes til metoden."
    - id: callback
      type: System.Threading.SendOrPostCallback
      description: "Representanten kalles når metoden er fullført."
  overload: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)
  id: InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  langs:
  - csharp
  name: InvokeAsync(String,String,Object[],SendOrPostCallback,Object)
  nameWithType: HttpSimpleClientProtocol.InvokeAsync(String,String,Object[],SendOrPostCallback,Object)
  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(String,String,Object[],SendOrPostCallback,Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Aktiverer den angitte metoden asynkront mens du opprettholder den tilknyttede tilstanden."
  syntax:
    content: protected void InvokeAsync (string methodName, string requestUrl, object[] parameters, System.Threading.SendOrPostCallback callback, object userState);
    parameters:
    - id: methodName
      type: System.String
      description: "Navnet på metoden som skal startes."
    - id: requestUrl
      type: System.String
      description: "Forespørselen URL-adressen for webtjenesten startet."
    - id: parameters
      type: System.Object[]
      description: "Parametere som skal sendes til metoden."
    - id: callback
      type: System.Threading.SendOrPostCallback
      description: "Representanten kalles når metoden er fullført."
    - id: userState
      type: System.Object
      description: "Et objekt som inneholder tilknyttede statusinformasjon som er sendt til den `callback` delegere når metoden er fullført."
  overload: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: System.Web.Services.Protocols.HttpWebClientProtocol
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  isExternal: false
  name: HttpSimpleClientProtocol()
  nameWithType: HttpSimpleClientProtocol.HttpSimpleClientProtocol()
  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.HttpSimpleClientProtocol()
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  isExternal: false
  name: BeginInvoke(String,String,Object[],AsyncCallback,Object)
  nameWithType: HttpSimpleClientProtocol.BeginInvoke(String,String,Object[],AsyncCallback,Object)
  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(String,String,Object[],AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  isExternal: false
  name: EndInvoke(IAsyncResult)
  nameWithType: HttpSimpleClientProtocol.EndInvoke(IAsyncResult)
  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(IAsyncResult)
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  isExternal: false
  name: Invoke(String,String,Object[])
  nameWithType: HttpSimpleClientProtocol.Invoke(String,String,Object[])
  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(String,String,Object[])
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  isExternal: false
  name: InvokeAsync(String,String,Object[],SendOrPostCallback)
  nameWithType: HttpSimpleClientProtocol.InvokeAsync(String,String,Object[],SendOrPostCallback)
  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(String,String,Object[],SendOrPostCallback)
- uid: System.Threading.SendOrPostCallback
  parent: System.Threading
  isExternal: true
  name: SendOrPostCallback
  nameWithType: SendOrPostCallback
  fullName: System.Threading.SendOrPostCallback
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  isExternal: false
  name: InvokeAsync(String,String,Object[],SendOrPostCallback,Object)
  nameWithType: HttpSimpleClientProtocol.InvokeAsync(String,String,Object[],SendOrPostCallback,Object)
  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(String,String,Object[],SendOrPostCallback,Object)
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor*
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  isExternal: false
  name: HttpSimpleClientProtocol
  nameWithType: HttpSimpleClientProtocol.HttpSimpleClientProtocol
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke*
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  isExternal: false
  name: BeginInvoke
  nameWithType: HttpSimpleClientProtocol.BeginInvoke
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke*
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  isExternal: false
  name: EndInvoke
  nameWithType: HttpSimpleClientProtocol.EndInvoke
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke*
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  isExternal: false
  name: Invoke
  nameWithType: HttpSimpleClientProtocol.Invoke
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync*
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  isExternal: false
  name: InvokeAsync
  nameWithType: HttpSimpleClientProtocol.InvokeAsync
