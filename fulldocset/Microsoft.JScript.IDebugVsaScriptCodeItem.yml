### YamlMime:ManagedReference
items:
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem
  id: IDebugVsaScriptCodeItem
  children:
  - Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate
  - Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)
  langs:
  - csharp
  name: IDebugVsaScriptCodeItem
  nameWithType: IDebugVsaScriptCodeItem
  fullName: Microsoft.JScript.IDebugVsaScriptCodeItem
  type: Interface
  summary: "Definerer metoder som evaluerer uttrykk og analysere strenger. Dette grensesnittet implementeres vanligvis av et objekt som representerer en kodeblokk, og den kalles vanligvis av feilsøkingsprogram. Dette grensesnittet gir ekstra funksjonalitet som kreves av en IActiveScript vert."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("6DFE759A-CB8B-4ca0-A973-1D04E0BF0B53")]

      public interface IDebugVsaScriptCodeItem
  implements: []
  platform:
  - net462
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate
  id: Evaluate
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  langs:
  - csharp
  name: Evaluate()
  nameWithType: IDebugVsaScriptCodeItem.Evaluate()
  fullName: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate()
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Når implementert i en klasse, evaluerer blokker, uttrykk eller uttrykket som er representert av code-elementet, og returnerer verdien. Kalles vanligvis av feilsøkingsprogram som skal evalueres uttrykk (i et overvåkingsvindu, for eksempel). Verdien er resultatet av uttrykket uttrykk. Blokker og setninger er resultatuttrykket siste uttrykket beregnes ved Blokkerings- eller -setningen."
  remarks: "Legg merke til at metoden Evaluate teknisk sett identisk til den <xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A>metoden.</xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A> Bare attributtene formidling variere. Denne versjonen av grensesnittet gjør det mulig for en ubehandlet debugger ikke hente verdien som returneres som en `IUnknown` pekeren i stedet for en `VARIANT`."
  syntax:
    content: public object Evaluate ();
    parameters: []
    return:
      type: System.Object
      description: "Returnerer en verdi som representerer evalueringen av setningen, uttrykk eller blokker."
  overload: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)
  id: ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  langs:
  - csharp
  name: ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
  nameWithType: IDebugVsaScriptCodeItem.ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
  fullName: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: 'Når implementert i en klasse, analyserer strenger, og returnerer analysert ut informasjon. Denne metoden kalles vanligvis av feilsøkingsprogram som skal analysere informasjon om et stoppunkt som er representert som en <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>. Feilsøkingsprogrammet har kanskje et stoppunkt skrevet inn i av bruker i formatet *funksjonsnavn-argumenter ILoffset*. En navngitt stoppunkt streng kan ha en kompleks format, for eksempel `F.B(C.D[], int, arg : double ) : C.Abc + 123.` parameterlisten er valgfritt, fordi IL forskyvningen.'
  syntax:
    content: public bool ParseNamedBreakPoint (string input, out string functionName, out int nargs, out string arguments, out string returnType, out ulong offset);
    parameters:
    - id: input
      type: System.String
      description: "En streng med velformet navngitt stoppunkt gir en funksjon, argumentlisten er valgfritt og valgfri IL forskyvning."
    - id: functionName
      type: System.String
      description: "Ut-parameter analyseres returnerer navnet på funksjonen utenfor Inndatastrengen eller en tom streng hvis Inndatastrengen ikke er korrekt utformet."
    - id: nargs
      type: System.Int32
      description: "Returnerer antall argumenter i listen valgfritt argument ut-parameter. Returnerer null hvis det finnes ingen argumenter liste eller hvis strengen ikke er korrekt utformet."
    - id: arguments
      type: System.String
      description: "Returnerer en plass-separert liste over navnene på typene for alle argumenter i listen argumenter eller en tom streng hvis listen argumenter mangler eller Inndatastrengen ble ikke korrekt utformet ut-parameter."
    - id: returnType
      type: System.String
      description: "Ut-parameter ble returnerer en streng som inneholder Returtypen for funksjonen navnet i inndataene, eller en tom streng hvis Returtypen manglet eller Inndatastrengen ikke korrekt utformet."
    - id: offset
      type: System.UInt64
      description: "Usignerte langt heltall gir IL-forskyvning fra Inndatastrengen eller null hvis det er ingen IL forskyvning eller strengen er ikke korrekt utformet."
    return:
      type: System.Boolean
      description: "Returnerer <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Hvis det navngitte stoppunktet analyseres ble, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> ellers."
  overload: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  isExternal: false
  name: Evaluate()
  nameWithType: IDebugVsaScriptCodeItem.Evaluate()
  fullName: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  isExternal: false
  name: ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
  nameWithType: IDebugVsaScriptCodeItem.ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
  fullName: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate*
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  isExternal: false
  name: Evaluate
  nameWithType: IDebugVsaScriptCodeItem.Evaluate
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint*
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  isExternal: false
  name: ParseNamedBreakPoint
  nameWithType: IDebugVsaScriptCodeItem.ParseNamedBreakPoint
