### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.DataProtectionPermission
  id: DataProtectionPermission
  children:
  - System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.DataProtectionPermissionFlags)
  - System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.DataProtectionPermission.Copy
  - System.Security.Permissions.DataProtectionPermission.Flags
  - System.Security.Permissions.DataProtectionPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.DataProtectionPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.DataProtectionPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.DataProtectionPermission.IsUnrestricted
  - System.Security.Permissions.DataProtectionPermission.ToXml
  - System.Security.Permissions.DataProtectionPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: DataProtectionPermission
  nameWithType: DataProtectionPermission
  fullName: System.Security.Permissions.DataProtectionPermission
  type: Class
  summary: "Kontrollerer muligheten til å få tilgang til krypterte data og minne. Denne klassen kan ikke arves."
  remarks: "Denne tillatelsen brukes til å kontrollere muligheten til å kryptere data og minne ved hjelp av den <xref:System.Security.Cryptography.ProtectedData>og <xref:System.Security.Cryptography.ProtectedMemory>klasser.</xref:System.Security.Cryptography.ProtectedMemory> </xref:System.Security.Cryptography.ProtectedData>"
  syntax:
    content: 'public sealed class DataProtectionPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.DataProtectionPermissionFlags)
  id: '#ctor(System.Security.Permissions.DataProtectionPermissionFlags)'
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: DataProtectionPermission(DataProtectionPermissionFlags)
  nameWithType: DataProtectionPermission.DataProtectionPermission(DataProtectionPermissionFlags)
  fullName: System.Security.Permissions.DataProtectionPermission.DataProtectionPermission(DataProtectionPermissionFlags)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Permissions.DataProtectionPermission&quot;> </xref> klassen med de angitte tillatelsen-flaggene."
  remarks: ''
  example:
  - "The following code example shows the use of the DataProtectionPermission constructor. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#2](~/add/codesnippet/cpp/a7af2eef-8910-4637-aff8-_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#2](~/add/codesnippet/csharp/a7af2eef-8910-4637-aff8-_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#2](~/add/codesnippet/visualbasic/a7af2eef-8910-4637-aff8-_1.vb)]"
  syntax:
    content: public DataProtectionPermission (System.Security.Permissions.DataProtectionPermissionFlags flag);
    parameters:
    - id: flag
      type: System.Security.Permissions.DataProtectionPermissionFlags
      description: "En bitvis kombinasjon av det <xref href=&quot;System.Security.Permissions.DataProtectionPermissionFlags&quot;> </xref> verdier."
  overload: System.Security.Permissions.DataProtectionPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>flags</code>er ikke en gyldig kombinasjon av det <xref href=&quot;System.Security.Permissions.DataProtectionPermissionFlags&quot;> </xref> verdier."
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: DataProtectionPermission(PermissionState)
  nameWithType: DataProtectionPermission.DataProtectionPermission(PermissionState)
  fullName: System.Security.Permissions.DataProtectionPermission.DataProtectionPermission(PermissionState)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Permissions.DataProtectionPermission&quot;> </xref> klassen med den angitte tillatelse-tilstanden."
  remarks: "Oppretter en `None` (fullstendig begrenset) eller `Unrestricted` tilgang til data og minne."
  example:
  - "The following code example shows the use of the DataProtectionPermission constructor. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#9](~/add/codesnippet/cpp/0fcdac9b-6e0b-490f-9cfa-_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#9](~/add/codesnippet/csharp/0fcdac9b-6e0b-490f-9cfa-_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#9](~/add/codesnippet/visualbasic/0fcdac9b-6e0b-490f-9cfa-_1.vb)]"
  syntax:
    content: public DataProtectionPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Én av de <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> verdier."
  overload: System.Security.Permissions.DataProtectionPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>state</code>er ikke et gyldig <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> verdi."
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.Copy
  id: Copy
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: DataProtectionPermission.Copy()
  fullName: System.Security.Permissions.DataProtectionPermission.Copy()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "Oppretter og returnerer en identisk kopi av gjeldende tillatelse."
  remarks: "En kopi av tillatelsen representerer samme tilgang til ressurser som den opprinnelige tillatelsen."
  example:
  - "The following code example shows the use of the Copy method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#5](~/add/codesnippet/cpp/m-system.security.permis_7_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#5](~/add/codesnippet/csharp/m-system.security.permis_7_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#5](~/add/codesnippet/visualbasic/m-system.security.permis_7_1.vb)]"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "En kopi av gjeldende tillatelse."
  overload: System.Security.Permissions.DataProtectionPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.Flags
  id: Flags
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: Flags
  nameWithType: DataProtectionPermission.Flags
  fullName: System.Security.Permissions.DataProtectionPermission.Flags
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "Henter eller angir data- og minnekonfigurasjonen beskyttelse flagg."
  remarks: "Egenskapen angir om den `Protect` og `Unprotect` metoder for den <xref:System.Security.Cryptography.ProtectedData>og <xref:System.Security.Cryptography.ProtectedMemory>klasser kan brukes.</xref:System.Security.Cryptography.ProtectedMemory> </xref:System.Security.Cryptography.ProtectedData>"
  example:
  - "The following code example shows the use of the Flags property. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#10](~/add/codesnippet/cpp/p-system.security.permis_11_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#10](~/add/codesnippet/csharp/p-system.security.permis_11_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#10](~/add/codesnippet/visualbasic/p-system.security.permis_11_1.vb)]"
  syntax:
    content: public System.Security.Permissions.DataProtectionPermissionFlags Flags { get; set; }
    return:
      type: System.Security.Permissions.DataProtectionPermissionFlags
      description: "En bitvis kombinasjon av det <xref href=&quot;System.Security.Permissions.DataProtectionPermissionFlags&quot;> </xref> verdier."
  overload: System.Security.Permissions.DataProtectionPermission.Flags*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den angitte verdien er ikke en gyldig kombinasjon av det <xref href=&quot;System.Security.Permissions.DataProtectionPermissionFlags&quot;> </xref> verdier."
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: DataProtectionPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.DataProtectionPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "Rekonstruerer en tillatelse med en bestemt tilstand fra en XML-koding."
  remarks: "Metoden FromXml Rekonstruerer et <xref:System.Security.Permissions.DataProtectionPermission>objekt fra XML-koding er definert av <xref:System.Security.SecurityElement>klasse.</xref:System.Security.SecurityElement> </xref:System.Security.Permissions.DataProtectionPermission> Bruk den <xref:System.Security.Permissions.DataProtectionPermission.ToXml%2A>metoden XML-kode den <xref:System.Security.Permissions.DataProtectionPermission>, inkludert statusinformasjon.</xref:System.Security.Permissions.DataProtectionPermission> </xref:System.Security.Permissions.DataProtectionPermission.ToXml%2A>"
  example:
  - "The following code example shows the use of the FromXml method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#7](~/add/codesnippet/cpp/600f1736-4257-4de6-bfa2-_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#7](~/add/codesnippet/csharp/600f1736-4257-4de6-bfa2-_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#7](~/add/codesnippet/visualbasic/600f1736-4257-4de6-bfa2-_1.vb)]"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "En <xref href=&quot;System.Security.SecurityElement&quot;> </xref> som inneholder XML-kodingen som brukes til Bygg opp tillatelsen."
  overload: System.Security.Permissions.DataProtectionPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityElement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>securityElement</code>er ikke en gyldig tillatelse-element.       - eller - versjonsnummeret for <code>securityElement</code> støttes ikke."
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: DataProtectionPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.DataProtectionPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "Oppretter og returnerer en tillatelse som er i skjæringspunktet mellom den gjeldende tillatelsene og angitt."
  remarks: "Skjæringspunktet mellom to tillatelsene er en tillatelse som beskriver operasjoner begge beskriver felles. En forespørsel som sender både individuelle tillatelser vil sende skjæringspunktet."
  example:
  - "The following code example shows the use of the Intersect method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#10](~/add/codesnippet/cpp/28e519e8-73a0-40f3-bd6c-_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#10](~/add/codesnippet/csharp/28e519e8-73a0-40f3-bd6c-_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#10](~/add/codesnippet/visualbasic/28e519e8-73a0-40f3-bd6c-_1.vb)]"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Tillatelse til å intersect med gjeldende tillatelse. Det må være den samme typen som gjeldende tillatelse."
    return:
      type: System.Security.IPermission
      description: "En ny tillatelse som representerer skjæringspunktet for den gjeldende tillatelsene og angitt. Denne nye tillatelsen er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis skjæringspunktet er tom."
  overload: System.Security.Permissions.DataProtectionPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>er ikke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> og ikke angir en tillatelse av samme type som gjeldende tillatelse."
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: DataProtectionPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.DataProtectionPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "Avgjør om gjeldende tillatelsen er et delsett av den angitte tillatelsen."
  remarks: "Gjeldende tillatelsen er et delsett av den angitte tillatelsen hvis gjeldende tillatelsen angir et sett med operasjoner som helt finnes i den angitte tillatelsen.  For eksempel en tillatelse for <xref:System.Security.Permissions.DataProtectionPermissionFlags>tilgang er et delsett av en tillatelse for <xref:System.Security.Permissions.DataProtectionPermissionFlags>tilgang.</xref:System.Security.Permissions.DataProtectionPermissionFlags> </xref:System.Security.Permissions.DataProtectionPermissionFlags>"
  example:
  - "The following code example shows the use of the IsSubsetOf method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#3](~/add/codesnippet/cpp/f5f850fa-1969-4642-a180-_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#3](~/add/codesnippet/csharp/f5f850fa-1969-4642-a180-_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#3](~/add/codesnippet/visualbasic/f5f850fa-1969-4642-a180-_1.vb)]"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Tillatelse til å teste for delsett-relasjonen. Denne tillatelsen må være den samme typen som gjeldende tillatelse."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den gjeldende tillatelsen er et delsett av den angitte tillatelsen. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.DataProtectionPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>er ikke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> og ikke angir en tillatelse av samme type som gjeldende tillatelse."
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: DataProtectionPermission.IsUnrestricted()
  fullName: System.Security.Permissions.DataProtectionPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "Returnerer en verdi som angir om den gjeldende tillatelsen er ubegrenset."
  remarks: "En ubegrenset tilgang representerer tilgang til alle ressurser som er beskyttet av tillatelsen."
  example:
  - "The following code example shows the use of the IsUnrestricted method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#4](~/add/codesnippet/cpp/m-system.security.permis_28_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#4](~/add/codesnippet/csharp/m-system.security.permis_28_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#4](~/add/codesnippet/visualbasic/m-system.security.permis_28_1.vb)]"
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den gjeldende tillatelsen er ubegrenset; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.DataProtectionPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: DataProtectionPermission.ToXml()
  fullName: System.Security.Permissions.DataProtectionPermission.ToXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "Oppretter en XML-koding av tillatelsen og den gjeldende tilstanden."
  remarks: "Bruk <xref:System.Security.Permissions.DataProtectionPermission.FromXml%2A>metoden for å gjenopprette statusinformasjon fra <xref:System.Security.SecurityElement>.</xref:System.Security.SecurityElement> </xref:System.Security.Permissions.DataProtectionPermission.FromXml%2A>"
  example:
  - "The following code example shows the use of the ToXml method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#7](~/add/codesnippet/cpp/m-system.security.permis_9_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#7](~/add/codesnippet/csharp/m-system.security.permis_9_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#7](~/add/codesnippet/visualbasic/m-system.security.permis_9_1.vb)]"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "XML-koding for tillatelse, inkludert informasjon om."
  overload: System.Security.Permissions.DataProtectionPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: DataProtectionPermission.Union(IPermission)
  fullName: System.Security.Permissions.DataProtectionPermission.Union(IPermission)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "Oppretter en tillatelse som Unionen av de gjeldende tillatelsene og angitt."
  remarks: "Resultatet av et kall til Union er en tillatelse som representerer alle operasjoner som er representert av både den gjeldende tillatelsene og angitt. En forespørsel som sender enten tillatelse sender sine union."
  example:
  - "The following code example shows the use of the Union method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#6](~/add/codesnippet/cpp/67e342ee-9a58-40b8-a0ec-_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#6](~/add/codesnippet/csharp/67e342ee-9a58-40b8-a0ec-_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#6](~/add/codesnippet/visualbasic/67e342ee-9a58-40b8-a0ec-_1.vb)]"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Tillatelse til å kombineres med gjeldende tillatelse. Det må være av samme type som gjeldende tillatelse."
    return:
      type: System.Security.IPermission
      description: "En ny tillatelse som representerer Unionen av de gjeldende tillatelsene og angitt."
  overload: System.Security.Permissions.DataProtectionPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>er ikke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> og ikke angir en tillatelse av samme type som gjeldende tillatelse."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.DataProtectionPermissionFlags)
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: DataProtectionPermission(DataProtectionPermissionFlags)
  nameWithType: DataProtectionPermission.DataProtectionPermission(DataProtectionPermissionFlags)
  fullName: System.Security.Permissions.DataProtectionPermission.DataProtectionPermission(DataProtectionPermissionFlags)
- uid: System.Security.Permissions.DataProtectionPermissionFlags
  parent: System.Security.Permissions
  isExternal: false
  name: DataProtectionPermissionFlags
  nameWithType: DataProtectionPermissionFlags
  fullName: System.Security.Permissions.DataProtectionPermissionFlags
- uid: System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: DataProtectionPermission(PermissionState)
  nameWithType: DataProtectionPermission.DataProtectionPermission(PermissionState)
  fullName: System.Security.Permissions.DataProtectionPermission.DataProtectionPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.DataProtectionPermission.Copy
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: Copy()
  nameWithType: DataProtectionPermission.Copy()
  fullName: System.Security.Permissions.DataProtectionPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.DataProtectionPermission.Flags
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: Flags
  nameWithType: DataProtectionPermission.Flags
  fullName: System.Security.Permissions.DataProtectionPermission.Flags
- uid: System.Security.Permissions.DataProtectionPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: DataProtectionPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.DataProtectionPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.DataProtectionPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: DataProtectionPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.DataProtectionPermission.Intersect(IPermission)
- uid: System.Security.Permissions.DataProtectionPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: DataProtectionPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.DataProtectionPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.DataProtectionPermission.IsUnrestricted
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: DataProtectionPermission.IsUnrestricted()
  fullName: System.Security.Permissions.DataProtectionPermission.IsUnrestricted()
- uid: System.Security.Permissions.DataProtectionPermission.ToXml
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: ToXml()
  nameWithType: DataProtectionPermission.ToXml()
  fullName: System.Security.Permissions.DataProtectionPermission.ToXml()
- uid: System.Security.Permissions.DataProtectionPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: DataProtectionPermission.Union(IPermission)
  fullName: System.Security.Permissions.DataProtectionPermission.Union(IPermission)
- uid: System.Security.Permissions.DataProtectionPermission.#ctor*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: DataProtectionPermission
  nameWithType: DataProtectionPermission.DataProtectionPermission
- uid: System.Security.Permissions.DataProtectionPermission.Copy*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: Copy
  nameWithType: DataProtectionPermission.Copy
- uid: System.Security.Permissions.DataProtectionPermission.Flags*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: Flags
  nameWithType: DataProtectionPermission.Flags
- uid: System.Security.Permissions.DataProtectionPermission.FromXml*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: FromXml
  nameWithType: DataProtectionPermission.FromXml
- uid: System.Security.Permissions.DataProtectionPermission.Intersect*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: Intersect
  nameWithType: DataProtectionPermission.Intersect
- uid: System.Security.Permissions.DataProtectionPermission.IsSubsetOf*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: DataProtectionPermission.IsSubsetOf
- uid: System.Security.Permissions.DataProtectionPermission.IsUnrestricted*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: DataProtectionPermission.IsUnrestricted
- uid: System.Security.Permissions.DataProtectionPermission.ToXml*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: ToXml
  nameWithType: DataProtectionPermission.ToXml
- uid: System.Security.Permissions.DataProtectionPermission.Union*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: Union
  nameWithType: DataProtectionPermission.Union
