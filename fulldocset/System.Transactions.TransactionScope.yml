### YamlMime:ManagedReference
items:
- uid: System.Transactions.TransactionScope
  id: TransactionScope
  children:
  - System.Transactions.TransactionScope.#ctor
  - System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.Complete
  - System.Transactions.TransactionScope.Dispose
  langs:
  - csharp
  name: TransactionScope
  nameWithType: TransactionScope
  fullName: System.Transactions.TransactionScope
  type: Class
  summary: "Gjør en kodeblokk transaksjonskø. Denne klassen kan ikke arves."
  remarks: "Den <xref:System.Transactions>infrastruktur gir både en eksplisitt programming modell basert på den <xref:System.Transactions.Transaction>klasse, i tillegg til en implisitt programming modellen ved hjelp av klassen TransactionScope, der administreres automatisk transaksjoner av infrastrukturen.</xref:System.Transactions.Transaction> </xref:System.Transactions>      > [!IMPORTANT] > Det anbefales at du oppretter implisitte transaksjoner ved hjelp av klassen TransactionScope, slik at de omkringliggende Transaksjonskonteksten administreres automatisk for deg. Du bør også bruke TransactionScope og <xref:System.Transactions.DependentTransaction>klasse for programmer som krever bruk av den samme transaksjonen på tvers av flere funksjonskall eller flere tråd anrop.</xref:System.Transactions.DependentTransaction> For mer informasjon om denne modellen, kan du se den [implementere en implisitt transaksjon ved hjelp av transaksjonsområdet](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) emnet. Hvis du vil ha mer informasjon om hvordan du skriver et transaksjons-program, se [skriving av en transaksjonskø programmet](http://msdn.microsoft.com/en-us/4a7cc4d1-0891-4605-941f-a933b9ce5bc8).       Ved start av en TransactionScope av den `new` setningen transaksjonsbehandling bestemmer hvilken transaksjon vil delta i programmet. Når bestemt, deltar omfanget alltid i transaksjonen. Beslutningen er basert på to faktorer: om en omkringliggende transaksjon finnes og verdien for den `TransactionScopeOption` parameter i konstruktøren.  Omkringliggende transaksjonen er koden utfører i transaksjonen. Du finner en referanse til omkringliggende transaksjonen ved å kalle statisk <xref:System.Transactions.Transaction.Current%2A>for <xref:System.Transactions.Transaction>klasse.</xref:System.Transactions.Transaction> </xref:System.Transactions.Transaction.Current%2A> For mer informasjon om hvordan denne parameteren brukes, kan du se delen &quot;Flytes transaksjonsbehandling&quot; for den [implementere en implisitt transaksjon ved hjelp av transaksjonsområdet](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) emnet.       Hvis ingen unntak som forekommer innenfor transaksjonsområdet (det vil si mellom initialisering av TransactionScope objekt og kaller av den <xref:System.Transactions.TransactionScope.Dispose%2A>metoden), og deretter transaksjonen som omfanget som brukes til å utføre kan fortsette.</xref:System.Transactions.TransactionScope.Dispose%2A> Hvis det oppstår et unntak i transaksjonsområdet, rulles som den brukes til å utføre transaksjonen tilbake.       Programmet er fullført alt arbeid den vil utføre i en transaksjon, må du først kalle den <xref:System.Transactions.TransactionScope.Complete%2A>metoden bare én gang for å informere om at transaksjonsbehandlingen at den er godkjent til å utføre transaksjonen.</xref:System.Transactions.TransactionScope.Complete%2A> Kan ikke kalle denne metoden avbryter transaksjonen.       Et kall til den <xref:System.Transactions.TransactionScope.Dispose%2A>metoden merker slutten av transaksjonsområdet.</xref:System.Transactions.TransactionScope.Dispose%2A> Unntak som skjer når du kaller denne metoden ikke kan påvirke transaksjonen.       Hvis du endrer verdien for <xref:System.Transactions.Transaction.Current%2A>i et omfang, et unntak når <xref:System.Transactions.TransactionScope.Dispose%2A>kalles.</xref:System.Transactions.TransactionScope.Dispose%2A> </xref:System.Transactions.Transaction.Current%2A> På slutten av omfanget gjenopprettes forrige verdi imidlertid. Hvis du kaller <xref:System.Transactions.TransactionScope.Dispose%2A>på <xref:System.Transactions.Transaction.Current%2A>i en transaksjon omfang som opprettet transaksjonen, avbryter transaksjonen på slutten av omfanget.</xref:System.Transactions.Transaction.Current%2A> </xref:System.Transactions.TransactionScope.Dispose%2A>"
  example:
  - "The following example demonstrates how to use the TransactionScope class to define a block of code to participate in a transaction.  \n  \n [!code-vb[TransactionScope#1](~/add/codesnippet/visualbasic/t-system.transactions.tr_0_1.vb)]\n [!code-cs[TransactionScope#1](~/add/codesnippet/csharp/t-system.transactions.tr_0_1.cs)]"
  syntax:
    content: 'public sealed class TransactionScope : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor
  id: '#ctor'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope()
  nameWithType: TransactionScope.TransactionScope()
  fullName: System.Transactions.TransactionScope.TransactionScope()
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klasse."
  remarks: "Denne konstruktøren oppretter en ny transaksjonsområdet med alternativet transaksjonen omfanget lik <xref:System.Transactions.TransactionScopeOption>.</xref:System.Transactions.TransactionScopeOption> Dette betyr at en transaksjon som kreves av det nye området og omkringliggende transaksjonen brukes hvis det allerede finnes. Hvis ikke, den oppretter en ny transaksjon før du skriver inn omfanget."
  syntax:
    content: public TransactionScope ();
    parameters: []
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)
  id: '#ctor(System.Transactions.Transaction)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(Transaction)
  nameWithType: TransactionScope.TransactionScope(Transaction)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klasse og angir at den angitte transaksjonen som den omsluttende transaksjonen transaksjonskø arbeidet i omfanget bruker denne transaksjonen."
  syntax:
    content: public TransactionScope (System.Transactions.Transaction transactionToUse);
    parameters:
    - id: transactionToUse
      type: System.Transactions.Transaction
      description: "Transaksjonen angis som den omsluttende transaksjonen, slik at transaksjonskø arbeidet i omfanget bruker denne transaksjonen."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Støttes i .NET Framework 4.5.1 og nyere versjoner]       Initialiserer en ny forekomst av den <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klassen med alternativet angitt asynkron flyt."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "En forekomst av den <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> opplisting som beskriver om omkringliggende transaksjonen som er forbundet med transaksjonsområdet flyter på tvers av tråd continuations ved aktivitet eller asynkron/venter på .NET-asynkron programming mønstre."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)
  id: '#ctor(System.Transactions.TransactionScopeOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klassen med de angitte kravene."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "En forekomst av den <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> opplisting som beskriver kravene til transaksjonen som er forbundet med denne transaksjonsområdet."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan)
  id: '#ctor(System.Transactions.Transaction,System.TimeSpan)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(Transaction,TimeSpan)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klasse angitte tidsavbruddsverdien, og angir at den angitte transaksjonen som den omsluttende transaksjonen transaksjonskø arbeidet i omfanget bruker denne transaksjonen."
  syntax:
    content: public TransactionScope (System.Transactions.Transaction transactionToUse, TimeSpan scopeTimeout);
    parameters:
    - id: transactionToUse
      type: System.Transactions.Transaction
      description: "Transaksjonen angis som den omsluttende transaksjonen, slik at transaksjonskø arbeidet i omfanget bruker denne transaksjonen."
    - id: scopeTimeout
      type: System.TimeSpan
      description: "Den <xref:System.TimeSpan>etter som transaksjonsområdet blir tidsavbrutt og avbryter transaksjonen.</xref:System.TimeSpan>"
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Støttes i .NET Framework 4.5.1 og nyere versjoner]       Initialiserer en ny forekomst av den <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klasse og angir at den angitte transaksjonen som den omsluttende transaksjonen transaksjonskø arbeidet i omfanget bruker denne transaksjonen."
  syntax:
    content: public TransactionScope (System.Transactions.Transaction transactionToUse, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: transactionToUse
      type: System.Transactions.Transaction
      description: "Transaksjonen angis som den omsluttende transaksjonen, slik at transaksjonskø arbeidet i omfanget bruker denne transaksjonen."
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "En forekomst av den <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> opplisting som beskriver om omkringliggende transaksjonen som er forbundet med transaksjonsområdet flyter på tvers av tråd continuations ved aktivitet eller asynkron/venter på .NET-asynkron programming mønstre."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TimeSpan)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klassen med angitt tidsavbruddsverdi og krav."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, TimeSpan scopeTimeout);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "En forekomst av den <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> opplisting som beskriver kravene til transaksjonen som er forbundet med denne transaksjonsområdet."
    - id: scopeTimeout
      type: System.TimeSpan
      description: "Den <xref:System.TimeSpan>etter som transaksjonsområdet blir tidsavbrutt og avbryter transaksjonen.</xref:System.TimeSpan>"
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TransactionOptions)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klassen med de angitte kravene."
  remarks: "Når du bruker den `transactionOptions` å angi en <xref:System.Transactions.IsolationLevel>, og området oppretter en transaksjon senere, den nye transaksjonen er knyttet til det angitte Isolasjonsnivået.</xref:System.Transactions.IsolationLevel> Hvis et isolasjonsnivå sendes i sammen med en transaksjon, transaksjonen må ha identiske Isolasjonsnivået eller et unntak."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions transactionOptions);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "En forekomst av den <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> opplisting som beskriver kravene til transaksjonen som er forbundet med denne transaksjonsområdet."
    - id: transactionOptions
      type: System.Transactions.TransactionOptions
      description: "En <xref href=&quot;System.Transactions.TransactionOptions&quot;> </xref> -strukturen som beskriver transaksjonsalternativene til å bruke hvis opprettes en ny transaksjon. Hvis en eksisterende transaksjon brukes, gjelder transaksjonsområdet tidsavbruddsverdien i denne parameteren. Hvis da utløper før området er fjernet, er transaksjonen avbrutt."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Støttes i .NET Framework 4.5.1 og nyere versjoner]       Initialiserer en ny forekomst av den <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klassen med alternativet angitte kravene og asynkron flyt."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "En forekomst av den <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> opplisting som beskriver kravene til transaksjonen som er forbundet med denne transaksjonsområdet."
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "En forekomst av den <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> opplisting som beskriver om omkringliggende transaksjonen som er forbundet med transaksjonsområdet flyter på tvers av tråd continuations ved aktivitet eller asynkron/venter på .NET-asynkron programming mønstre."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)
  id: '#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klassen med angitt tidsavbruddsverdi og COM + interoperabilitet krav, og angir at den angitte transaksjonen som den omsluttende transaksjonen transaksjonskø arbeidet i omfanget bruker denne transaksjonen."
  remarks: '**Obs** denne metoden bruker <xref:System.Security.Permissions.SecurityAction>vil hindre at den blir kalt fra uklarerte kode; imidlertid bare umiddelbar Oppkalleren må har den `FullTrust` som er angitt.</xref:System.Security.Permissions.SecurityAction>'
  syntax:
    content: public TransactionScope (System.Transactions.Transaction transactionToUse, TimeSpan scopeTimeout, System.Transactions.EnterpriseServicesInteropOption interopOption);
    parameters:
    - id: transactionToUse
      type: System.Transactions.Transaction
      description: "Transaksjonen angis som den omsluttende transaksjonen, slik at transaksjonskø arbeidet i omfanget bruker denne transaksjonen."
    - id: scopeTimeout
      type: System.TimeSpan
      description: "Den <xref:System.TimeSpan>etter som transaksjonsområdet blir tidsavbrutt og avbryter transaksjonen.</xref:System.TimeSpan>"
    - id: interopOption
      type: System.Transactions.EnterpriseServicesInteropOption
      description: "En forekomst av den <xref href=&quot;System.Transactions.EnterpriseServicesInteropOption&quot;> </xref> opplisting som beskriver hvordan den tilknyttede transaksjonen samhandler med COM +-transaksjoner."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Støttes i .NET Framework 4.5.1 og nyere versjoner]       Initialiserer en ny forekomst av den <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klasse angitte tidsavbruddsverdien, og angir at den angitte transaksjonen som den omsluttende transaksjonen transaksjonskø arbeidet i omfanget bruker denne transaksjonen."
  syntax:
    content: public TransactionScope (System.Transactions.Transaction transactionToUse, TimeSpan scopeTimeout, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: transactionToUse
      type: System.Transactions.Transaction
      description: "Transaksjonen angis som den omsluttende transaksjonen, slik at transaksjonskø arbeidet i omfanget bruker denne transaksjonen."
    - id: scopeTimeout
      type: System.TimeSpan
      description: "Den <xref:System.TimeSpan>etter som transaksjonsområdet blir tidsavbrutt og avbryter transaksjonen.</xref:System.TimeSpan>"
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "En forekomst av den <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> opplisting som beskriver om omkringliggende transaksjonen som er forbundet med transaksjonsområdet flyter på tvers av tråd continuations ved aktivitet eller asynkron/venter på .NET-asynkron programming mønstre."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Støttes i .NET Framework 4.5.1 og nyere versjoner]       Initialiserer en ny forekomst av den <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klassen med den angitte tidsavbruddsverdi kravene og asynkron flyt alternativet."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, TimeSpan scopeTimeout, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "En forekomst av den <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> opplisting som beskriver kravene til transaksjonen som er forbundet med denne transaksjonsområdet."
    - id: scopeTimeout
      type: System.TimeSpan
      description: "Den <xref:System.TimeSpan>etter som transaksjonsområdet blir tidsavbrutt og avbryter transaksjonen.</xref:System.TimeSpan>"
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "En forekomst av den <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> opplisting som beskriver om omkringliggende transaksjonen som er forbundet med transaksjonsområdet flyter på tvers av tråd continuations ved aktivitet eller asynkron/venter på .NET-asynkron programming mønstre."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klassen med det angitte omfanget og COM + interoperabilitet kravene og transaksjonsalternativene."
  remarks: "Når du bruker den `transactionOptions` å angi en <xref:System.Transactions.IsolationLevel>, og området oppretter en transaksjon senere, den nye transaksjonen er knyttet til det angitte Isolasjonsnivået.</xref:System.Transactions.IsolationLevel> Hvis et isolasjonsnivå sendes i sammen med en transaksjon, transaksjonen må ha identiske Isolasjonsnivået eller et unntak.       **Obs** denne metoden bruker <xref:System.Security.Permissions.SecurityAction>vil hindre at den blir kalt fra uklarerte kode; imidlertid bare umiddelbar Oppkalleren må har den `FullTrust` som er angitt.</xref:System.Security.Permissions.SecurityAction>"
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions transactionOptions, System.Transactions.EnterpriseServicesInteropOption interopOption);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "En forekomst av den <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> opplisting som beskriver kravene til transaksjonen som er forbundet med denne transaksjonsområdet."
    - id: transactionOptions
      type: System.Transactions.TransactionOptions
      description: "En <xref href=&quot;System.Transactions.TransactionOptions&quot;> </xref> -strukturen som beskriver transaksjonsalternativene til å bruke hvis opprettes en ny transaksjon. Hvis en eksisterende transaksjon brukes, gjelder transaksjonsområdet tidsavbruddsverdien i denne parameteren. Hvis da utløper før området er fjernet, er transaksjonen avbrutt."
    - id: interopOption
      type: System.Transactions.EnterpriseServicesInteropOption
      description: "En forekomst av den <xref href=&quot;System.Transactions.EnterpriseServicesInteropOption&quot;> </xref> opplisting som beskriver hvordan den tilknyttede transaksjonen samhandler med COM +-transaksjoner."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Støttes i .NET Framework 4.5.1 og nyere versjoner]       Initialiserer en ny forekomst av den <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> klassen med alternativet angitte kravene og asynkron flyt."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions transactionOptions, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "En forekomst av den <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> opplisting som beskriver kravene til transaksjonen som er forbundet med denne transaksjonsområdet."
    - id: transactionOptions
      type: System.Transactions.TransactionOptions
      description: "En <xref href=&quot;System.Transactions.TransactionOptions&quot;> </xref> -strukturen som beskriver transaksjonsalternativene til å bruke hvis opprettes en ny transaksjon. Hvis en eksisterende transaksjon brukes, gjelder transaksjonsområdet tidsavbruddsverdien i denne parameteren. Hvis da utløper før området er fjernet, er transaksjonen avbrutt."
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "En forekomst av den <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> opplisting som beskriver om omkringliggende transaksjonen som er forbundet med transaksjonsområdet flyter på tvers av tråd continuations ved aktivitet eller asynkron/venter på .NET-asynkron programming mønstre."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.Complete
  id: Complete
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: Complete()
  nameWithType: TransactionScope.Complete()
  fullName: System.Transactions.TransactionScope.Complete()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Angir at alle operasjoner i området er fullført."
  remarks: "Når du være ferdig at alle operasjoner i området er fullført, må du først kalle denne metoden bare én gang for å informere som transaksjonsbehandlingen at tilstanden på tvers av alle ressurser er konsekvent, og transaksjonen ikke kan lagres. Det er svært lurt å sette kallet som den siste setningen i den `using` blokk.       For mer informasjon om hvordan du bruker denne metoden, kan du se den [implementere en implisitt transaksjon ved hjelp av transaksjonsområdet](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) emnet.       Kan ikke kalle denne metoden avbryter transaksjonen, fordi transaksjonsbehandling tolker dette som systemfeil eller unntak i omfanget av transaksjonen. Du må imidlertid også merke at kalle denne metoden ikke garanterer et transaksjonen. Det er bare en måte å informere transaksjonsbehandling for statusen. Etter kalle denne metoden, kan du ikke lenger tilgang til omkringliggende transaksjonen via den <xref:System.Transactions.Transaction.Current%2A>egenskapen og prøve å gjøre, fører det et unntak som.</xref:System.Transactions.Transaction.Current%2A>       Tidsplanen for lagring mellom transportbehandling for ressurser som skjer på den `End Using` setningen hvis den <xref:System.Transactions.TransactionScope>opprettet transaksjonen.</xref:System.Transactions.TransactionScope> Hvis den ikke kan opprette transaksjonen, transaksjonen oppstår når <xref:System.Transactions.CommittableTransaction.Commit%2A>kalles av eieren av den <xref:System.Transactions.CommittableTransaction>objektet.</xref:System.Transactions.CommittableTransaction> </xref:System.Transactions.CommittableTransaction.Commit%2A> På dette tidspunktet transaksjonsbehandling kaller ressursen ledere og informerer dem til commit eller rollback, basert på om denne metoden ble kalt for den <xref:System.Transactions.TransactionScope>objektet.</xref:System.Transactions.TransactionScope>"
  example:
  - "The following example demonstrates how to use the <xref:System.Transactions.TransactionScope> class to define a block of code to participate in a transaction.  \n  \n [!code-vb[TransactionScope#1](~/add/codesnippet/visualbasic/m-system.transactions.tr_1_1.vb)]\n [!code-cs[TransactionScope#1](~/add/codesnippet/csharp/m-system.transactions.tr_1_1.cs)]"
  syntax:
    content: public void Complete ();
    parameters: []
  overload: System.Transactions.TransactionScope.Complete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Denne metoden er allerede blitt kalt én gang."
  platform:
  - net462
- uid: System.Transactions.TransactionScope.Dispose
  id: Dispose
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: Dispose()
  nameWithType: TransactionScope.Dispose()
  fullName: System.Transactions.TransactionScope.Dispose()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Avslutter transaksjonsområdet."
  remarks: "Kaller denne metoden merker slutten av transaksjonsområdet. Hvis den <xref:System.Transactions.TransactionScope>opprettet transaksjonen og <xref:System.Transactions.TransactionScope.Complete%2A>ble kalt for området, den <xref:System.Transactions.TransactionScope>objektet prøver å utføre transaksjonen når denne metoden.</xref:System.Transactions.TransactionScope> </xref:System.Transactions.TransactionScope.Complete%2A> </xref:System.Transactions.TransactionScope>       Bruk av C# `using` konstruksjon sikrer at denne metoden kalles selv om det oppstår et unntak. Unntak som skjer når du kaller denne metoden ikke kan påvirke transaksjonen. Denne metoden også gjenoppretter omkringliggende transaksjonen til den opprinnelige tilstand. En <xref:System.Transactions.TransactionAbortedException>oppstår hvis ikke er transaksjonen skrevet faktisk.</xref:System.Transactions.TransactionAbortedException>       Denne metoden er synkron og blokkerer til transaksjonen er iverksatt eller avbrutt. Derfor bør du passe ekstremt når du bruker denne metoden i en applikasjon i Windows-skjema (WinForm), eller en vranglås kan oppstå. Hvis du kalle denne metoden i en WinForm kontrollhendelsen (for eksempel en knappen), og bruker den synkron <xref:System.Windows.Forms.Control.Invoke%2A>metoden direkte kontrollen for å utføre noen UI-aktiviteter (for eksempel endre farger) mens transaksjonen, skjer en vranglås.</xref:System.Windows.Forms.Control.Invoke%2A> Fordi den <xref:System.Windows.Forms.Control.Invoke%2A>metoden er synkron og blokkerer Arbeidstråden til UI-tråden er ferdig med jobben.</xref:System.Windows.Forms.Control.Invoke%2A> Imidlertid i scenariet vårt venter UI-tråden også Arbeidstråden ikke gjennomføre transaksjonen. Resultatet er at ingen kan fortsette og omfanget venter på ubestemt tid å fullføre transaksjonen. Du må bruke <xref:System.Windows.Forms.Control.BeginInvoke%2A>snarere enn <xref:System.Windows.Forms.Control.Invoke%2A>der det er mulig, fordi den er asynkront og dermed mindre utsatt for vranglås.</xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control.BeginInvoke%2A>       For mer informasjon om hvordan du bruker denne metoden, kan du se den [implementere en implisitt transaksjon ved hjelp av transaksjonsområdet](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) emnet."
  example:
  - "The following example demonstrates how to use the <xref:System.Transactions.TransactionScope> class to define a block of code to participate in a transaction.  \n  \n [!code-vb[TransactionScope#1](~/add/codesnippet/visualbasic/m-system.transactions.tr_0_1.vb)]\n [!code-cs[TransactionScope#1](~/add/codesnippet/csharp/m-system.transactions.tr_0_1.cs)]"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Transactions.TransactionScope.Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Transactions.TransactionScope.#ctor
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope()
  nameWithType: TransactionScope.TransactionScope()
  fullName: System.Transactions.TransactionScope.TransactionScope()
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(Transaction)
  nameWithType: TransactionScope.TransactionScope(Transaction)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScopeAsyncFlowOption
  parent: System.Transactions
  isExternal: false
  name: TransactionScopeAsyncFlowOption
  nameWithType: TransactionScopeAsyncFlowOption
  fullName: System.Transactions.TransactionScopeAsyncFlowOption
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption)
- uid: System.Transactions.TransactionScopeOption
  parent: System.Transactions
  isExternal: false
  name: TransactionScopeOption
  nameWithType: TransactionScopeOption
  fullName: System.Transactions.TransactionScopeOption
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(Transaction,TimeSpan)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TimeSpan)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TransactionOptions)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions)
- uid: System.Transactions.TransactionOptions
  parent: System.Transactions
  isExternal: false
  name: TransactionOptions
  nameWithType: TransactionOptions
  fullName: System.Transactions.TransactionOptions
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
- uid: System.Transactions.EnterpriseServicesInteropOption
  parent: System.Transactions
  isExternal: false
  name: EnterpriseServicesInteropOption
  nameWithType: EnterpriseServicesInteropOption
  fullName: System.Transactions.EnterpriseServicesInteropOption
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScope.Complete
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: Complete()
  nameWithType: TransactionScope.Complete()
  fullName: System.Transactions.TransactionScope.Complete()
- uid: System.Transactions.TransactionScope.Dispose
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: Dispose()
  nameWithType: TransactionScope.Dispose()
  fullName: System.Transactions.TransactionScope.Dispose()
- uid: System.Transactions.TransactionScope.#ctor*
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope
  nameWithType: TransactionScope.TransactionScope
- uid: System.Transactions.TransactionScope.Complete*
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: Complete
  nameWithType: TransactionScope.Complete
- uid: System.Transactions.TransactionScope.Dispose*
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: Dispose
  nameWithType: TransactionScope.Dispose
