### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.Grammar
  id: Grammar
  children:
  - System.Speech.Recognition.Grammar.#ctor
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)
  - System.Speech.Recognition.Grammar.#ctor(System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.String,System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)
  - System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])
  - System.Speech.Recognition.Grammar.Enabled
  - System.Speech.Recognition.Grammar.IsStg
  - System.Speech.Recognition.Grammar.Loaded
  - System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  - System.Speech.Recognition.Grammar.Name
  - System.Speech.Recognition.Grammar.Priority
  - System.Speech.Recognition.Grammar.ResourceName
  - System.Speech.Recognition.Grammar.RuleName
  - System.Speech.Recognition.Grammar.SpeechRecognized
  - System.Speech.Recognition.Grammar.StgInit(System.Object[])
  - System.Speech.Recognition.Grammar.Weight
  langs:
  - csharp
  name: Grammar
  nameWithType: Grammar
  fullName: System.Speech.Recognition.Grammar
  type: Class
  summary: "Kjøretidsobjektet som refererer til en tale recognition grammatikk der et program kan definerer begrensninger for talegjenkjenning."
  remarks: "En tale recognition grammatikk er et sett med regler eller begrensninger som definerer en motor for talegjenkjenning kan gjenkjenne som betydning inndata. Du finner mer informasjon om å opprette og bruke tale recognition grammars [talegjenkjenning](http://msdn.microsoft.com/en-us/6a7dc524-07fc-4862-8d48-8c10dc64b919), [opprette Grammars ved hjelp av XML](http://msdn.microsoft.com/en-us/2d799487-49c6-4cc9-b42f-f71cd3824fe1), [opprette Grammars ved hjelp av GrammarBuilder](http://msdn.microsoft.com/en-us/7e2cc577-cb05-4318-9da3-7c8675d3d9ae), og [opprette Grammars ved hjelp av SrgsGrammar](http://msdn.microsoft.com/en-us/e4d9f96e-2241-4c39-b9e0-ac9ef4e9a906).       Når du skriver et grammatikk, må du bygge den til en grammatikk-objektet som en motor for talegjenkjenning kan laste og programmet kan bruke under kjøring til å administrere talegjenkjenning. Du kan bruke en <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktøren for å opprette en forekomst av grammatikk fra en <xref:System.Speech.Recognition.GrammarBuilder>eller <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>objekt, eller fra en fil eller <xref:System.IO.Stream>som inneholder en beskrivelse av grammatikk i et format som støttes.</xref:System.IO.Stream> </xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> </xref:System.Speech.Recognition.GrammarBuilder> </xref:System.Speech.Recognition.Grammar.%23ctor%2A> Formater som støttes omfatter følgende:-filer i XML-format som samsvarer med W3C [tale Recognition grammatikk spesifikasjonen (SRGS) versjon 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -Grammars er kompilert til en binær fil med en alle cfg filen filtypen grammatikk konstruktører som tillater filer i XML-format grammatikk i tilhørende argumentene kompileres XML-grammars til et binært format til å optimalisere dem for innlasting og forbruk av en motor for talegjenkjenning. Du kan redusere tiden som kreves for å lage et grammatikk objekt fra en XML-format grammatikk ved kompilering grammatikk på forhånd, ved hjelp av en av de <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>metoder.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>       Et program motor for talegjenkjenning, som administreres av en <xref:System.Speech.Recognition.SpeechRecognizer>eller <xref:System.Speech.Recognition.SpeechRecognitionEngine>objekt, kan laste inn flere tale recognition grammars.</xref:System.Speech.Recognition.SpeechRecognitionEngine> </xref:System.Speech.Recognition.SpeechRecognizer> Programmet uavhengig kan aktivere eller deaktivere individuelle grammars ved å angi den <xref:System.Speech.Recognition.Grammar.Enabled%2A>egenskapen og endre recognition virkemåte gjennom grammatikk egenskaper som den <xref:System.Speech.Recognition.Grammar.Priority%2A>og <xref:System.Speech.Recognition.Grammar.Weight%2A>Egenskaper.</xref:System.Speech.Recognition.Grammar.Weight%2A> </xref:System.Speech.Recognition.Grammar.Priority%2A> </xref:System.Speech.Recognition.Grammar.Enabled%2A>       Grammatikken <xref:System.Speech.Recognition.Grammar.SpeechRecognized>denne hendelsen oppstår når inndataene samsvarer med en bane til grammatikk.</xref:System.Speech.Recognition.Grammar.SpeechRecognized>      > [!NOTE] > Det er lurt å kontrollere at alle URI eller DLL-filen som brukes til å lage et grammatikk-objekt.   >> Angi sikkerhet for å opprette en forekomst av grammatikk fra en DLL-fil eller en grammatikk som støtter skripting programmer Windows og tale-plattformen.   >> Skript i grammatikk objektene kjøres alltid som om lastet ned fra en webside i den `Internet Zone`. Common Language Runtime (CLR) isoleres alle DLL-filer som er lastet inn for å få en grammatikk definisjon."
  example:
  - "The following example constructs a Grammar object from a speech recognition grammar defined in a XML file (cities.xml). The content of the cities.xml file appears in the following XML example.  \n  \n```c#  \n// Load a cities grammar from a local file and return the grammar object.   \nprivate static Grammar CreateGrammarFromFile()  \n{  \n  Grammar citiesGrammar = new Grammar(@\"c:\\temp\\cities.xml\");  \n  citiesGrammar.Name = \"SRGS File Cities Grammar\";  \n  return citiesGrammar;  \n}  \n  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item> Seattle </item>  \n      <item> Los Angeles </item>  \n      <item> New York </item>  \n      <item> Miami </item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Grammar: {(_uri != null ? "uri=" + _uri.ToString () + " " : "") + "rule=" + _ruleName }")]

      public class Grammar
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor
  id: '#ctor'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar()
  nameWithType: Grammar.Grammar()
  fullName: System.Speech.Recognition.Grammar.Grammar()
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klassen"
  syntax:
    content: protected Grammar ();
    parameters: []
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream)
  nameWithType: Grammar.Grammar(Stream)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klassen fra <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "Denne konstruktøren sende ikke parametrene til initialisering behandlingsprogram, og beskrivelsen kan ikke definere en initialisering behandlingsprogrammet som krever argumenter.       Denne konstruktøren kan opprette en <xref:System.Speech.Recognition.Grammar>forekomst fra følgende formater:-filer i XML-format som samsvarer med W3C [tale Recognition grammatikk spesifikasjonen (SRGS) versjon 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -Grammars er kompilert til en binær fil med filtypen alle cfg denne konstruktøren kompilerer filer i XML-format grammatikk til et binært format til å optimalisere dem for innlasting og forbruk av en motor for talegjenkjenning.</xref:System.Speech.Recognition.Grammar> Du kan redusere tiden som kreves for å lage en <xref:System.Speech.Recognition.Grammar>objektet fra en XML-format grammatikk ved kompilering grammatikk på forhånd, ved hjelp av en av de <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>metoder.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       En SRGS grammatikk kan definere en rot-regel. Opprette en <xref:System.Speech.Recognition.Grammar>objekt fra en dataflyt og angi en rot regel, bruker du <xref:System.Speech.Recognition.Grammar.%23ctor%2A>eller <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktør.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>       Opprette en <xref:System.Speech.Recognition.Grammar>objekt fra en dataflyt og angi en basis-URIEN brukes til å løse referanser til relativ regel, bruker den <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktør.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example creates a speech recognition grammar from a local SRGS file (cities.xml) using a file stream. The content of the cities.xml file appears following C# example.  \n  \n```c#  \n  \n// Load a cities grammar from an I/O stream and    \n// return the new grammar.   \nprivate static Grammar CreateGrammarFromStream()  \n{  \n  string fileName = @\"c:\\temp\\cities.xml\";  \n  Grammar citiesGrammar =  \n    new Grammar(new FileStream(fileName, FileMode.Open));  \n  citiesGrammar.Name = \"Stream Cities Grammar\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "En dataflyt som beskriver en tale recognition grammatikk i et format som støttes."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>Beskriver en grammatikk som ikke inneholder en rot-regel."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Dataflyten inneholder ikke en gyldig beskrivelse av en grammatikk eller beskriver en grammatikk som inneholder en Regelreferanse som ikke kan løses."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)
  id: '#ctor(System.Speech.Recognition.GrammarBuilder)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(GrammarBuilder)
  nameWithType: Grammar.Grammar(GrammarBuilder)
  fullName: System.Speech.Recognition.Grammar.Grammar(GrammarBuilder)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klasse fra en <xref href=&quot;System.Speech.Recognition.GrammarBuilder&quot;> </xref> objektet."
  remarks: "For mer informasjon om hvordan du bruker den <xref:System.Speech.Recognition.GrammarBuilder>klassen for å definere en grammatikk, kan du se [opprette Grammars ved hjelp av GrammarBuilder](http://msdn.microsoft.com/en-us/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</xref:System.Speech.Recognition.GrammarBuilder>"
  example:
  - "The following example creates a speech recognition grammar using <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects. The Grammar constructor creates a <xref:System.Speech.Recognition.Grammar> object from the <xref:System.Speech.Recognition.GrammarBuilder> object.  \n  \n```c#  \n  \n// Create a grammar using a GrammarBuilder and return the new grammar.   \nprivate static Grammar CreateGrammarBuilderGrammar()  \n{  \n  GrammarBuilder builder = new GrammarBuilder();  \n  \n  Choices cityChoice = new Choices (new string[]   \n  {\"Seattle\", \"New York\", \"Miami\", \"Los Angeles\"});  \n  \n  builder.Append(\"I would like to fly from\");  \n  builder.Append(cityChoice);  \n  builder.Append(\"to\");  \n  builder.Append(cityChoice);  \n  \n  Grammar citiesGrammar = new Grammar(builder);  \n  citiesGrammar.Name = \"GrammarBuilder Cities Grammar\";  \n  \n  return citiesGrammar;  \n}  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.GrammarBuilder builder);
    parameters:
    - id: builder
      type: System.Speech.Recognition.GrammarBuilder
      description: "En forekomst av <xref href=&quot;System.Speech.Recognition.GrammarBuilder&quot;> </xref> som inneholder begrensningene for tale recognition grammatikk."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument)
  nameWithType: Grammar.Grammar(SrgsDocument)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initialiserer en ny forekomst av en <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klasse fra en <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> objektet."
  remarks: "Denne konstruktøren ikke sende parametere til initialisering-behandlingsprogrammet og <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>kan ikke inneholde en initialisering behandlingsprogrammet som krever argumenter.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>       En <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>kan ha en rot-regel.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> Opprette en <xref:System.Speech.Recognition.Grammar>objekt som angir en rot regel, bruk av <xref:System.Speech.Recognition.Grammar.%23ctor%2A>eller <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktør.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>       Opprette en talegjenkjenning <xref:System.Speech.Recognition.Grammar>fra en <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>og angi en basis-URIEN brukes til å løse referanser til relativ regel, bruker den <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktør.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example creates a speech recognition grammar in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instance, which is then used to construct a <xref:System.Speech.Recognition.Grammar> object.  \n  \n```c#  \nprivate static Grammar CreateSrgsDocumentGrammar()  \n{  \n  // Create the SrgsDocument.  \n  SrgsDocument document = new SrgsDocument();  \n  \n  // Create the Cities rule and add it to the document.  \n  SrgsRule citiesRule = new SrgsRule(\"Cities\");  \n  \n  SrgsOneOf cityChoice = new SrgsOneOf();  \n  cityChoice.Add(new SrgsItem(\"Seattle\"));  \n  cityChoice.Add(new SrgsItem(\"Los Angeles\"));  \n  cityChoice.Add(new SrgsItem(\"New York\"));  \n  cityChoice.Add(new SrgsItem(\"Miami\"));  \n  \n  citiesRule.Add(cityChoice);  \n  document.Rules.Add(citiesRule);  \n  \n  // Create the Main rule and add it to the document.  \n  SrgsRule mainRule = new SrgsRule(\"Main\");  \n  mainRule.Scope = SrgsRuleScope.Public;  \n  \n  SrgsItem item = new SrgsItem(\"I would like to fly from\");  \n  item.Add(new SrgsRuleRef(citiesRule));  \n  item.Add(new SrgsText(\"to\"));  \n  item.Add(new SrgsRuleRef(citiesRule));  \n  \n  mainRule.Add(item);  \n  document.Rules.Add(mainRule);  \n  \n  // Set the root rule.  \n  document.Root = mainRule;  \n  \n  // Create the Grammar object.  \n  Grammar citiesGrammar = new Grammar(document);  \n  citiesGrammar.Name = \"SrgsDocument Cities Grammar\";  \n  \n  return citiesGrammar;  \n}  \n  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "Begrensninger for tale recognition grammatikk."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>srgsDocument</code>inneholder ikke en rot-regel."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>srgsDocument</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>srgsDocument</code>inneholder en Regelreferanse som ikke kan løses."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(String)
  nameWithType: Grammar.Grammar(String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klassen fra en fil."
  remarks: "Denne konstruktøren sende ikke parametrene til initialisering behandlingsprogram, og beskrivelsen kan ikke definere en initialisering behandlingsprogrammet som krever argumenter.       Denne konstruktøren kan opprette en <xref:System.Speech.Recognition.Grammar>forekomst fra følgende formater:-filer i XML-format som samsvarer med W3C [tale Recognition grammatikk spesifikasjonen (SRGS) versjon 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -Grammars er kompilert til en binær fil med filtypen alle cfg denne konstruktøren kompilerer filer i XML-format grammatikk til et binært format til å optimalisere dem for innlasting og forbruk av en motor for talegjenkjenning.</xref:System.Speech.Recognition.Grammar> Du kan redusere tiden som kreves for å lage en <xref:System.Speech.Recognition.Grammar>objektet fra en XML-format grammatikk ved kompilering grammatikk på forhånd, ved hjelp av en av de <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>metoder.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       En SRGS grammatikk kan definere en rot-regel. Opprette en <xref:System.Speech.Recognition.Grammar>objekt fra en streng, og angi en rot regel, bruker du <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktør.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>       Opprette en <xref:System.Speech.Recognition.Grammar>objekt som angir en basis-URIEN brukes til å løse relativ regelen referanser åpne filen i en filstrøm og bruke den <xref:System.Speech.Recognition.Grammar.%23ctor%2A?displayProperty=fullName>konstruktør.</xref:System.Speech.Recognition.Grammar.%23ctor%2A?displayProperty=fullName> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example loads a speech recognition grammar from a local SRGS file to build a <xref:System.Speech.Recognition.Grammar> object. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n// Load a cities grammar from a local file and  \n// return the new grammar.   \nprivate static Grammar CreateGrammarFromFile()  \n{  \n  Grammar citiesGrammar = new Grammar(@\"c:\\temp\\cities.xml\");  \n  citiesGrammar.Name = \"SRGS File Cities Grammar\";  \n  return citiesGrammar;  \n}  \n  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (string path);
    parameters:
    - id: path
      type: System.String
      description: "Banen til filen som beskriver en tale recognition grammatikk i et format som støttes."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>inneholder en tom streng (&quot;&quot;), eller filen beskriver en grammatikk som ikke inneholder en rot-regel."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Filen inneholder ikke en gyldig beskrivelse eller beskriver en grammatikk som inneholder en Regelreferanse som ikke kan løses."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)
  id: '#ctor(System.IO.Stream,System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String)
  nameWithType: Grammar.Grammar(Stream,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klasse fra en <xref:System.IO.Stream>og angir en rot-regel.</xref:System.IO.Stream>"
  remarks: "Denne konstruktøren sende ikke parametrene til initialisering behandlingsprogram, og beskrivelsen kan ikke definere en initialisering behandlingsprogrammet som krever argumenter.       Denne konstruktøren kan opprette en <xref:System.Speech.Recognition.Grammar>forekomst fra følgende formater:-filer i XML-format som samsvarer med W3C [tale Recognition grammatikk spesifikasjonen (SRGS) versjon 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -Grammars er kompilert til en binær fil med filtypen alle cfg denne konstruktøren kompilerer filer i XML-format grammatikk til et binært format til å optimalisere dem for innlasting og forbruk av en motor for talegjenkjenning.</xref:System.Speech.Recognition.Grammar> Du kan redusere tiden som kreves for å lage en <xref:System.Speech.Recognition.Grammar>objektet fra en XML-format grammatikk ved kompilering grammatikk på forhånd, ved hjelp av en av de <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>metoder.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       Opprette en <xref:System.Speech.Recognition.Grammar>fra en dataflyt og angi en basis-URIEN brukes til å løse referanser til relativ regel, bruker den <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktør.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example loads a local SRGS file (cities.xml) from a file stream and specifies a rule to use as the root of the grammar. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n  \n// Load a cities grammar from an I/O stream, use a specific  \n// rule as the root of the grammar, and return the new grammar.   \nprivate static Grammar CreateGrammarFromStream2()  \n{  \n  FileInfo file = new FileInfo(@\"c:\\temp\\cities.xml\");  \n  Grammar citiesGrammar = new Grammar(file.OpenRead(), \"Main\");  \n  citiesGrammar.Name = \"Stream Cities Grammar 2\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "En dataflyt som beskriver en tale recognition grammatikk i et format som støttes."
    - id: ruleName
      type: System.String
      description: "Identifikatoren for regelen som skal brukes som inngangspunktet for tale recognition-grammatikk eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> å bruke standard roten regelen for grammatikk beskrivelsen."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>kan ikke løses eller er ikke felles, eller <code>ruleName</code> er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> og beskrivelsen grammatikk definerer ikke en rot-regel."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Dataflyten inneholder ikke en gyldig beskrivelse eller beskriver en grammatikk som inneholder en Regelreferanse som ikke kan løses."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String)
  nameWithType: Grammar.Grammar(SrgsDocument,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initialiserer en ny forekomst av en <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klasse fra en <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> objekt og angir en rot-regel."
  remarks: "Denne konstruktøren ikke sende parametere til initialisering-behandlingsprogrammet og <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>kan ikke inneholde en initialisering behandlingsprogrammet som krever argumenter.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>       Opprette en <xref:System.Speech.Recognition.Grammar>objekt fra en <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>og angi en basis-URIEN brukes til å løse referanser til relativ regel, bruker den <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktør.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example creates a speech recognition grammar in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instance and specifies a rule to use as the root rule of the grammar. The example constructs a <xref:System.Speech.Recognition.Grammar> object from the <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instance and loads it into the speech recognition engine.  \n  \n```c#  \nusing System;  \nusing System.Speech.Recognition;  \nusing System.Speech.Recognition.SrgsGrammar;  \n  \nnamespace SampleRecognition  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n  \n    // Initialize an in-process speech recognition engine.  \n    {  \n      using (SpeechRecognitionEngine recognizer =  \n         new SpeechRecognitionEngine())  \n      {  \n  \n        // Create the SrgsDocument.  \n        SrgsDocument document = new SrgsDocument();  \n  \n        // Create the Cities rule and add it to the document.  \n        SrgsRule citiesRule = new SrgsRule(\"Cities\");  \n        citiesRule.Scope = SrgsRuleScope.Public;  \n  \n        SrgsOneOf cityChoice = new SrgsOneOf();  \n        cityChoice.Add(new SrgsItem(\"Seattle\"));  \n        cityChoice.Add(new SrgsItem(\"Los Angeles\"));  \n        cityChoice.Add(new SrgsItem(\"New York\"));  \n        cityChoice.Add(new SrgsItem(\"Miami\"));  \n  \n        citiesRule.Add(cityChoice);  \n        document.Rules.Add(citiesRule);  \n  \n        // Create the Main rule and add it to the document.  \n        SrgsRule mainRule = new SrgsRule(\"Main\");  \n        mainRule.Scope = SrgsRuleScope.Public;  \n  \n        mainRule.Add(new SrgsItem(\"I would like to fly from\"));  \n        mainRule.Add(new SrgsRuleRef(citiesRule));  \n        mainRule.Add(new SrgsItem(\"to\"));  \n        mainRule.Add(new SrgsRuleRef(citiesRule));  \n  \n        document.Rules.Add(mainRule);  \n  \n        // Create the Grammar object and specify which rule to use as the root.  \n        Grammar citiesGrammar = new Grammar(document,\"Main\");  \n  \n        // Load the grammar object to the recognizer.  \n        recognizer.LoadGrammarAsync(citiesGrammar);  \n  \n        // Attach a handler for the SpeechRecognized event.  \n        recognizer.SpeechRecognized +=  \n          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  \n  \n        // Set the input to the recognizer.  \n        recognizer.SetInputToDefaultAudioDevice();  \n  \n        // Start recognition.  \n        recognizer.RecognizeAsync();  \n        Console.WriteLine(\"Starting aynchronous recognition...\");  \n  \n        // Keep the console window open.  \n        Console.ReadLine();  \n      }  \n    }  \n  \n    // Handle the SpeechRecognized event.  \n    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  \n    {  \n      Console.WriteLine(\"  Speech recognized: \" + e.Result.Text);  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "Begrensninger for tale recognition grammatikk."
    - id: ruleName
      type: System.String
      description: "Identifikatoren for regelen som skal brukes som inngangspunktet for tale recognition-grammatikk eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> å bruke standard roten regelen for den <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>kan ikke løses eller er ikke felles, eller <code>ruleName</code> er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> og <code>srgsDocument</code> inneholder ikke en rot-regel."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>srgsDocument</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>srgsDocument</code>inneholder en Regelreferanse som ikke kan løses."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(String,String)
  nameWithType: Grammar.Grammar(String,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klasse fra en fil, og angir en rot-regel."
  remarks: "Denne konstruktøren sende ikke parametrene til initialisering behandlingsprogram, og beskrivelsen kan ikke definere en initialisering behandlingsprogrammet som krever argumenter.       Denne konstruktøren kan opprette en <xref:System.Speech.Recognition.Grammar>forekomst fra følgende formater:-filer i XML-format som samsvarer med W3C [tale Recognition grammatikk spesifikasjonen (SRGS) versjon 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -Grammars er kompilert til en binær fil med filtypen alle cfg denne konstruktøren kompilerer filer i XML-format grammatikk til et binært format til å optimalisere dem for innlasting og forbruk av en motor for talegjenkjenning.</xref:System.Speech.Recognition.Grammar> Du kan redusere tiden som kreves for å lage en <xref:System.Speech.Recognition.Grammar>objektet fra en XML-format grammatikk ved kompilering grammatikk på forhånd, ved hjelp av en av de <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>metoder.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       Opprette en <xref:System.Speech.Recognition.Grammar>som angir en basis-URIEN til å bruke referanser relativ regel, åpne en filstrøm for filen og bruke den <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktør.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example loads a local SRGS file (cities.xml) from a file and specifies a rule to use as the root of the grammar. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n  \n// Load a cities grammar from a local file, use a specific  \n// rule as the root of the grammar, and return the new grammar.  \nprivate static Grammar CreateGrammarFromFile2()  \n{  \n  Grammar citiesGrammar = new Grammar(@\"c:\\temp\\cities.xml\", \"Main\");  \n  citiesGrammar.Name = \"SRGS File Cities Grammar 2\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (string path, string ruleName);
    parameters:
    - id: path
      type: System.String
      description: "Banen til filen som beskriver en tale recognition grammatikk i et format som støttes."
    - id: ruleName
      type: System.String
      description: "Identifikatoren for regelen som skal brukes som inngangspunktet for tale recognition-grammatikk eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> å bruke standard roten regelen for grammatikk beskrivelsen."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>kan ikke løses eller er ikke felles, <code>path</code> er en tom streng (&quot;&quot;), eller <code>ruleName</code> er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> og beskrivelsen grammatikk definerer ikke en rot-regel."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Filen inneholder ikke en gyldig beskrivelse eller beskriver en grammatikk som inneholder en Regelreferanse som ikke kan løses."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])
  id: '#ctor(System.IO.Stream,System.String,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klasse fra en <xref:System.IO.Stream>og angir en rot-regel.</xref:System.IO.Stream>"
  remarks: "Parameterne for en initialisering håndterer kan også angis."
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName, object[] parameters);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "En <xref:System.IO.Stream>koblet til en/u-objektet (inkludert filer, VisualStudio ressurser og DLL-fil) som inneholder en spesifikasjon for grammatikk.</xref:System.IO.Stream>"
    - id: ruleName
      type: System.String
      description: "Identifikatoren for regelen som skal brukes som inngangspunktet for tale recognition-grammatikk eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> å bruke standard roten regelen for grammatikk beskrivelsen."
    - id: parameters
      type: System.Object[]
      description: "Parametere som skal sendes til initialisering behandlingsprogrammet som er angitt av den <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>for inngangspunktet eller regelen roten av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> som skal opprettes.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*> Denne parameteren kan være null."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>er koblet til en grammatikk som:-inneholder ikke den angitte i regelen <code>ruleName</code>       - krever initialiseringsparametere som er forskjellig fra de angitte plattformene i <code>parameters</code>       - inneholder en relativ Regelreferanse som ikke kan løses ved standard grunntallet <xref:System.Uri> regel for grammars"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)
  id: '#ctor(System.IO.Stream,System.String,System.Uri)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String,Uri)
  nameWithType: Grammar.Grammar(Stream,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> fra en dataflyt angir en regel for root- og definerer en base URI Uniform Resource Identifier () for å løse relativ regelen referanser."
  remarks: "Denne konstruktøren sende ikke parametrene til initialisering behandlingsprogram, og beskrivelsen kan ikke definere en initialisering behandlingsprogrammet som krever argumenter.       Denne konstruktøren kan opprette en <xref:System.Speech.Recognition.Grammar>forekomst fra følgende formater:-filer i XML-format som samsvarer med W3C [tale Recognition grammatikk spesifikasjonen (SRGS) versjon 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -Grammars er kompilert til en binær fil med filtypen alle cfg denne konstruktøren kompilerer filer i XML-format grammatikk til et binært format til å optimalisere dem for innlasting og forbruk av en motor for talegjenkjenning.</xref:System.Speech.Recognition.Grammar> Du kan redusere tiden som kreves for å lage en <xref:System.Speech.Recognition.Grammar>objektet fra en XML-format grammatikk ved kompilering grammatikk på forhånd, ved hjelp av en av de <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>metoder.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       Denne konstruktøren, kan ikke valideres `baseUri`. Imidlertid den `LoadGrammar` -metoden til et <xref:System.Speech.Recognition.SpeechRecognitionEngine>eller <xref:System.Speech.Recognition.SpeechRecognizer>objektet oppstår det et unntak hvis den ikke kan løse alle regelen-referanser i grammatikk beskrivelsen.</xref:System.Speech.Recognition.SpeechRecognizer> </xref:System.Speech.Recognition.SpeechRecognitionEngine> Hvis `baseUri` er ikke `null`, `LoadGrammar` metoden bruker URIEN til å løse eventuelle regelen referanser den ellers ikke kan løse. Hvis `baseUri` representerer en fil, og deretter den `LoadGrammar` bruker både den angitte fil- og filens når den prøver å løse relativ regelen referanser."
  example:
  - "The following example loads a local SRGS file (shuttle.xml) from a file stream. The file contains a relative rule reference to a rule in the cities.xml file, and specifies a base URI to use to resolve the rule reference. The content of the shuttle.xml and cities.xml files appears in the XML examples that follow the C# example.  \n  \n```c#  \n  \nprivate static Grammar CreateGrammarFromStream3()  \n{  \n  FileInfo file = new FileInfo(@\".\\shuttle.xml\");  \n  Uri baseUri = new Uri(@\"file://c:\\temp\\\");  \n  Grammar citiesGrammar = new Grammar(file.OpenRead(), null, baseUri);  \n  citiesGrammar.Name = \"Stream Cities Grammar 3\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- shuttle.xml:   \n    Defines an SRGS grammar for asking about a shuttle service. This grammar  \n    references a Cities rule that is defined in the cities.xml grammar. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      Can I get a shuttle in  \n      <ruleref uri=\"cities.xml#Cities\"/>  \n    </item>  \n  </rule>  \n</grammar>  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName, Uri baseUri);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "En dataflyt som beskriver en tale recognition grammatikk i et format som støttes."
    - id: ruleName
      type: System.String
      description: "Identifikatoren for regelen som skal brukes som inngangspunktet for tale recognition-grammatikk eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> å bruke standard roten regelen for grammatikk beskrivelsen."
    - id: baseUri
      type: System.Uri
      description: "Basis-URIEN brukes til å løse relativ regelen referanser i beskrivelsen av grammatikk eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>kan ikke løses eller er ikke felles, eller <code>ruleName</code> er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> og beskrivelsen grammatikk definerer ikke en rot-regel."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Dataflyten inneholder ikke en gyldig beskrivelse eller beskriver en grammatikk som inneholder en Regelreferanse som ikke kan løses."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klassen fra en forekomst av <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>, og angir navnet på en regel inngangspunktet med grammatikk."
  remarks: "Parameterne for en initialisering håndterer kan også angis."
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, object[] parameters);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "En forekomst av <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> som inneholder begrensningene for tale recognition grammatikk."
    - id: ruleName
      type: System.String
      description: "Identifikatoren for regelen som skal brukes som inngangspunktet for tale recognition-grammatikk eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> å bruke standard roten regelen for grammatikk beskrivelsen."
    - id: parameters
      type: System.Object[]
      description: "Parametere som skal sendes til initialisering behandlingsprogrammet som er angitt av den <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>for inngangspunktet eller regelen roten av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> som skal opprettes.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*> Denne parameteren kan være null."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-Noen av parameterne inneholder en ugyldig verdi.      - <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> Angitt av <code> srgsDocument </code> inneholder ikke den angitte av regelen <code> ruleName </code>.      -Innholdet i matriseparametere samsvarer ikke med argumenter for regelens initialisering behandlingsprogrammer."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String,Uri)
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initialiserer en ny forekomst av en <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klasse fra en <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> objektet angir en rot regel, og definerer en base URI Uniform Resource Identifier () for å løse relativ regelen referanser."
  remarks: "Denne konstruktøren ikke sende parametere til initialisering-behandlingsprogrammet og <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>kan ikke inneholde en initialisering behandlingsprogrammet som krever argumenter.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>       Denne konstruktøren, kan ikke valideres `baseUri`. Imidlertid den `LoadGrammar` -metoden til et <xref:System.Speech.Recognition.SpeechRecognitionEngine>eller <xref:System.Speech.Recognition.SpeechRecognizer>objektet oppstår det et unntak hvis den ikke kan løse alle regelen-referanser i grammatikk beskrivelsen.</xref:System.Speech.Recognition.SpeechRecognizer> </xref:System.Speech.Recognition.SpeechRecognitionEngine> Hvis `baseUri` er ikke `null`, `LoadGrammar` metoden bruker URIEN til å løse eventuelle regelen referanser den ellers ikke kan løse. Hvis `baseUri` representerer en fil, og deretter den `LoadGrammar` metoden bruker både den angitte fil- og filens når den prøver å løse relativ regelen referanser."
  example:
  - "The following example creates a speech recognition grammar in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> that contains a relative rule reference to the cities.xml file, and specifies a URI to use to resolve the rule reference. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n  \nprivate static Grammar CreateSrgsDocumentGrammar3()  \n{  \n  // Create the SrgsDocument.  \n  SrgsDocument document = new SrgsDocument();  \n  \n  // Create the Main rule and add it to the document.  \n  SrgsRule mainRule = new SrgsRule(\"Main\");  \n  mainRule.Scope = SrgsRuleScope.Public;  \n  \n  SrgsItem item = new SrgsItem(\"Can I get a shuttle in\");  \n  \n  // Create a relative URI for the cities rule.  \n  Uri ruleUri = new Uri(\"cities.xml#Cities\", UriKind.Relative);  \n  \n  item.Add(new SrgsRuleRef(ruleUri));  \n  \n  mainRule.Add(item);  \n  document.Rules.Add(mainRule);  \n  \n  // Set the root rule.  \n  document.Root = mainRule;  \n  \n  // Create the grammar.  \n  Uri baseUri = new Uri(@\"file://c:\\temp\\\");  \n  Grammar citiesGrammar = new Grammar(document, null, baseUri);  \n  citiesGrammar.Name = \"SrgsDocument Cities Grammar 3\";  \n  \n  return citiesGrammar;  \n}  \n  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, Uri baseUri);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "Begrensninger for tale recognition grammatikk."
    - id: ruleName
      type: System.String
      description: "Identifikatoren for regelen som skal brukes som inngangspunktet for tale recognition-grammatikk eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> å bruke standard roten regelen for den <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>."
    - id: baseUri
      type: System.Uri
      description: "Basis-URIEN brukes til å løse relativ regelen referanser i den <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>kan ikke løses eller er ikke felles, eller <code>ruleName</code> er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> og <code>srgsDocument</code> inneholder ikke en rot-regel."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>srgsDocument</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>srgsDocument</code>inneholder en Regelreferanse som ikke kan løses."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])
  id: '#ctor(System.String,System.String,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(String,String,Object[])
  nameWithType: Grammar.Grammar(String,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klassen fra en fil som inneholder en definisjon for grammatikk, og angir navnet på en regel inngangspunktet med grammatikk.."
  remarks: "Parameterne for en initialisering håndterer kan også angis."
  syntax:
    content: public Grammar (string path, string ruleName, object[] parameters);
    parameters:
    - id: path
      type: System.String
      description: "Banen til en fil, inkludert DLL-filer, som inneholder en spesifikasjon for grammatikk."
    - id: ruleName
      type: System.String
      description: "Identifikatoren for regelen som skal brukes som inngangspunktet for tale recognition-grammatikk eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> å bruke standard roten regelen for grammatikk beskrivelsen."
    - id: parameters
      type: System.Object[]
      description: "Parametere som skal sendes til initialisering behandlingsprogrammet som er angitt av den <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>for inngangspunktet eller regelen roten av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> som skal opprettes.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*> Denne parameteren kan være null."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-Noen av parameterne inneholder en ugyldig verdi.      -Filen fra <code> path </code> inneholder ikke en gyldig grammatikk eller regel som er angitt i <code> ruleName </code>.      -Innholdet i matriseparametere samsvarer ikke med argumenter for regelens initialisering behandlingsprogrammer.      -Grammatikk har en relativ regelen ikke kan løses av standard base <xref:System.Uri>regel for grammars.</xref:System.Uri>"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])
  id: '#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String,Uri,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klassen en <xref:System.IO.Stream>og angir en regel for roten og basis-URIEN ikke løse relative referanser.</xref:System.IO.Stream>"
  remarks: "Parameterne for en initialisering håndterer kan også angis."
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName, Uri baseUri, object[] parameters);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "En <xref:System.IO.Stream>koblet til en/u-objektet (inkludert filer, VisualStudio ressurser og DLL-fil) som inneholder en spesifikasjon for grammatikk.</xref:System.IO.Stream>"
    - id: ruleName
      type: System.String
      description: "Identifikatoren for regelen som skal brukes som inngangspunktet for tale recognition-grammatikk eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> å bruke standard roten regelen for grammatikk beskrivelsen."
    - id: baseUri
      type: System.Uri
      description: "Basis-URIEN brukes til å løse relativ regelen referanser i beskrivelsen av grammatikk eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: parameters
      type: System.Object[]
      description: "Parametere som skal sendes til initialisering behandlingsprogrammet som er angitt av den <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>for inngangspunktet eller regelen roten av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> som skal opprettes.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*> Denne parameteren kan være null."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-Noen av parameterne inneholder en ugyldig verdi.      - <code> stream </code> Er koblet til en grammatikk som ikke inneholder den angitte av regelen <code> ruleName </code>.      -Innholdet i matriseparametere samsvarer ikke med argumenter for regelens initialisering behandlingsprogrammer.      -Grammatikk inneholder en relativ Regelreferanse som ikke kan løses ved standard grunntallet <xref:System.Uri>regel for grammars eller URIEN ble levert av <code> baseUri </code>.</xref:System.Uri>"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String,Uri,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klassen fra en forekomst av <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>, og angir navnet på en regel inngangspunktet grammatikk og basis-URIEN ikke løse relative referanser."
  remarks: "Parameterne for en initialisering håndterer kan også angis."
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, Uri baseUri, object[] parameters);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "En forekomst av <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> som inneholder begrensningene for tale recognition grammatikk."
    - id: ruleName
      type: System.String
      description: "Identifikatoren for regelen som skal brukes som inngangspunktet for tale recognition-grammatikk eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> å bruke standard roten regelen for grammatikk beskrivelsen."
    - id: baseUri
      type: System.Uri
      description: "Basis-URIEN brukes til å løse relativ regelen referanser i beskrivelsen av grammatikk eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: parameters
      type: System.Object[]
      description: "Parametere som skal sendes til initialisering behandlingsprogrammet som er angitt av egenskapen <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>for inngangspunktet eller root-regel for den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> som skal opprettes. Denne parameteren kan være null.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-Noen av parameterne inneholder en ugyldig verdi.      - <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> Angitt av <code> srgsDocument </code> inneholder ikke den angitte i regelen <code> ruleName </code>.      -Innholdet i matriseparametere samsvarer ikke med argumenter for regelens initialisering behandlingsprogrammer.      -Grammatikk har en relativ regelen ikke kan løses av standard base <xref:System.Uri>regel for grammars eller URIEN ble levert av <code> baseUri </code>.</xref:System.Uri>"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Enabled
  id: Enabled
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Enabled
  nameWithType: Grammar.Enabled
  fullName: System.Speech.Recognition.Grammar.Enabled
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Henter eller angir en verdi som bestemmer om en <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> kan brukes av en tale gjenkjenner til å utføre gjenkjenning."
  remarks: "En forekomst av <xref:System.Speech.Recognition.Grammar>kan være aktivert eller deaktivert uavhengig av blir lastet inn av en motor for talegjenkjenning.</xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example writes information about a <xref:System.Speech.Recognition.Grammar> object to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \n  \nprivate static void DumpGrammarStatus(Grammar item)  \n{  \n  Console.WriteLine(\"Grammar name is {0}:\", item.Name);  \n  Console.WriteLine(\"  The Grammar {0} loaded.\",  \n    item.Loaded ? \"is\" : \"is not\");  \n  Console.WriteLine(\"  The Grammar {0} enabled.\",  \n    item.Enabled ? \"is\" : \"is not\");  \n  if (item.RuleName != null)  \n  {  \n    Console.WriteLine(\"  The root rule is {0}.\", item.RuleName);  \n  }  \n  else  \n  {  \n    Console.WriteLine(\"  The Grammar does not specify a root rule.\");  \n  }  \n}  \n```"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "Den <xref uid=&quot;langword_csharp_Enabled&quot; name=&quot;Enabled&quot; href=&quot;&quot;> </xref> returnerer <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Hvis en tale gjenkjenner kan utføre føring ved hjelp av tale recognition grammatikk; ellers returnerer egenskapen <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.IsStg
  id: IsStg
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: IsStg
  nameWithType: Grammar.IsStg
  fullName: System.Speech.Recognition.Grammar.IsStg
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Henter om en grammatikk skrives på det sterkeste."
  remarks: "En strongly-typed <xref:System.Speech.Recognition.Grammar>objektet (`IsStg` er lik `true`) kan returnere strongly-typed resultater (objekter i stedet raw tekst) til et klientprogram.</xref:System.Speech.Recognition.Grammar> For eksempel en strongly-typed grammatikk kan returnere <xref:System.DateTime>objekter i stedet for rå gjenkjent inndata.</xref:System.DateTime>       Du kan implementere strongly-typed grammars ved å knytte kode til reglene for en grammatikk. Når en recognition-motor behandler alle typer regler, ta som inndata gjeldende delvise resultater, tilknyttede koden utføres og samme blir rik typen objekter. Dette gjør at en klient foreta enklere å bruke utvidet semantisk kontroll, støtte for flere kulturer og intern grammatikk logic.       Forekomster av strongly-typed <xref:System.Speech.Recognition.Grammar>objekter vanligvis er hentet fra ressurser i en samling som en <xref:System.Type>for Common Language Runtime (CLR).</xref:System.Type> </xref:System.Speech.Recognition.Grammar> Lokaliserte typene brukes til å støtte forskjellige språk er eksempler på for eksempel <xref:System.Speech.Recognition.Grammar>objekter.</xref:System.Speech.Recognition.Grammar>"
  syntax:
    content: protected virtual bool IsStg { get; }
    return:
      type: System.Boolean
      description: "Den <xref uid=&quot;langword_csharp_IsStg&quot; name=&quot;IsStg&quot; href=&quot;&quot;> </xref> returnerer <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Hvis grammatikk strongly-typed; ellers returneres <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.IsStg*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Loaded
  id: Loaded
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Loaded
  nameWithType: Grammar.Loaded
  fullName: System.Speech.Recognition.Grammar.Loaded
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Henter om en <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> er lastet inn av en tale gjenkjenner."
  remarks: "Når en <xref:System.Speech.Recognition.Grammar>er lastet inn, verdiene i <xref:System.Speech.Recognition.Grammar.Weight%2A>, og <xref:System.Speech.Recognition.Grammar.Priority%2A>kan ikke endres.</xref:System.Speech.Recognition.Grammar.Priority%2A> </xref:System.Speech.Recognition.Grammar.Weight%2A> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example writes information about a <xref:System.Speech.Recognition.Grammar> object to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \n  \nprivate static void DumpGrammarStatus(Grammar item)  \n{  \n  Console.WriteLine(\"Grammar name is {0}:\", item.Name);  \n  Console.WriteLine(\"  The Grammar {0} loaded.\",  \n    item.Loaded ? \"is\" : \"is not\");  \n  Console.WriteLine(\"  The Grammar {0} enabled.\",  \n    item.Enabled ? \"is\" : \"is not\");  \n  if (item.RuleName != null)  \n  {  \n    Console.WriteLine(\"  The root rule is {0}.\", item.RuleName);  \n  }  \n  else  \n  {  \n    Console.WriteLine(\"  The Grammar does not specify a root rule.\");  \n  }  \n}  \n```"
  syntax:
    content: public bool Loaded { get; }
    return:
      type: System.Boolean
      description: "Den <xref uid=&quot;langword_csharp_Loaded&quot; name=&quot;Loaded&quot; href=&quot;&quot;> </xref> returnerer <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Hvis refererte tale recognition grammatikk er lastet inn i en tale gjenkjenner; ellers returnerer egenskapen <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.Loaded*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  id: LoadLocalizedGrammarFromType(System.Type,System.Object[])
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: LoadLocalizedGrammarFromType(Type,Object[])
  nameWithType: Grammar.LoadLocalizedGrammarFromType(Type,Object[])
  fullName: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(Type,Object[])
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Den <xref uid=&quot;langword_csharp_LoadLocalizedGrammarFromType&quot; name=&quot;LoadLocalizedGrammarFromType&quot; href=&quot;&quot;> </xref> metoden returnerer en lokalisert forekomst av en <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> objektet som er avledet fra <xref:System.Type>.</xref:System.Type>"
  remarks: "Lokalisert grammars innhentet med `LoadLocalizedGrammarFromType` er vanligvis strongly-typed (se <xref:System.Speech.Recognition.Grammar.IsStg%2A>for mer informasjon om forespørselsparameter av sterk type grammars).</xref:System.Speech.Recognition.Grammar.IsStg%2A> Hvis `onInitParameters` er en nullreferanse (ingenting i Visual Basic) den lokaliserte grammatikk må ha ingen initialiseringsmetode eller en metode som tar noen argumenter."
  syntax:
    content: public static System.Speech.Recognition.Grammar LoadLocalizedGrammarFromType (Type type, object[] onInitParameters);
    parameters:
    - id: type
      type: System.Type
      description: "I en samling av <xref:System.Type>til et objekt som er basert på <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>.</xref:System.Type>"
    - id: onInitParameters
      type: System.Object[]
      description: "Parametere som skal sendes til en initialiseringsmetode av localizedobject basert på <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>. Denne parameteren kan være null."
    return:
      type: System.Speech.Recognition.Grammar
      description: "Den <xref uid=&quot;langword_csharp_LoadLocalizedGrammarFromType&quot; name=&quot;LoadLocalizedGrammarFromType&quot; href=&quot;&quot;> </xref> metoden returnerer et gyldig objekt basert på <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis det har oppstått en feil."
  overload: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Name
  id: Name
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Name
  nameWithType: Grammar.Name
  fullName: System.Speech.Recognition.Grammar.Name
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Henter eller angir navnet på en <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> objektet."
  remarks: ''
  example:
  - "The following example creates two <xref:System.Speech.Recognition.Grammar> objects, one for digits and one for fractions. The Grammar objects are assigned names and relative weights and priorities, and loaded by an in-process speech recognizer. The `CreateDigitsGrammar`, `CreateFractionsGrammar`, and `recognizer_SpeechRecognized` methods are not shown here.  \n  \n```c#  \n  \n// Create a Grammar for recognizing numeric digits.  \nGrammar digitsGrammar = CreateDigitsGrammar();  \ndigitsGrammar.Name = \"Digits Grammar\";  \ndigitsGrammar.Priority = 2;  \ndigitsGrammar.Weight = 0.6f;  \n  \n// Create a Grammar for recognizing fractions.  \nGrammar fractionsGrammar = CreateFractionsGrammar();  \nfractionsGrammar.Name = \"Fractions Grammar\";  \nfractionsGrammar.Priority = 1;  \nfractionsGrammar.Weight = 1f;  \n  \n// Create an in-process speech recognizer.  \nSpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  \n  \nrecognizer.SpeechRecognized +=  \n  new EventHandler<SpeechRecognizedEventArgs>(  \n    recognizer_SpeechRecognized);  \n  \n// Load the digits and fractions Grammar objects.  \nrecognizer.LoadGrammar(digitsGrammar);  \nrecognizer.LoadGrammar(fractionsGrammar);  \n  \n// Start recognition.  \nrecognizer.SetInputToDefaultAudioDevice();  \nrecognizer.RecognizeAsync(RecognizeMode.Multiple);  \n```"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Den <xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref> egenskapen returnerer navnet på den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> objektet. Standard <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Priority
  id: Priority
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Priority
  nameWithType: Grammar.Priority
  fullName: System.Speech.Recognition.Grammar.Priority
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Henter eller angir verdien for prioritet for en <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> objektet."
  remarks: "Den `Priority` egenskapen brukes til å velge en grammatikk når flere grammatikk vil gi en identiske recognition resultatet. Hvis en tale gjenkjenner har mer enn én tale recognition grammatikk lastet inn, og aktivert som samsvarer med de, og resultatet er best resultatet fra gjenkjenneren, må gjenkjenneren bruker grammatikk er den største `Priority`. Hvis grammars som produserer resultatet identiske recognition også ha samme `Priority` -verdi, deretter grammatikk gjenkjenneren bruker er ikke definert."
  example:
  - "The following example creates two <xref:System.Speech.Recognition.Grammar> objects, one for digits and one for fractions. The <xref:System.Speech.Recognition.Grammar> objects are assigned names and relative weights and priorities, and loaded by an in-process speech recognizer. The `CreateDigitsGrammar`, `CreateFractionsGrammar`, and `recognizer_SpeechRecognized` methods are not shown here.  \n  \n```c#  \n  \n// Create a Grammar for recognizing numeric digits.  \nGrammar digitsGrammar = CreateDigitsGrammar();  \ndigitsGrammar.Name = \"Digits Grammar\";  \ndigitsGrammar.Priority = 2;  \ndigitsGrammar.Weight = 0.6f;  \n  \n// Create a Grammar for recognizing fractions.  \nGrammar fractionsGrammar = CreateFractionsGrammar();  \nfractionsGrammar.Name = \"Fractions Grammar\";  \nfractionsGrammar.Priority = 1;  \nfractionsGrammar.Weight = 1f;  \n  \n// Create an in-process speech recognizer.  \nSpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  \n  \nrecognizer.SpeechRecognized +=  \n  new EventHandler<SpeechRecognizedEventArgs>(  \n    recognizer_SpeechRecognized);  \n  \n// Load the digits and fractions Grammar objects.  \nrecognizer.LoadGrammar(digitsGrammar);  \nrecognizer.LoadGrammar(fractionsGrammar);  \n  \n// Start recognition.  \nrecognizer.SetInputToDefaultAudioDevice();  \nrecognizer.RecognizeAsync(RecognizeMode.Multiple);  \n```"
  syntax:
    content: public int Priority { get; set; }
    return:
      type: System.Int32
      description: "Den <xref uid=&quot;langword_csharp_Priority&quot; name=&quot;Priority&quot; href=&quot;&quot;> </xref> egenskapen returnerer en heltallsverdi som representerer den relative prioriteten for en bestemt <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>. Området er fra-128 til 127 med. Standardverdien er 0."
  overload: System.Speech.Recognition.Grammar.Priority*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.ResourceName
  id: ResourceName
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: ResourceName
  nameWithType: Grammar.ResourceName
  fullName: System.Speech.Recognition.Grammar.ResourceName
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Henter eller angir en verdi med navnet på en binær ressurs som ble brukt til å laste inn gjeldende <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>."
  syntax:
    content: protected string ResourceName { get; set; }
    return:
      type: System.String
      description: "Den <xref uid=&quot;langword_csharp_ResourceName&quot; name=&quot;ResourceName&quot; href=&quot;&quot;> </xref> egenskapen returnerer navnet på den binære ressursen som strongly-typed-grammatikk som <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>, ble lastet inn."
  overload: System.Speech.Recognition.Grammar.ResourceName*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.RuleName
  id: RuleName
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: RuleName
  nameWithType: Grammar.RuleName
  fullName: System.Speech.Recognition.Grammar.RuleName
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Henter navnet på roten regel eller oppføring senterpunktet for en <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> objektet."
  remarks: "Ikke konstruere et <xref:System.Speech.Recognition.Grammar>objekt og angi navn for den primære regelen, bruk av <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktører som bruker den `ruleName` parameteren.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>       Hvis regelen roten av et <xref:System.Speech.Recognition.Grammar>har ikke noe navn egenskapen returnerer `null`.</xref:System.Speech.Recognition.Grammar>       Reglene roten for <xref:System.Speech.Recognition.Grammar>forekomster konstruert fra <xref:System.Speech.Recognition.GrammarBuilder>objekter har vanligvis ikke noe navn regelnavn returnerer `null`.</xref:System.Speech.Recognition.GrammarBuilder> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example writes information about a <xref:System.Speech.Recognition.Grammar> object to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \n  \nprivate static void DumpGrammarStatus(Grammar item)  \n{  \n  Console.WriteLine(\"Grammar name is {0}:\", item.Name);  \n  Console.WriteLine(\"  The Grammar {0} loaded.\",  \n    item.Loaded ? \"is\" : \"is not\");  \n  Console.WriteLine(\"  The Grammar {0} enabled.\",  \n    item.Enabled ? \"is\" : \"is not\");  \n  if (item.RuleName != null)  \n  {  \n    Console.WriteLine(\"  The root rule is {0}.\", item.RuleName);  \n  }  \n  else  \n  {  \n    Console.WriteLine(\"  The Grammar does not specify a root rule.\");  \n  }  \n}  \n```"
  syntax:
    content: public string RuleName { get; }
    return:
      type: System.String
      description: "Den <xref uid=&quot;langword_csharp_RuleName&quot; name=&quot;RuleName&quot; href=&quot;&quot;> </xref> egenskapen returnerer identifikatoren for den primære regelen for refererte tale recognition grammatikk. Standard <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.RuleName*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.SpeechRecognized
  id: SpeechRecognized
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: SpeechRecognized
  nameWithType: Grammar.SpeechRecognized
  fullName: System.Speech.Recognition.Grammar.SpeechRecognized
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Starter når en tale gjenkjenner utfører recognition ved hjelp av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> objektet."
  remarks: "Dikterings-gjenkjenner også opphøyer et `SpeechRecognized` -hendelse når den gjenkjenner inndata. Den <xref:System.Speech.Recognition.Grammar>objektets SpeechRecognized hendelsen starter før den tale gjenkjenneren `SpeechRecognized` hendelsen.</xref:System.Speech.Recognition.Grammar> Hvis du vil ha mer informasjon, se den <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>, <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName>, og <xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted>hendelser.</xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted> </xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName> </xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>       Oppgaver som er spesifikke for en bestemt grammatikk skal alltid håndteres av behandlingsprogrammer for den <xref:System.Speech.Recognition.Grammar>objektets SpeechRecognized hendelsen.</xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example shows the use of an event handler for the <xref:System.Speech.Recognition.Grammar> object's SpeechRecognized event. It outputs the recognition results to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \npublic partial class Form1 : Form  \n{  \n  SpeechRecognitionEngine sre;  \n  \n  public Form1()  \n  {  \n  InitializeComponent();  \n  \n  // Create an in-process speech recognizer.  \n  sre = new SpeechRecognitionEngine();  \n  \n  // Configure input to the speech recognizer.  \n  sre.SetInputToDefaultAudioDevice();  \n  \n  // Create a simple grammar and load it.  \n  Grammar testGrammar = new Grammar(new GrammarBuilder(\"testing\"));  \n  sre.LoadGrammarAsync(testGrammar);  \n  \n  // Add a handler for the grammar's speech recognized event.  \n  testGrammar.SpeechRecognized += new EventHandler<SpeechRecognizedEventArgs>(testGrammar_SpeechRecognized);  \n  \n  // Start asynchronous speech recognition.  \n  sre.RecognizeAsync();  \n  }  \n  \n  // Handle the grammar's SpeechRecognized event, output the recognized text.  \n  void testGrammar_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  \n  {  \n    Console.WriteLine(\"Recognized text: \" + e.Result.Text);  \n  }  \n}  \n```"
  syntax:
    content: public event EventHandler<System.Speech.Recognition.SpeechRecognizedEventArgs> SpeechRecognized;
    return:
      type: System.EventHandler{System.Speech.Recognition.SpeechRecognizedEventArgs}
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.StgInit(System.Object[])
  id: StgInit(System.Object[])
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: StgInit(Object[])
  nameWithType: Grammar.StgInit(Object[])
  fullName: System.Speech.Recognition.Grammar.StgInit(Object[])
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Den <xref uid=&quot;langword_csharp_StgInit&quot; name=&quot;StgInit&quot; href=&quot;&quot;> </xref> metoden initialiserer en strongly-typed grammatikk."
  remarks: "En strongly-typed <xref:System.Speech.Recognition.Grammar>objektet (`IsStg` er lik `true`) kan returnere strongly-typed resultater (objekter i stedet raw tekst) til et klientprogram.</xref:System.Speech.Recognition.Grammar> For eksempel en strongly-typed grammatikk kan returnere <xref:System.DateTime>objekter i stedet for rå gjenkjent inndata.</xref:System.DateTime>       Du kan implementere strongly-typed grammars ved å knytte kode til reglene for en grammatikk. Når en recognition-motor behandler alle typer regler, ta som inndata gjeldende delvise resultater, tilknyttede koden utføres og samme blir rik typen objekter. Dette gjør at en klient foreta enklere å bruke utvidet semantisk kontroll, støtte for flere kulturer og intern grammatikk logic.       Forekomster av strongly-typed <xref:System.Speech.Recognition.Grammar>objekter vanligvis er hentet fra ressurser i en samling som en <xref:System.Type>for Common Language Runtime (CLR).</xref:System.Type> </xref:System.Speech.Recognition.Grammar> Lokaliserte typene brukes til å støtte forskjellige språk er eksempler på for eksempel <xref:System.Speech.Recognition.Grammar>objekter.</xref:System.Speech.Recognition.Grammar>"
  syntax:
    content: protected void StgInit (object[] parameters);
    parameters:
    - id: parameters
      type: System.Object[]
      description: "Parametere for å starte strongly-typed-grammatikk. Denne parameteren kan være null."
  overload: System.Speech.Recognition.Grammar.StgInit*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Weight
  id: Weight
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Weight
  nameWithType: Grammar.Weight
  fullName: System.Speech.Recognition.Grammar.Weight
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Henter eller angir tykkelse-verdien for en <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> objektet."
  remarks: "På grunn av hvor komplekse en recognition-motor bruk av **vekt**, innvirkning på ytelsen for en bestemt grammatikk er ikke et prognoseattributt som direkte som <xref:System.Speech.Recognition.Grammar.Priority%2A>.</xref:System.Speech.Recognition.Grammar.Priority%2A>       Talegjenkjenning er et vektet system. Den evaluerer alle mulige recognition baner som er basert på en kombinasjon av vekten for grammatikk, bredder definert etter alternativer i grammatikk og sannsynligheten som er definert av tale modeller. Motor for talegjenkjenning bruker en kombinasjon av disse vekt og sannsynligheten til Ranger potensielle alternative anerkjennelser. Grammars med høyere vekten bidrar mer til rangeringen av recognition alternativer enn grammars med lavere vekt.       Egenskapen vekt virker på en tale gjenkjenner avhengige implementeringen av gjenkjenneren. Selv om egenskapen vekt kan brukes til å justere nøyaktigheten av Talegjenkjenning for et program, skal den brukes bare når du har kontrollert diagnostic undersøkelsen for et bestemt recognition miljø og fullstendig informasjon om recognition motoren under bruk."
  example:
  - "The following example creates two <xref:System.Speech.Recognition.Grammar> objects, one for digits and one for fractions. The <xref:System.Speech.Recognition.Grammar> objects are assigned names and relative weights and priorities, and loaded by an in-process speech recognizer. The `CreateDigitsGrammar`, `CreateFractionsGrammar`, and `recognizer_SpeechRecognized` methods are not shown here.  \n  \n```c#  \n  \n// Create a Grammar for recognizing numeric digits.  \nGrammar digitsGrammar = CreateDigitsGrammar();  \ndigitsGrammar.Name = \"Digits Grammar\";  \ndigitsGrammar.Priority = 2;  \ndigitsGrammar.Weight = 0.6f;  \n  \n// Create a Grammar for recognizing fractions.  \nGrammar fractionsGrammar = CreateFractionsGrammar();  \nfractionsGrammar.Name = \"Fractions Grammar\";  \nfractionsGrammar.Priority = 1;  \nfractionsGrammar.Weight = 1f;  \n  \n// Create an in-process speech recognizer.  \nSpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  \n  \nrecognizer.SpeechRecognized +=  \n  new EventHandler<SpeechRecognizedEventArgs>(  \n    recognizer_SpeechRecognized);  \n  \n// Load the digits and fractions Grammar objects.  \nrecognizer.LoadGrammar(digitsGrammar);  \nrecognizer.LoadGrammar(fractionsGrammar);  \n  \n// Start recognition.  \nrecognizer.SetInputToDefaultAudioDevice();  \nrecognizer.RecognizeAsync(RecognizeMode.Multiple);  \n```"
  syntax:
    content: public float Weight { get; set; }
    return:
      type: System.Single
      description: "Den <xref uid=&quot;langword_csharp_Weight&quot; name=&quot;Weight&quot; href=&quot;&quot;> </xref> returnerer et flyttall-verdi som angir den relative vekten som en forekomst av recognition motor som skal tilordnes grammatikk under behandling av tale inndata. Området ligger mellom 0,0 og 1,0 inklusive. Standarden er 1.0."
  overload: System.Speech.Recognition.Grammar.Weight*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Speech.Recognition.Grammar.#ctor
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar()
  nameWithType: Grammar.Grammar()
  fullName: System.Speech.Recognition.Grammar.Grammar()
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream)
  nameWithType: Grammar.Grammar(Stream)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(GrammarBuilder)
  nameWithType: Grammar.Grammar(GrammarBuilder)
  fullName: System.Speech.Recognition.Grammar.Grammar(GrammarBuilder)
- uid: System.Speech.Recognition.GrammarBuilder
  parent: System.Speech.Recognition
  isExternal: false
  name: GrammarBuilder
  nameWithType: GrammarBuilder
  fullName: System.Speech.Recognition.GrammarBuilder
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument)
  nameWithType: Grammar.Grammar(SrgsDocument)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument)
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  parent: System.Speech.Recognition.SrgsGrammar
  isExternal: false
  name: SrgsDocument
  nameWithType: SrgsDocument
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument
- uid: System.Speech.Recognition.Grammar.#ctor(System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(String)
  nameWithType: Grammar.Grammar(String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String)
  nameWithType: Grammar.Grammar(Stream,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String)
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String)
  nameWithType: Grammar.Grammar(SrgsDocument,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String)
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(String,String)
  nameWithType: Grammar.Grammar(String,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String)
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String,Uri)
  nameWithType: Grammar.Grammar(Stream,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Object[])
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String,Uri)
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri)
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(String,String,Object[])
  nameWithType: Grammar.Grammar(String,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String,Object[])
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String,Uri,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri,Object[])
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String,Uri,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri,Object[])
- uid: System.Speech.Recognition.Grammar.Enabled
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Enabled
  nameWithType: Grammar.Enabled
  fullName: System.Speech.Recognition.Grammar.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Speech.Recognition.Grammar.IsStg
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: IsStg
  nameWithType: Grammar.IsStg
  fullName: System.Speech.Recognition.Grammar.IsStg
- uid: System.Speech.Recognition.Grammar.Loaded
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Loaded
  nameWithType: Grammar.Loaded
  fullName: System.Speech.Recognition.Grammar.Loaded
- uid: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: LoadLocalizedGrammarFromType(Type,Object[])
  nameWithType: Grammar.LoadLocalizedGrammarFromType(Type,Object[])
  fullName: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(Type,Object[])
- uid: System.Speech.Recognition.Grammar
  parent: System.Speech.Recognition
  isExternal: false
  name: Grammar
  nameWithType: Grammar
  fullName: System.Speech.Recognition.Grammar
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Speech.Recognition.Grammar.Name
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Name
  nameWithType: Grammar.Name
  fullName: System.Speech.Recognition.Grammar.Name
- uid: System.Speech.Recognition.Grammar.Priority
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Priority
  nameWithType: Grammar.Priority
  fullName: System.Speech.Recognition.Grammar.Priority
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Speech.Recognition.Grammar.ResourceName
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: ResourceName
  nameWithType: Grammar.ResourceName
  fullName: System.Speech.Recognition.Grammar.ResourceName
- uid: System.Speech.Recognition.Grammar.RuleName
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: RuleName
  nameWithType: Grammar.RuleName
  fullName: System.Speech.Recognition.Grammar.RuleName
- uid: System.Speech.Recognition.Grammar.SpeechRecognized
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: SpeechRecognized
  nameWithType: Grammar.SpeechRecognized
  fullName: System.Speech.Recognition.Grammar.SpeechRecognized
- uid: System.EventHandler{System.Speech.Recognition.SpeechRecognizedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SpeechRecognizedEventArgs>
  nameWithType: EventHandler<SpeechRecognizedEventArgs>
  fullName: System.EventHandler<System.Speech.Recognition.SpeechRecognizedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Recognition.SpeechRecognizedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.SpeechRecognizedEventArgs
    name: SpeechRecognizedEventArgs
    nameWithType: SpeechRecognizedEventArgs
    fullName: SpeechRecognizedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.Grammar.StgInit(System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: StgInit(Object[])
  nameWithType: Grammar.StgInit(Object[])
  fullName: System.Speech.Recognition.Grammar.StgInit(Object[])
- uid: System.Speech.Recognition.Grammar.Weight
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Weight
  nameWithType: Grammar.Weight
  fullName: System.Speech.Recognition.Grammar.Weight
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Speech.Recognition.Grammar.#ctor*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar
  nameWithType: Grammar.Grammar
- uid: System.Speech.Recognition.Grammar.Enabled*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Enabled
  nameWithType: Grammar.Enabled
- uid: System.Speech.Recognition.Grammar.IsStg*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: IsStg
  nameWithType: Grammar.IsStg
- uid: System.Speech.Recognition.Grammar.Loaded*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Loaded
  nameWithType: Grammar.Loaded
- uid: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: LoadLocalizedGrammarFromType
  nameWithType: Grammar.LoadLocalizedGrammarFromType
- uid: System.Speech.Recognition.Grammar.Name*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Name
  nameWithType: Grammar.Name
- uid: System.Speech.Recognition.Grammar.Priority*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Priority
  nameWithType: Grammar.Priority
- uid: System.Speech.Recognition.Grammar.ResourceName*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: ResourceName
  nameWithType: Grammar.ResourceName
- uid: System.Speech.Recognition.Grammar.RuleName*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: RuleName
  nameWithType: Grammar.RuleName
- uid: System.Speech.Recognition.Grammar.StgInit*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: StgInit
  nameWithType: Grammar.StgInit
- uid: System.Speech.Recognition.Grammar.Weight*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Weight
  nameWithType: Grammar.Weight
