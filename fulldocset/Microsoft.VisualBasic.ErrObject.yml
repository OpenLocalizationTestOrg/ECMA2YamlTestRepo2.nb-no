### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.ErrObject
  id: ErrObject
  children:
  - Microsoft.VisualBasic.ErrObject.Clear
  - Microsoft.VisualBasic.ErrObject.Description
  - Microsoft.VisualBasic.ErrObject.Erl
  - Microsoft.VisualBasic.ErrObject.GetException
  - Microsoft.VisualBasic.ErrObject.HelpContext
  - Microsoft.VisualBasic.ErrObject.HelpFile
  - Microsoft.VisualBasic.ErrObject.LastDllError
  - Microsoft.VisualBasic.ErrObject.Number
  - Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)
  - Microsoft.VisualBasic.ErrObject.Source
  langs:
  - csharp
  name: ErrObject
  nameWithType: ErrObject
  fullName: Microsoft.VisualBasic.ErrObject
  type: Class
  summary: "Den <xref uid=&quot;langword_csharp_ErrObject&quot; name=&quot;ErrObject&quot; href=&quot;&quot;> </xref> modulen inneholder egenskapene og prosedyrer som brukes til å identifisere og håndtere kjøretidsfeil ved hjelp av den <xref uid=&quot;langword_csharp_Err&quot; name=&quot;Err&quot; href=&quot;&quot;> </xref> objektet."
  remarks: "Den `ErrObject` modul støtter det `Err` objektet. Hvis du vil ha mer informasjon, kan du se <xref:Microsoft.VisualBasic.Information.Err%2A>.</xref:Microsoft.VisualBasic.Information.Err%2A>"
  example:
  - "This example uses the properties of the `Err` object in constructing an error-message dialog box. Notice what happens when you use the `Clear` method first: When you then generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.  \n  \n```  \nDim Msg As String  \n' If an error occurs, construct an error message.  \nOn Error Resume Next   ' Defer error handling.  \nErr.Clear  \nErr.Raise(6)   ' Generate an \"Overflow\" error.  \n' Check for error, then show message.  \nIf Err.Number <> 0 Then  \n    Msg = \"Error # \" & Str(Err.Number) & \" was generated by \" _  \n        & Err.Source & ControlChars.CrLf & Err.Description  \n    MsgBox(Msg, MsgBoxStyle.Information, \"Error\")  \nEnd If  \n```"
  syntax:
    content: public sealed class ErrObject
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.Clear
  id: Clear
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: Clear()
  nameWithType: ErrObject.Clear()
  fullName: Microsoft.VisualBasic.ErrObject.Clear()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Fjerner alle innstillingene i <xref uid=&quot;langword_csharp_Err&quot; name=&quot;Err&quot; href=&quot;&quot;> </xref> objektet."
  remarks: "Bruk `Clear` eksplisitt fjerne den `Err` objekt etter en feil er behandlet, for eksempel når du bruker utsatt feilbehandling med `On Error Resume Next`. Den `Clear` -metoden automatisk når noen av følgende setningene utfører:-alle typer `Resume` setningen - `Exit Sub`, `Exit Function`, eller `Exit Property` – en hvilken som helst `On Error` setningen - alle `Try...Catch...Finally` setningen > [!NOTE] > den `On Error Resume Next` konstruksjon kanskje best å `On Error GoTo` når behandler generert feil under tilgang til andre objekter. Kontrollerer `Err` etter hver samhandling med et objekt fjerner tvetydigheten om som objektet ble tilgang til koden: du kan være at objektet som er plassert feilkoden `Err.Number`, og den som objektet opprinnelig genererte feilen (objektet som er angitt i `Err.Source`)."
  example:
  - "This example uses the `Err` object's `Clear` method to reset the numeric properties of the `Err` object to zero and its string properties to zero-length strings. Without the call to `Clear`, the second call to `MsgBox` would display the same error message.  \n  \n [!code-vb[VbVbalrErrorHandling#4](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._141_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: Microsoft.VisualBasic.ErrObject.Clear*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.Description
  id: Description
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: Description
  nameWithType: ErrObject.Description
  fullName: Microsoft.VisualBasic.ErrObject.Description
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer eller angir en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk som inneholder en beskrivende streng som er knyttet til en feil. Lese-og skrivetilgang."
  remarks: "Den `Description` består av en kort beskrivelse av feilen. Bruk denne egenskapen til å varsle brukeren til en feil som du ikke kan eller ikke ønsker å håndtere. Når genererer en brukerdefinert feil, kan du tilordne en kort beskrivelse av din feil til den `Description` egenskapen. Hvis den `Description` egenskapen ikke er utfylt, og verdien for den <xref:Microsoft.VisualBasic.ErrObject.Number%2A>egenskapen tilsvarer en kjøretidsfeil i Visual Basic og strengen som ble returnert av den <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A>funksjonen er angitt i den `Description` når feilen er generert.</xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> </xref:Microsoft.VisualBasic.ErrObject.Number%2A>"
  example:
  - "This example assigns a user-defined message to the `Description` property of the `Err` object.  \n  \n [!code-vb[VbVbalrErrorHandling#5](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._68_1.vb)]"
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "Returnerer eller angir en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk som inneholder en beskrivende streng som er knyttet til en feil. Lese-og skrivetilgang."
  overload: Microsoft.VisualBasic.ErrObject.Description*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.Erl
  id: Erl
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: Erl
  nameWithType: ErrObject.Erl
  fullName: Microsoft.VisualBasic.ErrObject.Erl
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer et heltall som angir linjenummeret for den siste setningen kjøres. Skrivebeskyttet."
  remarks: "Hvis Visual Basic finner ingen linjenummer, returneres 0."
  example:
  - "This example uses the `Erl` property to indicate the line number.  \n  \n```  \n10:     On Error Resume Next  \n20:     Err.Raise(60000)  \n' Returns 20.  \n30:     MsgBox(Erl())  \n```"
  syntax:
    content: public int Erl { get; }
    return:
      type: System.Int32
      description: "Returnerer et heltall som angir linjenummeret for den siste setningen kjøres. Skrivebeskyttet."
  overload: Microsoft.VisualBasic.ErrObject.Erl*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.GetException
  id: GetException
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: GetException()
  nameWithType: ErrObject.GetException()
  fullName: Microsoft.VisualBasic.ErrObject.GetException()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer unntak som representerer feilen som oppstod."
  remarks: "Den `GetException` funksjonen er bare tilgjengelig fra den `Err` objektklasse. Prosessen fungerer med den `Exception` -egenskapen til det `Err` objektet til å vise feilen som oppstod."
  example:
  - "The following code displays the message assigned to the exception in the `Err` object:  \n  \n [!code-vb[VbVbalrCatRef#66](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._226_1.vb)]"
  syntax:
    content: public Exception GetException ();
    parameters: []
    return:
      type: System.Exception
      description: "Returnerer unntak som representerer feilen som oppstod."
  overload: Microsoft.VisualBasic.ErrObject.GetException*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.HelpContext
  id: HelpContext
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: HelpContext
  nameWithType: ErrObject.HelpContext
  fullName: Microsoft.VisualBasic.ErrObject.HelpContext
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer eller angir en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> som inneholder Hjelp-IDen for et emne i en hjelpefilen. Lese-og skrivetilgang."
  remarks: "Den `HelpContext` egenskapen brukes til å vise kontekstavhengig hjelp for en applikasjon. Hvis en hjelpefilen er angitt i `HelpFile`, `HelpContext` egenskapen brukes til å vise automatisk identifisert hjelpefilen. Hvis både den `HelpFile` og `HelpContext` er tomt, verdien for den <xref:Microsoft.VisualBasic.ErrObject.Number%2A>egenskapen er merket.</xref:Microsoft.VisualBasic.ErrObject.Number%2A> Hvis verdien for den `Number` egenskapen tilsvarer en Visual Basic kjøretidsfeil verdi og hjelp for Visual Basic Hjelp-IDen for feil er brukt. Hvis verdien for den `Number` egenskapen samsvarer ikke med en feil i Visual Basic, vises skjermbildet innholdet for hjelpefilen i Visual Basic.      > [!NOTE] > Noter for i programmet for å behandle vanlige feil. Når programming med et objekt, kan du bruke objektets hjelpefilen å forbedre kvaliteten på din feilbehandling, eller til å vise en betydning melding til brukeren hvis feilen ikke, kan gjenopprettes."
  example:
  - "This example uses the `HelpContext` property of the `Err` object to show the Visual Basic Help topic for the `Overflow` error.  \n  \n [!code-vb[VbVbalrErrorHandling#7](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._34_1.vb)]"
  syntax:
    content: public int HelpContext { get; set; }
    return:
      type: System.Int32
      description: "Returnerer eller angir en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> som inneholder Hjelp-IDen for et emne i en hjelpefilen. Lese-og skrivetilgang."
  overload: Microsoft.VisualBasic.ErrObject.HelpContext*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.HelpFile
  id: HelpFile
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: HelpFile
  nameWithType: ErrObject.HelpFile
  fullName: Microsoft.VisualBasic.ErrObject.HelpFile
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer eller angir en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk som inneholder den fullstendige banen til en hjelpefil for å få. Lese-og skrivetilgang."
  remarks: "Hvis en hjelpefilen er angitt av den `HelpFile` egenskapen automatisk kalles når brukeren trykker Hjelp-nøkkel (eller F1 for) i dialogboksen for feil. Hvis den `HelpContext` egenskapen inneholder en gyldig kontekst-IDen for den angitte filen, emnet vises automatisk. Hvis ingen `HelpFile` er angitt, i Visual Basic hjelpefilen.      > [!NOTE] > Noter for i programmet for å behandle vanlige feil. Når programming med et objekt, kan du bruke objektets hjelpefilen å forbedre kvaliteten på din feilbehandling, eller til å vise en betydning melding til brukeren hvis feilen ikke, kan gjenopprettes."
  example:
  - "This example uses the `HelpFile` property of the `Err` object to start the Help system. By default, the `HelpFile` property contains the name of the Visual Basic Help file.  \n  \n [!code-vb[VbVbalrErrorHandling#7](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._70_1.vb)]"
  syntax:
    content: public string HelpFile { get; set; }
    return:
      type: System.String
      description: "Returnerer eller angir en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk som inneholder den fullstendige banen til en hjelpefil for å få. Lese-og skrivetilgang."
  overload: Microsoft.VisualBasic.ErrObject.HelpFile*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.LastDllError
  id: LastDllError
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: LastDllError
  nameWithType: ErrObject.LastDllError
  fullName: Microsoft.VisualBasic.ErrObject.LastDllError
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en Systemfeilkode fra et kall til et bibliotek for dynamiske koblinger (DLL). Skrivebeskyttet."
  remarks: "Egenskapen LastDllError gjelder bare for DLL-filen samtaler fra Visual Basic-kode. Når slike angis, den kalte funksjonen returnerer vanligvis en kode som angir var vellykket eller mislykket og LastDllError-egenskapen fylles ut. Se dokumentasjonen for DLL-funksjoner å finne ut returverdier som angir var vellykket eller mislykket. Når feilkoden returneres, bør umiddelbart Visual Basic-programmet kontrollere LastDllError-egenskapen. Ingen unntak oppstår når egenskapen LastDllError er angitt.      > [!NOTE] > I LastDllError-egenskapen er beskyttet av <xref:System.Security.Permissions.SecurityAction>, som bidrar til å hindre at som åpnes fra uklarerte kode.</xref:System.Security.Permissions.SecurityAction> Imidlertid <xref:System.Security.Permissions.SecurityAction>krever bare umiddelbar oppkalleren har <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A>tillatelse.</xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> </xref:System.Security.Permissions.SecurityAction> Hvis koden kan bare kalles fra delvis klarert kode, er at verdien for LastDllError uten validering en sikkerhetsrisiko.   >> For viktige begrensninger om hvordan du bruker den <xref:System.Security.Permissions.SecurityAction>medlem, kan du se [krever</xref:System.Security.Permissions.SecurityAction> LinkDemand](http://msdn.microsoft.com/en-us/1ab877f2-70f4-4e0d-8116-943999dfe8f5). Du finner mer informasjon om tillatelser i <xref:System.Security.Permissions.SecurityPermission>og [kode tilgangstillatelser](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>       Merk For smart enheter egenskapen alltid returnerer null."
  example:
  - "The following example shows how you can use the `LastDllError` property after calling a function in the Windows API. The `PrintWindowCoordinates` procedure takes a handle to a window and calls the `GetWindowRect` function. `GetWindowRect` fills the RECT data structure with the lengths of the sides of the rectangle that make up the window. If you pass an invalid handle, an error occurs, and the error number is available through the `LastDllError` property.  \n  \n [!code-vb[VbVbalrErrorHandling#8](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._45_1.vb)]  \n[!code-vb[VbVbalrErrorHandling#9](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._45_2.vb)]  \n[!code-vb[VbVbalrErrorHandling#10](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._45_3.vb)]  \n  \n [!code-vb[VbVbalrErrorHandling#11](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._45_4.vb)]"
  syntax:
    content: public int LastDllError { get; }
    return:
      type: System.Int32
      description: "Returnerer en Systemfeilkode fra et kall til et bibliotek for dynamiske koblinger (DLL). Skrivebeskyttet."
  overload: Microsoft.VisualBasic.ErrObject.LastDllError*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.Number
  id: Number
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: Number
  nameWithType: ErrObject.Number
  fullName: Microsoft.VisualBasic.ErrObject.Number
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer eller angir en numerisk verdi som angir en feil. Lese-og skrivetilgang."
  remarks: "Alle de `Raise` argumenter unntatt `Number` er valgfrie. Hvis du utelater valgfrie argumenter og egenskapsinnstillingene for den `Err` objektet inneholder verdier som ikke har blitt tømt, verdiene fungerer som verdier for feilen.       Fordi den `Err` objektet gir bedre informasjon enn når du kan generere feil med den `Error` setningen `Raise` er nyttig for å generere feil under skriving av klassemoduler. Hvis du for eksempel den `Raise` metoden kilden som genererte feilen kan angis i den `Source` egenskapen elektronisk hjelp for feil kan refereres til, og så videre.       Når en brukerdefinert feil returneres fra et objekt, må du angi `Err.Number` ved å legge til den valgte som en feilkode til den `VbObjectError` konstant. For eksempel bruke følgende kode til å returnere tall 1051 som en feilkode: [!code-vb [VbVbalrErrorHandling #13](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._83_1.vb)]"
  example:
  - "This example illustrates a typical use of the `Number` property in an error-handling routine.  \n  \n [!code-vb[VbVbalrErrorHandling#12](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._83_2.vb)]  \n  \n This example uses the `Err` object's `Raise` method to generate an original error within a function written in Visual Basic. The calling function can catch the error and report it to the user. Notice that procedure `CallingProcedure` contrasts the type of information that you can derive from an `Err` object with the information that you can derive from an `Exception` object.  \n  \n [!code-vb[VbVbalrErrorHandling#14](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._83_3.vb)]"
  syntax:
    content: public int Number { get; set; }
    return:
      type: System.Int32
      description: "Returnerer eller angir en numerisk verdi som angir en feil. Lese-og skrivetilgang."
  overload: Microsoft.VisualBasic.ErrObject.Number*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Number</code>er større enn 65535."
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)
  id: Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: Raise(Int32,Object,Object,Object,Object)
  nameWithType: ErrObject.Raise(Int32,Object,Object,Object,Object)
  fullName: Microsoft.VisualBasic.ErrObject.Raise(Int32,Object,Object,Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Genererer en kjøretidsfeil; kan bare brukes i stedet for den <xref uid=&quot;langword_csharp_Error&quot; name=&quot;Error&quot; href=&quot;&quot;> </xref> setningen."
  remarks: "Alle de `Raise` argumenter unntatt `Number` er valgfrie. Hvis du utelater valgfrie argumenter og egenskapsinnstillingene for den `Err` objektet inneholder verdier som ikke har blitt tømt, verdiene fungerer som verdier for feilen.       Fordi den `Err` objektet gir bedre informasjon enn når du kan generere feil med den `Error` setningen `Raise` er nyttig for å generere feil under skriving av klassemoduler. Hvis du for eksempel den `Raise` metoden kilden som genererte feilen kan angis i den `Source` egenskapen elektronisk hjelp for feil kan refereres til, og så videre."
  example:
  - "This example uses the `Err` object's `Raise` method to generate an error within a function written in Visual Basic. The calling function can catch the error and report it to the user with a message box.  \n  \n [!code-vb[VbVbalrErrorHandling#14](~/add/codesnippet/visualbasic/b1f4ec6f-36d3-4787-9987-_1.vb)]"
  syntax:
    content: public void Raise (int Number, object Source = null, object Description = null, object HelpFile = null, object HelpContext = null);
    parameters:
    - id: Number
      type: System.Int32
      description: "Kreves. <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref>heltall som angir typen feil. Feil i Visual Basic er i området 0 – 65535; området 0 – 512 er reservert for systemfeil; området 513 – 65535 er tilgjengelig for brukerdefinerte feil. Ved angivelse av <xref uid=&quot;langword_csharp_Number&quot; name=&quot;Number&quot; href=&quot;&quot;> </xref> egenskapen din egen feilkoden klassen modulen du legger til ditt feilkoden til den <xref uid=&quot;langword_csharp_vbObjectError&quot; name=&quot;vbObjectError&quot; href=&quot;&quot;> </xref> konstant. For eksempel for å generere feilnummeret 513 tilordne `vbObjectError + 513` til den <xref uid=&quot;langword_csharp_Number&quot; name=&quot;Number&quot; href=&quot;&quot;> </xref> egenskapen."
    - id: Source
      type: System.Object
      description: "Valgfritt. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>uttrykket navngi objektet eller programmet som genererte feilen. Når du angir denne egenskapen for et objekt, kan du bruke formatet `project`.`class`. Hvis `Source` ikke er angitt, brukes prosess-IDen for gjeldende prosjekt i Visual Basic."
    - id: Description
      type: System.Object
      description: "Valgfritt. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>uttrykket som beskriver problemet. Hvis ikke angitt verdien i den <xref uid=&quot;langword_csharp_Number&quot; name=&quot;Number&quot; href=&quot;&quot;> </xref> egenskapen undersøkes. Hvis den kan tilordnes til en kjøretidsfeil i Visual Basic kode, strengen som returneres av den <xref uid=&quot;langword_csharp_Error&quot; name=&quot;Error&quot; href=&quot;&quot;> </xref> funksjon brukes som den <xref uid=&quot;langword_csharp_Description&quot; name=&quot;Description&quot; href=&quot;&quot;> </xref> egenskapen. Hvis det er ingen Visual Basic feil som tilsvarer det <xref uid=&quot;langword_csharp_Number&quot; name=&quot;Number&quot; href=&quot;&quot;> </xref> egenskapen &quot;Programdefinert eller objekt brukerdefinert&quot; feilmeldingen brukes."
    - id: HelpFile
      type: System.Object
      description: "Valgfritt. Den fullstendige banen til hjelpefilen hjelp om denne feilen finner. Hvis ikke angitt, bruker Visual Basic fullstendige stasjon, bane og filnavn for hjelpefilen i Visual Basic."
    - id: HelpContext
      type: System.Object
      description: "Valgfritt. Context-ID som identifiserer et emne i `HelpFile` som gir hjelp for feil. Hvis den utelates, Visual Basic hjelpefilen Hjelp-IDen for informasjon om feilen som tilsvarer det <xref uid=&quot;langword_csharp_Number&quot; name=&quot;Number&quot; href=&quot;&quot;> </xref> egenskapen som brukes hvis den finnes."
  overload: Microsoft.VisualBasic.ErrObject.Raise*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.Source
  id: Source
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: Source
  nameWithType: ErrObject.Source
  fullName: Microsoft.VisualBasic.ErrObject.Source
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer eller angir en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk som angir navnet på objektet eller programmet som opprinnelig genererte feilen. Lese-og skrivetilgang."
  remarks: "Den `Source` egenskapen angir en `String` uttrykket som representerer objektet som genererte feilen; uttrykket er vanligvis objektets Klassenavn eller prosess-ID. Bruk av `Source` til å angi informasjonen når koden kan ikke behandle en feil genereres i et objekt som er åpnet. Hvis for eksempel, du har tilgang til Microsoft Excel, og det genereres en `Division by zero` feil Microsoft Excel angir `Err.Number` til feilkoden for denne feilen og angir `Source` til &quot;Excel.Application&quot;.       Når programmet genererer en feilmelding fra kode, `Source` er programmets programmatisk-ID. I en klasse `Source` må inneholde et navn på skjemaet *prosjektet*.* Klassen*. Når det oppstår en uventet feil i koden, den `Source` egenskapen fylt ut automatisk. Feil i en modul `Source` inneholder prosjektnavnet på."
  example:
  - "This example demonstrates the use of the `Source` property in a typical error-handling routine. When an error is raised from `Class1`, the string `\"Class1\"` is assigned to the `Source` property of the `Err` object. This string is then displayed in an informative message indicating the source and number of the error.  \n  \n [!code-vb[VbVbalrErrorHandling#15](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._39_1.vb)]"
  syntax:
    content: public string Source { get; set; }
    return:
      type: System.String
      description: "Returnerer eller angir en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk som angir navnet på objektet eller programmet som opprinnelig genererte feilen. Lese-og skrivetilgang."
  overload: Microsoft.VisualBasic.ErrObject.Source*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: Microsoft.VisualBasic.ErrObject.Clear
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Clear()
  nameWithType: ErrObject.Clear()
  fullName: Microsoft.VisualBasic.ErrObject.Clear()
- uid: Microsoft.VisualBasic.ErrObject.Description
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Description
  nameWithType: ErrObject.Description
  fullName: Microsoft.VisualBasic.ErrObject.Description
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.ErrObject.Erl
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Erl
  nameWithType: ErrObject.Erl
  fullName: Microsoft.VisualBasic.ErrObject.Erl
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.ErrObject.GetException
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: GetException()
  nameWithType: ErrObject.GetException()
  fullName: Microsoft.VisualBasic.ErrObject.GetException()
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.VisualBasic.ErrObject.HelpContext
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: HelpContext
  nameWithType: ErrObject.HelpContext
  fullName: Microsoft.VisualBasic.ErrObject.HelpContext
- uid: Microsoft.VisualBasic.ErrObject.HelpFile
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: HelpFile
  nameWithType: ErrObject.HelpFile
  fullName: Microsoft.VisualBasic.ErrObject.HelpFile
- uid: Microsoft.VisualBasic.ErrObject.LastDllError
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: LastDllError
  nameWithType: ErrObject.LastDllError
  fullName: Microsoft.VisualBasic.ErrObject.LastDllError
- uid: Microsoft.VisualBasic.ErrObject.Number
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Number
  nameWithType: ErrObject.Number
  fullName: Microsoft.VisualBasic.ErrObject.Number
- uid: Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Raise(Int32,Object,Object,Object,Object)
  nameWithType: ErrObject.Raise(Int32,Object,Object,Object,Object)
  fullName: Microsoft.VisualBasic.ErrObject.Raise(Int32,Object,Object,Object,Object)
- uid: Microsoft.VisualBasic.ErrObject.Source
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Source
  nameWithType: ErrObject.Source
  fullName: Microsoft.VisualBasic.ErrObject.Source
- uid: Microsoft.VisualBasic.ErrObject.Clear*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Clear
  nameWithType: ErrObject.Clear
- uid: Microsoft.VisualBasic.ErrObject.Description*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Description
  nameWithType: ErrObject.Description
- uid: Microsoft.VisualBasic.ErrObject.Erl*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Erl
  nameWithType: ErrObject.Erl
- uid: Microsoft.VisualBasic.ErrObject.GetException*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: GetException
  nameWithType: ErrObject.GetException
- uid: Microsoft.VisualBasic.ErrObject.HelpContext*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: HelpContext
  nameWithType: ErrObject.HelpContext
- uid: Microsoft.VisualBasic.ErrObject.HelpFile*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: HelpFile
  nameWithType: ErrObject.HelpFile
- uid: Microsoft.VisualBasic.ErrObject.LastDllError*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: LastDllError
  nameWithType: ErrObject.LastDllError
- uid: Microsoft.VisualBasic.ErrObject.Number*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Number
  nameWithType: ErrObject.Number
- uid: Microsoft.VisualBasic.ErrObject.Raise*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Raise
  nameWithType: ErrObject.Raise
- uid: Microsoft.VisualBasic.ErrObject.Source*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Source
  nameWithType: ErrObject.Source
