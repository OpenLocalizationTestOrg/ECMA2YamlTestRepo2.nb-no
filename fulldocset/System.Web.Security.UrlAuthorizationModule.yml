### YamlMime:ManagedReference
items:
- uid: System.Web.Security.UrlAuthorizationModule
  id: UrlAuthorizationModule
  children:
  - System.Web.Security.UrlAuthorizationModule.#ctor
  - System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal(System.String,System.Security.Principal.IPrincipal,System.String)
  - System.Web.Security.UrlAuthorizationModule.Dispose
  - System.Web.Security.UrlAuthorizationModule.Init(System.Web.HttpApplication)
  langs:
  - csharp
  name: UrlAuthorizationModule
  nameWithType: UrlAuthorizationModule
  fullName: System.Web.Security.UrlAuthorizationModule
  type: Class
  summary: "Kontrollerer at brukeren har tilgang til den forespurte URLEN. Denne klassen kan ikke arves."
  remarks: "UrlAuthorizationModule bestemmer om den gjeldende brukeren er tillatt tilgang til den forespurte URL-adressen, basert på brukeren <xref:System.Security.Principal.IIdentity.Name%2A>eller listen over roller som en bruker er medlem av.</xref:System.Security.Principal.IIdentity.Name%2A> For informasjon om hvordan brukernavnet bestemmes, kan du se [ASP.NET godkjenning](~/add/includes/ajax-current-ext-md.md). For informasjon om hvordan du administrerer brukerroller, kan du se [behandle godkjenning ved hjelp av rollene](~/add/includes/ajax-current-ext-md.md).       Godkjenning for en bruker eller en rolle er administrert med konfigurasjonselementet. Du kan gi eller avslå en bruker eller en rolle ved hjelp av `allow` eller `deny` underelementene, henholdsvis. Den `allow` og `deny` underelementene tolkes i rekkefølgen som vises i konfigurasjonen. Når et element angir at tilgang er tillatt, eller har avslått, er UrlAuthorizationModule den authorization-kontroller. For eksempel delen nedenfor fra en Web.config-filen krever at brukere å logge på (ved å nekte anonyme brukere), og deretter kan du bare brukere i Administratorer-brukerrollen skal ha tilgang. Brukerne ikke i Administratorer-rollen er avslått.      ```   <authorization>     <deny users=&quot;?&quot; />     <allow roles=&quot;Administrators&quot; />     <deny users=&quot;*&quot; />   </authorization>   ```Brukeren eller rollen må spesielt avslått nekter brukeren eller rollen tilgang til en URL-adresse. Det vil si hvis det forrige eksemplet ikke har angitt i `<deny users=&quot;*&quot; />` elementet og alle godkjente brukere vil har blitt gitt tilgang til den forespurte URL, uansett hvilken rolle de var medlem av."
  example:
  - "The following code example grants access to Kim and members of the Admins role, while denying it to John and all anonymous users.  \n  \n```  \n<authorization>  \n  <allow users=\"Kim\"/>  \n  <allow roles=\"Admins\"/>  \n  <deny users=\"John\"/>  \n  <deny users=\"?\"/>  \n</authorization>  \n```"
  syntax:
    content: 'public sealed class UrlAuthorizationModule : System.Web.IHttpModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.UrlAuthorizationModule.#ctor
  id: '#ctor'
  parent: System.Web.Security.UrlAuthorizationModule
  langs:
  - csharp
  name: UrlAuthorizationModule()
  nameWithType: UrlAuthorizationModule.UrlAuthorizationModule()
  fullName: System.Web.Security.UrlAuthorizationModule.UrlAuthorizationModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Oppretter en forekomst av den <xref href=&quot;System.Web.Security.UrlAuthorizationModule&quot;> </xref> klasse."
  remarks: "Denne konstruktøren skal ikke kalles fra programmet kode.       ASP.NET kaller denne konstruktøren for å opprette en forekomst av <xref:System.Web.Security.UrlAuthorizationModule>klassen.</xref:System.Web.Security.UrlAuthorizationModule> Etter kall til konstruktøren, kaller den <xref:System.Web.Security.UrlAuthorizationModule.Init%2A>metode for å initialisere den nye <xref:System.Web.Security.UrlAuthorizationModule>objektet.</xref:System.Web.Security.UrlAuthorizationModule> </xref:System.Web.Security.UrlAuthorizationModule.Init%2A>"
  syntax:
    content: public UrlAuthorizationModule ();
    parameters: []
  overload: System.Web.Security.UrlAuthorizationModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal(System.String,System.Security.Principal.IPrincipal,System.String)
  id: CheckUrlAccessForPrincipal(System.String,System.Security.Principal.IPrincipal,System.String)
  parent: System.Web.Security.UrlAuthorizationModule
  langs:
  - csharp
  name: CheckUrlAccessForPrincipal(String,IPrincipal,String)
  nameWithType: UrlAuthorizationModule.CheckUrlAccessForPrincipal(String,IPrincipal,String)
  fullName: System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal(String,IPrincipal,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Bestemmer om brukeren har tilgang til den forespurte filen."
  remarks: "Metoden CheckUrlAccessForPrincipal kontrollerer om den gjeldende brukeren har fått tilgang til den forespurte filen i filen Web.config for applikasjonen.       Hvis HTTP-verbet brukt til å gjøre forespørselen er `GET`, `POST`, eller `HEAD`, metoden CheckUrlAccessForPrincipal søker etter lesetilgang til filen. Hvis andre verb brukes, kontrollerer du CheckUrlAccessForPrincipal for lese-/ skrivetilgang til filen.       Hvis du vil ha mer informasjon og et eksempel Web.config-filen, kan du se den <xref:System.Web.Security.UrlAuthorizationModule>klasse dokumentasjon.</xref:System.Web.Security.UrlAuthorizationModule>"
  syntax:
    content: public static bool CheckUrlAccessForPrincipal (string virtualPath, System.Security.Principal.IPrincipal user, string verb);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Den virtuelle banen til filen."
    - id: user
      type: System.Security.Principal.IPrincipal
      description: "En <xref:System.Security.Principal.IPrincipal>-objekt som representerer gjeldende bruker.</xref:System.Security.Principal.IPrincipal>"
    - id: verb
      type: System.String
      description: "HTTP-verbet som brukes til å sende forespørselen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den gjeldende brukeren kan få tilgang til filen. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>user</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>verb</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>virtualPath</code>er utenfor rotbanen programmet."
  platform:
  - net462
- uid: System.Web.Security.UrlAuthorizationModule.Dispose
  id: Dispose
  parent: System.Web.Security.UrlAuthorizationModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: UrlAuthorizationModule.Dispose()
  fullName: System.Web.Security.UrlAuthorizationModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Frigir alle ressurser enn minnet som brukes av den <xref href=&quot;System.Web.Security.UrlAuthorizationModule&quot;> </xref>."
  remarks: "Denne metoden skal ikke kalles fra programmet kode."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.Security.UrlAuthorizationModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.UrlAuthorizationModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.Security.UrlAuthorizationModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: UrlAuthorizationModule.Init(HttpApplication)
  fullName: System.Web.Security.UrlAuthorizationModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Initialiserer den <xref href=&quot;System.Web.Security.UrlAuthorizationModule&quot;> </xref> objektet."
  remarks: "Denne metoden skal ikke kalles fra programmet kode.       Init-metoden sikrer at den <xref:System.Web.Security.UrlAuthorizationModule>er inkludert i behandlingen av den <xref:System.Web.HttpApplication.AuthorizeRequest>hendelsen.</xref:System.Web.HttpApplication.AuthorizeRequest> </xref:System.Web.Security.UrlAuthorizationModule>"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "Gjeldende <xref href=&quot;System.Web.HttpApplication&quot;> </xref> forekomsten."
  overload: System.Web.Security.UrlAuthorizationModule.Init*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.Security.UrlAuthorizationModule.#ctor
  parent: System.Web.Security.UrlAuthorizationModule
  isExternal: false
  name: UrlAuthorizationModule()
  nameWithType: UrlAuthorizationModule.UrlAuthorizationModule()
  fullName: System.Web.Security.UrlAuthorizationModule.UrlAuthorizationModule()
- uid: System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal(System.String,System.Security.Principal.IPrincipal,System.String)
  parent: System.Web.Security.UrlAuthorizationModule
  isExternal: false
  name: CheckUrlAccessForPrincipal(String,IPrincipal,String)
  nameWithType: UrlAuthorizationModule.CheckUrlAccessForPrincipal(String,IPrincipal,String)
  fullName: System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal(String,IPrincipal,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Web.Security.UrlAuthorizationModule.Dispose
  parent: System.Web.Security.UrlAuthorizationModule
  isExternal: false
  name: Dispose()
  nameWithType: UrlAuthorizationModule.Dispose()
  fullName: System.Web.Security.UrlAuthorizationModule.Dispose()
- uid: System.Web.Security.UrlAuthorizationModule.Init(System.Web.HttpApplication)
  parent: System.Web.Security.UrlAuthorizationModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: UrlAuthorizationModule.Init(HttpApplication)
  fullName: System.Web.Security.UrlAuthorizationModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.Security.UrlAuthorizationModule.#ctor*
  parent: System.Web.Security.UrlAuthorizationModule
  isExternal: false
  name: UrlAuthorizationModule
  nameWithType: UrlAuthorizationModule.UrlAuthorizationModule
- uid: System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal*
  parent: System.Web.Security.UrlAuthorizationModule
  isExternal: false
  name: CheckUrlAccessForPrincipal
  nameWithType: UrlAuthorizationModule.CheckUrlAccessForPrincipal
- uid: System.Web.Security.UrlAuthorizationModule.Dispose*
  parent: System.Web.Security.UrlAuthorizationModule
  isExternal: false
  name: Dispose
  nameWithType: UrlAuthorizationModule.Dispose
- uid: System.Web.Security.UrlAuthorizationModule.Init*
  parent: System.Web.Security.UrlAuthorizationModule
  isExternal: false
  name: Init
  nameWithType: UrlAuthorizationModule.Init
