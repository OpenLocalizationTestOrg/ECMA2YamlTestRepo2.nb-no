### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectory.Domain
  id: Domain
  children:
  - System.DirectoryServices.ActiveDirectory.Domain.Children
  - System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  - System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)
  - System.DirectoryServices.ActiveDirectory.Domain.DomainControllers
  - System.DirectoryServices.ActiveDirectory.Domain.DomainMode
  - System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel
  - System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers
  - System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers
  - System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.FindDomainController
  - System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)
  - System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  - System.DirectoryServices.ActiveDirectory.Domain.Forest
  - System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships
  - System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain
  - System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain
  - System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry
  - System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  - System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner
  - System.DirectoryServices.ActiveDirectory.Domain.Parent
  - System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner
  - System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)
  - System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(System.Int32)
  - System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)
  - System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner
  - System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)
  - System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)
  - System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  - System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  langs:
  - csharp
  name: Domain
  nameWithType: Domain
  fullName: System.DirectoryServices.ActiveDirectory.Domain
  type: Class
  summary: "Domene-klassen representerer en Active Directory-domene."
  syntax:
    content: 'public class Domain : System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition'
  inheritance:
  - System.Object
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition
  implements: []
  inheritedMembers:
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.Children
  id: Children
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: Children
  nameWithType: Domain.Children
  fullName: System.DirectoryServices.ActiveDirectory.Domain.Children
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Henter domenene som underordnede av dette domenet."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainCollection Children { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainCollection
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainCollection&quot;> </xref> objekt som inneholder underordnede domener."
  overload: System.DirectoryServices.ActiveDirectory.Domain.Children*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  id: CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
  nameWithType: Domain.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Oppretter den lokale siden av en klareringsrelasjon med det angitte domenet."
  remarks: "Denne metoden, oppretter ene siden av en klareringsrelasjon. Klareringen er ikke opprettet til begge sider av klareringen har blitt opprettet.       Den `trustPassword` parameteren knytter et passord med opprettet klarering. Når den andre siden av klareringen er opprettet, er angitt i det samme passordet og to lokale klareringer deretter er bundet til hverandre.       Hvis du vil opprette programmatisk begge sider av en klareringsrelasjon i et enkelt metodekall, kan du bruke den <xref:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship%2A?displayProperty=fullName>metoden.</xref:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship%2A?displayProperty=fullName>"
  syntax:
    content: public void CreateLocalSideOfTrustRelationship (string targetDomainName, System.DirectoryServices.ActiveDirectory.TrustDirection direction, string trustPassword);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "DNS-navnet til domenet som klareringen opprettes med."
    - id: direction
      type: System.DirectoryServices.ActiveDirectory.TrustDirection
      description: "Én av de <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> medlemmer som bestemmer retningen på klareringen i forhold til dette domenet."
    - id: trustPassword
      type: System.String
      description: "Passordet for klareringen. Se Merknader nedenfor."
  overload: System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
    description: "Klareringsforholdet finnes allerede."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Et kall til den underliggende katalogtjenesten førte til en feil."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Målserveren er opptatt eller er utilgjengelig."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>eller <code>trustPassword</code> er tom."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>or <code>trustPassword</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>direction</code>er ikke et gyldig <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> verdi."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den angitte kontoen har ikke tillatelse til å utføre denne operasjonen."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  id: CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: CreateTrustRelationship(Domain,TrustDirection)
  nameWithType: Domain.CreateTrustRelationship(Domain,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(Domain,TrustDirection)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Oppretter begge sider av en klareringsrelasjon med det angitte domenet."
  remarks: "Denne metoden oppretter begge sider av en klareringsrelasjon med et enkelt metodekall. Den <xref:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship%2A?displayProperty=fullName>metoden brukes til å opprette én side av en klarering.</xref:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship%2A?displayProperty=fullName>"
  syntax:
    content: public void CreateTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain, System.DirectoryServices.ActiveDirectory.TrustDirection direction);
    parameters:
    - id: targetDomain
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> objektet som representerer domenet som klareringen opprettes med."
    - id: direction
      type: System.DirectoryServices.ActiveDirectory.TrustDirection
      description: "Én av de <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> medlemmer som bestemmer retningen på klareringen i forhold til dette domenet."
  overload: System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
    description: "Klareringsforholdet finnes allerede."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Et kall til den underliggende katalogtjenesten førte til en feil."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Målserveren er opptatt eller er utilgjengelig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomain</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>direction</code>er ikke et gyldig <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> verdi."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den angitte kontoen har ikke tillatelse til å utføre denne operasjonen."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)
  id: DeleteLocalSideOfTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: DeleteLocalSideOfTrustRelationship(String)
  nameWithType: Domain.DeleteLocalSideOfTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Sletter den lokale siden av en klareringsrelasjon."
  remarks: "Når ene siden av en klareringsrelasjon slettes, finnes klareringen lenger.       Hvis du vil slette begge sider av en klareringsrelasjon én metodekall, kan du bruke den <xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship%2A?displayProperty=fullName>metoden.</xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship%2A?displayProperty=fullName>"
  syntax:
    content: public void DeleteLocalSideOfTrustRelationship (string targetDomainName);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "DNS-navnet til domenet som klareringen finnes med."
  overload: System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Det er ingen klareringsrelasjon den <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> som er angitt i den <code> targetDomainName </code> parameteren."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Et kall til den underliggende katalogtjenesten førte til en feil."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Målserveren er opptatt eller er utilgjengelig."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>er en tom streng."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den angitte kontoen har ikke tillatelse til å utføre denne operasjonen."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)
  id: DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: DeleteTrustRelationship(Domain)
  nameWithType: Domain.DeleteTrustRelationship(Domain)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(Domain)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Sletter begge sider av en klareringsrelasjon."
  remarks: "Hvis du vil slette én side av en klareringsrelasjon, kan du bruke den <xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship%2A?displayProperty=fullName>metoden.</xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship%2A?displayProperty=fullName>"
  syntax:
    content: public void DeleteTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain);
    parameters:
    - id: targetDomain
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> objektet som representerer domenet som klareringen finnes med."
  overload: System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Det er ingen klareringsrelasjon angitt <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Et kall til den underliggende katalogtjenesten førte til en feil."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Målserveren er opptatt eller er utilgjengelig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomain</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den angitte kontoen har ikke tillatelse til å utføre denne operasjonen."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainControllers
  id: DomainControllers
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: DomainControllers
  nameWithType: Domain.DomainControllers
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DomainControllers
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Henter domenekontrollere i dette domenet."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainControllerCollection DomainControllers { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainControllerCollection&quot;> </xref> objekt som inneholder domenekontrollere i dette domenet."
  overload: System.DirectoryServices.ActiveDirectory.Domain.DomainControllers*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainMode
  id: DomainMode
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: DomainMode
  nameWithType: Domain.DomainMode
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DomainMode
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Henter modus som dette domenet brukes i."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainMode DomainMode { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainMode
      description: "Én av de <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainMode&quot;> </xref> verdier som angir modus som dette domenet brukes i."
  overload: System.DirectoryServices.ActiveDirectory.Domain.DomainMode*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel
  id: DomainModeLevel
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: DomainModeLevel
  nameWithType: Domain.DomainModeLevel
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Henter modus nivået som dette domenet opererer i."
  syntax:
    content: public int DomainModeLevel { get; }
    return:
      type: System.Int32
      description: "Domenet modus nivået."
  overload: System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers
  id: FindAllDiscoverableDomainControllers
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: FindAllDiscoverableDomainControllers()
  nameWithType: Domain.FindAllDiscoverableDomainControllers()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Finner alle synlig domenekontrollere i dette domenet."
  remarks: "Du finner synlig domenekontrollere ved å spørre DNS SRV-oppføringer. Disse domenekontrollere som registrerer generisk, område-Uspesifisert, domene domenekontrolleren SRV-posten, returneres av denne metoden."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDiscoverableDomainControllers ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainControllerCollection&quot;> </xref> som inneholder domenet domenekontrolleren-objekter som ble funnet av denne metoden."
  overload: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Målserveren er opptatt eller er utilgjengelig."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)
  id: FindAllDiscoverableDomainControllers(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: FindAllDiscoverableDomainControllers(String)
  nameWithType: Domain.FindAllDiscoverableDomainControllers(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Finner alle synlig domenekontrollere i dette domenet, finnes også i det angitte området."
  remarks: "Du finner synlig domenekontrollere ved å spørre DNS SRV-oppføringer.  Hvis en domenekontroller ikke registrerer en SRV-registrering for det angitte området, vil den ikke returnert av denne metoden, selv om domenekontrolleren er fysisk er plassert i dette området.       Alle domenekontrollere som registrerer en SRV-registrering for det angitte området vil bli returnert av denne metoden, selv om de ikke er fysisk er plassert i dette området."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDiscoverableDomainControllers (string siteName);
    parameters:
    - id: siteName
      type: System.String
      description: "Navnet på området til å søke etter domenekontrollere."
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainControllerCollection&quot;> </xref> som inneholder domenet domenekontrolleren-objekter som ble funnet av denne metoden."
  overload: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Målserveren er opptatt eller er utilgjengelig."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>siteName</code>er en tom streng."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>siteName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers
  id: FindAllDomainControllers
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: FindAllDomainControllers()
  nameWithType: Domain.FindAllDomainControllers()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Finner alle domenekontrollere i dette domenet."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDomainControllers ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainControllerCollection&quot;> </xref> som inneholder domenet domenekontrolleren-objekter som ble funnet av denne metoden."
  overload: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Målserveren er opptatt eller er utilgjengelig."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)
  id: FindAllDomainControllers(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: FindAllDomainControllers(String)
  nameWithType: Domain.FindAllDomainControllers(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Finner alle domenekontrollere i dette domenet, finnes også i det angitte området."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDomainControllers (string siteName);
    parameters:
    - id: siteName
      type: System.String
      description: "Navnet på området til å søke etter domenekontrollere."
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainControllerCollection&quot;> </xref> som inneholder domenet domenekontrolleren-objekter som ble funnet av denne metoden."
  overload: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Målserveren er opptatt eller er utilgjengelig."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>siteName</code>er en tom streng."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>siteName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController
  id: FindDomainController
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: FindDomainController()
  nameWithType: Domain.FindDomainController()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Finner ingen domenekontroller i dette domenet."
  remarks: "Denne metoden finner en domenekontroller i domenet. Det er ingen garantier samme domenekontroller som blir funnet av et annet kall til denne metoden."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref> som representerer domenekontrolleren som blir funnet av denne metoden."
  overload: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Finner ikke en domenekontroller."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Et kall til den underliggende katalogtjenesten førte til en feil."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)
  id: FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: FindDomainController(LocatorOptions)
  nameWithType: Domain.FindDomainController(LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(LocatorOptions)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Finner en domenekontroller i dette domenet som oppfyller de angitte kriteriene."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController (System.DirectoryServices.ActiveDirectory.LocatorOptions flag);
    parameters:
    - id: flag
      type: System.DirectoryServices.ActiveDirectory.LocatorOptions
      description: "En kombinasjon av én eller flere av de <xref href=&quot;System.DirectoryServices.ActiveDirectory.LocatorOptions&quot;> </xref> medlemmer som definerer typen domenekontroller for å finne."
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref> som representerer domenekontrolleren som blir funnet av denne metoden."
  overload: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Finner ikke en domenekontroller."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Et kall til den underliggende katalogtjenesten førte til en feil."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> flag </code> parameteren inneholder en ugyldig verdi."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)
  id: FindDomainController(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: FindDomainController(String)
  nameWithType: Domain.FindDomainController(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Finner en domenekontroller i dette domenet og i det angitte området."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController (string siteName);
    parameters:
    - id: siteName
      type: System.String
      description: "Navnet på området til å søke etter domenekontrolleren."
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref> objektet som representerer domenekontrolleren som blir funnet av denne metoden."
  overload: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Finner ikke en domenekontroller."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Et kall til den underliggende katalogtjenesten førte til en feil."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>siteName</code>er en tom streng."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>siteName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  id: FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: FindDomainController(String,LocatorOptions)
  nameWithType: Domain.FindDomainController(String,LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(String,LocatorOptions)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Finner en domenekontroller i dette domenet og i det angitte området som oppfyller de angitte kriteriene."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController (string siteName, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);
    parameters:
    - id: siteName
      type: System.String
      description: "Navnet på området til å søke etter domenekontrolleren."
    - id: flag
      type: System.DirectoryServices.ActiveDirectory.LocatorOptions
      description: "En kombinasjon av én eller flere av de <xref href=&quot;System.DirectoryServices.ActiveDirectory.LocatorOptions&quot;> </xref> medlemmer som definerer typen domenekontroller for å finne."
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref> objektet som representerer domenekontrolleren som blir funnet av denne metoden."
  overload: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Finner ikke en domenekontroller."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Et kall til den underliggende katalogtjenesten førte til en feil."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Dette unntaket kan oppstå på grunn av følgende.      - <code> siteName </code> er en tom streng.      - <code> flag </code> inneholder en ugyldig verdi."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>siteName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.Forest
  id: Forest
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: Forest
  nameWithType: Domain.Forest
  fullName: System.DirectoryServices.ActiveDirectory.Domain.Forest
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Henter skogen som dette domenet er medlem av."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.Forest Forest { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.Forest
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> objektet som representerer skogen som dette domenet er medlem av."
  overload: System.DirectoryServices.ActiveDirectory.Domain.Forest*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships
  id: GetAllTrustRelationships
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: GetAllTrustRelationships()
  nameWithType: Domain.GetAllTrustRelationships()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Henter alle klareringsforholdet for dette domenet."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection GetAllTrustRelationships ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection&quot;> </xref> objektet som inneholder alle klareringsforholdet for dette domenet."
  overload: System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Et kall til den underliggende katalogtjenesten førte til en feil."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Målserveren er opptatt eller er utilgjengelig."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den angitte kontoen har ikke tillatelse til å utføre denne operasjonen."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain
  id: GetComputerDomain
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: GetComputerDomain()
  nameWithType: Domain.GetComputerDomain()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Henter den <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> objektet som representerer domene som den lokale datamaskinen er tilkoblet."
  remarks: "Verdien som returneres av metoden GetComputerDomain er en <xref:System.DirectoryServices.ActiveDirectory.Domain>-objekt som representerer domene som datamaskin som kjører programmet er tilkoblet.</xref:System.DirectoryServices.ActiveDirectory.Domain>  Dette er returverdien uavhengig av domenelegitimasjon hvor programmet kjøres. Denne metoden henter datamaskinens domene uavhengig klarert domene kontolegitimasjonen den kjører under.  Til å hente den <xref:System.DirectoryServices.ActiveDirectory.Domain>objektet som representerer domenet som svarer til brukeren i kraft legitimasjon for sikkerhetskontekst som programmet kjører under, må du bruke den <xref:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain%2A>metoden i stedet.</xref:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain%2A> </xref:System.DirectoryServices.ActiveDirectory.Domain>"
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.Domain GetComputerDomain ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> objektet som representerer domene som den lokale maskinen er tilkoblet."
  overload: System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Kan ikke opprette en tilkobling til domenet."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain
  id: GetCurrentDomain
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: GetCurrentDomain()
  nameWithType: Domain.GetCurrentDomain()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Henter den <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> objekt for gjeldende brukerlegitimasjon som gjelder for sikkerhetskonteksten programmet kjører."
  remarks: "GetCurrentDomain metoden bestemmes av domenelegitimasjon programmet kjører.  Til å hente den <xref:System.DirectoryServices.ActiveDirectory.Domain>-objekt som representerer domenet som datamaskinen som kjører programmet er koblet, uavhengig av legitimasjon som er knyttet til programmet, kan du bruke den <xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A>metoden i stedet.</xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A> </xref:System.DirectoryServices.ActiveDirectory.Domain>      ## Se også<xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A></xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A>"
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.Domain GetCurrentDomain ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> objektet som representerer domenet for den angitte brukeren gjeldende legitimasjon for sikkerhetskontekst programmet kjører."
  overload: System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Kan ikke opprette en tilkobling til den gjeldende konteksten."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry
  id: GetDirectoryEntry
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: GetDirectoryEntry()
  nameWithType: Domain.GetDirectoryEntry()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Henter en <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> objektet som representerer standard navngivningskontekst på domenet."
  syntax:
    content: public override System.DirectoryServices.DirectoryEntry GetDirectoryEntry ();
    parameters: []
    return:
      type: System.DirectoryServices.DirectoryEntry
      description: "En <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> objektet som representerer domenet."
  overload: System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det gjeldende objektet har blitt fjernet."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  id: GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: GetDomain(DirectoryContext)
  nameWithType: Domain.GetDomain(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetDomain(DirectoryContext)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Henter den <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> objekt for den angitte konteksten."
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.Domain GetDomain (System.DirectoryServices.ActiveDirectory.DirectoryContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref> objekt som inneholder målet og legitimasjon for å bruke til å hente objektet. Hva slags konteksten må være et domene eller katalogen server."
    return:
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> objektet som representerer domenet for den angitte konteksten."
  overload: System.DirectoryServices.ActiveDirectory.Domain.GetDomain*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "En tilkobling til mål som er angitt i <code> context </code> ikke kunne opprettes."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>context</code>er ikke gyldig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)
  id: GetSelectiveAuthenticationStatus(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: GetSelectiveAuthenticationStatus(String)
  nameWithType: Domain.GetSelectiveAuthenticationStatus(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Bestemmer hvilken godkjenning av en innkommende klarering."
  syntax:
    content: public bool GetSelectiveAuthenticationStatus (string targetDomainName);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "DNS-navnet til domenet som med klareringen finnes."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis godkjenning av klareringen Selektiv; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> hvis godkjenningen hele domenet."
  overload: System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Det er ingen klareringsrelasjon den <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> som er angitt i den <code> targetForestName </code> parameteren."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Kallet til LsaQueryTrustedDomainInfoByName mislyktes. Hvis du vil ha mer informasjon, se emnet [LsaQueryTrustedDomainInfoByName](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secmgmt/security/lsaquerytrusteddomaininfobyname.asp) i MSDN-biblioteket på [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Målserveren er opptatt eller er utilgjengelig."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>er en tom streng."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det gjeldende objektet har blitt fjernet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den angitte kontoen har ikke tillatelse til å utføre denne operasjonen."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)
  id: GetSidFilteringStatus(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: GetSidFilteringStatus(String)
  nameWithType: Domain.GetSidFilteringStatus(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Bestemmer SID filtrering statusen for en klarering."
  syntax:
    content: public bool GetSidFilteringStatus (string targetDomainName);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "DNS-navnet til domenet som med klareringsforholdet finnes."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis SID filtrering er aktivert. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Det er ingen klareringsrelasjon den <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> som er angitt i den <code> targetForestName </code> parameteren."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Et kall til den underliggende katalogtjenesten førte til en feil."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Målserveren er opptatt eller er utilgjengelig."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>er en tom streng."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det gjeldende objektet har blitt fjernet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den angitte kontoen har ikke tillatelse til å utføre denne operasjonen."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)
  id: GetTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: GetTrustRelationship(String)
  nameWithType: Domain.GetTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Henter klareringsforholdet mellom domenet og det angitte domenet."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation GetTrustRelationship (string targetDomainName);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "DNS-navnet til domenet som klareringsforholdet finnes."
    return:
      type: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation&quot;> </xref> objektet som representerer klareringsforholdet mellom domenet og det angitte domenet."
  overload: System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Det er ingen klareringsrelasjon den <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> som er angitt i den <code> targetForestName </code> parameteren."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Et kall til den underliggende katalogtjenesten førte til en feil."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Målserveren er opptatt eller er utilgjengelig."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>er en tom streng."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det gjeldende objektet har blitt fjernet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den angitte kontoen har ikke tillatelse til å utføre denne operasjonen."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner
  id: InfrastructureRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: InfrastructureRoleOwner
  nameWithType: Domain.InfrastructureRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Henter infrastruktur rolleeieren for dette domenet."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainController InfrastructureRoleOwner { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref> objektet som representerer domenekontrolleren som inneholder rollen infrastruktur eieren."
  overload: System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.Parent
  id: Parent
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: Parent
  nameWithType: Domain.Parent
  fullName: System.DirectoryServices.ActiveDirectory.Domain.Parent
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Henter overordnede domenet for dette domenet."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.Domain Parent { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> objektet som representerer overordnede domenet for dette domenet. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>Hvis dette domenet har ingen overordnede domene."
  overload: System.DirectoryServices.ActiveDirectory.Domain.Parent*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner
  id: PdcRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: PdcRoleOwner
  nameWithType: Domain.PdcRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Henter den <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref> objekt som har den primære domenekontrolleren (PDC) for dette domenet."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainController PdcRoleOwner { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref> objektet som representerer domenekontrolleren som inneholder rollen for dette domenet."
  overload: System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)
  id: RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: RaiseDomainFunctionality(DomainMode)
  nameWithType: Domain.RaiseDomainFunctionality(DomainMode)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(DomainMode)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Opphøyer tidsavbruddsverdi for inaktiv for domenet."
  remarks: "Den <xref:System.DirectoryServices.ActiveDirectory.DomainMode>verdi kan aktiveres, men ikke senket.</xref:System.DirectoryServices.ActiveDirectory.DomainMode> Dette betyr at opprettet funksjonalitet krypteringsnivået domenet er ikke gjøres og beslutningen om å gjøre dette må gjøres nøye.       Du finner mer informasjon om domenet operativ modi [domene- og funksjonalitet](http://www.microsoft.com/resources/documentation/WindowsServ/2003/standard/proddocs/en-us/sag_levels.asp).       Tabellen nedenfor definerer gyldige verdier for `domainMode` basert på gjeldende operative modus for domenet.      | Gjeldende modus | Modus kan opphøyd i |   |------------------|---------------------------|   | <xref:System.DirectoryServices.ActiveDirectory.DomainMode>| <xref:System.DirectoryServices.ActiveDirectory.DomainMode></xref:System.DirectoryServices.ActiveDirectory.DomainMode></xref:System.DirectoryServices.ActiveDirectory.DomainMode><br /><br /> <xref:System.DirectoryServices.ActiveDirectory.DomainMode></xref:System.DirectoryServices.ActiveDirectory.DomainMode><br /><br /> <xref:System.DirectoryServices.ActiveDirectory.DomainMode>|   | <xref:System.DirectoryServices.ActiveDirectory.DomainMode>| <xref:System.DirectoryServices.ActiveDirectory.DomainMode>|   | <xref:System.DirectoryServices.ActiveDirectory.DomainMode>| <xref:System.DirectoryServices.ActiveDirectory.DomainMode>|   | <xref:System.DirectoryServices.ActiveDirectory.DomainMode>| None|</xref:System.DirectoryServices.ActiveDirectory.DomainMode></xref:System.DirectoryServices.ActiveDirectory.DomainMode></xref:System.DirectoryServices.ActiveDirectory.DomainMode></xref:System.DirectoryServices.ActiveDirectory.DomainMode></xref:System.DirectoryServices.ActiveDirectory.DomainMode></xref:System.DirectoryServices.ActiveDirectory.DomainMode>"
  syntax:
    content: public void RaiseDomainFunctionality (System.DirectoryServices.ActiveDirectory.DomainMode domainMode);
    parameters:
    - id: domainMode
      type: System.DirectoryServices.ActiveDirectory.DomainMode
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainMode&quot;> </xref> opplistingsverdi som angir det nye operasjon-nivået for domenet."
  overload: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Et kall til den underliggende katalogtjenesten førte til en feil."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Målserveren er opptatt eller er utilgjengelig."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Basert på gjeldende operative modus for domenet, den angitte verdien for <code> domainMode </code> er ikke gyldig."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>domainMode</code>er ikke et gyldig <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainMode&quot;> </xref> listeverdi."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den angitte kontoen har ikke tillatelse til å utføre denne operasjonen."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(System.Int32)
  id: RaiseDomainFunctionalityLevel(System.Int32)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: RaiseDomainFunctionalityLevel(Int32)
  nameWithType: Domain.RaiseDomainFunctionalityLevel(Int32)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(Int32)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Opphøyer funksjonalitetsnivået for domenet."
  syntax:
    content: public void RaiseDomainFunctionalityLevel (int domainMode);
    parameters:
    - id: domainMode
      type: System.Int32
      description: "En verdi som representerer det nye nivået."
  overload: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)
  id: RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: RepairTrustRelationship(Domain)
  nameWithType: Domain.RepairTrustRelationship(Domain)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(Domain)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Reparerer en klareringsrelasjon."
  remarks: "Denne metoden reparerer klareringen ved å tilbakestille den sikre kanalen for klareringen. Hvis operasjonen mislykkes til å tilbakestille den sikre kanalen, vil det også å tilbakestille passordet klarering."
  syntax:
    content: public void RepairTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain);
    parameters:
    - id: targetDomain
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> objektet som representerer domenet som klareringen finnes."
  overload: System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Det er ingen klareringsrelasjon den <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> som er angitt i <code> targetDomain </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Et kall til den underliggende katalogtjenesten førte til en feil."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Målet eller kilden serveren er opptatt eller er utilgjengelig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomain</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den angitte kontoen har ikke tillatelse til å utføre denne operasjonen."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner
  id: RidRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: RidRoleOwner
  nameWithType: Domain.RidRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Henter eieren av RID-rollen for dette domenet."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainController RidRoleOwner { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref> objektet som representerer domenekontrolleren som inneholder rollen relativ identifikator (RID) master for dette domenet."
  overload: System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)
  id: SetSelectiveAuthenticationStatus(System.String,System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: SetSelectiveAuthenticationStatus(String,Boolean)
  nameWithType: Domain.SetSelectiveAuthenticationStatus(String,Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(String,Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Aktiverer eller deaktiverer Selektiv godkjenning for en innkommende klarering."
  syntax:
    content: public void SetSelectiveAuthenticationStatus (string targetDomainName, bool enable);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "DNS-navnet til domenet som innkommende klarering finnes."
    - id: enable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis Selektiv godkjenning er aktivert. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Det er ingen klareringsrelasjon domenekontrolleren som er angitt i <code> targetDomainName </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Et kall til den underliggende katalogtjenesten førte til en feil."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Målserveren er opptatt eller er utilgjengelig."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>er en tom streng."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det gjeldende objektet har blitt fjernet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den angitte kontoen har ikke tillatelse til å utføre denne operasjonen."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)
  id: SetSidFilteringStatus(System.String,System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: SetSidFilteringStatus(String,Boolean)
  nameWithType: Domain.SetSidFilteringStatus(String,Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(String,Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Angir SID filtrering tilstand for det angitte domenet."
  syntax:
    content: public void SetSidFilteringStatus (string targetDomainName, bool enable);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "DNS-navnet til domenet som klareringen finnes."
    - id: enable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis SID filtrering må være aktivert. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Det er ingen klareringsrelasjon domenet som er angitt i <code> targetDomainName </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Et kall til den underliggende katalogtjenesten førte til en feil."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Målserveren er opptatt eller er utilgjengelig."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>er en tom streng."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det gjeldende objektet har blitt fjernet."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)
  id: UpdateLocalSideOfTrustRelationship(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: UpdateLocalSideOfTrustRelationship(String,String)
  nameWithType: Domain.UpdateLocalSideOfTrustRelationship(String,String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(String,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Oppdaterer passordet for den lokale siden av en klareringsrelasjon."
  remarks: "Hvis du vil gjenopprette klareringen, må begge sider av klareringen oppdateres med det samme passordet."
  syntax:
    content: public void UpdateLocalSideOfTrustRelationship (string targetDomainName, string newTrustPassword);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "DNS-navnet til domenet som en klarering finnes."
    - id: newTrustPassword
      type: System.String
      description: "Det nye passordet for klareringen."
  overload: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Det er ingen klareringsrelasjon domenet som er angitt i <code> targetDomainName </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Et kall til den underliggende katalogtjenesten førte til en feil."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Målserveren er opptatt eller er utilgjengelig."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>eller <code>newTrustPassword</code> er en tom streng."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>or <code>newTrustPassword</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den angitte kontoen har ikke tillatelse til å utføre denne operasjonen."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  id: UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
  nameWithType: Domain.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Oppdaterer passordet til og stoler retningen for den lokale siden av en klareringsrelasjon."
  syntax:
    content: public void UpdateLocalSideOfTrustRelationship (string targetDomainName, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection, string newTrustPassword);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "DNS-navnet til domenet som en klarering finnes."
    - id: newTrustDirection
      type: System.DirectoryServices.ActiveDirectory.TrustDirection
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> verdien for ny klarering retningen for klareringsforholdet."
    - id: newTrustPassword
      type: System.String
      description: "Det nye passordet for klareringen."
  overload: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Det er ingen klareringsrelasjon domenet som er angitt i den <code> targetDomainName </code> parameteren."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Et kall til den underliggende katalogtjenesten førte til en feil."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Målserveren er opptatt eller er utilgjengelig."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>eller <code>newTrustPassword</code> er en tom streng."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>or <code>newTrustPassword</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>newTrustDirection</code>er ikke et gyldig <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> verdi."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den angitte kontoen har ikke tillatelse til å utføre denne operasjonen."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  id: UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: UpdateTrustRelationship(Domain,TrustDirection)
  nameWithType: Domain.UpdateTrustRelationship(Domain,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(Domain,TrustDirection)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Oppdaterer klarering retningen for en klareringsrelasjon. Stoler instruksjonene er oppdatert på begge sider av klareringen."
  syntax:
    content: public void UpdateTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection);
    parameters:
    - id: targetDomain
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> objektet som representerer domenet som klareringen finnes."
    - id: newTrustDirection
      type: System.DirectoryServices.ActiveDirectory.TrustDirection
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> verdi som angir nye klarering retningen for klareringsforholdet."
  overload: System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Det er ingen klareringsrelasjon domenet som er angitt i den <code> targetDomain </code> parameteren."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Et kall til den underliggende katalogtjenesten førte til en feil."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Målserveren er opptatt eller er utilgjengelig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomain</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>newTrustDirection</code>er ikke et gyldig <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> verdi."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den angitte kontoen har ikke tillatelse til å utføre denne operasjonen."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)
  id: VerifyOutboundTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: VerifyOutboundTrustRelationship(String)
  nameWithType: Domain.VerifyOutboundTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Bekrefter at en tidligere opprettet utgående klarering med det angitte domenet er ugyldig."
  remarks: "Denne metoden brukes til å bekrefte at en klareringsrelasjon er opprettet fullstendig. Klareringen er ikke opprettet til begge sider av klareringen har blitt opprettet."
  syntax:
    content: public void VerifyOutboundTrustRelationship (string targetDomainName);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "DNS-navnet til domenet som klareringen finnes."
  overload: System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Det er ingen utgående klareringsrelasjon domenet som er angitt i <code> targetDomainName </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Et kall til den underliggende katalogtjenesten førte til en feil."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Målserveren er opptatt eller er utilgjengelig."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>er en tom streng."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den angitte kontoen har ikke tillatelse til å utføre denne operasjonen."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  id: VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: VerifyTrustRelationship(Domain,TrustDirection)
  nameWithType: Domain.VerifyTrustRelationship(Domain,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(Domain,TrustDirection)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Bekrefter at en tidligere opprettet klarering med det angitte domenet er ugyldig."
  remarks: "Denne metoden bekrefter at en klareringsrelasjon er opprettet fullstendig. Klareringen er ikke opprettet til begge sider av klareringen har blitt opprettet."
  syntax:
    content: public void VerifyTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain, System.DirectoryServices.ActiveDirectory.TrustDirection direction);
    parameters:
    - id: targetDomain
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> objektet som representerer domenet som klareringen finnes."
    - id: direction
      type: System.DirectoryServices.ActiveDirectory.TrustDirection
      description: "En <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> verdi som angir retningen på klareringen, i forhold til dette domenet."
  overload: System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Det er ingen klareringsrelasjon domenet som er angitt i den <code> targetDomain </code> parameteren eller måldomenet har ikke klarert retningen som er angitt av den <code> direction </code> parameteren."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Et kall til den underliggende katalogtjenesten førte til en feil."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Målserveren er opptatt eller er utilgjengelig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomain</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>direction</code>er ikke et gyldig <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> verdi."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har blitt fjernet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den angitte kontoen har ikke tillatelse til å utføre denne operasjonen."
  platform:
  - net462
references:
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition
  isExternal: false
  name: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryObjectExistsException
  nameWithType: ActiveDirectoryObjectExistsException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryOperationException
  nameWithType: ActiveDirectoryOperationException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryServerDownException
  nameWithType: ActiveDirectoryServerDownException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryObjectNotFoundException
  nameWithType: ActiveDirectoryObjectNotFoundException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
- uid: System.DirectoryServices.ActiveDirectory.Domain.Children
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: Children
  nameWithType: Domain.Children
  fullName: System.DirectoryServices.ActiveDirectory.Domain.Children
- uid: System.DirectoryServices.ActiveDirectory.DomainCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainCollection
  nameWithType: DomainCollection
  fullName: System.DirectoryServices.ActiveDirectory.DomainCollection
- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
  nameWithType: Domain.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.TrustDirection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: TrustDirection
  nameWithType: TrustDirection
  fullName: System.DirectoryServices.ActiveDirectory.TrustDirection
- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: CreateTrustRelationship(Domain,TrustDirection)
  nameWithType: Domain.CreateTrustRelationship(Domain,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(Domain,TrustDirection)
- uid: System.DirectoryServices.ActiveDirectory.Domain
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: Domain
  nameWithType: Domain
  fullName: System.DirectoryServices.ActiveDirectory.Domain
- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DeleteLocalSideOfTrustRelationship(String)
  nameWithType: Domain.DeleteLocalSideOfTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(String)
- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DeleteTrustRelationship(Domain)
  nameWithType: Domain.DeleteTrustRelationship(Domain)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(Domain)
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainControllers
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DomainControllers
  nameWithType: Domain.DomainControllers
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DomainControllers
- uid: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainControllerCollection
  nameWithType: DomainControllerCollection
  fullName: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainMode
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DomainMode
  nameWithType: Domain.DomainMode
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DomainMode
- uid: System.DirectoryServices.ActiveDirectory.DomainMode
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainMode
  nameWithType: DomainMode
  fullName: System.DirectoryServices.ActiveDirectory.DomainMode
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DomainModeLevel
  nameWithType: Domain.DomainModeLevel
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindAllDiscoverableDomainControllers()
  nameWithType: Domain.FindAllDiscoverableDomainControllers()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers()
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindAllDiscoverableDomainControllers(String)
  nameWithType: Domain.FindAllDiscoverableDomainControllers(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(String)
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindAllDomainControllers()
  nameWithType: Domain.FindAllDomainControllers()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers()
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindAllDomainControllers(String)
  nameWithType: Domain.FindAllDomainControllers(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(String)
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindDomainController()
  nameWithType: Domain.FindDomainController()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController()
- uid: System.DirectoryServices.ActiveDirectory.DomainController
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainController
  nameWithType: DomainController
  fullName: System.DirectoryServices.ActiveDirectory.DomainController
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindDomainController(LocatorOptions)
  nameWithType: Domain.FindDomainController(LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(LocatorOptions)
- uid: System.DirectoryServices.ActiveDirectory.LocatorOptions
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: LocatorOptions
  nameWithType: LocatorOptions
  fullName: System.DirectoryServices.ActiveDirectory.LocatorOptions
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindDomainController(String)
  nameWithType: Domain.FindDomainController(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(String)
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindDomainController(String,LocatorOptions)
  nameWithType: Domain.FindDomainController(String,LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(String,LocatorOptions)
- uid: System.DirectoryServices.ActiveDirectory.Domain.Forest
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: Forest
  nameWithType: Domain.Forest
  fullName: System.DirectoryServices.ActiveDirectory.Domain.Forest
- uid: System.DirectoryServices.ActiveDirectory.Forest
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: Forest
  nameWithType: Forest
  fullName: System.DirectoryServices.ActiveDirectory.Forest
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetAllTrustRelationships()
  nameWithType: Domain.GetAllTrustRelationships()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships()
- uid: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: TrustRelationshipInformationCollection
  nameWithType: TrustRelationshipInformationCollection
  fullName: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetComputerDomain()
  nameWithType: Domain.GetComputerDomain()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain()
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetCurrentDomain()
  nameWithType: Domain.GetCurrentDomain()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain()
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetDirectoryEntry()
  nameWithType: Domain.GetDirectoryEntry()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry()
- uid: System.DirectoryServices.DirectoryEntry
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: System.DirectoryServices.DirectoryEntry
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetDomain(DirectoryContext)
  nameWithType: Domain.GetDomain(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetDomain(DirectoryContext)
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryContext
  nameWithType: DirectoryContext
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetSelectiveAuthenticationStatus(String)
  nameWithType: Domain.GetSelectiveAuthenticationStatus(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetSidFilteringStatus(String)
  nameWithType: Domain.GetSidFilteringStatus(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(String)
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetTrustRelationship(String)
  nameWithType: Domain.GetTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(String)
- uid: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: TrustRelationshipInformation
  nameWithType: TrustRelationshipInformation
  fullName: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation
- uid: System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: InfrastructureRoleOwner
  nameWithType: Domain.InfrastructureRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.Domain.Parent
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: Parent
  nameWithType: Domain.Parent
  fullName: System.DirectoryServices.ActiveDirectory.Domain.Parent
- uid: System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: PdcRoleOwner
  nameWithType: Domain.PdcRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: RaiseDomainFunctionality(DomainMode)
  nameWithType: Domain.RaiseDomainFunctionality(DomainMode)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(DomainMode)
- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(System.Int32)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: RaiseDomainFunctionalityLevel(Int32)
  nameWithType: Domain.RaiseDomainFunctionalityLevel(Int32)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(Int32)
- uid: System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: RepairTrustRelationship(Domain)
  nameWithType: Domain.RepairTrustRelationship(Domain)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(Domain)
- uid: System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: RidRoleOwner
  nameWithType: Domain.RidRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: SetSelectiveAuthenticationStatus(String,Boolean)
  nameWithType: Domain.SetSelectiveAuthenticationStatus(String,Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(String,Boolean)
- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: SetSidFilteringStatus(String,Boolean)
  nameWithType: Domain.SetSidFilteringStatus(String,Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(String,Boolean)
- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: UpdateLocalSideOfTrustRelationship(String,String)
  nameWithType: Domain.UpdateLocalSideOfTrustRelationship(String,String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(String,String)
- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
  nameWithType: Domain.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: UpdateTrustRelationship(Domain,TrustDirection)
  nameWithType: Domain.UpdateTrustRelationship(Domain,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(Domain,TrustDirection)
- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: VerifyOutboundTrustRelationship(String)
  nameWithType: Domain.VerifyOutboundTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(String)
- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: VerifyTrustRelationship(Domain,TrustDirection)
  nameWithType: Domain.VerifyTrustRelationship(Domain,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(Domain,TrustDirection)
- uid: System.DirectoryServices.ActiveDirectory.Domain.Children*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: Children
  nameWithType: Domain.Children
- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: CreateLocalSideOfTrustRelationship
  nameWithType: Domain.CreateLocalSideOfTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: CreateTrustRelationship
  nameWithType: Domain.CreateTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DeleteLocalSideOfTrustRelationship
  nameWithType: Domain.DeleteLocalSideOfTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DeleteTrustRelationship
  nameWithType: Domain.DeleteTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainControllers*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DomainControllers
  nameWithType: Domain.DomainControllers
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainMode*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DomainMode
  nameWithType: Domain.DomainMode
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DomainModeLevel
  nameWithType: Domain.DomainModeLevel
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindAllDiscoverableDomainControllers
  nameWithType: Domain.FindAllDiscoverableDomainControllers
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindAllDomainControllers
  nameWithType: Domain.FindAllDomainControllers
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindDomainController
  nameWithType: Domain.FindDomainController
- uid: System.DirectoryServices.ActiveDirectory.Domain.Forest*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: Forest
  nameWithType: Domain.Forest
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetAllTrustRelationships
  nameWithType: Domain.GetAllTrustRelationships
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetComputerDomain
  nameWithType: Domain.GetComputerDomain
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetCurrentDomain
  nameWithType: Domain.GetCurrentDomain
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetDirectoryEntry
  nameWithType: Domain.GetDirectoryEntry
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDomain*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetDomain
  nameWithType: Domain.GetDomain
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetSelectiveAuthenticationStatus
  nameWithType: Domain.GetSelectiveAuthenticationStatus
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetSidFilteringStatus
  nameWithType: Domain.GetSidFilteringStatus
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetTrustRelationship
  nameWithType: Domain.GetTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: InfrastructureRoleOwner
  nameWithType: Domain.InfrastructureRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.Domain.Parent*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: Parent
  nameWithType: Domain.Parent
- uid: System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: PdcRoleOwner
  nameWithType: Domain.PdcRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: RaiseDomainFunctionality
  nameWithType: Domain.RaiseDomainFunctionality
- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: RaiseDomainFunctionalityLevel
  nameWithType: Domain.RaiseDomainFunctionalityLevel
- uid: System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: RepairTrustRelationship
  nameWithType: Domain.RepairTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: RidRoleOwner
  nameWithType: Domain.RidRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: SetSelectiveAuthenticationStatus
  nameWithType: Domain.SetSelectiveAuthenticationStatus
- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: SetSidFilteringStatus
  nameWithType: Domain.SetSidFilteringStatus
- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: UpdateLocalSideOfTrustRelationship
  nameWithType: Domain.UpdateLocalSideOfTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: UpdateTrustRelationship
  nameWithType: Domain.UpdateTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: VerifyOutboundTrustRelationship
  nameWithType: Domain.VerifyOutboundTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: VerifyTrustRelationship
  nameWithType: Domain.VerifyTrustRelationship
