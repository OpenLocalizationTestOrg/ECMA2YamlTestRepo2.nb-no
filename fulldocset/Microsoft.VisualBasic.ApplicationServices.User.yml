### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.ApplicationServices.User
  id: User
  children:
  - Microsoft.VisualBasic.ApplicationServices.User.#ctor
  - Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  - Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser
  - Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  - Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  - Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  - Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)
  - Microsoft.VisualBasic.ApplicationServices.User.Name
  langs:
  - csharp
  name: User
  nameWithType: User
  fullName: Microsoft.VisualBasic.ApplicationServices.User
  type: Class
  summary: "Gir tilgang til informasjon om den gjeldende brukeren."
  remarks: "Egenskaper og metoder som vises av den `My.User` objektet gir tilgang til informasjon om den gjeldende brukeren. Betydning &quot;gjeldende bruker&quot; varierer litt mellom Windows- og webprogrammer. Gjeldende bruker er brukeren som kjører programmet i Windows-program. Gjeldende bruker er brukeren som har tilgang til programmet i et webprogram.       Den `My.User` egenskapen gir deg også tilgang til den <xref:System.Security.Principal.IPrincipal>for gjeldende bruker.</xref:System.Security.Principal.IPrincipal> En standardobjektet representerer brukerens sikkerhetskontekst, inkludert brukerens identitet og alle roller som brukeren tilhører.       Denne egenskapen gir for Windows-programmer, på samme måte som den <xref:System.Threading.Thread.CurrentPrincipal%2A>egenskapen.</xref:System.Threading.Thread.CurrentPrincipal%2A> Denne egenskapen gir for webprogrammer, på samme måte som den <xref:System.Web.HttpContext.User%2A>for objektet som returneres av den <xref:System.Web.HttpContext.Current%2A>egenskapen.</xref:System.Web.HttpContext.Current%2A> </xref:System.Web.HttpContext.User%2A>      > [!NOTE] > For Windows-programmer, bare prosjekter som er bygget på den **Windows-program** malen initialisere den `My.User` objekt som standard. I alle andre Windows prosjekttyper, må du starte den `My.User` objektet ved å kalle den <xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A>metoden eksplisitt eller ved å tilordne en verdi til <xref:System.Threading.Thread.CurrentPrincipal%2A>.</xref:System.Threading.Thread.CurrentPrincipal%2A> </xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A>      > [!NOTE] > Den `My.User` objektet kan ikke rapportere informasjon om gjeldende Windows-bruker når kjører under Windows 95 og Windows 98 disse operativsystemene støtter ikke var en pålogget bruker. Du må implementere egendefinerte godkjenning for å bruke den `My.User` objekt på disse operativsystemer."
  example:
  - "This example checks if the application is using Windows or custom authentication, and uses that information to parse the `My.User.Name` property.  \n  \n [!code-vb[VbVbalrMyUser#3](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#3)]"
  syntax:
    content: public class User
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: User()
  nameWithType: User.User()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.User()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;Microsoft.VisualBasic.ApplicationServices.User&quot;> </xref> klasse."
  remarks: "Egenskaper og metoder som vises av den `My.User` objektet gir tilgang til informasjon om den gjeldende brukeren."
  syntax:
    content: public User ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.User.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  id: CurrentPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: CurrentPrincipal
  nameWithType: User.CurrentPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Henter eller angir sikkerhetskontohaveren for gjeldende (for rollebasert sikkerhet)."
  remarks: "Du kan angi den `My.User.CurrentPrincipal` egenskapen til et objekt som implementerer den <xref:System.Security.Principal.IPrincipal>grensesnitt for å aktivere egendefinert godkjenning.</xref:System.Security.Principal.IPrincipal>       I de fleste prosjekttyper, egenskapen får eller angir trådens gjeldende sikkerhetskontohaver. Denne egenskapen får eller angir sikkerhetsinformasjonen for den gjeldende HTTP forespørselen brukeridentiteten i en ASP.NET-programmet.       Dette er et avansert medlem; det ikke vises i IntelliSense med mindre du velger den **alle** kategorien.      ## Tilgjengeligheten av prosjekttype |||   |-|-|   | Prosjektet typen | Tilgjengelige |   | Windows-program | **Yes**|   | Klasse biblioteket | **Yes**|   | Konsollen programmet | **Yes**|   | Windows kontrollerer biblioteket | **Yes**|   | Web kontrollen biblioteket | **Yes**|   | Windows-tjenesten | **Yes**|   | Webområdet | **Yes**|"
  example:
  - "This example checks if the application is using Windows or custom authentication, and uses that information to parse `My.User.Name` property.  \n  \n [!code-vb[VbVbalrMyUser#3](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#3)]"
  syntax:
    content: public System.Security.Principal.IPrincipal CurrentPrincipal { get; set; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "En <xref:System.Security.Principal.IPrincipal>verdien som representerer sikkerhetskonteksten.</xref:System.Security.Principal.IPrincipal>"
  overload: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke tillatelse til å angi sikkerhetskontohaveren."
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser
  id: InitializeWithWindowsUser
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: InitializeWithWindowsUser()
  nameWithType: User.InitializeWithWindowsUser()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Angir trådens gjeldende sikkerhetskontohaver for Windows-brukeren som startet programmet."
  remarks: "Du kan bruke den `My.User.InitializeWithWindowsUser` metode for å definere trådens gjeldende sikkerhetskontohaver for Windows-brukeren som startet programmet. Visual Basic programmet modellen i et Windows-program kaller opp denne metoden ved oppstart som standard. I andre prosjekttyper, må du angi trådens gjeldende sikkerhetskontohaveren ved å kalle denne metoden eksplisitt eller ved å tilordne en verdi til <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>       I Windows-prosjekter, den `My.User` objekt er basert på gjeldende sikkerhetskontohaver for trådens; derfor denne metoden kan endre informasjonen `My.User` returnerer. I en ASP.NET-programmet i `My.User` objektet er basert på gjeldende HTTP-forespørselens brukeridentiteten og påvirkes ikke av denne metoden.      > [!NOTE] > Nøyaktige virkemåten for den `My.User` objektet avhenger av programtypen og operativsystemet som kjører programmet. Hvis du vil ha mer informasjon, se den <xref:Microsoft.VisualBasic.ApplicationServices.User>klassen oversikt.</xref:Microsoft.VisualBasic.ApplicationServices.User>       Dette er et avansert medlem; det ikke vises i IntelliSense med mindre du velger den **alle** kategorien.      ## Tilgjengeligheten av prosjekttype |||   |-|-|   | Prosjektet typen | Tilgjengelige |   | Windows-program | **Yes**|   | Klasse biblioteket | **Yes**|   | Konsollen programmet | **Yes**|   | Windows kontrollerer biblioteket | **Yes**|   | Web kontrollen biblioteket | **Yes**|   | Windows-tjenesten | **Yes**|   | Webområdet | **Yes**|"
  syntax:
    content: public void InitializeWithWindowsUser ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  id: InternalPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: InternalPrincipal
  nameWithType: User.InternalPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Henter eller angir standardobjektet som representerer gjeldende bruker."
  remarks: "I de <xref:Microsoft.VisualBasic.ApplicationServices.User>objekt egenskapen bryter det <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>egenskapen.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:Microsoft.VisualBasic.ApplicationServices.User> Overstyre denne metoden i en avledet klasse oppgi annen virkemåte. For eksempel den <xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=fullName>egenskapen overstyrer egenskapen.</xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual System.Security.Principal.IPrincipal InternalPrincipal { get; set; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "En <xref:System.Security.Principal.IPrincipal>-objekt som representerer gjeldende bruker.</xref:System.Security.Principal.IPrincipal>"
  overload: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  id: IsAuthenticated
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: User.IsAuthenticated
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Henter en verdi som angir om brukeren er godkjent."
  remarks: "Den `My.User.IsAuthenticated` egenskapen kan koden til å bestemme om den gjeldende brukeren er godkjent.      > [!NOTE] > Nøyaktige virkemåten for `My.User` objektet avhenger av hvilken type programmet og operativsystemet som kjører programmet. Hvis du vil ha mer informasjon, se den <xref:Microsoft.VisualBasic.ApplicationServices.User>klassen oversikt.</xref:Microsoft.VisualBasic.ApplicationServices.User>      ## Tilgjengeligheten av prosjekttype |||   |-|-|   | Prosjektet typen | Tilgjengelige |   | Windows-program | **Yes**|   | Klasse biblioteket | **Yes**|   | Konsollen programmet | **Yes**|   | Windows kontrollerer biblioteket | **Yes**|   | Web kontrollen biblioteket | **Yes**|   | Windows-tjenesten | **Yes**|   | Webområdet | **Yes**|"
  example:
  - "This example verifies that the user has been authenticated before accessing a resource.  \n  \n [!code-vb[VbVbalrMyUser#2](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#2)]"
  syntax:
    content: public bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Hvis brukeren ble godkjent; Ellers <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  id: IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: IsInRole(BuiltInRole)
  nameWithType: User.IsInRole(BuiltInRole)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(BuiltInRole)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Bestemmer om den gjeldende brukeren hører til den angitte rollen."
  remarks: "Den `My.User.IsInRole` metoden kan koden til å bestemme om den gjeldende brukeren er medlem av den angitte rollen.       Overbelastning av den `My.User.IsInRole` metode som tar en streng som gir enkel tilgang til den <xref:System.Security.Principal.IPrincipal.IsInRole%2A>metoden gjeldende sikkerhetskontohaver.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>       Overbelastning av den `My.User.IsInRole` metode som tar en `BuiltInRole` opplisting fungerer på forskjellige måter, avhengig av gjeldende sikkerhetskontohaveren. Hvis det er en Windows-UPN (<xref:System.Security.Principal.WindowsPrincipal>), denne funksjonen konverterer `role` til tilsvarende <xref:System.Security.Principal.WindowsBuiltInRole>opplisting og returnerer resultatet av kaller <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> </xref:System.Security.Principal.WindowsBuiltInRole> </xref:System.Security.Principal.WindowsPrincipal> Hvis gjeldende sikkerhetskontohaveren andre sikkerhetskontohaveren, denne funksjonen overfører navnet på opplistingsverdien i `role` til sikkerhetskontohaveren for <xref:System.Security.Principal.IPrincipal.IsInRole%2A>metode.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>      > [!NOTE] > Nøyaktige virkemåten for den `My.User` objektet avhenger av hvilken type programmet og operativsystemet som kjører programmet. Hvis du vil ha mer informasjon, se den <xref:Microsoft.VisualBasic.ApplicationServices.User>klassen oversikt.</xref:Microsoft.VisualBasic.ApplicationServices.User>      ## Tilgjengeligheten av prosjekttype |||   |-|-|   | Prosjektet typen | Tilgjengelige |   | Windows-program | **Yes**|   | Klasse biblioteket | **Yes**|   | Konsollen programmet | **Yes**|   | Windows kontrollerer biblioteket | **Yes**|   | Web kontrollen biblioteket | **Yes**|   | Windows-tjenesten | **Yes**|   | Webområdet | **Yes**|"
  example:
  - "This example checks if the user is an administrator before accessing a resource.  \n  \n [!code-vb[VbVbalrMyUser#1](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#1)]"
  syntax:
    content: public bool IsInRole (Microsoft.VisualBasic.ApplicationServices.BuiltInRole role);
    parameters:
    - id: role
      type: Microsoft.VisualBasic.ApplicationServices.BuiltInRole
      description: "Innebygd Windows rollen å se medlemskap."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Hvis den gjeldende brukeren er medlem av den angitte rollen; Ellers <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.ApplicationServices.User.IsInRole*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)
  id: IsInRole(System.String)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: IsInRole(String)
  nameWithType: User.IsInRole(String)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Bestemmer om den gjeldende brukeren hører til den angitte rollen."
  remarks: "Den `My.User.IsInRole` metoden kan koden til å bestemme om den gjeldende brukeren er medlem av den angitte rollen.       Overbelastning av den `My.User.IsInRole` metode som tar en streng som gir enkel tilgang til den <xref:System.Security.Principal.IPrincipal.IsInRole%2A>metoden gjeldende sikkerhetskontohaver.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>       Overbelastning av den `My.User.IsInRole` metode som tar en `BuiltInRole` opplisting fungerer på forskjellige måter, avhengig av gjeldende sikkerhetskontohaveren. Hvis det er en Windows-UPN (<xref:System.Security.Principal.WindowsPrincipal>), denne funksjonen konverterer `role` til tilsvarende <xref:System.Security.Principal.WindowsBuiltInRole>opplisting og returnerer resultatet av kaller <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> </xref:System.Security.Principal.WindowsBuiltInRole> </xref:System.Security.Principal.WindowsPrincipal> Hvis gjeldende sikkerhetskontohaveren andre sikkerhetskontohaveren, denne funksjonen overfører navnet på opplistingsverdien i `role` til sikkerhetskontohaveren for <xref:System.Security.Principal.IPrincipal.IsInRole%2A>metode.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>      > [!NOTE] > Nøyaktige virkemåten for den `My.User` objektet avhenger av hvilken type programmet og operativsystemet som kjører programmet. Hvis du vil ha mer informasjon, se den <xref:Microsoft.VisualBasic.ApplicationServices.User>klassen oversikt.</xref:Microsoft.VisualBasic.ApplicationServices.User>      ## Tilgjengeligheten av prosjekttype |||   |-|-|   | Prosjektet typen | Tilgjengelige |   | Windows-program | **Yes**|   | Klasse biblioteket | **Yes**|   | Konsollen programmet | **Yes**|   | Windows kontrollerer biblioteket | **Yes**|   | Web kontrollen biblioteket | **Yes**|   | Windows-tjenesten | **Yes**|   | Webområdet | **Yes**|"
  example:
  - "This example checks if the user is an administrator before accessing a resource.  \n  \n [!code-vb[VbVbalrMyUser#1](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#1)]"
  syntax:
    content: public bool IsInRole (string role);
    parameters:
    - id: role
      type: System.String
      description: "Navnet på rollen å se medlemskap."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Hvis den gjeldende brukeren er medlem av den angitte rollen; Ellers <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.ApplicationServices.User.IsInRole*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.Name
  id: Name
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: Name
  nameWithType: User.Name
  fullName: Microsoft.VisualBasic.ApplicationServices.User.Name
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Henter navnet på den gjeldende brukeren."
  remarks: "You can use the `My.User` object to get information about the current user.  \n  \n The principal that authenticates the user also controls the format of the user name. By default, an application uses Windows authentication, and the user name has the format DOMAIN\\USERNAME. A custom implementation of the principal does not necessarily use the same format.  \n  \n> [!NOTE]\n>  The `My.User.Name` property returns an empty string when run under Windows 95 and Windows 98 because those operating systems do not recognize user names.  \n  \n> [!NOTE]\n>  The exact behavior of the `My.User` object depends on the type of the application and on the operating system on which the application runs. For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.  \n  \n## Availability by Project Type  \n  \n|||  \n|-|-|  \n|Project type|Available|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|**Yes**|  \n|Windows Service|**Yes**|  \n|Web Site|**Yes**|"
  example:
  - "This example checks if the application is using Windows or custom authentication, and uses that information to parse the `My.User.Name` property.  \n  \n [!code-vb[VbVbalrMyUser#3](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#3)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Navnet på den gjeldende brukeren."
  overload: Microsoft.VisualBasic.ApplicationServices.User.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: Microsoft.VisualBasic.ApplicationServices.User.#ctor
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: User()
  nameWithType: User.User()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.User()
- uid: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: CurrentPrincipal
  nameWithType: User.CurrentPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InitializeWithWindowsUser()
  nameWithType: User.InitializeWithWindowsUser()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser()
- uid: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InternalPrincipal
  nameWithType: User.InternalPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsAuthenticated
  nameWithType: User.IsAuthenticated
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsInRole(BuiltInRole)
  nameWithType: User.IsInRole(BuiltInRole)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(BuiltInRole)
- uid: Microsoft.VisualBasic.ApplicationServices.BuiltInRole
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: BuiltInRole
  nameWithType: BuiltInRole
  fullName: Microsoft.VisualBasic.ApplicationServices.BuiltInRole
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsInRole(String)
  nameWithType: User.IsInRole(String)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.ApplicationServices.User.Name
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: Name
  nameWithType: User.Name
  fullName: Microsoft.VisualBasic.ApplicationServices.User.Name
- uid: Microsoft.VisualBasic.ApplicationServices.User.#ctor*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: User
  nameWithType: User.User
- uid: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: CurrentPrincipal
  nameWithType: User.CurrentPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InitializeWithWindowsUser
  nameWithType: User.InitializeWithWindowsUser
- uid: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InternalPrincipal
  nameWithType: User.InternalPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsAuthenticated
  nameWithType: User.IsAuthenticated
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsInRole
  nameWithType: User.IsInRole
- uid: Microsoft.VisualBasic.ApplicationServices.User.Name*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: Name
  nameWithType: User.Name
