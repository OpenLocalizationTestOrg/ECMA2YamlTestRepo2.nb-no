### YamlMime:ManagedReference
items:
- uid: System.Windows.EventManager
  id: EventManager
  children:
  - System.Windows.EventManager.GetRoutedEvents
  - System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)
  - System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  - System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)
  langs:
  - csharp
  name: EventManager
  nameWithType: EventManager
  fullName: System.Windows.EventManager
  type: Class
  summary: "Inneholder metoder for hendelsen relatert verktøyet som registrere rutet hendelser for klassen eiere og legge til behandlingsprogrammer for klassen."
  remarks: "Denne klassen brukes vanligvis til å registrere en ny rutet hendelse, med <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>       Det andre de fleste vanlige [!INCLUDE[TLA2#tla_api](~/add/includes/tla2sharptla-api-md.md)] er <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A> Du kan bruke denne metoden slik at klassen på grunn av en distribuert hendelsen på klasse eller en vedlagte hendelse. Hvis du vil ha mer informasjon, se [merke rutet hendelser som Handled og behandling av klassen](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example show how to use this class to register a new routed event as a class member, along with the routed event \"wrapper\" technique of overriding the add and remove implementations for a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event.  \n  \n [!code-cs[DPCustom#EventManagerClass](~/add/codesnippet/csharp/DPCustom/default.xaml.cs#eventmanagerclass)]\n [!code-vb[DPCustom#EventManagerClass](~/add/codesnippet/visualbasic/dpcustom/default.xaml.vb#eventmanagerclass)]"
  syntax:
    content: public static class EventManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.EventManager.GetRoutedEvents
  id: GetRoutedEvents
  parent: System.Windows.EventManager
  langs:
  - csharp
  name: GetRoutedEvents()
  nameWithType: EventManager.GetRoutedEvents()
  fullName: System.Windows.EventManager.GetRoutedEvents()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Returnerer identifikatorer for distribuert hendelser som er registrert i hendelsen-systemet."
  remarks: "Flere <xref:System.Windows.RoutedEvent>objekter kan registreres senere.</xref:System.Windows.RoutedEvent> Denne metoden får et statisk utvalg eller samlingen av distribuert hendelser er skrivbar i hele levetid for en applikasjon. Samlingen returnerte kanskje ganske store. Telle med bare hendelser som er en del av den [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)], så samlingen er antallet i høy hundrevis."
  syntax:
    content: public static System.Windows.RoutedEvent[] GetRoutedEvents ();
    parameters: []
    return:
      type: System.Windows.RoutedEvent[]
      description: "En matrise av typen <xref href=&quot;System.Windows.RoutedEvent&quot;> </xref> som inneholder objekter som er registrert."
  overload: System.Windows.EventManager.GetRoutedEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)
  id: GetRoutedEventsForOwner(System.Type)
  parent: System.Windows.EventManager
  langs:
  - csharp
  name: GetRoutedEventsForOwner(Type)
  nameWithType: EventManager.GetRoutedEventsForOwner(Type)
  fullName: System.Windows.EventManager.GetRoutedEventsForOwner(Type)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Søker etter alle rutet hendelsen IDer for hendelser som er registrert med den angitte eiertypen."
  syntax:
    content: public static System.Windows.RoutedEvent[] GetRoutedEventsForOwner (Type ownerType);
    parameters:
    - id: ownerType
      type: System.Type
      description: "Typen som skal startes med. Basisklasser er inkludert i søket."
    return:
      type: System.Windows.RoutedEvent[]
      description: "En matrise med samsvarende rutet hendelsen identifikatorer Hvis treff; Ellers <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.EventManager.GetRoutedEventsForOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)
  id: RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.EventManager
  langs:
  - csharp
  name: RegisterClassHandler(Type,RoutedEvent,Delegate)
  nameWithType: EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate)
  fullName: System.Windows.EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Registrerer en klassen behandlingsprogram for en bestemt rutet hendelse."
  remarks: "Klassen som behandler er en funksjon som er tilgjengelig for distribuert arrangementer, inkludert tilknyttede hendelser som er implementert rutet hendelsen sikkerhetskopiering. Det er et behandlingsprogram for klassen som en statisk behandlingsprogrammet finnes for alle forekomster av klassen. Fordi behandlingsprogrammet er statisk, du kan ikke endre forekomsten direkte med et klassen behandlingsprogram, men du har tilgang til forekomster via den `sender` parameteren og/eller Hendelsesdata.       Klassen behandlingsprogrammer skal startes før forekomsten behandlingsprogrammer. Du kan implementere et behandlingsprogram for klassen med virkemåten for merking hendelsen behandles. Forekomsten behandlingsprogrammer for en hendelse som behandles av klassen er derfor ikke startes med mindre forekomsten behandlingsprogrammer registrere spesielt for håndtert hendelser.       Mange av de [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] base elementet hendelser gir klassen behandler virtuelle metoder. Du kan implementere klassen behandler uten å kalle RegisterClassHandler i statiske konstruktører ved å overstyre disse metodene i klasser som arver basisklassene. Disse metodene for behandling av klassen vanligvis finnes for inndata hendelser og har navn som begynner med &quot;I&quot; og slutte med navnet på en hendelse som klassen som er behandlet.       Du finner mer informasjon om behandling av klassen [merke rutet hendelser som Handled og behandling av klassen](~/add/includes/ajax-current-ext-md.md).       Ved hjelp av denne signaturen registreres klassen behandlingsprogrammer for å aktivere bare som svar på et ubehandlet hendelser. Du kan også registrere klassen behandlingsprogrammer for å aktivere selv om argumentene hendelsen merkes håndtert, ved å bruke den <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>signatur med `handledEventsToo` satt til `true`.</xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>"
  example:
  - "The following example adds a handler for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>, calling RegisterClassHandler.  \n  \n [!code-vb[ClassHandling#StaticAndRegisterClassHandler](~/add/codesnippet/visualbasic/ClassHandling.sdksamplelibrary/class1.vb#staticandregisterclasshandler)]\n [!code-cs[ClassHandling#StaticAndRegisterClassHandler](~/add/codesnippet/csharp/ClassHandling/SDKSampleLibrary/class1.cs#staticandregisterclasshandler)]"
  syntax:
    content: public static void RegisterClassHandler (Type classType, System.Windows.RoutedEvent routedEvent, Delegate handler);
    parameters:
    - id: classType
      type: System.Type
      description: "Typen for klassen som deklarerer klassen behandling."
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "Distribuerte hendelses-IDen for hendelsen til å håndtere."
    - id: handler
      type: System.Delegate
      description: "En referanse til klassen behandlingsprogrammet implementeringen."
  overload: System.Windows.EventManager.RegisterClassHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  id: RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  parent: System.Windows.EventManager
  langs:
  - csharp
  name: RegisterClassHandler(Type,RoutedEvent,Delegate,Boolean)
  nameWithType: EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate,Boolean)
  fullName: System.Windows.EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Registrerer en klassen behandlingsprogram for en bestemt rutet hendelse muligheten til å håndtere hendelser der Hendelsesdata er merket som er behandlet."
  remarks: "Klassen som behandler er en funksjon som er tilgjengelig for distribuert arrangementer, inkludert tilknyttede hendelser som er implementert rutet hendelsen sikkerhetskopiering. Det er et behandlingsprogram for klassen som en statisk behandlingsprogrammet finnes for alle forekomster av klassen. Fordi behandlingsprogrammet er statisk, du kan ikke endre forekomsten direkte med et klassen behandlingsprogram, men du har tilgang til forekomster via den `sender` parameteren og/eller Hendelsesdata.       Klassen behandlingsprogrammer skal startes før forekomsten behandlingsprogrammer. Du kan implementere et behandlingsprogram for klassen med virkemåten for merking hendelsen behandles. Forekomsten behandlingsprogrammer for en hendelse som behandles av klassen er derfor ikke startes med mindre forekomsten behandlingsprogrammer registrere spesielt for håndtert hendelser.       Mange av de [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] base elementet hendelser gir klassen behandler virtuelle metoder. Du kan implementere klassen behandler uten kaller ved å overstyre disse metodene i klasser som arver basisklassene <xref:System.Windows.EventManager.RegisterClassHandler%2A>i statiske konstruktører.</xref:System.Windows.EventManager.RegisterClassHandler%2A> Disse metodene for behandling av klassen vanligvis finnes for inndata hendelser og har navn som begynner med &quot;I&quot; og slutte med navnet på en hendelse som klassen som er behandlet.       Du finner mer informasjon om behandling av klassen [merke rutet hendelser som Handled og behandling av klassen](~/add/includes/ajax-current-ext-md.md).       Ved hjelp av denne signaturen klassen behandlingsprogrammer kan registreres for å aktivere når håndtert hendelser, ved å angi `handledEventsToo` satt til `true`. Du bør vanligvis gjøre dette bare hvis det finnes et kjent som behandler problem du prøver å omgå, for eksempel inndata systemet behandler fra musen eller tastaturet hendelser."
  syntax:
    content: public static void RegisterClassHandler (Type classType, System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);
    parameters:
    - id: classType
      type: System.Type
      description: "Typen for klassen som deklarerer klassen behandling."
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "Distribuerte hendelses-IDen for hendelsen til å håndtere."
    - id: handler
      type: System.Delegate
      description: "En referanse til klassen behandlingsprogrammet implementeringen."
    - id: handledEventsToo
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis du vil aktivere dette klassen behandlingsprogrammet selv om argumentene for distribuert hendelsen er merket som behandlet; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> å beholde standard virkemåte for aktivering behandlingsprogrammet på hendelser merket behandles ikke."
  overload: System.Windows.EventManager.RegisterClassHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)
  id: RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)
  parent: System.Windows.EventManager
  langs:
  - csharp
  name: RegisterRoutedEvent(String,RoutingStrategy,Type,Type)
  nameWithType: EventManager.RegisterRoutedEvent(String,RoutingStrategy,Type,Type)
  fullName: System.Windows.EventManager.RegisterRoutedEvent(String,RoutingStrategy,Type,Type)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Registrerer en ny hendelse som er distribuert med den [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] Hendelsessystem."
  remarks: "Bruk verdien som returneres av denne metoden til å opprette statisk deklarasjonen for en unik <xref:System.Windows.RoutedEvent>-ID-feltet.</xref:System.Windows.RoutedEvent> Dette feltet skal lagres i Eiertype.       Det finnes en betydelig antall konvensjoner og beste praksis som er knyttet til hvordan rutet hendelser skal være navnet, registrert, og vises i en klasse. Hvis du vil ha mer informasjon, se [rutet hendelser oversikt over](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.Windows.RoutedEvent RegisterRoutedEvent (string name, System.Windows.RoutingStrategy routingStrategy, Type handlerType, Type ownerType);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på rutet hendelsen. Navnet må være unike i eiertypen og kan ikke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en tom streng."
    - id: routingStrategy
      type: System.Windows.RoutingStrategy
      description: "Rutingstrategi av hendelsen som en verdi av opplistingen."
    - id: handlerType
      type: System.Type
      description: "Hva slags hendelsesbehandlingen. Dette må være av representanttypen og kan ikke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: ownerType
      type: System.Type
      description: "Eieren klassetypen rutet hendelsen. Dette kan være <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Windows.RoutedEvent
      description: "IDen for nye registrerte rutet hendelsen. Denne ID-objekt kan nå være lagres som et statisk felt i en klasse og deretter brukes som en parameter for metoder som knytter behandlingsprogrammer hendelsen. Distribuerte hendelses-IDen brukes også for andre hendelsessystemet [!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]."
  overload: System.Windows.EventManager.RegisterRoutedEvent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.EventManager.GetRoutedEvents
  parent: System.Windows.EventManager
  isExternal: false
  name: GetRoutedEvents()
  nameWithType: EventManager.GetRoutedEvents()
  fullName: System.Windows.EventManager.GetRoutedEvents()
- uid: System.Windows.RoutedEvent[]
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent[]
  spec.csharp:
  - uid: System.Windows.RoutedEvent
    name: RoutedEvent
    nameWithType: RoutedEvent
    fullName: RoutedEvent[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)
  parent: System.Windows.EventManager
  isExternal: false
  name: GetRoutedEventsForOwner(Type)
  nameWithType: EventManager.GetRoutedEventsForOwner(Type)
  fullName: System.Windows.EventManager.GetRoutedEventsForOwner(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.EventManager
  isExternal: false
  name: RegisterClassHandler(Type,RoutedEvent,Delegate)
  nameWithType: EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate)
  fullName: System.Windows.EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate)
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  parent: System.Windows.EventManager
  isExternal: false
  name: RegisterClassHandler(Type,RoutedEvent,Delegate,Boolean)
  nameWithType: EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate,Boolean)
  fullName: System.Windows.EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)
  parent: System.Windows.EventManager
  isExternal: false
  name: RegisterRoutedEvent(String,RoutingStrategy,Type,Type)
  nameWithType: EventManager.RegisterRoutedEvent(String,RoutingStrategy,Type,Type)
  fullName: System.Windows.EventManager.RegisterRoutedEvent(String,RoutingStrategy,Type,Type)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.RoutingStrategy
  parent: System.Windows
  isExternal: false
  name: RoutingStrategy
  nameWithType: RoutingStrategy
  fullName: System.Windows.RoutingStrategy
- uid: System.Windows.EventManager.GetRoutedEvents*
  parent: System.Windows.EventManager
  isExternal: false
  name: GetRoutedEvents
  nameWithType: EventManager.GetRoutedEvents
- uid: System.Windows.EventManager.GetRoutedEventsForOwner*
  parent: System.Windows.EventManager
  isExternal: false
  name: GetRoutedEventsForOwner
  nameWithType: EventManager.GetRoutedEventsForOwner
- uid: System.Windows.EventManager.RegisterClassHandler*
  parent: System.Windows.EventManager
  isExternal: false
  name: RegisterClassHandler
  nameWithType: EventManager.RegisterClassHandler
- uid: System.Windows.EventManager.RegisterRoutedEvent*
  parent: System.Windows.EventManager
  isExternal: false
  name: RegisterRoutedEvent
  nameWithType: EventManager.RegisterRoutedEvent
