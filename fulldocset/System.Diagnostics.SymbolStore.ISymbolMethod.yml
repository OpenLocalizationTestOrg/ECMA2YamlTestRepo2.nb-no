### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.SymbolStore.ISymbolMethod
  id: ISymbolMethod
  children:
  - System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace
  - System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters
  - System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(System.Int32)
  - System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  - System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])
  - System.Diagnostics.SymbolStore.ISymbolMethod.RootScope
  - System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount
  - System.Diagnostics.SymbolStore.ISymbolMethod.Token
  langs:
  - csharp
  name: ISymbolMethod
  nameWithType: ISymbolMethod
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod
  type: Interface
  summary: "Representerer en metode i et symbol-butikk."
  remarks: "Grensesnittet ISymbolMethod gir tilgang bare til attributtene symbolet som er relatert til en metode som sekvensnummer peker, Leksikalsk omfang og parameterinformasjon. Bruk den med den <xref:System.Reflection>klasser til å lese i type-relaterte attributter for en metode.</xref:System.Reflection>      > [!NOTE] > Dette grensesnittet er denne administrerte filen i den `ISymUnmanagedMethod` interface, en ubehandlet symbolet store grensesnitt som gir en annen måte å lese og skrive feilsøkingsinformasjon for symbolet."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface ISymbolMethod
  implements: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace
  id: GetNamespace
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: GetNamespace()
  nameWithType: ISymbolMethod.GetNamespace()
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Henter navneområdet metoden gjeldende er definert i."
  syntax:
    content: public System.Diagnostics.SymbolStore.ISymbolNamespace GetNamespace ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolNamespace
      description: "Navneområdet som den gjeldende metoden er definert i."
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  id: GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: GetOffset(ISymbolDocument,Int32,Int32)
  nameWithType: ISymbolMethod.GetOffset(ISymbolDocument,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(ISymbolDocument,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Henter den Microsoft mellomspråk (MSIL) forskyvning i metoden som tilsvarer den angitte posisjonen."
  remarks: "Parameterne returneres i rekkefølgen som de er definert i signaturen for metoden."
  syntax:
    content: public int GetOffset (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);
    parameters:
    - id: document
      type: System.Diagnostics.SymbolStore.ISymbolDocument
      description: "Dokumentet forskyvningen forespørres."
    - id: line
      type: System.Int32
      description: "Linjen for tilsvarer forskyvningen."
    - id: column
      type: System.Int32
      description: "Dokumentet kolonnen tilsvarer forskyvningen."
    return:
      type: System.Int32
      description: "Forskyvning i det angitte dokumentet."
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters
  id: GetParameters
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: GetParameters()
  nameWithType: ISymbolMethod.GetParameters()
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Henter parameterne for den gjeldende."
  remarks: "Parameterne returneres i rekkefølgen som de er definert i signaturen for metoden."
  syntax:
    content: public System.Diagnostics.SymbolStore.ISymbolVariable[] GetParameters ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolVariable[]
      description: "Matrise med parametere for den gjeldende."
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  id: GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: GetRanges(ISymbolDocument,Int32,Int32)
  nameWithType: ISymbolMethod.GetRanges(ISymbolDocument,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(ISymbolDocument,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Henter en matrise med start- og forskyvningen parene som tilsvarer av Microsoft mellomspråk (MSIL) som omfatter en angitt posisjon i denne metoden."
  remarks: "Matrisen er en matrise med heltall formatet {{Start&1;, end1}, {start2 end2}...}. Antall området par er lengden på matrisen dividert 2."
  syntax:
    content: public int[] GetRanges (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);
    parameters:
    - id: document
      type: System.Diagnostics.SymbolStore.ISymbolDocument
      description: "Dokumentet forskyvningen forespørres."
    - id: line
      type: System.Int32
      description: "Linjen for tilsvarer områdene."
    - id: column
      type: System.Int32
      description: "Dokumentet kolonnen tilsvarer områdene."
    return:
      type: System.Int32[]
      description: "En matrise med start- og forskyvning par."
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(System.Int32)
  id: GetScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: GetScope(Int32)
  nameWithType: ISymbolMethod.GetScope(Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Returnerer det mest omsluttende Leksikalsk omfanget når gitt en forskyvning i en metode."
  remarks: "Du kan bruke GetScope-metoden til å starte lokale variabelen søk."
  syntax:
    content: public System.Diagnostics.SymbolStore.ISymbolScope GetScope (int offset);
    parameters:
    - id: offset
      type: System.Int32
      description: "Byteforskyvning i metoden Leksikalsk omfanget."
    return:
      type: System.Diagnostics.SymbolStore.ISymbolScope
      description: "Mest omsluttende Leksikalsk omfanget for den angitte byte forskyvningen i metoden."
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetScope*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  id: GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])
  nameWithType: ISymbolMethod.GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Henter sekvensnummer-peker for den gjeldende."
  remarks: "Sekvensnummer peker sorteres etter forskyvningen og er for alle dokumenter i metoden. Bruk <xref:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount%2A>til å hente telling av alle sekvensnummer peker og opprette matriser med riktig størrelse.</xref:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount%2A>       GetSequencePoints kontrollerer størrelsen på hver matrise og plasserer sekvens punkt informasjonen inn i hver. Hvis en matrise er `null`, dataene for at tabellmatrisen returneres ikke."
  syntax:
    content: public void GetSequencePoints (int[] offsets, System.Diagnostics.SymbolStore.ISymbolDocument[] documents, int[] lines, int[] columns, int[] endLines, int[] endColumns);
    parameters:
    - id: offsets
      type: System.Int32[]
      description: "En rekke byte forskyvning fra begynnelsen av metoden for punktene i rekkefølge."
    - id: documents
      type: System.Diagnostics.SymbolStore.ISymbolDocument[]
      description: "Matrisen dokumenter sekvensnummer peker finnes i."
    - id: lines
      type: System.Int32[]
      description: "Matrisen for linjer i dokumenter sekvensnummer peker er plassert."
    - id: columns
      type: System.Int32[]
      description: "Matrise med kolonner i dokumenter sekvensnummer peker er plassert."
    - id: endLines
      type: System.Int32[]
      description: "Matrisen for linjer i dokumenter som peker sekvensen slutten."
    - id: endColumns
      type: System.Int32[]
      description: "Matrise med kolonner i dokumenter som peker sekvensen slutten."
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])
  id: GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])
  nameWithType: ISymbolMethod.GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Henter start- og posisjonen for kilden for den gjeldende metoden."
  remarks: "Den første posisjonen for matrise er starten, og andre enden."
  syntax:
    content: public bool GetSourceStartEnd (System.Diagnostics.SymbolStore.ISymbolDocument[] docs, int[] lines, int[] columns);
    parameters:
    - id: docs
      type: System.Diagnostics.SymbolStore.ISymbolDocument[]
      description: "Start- og slutt kildedokumenter."
    - id: lines
      type: System.Int32[]
      description: "Første og siste linjer i den tilsvarende kilde dokumenter."
    - id: columns
      type: System.Int32[]
      description: "Første og siste kolonner i den tilsvarende kilde dokumenter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis posisjonen ble definert. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.RootScope
  id: RootScope
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: RootScope
  nameWithType: ISymbolMethod.RootScope
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.RootScope
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Henter roten Leksikalsk omfanget for den gjeldende. Dette området, omslutter du hele metoden."
  syntax:
    content: public System.Diagnostics.SymbolStore.ISymbolScope RootScope { get; }
    return:
      type: System.Diagnostics.SymbolStore.ISymbolScope
      description: "Root Leksikalsk omfanget som omslutter du hele metoden."
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.RootScope*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount
  id: SequencePointCount
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: SequencePointCount
  nameWithType: ISymbolMethod.SequencePointCount
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Henter en telling av sekvensnummer peker i-metoden."
  syntax:
    content: public int SequencePointCount { get; }
    return:
      type: System.Int32
      description: "Antall sekvensnummer peker i-metoden."
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.Token
  id: Token
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  langs:
  - csharp
  name: Token
  nameWithType: ISymbolMethod.Token
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.Token
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Henter den <xref href=&quot;System.Diagnostics.SymbolStore.SymbolToken&quot;> </xref> med metadata for den gjeldende."
  syntax:
    content: public System.Diagnostics.SymbolStore.SymbolToken Token { get; }
    return:
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "Metadatatoken for den gjeldende."
  overload: System.Diagnostics.SymbolStore.ISymbolMethod.Token*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetNamespace()
  nameWithType: ISymbolMethod.GetNamespace()
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace()
- uid: System.Diagnostics.SymbolStore.ISymbolNamespace
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolNamespace
  nameWithType: ISymbolNamespace
  fullName: System.Diagnostics.SymbolStore.ISymbolNamespace
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetOffset(ISymbolDocument,Int32,Int32)
  nameWithType: ISymbolMethod.GetOffset(ISymbolDocument,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(ISymbolDocument,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.SymbolStore.ISymbolDocument
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolDocument
  nameWithType: ISymbolDocument
  fullName: System.Diagnostics.SymbolStore.ISymbolDocument
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetParameters()
  nameWithType: ISymbolMethod.GetParameters()
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters()
- uid: System.Diagnostics.SymbolStore.ISymbolVariable[]
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolVariable
  nameWithType: ISymbolVariable
  fullName: System.Diagnostics.SymbolStore.ISymbolVariable[]
  spec.csharp:
  - uid: System.Diagnostics.SymbolStore.ISymbolVariable
    name: ISymbolVariable
    nameWithType: ISymbolVariable
    fullName: ISymbolVariable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetRanges(ISymbolDocument,Int32,Int32)
  nameWithType: ISymbolMethod.GetRanges(ISymbolDocument,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(ISymbolDocument,Int32,Int32)
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetScope(Int32)
  nameWithType: ISymbolMethod.GetScope(Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(Int32)
- uid: System.Diagnostics.SymbolStore.ISymbolScope
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolScope
  nameWithType: ISymbolScope
  fullName: System.Diagnostics.SymbolStore.ISymbolScope
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])
  nameWithType: ISymbolMethod.GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])
- uid: System.Diagnostics.SymbolStore.ISymbolDocument[]
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolDocument
  nameWithType: ISymbolDocument
  fullName: System.Diagnostics.SymbolStore.ISymbolDocument[]
  spec.csharp:
  - uid: System.Diagnostics.SymbolStore.ISymbolDocument
    name: ISymbolDocument
    nameWithType: ISymbolDocument
    fullName: ISymbolDocument[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])
  nameWithType: ISymbolMethod.GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.RootScope
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: RootScope
  nameWithType: ISymbolMethod.RootScope
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.RootScope
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: SequencePointCount
  nameWithType: ISymbolMethod.SequencePointCount
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.Token
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: Token
  nameWithType: ISymbolMethod.Token
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.Token
- uid: System.Diagnostics.SymbolStore.SymbolToken
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: SymbolToken
  nameWithType: SymbolToken
  fullName: System.Diagnostics.SymbolStore.SymbolToken
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetNamespace
  nameWithType: ISymbolMethod.GetNamespace
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetOffset
  nameWithType: ISymbolMethod.GetOffset
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetParameters
  nameWithType: ISymbolMethod.GetParameters
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetRanges
  nameWithType: ISymbolMethod.GetRanges
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetScope*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetScope
  nameWithType: ISymbolMethod.GetScope
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetSequencePoints
  nameWithType: ISymbolMethod.GetSequencePoints
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: GetSourceStartEnd
  nameWithType: ISymbolMethod.GetSourceStartEnd
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.RootScope*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: RootScope
  nameWithType: ISymbolMethod.RootScope
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: SequencePointCount
  nameWithType: ISymbolMethod.SequencePointCount
- uid: System.Diagnostics.SymbolStore.ISymbolMethod.Token*
  parent: System.Diagnostics.SymbolStore.ISymbolMethod
  isExternal: false
  name: Token
  nameWithType: ISymbolMethod.Token
