### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  id: WebPartDisplayMode
  children:
  - System.Web.UI.WebControls.WebParts.WebPartDisplayMode.#ctor(System.String)
  - System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign
  - System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone
  - System.Web.UI.WebControls.WebParts.WebPartDisplayMode.IsEnabled(System.Web.UI.WebControls.WebParts.WebPartManager)
  - System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name
  - System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization
  - System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts
  langs:
  - csharp
  name: WebPartDisplayMode
  nameWithType: WebPartDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  type: Class
  summary: "Definerer et vanlig sett med egenskaper for flere Vis-modus som en webdeler-side kan skrive inn."
  remarks: "En webdeler-side kan skrive inn flere forskjellige visningsmodus. I hver visningsmodus enkelte elementer i webdeler-brukergrensesnittet (UI) enten er skjult eller vises, og enkelte typer brukerendringer på en side er aktivert eller deaktivert. Den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll inneholder implementeringen for Vis moduler som er tilgjengelige i webdeler kontrollen settet og administrerer visningsmodi for en side.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Tabellen nedenfor viser felt som representerer de tilgjengelige Visningsmodiene.      | Visningsmodus | Beskrivelse |   |------------------|-----------------|   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>| Viser webdeler kontroller og UI-elementene i normal modus som sluttbrukere ser på en side. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>| Viser sone UI-elementene, og gjør det mulig for brukere å dra webdeler kontroller for å endre oppsettet for en side. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>| Viser spesielle redigering UI-elementene, og gjør det mulig for sluttbrukerne mulighet til å redigere kontroller på en side. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>| Viser spesielle katalogen UI-elementene, og gjør det mulig for sluttbrukerne mulighet til å legge til og fjerne sidekontrollene. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>| Viser bestemte tilkoblinger UI-elementene, og gjør det mulig for sluttbrukerne mulighet til å koble webdeler kontroller. |</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>"
  example:
  - "The following code examples demonstrate the declarative use of display modes on a Web Parts page. Each of these display modes, as implemented by the Web Parts control set, is derived from the WebPartDisplayMode class.  \n  \n This code example has four parts:  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   A Web page with a zone to host the custom control.  \n  \n-   A user control that enables users to change display modes on the Web page.  \n  \n-   An explanation of how the page works in a browser.  \n  \n The first part of the example is a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, `TextDisplayWebPart`. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a demonstration of both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_WebPartDisplayMode_Overview#9](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_266_1.vb)]\n [!code-cs[WebParts_WebPartDisplayMode_Overview#9](~/add/codesnippet/csharp/t-system.web.ui.webcontr_266_1.cs)]  \n  \n The second part of the code example is a Web page that references a standard ASP.NET <xref:System.Web.UI.WebControls.Calendar> control within an `<asp:webpartzone>` element, so that the control is wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control and given basic Web Parts functionality at run time. The page also references the `TextDisplayWebPart` control within an `<asp:catalogzone>` element, which demonstrates the end user's ability to switch to catalog mode and add controls to the page. The page also includes an `<asp:editorzone>` element, which enables users to edit the controls contained in the `<asp:webpartzone>` when the page is in edit mode. Near the top of the page are a `register` directive for the custom control and another one for the user control.  \n  \n [!code-cs[WebParts_WebPartDisplayMode_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_266_2.aspx)]\n [!code-vb[WebParts_WebPartDisplayMode_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_266_2.aspx)]  \n  \n The third part of the code example is a user control that enables users to switch display modes on a Web page. Save the source code for this control in a file named DisplayModeMenuCS.ascx or DisplayModeMenuVB.ascx (depending on which language you use for the code example), and put it in the same directory as the Web page. For more details about display modes and a description of the source code in this control, see the topic [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartDisplayMode_Overview#5](~/add/codesnippet/csharp/t-system.web.ui.webcontr_266_3.ascx)]\n [!code-vb[WebParts_WebPartDisplayMode_Overview#5](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_266_3.ascx)]  \n  \n When you load the page in a browser, you can use the **Display Mode** drop-down list control to switch to different display modes. To edit controls, select **Edit** in the drop-down list control. To edit a specific control, expose its verbs menu by clicking the arrow in the control's title bar, and then clicking **Edit** in the verbs menu. When a control is in edit mode, the editing controls added to this page enable you to change the edited control's appearance and layout. When you are finished, select **Browse** in the **Display Mode** drop-down list control to return the page to a normal view. To add controls to the page, switch to catalog mode. Notice that you can either use the **Display Mode** drop-down list control, or click the button near the bottom of the page. The inline code for the `Button1_Click` method demonstrates how to change display modes programmatically. While you are in catalog mode, you can add the custom `TextDisplayWebPart` control to the page."
  syntax:
    content: public abstract class WebPartDisplayMode
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  langs:
  - csharp
  name: WebPartDisplayMode(String)
  nameWithType: WebPartDisplayMode.WebPartDisplayMode(String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.WebPartDisplayMode(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Initialiserer en verdi for navnet på visningsmodus."
  remarks: "En <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>objekt er ikke opprettet fordi klassen er abstrakt.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Under kjøring av <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollere bruker den <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>klasse som basisklassen til å opprette objekter for hver av de ulike side viser modiene.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: protected WebPartDisplayMode (string name);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på visningsmodus."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign
  id: AllowPageDesign
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  langs:
  - csharp
  name: AllowPageDesign
  nameWithType: WebPartDisplayMode.AllowPageDesign
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Henter en verdi som bestemmer om brukere kan endre oppsettet for en webdeler side når siden er i en bestemt visningsmodus."
  syntax:
    content: public virtual bool AllowPageDesign { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis brukere kan endre oppsettet siden. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone
  id: AssociatedWithToolZone
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  langs:
  - csharp
  name: AssociatedWithToolZone
  nameWithType: WebPartDisplayMode.AssociatedWithToolZone
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Henter en verdi som angir om en bestemt visningsmodus er knyttet til en klasse som er avledet fra den <xref href=&quot;System.Web.UI.WebControls.WebParts.ToolZone&quot;> </xref> klasse."
  remarks: "Når en webdeler side går inn i en visningsmodus der AssociatedWithToolZone-egenskapen er satt til `true`, <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollen tolker som å bety at den tilknyttede klassen er avledet fra den <xref:System.Web.UI.WebControls.WebParts.ToolZone>klassen, og at flere elementer i brukergrensesnittet (UI) skal vises.</xref:System.Web.UI.WebControls.WebParts.ToolZone> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> For eksempel når en side går inn i redigeringsmodus, vises spesielle soner som inneholder UI-elementene for redigere webdeler kontroller på siden. Dette gjøres mulig fordi egenskapen AssociatedWithToolZone verdi i den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>feltet er satt til `true`.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>"
  syntax:
    content: public virtual bool AssociatedWithToolZone { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis visningsmodus er knyttet til en <xref href=&quot;System.Web.UI.WebControls.WebParts.ToolZone&quot;> </xref> klasse; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.IsEnabled(System.Web.UI.WebControls.WebParts.WebPartManager)
  id: IsEnabled(System.Web.UI.WebControls.WebParts.WebPartManager)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  langs:
  - csharp
  name: IsEnabled(WebPartManager)
  nameWithType: WebPartDisplayMode.IsEnabled(WebPartManager)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.IsEnabled(WebPartManager)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Henter en verdi som angir om brukere kan tilpasse en side mens siden er i en bestemt visningsmodus."
  syntax:
    content: public virtual bool IsEnabled (System.Web.UI.WebControls.WebParts.WebPartManager webPartManager);
    parameters:
    - id: webPartManager
      type: System.Web.UI.WebControls.WebParts.WebPartManager
      description: "Den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontroll-forekomsten på gjeldende side."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis brukere kan tilpasse en side. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Imidlertid, når <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization*>er satt til <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, og personlige data er deaktivert på siden kan standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization*>"
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name
  id: Name
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  langs:
  - csharp
  name: Name
  nameWithType: WebPartDisplayMode.Name
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Henter navnet på en visningsmodus."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "En streng som inneholder navnet på en visningsmodus."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization
  id: RequiresPersonalization
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  langs:
  - csharp
  name: RequiresPersonalization
  nameWithType: WebPartDisplayMode.RequiresPersonalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Henter en verdi som angir om en bestemt visningsmodus krever bruk av personlige data være aktivert."
  syntax:
    content: public virtual bool RequiresPersonalization { get; }
    return:
      type: System.Boolean
      description: "En boolsk verdi som angir om bruk av personlige data er nødvendig. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts
  id: ShowHiddenWebParts
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  langs:
  - csharp
  name: ShowHiddenWebParts
  nameWithType: WebPartDisplayMode.ShowHiddenWebParts
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Henter en verdi som angir om kontroller som har de <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden*>-egenskapen satt til <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> skal vises.</xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden*>"
  syntax:
    content: public virtual bool ShowHiddenWebParts { get; }
    return:
      type: System.Boolean
      description: "En boolsk verdi som angir om skjulte kontroller skal vises. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.#ctor(System.String)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: WebPartDisplayMode(String)
  nameWithType: WebPartDisplayMode.WebPartDisplayMode(String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.WebPartDisplayMode(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: AllowPageDesign
  nameWithType: WebPartDisplayMode.AllowPageDesign
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: AssociatedWithToolZone
  nameWithType: WebPartDisplayMode.AssociatedWithToolZone
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.IsEnabled(System.Web.UI.WebControls.WebParts.WebPartManager)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: IsEnabled(WebPartManager)
  nameWithType: WebPartDisplayMode.IsEnabled(WebPartManager)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.IsEnabled(WebPartManager)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartManager
  nameWithType: WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: Name
  nameWithType: WebPartDisplayMode.Name
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: RequiresPersonalization
  nameWithType: WebPartDisplayMode.RequiresPersonalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: ShowHiddenWebParts
  nameWithType: WebPartDisplayMode.ShowHiddenWebParts
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.#ctor*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: WebPartDisplayMode
  nameWithType: WebPartDisplayMode.WebPartDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: AllowPageDesign
  nameWithType: WebPartDisplayMode.AllowPageDesign
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: AssociatedWithToolZone
  nameWithType: WebPartDisplayMode.AssociatedWithToolZone
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.IsEnabled*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: IsEnabled
  nameWithType: WebPartDisplayMode.IsEnabled
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: Name
  nameWithType: WebPartDisplayMode.Name
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: RequiresPersonalization
  nameWithType: WebPartDisplayMode.RequiresPersonalization
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: ShowHiddenWebParts
  nameWithType: WebPartDisplayMode.ShowHiddenWebParts
