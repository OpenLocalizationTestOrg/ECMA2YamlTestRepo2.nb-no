### YamlMime:ManagedReference
items:
- uid: System.IO.FileInfo
  id: FileInfo
  children:
  - System.IO.FileInfo.#ctor(System.String)
  - System.IO.FileInfo.AppendText
  - System.IO.FileInfo.CopyTo(System.String)
  - System.IO.FileInfo.CopyTo(System.String,System.Boolean)
  - System.IO.FileInfo.Create
  - System.IO.FileInfo.CreateText
  - System.IO.FileInfo.Decrypt
  - System.IO.FileInfo.Delete
  - System.IO.FileInfo.Directory
  - System.IO.FileInfo.DirectoryName
  - System.IO.FileInfo.Encrypt
  - System.IO.FileInfo.Exists
  - System.IO.FileInfo.GetAccessControl
  - System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)
  - System.IO.FileInfo.IsReadOnly
  - System.IO.FileInfo.Length
  - System.IO.FileInfo.MoveTo(System.String)
  - System.IO.FileInfo.Name
  - System.IO.FileInfo.Open(System.IO.FileMode)
  - System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)
  - System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  - System.IO.FileInfo.OpenRead
  - System.IO.FileInfo.OpenText
  - System.IO.FileInfo.OpenWrite
  - System.IO.FileInfo.Replace(System.String,System.String)
  - System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)
  - System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)
  - System.IO.FileInfo.ToString
  langs:
  - csharp
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
  type: Class
  summary: "Inneholder egenskaper og Forekomstmetoder for oppretting, kopierer, sletting, flytting, og åpne filer, og hjelper til med opprettingen av <xref href=&quot;System.IO.FileStream&quot;> </xref> objekter. Denne klassen kan ikke arves.       For å bla gjennom .NET Framework-kildekode for denne typen, kan du se den [Referansekilde](http://referencesource.microsoft.com/#mscorlib/system/io/fileinfo.cs#4ee673c1a4ecad41)."
  remarks: "> [!NOTE]\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/fileinfo.cs#4ee673c1a4ecad41). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \n  \n Use the FileInfo class for typical operations such as copying, moving, renaming, creating, opening, deleting, and appending to files.  \n  \n If you are performing multiple operations on the same file, it can be more efficient to use FileInfo instance methods instead of the corresponding static methods of the <xref:System.IO.File> class, because a security check will not always be necessary.  \n  \n Many of the FileInfo methods return other I/O types when you create or open files. You can use these other types to further manipulate a file. For more information, see specific FileInfo members such as <xref:System.IO.FileInfo.Open%2A>, <xref:System.IO.FileInfo.OpenRead%2A>, <xref:System.IO.FileInfo.OpenText%2A>, <xref:System.IO.FileInfo.CreateText%2A>, or <xref:System.IO.FileInfo.Create%2A>.  \n  \n By default, full read/write access to new files is granted to all users.  \n  \n The following table describes the enumerations that are used to customize the behavior of various FileInfo methods.  \n  \n|Enumeration|Description|  \n|-----------------|-----------------|  \n|<xref:System.IO.FileAccess>|Specifies read and write access to a file.|  \n|<xref:System.IO.FileShare>|Specifies the level of access permitted for a file that is already in use.|  \n|<xref:System.IO.FileMode>|Specifies whether the contents of an existing file are preserved or overwritten, and whether requests to create an existing file cause an exception.|  \n  \n> [!NOTE]\n>  In members that accept a path as an input string, that path must be well-formed or an exception is raised. For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class. Therefore, the path is malformed and an exception is raised. Similarly, a path or a combination of paths cannot be fully qualified twice. For example, \"c:\\temp c:\\windows\" also raises an exception in most cases. Ensure that your paths are well-formed when using methods that accept a path string.  \n  \n In members that accept a path, the path can refer to a file or just a directory. The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name. For example, all the following are acceptable paths:  \n  \n-   \"c:\\\\\\MyDir\\\\\\MyFile.txt\" in C#, or \"c:\\MyDir\\MyFile.txt\" in Visual Basic.  \n  \n-   \"c:\\\\\\MyDir\" in C#, or \"c:\\MyDir\" in Visual Basic.  \n  \n-   \"MyDir\\\\\\MySubdir\" in C#, or \"MyDir\\MySubDir\" in Visual Basic.  \n  \n-   \"\\\\\\\\\\\\\\MyServer\\\\\\MyShare\" in C#, or \"\\\\\\MyServer\\MyShare\" in Visual Basic.  \n  \n The FileInfo class provides the following properties that enable you to retrieve information about a file. For an example of how to use each property, see the property pages.  \n  \n-   The <xref:System.IO.FileInfo.Directory%2A> property retrieves an object that represents the parent directory of a file.  \n  \n-   The <xref:System.IO.FileInfo.DirectoryName%2A> property retrieves the full path of the parent directory of a file.  \n  \n-   The <xref:System.IO.FileInfo.Exists%2A> property checks for the presence of a file before operating on it.  \n  \n-   The <xref:System.IO.FileInfo.IsReadOnly%2A> property retrieves or sets a value that specifies whether a file can be modified.  \n  \n-   The <xref:System.IO.FileInfo.Length%2A> retrieves the size of a file.  \n  \n-   The <xref:System.IO.FileInfo.Name%2A> retrieves the name of a file."
  example:
  - "The following example demonstrates some of the main members of the `FileInfo` class.  \n  \n When the properties are first retrieved, FileInfo calls the <xref:System.IO.FileSystemInfo.Refresh%2A> method and caches information about the file. On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.  \n  \n [!code-cs[FInfo Class#1](~/add/codesnippet/csharp/t-system.io.fileinfo_1.cs)]\n [!code-cpp[FInfo Class#1](~/add/codesnippet/cpp/t-system.io.fileinfo_1.cpp)]\n [!code-vb[FInfo Class#1](~/add/codesnippet/visualbasic/t-system.io.fileinfo_1.vb)]  \n  \n This example produces output similar to the following.  \n  \n```  \nHello  \nAnd  \nWelcome  \nC:\\Users\\userName\\AppData\\Local\\Temp\\tmp70AB.tmp was copied to C:\\Users\\userName\\AppData\\Local\\Temp\\tmp70CB.tmp.  \nC:\\Users\\userName\\AppData\\Local\\Temp\\tmp70CB.tmp was successfully deleted.  \n```"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class FileInfo : System.IO.FileSystemInfo
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.IO.FileSystemInfo
  implements: []
  inheritedMembers:
  - System.IO.FileSystemInfo.Attributes
  - System.IO.FileSystemInfo.CreationTime
  - System.IO.FileSystemInfo.CreationTimeUtc
  - System.IO.FileSystemInfo.Extension
  - System.IO.FileSystemInfo.FullName
  - System.IO.FileSystemInfo.FullPath
  - System.IO.FileSystemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.IO.FileSystemInfo.LastAccessTime
  - System.IO.FileSystemInfo.LastAccessTimeUtc
  - System.IO.FileSystemInfo.LastWriteTime
  - System.IO.FileSystemInfo.LastWriteTimeUtc
  - System.IO.FileSystemInfo.OriginalPath
  - System.IO.FileSystemInfo.Refresh
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.IO.FileInfo.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: FileInfo(String)
  nameWithType: FileInfo.FileInfo(String)
  fullName: System.IO.FileInfo.FileInfo(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.IO.FileInfo&quot;> </xref> klassen som fungerer som en tekstbryting for en filbane."
  remarks: "Du kan angi den fullstendige eller relative filnavnet, men sikkerhetskontrollen henter fullstendige navn."
  example:
  - "The following example uses this constructor to create two files, which are then written to, read from, copied, and deleted.  \n  \n [!code-cpp[finfo ctor#1](~/add/codesnippet/cpp/m-system.io.fileinfo.sha_1.cpp)]\n [!code-cs[finfo ctor#1](~/add/codesnippet/csharp/m-system.io.fileinfo.sha_1.cs)]\n [!code-vb[finfo ctor#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.sha_1.vb)]  \n  \n The following example opens an existing file or creates a file, appends text to the file, and displays the results.  \n  \n [!code-cpp[fileinfomain#1](~/add/codesnippet/cpp/m-system.io.fileinfo.sha_2.cpp)]\n [!code-cs[fileinfomain#1](~/add/codesnippet/csharp/m-system.io.fileinfo.sha_2.cs)]\n [!code-vb[fileinfomain#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.sha_2.vb)]"
  syntax:
    content: public FileInfo (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "Det fullstendig kvalifiserte navnet på den nye filen, eller det relative filnavnet. Ikke slutte banen med directory skilletegnet."
  overload: System.IO.FileInfo.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke den nødvendige tillatelsen."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Filnavnet er tomt, inneholder bare mellomrom eller inneholder ugyldige tegn."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Tilgang til <code> fileName </code> avslås."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angitte banen, filnavnet eller begge være lengre enn den systemdefinerte maksimumslengden. For eksempel på Windows-baserte plattformer baner må være mindre enn 248 tegn, og filnavn må være mindre enn 260 tegn."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>fileName</code>inneholder et kolon (:) midt i en streng."
  platform:
  - net462
- uid: System.IO.FileInfo.AppendText
  id: AppendText
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: AppendText()
  nameWithType: FileInfo.AppendText()
  fullName: System.IO.FileInfo.AppendText()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Oppretter en <xref:System.IO.StreamWriter>som legger til tekst i filen representert av denne forekomsten av den <xref href=&quot;System.IO.FileInfo&quot;> </xref>.</xref:System.IO.StreamWriter>"
  remarks: ''
  example:
  - "The following example appends text to a file and reads from the file.  \n  \n [!code-vb[finfo appendtext#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.app_1.vb)]\n [!code-cpp[finfo appendtext#1](~/add/codesnippet/cpp/m-system.io.fileinfo.app_1.cpp)]\n [!code-cs[finfo appendtext#1](~/add/codesnippet/csharp/m-system.io.fileinfo.app_1.cs)]  \n  \n The following example demonstrates appending text to the end of a file and also displays the result of the append operation to the console. The first time this routine is called, the file is created if it does not exist. After that, the specified text is appended to the file.  \n  \n [!code-vb[fileinfoappendtext#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.app_2.vb)]\n [!code-cpp[fileinfoappendtext#1](~/add/codesnippet/cpp/m-system.io.fileinfo.app_2.cpp)]\n [!code-cs[fileinfoappendtext#1](~/add/codesnippet/csharp/m-system.io.fileinfo.app_2.cs)]"
  syntax:
    content: public System.IO.StreamWriter AppendText ();
    parameters: []
    return:
      type: System.IO.StreamWriter
      description: "A new <xref uid=&quot;langword_csharp_StreamWriter&quot; name=&quot;StreamWriter&quot; href=&quot;&quot;></xref>."
  overload: System.IO.FileInfo.AppendText*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileInfo.CopyTo(System.String)
  id: CopyTo(System.String)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: CopyTo(String)
  nameWithType: FileInfo.CopyTo(String)
  fullName: System.IO.FileInfo.CopyTo(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Kopierer en fil til en ny fil, fjerner overskriving av eksisterende fil."
  remarks: "Bruk den <xref:System.IO.FileInfo.CopyTo%2A>metoden Tillat overskriving av eksisterende fil.</xref:System.IO.FileInfo.CopyTo%2A>      > [!CAUTION] > Når det er mulig, unngå å bruke korte filnavn (for eksempel XXXXXX~1.XXX) med denne metoden. Hvis to filer har tilsvarende kort filnavn og denne metoden kan mislykkes og vise et unntak og/eller medføre uønsket virkemåte"
  example:
  - "The following example demonstrates both overloads of the `CopyTo` method.  \n  \n [!code-cpp[finfo copyto2#1](~/add/codesnippet/cpp/m-system.io.fileinfo.cop_1_1.cpp)]\n [!code-cs[finfo copyto2#1](~/add/codesnippet/csharp/m-system.io.fileinfo.cop_1_1.cs)]\n [!code-vb[finfo copyto2#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.cop_1_1.vb)]  \n  \n The following example demonstrates copying one file to another file, throwing an exception if the destination file already exists.  \n  \n [!code-cpp[FileInfoCopyTo1#1](~/add/codesnippet/cpp/m-system.io.fileinfo.cop_1_2.cpp)]\n [!code-cs[FileInfoCopyTo1#1](~/add/codesnippet/csharp/m-system.io.fileinfo.cop_1_2.cs)]\n [!code-vb[FileInfoCopyTo1#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.cop_1_2.vb)]"
  syntax:
    content: public System.IO.FileInfo CopyTo (string destFileName);
    parameters:
    - id: destFileName
      type: System.String
      description: "Navnet på den nye filen skal kopieres til."
    return:
      type: System.IO.FileInfo
      description: "En ny fil med en fullstendig bane."
  overload: System.IO.FileInfo.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destFileName</code>er tomt, inneholder bare mellomrom eller inneholder ugyldige tegn."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstår en feil, eller målfilen finnes allerede."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke den nødvendige tillatelsen."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destFileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "En mappebane sendes inn, eller filen er flyttet til en annen stasjon."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Mappen som er angitt i <code> destFileName </code> finnes ikke."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angitte banen, filnavnet eller begge være lengre enn den systemdefinerte maksimumslengden. For eksempel på Windows-baserte plattformer baner må være mindre enn 248 tegn, og filnavn må være mindre enn 260 tegn."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>destFileName</code>inneholder et kolon (:) i strengen, men angir ikke volumet."
  platform:
  - net462
- uid: System.IO.FileInfo.CopyTo(System.String,System.Boolean)
  id: CopyTo(System.String,System.Boolean)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: CopyTo(String,Boolean)
  nameWithType: FileInfo.CopyTo(String,Boolean)
  fullName: System.IO.FileInfo.CopyTo(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Kopierer en fil til en ny fil, slik at overskriving av eksisterende fil."
  remarks: "Bruk denne metoden til å tillate eller hindre overskriving av eksisterende fil. Bruk av <xref:System.IO.FileInfo.CopyTo%2A>metode for å hindre overskriving av eksisterende fil som standard.</xref:System.IO.FileInfo.CopyTo%2A>      > [!CAUTION] > Når det er mulig, unngå å bruke korte filnavn (for eksempel XXXXXX~1.XXX) med denne metoden. Hvis to filer har tilsvarende kort filnavn og denne metoden kan mislykkes og vise et unntak og/eller medføre uønsket virkemåte"
  example:
  - "The following example demonstrates both overloads of the `CopyTo` method.  \n  \n [!code-cpp[finfo copyto2#1](~/add/codesnippet/cpp/m-system.io.fileinfo.cop_0_1.cpp)]\n [!code-cs[finfo copyto2#1](~/add/codesnippet/csharp/m-system.io.fileinfo.cop_0_1.cs)]\n [!code-vb[finfo copyto2#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.cop_0_1.vb)]  \n  \n The following example demonstrates copying one file to another file, specifying whether to overwrite a file that already exists.  \n  \n [!code-cs[fileinfocopyto#1](~/add/codesnippet/csharp/m-system.io.fileinfo.cop_0_2.cs)]\n [!code-cpp[fileinfocopyto#1](~/add/codesnippet/cpp/m-system.io.fileinfo.cop_0_2.cpp)]\n [!code-vb[fileinfocopyto#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.cop_0_2.vb)]"
  syntax:
    content: public System.IO.FileInfo CopyTo (string destFileName, bool overwrite);
    parameters:
    - id: destFileName
      type: System.String
      description: "Navnet på den nye filen skal kopieres til."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>tillate en eksisterende fil vil bli overskrevet; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.IO.FileInfo
      description: "En ny fil, eller en overskrive en eksisterende filen hvis <code> overwrite </code> er <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Hvis filen finnes og <code> overwrite </code> er <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, en <xref:System.IO.IOException>forårsakes.</xref:System.IO.IOException>"
  overload: System.IO.FileInfo.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destFileName</code>er tomt, inneholder bare mellomrom eller inneholder ugyldige tegn."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstår en feil, eller målfilen finnes allerede og <code> overwrite </code> er <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke den nødvendige tillatelsen."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destFileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Mappen som er angitt i <code> destFileName </code> finnes ikke."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "En mappebane sendes inn, eller filen er flyttet til en annen stasjon."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angitte banen, filnavnet eller begge være lengre enn den systemdefinerte maksimumslengden. For eksempel på Windows-baserte plattformer baner må være mindre enn 248 tegn, og filnavn må være mindre enn 260 tegn."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>destFileName</code>inneholder et kolon (:) midt i en streng."
  platform:
  - net462
- uid: System.IO.FileInfo.Create
  id: Create
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Create()
  nameWithType: FileInfo.Create()
  fullName: System.IO.FileInfo.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Oppretter en fil."
  remarks: "Som standard tilgang full lese-og skrivetilgang til nye filer til alle brukere.       Denne metoden er en tekstbryting for funksjonaliteten i <xref:System.IO.File.Create%2A?displayProperty=fullName>.</xref:System.IO.File.Create%2A?displayProperty=fullName>"
  example:
  - "The following example creates a reference to a file, and then creates the file on disk using `FileInfo.Create()`.  \n  \n [!code-cpp[fileinfodelete#1](~/add/codesnippet/cpp/m-system.io.fileinfo.cre_0_1.cpp)]\n [!code-vb[fileinfodelete#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.cre_0_1.vb)]\n [!code-cs[fileinfodelete#1](~/add/codesnippet/csharp/m-system.io.fileinfo.cre_0_1.cs)]  \n  \n The following example creates a file, adds some text to it, and reads from the file.  \n  \n [!code-vb[finfo create#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.cre_0_2.vb)]\n [!code-cs[finfo create#1](~/add/codesnippet/csharp/m-system.io.fileinfo.cre_0_2.cs)]\n [!code-cpp[finfo create#1](~/add/codesnippet/cpp/m-system.io.fileinfo.cre_0_2.cpp)]"
  syntax:
    content: public System.IO.FileStream Create ();
    parameters: []
    return:
      type: System.IO.FileStream
      description: "En ny fil."
  overload: System.IO.FileInfo.Create*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileInfo.CreateText
  id: CreateText
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: CreateText()
  nameWithType: FileInfo.CreateText()
  fullName: System.IO.FileInfo.CreateText()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Oppretter en <xref:System.IO.StreamWriter>som skriver en ny tekstfil.</xref:System.IO.StreamWriter>"
  remarks: "Som standard tilgang full lese-og skrivetilgang til nye filer til alle brukere."
  example:
  - "The following example demonstrates the `CreateText` method.  \n  \n [!code-cpp[finfo createtext#1](~/add/codesnippet/cpp/m-system.io.fileinfo.cre_1_1.cpp)]\n [!code-vb[finfo createtext#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.cre_1_1.vb)]\n [!code-cs[finfo createtext#1](~/add/codesnippet/csharp/m-system.io.fileinfo.cre_1_1.cs)]"
  syntax:
    content: public System.IO.StreamWriter CreateText ();
    parameters: []
    return:
      type: System.IO.StreamWriter
      description: "A new <xref uid=&quot;langword_csharp_StreamWriter&quot; name=&quot;StreamWriter&quot; href=&quot;&quot;></xref>."
  overload: System.IO.FileInfo.CreateText*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Filnavnet er en mappe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Disken kan være skrivebeskyttet."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke den nødvendige tillatelsen."
  platform:
  - net462
- uid: System.IO.FileInfo.Decrypt
  id: Decrypt
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Decrypt()
  nameWithType: FileInfo.Decrypt()
  fullName: System.IO.FileInfo.Decrypt()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Dekrypterer en fil som ble kryptert av den gjeldende kontoen ved hjelp av den <xref:System.IO.FileInfo.Encrypt*>metoden.</xref:System.IO.FileInfo.Encrypt*>"
  remarks: "Metoden dekryptere gjør det mulig å dekryptere en fil som er kryptert ved hjelp av <xref:System.IO.FileInfo.Encrypt%2A>metode.</xref:System.IO.FileInfo.Encrypt%2A>  Metoden dekryptere kan dekryptere bare filer som ble kryptert med gjeldende brukerkonto.       Både den <xref:System.IO.FileInfo.Encrypt%2A>metoden og metoden dekryptere bruker kryptografitjenesteleverandøren (CSP) er installert på datamaskinen, og filen krypteringsnøklene av prosessen å kalle metoden.</xref:System.IO.FileInfo.Encrypt%2A>       Systemet må være formatert som NTFS og det gjeldende operativsystemet må være Microsoft Windows NT eller senere."
  example:
  - "The following code example uses the <xref:System.IO.FileInfo.Encrypt%2A> method and the Decrypt method to encrypt and then decrypt a file.  \n  \n [!code-cpp[IO.FileInfo.Encrypt-Decrypt#1](~/add/codesnippet/cpp/m-system.io.fileinfo.dec_1.cpp)]\n [!code-cs[IO.FileInfo.Encrypt-Decrypt#1](~/add/codesnippet/csharp/m-system.io.fileinfo.dec_1.cs)]\n [!code-vb[IO.FileInfo.Encrypt-Decrypt#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.dec_1.vb)]"
  syntax:
    content: public void Decrypt ();
    parameters: []
  overload: System.IO.FileInfo.Decrypt*
  exceptions:
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "En ugyldig stasjon ble angitt."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen beskrevet av gjeldende <xref href=&quot;System.IO.FileInfo&quot;> </xref> finner ikke objekt."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil under åpning av filen."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Filsystemet er ikke NTFS."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Det gjeldende operativsystemet er Microsoft Windows NT eller senere."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Filen beskrevet av gjeldende <xref href=&quot;System.IO.FileInfo&quot;> </xref> objektet er skrivebeskyttet.       - eller - operasjonen støttes ikke på gjeldende plattform.       - eller - oppkalleren har ikke den nødvendige tillatelsen."
  platform:
  - net462
- uid: System.IO.FileInfo.Delete
  id: Delete
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Delete()
  nameWithType: FileInfo.Delete()
  fullName: System.IO.FileInfo.Delete()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Sletter en fil."
  remarks: "Hvis filen ikke finnes, støtter denne metoden ingenting."
  example:
  - "The following example demonstrates the `Delete` method.  \n  \n [!code-cpp[finfo delete#1](~/add/codesnippet/cpp/m-system.io.fileinfo.del_1.cpp)]\n [!code-cs[finfo delete#1](~/add/codesnippet/csharp/m-system.io.fileinfo.del_1.cs)]\n [!code-vb[finfo delete#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.del_1.vb)]  \n  \n The following example creates, closes, and deletes a file.  \n  \n [!code-cpp[fileinfodelete#1](~/add/codesnippet/cpp/m-system.io.fileinfo.del_2.cpp)]\n [!code-vb[fileinfodelete#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.del_2.vb)]\n [!code-cs[fileinfodelete#1](~/add/codesnippet/csharp/m-system.io.fileinfo.del_2.cs)]"
  syntax:
    content: public override void Delete ();
    parameters: []
  overload: System.IO.FileInfo.Delete*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Målfilen er åpen eller minne tilordnet på en datamaskin som kjører Microsoft Windows NT.       - eller - det er en åpen referanse for filen, og operativsystemet Windows XP eller tidligere. Denne åpen referanse kan oppstå fra opplisting av mapper og filer. Hvis du vil ha mer informasjon, se [slik: liste mapper og filer som](~/add/includes/ajax-current-ext-md.md)."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke den nødvendige tillatelsen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Banen er en mappe."
  platform:
  - net462
- uid: System.IO.FileInfo.Directory
  id: Directory
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Directory
  nameWithType: FileInfo.Directory
  fullName: System.IO.FileInfo.Directory
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Henter en forekomst av den overordnede mappen."
  remarks: "For å få den overordnede mappen som en streng, kan du bruke den <xref:System.IO.FileInfo.DirectoryName%2A>egenskapen.</xref:System.IO.FileInfo.DirectoryName%2A>"
  example:
  - "The following example opens or creates a file, determines its full path, and determines and displays the full contents of the directory.  \n  \n [!code-cs[fileinfodirectory#1](~/add/codesnippet/csharp/p-system.io.fileinfo.dir_0_1.cs)]\n [!code-vb[fileinfodirectory#1](~/add/codesnippet/visualbasic/p-system.io.fileinfo.dir_0_1.vb)]\n [!code-cpp[fileinfodirectory#1](~/add/codesnippet/cpp/p-system.io.fileinfo.dir_0_1.cpp)]"
  syntax:
    content: public System.IO.DirectoryInfo Directory { get; }
    return:
      type: System.IO.DirectoryInfo
      description: "En <xref href=&quot;System.IO.DirectoryInfo&quot;> </xref> -objekt som representerer den overordnede mappen for denne filen."
  overload: System.IO.FileInfo.Directory*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angitte banen er ugyldig, for eksempel er på en lokal stasjon."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke den nødvendige tillatelsen."
  platform:
  - net462
- uid: System.IO.FileInfo.DirectoryName
  id: DirectoryName
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: DirectoryName
  nameWithType: FileInfo.DirectoryName
  fullName: System.IO.FileInfo.DirectoryName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Henter en streng som representerer mappens fullstendige bane."
  remarks: "Å hente den overordnede mappen som en <xref:System.IO.DirectoryInfo>objekt, bruker du den <xref:System.IO.FileInfo.Directory%2A>egenskapen.</xref:System.IO.FileInfo.Directory%2A> </xref:System.IO.DirectoryInfo>       Når først <xref:System.IO.FileInfo>kall <xref:System.IO.FileSystemInfo.Refresh%2A>og hurtigbufrer informasjon om filen.</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.FileInfo> Du må kalle på etterfølgende kall, <xref:System.IO.FileSystemInfo.Refresh%2A>å få den nyeste versjon av informasjonen.</xref:System.IO.FileSystemInfo.Refresh%2A>"
  example:
  - "The following example retrieves the full path of the specified file.  \n  \n [!code-cs[System.IO.FileInfo members#3](~/add/codesnippet/csharp/p-system.io.fileinfo.dir_1_1.cs)]\n [!code-cpp[System.IO.FileInfo members#3](~/add/codesnippet/cpp/p-system.io.fileinfo.dir_1_1.cpp)]\n [!code-vb[System.IO.FileInfo members#3](~/add/codesnippet/visualbasic/p-system.io.fileinfo.dir_1_1.vb)]"
  syntax:
    content: public string DirectoryName { get; }
    return:
      type: System.String
      description: "En streng som representerer mappens fullstendige bane."
  overload: System.IO.FileInfo.DirectoryName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>ble sendt for mappenavnet."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den fullstendige banen er 260 eller flere tegn."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke den nødvendige tillatelsen."
  platform:
  - net462
- uid: System.IO.FileInfo.Encrypt
  id: Encrypt
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Encrypt()
  nameWithType: FileInfo.Encrypt()
  fullName: System.IO.FileInfo.Encrypt()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Krypterer en fil slik at bare kontoen som brukes til å kryptere filen kan dekryptere den."
  remarks: "Krypter metoden gjør mulig å kryptere en fil, slik at bare kontoen som brukes til å kalle denne metoden kan dekryptere den.  Bruk av <xref:System.IO.FileInfo.Decrypt%2A>metode for å kryptere en fil som er kryptert med metoden Krypter.</xref:System.IO.FileInfo.Decrypt%2A>       Begge metoden Krypter og <xref:System.IO.FileInfo.Decrypt%2A>metode bruke kryptografitjenesteleverandøren (CSP) er installert på datamaskinen, og filen krypteringsnøklene av prosessen å kalle metoden.</xref:System.IO.FileInfo.Decrypt%2A>       Systemet må være formatert som NTFS og det gjeldende operativsystemet må være Microsoft Windows NT eller senere."
  example:
  - "The following code example uses the Encrypt method and the <xref:System.IO.FileInfo.Decrypt%2A> method to encrypt a file and then decrypt it.  \n  \n [!code-cpp[IO.FileInfo.Encrypt-Decrypt#1](~/add/codesnippet/cpp/m-system.io.fileinfo.enc_1.cpp)]\n [!code-cs[IO.FileInfo.Encrypt-Decrypt#1](~/add/codesnippet/csharp/m-system.io.fileinfo.enc_1.cs)]\n [!code-vb[IO.FileInfo.Encrypt-Decrypt#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.enc_1.vb)]"
  syntax:
    content: public void Encrypt ();
    parameters: []
  overload: System.IO.FileInfo.Encrypt*
  exceptions:
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "En ugyldig stasjon ble angitt."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen beskrevet av gjeldende <xref href=&quot;System.IO.FileInfo&quot;> </xref> finner ikke objekt."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil under åpning av filen."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Filsystemet er ikke NTFS."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Det gjeldende operativsystemet er Microsoft Windows NT eller senere."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Filen beskrevet av gjeldende <xref href=&quot;System.IO.FileInfo&quot;> </xref> objektet er skrivebeskyttet.       - eller - operasjonen støttes ikke på gjeldende plattform.       - eller - oppkalleren har ikke den nødvendige tillatelsen."
  platform:
  - net462
- uid: System.IO.FileInfo.Exists
  id: Exists
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Exists
  nameWithType: FileInfo.Exists
  fullName: System.IO.FileInfo.Exists
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Henter en verdi som angir om det finnes en fil."
  remarks: "Når først <xref:System.IO.FileInfo>kall <xref:System.IO.FileSystemInfo.Refresh%2A>og hurtigbufrer informasjon om filen.</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.FileInfo> Du må kalle på etterfølgende kall, <xref:System.IO.FileSystemInfo.Refresh%2A>å få den nyeste versjon av informasjonen.</xref:System.IO.FileSystemInfo.Refresh%2A>       Returnerer Exists `false` Hvis det oppstår en feil under forsøk på å finne ut om den angitte filen finnes. Dette kan skje i situasjoner som heve unntak for eksempel sende et filnavn med ugyldige tegn eller har for mange tegn, mislykkes eller manglende disk, eller hvis oppkalleren ikke har tillatelse til å lese filen."
  example:
  - "The following code example uses the Exists property ensure a file exists before opening it.  You can use this technique to throw a custom exception when the file is not found.  \n  \n [!code-cpp[IO.FileInfo.Exists#1](~/add/codesnippet/cpp/p-system.io.fileinfo.exi_1.cpp)]\n [!code-cs[IO.FileInfo.Exists#1](~/add/codesnippet/csharp/p-system.io.fileinfo.exi_1.cs)]\n [!code-vb[IO.FileInfo.Exists#1](~/add/codesnippet/visualbasic/p-system.io.fileinfo.exi_1.vb)]"
  syntax:
    content: public override bool Exists { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis filen finnes. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Hvis filen ikke finnes, eller hvis filen er en mappe."
  overload: System.IO.FileInfo.Exists*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileInfo.GetAccessControl
  id: GetAccessControl
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: GetAccessControl()
  nameWithType: FileInfo.GetAccessControl()
  fullName: System.IO.FileInfo.GetAccessControl()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Henter en <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objekt som innkapsler i listen (ACL) tilgangskontrolloppføringer for filen som er beskrevet i gjeldende <xref href=&quot;System.IO.FileInfo&quot;> </xref> objektet."
  remarks: "Bruk GetAccessControl-metoden til å hente de listen (ACL) tilgangskontrolloppføringene for den gjeldende filen.       En Tilgangskontrolliste beskriver enkeltpersoner og/eller grupper som har eller har ikke tilgangsrettigheter, med bestemte handlinger på den angitte filen. Hvis du vil ha mer informasjon, se [slik: Legg til eller fjern Access Control listeoppføringer](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example uses the GetAccessControl method and the <xref:System.IO.FileInfo.SetAccessControl%2A> method to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cpp[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/m-system.io.fileinfo.get_1.cpp)]\n [!code-vb[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.get_1.vb)]\n [!code-cs[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/m-system.io.fileinfo.get_1.cs)]"
  syntax:
    content: public System.Security.AccessControl.FileSecurity GetAccessControl ();
    parameters: []
    return:
      type: System.Security.AccessControl.FileSecurity
      description: "En <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objekt som innkapsler kontrollen tilgangsregler for den gjeldende filen."
  overload: System.IO.FileInfo.GetAccessControl*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil under åpning av filen."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Det gjeldende operativsystemet er ikke Microsoft Windows 2000 eller senere."
  - type: System.Security.AccessControl.PrivilegeNotHeldException
    commentId: T:System.Security.AccessControl.PrivilegeNotHeldException
    description: "Den gjeldende systemkontoen har ikke administratorrettigheter."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "Finner ikke filen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Denne operasjonen støttes ikke på gjeldende plattform.       - eller - oppkalleren har ikke den nødvendige tillatelsen."
  platform:
  - net462
- uid: System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)
  id: GetAccessControl(System.Security.AccessControl.AccessControlSections)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: GetAccessControl(AccessControlSections)
  nameWithType: FileInfo.GetAccessControl(AccessControlSections)
  fullName: System.IO.FileInfo.GetAccessControl(AccessControlSections)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Henter en <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objekt som innkapsler den angitte typen av listen (ACL) for tilgangskontrolloppføringer for filen som er beskrevet i gjeldende <xref href=&quot;System.IO.FileInfo&quot;> </xref> objektet."
  remarks: "Bruk GetAccessControl-metoden til å hente de listen (ACL) tilgangskontrolloppføringene for den gjeldende filen.       En Tilgangskontrolliste beskriver enkeltpersoner og/eller grupper som har eller har ikke tilgangsrettigheter, med bestemte handlinger på den angitte filen. Hvis du vil ha mer informasjon, se [slik: Legg til eller fjern Access Control listeoppføringer](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Security.AccessControl.FileSecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "Én av de <xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;> </xref> verdier som angir hvilken gruppe tilgang kontrollere oppføringene for å hente."
    return:
      type: System.Security.AccessControl.FileSecurity
      description: "En <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objekt som innkapsler kontrollen tilgangsregler for den gjeldende filen."
  overload: System.IO.FileInfo.GetAccessControl*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil under åpning av filen."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Det gjeldende operativsystemet er ikke Microsoft Windows 2000 eller senere."
  - type: System.Security.AccessControl.PrivilegeNotHeldException
    commentId: T:System.Security.AccessControl.PrivilegeNotHeldException
    description: "Den gjeldende systemkontoen har ikke administratorrettigheter."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "Finner ikke filen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Denne operasjonen støttes ikke på gjeldende plattform.       - eller - oppkalleren har ikke den nødvendige tillatelsen."
  platform:
  - net462
- uid: System.IO.FileInfo.IsReadOnly
  id: IsReadOnly
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: FileInfo.IsReadOnly
  fullName: System.IO.FileInfo.IsReadOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Henter eller angir en verdi som bestemmer om den gjeldende filen er skrivebeskyttet."
  remarks: "Bruke egenskapen IsReadOnly raskt finne ut eller endre om den gjeldende filen er skrivebeskyttet.       Når først <xref:System.IO.FileInfo>kall <xref:System.IO.FileSystemInfo.Refresh%2A>og hurtigbufrer informasjon om filen.</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.FileInfo> Du må kalle på etterfølgende kall, <xref:System.IO.FileSystemInfo.Refresh%2A>å få den nyeste versjon av informasjonen.</xref:System.IO.FileSystemInfo.Refresh%2A>"
  example:
  - "The following example uses the IsReadOnly property to mark a file as read only and then mark it as read-write.  \n  \n [!code-cs[IO.FileInfo.IsReadOnly#1](~/add/codesnippet/csharp/p-system.io.fileinfo.isr_1.cs)]\n [!code-vb[IO.FileInfo.IsReadOnly#1](~/add/codesnippet/visualbasic/p-system.io.fileinfo.isr_1.vb)]\n [!code-cpp[IO.FileInfo.IsReadOnly#1](~/add/codesnippet/cpp/p-system.io.fileinfo.isr_1.cpp)]"
  syntax:
    content: public bool IsReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den gjeldende filen er skrivebeskyttet; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.FileInfo.IsReadOnly*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen beskrevet av gjeldende <xref href=&quot;System.IO.FileInfo&quot;> </xref> finner ikke objekt."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil under åpning av filen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Denne operasjonen støttes ikke på gjeldende plattform.       - eller - oppkalleren har ikke den nødvendige tillatelsen."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Brukeren har ikke skrivetillatelse, men ble forsøkt å angi denne egenskapen <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.IO.FileInfo.Length
  id: Length
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Length
  nameWithType: FileInfo.Length
  fullName: System.IO.FileInfo.Length
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Henter størrelsen, i byte for den gjeldende filen."
  remarks: "Verdien for egenskapen lengden er hurtigbufrede hvis den gjeldende forekomsten av den <xref:System.IO.FileInfo>objektet ble returnert fra følgende <xref:System.IO.DirectoryInfo>metoder:- <xref:System.IO.DirectoryInfo.GetDirectories%2A>- <xref:System.IO.DirectoryInfo.GetFiles%2A>- <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>- <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>- <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>- <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>for å få den nyeste verdien Ring den <xref:System.IO.FileSystemInfo.Refresh%2A>metoden.</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.EnumerateFiles%2A> </xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> </xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.GetFiles%2A> </xref:System.IO.DirectoryInfo.GetDirectories%2A> </xref:System.IO.DirectoryInfo> </xref:System.IO.FileInfo>"
  example:
  - "The following example displays the size of the specified files.  \n  \n [!code-cpp[FileLength#1](~/add/codesnippet/cpp/p-system.io.fileinfo.len_1.cpp)]\n [!code-cs[FileLength#1](~/add/codesnippet/csharp/p-system.io.fileinfo.len_1.cs)]\n [!code-vb[FileLength#1](~/add/codesnippet/visualbasic/p-system.io.fileinfo.len_1.vb)]"
  syntax:
    content: public long Length { get; }
    return:
      type: System.Int64
      description: "Størrelsen på den gjeldende filen i byte."
  overload: System.IO.FileInfo.Length*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref:System.IO.FileSystemInfo.Refresh*>kan ikke oppdatere tilstanden til filen eller mappen.</xref:System.IO.FileSystemInfo.Refresh*>"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen finnes ikke.       - eller - <xref uid=&quot;langword_csharp_Length&quot; name=&quot;Length&quot; href=&quot;&quot;> </xref> egenskapen kalles for en mappe."
  platform:
  - net462
- uid: System.IO.FileInfo.MoveTo(System.String)
  id: MoveTo(System.String)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: MoveTo(String)
  nameWithType: FileInfo.MoveTo(String)
  fullName: System.IO.FileInfo.MoveTo(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Flytter en angitt fil til en ny plassering, som gir mulighet til å angi et nytt navn."
  remarks: "Denne metoden fungerer på tvers av diskvolumer. For eksempel filen c:\\MyFile.txt kan flyttes til d:\\public og et nytt navn NewFile.txt."
  example:
  - "The following example demonstrates moving a file to a different location and renaming the file.  \n  \n [!code-cs[IO.FileInfo.MoveTo#1](~/add/codesnippet/csharp/m-system.io.fileinfo.mov_1.cs)]\n [!code-vb[IO.FileInfo.MoveTo#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.mov_1.vb)]"
  syntax:
    content: public void MoveTo (string destFileName);
    parameters:
    - id: destFileName
      type: System.String
      description: "Banen til å flytte filen til, som kan angi et annet navn."
  overload: System.IO.FileInfo.MoveTo*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "En i/u-feil oppstår eksempel målfilen finnes allerede, eller målenheten er ikke klart."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destFileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destFileName</code>er tomt, inneholder bare mellomrom eller inneholder ugyldige tegn."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke den nødvendige tillatelsen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>destFileName</code>er skrivebeskyttet eller er en mappe."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Finner ikke filen."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angitte banen er ugyldig, for eksempel er på en lokal stasjon."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angitte banen, filnavnet eller begge være lengre enn den systemdefinerte maksimumslengden. For eksempel på Windows-baserte plattformer baner må være mindre enn 248 tegn, og filnavn må være mindre enn 260 tegn."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>destFileName</code>inneholder et kolon (:) midt i en streng."
  platform:
  - net462
- uid: System.IO.FileInfo.Name
  id: Name
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Name
  nameWithType: FileInfo.Name
  fullName: System.IO.FileInfo.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Henter navnet på filen."
  remarks: "Når først <xref:System.IO.FileInfo>kall <xref:System.IO.FileSystemInfo.Refresh%2A>og hurtigbufrer informasjon om filen.</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.FileInfo> Du må kalle på etterfølgende kall, <xref:System.IO.FileSystemInfo.Refresh%2A>å få den nyeste versjon av informasjonen.</xref:System.IO.FileSystemInfo.Refresh%2A>       Navnet på filen inkluderer filtypen."
  example:
  - "The following example uses the `Name` property to display the names of files in the current directory.  \n  \n [!code-cs[fileinfoname#1](~/add/codesnippet/csharp/p-system.io.fileinfo.name_1.cs)]\n [!code-cpp[fileinfoname#1](~/add/codesnippet/cpp/p-system.io.fileinfo.name_1.cpp)]\n [!code-vb[fileinfoname#1](~/add/codesnippet/visualbasic/p-system.io.fileinfo.name_1.vb)]"
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: "Navnet på filen."
  overload: System.IO.FileInfo.Name*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileInfo.Open(System.IO.FileMode)
  id: Open(System.IO.FileMode)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Open(FileMode)
  nameWithType: FileInfo.Open(FileMode)
  fullName: System.IO.FileInfo.Open(FileMode)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Åpner en fil i angitte modus."
  remarks: ''
  example:
  - "The following example opens a file, adds some information to the file, and reads the file.  \n  \n [!code-cs[finfo open1#1](~/add/codesnippet/csharp/m-system.io.fileinfo.ope_0_1.cs)]\n [!code-cpp[finfo open1#1](~/add/codesnippet/cpp/m-system.io.fileinfo.ope_0_1.cpp)]\n [!code-vb[finfo open1#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.ope_0_1.vb)]"
  syntax:
    content: public System.IO.FileStream Open (System.IO.FileMode mode);
    parameters:
    - id: mode
      type: System.IO.FileMode
      description: "En <xref href=&quot;System.IO.FileMode&quot;> </xref> konstant angir modus (for eksempel <xref uid=&quot;langword_csharp_Open&quot; name=&quot;Open&quot; href=&quot;&quot;> </xref> eller <xref uid=&quot;langword_csharp_Append&quot; name=&quot;Append&quot; href=&quot;&quot;> </xref>) vil åpne filen."
    return:
      type: System.IO.FileStream
      description: "En fil som er åpnet i den angitte modusen med lese-/ skrivetilgang og opphevet."
  overload: System.IO.FileInfo.Open*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Finner ikke filen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Filen er skrivebeskyttet eller er en katalog."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angitte banen er ugyldig, for eksempel er på en lokal stasjon."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Filen er allerede åpen."
  platform:
  - net462
- uid: System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Open(FileMode,FileAccess)
  nameWithType: FileInfo.Open(FileMode,FileAccess)
  fullName: System.IO.FileInfo.Open(FileMode,FileAccess)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Åpner en fil i den angitte modusen med lese-, skrive- eller lese-/ skrivetilgang."
  remarks: ''
  example:
  - "The following example opens a file as read-only and reads from the file.  \n  \n [!code-vb[finfo open2#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.ope_2_1.vb)]\n [!code-cpp[finfo open2#1](~/add/codesnippet/cpp/m-system.io.fileinfo.ope_2_1.cpp)]\n [!code-cs[finfo open2#1](~/add/codesnippet/csharp/m-system.io.fileinfo.ope_2_1.cs)]"
  syntax:
    content: public System.IO.FileStream Open (System.IO.FileMode mode, System.IO.FileAccess access);
    parameters:
    - id: mode
      type: System.IO.FileMode
      description: "En <xref href=&quot;System.IO.FileMode&quot;> </xref> konstant angir modus (for eksempel <xref uid=&quot;langword_csharp_Open&quot; name=&quot;Open&quot; href=&quot;&quot;> </xref> eller <xref uid=&quot;langword_csharp_Append&quot; name=&quot;Append&quot; href=&quot;&quot;> </xref>) vil åpne filen."
    - id: access
      type: System.IO.FileAccess
      description: "En <xref href=&quot;System.IO.FileAccess&quot;> </xref> konstant som angir om å åpne filen med <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Write&quot; name=&quot;Write&quot; href=&quot;&quot;> </xref>, eller <xref uid=&quot;langword_csharp_ReadWrite&quot; name=&quot;ReadWrite&quot; href=&quot;&quot;> </xref> filen tilgang."
    return:
      type: System.IO.FileStream
      description: "En <xref href=&quot;System.IO.FileStream&quot;> </xref> objektet åpnes i angitt modus og tilgang og opphevet."
  overload: System.IO.FileInfo.Open*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke den nødvendige tillatelsen."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Finner ikke filen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>er skrivebeskyttet eller er en mappe."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angitte banen er ugyldig, for eksempel er på en lokal stasjon."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Filen er allerede åpen."
  platform:
  - net462
- uid: System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  id: Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Open(FileMode,FileAccess,FileShare)
  nameWithType: FileInfo.Open(FileMode,FileAccess,FileShare)
  fullName: System.IO.FileInfo.Open(FileMode,FileAccess,FileShare)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Åpner en fil i den angitte modusen med lese, skrive, eller lese-/ skrivetilgang og det angitte deling alternativet."
  remarks: ''
  example:
  - "The following example demonstrates opening a file for reading and writing, but disallowing access to other users or processes.  \n  \n [!code-cpp[fileinfoopen#1](~/add/codesnippet/cpp/8bd38f9d-a8ac-4cea-8fda-_1.cpp)]\n [!code-cs[fileinfoopen#1](~/add/codesnippet/csharp/8bd38f9d-a8ac-4cea-8fda-_1.cs)]\n [!code-vb[fileinfoopen#1](~/add/codesnippet/visualbasic/8bd38f9d-a8ac-4cea-8fda-_1.vb)]"
  syntax:
    content: public System.IO.FileStream Open (System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);
    parameters:
    - id: mode
      type: System.IO.FileMode
      description: "En <xref href=&quot;System.IO.FileMode&quot;> </xref> konstant angir modus (for eksempel <xref uid=&quot;langword_csharp_Open&quot; name=&quot;Open&quot; href=&quot;&quot;> </xref> eller <xref uid=&quot;langword_csharp_Append&quot; name=&quot;Append&quot; href=&quot;&quot;> </xref>) vil åpne filen."
    - id: access
      type: System.IO.FileAccess
      description: "En <xref href=&quot;System.IO.FileAccess&quot;> </xref> konstant som angir om å åpne filen med <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Write&quot; name=&quot;Write&quot; href=&quot;&quot;> </xref>, eller <xref uid=&quot;langword_csharp_ReadWrite&quot; name=&quot;ReadWrite&quot; href=&quot;&quot;> </xref> filen tilgang."
    - id: share
      type: System.IO.FileShare
      description: "En <xref href=&quot;System.IO.FileShare&quot;> </xref> konstant som angir hvilken type tilgang til andre <xref uid=&quot;langword_csharp_FileStream&quot; name=&quot;FileStream&quot; href=&quot;&quot;> </xref> objekter har til denne filen."
    return:
      type: System.IO.FileStream
      description: "En <xref href=&quot;System.IO.FileStream&quot;> </xref> objekt åpnes med den angitte modusen, tilgang, og delingsalternativer."
  overload: System.IO.FileInfo.Open*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke den nødvendige tillatelsen."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Finner ikke filen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>er skrivebeskyttet eller er en mappe."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angitte banen er ugyldig, for eksempel er på en lokal stasjon."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Filen er allerede åpen."
  platform:
  - net462
- uid: System.IO.FileInfo.OpenRead
  id: OpenRead
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: OpenRead()
  nameWithType: FileInfo.OpenRead()
  fullName: System.IO.FileInfo.OpenRead()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Oppretter en skrivebeskyttet <xref href=&quot;System.IO.FileStream&quot;> </xref>."
  remarks: "Denne metoden returnerer en skrivebeskyttet <xref:System.IO.FileStream>objekt med <xref:System.IO.FileShare>modus satt til <xref:System.IO.FileShare>.</xref:System.IO.FileShare> </xref:System.IO.FileShare> </xref:System.IO.FileStream>"
  example:
  - "The following example opens a file as read-only and reads from it.  \n  \n [!code-vb[finfo openread#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.ope_4_1.vb)]\n [!code-cs[finfo openread#1](~/add/codesnippet/csharp/m-system.io.fileinfo.ope_4_1.cs)]\n [!code-cpp[finfo openread#1](~/add/codesnippet/cpp/m-system.io.fileinfo.ope_4_1.cpp)]"
  syntax:
    content: public System.IO.FileStream OpenRead ();
    parameters: []
    return:
      type: System.IO.FileStream
      description: "En ny skrivebeskyttet <xref href=&quot;System.IO.FileStream&quot;> </xref> objektet."
  overload: System.IO.FileInfo.OpenRead*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>er skrivebeskyttet eller er en mappe."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angitte banen er ugyldig, for eksempel er på en lokal stasjon."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Filen er allerede åpen."
  platform:
  - net462
- uid: System.IO.FileInfo.OpenText
  id: OpenText
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: OpenText()
  nameWithType: FileInfo.OpenText()
  fullName: System.IO.FileInfo.OpenText()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Oppretter en <xref:System.IO.StreamReader>med UTF8-koding som leser fra en eksisterende tekstfil.</xref:System.IO.StreamReader>"
  remarks: ''
  example:
  - "The following example reads text from a file.  \n  \n [!code-cpp[finfo opentext#1](~/add/codesnippet/cpp/m-system.io.fileinfo.ope_1_1.cpp)]\n [!code-cs[finfo opentext#1](~/add/codesnippet/csharp/m-system.io.fileinfo.ope_1_1.cs)]\n [!code-vb[finfo opentext#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.ope_1_1.vb)]"
  syntax:
    content: public System.IO.StreamReader OpenText ();
    parameters: []
    return:
      type: System.IO.StreamReader
      description: "En ny <xref uid=&quot;langword_csharp_StreamReader&quot; name=&quot;StreamReader&quot; href=&quot;&quot;> </xref> med UTF8-koding."
  overload: System.IO.FileInfo.OpenText*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke den nødvendige tillatelsen."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Finner ikke filen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>er skrivebeskyttet eller er en mappe."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angitte banen er ugyldig, for eksempel er på en lokal stasjon."
  platform:
  - net462
- uid: System.IO.FileInfo.OpenWrite
  id: OpenWrite
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: OpenWrite()
  nameWithType: FileInfo.OpenWrite()
  fullName: System.IO.FileInfo.OpenWrite()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Oppretter en lesebeskyttet <xref href=&quot;System.IO.FileStream&quot;> </xref>."
  remarks: "Metoden OpenWrite åpner en fil hvis én finnes allerede for filbanen, eller hvis det ikke finnes, oppretter du en ny fil. For en eksisterende fil den ikke legge til den nye teksten den eksisterende teksten. I stedet overskriver eksisterende tegn med de nye tegnene. Hvis du skrive over en lengre streng (som &quot;Dette er en test for metoden OpenWrite&quot;) med en kortere streng (for eksempel &quot;andre Kjør&quot;), filen inneholder en blanding av strengene (&quot;andre runtest for metoden OpenWrite&quot;)."
  example:
  - "The following example opens a file for writing and then reads from the file.  \n  \n [!code-cs[finfo openwrite#1](~/add/codesnippet/csharp/m-system.io.fileinfo.ope_3_1.cs)]\n [!code-vb[finfo openwrite#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.ope_3_1.vb)]\n [!code-cpp[finfo openwrite#1](~/add/codesnippet/cpp/m-system.io.fileinfo.ope_3_1.cpp)]"
  syntax:
    content: public System.IO.FileStream OpenWrite ();
    parameters: []
    return:
      type: System.IO.FileStream
      description: "En lesebeskyttet opphevet <xref href=&quot;System.IO.FileStream&quot;> </xref> objekt for en ny eller eksisterende fil."
  overload: System.IO.FileInfo.OpenWrite*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den angitte når du oppretter en forekomst av den <xref href=&quot;System.IO.FileInfo&quot;> </xref> objektet er skrivebeskyttet eller er en mappe."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angitte når du oppretter en forekomst av den <xref href=&quot;System.IO.FileInfo&quot;> </xref> -objektet er ugyldig, for eksempel er på en lokal stasjon."
  platform:
  - net462
- uid: System.IO.FileInfo.Replace(System.String,System.String)
  id: Replace(System.String,System.String)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Replace(String,String)
  nameWithType: FileInfo.Replace(String,String)
  fullName: System.IO.FileInfo.Replace(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Erstatter innholdet i en angitt fil med filen som er beskrevet i gjeldende <xref href=&quot;System.IO.FileInfo&quot;> </xref> objektet slette den opprinnelige filen, og opprette en sikkerhetskopi av filen erstattet."
  remarks: "Metoden erstatte erstatter innholdet i en angitt fil med innholdet i filen som er beskrevet i gjeldende <xref:System.IO.FileInfo>objektet.</xref:System.IO.FileInfo>  Det opprettes også en sikkerhetskopi av filen ble erstattet.  Til slutt, returneres en ny <xref:System.IO.FileInfo>-objektet som beskriver overskrives filen.</xref:System.IO.FileInfo>      > [!CAUTION] > Denne metoden lykkes i Windows 2000 miljøer hvis den `destFileName` er skrivebeskyttet og kan ikke utløse et unntak. Bruk <xref:System.IO.FileInfo.IsReadOnly%2A>til å kontrollere om målfilen er skrivebeskyttet før du prøver å erstatte det.</xref:System.IO.FileInfo.IsReadOnly%2A>       Sende `null` til den `destBackupFileName` parameteren hvis du ikke vil opprette en sikkerhetskopi av filen erstattes."
  example:
  - "The following example uses the <xref:System.IO.File.Replace%2A> method to replace a file with another file and create a backup of the replaced file.  \n  \n [!code-cs[IO.FileInfo.Replace#1](~/add/codesnippet/csharp/m-system.io.fileinfo.rep_0_1.cs)]\n [!code-vb[IO.FileInfo.Replace#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.rep_0_1.vb)]\n [!code-cpp[IO.FileInfo.Replace#1](~/add/codesnippet/cpp/m-system.io.fileinfo.rep_0_1.cpp)]"
  syntax:
    content: public System.IO.FileInfo Replace (string destinationFileName, string destinationBackupFileName);
    parameters:
    - id: destinationFileName
      type: System.String
      description: "Navnet på en fil for å erstatte med den gjeldende filen."
    - id: destinationBackupFileName
      type: System.String
      description: "Navnet på en fil med som du skal opprette en sikkerhetskopi av filen som er beskrevet av det `destFileName` parameteren."
    return:
      type: System.IO.FileInfo
      description: "En <xref href=&quot;System.IO.FileInfo&quot;> </xref> objekt som innkapsler informasjon om filen beskrevet av det <code> destFileName </code> parameteren."
  overload: System.IO.FileInfo.Replace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Banen som er beskrevet av det <code> destFileName </code> parameter var ugyldig.       - eller - banen beskrevet av det <code> destBackupFileName </code> parameter var ugyldig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destFileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen beskrevet av gjeldende <xref href=&quot;System.IO.FileInfo&quot;> </xref> finner ikke objekt.       - eller - fil som er beskrevet av det <code> destinationFileName </code> finner ikke parameteren."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Det gjeldende operativsystemet er Microsoft Windows NT eller senere."
  platform:
  - net462
- uid: System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)
  id: Replace(System.String,System.String,System.Boolean)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Replace(String,String,Boolean)
  nameWithType: FileInfo.Replace(String,String,Boolean)
  fullName: System.IO.FileInfo.Replace(String,String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Erstatter innholdet i en angitt fil med filen som er beskrevet i gjeldende <xref href=&quot;System.IO.FileInfo&quot;> </xref> objektet slette den opprinnelige filen, og opprette en sikkerhetskopi av filen erstattet.  Angir om skal ignoreres merge feil også."
  remarks: "Metoden erstatte erstatter innholdet i en angitt fil med innholdet i filen som er beskrevet i gjeldende <xref:System.IO.FileInfo>objektet.</xref:System.IO.FileInfo>  Det opprettes også en sikkerhetskopi av filen ble erstattet.  Til slutt, returneres en ny <xref:System.IO.FileInfo>-objektet som beskriver overskrives filen.</xref:System.IO.FileInfo>      > [!CAUTION] > Denne metoden lykkes i Windows 2000 miljøer hvis den `destFileName` er skrivebeskyttet og kan ikke utløse et unntak. Bruk <xref:System.IO.FileInfo.IsReadOnly%2A>til å kontrollere om målfilen er skrivebeskyttet før du prøver å erstatte det.</xref:System.IO.FileInfo.IsReadOnly%2A>       Sende `null` til den `destBackupFileName` parameteren hvis du ikke vil opprette en sikkerhetskopi av filen erstattes."
  example:
  - "The following example uses the <xref:System.IO.File.Replace%2A> method to replace a file with another file and create a backup of the replaced file.  \n  \n [!code-cs[IO.FileInfo.Replace#1](~/add/codesnippet/csharp/m-system.io.fileinfo.rep_1_1.cs)]\n [!code-vb[IO.FileInfo.Replace#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.rep_1_1.vb)]\n [!code-cpp[IO.FileInfo.Replace#1](~/add/codesnippet/cpp/m-system.io.fileinfo.rep_1_1.cpp)]"
  syntax:
    content: public System.IO.FileInfo Replace (string destinationFileName, string destinationBackupFileName, bool ignoreMetadataErrors);
    parameters:
    - id: destinationFileName
      type: System.String
      description: "Navnet på en fil for å erstatte med den gjeldende filen."
    - id: destinationBackupFileName
      type: System.String
      description: "Navnet på en fil med som du skal opprette en sikkerhetskopi av filen som er beskrevet av det `destFileName` parameteren."
    - id: ignoreMetadataErrors
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ignorerer merge feil (for eksempel attributter og tilgangskontrollister) fra erstattet filen til erstatningsdimensjonen-fil. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.IO.FileInfo
      description: "En <xref href=&quot;System.IO.FileInfo&quot;> </xref> objekt som innkapsler informasjon om filen beskrevet av det <code> destFileName </code> parameteren."
  overload: System.IO.FileInfo.Replace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Banen som er beskrevet av det <code> destFileName </code> parameter var ugyldig.       - eller - banen beskrevet av det <code> destBackupFileName </code> parameter var ugyldig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destFileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen beskrevet av gjeldende <xref href=&quot;System.IO.FileInfo&quot;> </xref> finner ikke objekt.       - eller - fil som er beskrevet av det <code> destinationFileName </code> finner ikke parameteren."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Det gjeldende operativsystemet er Microsoft Windows NT eller senere."
  platform:
  - net462
- uid: System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)
  id: SetAccessControl(System.Security.AccessControl.FileSecurity)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: SetAccessControl(FileSecurity)
  nameWithType: FileInfo.SetAccessControl(FileSecurity)
  fullName: System.IO.FileInfo.SetAccessControl(FileSecurity)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Gjelder listen (ACL) tilgangskontrolloppføringer som beskrevet i en <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objekt i filen som er beskrevet i gjeldende <xref href=&quot;System.IO.FileInfo&quot;> </xref> objektet."
  remarks: "Metoden SetAccessControl gjelder tilgangskontrolloppføringer som listen (ACL) for den gjeldende filen som representerer noninherited ACL-listen.       Bruk metoden SetAccessControl når du skal legge til eller fjerne ACL oppføringer fra en fil.      > [!CAUTION] > For tilgangskontrolliste (ACL) som er angitt for den `fileSecurity` parameteren erstatter eksisterende Tilgangskontrollisten for filen. Hvis du vil legge til tillatelser for en ny bruker, kan du bruke den <xref:System.IO.Directory.GetAccessControl%2A>metode for å hente eksisterende Tilgangskontrollisten, endre den og deretter bruke SetAccessControl til å bruke den tilbake til filen.</xref:System.IO.Directory.GetAccessControl%2A>       En Tilgangskontrolliste beskriver enkeltpersoner og/eller grupper som har eller har ikke tilgangsrettigheter, med bestemte handlinger på den angitte filen. Hvis du vil ha mer informasjon, se [slik: Legg til eller fjern Access Control listeoppføringer](~/add/includes/ajax-current-ext-md.md).       Metoden SetAccessControl vedvarer bare <xref:System.Security.AccessControl.FileSecurity>objekter som er endret etter objektoppretting.</xref:System.Security.AccessControl.FileSecurity>  Hvis en <xref:System.Security.AccessControl.FileSecurity>objektet har ikke blitt endret, vil ikke beholdes i en fil.</xref:System.Security.AccessControl.FileSecurity>  Det er derfor ikke mulig å hente en <xref:System.Security.AccessControl.FileSecurity>objekt fra en fil, og bruk det samme objektet til en annen fil.</xref:System.Security.AccessControl.FileSecurity>       Kopiere ACL-informasjon fra en fil til en annen: 1.  Bruk av <xref:System.IO.FileInfo.GetAccessControl%2A>metode for å hente den <xref:System.Security.AccessControl.FileSecurity>objektet fra kildefilen.</xref:System.Security.AccessControl.FileSecurity> </xref:System.IO.FileInfo.GetAccessControl%2A>      2.  Opprett en ny <xref:System.Security.AccessControl.FileSecurity>objekt for målfilen.</xref:System.Security.AccessControl.FileSecurity>      3.  Bruk av <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>eller <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A>metode for datakilden <xref:System.Security.AccessControl.FileSecurity>objekt for å hente informasjon om ACL.</xref:System.Security.AccessControl.FileSecurity> </xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> </xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>      4.  Bruk av <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>eller <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A>metode for å kopiere informasjonen hentes i trinn 3 til målet <xref:System.Security.AccessControl.FileSecurity>objektet.</xref:System.Security.AccessControl.FileSecurity> </xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> </xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>      5.  Angi mål <xref:System.Security.AccessControl.FileSecurity>objektet til målfilen med metoden SetAccessControl.</xref:System.Security.AccessControl.FileSecurity>"
  example:
  - "The following code example uses the <xref:System.IO.FileInfo.GetAccessControl%2A> method and the SetAccessControl method to add and then remove an ACL entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cpp[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/c24a4717-31ac-4834-901c-_1.cpp)]\n [!code-vb[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/c24a4717-31ac-4834-901c-_1.vb)]\n [!code-cs[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/c24a4717-31ac-4834-901c-_1.cs)]"
  syntax:
    content: public void SetAccessControl (System.Security.AccessControl.FileSecurity fileSecurity);
    parameters:
    - id: fileSecurity
      type: System.Security.AccessControl.FileSecurity
      description: "En <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> -objektet som beskriver en tilgangslisten (ACL) oppføring i kontrollen skal brukes på den gjeldende filen."
  overload: System.IO.FileInfo.SetAccessControl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>fileSecurity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "Kan ikke filen, eller det kan ikke endres."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Gjeldende prosess har ikke tilgang til å åpne filen."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Det gjeldende operativsystemet er ikke Microsoft Windows 2000 eller senere."
  platform:
  - net462
- uid: System.IO.FileInfo.ToString
  id: ToString
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: ToString()
  nameWithType: FileInfo.ToString()
  fullName: System.IO.FileInfo.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Returnerer banen som en streng."
  remarks: "Strengen som returneres av metoden ToString representerer banen som ble sendt til konstruktøren.  Når du oppretter en <xref:System.IO.FileInfo>objektet ved hjelp av konstruktører metoden ToString returnerer den fullstendige banen.</xref:System.IO.FileInfo>  Det finnes imidlertid tilfeller der strengen som returneres av metoden ToString ikke representerer den fullstendige banen.  Når du for eksempel opprette et <xref:System.IO.FileInfo>objekt som bruker <xref:System.IO.DirectoryInfo.GetFiles%2A>metoden, metoden ToString ikke representerer den fullstendige banen.</xref:System.IO.DirectoryInfo.GetFiles%2A> </xref:System.IO.FileInfo>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "En streng som representerer banen."
  overload: System.IO.FileInfo.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.FileSystemInfo
  isExternal: false
  name: System.IO.FileSystemInfo
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.DriveNotFoundException
  parent: System.IO
  isExternal: false
  name: DriveNotFoundException
  nameWithType: DriveNotFoundException
  fullName: System.IO.DriveNotFoundException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Security.AccessControl.PrivilegeNotHeldException
  parent: System.Security.AccessControl
  isExternal: false
  name: PrivilegeNotHeldException
  nameWithType: PrivilegeNotHeldException
  fullName: System.Security.AccessControl.PrivilegeNotHeldException
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.IO.FileInfo.#ctor(System.String)
  parent: System.IO.FileInfo
  isExternal: false
  name: FileInfo(String)
  nameWithType: FileInfo.FileInfo(String)
  fullName: System.IO.FileInfo.FileInfo(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.FileInfo.AppendText
  parent: System.IO.FileInfo
  isExternal: false
  name: AppendText()
  nameWithType: FileInfo.AppendText()
  fullName: System.IO.FileInfo.AppendText()
- uid: System.IO.StreamWriter
  parent: System.IO
  isExternal: true
  name: StreamWriter
  nameWithType: StreamWriter
  fullName: System.IO.StreamWriter
- uid: System.IO.FileInfo.CopyTo(System.String)
  parent: System.IO.FileInfo
  isExternal: false
  name: CopyTo(String)
  nameWithType: FileInfo.CopyTo(String)
  fullName: System.IO.FileInfo.CopyTo(String)
- uid: System.IO.FileInfo
  parent: System.IO
  isExternal: false
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
- uid: System.IO.FileInfo.CopyTo(System.String,System.Boolean)
  parent: System.IO.FileInfo
  isExternal: false
  name: CopyTo(String,Boolean)
  nameWithType: FileInfo.CopyTo(String,Boolean)
  fullName: System.IO.FileInfo.CopyTo(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.FileInfo.Create
  parent: System.IO.FileInfo
  isExternal: false
  name: Create()
  nameWithType: FileInfo.Create()
  fullName: System.IO.FileInfo.Create()
- uid: System.IO.FileStream
  parent: System.IO
  isExternal: false
  name: FileStream
  nameWithType: FileStream
  fullName: System.IO.FileStream
- uid: System.IO.FileInfo.CreateText
  parent: System.IO.FileInfo
  isExternal: false
  name: CreateText()
  nameWithType: FileInfo.CreateText()
  fullName: System.IO.FileInfo.CreateText()
- uid: System.IO.FileInfo.Decrypt
  parent: System.IO.FileInfo
  isExternal: false
  name: Decrypt()
  nameWithType: FileInfo.Decrypt()
  fullName: System.IO.FileInfo.Decrypt()
- uid: System.IO.FileInfo.Delete
  parent: System.IO.FileInfo
  isExternal: false
  name: Delete()
  nameWithType: FileInfo.Delete()
  fullName: System.IO.FileInfo.Delete()
- uid: System.IO.FileInfo.Directory
  parent: System.IO.FileInfo
  isExternal: false
  name: Directory
  nameWithType: FileInfo.Directory
  fullName: System.IO.FileInfo.Directory
- uid: System.IO.DirectoryInfo
  parent: System.IO
  isExternal: false
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: System.IO.FileInfo.DirectoryName
  parent: System.IO.FileInfo
  isExternal: false
  name: DirectoryName
  nameWithType: FileInfo.DirectoryName
  fullName: System.IO.FileInfo.DirectoryName
- uid: System.IO.FileInfo.Encrypt
  parent: System.IO.FileInfo
  isExternal: false
  name: Encrypt()
  nameWithType: FileInfo.Encrypt()
  fullName: System.IO.FileInfo.Encrypt()
- uid: System.IO.FileInfo.Exists
  parent: System.IO.FileInfo
  isExternal: false
  name: Exists
  nameWithType: FileInfo.Exists
  fullName: System.IO.FileInfo.Exists
- uid: System.IO.FileInfo.GetAccessControl
  parent: System.IO.FileInfo
  isExternal: false
  name: GetAccessControl()
  nameWithType: FileInfo.GetAccessControl()
  fullName: System.IO.FileInfo.GetAccessControl()
- uid: System.Security.AccessControl.FileSecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSecurity
  nameWithType: FileSecurity
  fullName: System.Security.AccessControl.FileSecurity
- uid: System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)
  parent: System.IO.FileInfo
  isExternal: false
  name: GetAccessControl(AccessControlSections)
  nameWithType: FileInfo.GetAccessControl(AccessControlSections)
  fullName: System.IO.FileInfo.GetAccessControl(AccessControlSections)
- uid: System.Security.AccessControl.AccessControlSections
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlSections
  nameWithType: AccessControlSections
  fullName: System.Security.AccessControl.AccessControlSections
- uid: System.IO.FileInfo.IsReadOnly
  parent: System.IO.FileInfo
  isExternal: false
  name: IsReadOnly
  nameWithType: FileInfo.IsReadOnly
  fullName: System.IO.FileInfo.IsReadOnly
- uid: System.IO.FileInfo.Length
  parent: System.IO.FileInfo
  isExternal: false
  name: Length
  nameWithType: FileInfo.Length
  fullName: System.IO.FileInfo.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.FileInfo.MoveTo(System.String)
  parent: System.IO.FileInfo
  isExternal: false
  name: MoveTo(String)
  nameWithType: FileInfo.MoveTo(String)
  fullName: System.IO.FileInfo.MoveTo(String)
- uid: System.IO.FileInfo.Name
  parent: System.IO.FileInfo
  isExternal: false
  name: Name
  nameWithType: FileInfo.Name
  fullName: System.IO.FileInfo.Name
- uid: System.IO.FileInfo.Open(System.IO.FileMode)
  parent: System.IO.FileInfo
  isExternal: false
  name: Open(FileMode)
  nameWithType: FileInfo.Open(FileMode)
  fullName: System.IO.FileInfo.Open(FileMode)
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.FileInfo
  isExternal: false
  name: Open(FileMode,FileAccess)
  nameWithType: FileInfo.Open(FileMode,FileAccess)
  fullName: System.IO.FileInfo.Open(FileMode,FileAccess)
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.FileInfo
  isExternal: false
  name: Open(FileMode,FileAccess,FileShare)
  nameWithType: FileInfo.Open(FileMode,FileAccess,FileShare)
  fullName: System.IO.FileInfo.Open(FileMode,FileAccess,FileShare)
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
- uid: System.IO.FileInfo.OpenRead
  parent: System.IO.FileInfo
  isExternal: false
  name: OpenRead()
  nameWithType: FileInfo.OpenRead()
  fullName: System.IO.FileInfo.OpenRead()
- uid: System.IO.FileInfo.OpenText
  parent: System.IO.FileInfo
  isExternal: false
  name: OpenText()
  nameWithType: FileInfo.OpenText()
  fullName: System.IO.FileInfo.OpenText()
- uid: System.IO.StreamReader
  parent: System.IO
  isExternal: true
  name: StreamReader
  nameWithType: StreamReader
  fullName: System.IO.StreamReader
- uid: System.IO.FileInfo.OpenWrite
  parent: System.IO.FileInfo
  isExternal: false
  name: OpenWrite()
  nameWithType: FileInfo.OpenWrite()
  fullName: System.IO.FileInfo.OpenWrite()
- uid: System.IO.FileInfo.Replace(System.String,System.String)
  parent: System.IO.FileInfo
  isExternal: false
  name: Replace(String,String)
  nameWithType: FileInfo.Replace(String,String)
  fullName: System.IO.FileInfo.Replace(String,String)
- uid: System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)
  parent: System.IO.FileInfo
  isExternal: false
  name: Replace(String,String,Boolean)
  nameWithType: FileInfo.Replace(String,String,Boolean)
  fullName: System.IO.FileInfo.Replace(String,String,Boolean)
- uid: System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)
  parent: System.IO.FileInfo
  isExternal: false
  name: SetAccessControl(FileSecurity)
  nameWithType: FileInfo.SetAccessControl(FileSecurity)
  fullName: System.IO.FileInfo.SetAccessControl(FileSecurity)
- uid: System.IO.FileInfo.ToString
  parent: System.IO.FileInfo
  isExternal: false
  name: ToString()
  nameWithType: FileInfo.ToString()
  fullName: System.IO.FileInfo.ToString()
- uid: System.IO.FileInfo.#ctor*
  parent: System.IO.FileInfo
  isExternal: false
  name: FileInfo
  nameWithType: FileInfo.FileInfo
- uid: System.IO.FileInfo.AppendText*
  parent: System.IO.FileInfo
  isExternal: false
  name: AppendText
  nameWithType: FileInfo.AppendText
- uid: System.IO.FileInfo.CopyTo*
  parent: System.IO.FileInfo
  isExternal: false
  name: CopyTo
  nameWithType: FileInfo.CopyTo
- uid: System.IO.FileInfo.Create*
  parent: System.IO.FileInfo
  isExternal: false
  name: Create
  nameWithType: FileInfo.Create
- uid: System.IO.FileInfo.CreateText*
  parent: System.IO.FileInfo
  isExternal: false
  name: CreateText
  nameWithType: FileInfo.CreateText
- uid: System.IO.FileInfo.Decrypt*
  parent: System.IO.FileInfo
  isExternal: false
  name: Decrypt
  nameWithType: FileInfo.Decrypt
- uid: System.IO.FileInfo.Delete*
  parent: System.IO.FileInfo
  isExternal: false
  name: Delete
  nameWithType: FileInfo.Delete
- uid: System.IO.FileInfo.Directory*
  parent: System.IO.FileInfo
  isExternal: false
  name: Directory
  nameWithType: FileInfo.Directory
- uid: System.IO.FileInfo.DirectoryName*
  parent: System.IO.FileInfo
  isExternal: false
  name: DirectoryName
  nameWithType: FileInfo.DirectoryName
- uid: System.IO.FileInfo.Encrypt*
  parent: System.IO.FileInfo
  isExternal: false
  name: Encrypt
  nameWithType: FileInfo.Encrypt
- uid: System.IO.FileInfo.Exists*
  parent: System.IO.FileInfo
  isExternal: false
  name: Exists
  nameWithType: FileInfo.Exists
- uid: System.IO.FileInfo.GetAccessControl*
  parent: System.IO.FileInfo
  isExternal: false
  name: GetAccessControl
  nameWithType: FileInfo.GetAccessControl
- uid: System.IO.FileInfo.IsReadOnly*
  parent: System.IO.FileInfo
  isExternal: false
  name: IsReadOnly
  nameWithType: FileInfo.IsReadOnly
- uid: System.IO.FileInfo.Length*
  parent: System.IO.FileInfo
  isExternal: false
  name: Length
  nameWithType: FileInfo.Length
- uid: System.IO.FileInfo.MoveTo*
  parent: System.IO.FileInfo
  isExternal: false
  name: MoveTo
  nameWithType: FileInfo.MoveTo
- uid: System.IO.FileInfo.Name*
  parent: System.IO.FileInfo
  isExternal: false
  name: Name
  nameWithType: FileInfo.Name
- uid: System.IO.FileInfo.Open*
  parent: System.IO.FileInfo
  isExternal: false
  name: Open
  nameWithType: FileInfo.Open
- uid: System.IO.FileInfo.OpenRead*
  parent: System.IO.FileInfo
  isExternal: false
  name: OpenRead
  nameWithType: FileInfo.OpenRead
- uid: System.IO.FileInfo.OpenText*
  parent: System.IO.FileInfo
  isExternal: false
  name: OpenText
  nameWithType: FileInfo.OpenText
- uid: System.IO.FileInfo.OpenWrite*
  parent: System.IO.FileInfo
  isExternal: false
  name: OpenWrite
  nameWithType: FileInfo.OpenWrite
- uid: System.IO.FileInfo.Replace*
  parent: System.IO.FileInfo
  isExternal: false
  name: Replace
  nameWithType: FileInfo.Replace
- uid: System.IO.FileInfo.SetAccessControl*
  parent: System.IO.FileInfo
  isExternal: false
  name: SetAccessControl
  nameWithType: FileInfo.SetAccessControl
- uid: System.IO.FileInfo.ToString*
  parent: System.IO.FileInfo
  isExternal: false
  name: ToString
  nameWithType: FileInfo.ToString
