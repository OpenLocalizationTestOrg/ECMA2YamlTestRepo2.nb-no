### YamlMime:ManagedReference
items:
- uid: System.Reflection.IReflect
  id: IReflect
  children:
  - System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)
  - System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)
  - System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)
  - System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)
  - System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)
  - System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)
  - System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)
  - System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)
  - System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - System.Reflection.IReflect.UnderlyingSystemType
  langs:
  - csharp
  name: IReflect
  nameWithType: IReflect
  fullName: System.Reflection.IReflect
  type: Interface
  summary: "Fungerer sammen med den [IDispatch-grensesnittet](http://msdn.microsoft.com/en-us/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)."
  remarks: "Grensesnittet IReflect brukes til å fungere sammen med den [IDispatch-grensesnittet](http://msdn.microsoft.com/en-us/ebbff4bc-36b2-4861-9efa-ffa45e013eb5). IReflect definerer et delsett av den <xref:System.Type>gjenspeiling-metoder.</xref:System.Type> En type for å tilpasse virkemåten når objektet er åpnet fra COM som implementerer dette grensesnittet aktiverer en `IDispatch` objektet. Den <xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler>klassen kan brukes til å formidle et objekt som implementerer IReflect eller <xref:System.Runtime.InteropServices.Expando.IExpando>som en COM `IDispatch` objekt, og omvendt.</xref:System.Runtime.InteropServices.Expando.IExpando> </xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("AFBF15E5-C37C-11d2-B88E-00A0C9B471B8")]

      public interface IReflect
  implements: []
  platform:
  - net462
- uid: System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)
  id: GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.IReflect
  langs:
  - csharp
  name: GetField(String,BindingFlags)
  nameWithType: IReflect.GetField(String,BindingFlags)
  fullName: System.Reflection.IReflect.GetField(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Returnerer den <xref:System.Reflection.FieldInfo>objektet som tilsvarer det angitte feltet og bindingen flagg.</xref:System.Reflection.FieldInfo>"
  syntax:
    content: public System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på feltet for å finne."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Bindingen-attributter som brukes til å kontrollere søket."
    return:
      type: System.Reflection.FieldInfo
      description: "En <xref:System.Reflection.FieldInfo>objektet som inneholder feltinformasjon for navngitte objektet som oppfyller Søk begrensninger som er angitt i <code> bindingAttr </code>.</xref:System.Reflection.FieldInfo>"
  overload: System.Reflection.IReflect.GetField*
  exceptions:
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: "Objektet som implementerer flere felt med samme navn."
  platform:
  - net462
- uid: System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)
  id: GetFields(System.Reflection.BindingFlags)
  parent: System.Reflection.IReflect
  langs:
  - csharp
  name: GetFields(BindingFlags)
  nameWithType: IReflect.GetFields(BindingFlags)
  fullName: System.Reflection.IReflect.GetFields(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Returnerer en matrise av <xref:System.Reflection.FieldInfo>objekter som samsvarer med alle felt i gjeldende klassen.</xref:System.Reflection.FieldInfo>"
  remarks: "Resultatet er basert på et navn. Hvert felt må ha et unikt navn. Den <xref:System.Reflection.BindingFlags?displayProperty=fullName>flagg angir at ikke-offentlig metoder er inkludert i søket.</xref:System.Reflection.BindingFlags?displayProperty=fullName> Den <xref:System.Reflection.BindingFlags?displayProperty=fullName>flagg angir at offentlige metodene er inkludert i søket.</xref:System.Reflection.BindingFlags?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Bindingen-attributter som brukes til å kontrollere søket."
    return:
      type: System.Reflection.FieldInfo[]
      description: "En matrise av <xref:System.Reflection.FieldInfo>objekter som inneholder alle feltinformasjon for objektet gjenspeilingen som oppfyller Søk begrensninger som er angitt i <code> bindingAttr </code>.</xref:System.Reflection.FieldInfo>"
  overload: System.Reflection.IReflect.GetFields*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)
  id: GetMember(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.IReflect
  langs:
  - csharp
  name: GetMember(String,BindingFlags)
  nameWithType: IReflect.GetMember(String,BindingFlags)
  fullName: System.Reflection.IReflect.GetMember(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Henter en matrise av <xref:System.Reflection.MemberInfo>objekter som svarer til alle offentlige medlemmer eller til alle medlemmer som samsvarer med angitt navn.</xref:System.Reflection.MemberInfo>"
  remarks: "Metoden GetMember henter en matrise av <xref:System.Reflection.MemberInfo>objekter ved hjelp av navn og bindingen attributt som svarer til alle offentlige medlemmer eller til alle medlemmer som samsvarer med angitt navn.</xref:System.Reflection.MemberInfo> Tilfellet for det angitte navnet er observerte eller ignorert, som angitt av <xref:System.Reflection.BindingFlags?displayProperty=fullName>.</xref:System.Reflection.BindingFlags?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på medlemmet til å finne."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Bindingen-attributter som brukes til å kontrollere søket."
    return:
      type: System.Reflection.MemberInfo[]
      description: "En matrise av <xref:System.Reflection.MemberInfo>objekter som samsvarer med den <code> name </code> parameteren.</xref:System.Reflection.MemberInfo>"
  overload: System.Reflection.IReflect.GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)
  id: GetMembers(System.Reflection.BindingFlags)
  parent: System.Reflection.IReflect
  langs:
  - csharp
  name: GetMembers(BindingFlags)
  nameWithType: IReflect.GetMembers(BindingFlags)
  fullName: System.Reflection.IReflect.GetMembers(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Henter en matrise av <xref:System.Reflection.MemberInfo>objekter som svarer til alle offentlige medlemmer eller til alle medlemmer i den gjeldende klasse.</xref:System.Reflection.MemberInfo>"
  remarks: "Denne metoden henter en matrise av <xref:System.Reflection.MemberInfo>objekter ved hjelp av attributtet binding som svarer til alle offentlige medlemmer eller til alle medlemmer i den gjeldende klasse.</xref:System.Reflection.MemberInfo> Returnerer en matrise med alle medlemmer som er definert for dette objektet."
  syntax:
    content: public System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Bindingen-attributter som brukes til å kontrollere søket."
    return:
      type: System.Reflection.MemberInfo[]
      description: "En matrise av <xref:System.Reflection.MemberInfo>objekter som inneholder alle medlemsinformasjonen for dette objektet gjenspeilingen.</xref:System.Reflection.MemberInfo>"
  overload: System.Reflection.IReflect.GetMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)
  id: GetMethod(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.IReflect
  langs:
  - csharp
  name: GetMethod(String,BindingFlags)
  nameWithType: IReflect.GetMethod(String,BindingFlags)
  fullName: System.Reflection.IReflect.GetMethod(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Henter en <xref:System.Reflection.MethodInfo>objekt som samsvarer med en angitt metode under angitt Søk begrensninger.</xref:System.Reflection.MethodInfo>"
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på medlemmet til å finne."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Bindingen-attributter som brukes til å kontrollere søket."
    return:
      type: System.Reflection.MethodInfo
      description: "En <xref:System.Reflection.MethodInfo>objektet som inneholder informasjon om metoden med en lik på metoden og søkeliste begrensninger som er angitt i <code> bindingAttr </code>.</xref:System.Reflection.MethodInfo>"
  overload: System.Reflection.IReflect.GetMethod*
  exceptions:
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: "Objektet som implementerer flere metoder med samme navn."
  platform:
  - net462
- uid: System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.IReflect
  langs:
  - csharp
  name: GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Reflection.IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Henter en <xref:System.Reflection.MethodInfo>objektet samsvarer med en angitt metode, ved hjelp av en <xref:System.Type>matrisen til å velge fra mellom overbelastede metoder.</xref:System.Type> </xref:System.Reflection.MethodInfo>"
  remarks: "Den returnerte verdien er et samsvar basert på metodenavnet <xref:System.Reflection.BindingFlags>enum medlem, hvilke typekonvertering som er angitt av den `binder` parameter, overlasten, og <xref:System.Reflection.ParameterInfo>som beskriver signaturen for metoden.</xref:System.Reflection.ParameterInfo> </xref:System.Reflection.BindingFlags>"
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på medlemmet til å finne."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Bindingen-attributter som brukes til å kontrollere søket."
    - id: binder
      type: System.Reflection.Binder
      description: "Et objekt som implementerer <xref href=&quot;System.Reflection.Binder&quot;> </xref>, som inneholder egenskaper relatert til denne metoden."
    - id: types
      type: System.Type[]
      description: "En matrise som brukes til å velge mellom overbelastede metoder."
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "En matrise med parameteren-modifikatorer brukes til å gjøre en binding arbeide med parameteren-signaturer typene er endret."
    return:
      type: System.Reflection.MethodInfo
      description: "Den forespurte metoden som samsvarer med de angitte parameterne."
  overload: System.Reflection.IReflect.GetMethod*
  exceptions:
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: "Objektet som implementerer flere metoder med samme navn."
  platform:
  - net462
- uid: System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)
  id: GetMethods(System.Reflection.BindingFlags)
  parent: System.Reflection.IReflect
  langs:
  - csharp
  name: GetMethods(BindingFlags)
  nameWithType: IReflect.GetMethods(BindingFlags)
  fullName: System.Reflection.IReflect.GetMethods(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Henter en matrise av <xref:System.Reflection.MethodInfo>objekter med alle offentlige metoder eller alle metoder for gjeldende klassen.</xref:System.Reflection.MethodInfo>"
  remarks: "Attributtet ikke er felles for `bindingAttr` angis bare hvis offentlige metodene returneres."
  syntax:
    content: public System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Bindingen-attributter som brukes til å kontrollere søket."
    return:
      type: System.Reflection.MethodInfo[]
      description: "En matrise av <xref:System.Reflection.MethodInfo>objekter som inneholder alle metodene som er definert for dette objektet gjenspeilingen, som oppfyller Søk begrensninger som er angitt i <code> bindingAttr </code>.</xref:System.Reflection.MethodInfo>"
  overload: System.Reflection.IReflect.GetMethods*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)
  id: GetProperties(System.Reflection.BindingFlags)
  parent: System.Reflection.IReflect
  langs:
  - csharp
  name: GetProperties(BindingFlags)
  nameWithType: IReflect.GetProperties(BindingFlags)
  fullName: System.Reflection.IReflect.GetProperties(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Henter en matrise av <xref:System.Reflection.PropertyInfo>objekter som svarer til alle offentlige egenskaper eller alle egenskapene for den gjeldende klasse.</xref:System.Reflection.PropertyInfo>"
  syntax:
    content: public System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Bindingen attributtet som brukes til å kontrollere søket."
    return:
      type: System.Reflection.PropertyInfo[]
      description: "En matrise av <xref:System.Reflection.PropertyInfo>objekter for alle egenskaper som er definert i objektet gjenspeilingen.</xref:System.Reflection.PropertyInfo>"
  overload: System.Reflection.IReflect.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)
  id: GetProperty(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.IReflect
  langs:
  - csharp
  name: GetProperty(String,BindingFlags)
  nameWithType: IReflect.GetProperty(String,BindingFlags)
  fullName: System.Reflection.IReflect.GetProperty(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Henter en <xref:System.Reflection.PropertyInfo>objekt som svarer til en angitt egenskap under angitt Søk begrensninger.</xref:System.Reflection.PropertyInfo>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på egenskapen til å finne."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Bindingen-attributter som brukes til å kontrollere søket."
    return:
      type: System.Reflection.PropertyInfo
      description: "En <xref:System.Reflection.PropertyInfo>objekt for egenskapen finner som oppfyller Søk begrensninger som er angitt i <code> bindingAttr </code>, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis egenskapen ikke ble funnet.</xref:System.Reflection.PropertyInfo>"
  overload: System.Reflection.IReflect.GetProperty*
  exceptions:
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: "Objektet som implementerer flere felt med samme navn."
  platform:
  - net462
- uid: System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  id: GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.IReflect
  langs:
  - csharp
  name: GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: System.Reflection.IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Henter en <xref:System.Reflection.PropertyInfo>objekt som samsvarer med en angitt egenskap med angitt Søk begrensninger.</xref:System.Reflection.PropertyInfo>"
  remarks: "Denne metoden henter en <xref:System.Reflection.PropertyInfo>objekt som svarer til en angitt egenskap under angitt Søk begrensninger.</xref:System.Reflection.PropertyInfo> En type matrise brukes til å velge mellom overbelastede metoder."
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på medlemmet til å finne."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Bindingen attributtet som brukes til å kontrollere søket."
    - id: binder
      type: System.Reflection.Binder
      description: "Et objekt som implementerer <xref href=&quot;System.Reflection.Binder&quot;> </xref>, som inneholder egenskaper relatert til denne metoden."
    - id: returnType
      type: System.Type
      description: "Typen for egenskapen."
    - id: types
      type: System.Type[]
      description: "En matrise som brukes til å velge mellom overbelastede metoder med samme navn."
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "En matrise som brukes til å velge parameteren modifikatorer."
    return:
      type: System.Reflection.PropertyInfo
      description: "En <xref:System.Reflection.PropertyInfo>objekt for finner egenskapen, hvis en egenskap med det angitte navnet er plassert i objektet gjenspeilingen, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis egenskapen ikke ble funnet.</xref:System.Reflection.PropertyInfo>"
  overload: System.Reflection.IReflect.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.Reflection.IReflect
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: System.Reflection.IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Aktiverer et angitt medlem."
  remarks: "Metoden som skal aktiveres må være tilgjengelige og få mest spesifikke treff med under begrensninger for de angitte dokumentordner og aktivering attributtene i listen angitte argumentet.       En metode aktiveres hvis antallet parametere i denne metodedeklarasjonen er lik antall argumenter i listen angitte argumentet, og hver Argumenttypen kan konverteres av ha typen for parameteren.      > [!NOTE] > Matrisen for parameteren modifikatorer sendt til InvokeMember-metoden må inneholde en enkelt parameter modifikator. Bare den første parameteren modifikatoren vurderes ved å fastslå hvilke argumentet må sendes med referanse når eksponert til COM.       Dokumentordneren finner alle samsvarende metoder, i henhold til binde forespurte (<xref:System.Reflection.BindingFlags?displayProperty=fullName>, <xref:System.Reflection.IReflect.GetProperties%2A>og så videre).</xref:System.Reflection.IReflect.GetProperties%2A> </xref:System.Reflection.BindingFlags?displayProperty=fullName> Sett med metoder er filtrert etter navnet, antall argumenter og et sett med søk modifikatorer definert i dokumentordneren. Når metoden er merket, den startes og tilgjengelighet kontrolleres på dette tidspunktet. Søket bestemme hvilket sett med metoder søkes basert på attributtet tilgjengelighet som er forbundet med metoden. <xref:System.Reflection.Binder.BindToMethod%2A>Velg metoden som skal aktiveres.</xref:System.Reflection.Binder.BindToMethod%2A> Standard dokumentordneren velger det mest spesifikke samsvaret.       Tilgangsbegrensninger ignoreres for fullstendig klarert kode. Private konstruktører, metoder, felt og egenskaper kan som er tilgjengelig og aktiveres via gjenspeiling når koden er fullstendig klarert."
  example:
  - "The following example obtains the value of the <xref:System.DateTime.Now%2A> property.  \n  \n [!code-cs[Classic IReflect.InvokeMember Example#1](~/add/codesnippet/csharp/46b5c0ee-07c6-4491-8e06-_1.cs)]\n [!code-vb[Classic IReflect.InvokeMember Example#1](~/add/codesnippet/visualbasic/46b5c0ee-07c6-4491-8e06-_1.vb)]\n [!code-cpp[Classic IReflect.InvokeMember Example#1](~/add/codesnippet/cpp/46b5c0ee-07c6-4491-8e06-_1.cpp)]"
  syntax:
    content: public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på medlemmet til å finne."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "Én av de <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> aktivering attributter. Den `invokeAttr` parameteren kan være en konstruktøren, metoden, egenskapen eller feltet. Et passende aktivering-attributt må angis. Aktivere Standardmedlemmet i en klasse ved å sende en tom streng (&quot;&quot;) med navnet på medlemmet."
    - id: binder
      type: System.Reflection.Binder
      description: "Én av de <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> bit flagg. Implementerer <xref href=&quot;System.Reflection.Binder&quot;> </xref>, som inneholder egenskaper relatert til denne metoden."
    - id: target
      type: System.Object
      description: "Objektet som du vil aktivere det angitte medlemmet. Denne parameteren ignoreres for statiske medlemmene."
    - id: args
      type: System.Object[]
      description: "En matrise av objekter som inneholder tall, rekkefølge og Parametertypen for medlemmet som skal aktiveres. Dette er en tom matrise Hvis det er ingen parametere."
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: 'An array of <xref href="System.Reflection.ParameterModifier"></xref> objects. This array has the same length as the `args` parameter, representing the invoked member''s argument attributes in the metadata. A parameter can have the following attributes: <xref uid="langword_csharp_pdIn" name="pdIn" href=""></xref>, <xref uid="langword_csharp_pdOut" name="pdOut" href=""></xref>, <xref uid="langword_csharp_pdRetval" name="pdRetval" href=""></xref>, <xref uid="langword_csharp_pdOptional" name="pdOptional" href=""></xref>, and <xref uid="langword_csharp_pdHasDefault" name="pdHasDefault" href=""></xref>. These represent [In], [Out], [retval], [optional], and a default parameter, respectively. These attributes are used by various interoperability services.'
    - id: culture
      type: System.Globalization.CultureInfo
      description: "En forekomst av <xref:System.Globalization.CultureInfo>brukes til å styre rangeringen av typene.</xref:System.Globalization.CultureInfo> For eksempel `culture` konverterer en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> som representerer 1000 til en <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> verdi, fordi 1000 er på en annen måte av ulike kulturer. Hvis denne parameteren er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, <xref:System.Globalization.CultureInfo>for gjeldende tråd brukes.</xref:System.Globalization.CultureInfo>"
    - id: namedParameters
      type: System.String[]
      description: "En <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> matrise med parametere."
    return:
      type: System.Object
      description: "Det angitte medlemmet."
  overload: System.Reflection.IReflect.InvokeMember*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Mer enn ett argument er angitt for et felt <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>."
  - type: System.MissingFieldException
    commentId: T:System.MissingFieldException
    description: "Finner ikke feltet eller egenskapen."
  - type: System.MissingMethodException
    commentId: T:System.MissingMethodException
    description: "Finner ikke metoden."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Medlem private aktiveres uten nødvendige <xref href=&quot;System.Security.Permissions.ReflectionPermission&quot;> </xref>."
  platform:
  - net462
- uid: System.Reflection.IReflect.UnderlyingSystemType
  id: UnderlyingSystemType
  parent: System.Reflection.IReflect
  langs:
  - csharp
  name: UnderlyingSystemType
  nameWithType: IReflect.UnderlyingSystemType
  fullName: System.Reflection.IReflect.UnderlyingSystemType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Henter underliggende typen som representerer den <xref href=&quot;System.Reflection.IReflect&quot;> </xref> objektet."
  syntax:
    content: public Type UnderlyingSystemType { get; }
    return:
      type: System.Type
      description: "Den underliggende typen som representerer den <xref href=&quot;System.Reflection.IReflect&quot;> </xref> objektet."
  overload: System.Reflection.IReflect.UnderlyingSystemType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Reflection.AmbiguousMatchException
  isExternal: true
  name: System.Reflection.AmbiguousMatchException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.MissingFieldException
  isExternal: true
  name: System.MissingFieldException
- uid: System.MissingMethodException
  isExternal: true
  name: System.MissingMethodException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.IReflect
  isExternal: false
  name: GetField(String,BindingFlags)
  nameWithType: IReflect.GetField(String,BindingFlags)
  fullName: System.Reflection.IReflect.GetField(String,BindingFlags)
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)
  parent: System.Reflection.IReflect
  isExternal: false
  name: GetFields(BindingFlags)
  nameWithType: IReflect.GetFields(BindingFlags)
  fullName: System.Reflection.IReflect.GetFields(BindingFlags)
- uid: System.Reflection.FieldInfo[]
  parent: System.Reflection
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo[]
  spec.csharp:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: FieldInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.IReflect
  isExternal: false
  name: GetMember(String,BindingFlags)
  nameWithType: IReflect.GetMember(String,BindingFlags)
  fullName: System.Reflection.IReflect.GetMember(String,BindingFlags)
- uid: System.Reflection.MemberInfo[]
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo[]
  spec.csharp:
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: MemberInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)
  parent: System.Reflection.IReflect
  isExternal: false
  name: GetMembers(BindingFlags)
  nameWithType: IReflect.GetMembers(BindingFlags)
  fullName: System.Reflection.IReflect.GetMembers(BindingFlags)
- uid: System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.IReflect
  isExternal: false
  name: GetMethod(String,BindingFlags)
  nameWithType: IReflect.GetMethod(String,BindingFlags)
  fullName: System.Reflection.IReflect.GetMethod(String,BindingFlags)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.IReflect
  isExternal: false
  name: GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Reflection.IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.ParameterModifier[]
  parent: System.Reflection
  isExternal: false
  name: ParameterModifier
  nameWithType: ParameterModifier
  fullName: System.Reflection.ParameterModifier[]
  spec.csharp:
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    nameWithType: ParameterModifier
    fullName: ParameterModifier[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)
  parent: System.Reflection.IReflect
  isExternal: false
  name: GetMethods(BindingFlags)
  nameWithType: IReflect.GetMethods(BindingFlags)
  fullName: System.Reflection.IReflect.GetMethods(BindingFlags)
- uid: System.Reflection.MethodInfo[]
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo[]
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: MethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)
  parent: System.Reflection.IReflect
  isExternal: false
  name: GetProperties(BindingFlags)
  nameWithType: IReflect.GetProperties(BindingFlags)
  fullName: System.Reflection.IReflect.GetProperties(BindingFlags)
- uid: System.Reflection.PropertyInfo[]
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo[]
  spec.csharp:
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.IReflect
  isExternal: false
  name: GetProperty(String,BindingFlags)
  nameWithType: IReflect.GetProperty(String,BindingFlags)
  fullName: System.Reflection.IReflect.GetProperty(String,BindingFlags)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.IReflect
  isExternal: false
  name: GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: System.Reflection.IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.Reflection.IReflect
  isExternal: false
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: System.Reflection.IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.IReflect.UnderlyingSystemType
  parent: System.Reflection.IReflect
  isExternal: false
  name: UnderlyingSystemType
  nameWithType: IReflect.UnderlyingSystemType
  fullName: System.Reflection.IReflect.UnderlyingSystemType
- uid: System.Reflection.IReflect.GetField*
  parent: System.Reflection.IReflect
  isExternal: false
  name: GetField
  nameWithType: IReflect.GetField
- uid: System.Reflection.IReflect.GetFields*
  parent: System.Reflection.IReflect
  isExternal: false
  name: GetFields
  nameWithType: IReflect.GetFields
- uid: System.Reflection.IReflect.GetMember*
  parent: System.Reflection.IReflect
  isExternal: false
  name: GetMember
  nameWithType: IReflect.GetMember
- uid: System.Reflection.IReflect.GetMembers*
  parent: System.Reflection.IReflect
  isExternal: false
  name: GetMembers
  nameWithType: IReflect.GetMembers
- uid: System.Reflection.IReflect.GetMethod*
  parent: System.Reflection.IReflect
  isExternal: false
  name: GetMethod
  nameWithType: IReflect.GetMethod
- uid: System.Reflection.IReflect.GetMethods*
  parent: System.Reflection.IReflect
  isExternal: false
  name: GetMethods
  nameWithType: IReflect.GetMethods
- uid: System.Reflection.IReflect.GetProperties*
  parent: System.Reflection.IReflect
  isExternal: false
  name: GetProperties
  nameWithType: IReflect.GetProperties
- uid: System.Reflection.IReflect.GetProperty*
  parent: System.Reflection.IReflect
  isExternal: false
  name: GetProperty
  nameWithType: IReflect.GetProperty
- uid: System.Reflection.IReflect.InvokeMember*
  parent: System.Reflection.IReflect
  isExternal: false
  name: InvokeMember
  nameWithType: IReflect.InvokeMember
- uid: System.Reflection.IReflect.UnderlyingSystemType*
  parent: System.Reflection.IReflect
  isExternal: false
  name: UnderlyingSystemType
  nameWithType: IReflect.UnderlyingSystemType
