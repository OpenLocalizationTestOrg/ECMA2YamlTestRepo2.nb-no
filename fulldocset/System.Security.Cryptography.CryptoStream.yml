### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CryptoStream
  id: CryptoStream
  children:
  - System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)
  - System.Security.Cryptography.CryptoStream.CanRead
  - System.Security.Cryptography.CryptoStream.CanSeek
  - System.Security.Cryptography.CryptoStream.CanWrite
  - System.Security.Cryptography.CryptoStream.Clear
  - System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)
  - System.Security.Cryptography.CryptoStream.Flush
  - System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)
  - System.Security.Cryptography.CryptoStream.FlushFinalBlock
  - System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock
  - System.Security.Cryptography.CryptoStream.Length
  - System.Security.Cryptography.CryptoStream.Position
  - System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.Security.Cryptography.CryptoStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Security.Cryptography.CryptoStream.SetLength(System.Int64)
  - System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  langs:
  - csharp
  name: CryptoStream
  nameWithType: CryptoStream
  fullName: System.Security.Cryptography.CryptoStream
  type: Class
  summary: "Definerer en dataflyt som kobler dataflyter til kryptografisk transformasjoner."
  remarks: "Common language runtime bruker en dataflyt orientert for kryptografi. Hoveddelen i denne utformingen er CryptoStream. Kryptografisk objekter som implementerer CryptoStream kan sammen sammen med alle objekter som implementerer <xref:System.IO.Stream>, så flyt utdataene fra ett objekt kan få i inndataene på et annet objekt.</xref:System.IO.Stream> Mellomliggende resultatet (utdataene fra det første objektet) trenger ikke kan lagres separat.      > [!IMPORTANT] > Denne typen implementerer den <xref:System.IDisposable>grensesnittet.</xref:System.IDisposable> Når du er ferdig ved hjelp av typen, du må fjerne den direkte eller indirekte ved å kalle den <xref:System.Security.Cryptography.CryptoStream.Clear%2A>metoden som kaller den <xref:System.IDisposable>implementeringen.</xref:System.IDisposable> </xref:System.Security.Cryptography.CryptoStream.Clear%2A> Hvis du vil fjerne av typen direkte, kan du kalle den <xref:System.Security.Cryptography.CryptoStream.Clear%2A>metoden i en `try` / `catch` block.</xref:System.Security.Cryptography.CryptoStream.Clear%2A> Hvis du vil fjerne den indirekte, bruke et språk som `using` (i C#) eller `Using` (i Visual Basic). For mer informasjon, se &quot;Ved hjelp av et objekt som implementerer IDisposable&quot; i den <xref:System.IDisposable>grensesnittet emnet.</xref:System.IDisposable>       Du må alltid eksplisitt lukke CryptoStream objektet etter at du er ferdig med den ved å kalle den <xref:System.Security.Cryptography.CryptoStream.Clear%2A>metoden.</xref:System.Security.Cryptography.CryptoStream.Clear%2A>  Gjøre Hurtigbuffertømminger underliggende dataflyt og fører til at alle gjenværende blokker med dataene som skal behandles av CryptoStream-objektet.  Men hvis det oppstår et unntak før du kaller den <xref:System.IO.Stream.Close%2A>metoden, CryptoStream objektet ikke kan lukkes.</xref:System.IO.Stream.Close%2A>  Forsikre deg om at den <xref:System.IO.Stream.Close%2A>alltid henter-metoden, kan du plassere kallet til den <xref:System.Security.Cryptography.CryptoStream.Clear%2A>metoden i den `finally` blokker av en `try` / `catch` setningen.</xref:System.Security.Cryptography.CryptoStream.Clear%2A> </xref:System.IO.Stream.Close%2A>"
  example:
  - "The following example demonstrates how to use a CryptoStream to encrypt a string. This method uses <xref:System.Security.Cryptography.RijndaelManaged> class with the specified <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>).  \n  \n [!code-cs[Cryptography.Rijndael.Create.File#1](~/add/codesnippet/csharp/t-system.security.crypto_78_1.cs)]\n [!code-vb[Cryptography.Rijndael.Create.File#1](~/add/codesnippet/visualbasic/t-system.security.crypto_78_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class CryptoStream : System.IO.Stream
  inheritance:
  - System.IO.Stream
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)
  id: '#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)'
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: CryptoStream(Stream,ICryptoTransform,CryptoStreamMode)
  nameWithType: CryptoStream.CryptoStream(Stream,ICryptoTransform,CryptoStreamMode)
  fullName: System.Security.Cryptography.CryptoStream.CryptoStream(Stream,ICryptoTransform,CryptoStreamMode)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.CryptoStream&quot;> </xref> klassen med en dataflyt mål, transformation å bruke og modusen til dataflyten."
  remarks: "Et objekt som er avledet fra <xref:System.IO.Stream>kan sendes til den `stream` parameteren.</xref:System.IO.Stream> Et objekt som implementerer <xref:System.Security.Cryptography.ICryptoTransform>(eksempel <xref:System.Security.Cryptography.HashAlgorithm>) kan sendes til den `transform` parameteren.</xref:System.Security.Cryptography.HashAlgorithm> </xref:System.Security.Cryptography.ICryptoTransform>"
  syntax:
    content: public CryptoStream (System.IO.Stream stream, System.Security.Cryptography.ICryptoTransform transform, System.Security.Cryptography.CryptoStreamMode mode);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Dataflyten som skal utføres kryptografiske transformasjonen."
    - id: transform
      type: System.Security.Cryptography.ICryptoTransform
      description: "Kryptografiske transformasjonen som skal utføres på dataflyten."
    - id: mode
      type: System.Security.Cryptography.CryptoStreamMode
      description: "Én av de <xref href=&quot;System.Security.Cryptography.CryptoStreamMode&quot;> </xref> verdier."
  overload: System.Security.Cryptography.CryptoStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>er ugyldig."
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.CanRead
  id: CanRead
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: CanRead
  nameWithType: CryptoStream.CanRead
  fullName: System.Security.Cryptography.CryptoStream.CanRead
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Henter en verdi som angir om gjeldende <xref href=&quot;System.Security.Cryptography.CryptoStream&quot;> </xref> kan leses."
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den gjeldende er lesbar; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CryptoStream.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.CanSeek
  id: CanSeek
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: CryptoStream.CanSeek
  fullName: System.Security.Cryptography.CryptoStream.CanSeek
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Henter en verdi som angir om du kan søke i gjeldende <xref href=&quot;System.Security.Cryptography.CryptoStream&quot;> </xref>."
  remarks: "Søking er ikke aktivert i en <xref:System.Security.Cryptography.CryptoStream>, slik at denne metoden returnerer alltid `false`.</xref:System.Security.Cryptography.CryptoStream>"
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Cryptography.CryptoStream.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.CanWrite
  id: CanWrite
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: CryptoStream.CanWrite
  fullName: System.Security.Cryptography.CryptoStream.CanWrite
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Henter en verdi som angir om gjeldende <xref href=&quot;System.Security.Cryptography.CryptoStream&quot;> </xref> skrives."
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den gjeldende er skrivbar; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CryptoStream.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.Clear
  id: Clear
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: Clear()
  nameWithType: CryptoStream.Clear()
  fullName: System.Security.Cryptography.CryptoStream.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Frigir alle ressursene som brukes av den <xref href=&quot;System.Security.Cryptography.CryptoStream&quot;> </xref>."
  remarks: "Denne metoden bryter et kall til typen <xref:System.IDisposable.Dispose%2A?displayProperty=fullName>implementering.</xref:System.IDisposable.Dispose%2A?displayProperty=fullName>       Kaller `Dispose` tillater ressursene som brukes av den <xref:System.Security.Cryptography.CryptoStream>til tildeles på nytt til andre formål.</xref:System.Security.Cryptography.CryptoStream> For mer informasjon om `Dispose`, se [Rydder opp uforvaltede ressurser](~/add/includes/ajax-current-ext-md.md)"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Security.Cryptography.CryptoStream.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: CryptoStream.Dispose(Boolean)
  fullName: System.Security.Cryptography.CryptoStream.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Frigir uforvaltede ressursene som brukes av den <xref href=&quot;System.Security.Cryptography.CryptoStream&quot;> </xref> og eventuelt frigir administrerte ressurser."
  remarks: "Denne metoden kalles av offentlig `Dispose()` metoden og `Finalize` metoden. `Dispose()`Aktiverer den beskyttede `Dispose(Boolean)` metode med disposing-parameteren som er angitt til `true`. `Finalize`aktiverer `Dispose` med vinningsberegninger satt til `false`.       Når den `disposing` parameteren er `true`, denne metoden Frigjør alle ressurser holdes av administrerte objekter som denne <xref:System.Security.Cryptography.CryptoStream>referanser.</xref:System.Security.Cryptography.CryptoStream> Denne metoden starter den `Dispose()` metode for hver referert objekt."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>å frigjøre både administrerte og uforvaltede ressurser. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> frigi bare uforvaltede ressurser."
  overload: System.Security.Cryptography.CryptoStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.Flush
  id: Flush
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: Flush()
  nameWithType: CryptoStream.Flush()
  fullName: System.Security.Cryptography.CryptoStream.Flush()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Fjerner alle bufferne for gjeldende strøm og fører til bufrede data skrives til den underliggende enheten."
  remarks: "Sletter dataflyten tømme ikke den underliggende koderen med mindre du eksplisitt ringe tømming eller <xref:System.IO.Stream.Close%2A>.</xref:System.IO.Stream.Close%2A> Angi <xref:System.IO.StreamWriter.AutoFlush%2A>til `true` betyr at data fjernes fra bufferen til dataflyten, men tilstanden koder ikke tømmes.</xref:System.IO.StreamWriter.AutoFlush%2A> Dette gjør at koder ikke beholde tilstanden (delvis tegn) slik at den kan kode neste blokken tegn på riktig måte. Dette scenarioet påvirker UTF8 og UTF7 der bestemte tegn kan bare være kodet når koderen mottar tilstøtende tegn eller tegn.      > [!NOTE] > Må du først kalle enten den <xref:System.IO.Stream.Close%2A>metoden eller <xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A>metode for å fullføre tømming av bufferen.</xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A> </xref:System.IO.Stream.Close%2A>"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Security.Cryptography.CryptoStream.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)
  id: FlushAsync(System.Threading.CancellationToken)
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: FlushAsync(CancellationToken)
  nameWithType: CryptoStream.FlushAsync(CancellationToken)
  fullName: System.Security.Cryptography.CryptoStream.FlushAsync(CancellationToken)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Fjerner alle bufferne for gjeldende strøm asynkront, fører til at bufrede data skrives til den underliggende enheten og overvåker avbryte forespørsler."
  remarks: "Du må sette foran kallet til FlushAsync med den `await` (C#) eller `Await` (Visual Basic) brukes til å deaktivere kjøring av metoden før oppgaven er fullført. Hvis du vil ha mer informasjon, se [asynkront Programming med asynkron og Await](~/add/includes/ajax-current-ext-md.md).       Hvis operasjonen er avbrutt før den er fullført, returnerte oppgaven inneholder den <xref:System.Threading.Tasks.TaskStatus>verdien den <xref:System.Threading.Tasks.Task.Status%2A>egenskapen.</xref:System.Threading.Tasks.Task.Status%2A> </xref:System.Threading.Tasks.TaskStatus>"
  syntax:
    content: public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Tokenet, for å overvåke for å avbryte forespørsler. Standardverdien er <xref:System.Threading.CancellationToken.None*>.</xref:System.Threading.CancellationToken.None*>"
    return:
      type: System.Threading.Tasks.Task
      description: "En oppgave som representerer den asynkrone skriveoperasjon."
  overload: System.Security.Cryptography.CryptoStream.FlushAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dataflyten har blitt fjernet."
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.FlushFinalBlock
  id: FlushFinalBlock
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: FlushFinalBlock()
  nameWithType: CryptoStream.FlushFinalBlock()
  fullName: System.Security.Cryptography.CryptoStream.FlushFinalBlock()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Oppdaterer underliggende datakilden eller -repositorium med gjeldende status for bufferen, og fjerner bufferen."
  remarks: "Kaller den <xref:System.IO.Stream.Close%2A>metodekall FlushFinalBlock.</xref:System.IO.Stream.Close%2A> Hvis du ikke kaller <xref:System.IO.Stream.Close%2A>, kalle FlushFinalBlock for å fullføre tømming av bufferen.</xref:System.IO.Stream.Close%2A> Kall FlushFinalBlock bare når alle dataflyten aktivitet er fullført."
  syntax:
    content: public void FlushFinalBlock ();
    parameters: []
  overload: System.Security.Cryptography.CryptoStream.FlushFinalBlock*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Nøkkelen er skadet som kan føre til ugyldig utfylling til dataflyten."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Gjeldende strøm er ikke skrivbar.       - eller - har allerede transformert den siste blokken."
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock
  id: HasFlushedFinalBlock
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: HasFlushedFinalBlock
  nameWithType: CryptoStream.HasFlushedFinalBlock
  fullName: System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Henter en verdi som angir om endelig buffer blokken er skrevet til underliggende dataflyt."
  remarks: "Denne egenskapen er angitt `true` når den <xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A>-metoden.</xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A>"
  syntax:
    content: public bool HasFlushedFinalBlock { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den siste blokken har blitt tømt; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.Length
  id: Length
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: Length
  nameWithType: CryptoStream.Length
  fullName: System.Security.Cryptography.CryptoStream.Length
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Henter lengden i byte for dataflyten."
  remarks: "Denne egenskapen finnes bare for å støtte arving av <xref:System.IO.Stream>, og kan ikke brukes.</xref:System.IO.Stream>"
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "Denne egenskapen støttes ikke."
  overload: System.Security.Cryptography.CryptoStream.Length*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Denne egenskapen støttes ikke."
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.Position
  id: Position
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: Position
  nameWithType: CryptoStream.Position
  fullName: System.Security.Cryptography.CryptoStream.Position
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Henter eller angir posisjonen i gjeldende dataflyten."
  remarks: "Denne egenskapen finnes bare for å støtte arving av <xref:System.IO.Stream>, og kan ikke brukes.</xref:System.IO.Stream>"
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "Denne egenskapen støttes ikke."
  overload: System.Security.Cryptography.CryptoStream.Position*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Denne egenskapen støttes ikke."
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: CryptoStream.Read(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.CryptoStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Leser en sekvens med byte fra gjeldende strøm og flytter posisjonen i dataflyten på antall byte som leses."
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "En bytematrise. Maksimalt `count` byte er lest fra gjeldende strøm og lagret i `buffer`."
    - id: offset
      type: System.Int32
      description: "Forskyvningen i byte i `buffer` vil begynne å lagre dataene lese fra gjeldende dataflyten."
    - id: count
      type: System.Int32
      description: "Maksimalt antall byte som leses fra den gjeldende dataflyten."
    return:
      type: System.Int32
      description: "Totalt antall byte som leses, til bufferen. Dette kan være mindre enn antall byte som ble forespurt hvis mange byte er ikke tilgjengelig for øyeblikket, eller null hvis slutten på dataflyten er nådd."
  overload: System.Security.Cryptography.CryptoStream.Read*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <xref href=&quot;System.Security.Cryptography.CryptoStreamMode&quot;> </xref> knyttet til gjeldende <xref href=&quot;System.Security.Cryptography.CryptoStream&quot;> </xref> objektet samsvarer ikke med underliggende dataflyten.  For eksempel denne unntak ved <xref href=&quot;System.Security.Cryptography.CryptoStreamMode&quot;> </xref> med en underliggende dataflyten er lesebeskyttet."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den <code> offset </code> parameteren er mindre enn null.       - eller - <code> count </code> parameteren er mindre enn null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Thesum av den <code> count </code> og <code> offset </code> parametere er lengre enn lengden på bufferen."
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: ReadAsync(Byte[],Int32,Int32,CancellationToken)
  nameWithType: CryptoStream.ReadAsync(Byte[],Int32,Int32,CancellationToken)
  fullName: System.Security.Cryptography.CryptoStream.ReadAsync(Byte[],Int32,Int32,CancellationToken)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Leser asynkron en sekvens med byte fra gjeldende strøm, flytter posisjonen i dataflyten på antall byte som leses, og overvåker avbryte forespørsler."
  remarks: "Du må sette foran kallet til ReadAsync med den `await` (C#) eller `Await` (Visual Basic) brukes til å deaktivere kjøring av metoden før oppgaven er fullført. Hvis du vil ha mer informasjon, se [asynkront Programming med asynkron og Await](~/add/includes/ajax-current-ext-md.md).       Hvis operasjonen er avbrutt før den er fullført, returnerte oppgaven inneholder den <xref:System.Threading.Tasks.TaskStatus>verdien den <xref:System.Threading.Tasks.Task.Status%2A>egenskapen.</xref:System.Threading.Tasks.Task.Status%2A> </xref:System.Threading.Tasks.TaskStatus>"
  syntax:
    content: public override System.Threading.Tasks.Task<int> ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Buffer til å skrive inn dataene."
    - id: offset
      type: System.Int32
      description: "Forskyvningen i byte i `buffer` som til å skrive data fra dataflyten."
    - id: count
      type: System.Int32
      description: "Maksimalt antall byte som skal leses."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Tokenet, for å overvåke for å avbryte forespørsler. Standardverdien er <xref:System.Threading.CancellationToken.None*>.</xref:System.Threading.CancellationToken.None*>"
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: "En oppgave som representerer den asynkrone leseoperasjon. Verdien for oppgaven objektets <code> TResult </code> parameteren inneholder totalt antall byte som leses, til bufferen. Resultatet kan være mindre enn antall byte som ble forespurt om antall byte som er tilgjengelig for øyeblikket er mindre enn det forespurte antallet eller det kan være 0 (null) Hvis slutten på dataflyten er nådd."
  overload: System.Security.Cryptography.CryptoStream.ReadAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>eller <code>count</code> er negativt."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Summen av <code> offset </code> og <code> count </code> er større enn bufferlengden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Dataflyten støtter ikke lesing."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dataflyten har blitt fjernet."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Dataflyten er i bruk av en tidligere leseoperasjon."
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: CryptoStream.Seek(Int64,SeekOrigin)
  fullName: System.Security.Cryptography.CryptoStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Angir posisjonen i gjeldende dataflyten."
  remarks: "Denne metoden finnes bare for å støtte arving av <xref:System.IO.Stream>, og kan ikke brukes.</xref:System.IO.Stream>"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Byte offset forhold til den `origin` parameteren."
    - id: origin
      type: System.IO.SeekOrigin
      description: "En <xref:System.IO.SeekOrigin>objektet angir referanse brukes til å få ny posisjon.</xref:System.IO.SeekOrigin>"
    return:
      type: System.Int64
      description: "Denne metoden støttes ikke."
  overload: System.Security.Cryptography.CryptoStream.Seek*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Denne metoden støttes ikke."
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: CryptoStream.SetLength(Int64)
  fullName: System.Security.Cryptography.CryptoStream.SetLength(Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Angir hvor lang gjeldende dataflyten."
  remarks: "Denne egenskapen finnes bare for å støtte arving av <xref:System.IO.Stream>, og kan ikke brukes.</xref:System.IO.Stream>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Den ønskede lengden på gjeldende strøm i byte."
  overload: System.Security.Cryptography.CryptoStream.SetLength*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Denne egenskapen finnes bare for å støtte arving av <xref:System.IO.Stream>, og kan ikke brukes.</xref:System.IO.Stream>"
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: CryptoStream.Write(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.CryptoStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Skriver en sekvens med byte til gjeldende <xref href=&quot;System.Security.Cryptography.CryptoStream&quot;> </xref> og flytter gjeldende plassering i dataflyten på antall byte skrevet."
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "En bytematrise. Denne metoden kopierer `count` byte fra `buffer` til gjeldende dataflyten."
    - id: offset
      type: System.Int32
      description: "Forskyvningen i byte i `buffer` som du vil kopiere byte til gjeldende dataflyten."
    - id: count
      type: System.Int32
      description: "Antall byte som skrives til gjeldende dataflyten."
  overload: System.Security.Cryptography.CryptoStream.Write*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <xref href=&quot;System.Security.Cryptography.CryptoStreamMode&quot;> </xref> knyttet til gjeldende <xref href=&quot;System.Security.Cryptography.CryptoStream&quot;> </xref> objektet samsvarer ikke med underliggende dataflyten.  For eksempel denne unntak ved <xref href=&quot;System.Security.Cryptography.CryptoStreamMode&quot;> </xref> med en underliggende dataflyten er skrivebeskyttet."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den <code> offset </code> parameteren er mindre enn null.       - eller - <code> count </code> parameteren er mindre enn null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Summen av den <code> count </code> og <code> offset </code> parametere er lengre enn lengden på bufferen."
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.Security.Cryptography.CryptoStream
  langs:
  - csharp
  name: WriteAsync(Byte[],Int32,Int32,CancellationToken)
  nameWithType: CryptoStream.WriteAsync(Byte[],Int32,Int32,CancellationToken)
  fullName: System.Security.Cryptography.CryptoStream.WriteAsync(Byte[],Int32,Int32,CancellationToken)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Skriver en sekvens med byte til gjeldende strøm asynkront og flytter gjeldende plassering i dataflyten på antall byte skrevet overvåker avbryte forespørsler."
  remarks: "Du må sette foran kallet til WriteAsync med den `await` (C#) eller `Await` (Visual Basic) brukes til å deaktivere kjøring av metoden før oppgaven er fullført. Hvis du vil ha mer informasjon, se [asynkront Programming med asynkron og Await](~/add/includes/ajax-current-ext-md.md).       Hvis operasjonen er avbrutt før den er fullført, returnerte oppgaven inneholder den <xref:System.Threading.Tasks.TaskStatus>verdien den <xref:System.Threading.Tasks.Task.Status%2A>egenskapen.</xref:System.Threading.Tasks.Task.Status%2A> </xref:System.Threading.Tasks.TaskStatus>"
  syntax:
    content: public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Buffer til å skrive data fra."
    - id: offset
      type: System.Int32
      description: "Forskyvning nullbasert byte i `buffer` som til å skrive byte til dataflyten."
    - id: count
      type: System.Int32
      description: "Maksimalt antall byte som skal skrive."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Tokenet, for å overvåke for å avbryte forespørsler. Standardverdien er <xref:System.Threading.CancellationToken.None*>.</xref:System.Threading.CancellationToken.None*>"
    return:
      type: System.Threading.Tasks.Task
      description: "En oppgave som representerer den asynkrone Skriveoperasjonen."
  overload: System.Security.Cryptography.CryptoStream.WriteAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>eller <code>count</code> er negativt."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Summen av <code> offset </code> og <code> count </code> er større enn bufferlengden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Dataflyten støtter ikke skriving."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dataflyten har blitt fjernet."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Dataflyten er i bruk av en tidligere skriveoperasjon."
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: CryptoStream(Stream,ICryptoTransform,CryptoStreamMode)
  nameWithType: CryptoStream.CryptoStream(Stream,ICryptoTransform,CryptoStreamMode)
  fullName: System.Security.Cryptography.CryptoStream.CryptoStream(Stream,ICryptoTransform,CryptoStreamMode)
- uid: System.Security.Cryptography.ICryptoTransform
  parent: System.Security.Cryptography
  isExternal: false
  name: ICryptoTransform
  nameWithType: ICryptoTransform
  fullName: System.Security.Cryptography.ICryptoTransform
- uid: System.Security.Cryptography.CryptoStreamMode
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptoStreamMode
  nameWithType: CryptoStreamMode
  fullName: System.Security.Cryptography.CryptoStreamMode
- uid: System.Security.Cryptography.CryptoStream.CanRead
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: CanRead
  nameWithType: CryptoStream.CanRead
  fullName: System.Security.Cryptography.CryptoStream.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.CryptoStream.CanSeek
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: CanSeek
  nameWithType: CryptoStream.CanSeek
  fullName: System.Security.Cryptography.CryptoStream.CanSeek
- uid: System.Security.Cryptography.CryptoStream.CanWrite
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: CanWrite
  nameWithType: CryptoStream.CanWrite
  fullName: System.Security.Cryptography.CryptoStream.CanWrite
- uid: System.Security.Cryptography.CryptoStream.Clear
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Clear()
  nameWithType: CryptoStream.Clear()
  fullName: System.Security.Cryptography.CryptoStream.Clear()
- uid: System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: CryptoStream.Dispose(Boolean)
  fullName: System.Security.Cryptography.CryptoStream.Dispose(Boolean)
- uid: System.Security.Cryptography.CryptoStream.Flush
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Flush()
  nameWithType: CryptoStream.Flush()
  fullName: System.Security.Cryptography.CryptoStream.Flush()
- uid: System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: FlushAsync(CancellationToken)
  nameWithType: CryptoStream.FlushAsync(CancellationToken)
  fullName: System.Security.Cryptography.CryptoStream.FlushAsync(CancellationToken)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Security.Cryptography.CryptoStream.FlushFinalBlock
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: FlushFinalBlock()
  nameWithType: CryptoStream.FlushFinalBlock()
  fullName: System.Security.Cryptography.CryptoStream.FlushFinalBlock()
- uid: System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: HasFlushedFinalBlock
  nameWithType: CryptoStream.HasFlushedFinalBlock
  fullName: System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock
- uid: System.Security.Cryptography.CryptoStream.Length
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Length
  nameWithType: CryptoStream.Length
  fullName: System.Security.Cryptography.CryptoStream.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Security.Cryptography.CryptoStream.Position
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Position
  nameWithType: CryptoStream.Position
  fullName: System.Security.Cryptography.CryptoStream.Position
- uid: System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: CryptoStream.Read(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.CryptoStream.Read(Byte[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: ReadAsync(Byte[],Int32,Int32,CancellationToken)
  nameWithType: CryptoStream.ReadAsync(Byte[],Int32,Int32,CancellationToken)
  fullName: System.Security.Cryptography.CryptoStream.ReadAsync(Byte[],Int32,Int32,CancellationToken)
- uid: System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Cryptography.CryptoStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: CryptoStream.Seek(Int64,SeekOrigin)
  fullName: System.Security.Cryptography.CryptoStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Security.Cryptography.CryptoStream.SetLength(System.Int64)
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: CryptoStream.SetLength(Int64)
  fullName: System.Security.Cryptography.CryptoStream.SetLength(Int64)
- uid: System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: CryptoStream.Write(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.CryptoStream.Write(Byte[],Int32,Int32)
- uid: System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: WriteAsync(Byte[],Int32,Int32,CancellationToken)
  nameWithType: CryptoStream.WriteAsync(Byte[],Int32,Int32,CancellationToken)
  fullName: System.Security.Cryptography.CryptoStream.WriteAsync(Byte[],Int32,Int32,CancellationToken)
- uid: System.Security.Cryptography.CryptoStream.#ctor*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: CryptoStream
  nameWithType: CryptoStream.CryptoStream
- uid: System.Security.Cryptography.CryptoStream.CanRead*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: CanRead
  nameWithType: CryptoStream.CanRead
- uid: System.Security.Cryptography.CryptoStream.CanSeek*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: CanSeek
  nameWithType: CryptoStream.CanSeek
- uid: System.Security.Cryptography.CryptoStream.CanWrite*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: CanWrite
  nameWithType: CryptoStream.CanWrite
- uid: System.Security.Cryptography.CryptoStream.Clear*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Clear
  nameWithType: CryptoStream.Clear
- uid: System.Security.Cryptography.CryptoStream.Dispose*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Dispose
  nameWithType: CryptoStream.Dispose
- uid: System.Security.Cryptography.CryptoStream.Flush*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Flush
  nameWithType: CryptoStream.Flush
- uid: System.Security.Cryptography.CryptoStream.FlushAsync*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: FlushAsync
  nameWithType: CryptoStream.FlushAsync
- uid: System.Security.Cryptography.CryptoStream.FlushFinalBlock*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: FlushFinalBlock
  nameWithType: CryptoStream.FlushFinalBlock
- uid: System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: HasFlushedFinalBlock
  nameWithType: CryptoStream.HasFlushedFinalBlock
- uid: System.Security.Cryptography.CryptoStream.Length*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Length
  nameWithType: CryptoStream.Length
- uid: System.Security.Cryptography.CryptoStream.Position*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Position
  nameWithType: CryptoStream.Position
- uid: System.Security.Cryptography.CryptoStream.Read*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Read
  nameWithType: CryptoStream.Read
- uid: System.Security.Cryptography.CryptoStream.ReadAsync*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: ReadAsync
  nameWithType: CryptoStream.ReadAsync
- uid: System.Security.Cryptography.CryptoStream.Seek*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Seek
  nameWithType: CryptoStream.Seek
- uid: System.Security.Cryptography.CryptoStream.SetLength*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: SetLength
  nameWithType: CryptoStream.SetLength
- uid: System.Security.Cryptography.CryptoStream.Write*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: Write
  nameWithType: CryptoStream.Write
- uid: System.Security.Cryptography.CryptoStream.WriteAsync*
  parent: System.Security.Cryptography.CryptoStream
  isExternal: false
  name: WriteAsync
  nameWithType: CryptoStream.WriteAsync
