### YamlMime:ManagedReference
items:
- uid: System.Runtime.ConstrainedExecution.Cer
  id: Cer
  children:
  - System.Runtime.ConstrainedExecution.Cer.MayFail
  - System.Runtime.ConstrainedExecution.Cer.None
  - System.Runtime.ConstrainedExecution.Cer.Success
  langs:
  - csharp
  name: Cer
  nameWithType: Cer
  fullName: System.Runtime.ConstrainedExecution.Cer
  type: Enum
  summary: "Angir en metode virkemåten ved et begrenset kjøringsområde."
  remarks: "Cer-nummerering angir virkemåten til en metode, type eller samlingen i et kjøringsområde med begrenset (CER). Bruk en av tre tilgjengelige verdier for å angi at enheten skal lykkes har noen kunnskap om en CER, eller kanskje (deterministically) rapporterer var vellykket eller mislykket.       En CER gir garantier område Code utføres uavbrutt selv om et asynkront unntak for eksempel en avbrutte tråd for minne unntak eller stakkoverflyt er startet."
  example:
  - "The following code example demonstrates the use of the Cer enumeration when specifying a constrained execution region for a method. This code example is part of a larger example provided for the <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A> constructor.  \n  \n [!code-vb[System.Runtime.ConstrainedExecution#3](~/add/codesnippet/visualbasic/t-system.runtime.constra_2_1.vb)]\n [!code-cs[System.Runtime.ConstrainedExecution#3](~/add/codesnippet/csharp/t-system.runtime.constra_2_1.cs)]"
  syntax:
    content: public enum Cer
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Runtime.ConstrainedExecution.Cer.MayFail
  id: MayFail
  parent: System.Runtime.ConstrainedExecution.Cer
  langs:
  - csharp
  name: MayFail
  nameWithType: Cer.MayFail
  fullName: System.Runtime.ConstrainedExecution.Cer.MayFail
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.ConstrainedExecution
  summary: "Metoden kan mislykkes overfor unntakssituasjon betingelser. I dette tilfellet vil metoden rapportere tilbake til metoden kall om den var vellykket eller mislykket. Metoden må ha en CER rundt selve metode til å sikre at den kan rapportere returverdien."
  syntax:
    content: MayFail
    return:
      type: System.Runtime.ConstrainedExecution.Cer
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.ConstrainedExecution.Cer.None
  id: None
  parent: System.Runtime.ConstrainedExecution.Cer
  langs:
  - csharp
  name: None
  nameWithType: Cer.None
  fullName: System.Runtime.ConstrainedExecution.Cer.None
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.ConstrainedExecution
  summary: 'Metoden, type eller samlingen har ikke en CER-uttrykket. Det ikke dra nytte av CER garantier. Dette innebærer følgende:'
  remarks: "-Metoden kan mislykkes overfor unntakssituasjon betingelser.      -Metoden kan eller kan ikke rapporten som den mislyktes (det er ikke-deterministisk).      -Metoden kan ikke skrive med CERs huske (som er den mest sannsynlige).       Hvis en metode, type eller samlingen ikke eksplisitt er merket for å lykkes, den implisitt er merket som `Cer.None`."
  syntax:
    content: None
    return:
      type: System.Runtime.ConstrainedExecution.Cer
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.ConstrainedExecution.Cer.Success
  id: Success
  parent: System.Runtime.ConstrainedExecution.Cer
  langs:
  - csharp
  name: Success
  nameWithType: Cer.Success
  fullName: System.Runtime.ConstrainedExecution.Cer.Success
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.ConstrainedExecution
  summary: "Overfor unntakssituasjon betingelser garanteres metoden skal lykkes. Du må alltid konstruere CER rundt metoden kalles, selv når den kalles fra en ikke-CER-område. En metode er vellykket hvis den utfører Hva er beregnet. For eksempel merke <xref:System.Collections.ArrayList.Count*>med `ReliabilityContractAttribute(Cer.Success)` antyder at når den kjører under en CER, den alltid returnerer en telling av antallet elementer i den <xref href=&quot;System.Collections.ArrayList&quot;> </xref> og den kan ikke forlate feltene intern ubestemt tilstand.</xref:System.Collections.ArrayList.Count*>"
  syntax:
    content: Success
    return:
      type: System.Runtime.ConstrainedExecution.Cer
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Runtime.ConstrainedExecution.Cer.MayFail
  parent: System.Runtime.ConstrainedExecution.Cer
  isExternal: false
  name: MayFail
  nameWithType: Cer.MayFail
  fullName: System.Runtime.ConstrainedExecution.Cer.MayFail
- uid: System.Runtime.ConstrainedExecution.Cer
  parent: System.Runtime.ConstrainedExecution
  isExternal: false
  name: Cer
  nameWithType: Cer
  fullName: System.Runtime.ConstrainedExecution.Cer
- uid: System.Runtime.ConstrainedExecution.Cer.None
  parent: System.Runtime.ConstrainedExecution.Cer
  isExternal: false
  name: None
  nameWithType: Cer.None
  fullName: System.Runtime.ConstrainedExecution.Cer.None
- uid: System.Runtime.ConstrainedExecution.Cer.Success
  parent: System.Runtime.ConstrainedExecution.Cer
  isExternal: false
  name: Success
  nameWithType: Cer.Success
  fullName: System.Runtime.ConstrainedExecution.Cer.Success
