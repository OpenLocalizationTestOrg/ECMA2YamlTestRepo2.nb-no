### YamlMime:ManagedReference
items:
- uid: System.Net.HttpListenerResponse
  id: HttpListenerResponse
  children:
  - System.Net.HttpListenerResponse.Abort
  - System.Net.HttpListenerResponse.AddHeader(System.String,System.String)
  - System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)
  - System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)
  - System.Net.HttpListenerResponse.Close
  - System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)
  - System.Net.HttpListenerResponse.ContentEncoding
  - System.Net.HttpListenerResponse.ContentLength64
  - System.Net.HttpListenerResponse.ContentType
  - System.Net.HttpListenerResponse.Cookies
  - System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)
  - System.Net.HttpListenerResponse.Headers
  - System.Net.HttpListenerResponse.KeepAlive
  - System.Net.HttpListenerResponse.OutputStream
  - System.Net.HttpListenerResponse.ProtocolVersion
  - System.Net.HttpListenerResponse.Redirect(System.String)
  - System.Net.HttpListenerResponse.RedirectLocation
  - System.Net.HttpListenerResponse.SendChunked
  - System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)
  - System.Net.HttpListenerResponse.StatusCode
  - System.Net.HttpListenerResponse.StatusDescription
  - System.Net.HttpListenerResponse.System#IDisposable#Dispose
  langs:
  - csharp
  name: HttpListenerResponse
  nameWithType: HttpListenerResponse
  fullName: System.Net.HttpListenerResponse
  type: Class
  summary: "Representerer et svar på en forespørsel om håndtert av en <xref href=&quot;System.Net.HttpListener&quot;> </xref> objektet."
  remarks: "Når en klient sender en forespørsel for en ressurs håndtert av en <xref:System.Net.HttpListener>objektet, forespørselen og svar er gjort tilgjengelig for programmet i en <xref:System.Net.HttpListenerContext>objektet.</xref:System.Net.HttpListenerContext> </xref:System.Net.HttpListener> Forespørselen er representert av en <xref:System.Net.HttpListenerRequest>objekt og er tilgjengelig i den <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName>egenskapen.</xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName> </xref:System.Net.HttpListenerRequest> Svaret representeres av et objekt som HttpListenerResponse og er tilgjengelig i den <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=fullName>egenskapen.</xref:System.Net.HttpListenerContext.Response%2A?displayProperty=fullName>       Du kan tilpasse svaret ved å angi ulike egenskaper som <xref:System.Net.HttpListenerResponse.StatusCode%2A>, <xref:System.Net.HttpListenerResponse.StatusDescription%2A>, og <xref:System.Net.HttpListenerResponse.Cookies%2A>.</xref:System.Net.HttpListenerResponse.Cookies%2A> </xref:System.Net.HttpListenerResponse.StatusDescription%2A> </xref:System.Net.HttpListenerResponse.StatusCode%2A> Bruk av <xref:System.Net.HttpListenerResponse.OutputStream%2A?displayProperty=fullName>til å hente en <xref:System.IO.Stream>forekomsten kan skrive data til som svar.</xref:System.IO.Stream> </xref:System.Net.HttpListenerResponse.OutputStream%2A?displayProperty=fullName> Til slutt sender svardata til klienten ved å kalle den <xref:System.Net.HttpListenerResponse.Close%2A>metoden.</xref:System.Net.HttpListenerResponse.Close%2A>"
  example:
  - "The following code example demonstrates responding to a client request.  \n  \n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/t-system.net.httplistene_2_1.cs)]"
  syntax:
    content: 'public sealed class HttpListenerResponse : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Abort
  id: Abort
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Abort()
  nameWithType: HttpListenerResponse.Abort()
  fullName: System.Net.HttpListenerResponse.Abort()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Lukker tilkoblingen til klienten uten å sende et svar."
  remarks: "Kaller denne metoden for et objekt som allerede er lukket har ingen virkning. Hvis svaret ikke allerede er lukket, denne metoden lukker den og den tilknyttede <xref:System.Net.HttpListenerRequest>og <xref:System.Net.HttpListenerContext>objekter.</xref:System.Net.HttpListenerContext> </xref:System.Net.HttpListenerRequest> Tilkoblingen til klienten er også lukket, uavhengig av den <xref:System.Net.HttpListenerRequest.KeepAlive%2A>egenskapsverdi for klientforespørselen.</xref:System.Net.HttpListenerRequest.KeepAlive%2A>"
  syntax:
    content: public void Abort ();
    parameters: []
  overload: System.Net.HttpListenerResponse.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.AddHeader(System.String,System.String)
  id: AddHeader(System.String,System.String)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: AddHeader(String,String)
  nameWithType: HttpListenerResponse.AddHeader(String,String)
  fullName: System.Net.HttpListenerResponse.AddHeader(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Legger til den angitte hodet og verdien i HTTP-hode for dette svaret."
  remarks: "Kaller denne metoden, tilsvarer kaller den <xref:System.Net.WebHeaderCollection.Set%2A>-metoden på samlingen ble returnert av den <xref:System.Net.HttpListenerResponse.Headers%2A>egenskapen.</xref:System.Net.HttpListenerResponse.Headers%2A> </xref:System.Net.WebHeaderCollection.Set%2A>       Hvis hodet som er angitt i `name` finnes ikke, denne metoden setter inn en ny overskrift til den <xref:System.Net.HttpListenerResponse.Headers%2A>egenskapens samlingen.</xref:System.Net.HttpListenerResponse.Headers%2A> Hvis `name` finnes i samlingen, denne metoden erstatter den eksisterende verdien med `value`. Hvis du vil legge til en verdi i en eksisterende overskrift uten å erstatte den eksisterende verdien, kan du bruke den <xref:System.Net.HttpListenerResponse.AppendHeader%2A>metoden.</xref:System.Net.HttpListenerResponse.AppendHeader%2A>"
  example:
  - "The following code example demonstrates adding a header using this property.  \n  \n [!code-cs[Net_Listener_Basic#26](~/add/codesnippet/csharp/m-system.net.httplistene_2_1.cs)]"
  syntax:
    content: public void AddHeader (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på HTTP-hodet til å angi."
    - id: value
      type: System.String
      description: "Verdien for den `name` hodet."
  overload: System.Net.HttpListenerResponse.AddHeader*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en tom streng (&quot;&quot;)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Du kan ikke angi en verdi for det angitte hodet.       - eller - <code> name </code> eller <code> value </code> inneholder ugyldige tegn."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Lengden på <code> value </code> er større enn 65 535 tegn."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)
  id: AppendCookie(System.Net.Cookie)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: AppendCookie(Cookie)
  nameWithType: HttpListenerResponse.AppendCookie(Cookie)
  fullName: System.Net.HttpListenerResponse.AppendCookie(Cookie)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Legger til den angitte <xref:System.Net.Cookie>-samlingen for informasjonskapsler for dette svaret.</xref:System.Net.Cookie>"
  remarks: "Kaller denne metoden, tilsvarer kaller den <xref:System.Net.CookieCollection.Add%2A>-metoden på samlingen ble returnert av den <xref:System.Net.HttpListenerResponse.Cookies%2A>egenskapen.</xref:System.Net.HttpListenerResponse.Cookies%2A> </xref:System.Net.CookieCollection.Add%2A>       Hvis den angitte informasjonskapselen ikke finnes i den <xref:System.Net.HttpListenerResponse.Cookies%2A>egenskapens samlingen `cookie` er lagt til.</xref:System.Net.HttpListenerResponse.Cookies%2A> Hvis informasjonskapselen finnes i samlingen `cookie` erstatter den."
  example:
  - "The following code example demonstrates adding a cookie to a response  \n  \n [!code-cs[Net_Listener_Basic#20](~/add/codesnippet/csharp/m-system.net.httplistene_3_1.cs)]"
  syntax:
    content: public void AppendCookie (System.Net.Cookie cookie);
    parameters:
    - id: cookie
      type: System.Net.Cookie
      description: "Den <xref:System.Net.Cookie>å legge til i samlingen sendes i svaret.</xref:System.Net.Cookie>"
  overload: System.Net.HttpListenerResponse.AppendCookie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>cookie</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)
  id: AppendHeader(System.String,System.String)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: AppendHeader(String,String)
  nameWithType: HttpListenerResponse.AppendHeader(String,String)
  fullName: System.Net.HttpListenerResponse.AppendHeader(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Legger til en verdi i det angitte HTTP-hodet sendes i svaret."
  remarks: "Kaller denne metoden, tilsvarer kaller den <xref:System.Net.WebHeaderCollection.Add%2A>-metoden på samlingen ble returnert av den <xref:System.Net.HttpListenerResponse.Headers%2A>egenskapen.</xref:System.Net.HttpListenerResponse.Headers%2A> </xref:System.Net.WebHeaderCollection.Add%2A>       Hvis hodet som er angitt i `header` finnes ikke, denne metoden setter inn en ny overskrift til den <xref:System.Net.HttpListenerResponse.Headers%2A>egenskapens samlingen.</xref:System.Net.HttpListenerResponse.Headers%2A> Hvis `header` finnes i samlingen, legger til denne metoden `value` til de eksisterende verdiene. Hvis du vil erstatte verdien av et eksisterende, kan du bruke den <xref:System.Net.HttpListenerResponse.AddHeader%2A>metoden.</xref:System.Net.HttpListenerResponse.AddHeader%2A>"
  syntax:
    content: public void AppendHeader (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på HTTP-hode å tilføye `value` til."
    - id: value
      type: System.String
      description: "Verdien du vil legge til den `name` hodet."
  overload: System.Net.HttpListenerResponse.AppendHeader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en tom streng (&quot;&quot;).       - eller du har ikke tillatelse til å angi en verdi for det angitte hodet.       - eller - <code>name</code> eller <code>value</code> inneholder ugyldige tegn."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Lengden på <code> value </code> er større enn 65 535 tegn."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Close
  id: Close
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Close()
  nameWithType: HttpListenerResponse.Close()
  fullName: System.Net.HttpListenerResponse.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Sender svar til klienten og frigir ressursene holdes av dette <xref href=&quot;System.Net.HttpListenerResponse&quot;> </xref> forekomsten."
  remarks: "Denne metoden lukker dataflyten svar og <xref:System.Net.HttpListenerRequest>knyttet til svaret.</xref:System.Net.HttpListenerRequest>"
  example:
  - "The following code example demonstrates calling this method to send a <xref:System.Net.HttpStatusCode> (403) response to the client.  \n  \n [!code-vb[NclListener#5](~/add/codesnippet/visualbasic/m-system.net.httplistene_0_1.vb)]\n [!code-cs[NclListener#5](~/add/codesnippet/csharp/m-system.net.httplistene_0_1.cs)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Net.HttpListenerResponse.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)
  id: Close(System.Byte[],System.Boolean)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Close(Byte[],Boolean)
  nameWithType: HttpListenerResponse.Close(Byte[],Boolean)
  fullName: System.Net.HttpListenerResponse.Close(Byte[],Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Returnerer den angitte Bytematrisen til klienten og frigir ressursene holdes av dette <xref href=&quot;System.Net.HttpListenerResponse&quot;> </xref> forekomsten."
  remarks: "Hvis du sender body data med svaret, kan du bruke denne metoden til å sende den som en <xref:System.Byte>matrise i stedet for skriving av meldingsteksten data til den <xref:System.Net.HttpListenerResponse.OutputStream%2A>egenskapen og kaller den <xref:System.Net.HttpListenerResponse.Close%2A>metoden.</xref:System.Net.HttpListenerResponse.Close%2A> </xref:System.Net.HttpListenerResponse.OutputStream%2A> </xref:System.Byte>       Denne metoden lukker dataflyten svar og <xref:System.Net.HttpListenerRequest>knyttet til svaret.</xref:System.Net.HttpListenerRequest>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[Net_Listener_Basic#24](~/add/codesnippet/csharp/m-system.net.httplistene_17_1.cs)]"
  syntax:
    content: public void Close (byte[] responseEntity, bool willBlock);
    parameters:
    - id: responseEntity
      type: System.Byte[]
      description: "En <xref:System.Byte>matrise som inneholder svaret skal sendes til klienten.</xref:System.Byte>"
    - id: willBlock
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>til å blokkere kjøring under tømming dataflyten til klienten; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerResponse.Close*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>responseEntity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dette objektet er lukket."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.ContentEncoding
  id: ContentEncoding
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: ContentEncoding
  nameWithType: HttpListenerResponse.ContentEncoding
  fullName: System.Net.HttpListenerResponse.ContentEncoding
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir av <xref:System.Text.Encoding>for dette svarets <xref:System.Net.HttpListenerResponse.OutputStream*>.</xref:System.Net.HttpListenerResponse.OutputStream*> </xref:System.Text.Encoding>"
  remarks: "En <xref:System.Text.Encoding>objektet kan brukes til å konvertere byte sekvenser til tegnsett (tegntabell) og tegn i byte sekvenser.</xref:System.Text.Encoding>"
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-vb[NclListener#5](~/add/codesnippet/visualbasic/p-system.net.httplistene_45_1.vb)]\n [!code-cs[NclListener#5](~/add/codesnippet/csharp/p-system.net.httplistene_45_1.cs)]"
  syntax:
    content: public System.Text.Encoding ContentEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "En <xref:System.Text.Encoding>objektet brukes med dataene i den <xref:System.Net.HttpListenerResponse.OutputStream*>egenskapen eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis ingen koding er angitt.</xref:System.Net.HttpListenerResponse.OutputStream*> </xref:System.Text.Encoding>"
  overload: System.Net.HttpListenerResponse.ContentEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.ContentLength64
  id: ContentLength64
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: ContentLength64
  nameWithType: HttpListenerResponse.ContentLength64
  fullName: System.Net.HttpListenerResponse.ContentLength64
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir antall byte i meldingsteksten dataene som er inkludert i svaret."
  remarks: "Den `Content-Length` hodet uttrykker lang, i byte for meldingsteksten data. Når dataene ved hjelp av et format som ikke sender delvis eller raw, må du angi egenskapen ContentLength64. Hvis ikke, den <xref:System.Net.HttpListener>sender ikke svardata.</xref:System.Net.HttpListener>       For en fullstendig liste over svarhoder, kan du se den <xref:System.Net.HttpResponseHeader>opplisting.</xref:System.Net.HttpResponseHeader>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/p-system.net.httplistene_15_1.cs)]"
  syntax:
    content: public long ContentLength64 { get; set; }
    return:
      type: System.Int64
      description: "Verdien for <xref uid=&quot;langword_csharp_Content-Length&quot; name=&quot;Content-Length&quot; href=&quot;&quot;> </xref> hodet."
  overload: System.Net.HttpListenerResponse.ContentLength64*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Verdien som er angitt for en set-operasjon er mindre enn null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Svaret er allerede sendt."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dette objektet er lukket."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.ContentType
  id: ContentType
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: ContentType
  nameWithType: HttpListenerResponse.ContentType
  fullName: System.Net.HttpListenerResponse.ContentType
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir MIME-typen for innhold som returneres."
  remarks: "Under kommunikasjon med en nettleser, du eksplisitt må sette denne egenskapen når returnere en innholdstype enn `text/html`.       For en fullstendig liste over svarhoder, kan du se den <xref:System.Net.HttpResponseHeader>opplisting.</xref:System.Net.HttpResponseHeader>"
  syntax:
    content: public string ContentType { get; set; }
    return:
      type: System.String
      description: "En <xref:System.String>forekomsten som inneholder teksten i svaret <xref uid=&quot;langword_csharp_Content-Type&quot; name=&quot;Content-Type&quot; href=&quot;&quot;> </xref> overskrift.</xref:System.String>"
  overload: System.Net.HttpListenerResponse.ContentType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Verdien som er angitt for en set-operasjon er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Verdien som er angitt for en set-operasjon er en tom streng (&quot;&quot;)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dette objektet er lukket."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Cookies
  id: Cookies
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Cookies
  nameWithType: HttpListenerResponse.Cookies
  fullName: System.Net.HttpListenerResponse.Cookies
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir samlingen av informasjonskapsler returnert med svaret."
  remarks: 'En informasjonskapsel er navn/verdi-tekstdata fra en nettserver som er lagret på den lokale (klient) datamaskinen. Følgende informasjonskapsel formater som støttes: Netscape RFC 2109 og RFC 2965. Den Netscape spesifikasjonen for informasjonskapsel som er tilgjengelig på http://wp.netscape.com/newsref/std/cookie_spec.html; RFC-dokumenter som er tilgjengelige på [http://www.rfc-editor.org](http://www.rfc-editor.org).'
  example:
  - "The following code example checks a request for a cookie, and returns a new cookie with the response if the request did not have one.  \n  \n [!code-cs[Net_Listener_Basic#20](~/add/codesnippet/csharp/p-system.net.httplistene_23_1.cs)]"
  syntax:
    content: public System.Net.CookieCollection Cookies { get; set; }
    return:
      type: System.Net.CookieCollection
      description: "En <xref:System.Net.CookieCollection>som inneholder informasjonskapsler sammen svaret.</xref:System.Net.CookieCollection> Samlingen er tom hvis ingen informasjonskapsler er lagt til i svar."
  overload: System.Net.HttpListenerResponse.Cookies*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)
  id: CopyFrom(System.Net.HttpListenerResponse)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: CopyFrom(HttpListenerResponse)
  nameWithType: HttpListenerResponse.CopyFrom(HttpListenerResponse)
  fullName: System.Net.HttpListenerResponse.CopyFrom(HttpListenerResponse)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Overfører egenskaper fra den angitte <xref href=&quot;System.Net.HttpListenerResponse&quot;> </xref> til dette svaret."
  remarks: "Hvis du endrer regelmessig mange egenskaper fra standardverdiene til et fast sett med nye verdier, er det praktisk å bruke en <xref:System.Net.HttpListenerResponse>forekomsten som en mal.</xref:System.Net.HttpListenerResponse> Tilpass malen svaret én gang og, i stedet for å konfigurere hvert svar separat, kalle metoden CopyFrom for å konfigurere svar nye basert på verdier i svaret mal.       Følgende egenskaper kopieres fra `templateResponse` til den gjeldende forekomsten.      -   <xref:System.Net.HttpListenerResponse.Headers%2A>      -   <xref:System.Net.HttpListenerResponse.ContentLength64%2A>      -   <xref:System.Net.HttpListenerResponse.StatusCode%2A>      -   <xref:System.Net.HttpListenerResponse.StatusDescription%2A>      -   <xref:System.Net.HttpListenerResponse.KeepAlive%2A>      -   <xref:System.Net.HttpListenerResponse.ProtocolVersion%2A></xref:System.Net.HttpListenerResponse.ProtocolVersion%2A></xref:System.Net.HttpListenerResponse.KeepAlive%2A></xref:System.Net.HttpListenerResponse.StatusDescription%2A></xref:System.Net.HttpListenerResponse.StatusCode%2A></xref:System.Net.HttpListenerResponse.ContentLength64%2A></xref:System.Net.HttpListenerResponse.Headers%2A>"
  example:
  - "The following code example demonstrates creating a response by copying a template response.  \n  \n [!code-vb[NCLListener#5](~/add/codesnippet/visualbasic/m-system.net.httplistene_9_1.vb)]\n [!code-cs[NCLListener#5](~/add/codesnippet/csharp/m-system.net.httplistene_9_1.cs)]"
  syntax:
    content: public void CopyFrom (System.Net.HttpListenerResponse templateResponse);
    parameters:
    - id: templateResponse
      type: System.Net.HttpListenerResponse
      description: "Den <xref href=&quot;System.Net.HttpListenerResponse&quot;> </xref> forekomsten skal kopieres."
  overload: System.Net.HttpListenerResponse.CopyFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Headers
  id: Headers
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Headers
  nameWithType: HttpListenerResponse.Headers
  fullName: System.Net.HttpListenerResponse.Headers
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir samlingen av hodet navn/verdi-par returnert av serveren."
  remarks: "Svarhoder inneholde metadatainformasjon for eksempel dato og klokkeslett i svaret, identiteten til serveren som svarer og MIME-typen for dataene i meldingsteksten svar.       For en fullstendig liste over svarhoder, kan du se den <xref:System.Net.HttpResponseHeader>opplisting.</xref:System.Net.HttpResponseHeader>      > [!NOTE] > Hvis du prøver å angi en Content-Length Behold aktiv, Transfer-Encoding, eller vil bli utløst WWW-Authenticate overskriften med egenskapen overskrifter et unntak. Bruk av <xref:System.Net.HttpListenerResponse.KeepAlive%2A>eller <xref:System.Net.HttpListenerResponse.ContentLength64%2A>Egenskaper for å angi overskriftene.</xref:System.Net.HttpListenerResponse.ContentLength64%2A> </xref:System.Net.HttpListenerResponse.KeepAlive%2A> Du kan ikke angi Transfer-Encoding eller WWW-Authenticate hodene manuelt."
  example:
  - "The following code example demonstrates displaying the headers in a <xref:System.Net.WebHeaderCollection>.  \n  \n [!code-cs[Net_Listener_Basic#23](~/add/codesnippet/csharp/p-system.net.httplistene_32_1.cs)]"
  syntax:
    content: public System.Net.WebHeaderCollection Headers { get; set; }
    return:
      type: System.Net.WebHeaderCollection
      description: "En <xref:System.Net.WebHeaderCollection>-forekomst som inneholder alle de eksplisitt satt HTTP-hoder som skal inkluderes i svaret.</xref:System.Net.WebHeaderCollection>"
  overload: System.Net.HttpListenerResponse.Headers*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref:System.Net.WebHeaderCollection>forekomsten som er angitt for en set-operasjon ikke er gyldig for svar.</xref:System.Net.WebHeaderCollection>"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.KeepAlive
  id: KeepAlive
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: KeepAlive
  nameWithType: HttpListenerResponse.KeepAlive
  fullName: System.Net.HttpListenerResponse.KeepAlive
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir en verdi som angir om serveren ber om en fast tilkobling."
  remarks: "Hvis en HTTP-klienten og serveren forventer til exchange dataene flere ganger i en kort periode, raskere en fast tilkobling kommunikasjonen ved at de kan unngå overhead må åpner og lukker en TCP-tilkobling for hver melding. Faste tilkoblinger er omfattende brukes i kommunikasjon mellom moderne nettlesere og nettservere.       Faste tilkoblinger beskrives i detalj i HTTP/1.1 protokollen spesifikasjonen (RFC 2616) tilgjengelig på webområdet for RTF redigeringsprogrammet ([http://www.rfc-editor.org](http://www.rfc-editor.org))."
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-vb[NclListener#7](~/add/codesnippet/visualbasic/p-system.net.httplistene_36_1.vb)]\n [!code-cs[NclListener#7](~/add/codesnippet/csharp/p-system.net.httplistene_36_1.cs)]"
  syntax:
    content: public bool KeepAlive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis serveren ber om en fast tilkobling; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerResponse.KeepAlive*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dette objektet er lukket."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.OutputStream
  id: OutputStream
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: OutputStream
  nameWithType: HttpListenerResponse.OutputStream
  fullName: System.Net.HttpListenerResponse.OutputStream
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter en <xref:System.IO.Stream>objekt svar kan skrives.</xref:System.IO.Stream>"
  remarks: "Den <xref:System.Net.HttpListenerResponse.ContentLength64%2A>egenskapen må angis eksplisitt før skriving til det returnerte <xref:System.IO.Stream>objektet.</xref:System.IO.Stream> </xref:System.Net.HttpListenerResponse.ContentLength64%2A>      > [!NOTE] > Lukke forespørselen ikke Lukk dataflyten som ble returnert av denne egenskapen. Når du trenger ikke lenger dataflyten, må du lukke den ved å kalle metoden Close."
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[Net_Listener_Basic#3](~/add/codesnippet/csharp/p-system.net.httplistene_44_1.cs)]"
  syntax:
    content: public System.IO.Stream OutputStream { get; }
    return:
      type: System.IO.Stream
      description: "En <xref:System.IO.Stream>objekt svar kan skrives.</xref:System.IO.Stream>"
  overload: System.Net.HttpListenerResponse.OutputStream*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dette objektet er lukket."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.ProtocolVersion
  id: ProtocolVersion
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: ProtocolVersion
  nameWithType: HttpListenerResponse.ProtocolVersion
  fullName: System.Net.HttpListenerResponse.ProtocolVersion
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir HTTP-versjonen som brukes i svaret."
  remarks: "Funksjoner i forskjellige HTTP-versjoner er angitt i dokumenter som er tilgjengelige på http://www.ietf.org."
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-vb[NclListener#5](~/add/codesnippet/visualbasic/p-system.net.httplistene_30_1.vb)]\n [!code-cs[NclListener#5](~/add/codesnippet/csharp/p-system.net.httplistene_30_1.cs)]"
  syntax:
    content: public Version ProtocolVersion { get; set; }
    return:
      type: System.Version
      description: "En <xref:System.Version>objekt som angir hvilken versjon av HTTP brukes ved å svare på klienten.</xref:System.Version> Merk at denne egenskapen er foreldet."
  overload: System.Net.HttpListenerResponse.ProtocolVersion*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Verdien som er angitt for en set-operasjon er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Verdien som er angitt for en set-operasjon ikke har den <> </> *> egenskapen satt til 1 eller har ikke den <> </> *> egenskapen satt til 0 eller 1."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dette objektet er lukket."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Redirect(System.String)
  id: Redirect(System.String)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Redirect(String)
  nameWithType: HttpListenerResponse.Redirect(String)
  fullName: System.Net.HttpListenerResponse.Redirect(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Konfigurerer svaret omadressere klienten til den angitte URL-adressen."
  remarks: "Omadressering-metoden brukes til å omadressere en klient dit for en ressurs. Denne metoden angir for `Location` overskrift til `url`, <xref:System.Net.HttpListenerResponse.StatusCode%2A>egenskapen <xref:System.Net.HttpStatusCode>, og <xref:System.Net.HttpListenerResponse.StatusDescription%2A>egenskapen &quot;Fant&quot;.</xref:System.Net.HttpListenerResponse.StatusDescription%2A> </xref:System.Net.HttpStatusCode> </xref:System.Net.HttpListenerResponse.StatusCode%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[Net_Listener_Basic#27](~/add/codesnippet/csharp/m-system.net.httplistene_11_1.cs)]"
  syntax:
    content: public void Redirect (string url);
    parameters:
    - id: url
      type: System.String
      description: "URL-en som klienten skal bruke til å finne den forespurte ressursen."
  overload: System.Net.HttpListenerResponse.Redirect*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.RedirectLocation
  id: RedirectLocation
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: RedirectLocation
  nameWithType: HttpListenerResponse.RedirectLocation
  fullName: System.Net.HttpListenerResponse.RedirectLocation
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir verdien for HTTP <xref uid=&quot;langword_csharp_Location&quot; name=&quot;Location&quot; href=&quot;&quot;> </xref> -overskrift i dette svaret."
  remarks: "Den `Location` hodet angir URL-adressen som klienten er rettet mot en forespurte ressursen.      > [!NOTE] > Innstillingen for denne egenskapen er satt av <xref:System.Net.HttpListenerResponse.StatusCode%2A>egenskapen.</xref:System.Net.HttpListenerResponse.StatusCode%2A>"
  example:
  - "The following code example demonstrates setting this property.  \n  \n [!code-cs[Net_Listener_Basic#25](~/add/codesnippet/csharp/p-system.net.httplistene_25_1.cs)]"
  syntax:
    content: public string RedirectLocation { get; set; }
    return:
      type: System.String
      description: "En <xref:System.String>som inneholder absolutt URL-adressen som skal sendes til klienten i den <xref uid=&quot;langword_csharp_Location&quot; name=&quot;Location&quot; href=&quot;&quot;> </xref> overskrift.</xref:System.String>"
  overload: System.Net.HttpListenerResponse.RedirectLocation*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Verdien som er angitt for en set-operasjon er en tom streng (&quot;&quot;)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dette objektet er lukket."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.SendChunked
  id: SendChunked
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: SendChunked
  nameWithType: HttpListenerResponse.SendChunked
  fullName: System.Net.HttpListenerResponse.SendChunked
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir om svaret bruker delvis overføring koding."
  remarks: "Meldingsteksten i en delvis melding består av en rekke biter. Hver gruppe består av to deler – størrelsen på dataene gruppen, og de faktiske dataene. Når satt til SANN svaret er sendt ved hjelp av delvis koding."
  syntax:
    content: public bool SendChunked { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis svaret er satt til å bruke delvis overføring kode. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerResponse.SendChunked*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)
  id: SetCookie(System.Net.Cookie)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: SetCookie(Cookie)
  nameWithType: HttpListenerResponse.SetCookie(Cookie)
  fullName: System.Net.HttpListenerResponse.SetCookie(Cookie)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Legger til eller oppdaterer en <xref:System.Net.Cookie>i samlingen av informasjonskapsler sendt i svaret.</xref:System.Net.Cookie>"
  remarks: "To informasjonskapsler regnes samme hvis verdiene i sin <xref:System.Net.Cookie.Name%2A>, <xref:System.Net.Cookie.Domain%2A>, og <xref:System.Net.Cookie.Path%2A>Egenskaper er like.</xref:System.Net.Cookie.Path%2A> </xref:System.Net.Cookie.Domain%2A> </xref:System.Net.Cookie.Name%2A> Hvis disse tre informasjonselementer er like, forsøker metoden å oppdatere informasjonskapselen. Sammenligninger navnet og domenet er bokstaver, men banen sammenligningen er bokstaver."
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[Net_Listener_Basic#28](~/add/codesnippet/csharp/m-system.net.httplistene_15_1.cs)]"
  syntax:
    content: public void SetCookie (System.Net.Cookie cookie);
    parameters:
    - id: cookie
      type: System.Net.Cookie
      description: "En <xref:System.Net.Cookie>for dette svaret.</xref:System.Net.Cookie>"
  overload: System.Net.HttpListenerResponse.SetCookie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>cookie</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Informasjonskapselen allerede finnes i samlingen, og kan ikke erstattes."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.StatusCode
  id: StatusCode
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: StatusCode
  nameWithType: HttpListenerResponse.StatusCode
  fullName: System.Net.HttpListenerResponse.StatusCode
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir HTTP-statuskode som skal returneres til klienten."
  remarks: "Klienter bruke statuskoden returnert av serveren til å bestemme hvordan du vil fortsette. Verdien <xref:System.Net.HttpStatusCode>indikerer at serveren ble behandlet klientens forespørsel, og den forespurte ressursen er inkludert i svar meldingsteksten.</xref:System.Net.HttpStatusCode> Andre vanlige statuskoder inkluderer <xref:System.Net.HttpStatusCode>, som angir at den forespurte ressursen ikke ble funnet på serveren, og <xref:System.Net.HttpStatusCode>, som angir at det er nødvendig å returnere den forespurte ressursen i meldingsteksten svar fordi klienten er bufret kopi av ressursen er oppdatert.</xref:System.Net.HttpStatusCode> </xref:System.Net.HttpStatusCode>       En fullstendig liste over mulige statuskoder, kan du se den <xref:System.Net.HttpStatusCode>opplisting.</xref:System.Net.HttpStatusCode>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cs[Net_Listener_Basic#7](~/add/codesnippet/csharp/p-system.net.httplistene_46_1.cs)]"
  syntax:
    content: public int StatusCode { get; set; }
    return:
      type: System.Int32
      description: "En <xref:System.Int32>verdi som angir HTTP-statuskode for den forespurte ressursen.</xref:System.Int32> Standard <xref:System.Net.HttpStatusCode>, indikerer at serveren ble behandlet klientens forespørsel, og den forespurte ressursen er inkludert i svar meldingsteksten.</xref:System.Net.HttpStatusCode>"
  overload: System.Net.HttpListenerResponse.StatusCode*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Dette objektet er lukket."
  - type: System.Net.ProtocolViolationException
    commentId: T:System.Net.ProtocolViolationException
    description: "Den angitte verdien for en set-operasjon er ikke gyldig. Gyldige verdier er mellom 100 og 999."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.StatusDescription
  id: StatusDescription
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: StatusDescription
  nameWithType: HttpListenerResponse.StatusDescription
  fullName: System.Net.HttpListenerResponse.StatusDescription
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir en beskrivelse av HTTP-statuskoden returneres til klienten."
  remarks: "Beskrivelse av status gir vanligvis detaljer som forklarer den <xref:System.Net.HttpListenerResponse.StatusCode%2A>verdi.</xref:System.Net.HttpListenerResponse.StatusCode%2A>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-vb[NclListener#7](~/add/codesnippet/visualbasic/p-system.net.httplistene_13_1.vb)]\n [!code-cs[NclListener#7](~/add/codesnippet/csharp/p-system.net.httplistene_13_1.cs)]"
  syntax:
    content: public string StatusDescription { get; set; }
    return:
      type: System.String
      description: "Beskrivelse av HTTP-statuskoden returneres til klienten. Standarden er RFC 2616 beskrivelse for den <xref:System.Net.HttpListenerResponse.StatusCode*>egenskapsverdien eller en tom streng (&quot;&quot;) Hvis en RFC 2616 beskrivelse ikke finnes.</xref:System.Net.HttpListenerResponse.StatusCode*>"
  overload: System.Net.HttpListenerResponse.StatusDescription*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Verdien som er angitt for en set-operasjon er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den angitte verdien for en set-operasjon inneholder tegn som ikke kan skrives."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: HttpListenerResponse.System.IDisposable.Dispose()
  fullName: System.Net.HttpListenerResponse.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Frigir alle ressursene som brukes av den <xref href=&quot;System.Net.HttpListenerResponse&quot;> </xref>."
  remarks: "Bruk <xref:System.Net.HttpListenerResponse.Close%2A>metoden send svaret for å frigi ressurser holdes av en <xref:System.Net.HttpListenerResponse>.</xref:System.Net.HttpListenerResponse> </xref:System.Net.HttpListenerResponse.Close%2A> Hvis du vil forkaste svaret og frigi ressurser beholdes i denne forekomsten, kan du bruke den <xref:System.Net.HttpListenerResponse.Abort%2A>metoden.</xref:System.Net.HttpListenerResponse.Abort%2A>"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Net.HttpListenerResponse.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.ProtocolViolationException
  isExternal: true
  name: System.Net.ProtocolViolationException
- uid: System.Net.HttpListenerResponse.Abort
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Abort()
  nameWithType: HttpListenerResponse.Abort()
  fullName: System.Net.HttpListenerResponse.Abort()
- uid: System.Net.HttpListenerResponse.AddHeader(System.String,System.String)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AddHeader(String,String)
  nameWithType: HttpListenerResponse.AddHeader(String,String)
  fullName: System.Net.HttpListenerResponse.AddHeader(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AppendCookie(Cookie)
  nameWithType: HttpListenerResponse.AppendCookie(Cookie)
  fullName: System.Net.HttpListenerResponse.AppendCookie(Cookie)
- uid: System.Net.Cookie
  parent: System.Net
  isExternal: true
  name: Cookie
  nameWithType: Cookie
  fullName: System.Net.Cookie
- uid: System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AppendHeader(String,String)
  nameWithType: HttpListenerResponse.AppendHeader(String,String)
  fullName: System.Net.HttpListenerResponse.AppendHeader(String,String)
- uid: System.Net.HttpListenerResponse.Close
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Close()
  nameWithType: HttpListenerResponse.Close()
  fullName: System.Net.HttpListenerResponse.Close()
- uid: System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Close(Byte[],Boolean)
  nameWithType: HttpListenerResponse.Close(Byte[],Boolean)
  fullName: System.Net.HttpListenerResponse.Close(Byte[],Boolean)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.HttpListenerResponse.ContentEncoding
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpListenerResponse.ContentEncoding
  fullName: System.Net.HttpListenerResponse.ContentEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Net.HttpListenerResponse.ContentLength64
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentLength64
  nameWithType: HttpListenerResponse.ContentLength64
  fullName: System.Net.HttpListenerResponse.ContentLength64
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.HttpListenerResponse.ContentType
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentType
  nameWithType: HttpListenerResponse.ContentType
  fullName: System.Net.HttpListenerResponse.ContentType
- uid: System.Net.HttpListenerResponse.Cookies
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Cookies
  nameWithType: HttpListenerResponse.Cookies
  fullName: System.Net.HttpListenerResponse.Cookies
- uid: System.Net.CookieCollection
  parent: System.Net
  isExternal: true
  name: CookieCollection
  nameWithType: CookieCollection
  fullName: System.Net.CookieCollection
- uid: System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: CopyFrom(HttpListenerResponse)
  nameWithType: HttpListenerResponse.CopyFrom(HttpListenerResponse)
  fullName: System.Net.HttpListenerResponse.CopyFrom(HttpListenerResponse)
- uid: System.Net.HttpListenerResponse
  parent: System.Net
  isExternal: false
  name: HttpListenerResponse
  nameWithType: HttpListenerResponse
  fullName: System.Net.HttpListenerResponse
- uid: System.Net.HttpListenerResponse.Headers
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Headers
  nameWithType: HttpListenerResponse.Headers
  fullName: System.Net.HttpListenerResponse.Headers
- uid: System.Net.WebHeaderCollection
  parent: System.Net
  isExternal: true
  name: WebHeaderCollection
  nameWithType: WebHeaderCollection
  fullName: System.Net.WebHeaderCollection
- uid: System.Net.HttpListenerResponse.KeepAlive
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: KeepAlive
  nameWithType: HttpListenerResponse.KeepAlive
  fullName: System.Net.HttpListenerResponse.KeepAlive
- uid: System.Net.HttpListenerResponse.OutputStream
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: OutputStream
  nameWithType: HttpListenerResponse.OutputStream
  fullName: System.Net.HttpListenerResponse.OutputStream
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.HttpListenerResponse.ProtocolVersion
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ProtocolVersion
  nameWithType: HttpListenerResponse.ProtocolVersion
  fullName: System.Net.HttpListenerResponse.ProtocolVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Net.HttpListenerResponse.Redirect(System.String)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Redirect(String)
  nameWithType: HttpListenerResponse.Redirect(String)
  fullName: System.Net.HttpListenerResponse.Redirect(String)
- uid: System.Net.HttpListenerResponse.RedirectLocation
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: RedirectLocation
  nameWithType: HttpListenerResponse.RedirectLocation
  fullName: System.Net.HttpListenerResponse.RedirectLocation
- uid: System.Net.HttpListenerResponse.SendChunked
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: SendChunked
  nameWithType: HttpListenerResponse.SendChunked
  fullName: System.Net.HttpListenerResponse.SendChunked
- uid: System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: SetCookie(Cookie)
  nameWithType: HttpListenerResponse.SetCookie(Cookie)
  fullName: System.Net.HttpListenerResponse.SetCookie(Cookie)
- uid: System.Net.HttpListenerResponse.StatusCode
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: StatusCode
  nameWithType: HttpListenerResponse.StatusCode
  fullName: System.Net.HttpListenerResponse.StatusCode
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.HttpListenerResponse.StatusDescription
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: StatusDescription
  nameWithType: HttpListenerResponse.StatusDescription
  fullName: System.Net.HttpListenerResponse.StatusDescription
- uid: System.Net.HttpListenerResponse.System#IDisposable#Dispose
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: HttpListenerResponse.System.IDisposable.Dispose()
  fullName: System.Net.HttpListenerResponse.System.IDisposable.Dispose()
- uid: System.Net.HttpListenerResponse.Abort*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Abort
  nameWithType: HttpListenerResponse.Abort
- uid: System.Net.HttpListenerResponse.AddHeader*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AddHeader
  nameWithType: HttpListenerResponse.AddHeader
- uid: System.Net.HttpListenerResponse.AppendCookie*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AppendCookie
  nameWithType: HttpListenerResponse.AppendCookie
- uid: System.Net.HttpListenerResponse.AppendHeader*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AppendHeader
  nameWithType: HttpListenerResponse.AppendHeader
- uid: System.Net.HttpListenerResponse.Close*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Close
  nameWithType: HttpListenerResponse.Close
- uid: System.Net.HttpListenerResponse.ContentEncoding*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpListenerResponse.ContentEncoding
- uid: System.Net.HttpListenerResponse.ContentLength64*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentLength64
  nameWithType: HttpListenerResponse.ContentLength64
- uid: System.Net.HttpListenerResponse.ContentType*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentType
  nameWithType: HttpListenerResponse.ContentType
- uid: System.Net.HttpListenerResponse.Cookies*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Cookies
  nameWithType: HttpListenerResponse.Cookies
- uid: System.Net.HttpListenerResponse.CopyFrom*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: CopyFrom
  nameWithType: HttpListenerResponse.CopyFrom
- uid: System.Net.HttpListenerResponse.Headers*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Headers
  nameWithType: HttpListenerResponse.Headers
- uid: System.Net.HttpListenerResponse.KeepAlive*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: KeepAlive
  nameWithType: HttpListenerResponse.KeepAlive
- uid: System.Net.HttpListenerResponse.OutputStream*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: OutputStream
  nameWithType: HttpListenerResponse.OutputStream
- uid: System.Net.HttpListenerResponse.ProtocolVersion*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ProtocolVersion
  nameWithType: HttpListenerResponse.ProtocolVersion
- uid: System.Net.HttpListenerResponse.Redirect*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Redirect
  nameWithType: HttpListenerResponse.Redirect
- uid: System.Net.HttpListenerResponse.RedirectLocation*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: RedirectLocation
  nameWithType: HttpListenerResponse.RedirectLocation
- uid: System.Net.HttpListenerResponse.SendChunked*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: SendChunked
  nameWithType: HttpListenerResponse.SendChunked
- uid: System.Net.HttpListenerResponse.SetCookie*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: SetCookie
  nameWithType: HttpListenerResponse.SetCookie
- uid: System.Net.HttpListenerResponse.StatusCode*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: StatusCode
  nameWithType: HttpListenerResponse.StatusCode
- uid: System.Net.HttpListenerResponse.StatusDescription*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: StatusDescription
  nameWithType: HttpListenerResponse.StatusDescription
- uid: System.Net.HttpListenerResponse.System#IDisposable#Dispose*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: HttpListenerResponse.System.IDisposable.Dispose
