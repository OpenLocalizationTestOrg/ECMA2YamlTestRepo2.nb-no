### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TreeNodeCollection
  id: TreeNodeCollection
  children:
  - System.Web.UI.WebControls.TreeNodeCollection.#ctor
  - System.Web.UI.WebControls.TreeNodeCollection.#ctor(System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.Clear
  - System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)
  - System.Web.UI.WebControls.TreeNodeCollection.Count
  - System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator
  - System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized
  - System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)
  - System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.TreeNodeCollection.SyncRoot
  - System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState
  langs:
  - csharp
  name: TreeNodeCollection
  nameWithType: TreeNodeCollection
  fullName: System.Web.UI.WebControls.TreeNodeCollection
  type: Class
  summary: "Representerer en samling av <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objekter i den <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> kontrollen. Denne klassen kan ikke arves."
  remarks: "Klassen TreeNodeCollection brukes til å lagre og behandle en samling av <xref:System.Web.UI.WebControls.TreeNode>objekter i den <xref:System.Web.UI.WebControls.TreeView>kontroll.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNode> Den <xref:System.Web.UI.WebControls.TreeView>kontrollen bruker klassen TreeNodeCollection i to av køens egenskaper.</xref:System.Web.UI.WebControls.TreeView> Den lagrer Rotnodene i den <xref:System.Web.UI.WebControls.TreeView.Nodes%2A>egenskapen og de valgte nodene i det <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>egenskapen.</xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> </xref:System.Web.UI.WebControls.TreeView.Nodes%2A> Samlingen TreeNodeCollection brukes også for den <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>til å lagre underordnede noder (Hvis noen).</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>       Klassen TreeNodeCollection støtter flere metoder for å få tilgang til elementer i samlingen:-Bruk av <xref:System.Web.UI.WebControls.TreeNodeCollection.Item%2A>indekserer til å hente en <xref:System.Web.UI.WebControls.TreeNode>objekt direkte på en bestemt nullbaserte indeksen.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeCollection.Item%2A>      -Bruk av <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>metode for å opprette en opplisting som kan brukes til å gå gjennom samlingen.</xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>      -Bruk `foreach` (C#) eller `For Each` (Visual Basic) for å gå gjennom samlingen.      -Bruk av <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A>metode for å kopiere innholdet i samlingen i et <xref:System.Array>objektet.</xref:System.Array> </xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A>       Du kan programmatisk administrere TreeNodeCollection legge til og fjerne <xref:System.Web.UI.WebControls.TreeNode>objekter.</xref:System.Web.UI.WebControls.TreeNode> Hvis du vil legge til noder i samlingen, kan du bruke den <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A>eller <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A>metode.</xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> Hvis du vil fjerne noder fra samlingen, kan du bruke den <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>, <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>, eller <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>metode.</xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>      > [!NOTE] > Når den <xref:System.Web.UI.WebControls.TreeView>kontrollen er bundet til en datakilde i <xref:System.Web.UI.WebControls.TreeView.Nodes%2A>og <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>samlinger fylles ut automatisk hver gang bindingen forekommer.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> </xref:System.Web.UI.WebControls.TreeView.Nodes%2A> </xref:System.Web.UI.WebControls.TreeView> Endringer i samlinger mellom bindinger vil gå tapt. Hvis du vil beholde disse endringene, oppdatere datakilden eller Bygg samlingen hver gang du binde manuelt.       TreeNodeCollection inneholder egenskaper og metoder som gjør det mulig å hente informasjon om samlingen seg selv. Hvis du vil finne ut hvor mange elementer som i samlingen, kan du bruke den <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A>egenskapen.</xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> Hvis du vil finne ut om samlingen inneholder en bestemt <xref:System.Web.UI.WebControls.TreeNode>objekt, bruker du den <xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A>metoden.</xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> </xref:System.Web.UI.WebControls.TreeNode> Å hente indeksen for et <xref:System.Web.UI.WebControls.TreeNode>objektet i samlingen, bruker den <xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A>metoden.</xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> </xref:System.Web.UI.WebControls.TreeNode>"
  example:
  - "The following example demonstrates how to programmatically add nodes to and remove them from a TreeNodeCollection. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties return a TreeNodeCollection object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_136_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_136_1.aspx)]"
  syntax:
    content: 'public sealed class TreeNodeCollection : System.Collections.ICollection, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: TreeNodeCollection()
  nameWithType: TreeNodeCollection.TreeNodeCollection()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.TreeNodeCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> klasse bruker standardverdiene."
  remarks: "Bruk denne konstruktøren til å initialisere en ny forekomst av den <xref:System.Web.UI.WebControls.TreeNodeCollection>klasse bruker standardverdiene.</xref:System.Web.UI.WebControls.TreeNodeCollection> Denne konstruktøren brukes vanligvis når du oppretter en samling av rotnoder der en overordnet node (eller -eier) er ikke obligatorisk.      > [!NOTE] > Når du oppretter en samling av ikke-rotnoder, bør du bruke overbelastet konstruktør som bruker den `owner` parameteren i stedet for denne konstruktøren, til å angi den overordnede noden.       Denne konstruktøren brukes hovedsakelig av kontrollutviklere."
  syntax:
    content: public TreeNodeCollection ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor(System.Web.UI.WebControls.TreeNode)
  id: '#ctor(System.Web.UI.WebControls.TreeNode)'
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: TreeNodeCollection(TreeNode)
  nameWithType: TreeNodeCollection.TreeNodeCollection(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.TreeNodeCollection(TreeNode)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> klasse med angitt overordnet node (eller eieren)."
  remarks: "Bruk denne konstruktøren til å initialisere en ny forekomst av den <xref:System.Web.UI.WebControls.TreeNodeCollection>klasse med angitt overordnet node (eller eieren).</xref:System.Web.UI.WebControls.TreeNodeCollection> Denne konstruktøren brukes vanligvis når du oppretter en samling av ikke-rotnoder der du må angi den overordnede noden.      > [!NOTE] > Når du oppretter en samling av rotnoder, kan du vurdere å bruke Standardkonstruktøren rotnoder har ikke en overordnet node.       Denne konstruktøren brukes hovedsakelig av kontrollutviklere."
  syntax:
    content: public TreeNodeCollection (System.Web.UI.WebControls.TreeNode owner);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.TreeNode
      description: "Den <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objektet som representerer den overordnede noden i samlingen."
  overload: System.Web.UI.WebControls.TreeNodeCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)
  id: Add(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Add(TreeNode)
  nameWithType: TreeNodeCollection.Add(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Add(TreeNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Legger de angitte <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objektet til slutten av den <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> objektet."
  remarks: "Bruk Add-metode til å legge til det angitte <xref:System.Web.UI.WebControls.TreeNode>objektet til slutten av <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode>      > [!NOTE] > I <xref:System.Web.UI.WebControls.TreeNodeCollection>kan du legge til nullreferanser (ingenting i Visual Basic), og den dupliserte <xref:System.Web.UI.WebControls.TreeNode>objekter.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeCollection>       Som et alternativ, du kan sette inn en <xref:System.Web.UI.WebControls.TreeNode>objekt i den <xref:System.Web.UI.WebControls.TreeNodeCollection>på en bestemt indeks ved hjelp av den <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A>metoden.</xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode>"
  example:
  - "The following example demonstrates how to use the Add method to programmatically add a node to the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties each return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/370e49fd-05e7-49aa-a3d5-_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/370e49fd-05e7-49aa-a3d5-_1.aspx)]"
  syntax:
    content: public void Add (System.Web.UI.WebControls.TreeNode child);
    parameters:
    - id: child
      type: System.Web.UI.WebControls.TreeNode
      description: "Den <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objekt for å tilføye."
  overload: System.Web.UI.WebControls.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)
  id: AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: AddAt(Int32,TreeNode)
  nameWithType: TreeNodeCollection.AddAt(Int32,TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.AddAt(Int32,TreeNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Setter inn den angitte <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objekt i en <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> objektet i den angitte indeksplasseringen."
  remarks: "Bruk metoden AddAt å sette inn den angitte <xref:System.Web.UI.WebControls.TreeNode>objekt i den <xref:System.Web.UI.WebControls.TreeNodeCollection>i den angitte nullbaserte indeksen.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode>      > [!NOTE] > Den <xref:System.Web.UI.WebControls.TreeNodeCollection>gjør det mulig å sette inn nullreferanser (ingenting i Visual Basic), og den dupliserte <xref:System.Web.UI.WebControls.TreeNode>objekter.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeCollection>       Alternativt kan du legge en <xref:System.Web.UI.WebControls.TreeNode>objektet til slutten av den <xref:System.Web.UI.WebControls.TreeNodeCollection>ved hjelp av den <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A>metoden.</xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode>"
  example:
  - "The following example demonstrates how to use the AddAt method to programmatically add a node to the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties each return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/646d7369-5544-4d90-8475-_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/646d7369-5544-4d90-8475-_1.aspx)]"
  syntax:
    content: public void AddAt (int index, System.Web.UI.WebControls.TreeNode child);
    parameters:
    - id: index
      type: System.Int32
      description: "Den nullbaserte indeksplasseringen for innsetting av <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objektet."
    - id: child
      type: System.Web.UI.WebControls.TreeNode
      description: "Den <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objekt for å legge til."
  overload: System.Web.UI.WebControls.TreeNodeCollection.AddAt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>child</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Clear
  id: Clear
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: TreeNodeCollection.Clear()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Tømmer den <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> objektet."
  remarks: "Bruk Fjern for å fjerne alle <xref:System.Web.UI.WebControls.TreeNode>objektet fra <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode>      > [!NOTE] > Du fjerner en enkelt node fra samlingen ved hjelp av <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>eller <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>metode.</xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>"
  example:
  - "The following example demonstrates how to use the Clear method to programmatically empty a <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_111_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_111_1.aspx)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)
  id: Contains(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Contains(TreeNode)
  nameWithType: TreeNodeCollection.Contains(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Contains(TreeNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Bestemmer om den angitte <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objektet er i samlingen."
  remarks: "Bruk Contains-metoden til å fastslå om en <xref:System.Web.UI.WebControls.TreeNode>objektet finnes i <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode> Denne metoden brukes vanligvis til å teste for forekomsten av en <xref:System.Web.UI.WebControls.TreeNode>objektet før du utfører en oppgave, for eksempel legge til eller fjerne noden fra samlingen.</xref:System.Web.UI.WebControls.TreeNode>"
  example:
  - "The following example demonstrates how to use the Contains method to determine whether the selected node is in the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> collection. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property returns a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-vb[TreeNodeCollectionIndexOf#1](~/add/codesnippet/visualbasic/8b0f37ed-79bf-4881-ba56-_1.aspx)]\n [!code-cs[TreeNodeCollectionIndexOf#1](~/add/codesnippet/csharp/8b0f37ed-79bf-4881-ba56-_1.aspx)]"
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.TreeNode c);
    parameters:
    - id: c
      type: System.Web.UI.WebControls.TreeNode
      description: "Den <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objektet til å finne."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den angitte <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objektet er befinner seg i samlingen; ellers, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: CopyTo(TreeNode[],Int32)
  nameWithType: TreeNodeCollection.CopyTo(TreeNode[],Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.CopyTo(TreeNode[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Kopierer alle elementer fra de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> -objekt til en kompatibel endimensjonal matrise av <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objekter, med Start fra den angitte indeksen i Målmatrisen."
  remarks: "Bruk CopyTo-metoden til å kopiere innholdet i den <xref:System.Web.UI.WebControls.TreeNodeCollection>i den angitte nullbasert <xref:System.Array?displayProperty=fullName>objektet.</xref:System.Array?displayProperty=fullName> </xref:System.Web.UI.WebControls.TreeNodeCollection> Elementene kopieres fra den angitte indeksen på Målmatrisen. Med <xref:System.Array?displayProperty=fullName>objektet, kan du deretter bruke matrisesyntaks for å få tilgang til elementer i <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Array?displayProperty=fullName>       Alternativt kan du også bruke den <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>metode for å opprette en opplisting som kan brukes til å få tilgang til elementer i samlingen.</xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>"
  example:
  - "The following example demonstrates how to use the CopyTo method to copy the values of a <xref:System.Web.UI.WebControls.TreeNodeCollection> into an array. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property returns a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionCopyTo#1](~/add/codesnippet/csharp/a62bb2b9-1097-48cf-a7f1-_1.aspx)]\n [!code-vb[TreeNodeCollectionCopyTo#1](~/add/codesnippet/visualbasic/a62bb2b9-1097-48cf-a7f1-_1.aspx)]"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.TreeNode[] nodeArray, int index);
    parameters:
    - id: nodeArray
      type: System.Web.UI.WebControls.TreeNode[]
      description: "En nullbasert matrise av <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objekter som mottar kopierte elementer fra de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>."
    - id: index
      type: System.Int32
      description: "Plasseringen i Målmatrisen vil begynne å motta kopierte innholdet."
  overload: System.Web.UI.WebControls.TreeNodeCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Count
  id: Count
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Count
  nameWithType: TreeNodeCollection.Count
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter antall elementer i den <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> objektet."
  remarks: "Bruk Count-egenskapen til å finne ut hvor mange elementer i en <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> Denne egenskapen brukes vanligvis under gjentakelse en samling til å finne den øvre grensen for samlingen. Egenskapen antall brukes også vanligvis til å finne ut om en samling er tom."
  example:
  - "The following example demonstrates how to use the Count property to determine the number of items in the <xref:System.Web.UI.WebControls.TreeNodeCollection>. It then performs a preorder traversal of the <xref:System.Web.UI.WebControls.TreeView> control to display the text of each node.  \n  \n [!code-cs[TreeNodeCollectionCount#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_146_1.aspx)]\n [!code-vb[TreeNodeCollectionCount#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_146_1.aspx)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Antall elementer i den <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: TreeNodeCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Returnerer en opplisting som kan brukes til å gå gjennom en <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> objektet."
  remarks: "Bruk GetEnumerator-metoden til å opprette en opplisting som enkelt kan være iterated til å hente hvert element i <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> Hvis du vil ha elementet som er angitt i enumeratoren, kan du bruke den <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>egenskapen.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName> Bruk den <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>metoden til å flytte til neste element.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> Hvis du skal flytte enumeratoren tilbake til starten av samlingen, kan du bruke den <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>metoden.</xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>      > [!NOTE] > Når du oppretter en opplisting eller bruker den <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>metoden, må du kalle den <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>metoden.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> </xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> Ellers elementet som representerer den <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>egenskapen er ikke definert.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>       Alternativt kan du også bruke den <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A>metode for å opprette en <xref:System.Array?displayProperty=fullName>objekt som kan brukes til å få tilgang til elementer i samlingen.</xref:System.Array?displayProperty=fullName> </xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> Et annet alternativ er å bruke en `foreach` eller `For Each` strukturen til å gå gjennom samlingen."
  example:
  - "The following example demonstrates how to use the GetEnumerator method to create an enumerator that contains root nodes of the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeNodeCollectionGetEnumerator#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_193_1.aspx)]\n [!code-vb[TreeNodeCollectionGetEnumerator#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_193_1.aspx)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "En opplisting som kan brukes til å gå gjennom den <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)
  id: IndexOf(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: IndexOf(TreeNode)
  nameWithType: TreeNodeCollection.IndexOf(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.IndexOf(TreeNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Bestemmer indeksen for den angitte <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objektet."
  remarks: "Bruk IndexOf-metoden til å fastslå den nullbaserte indeksen for den angitte <xref:System.Web.UI.WebControls.TreeNode>objekt i den <xref:System.Web.UI.WebControls.TreeNodeCollection>objektet.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode> Hvis noden ikke er i samlingen, returnerer metoden -1.      > [!NOTE] > Hvis den angitte noden vises flere ganger i samlingen, returneres indeksen for den første forekomsten."
  example:
  - "The following example demonstrates how to use the IndexOf method to determine the index of a root node. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property returns a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-vb[TreeNodeCollectionIndexOf#1](~/add/codesnippet/visualbasic/be69754f-ce4e-4152-80b4-_1.aspx)]\n [!code-cs[TreeNodeCollectionIndexOf#1](~/add/codesnippet/csharp/be69754f-ce4e-4152-80b4-_1.aspx)]"
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.TreeNode value);
    parameters:
    - id: value
      type: System.Web.UI.WebControls.TreeNode
      description: "Den <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objekt for å finne."
    return:
      type: System.Int32
      description: "Den nullbaserte indeksen for den første forekomsten av <code> value </code> i den <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>, hvis fant; ellers, -1."
  overload: System.Web.UI.WebControls.TreeNodeCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: TreeNodeCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter en verdi som angir om tilgang til den <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> er synkronisert (tråden trygt)."
  remarks: "Egenskapen IsSynchronized brukes til å angi om tilgang til den <xref:System.Web.UI.WebControls.TreeNodeCollection>er synkronisert (tråden trygt).</xref:System.Web.UI.WebControls.TreeNodeCollection> Denne egenskapen er avledet av den <xref:System.Collections.ICollection?displayProperty=fullName>klasse og overstyres for å returnere alltid `false`.</xref:System.Collections.ICollection?displayProperty=fullName>       Hvis du vil ha mer informasjon om egenskapen IsSynchronized, se den <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>-egenskapen til det <xref:System.Collections.ICollection?displayProperty=fullName>grensesnittet.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: TreeNodeCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter den <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objektet i den angitte indeksen i den <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> objektet."
  remarks: "Bruk denne indekserer til å få tilgang til en <xref:System.Web.UI.WebControls.TreeNode>objektet fra den <xref:System.Web.UI.WebControls.TreeNodeCollection>i den angitte indeksen matrise notasjon.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode> Indeksering kan du endre eller erstatte et <xref:System.Web.UI.WebControls.TreeNode>objektet i samlingen direkte.</xref:System.Web.UI.WebControls.TreeNode> Samlingen er null."
  example:
  - "The following example demonstrates how to use the indexer to access an element in the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1077_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1077_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNode this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Den nullbaserte indeksen for den <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objektet som skal hentes."
    return:
      type: System.Web.UI.WebControls.TreeNode
      description: "Den <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objektet i den angitte indeksen i den <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)
  id: Remove(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Remove(TreeNode)
  nameWithType: TreeNodeCollection.Remove(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Remove(TreeNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Fjerner det angitte <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objektet fra den <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> objektet."
  remarks: "Bruk Remove-metoden til å fjerne den angitte noden fra samlingen. Alle elementer som følger noden flyttes å fylle ut ledige posisjonen. Indeksene i flyttet elementene også oppdatert.      > [!NOTE] > I <xref:System.Web.UI.WebControls.TreeNodeCollection>kan inneholde nullreferanser (ingenting i Visual Basic), i tillegg dupliserte <xref:System.Web.UI.WebControls.TreeNode>objekter.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeCollection>       Som et alternativ, kan du fjerne en node i en bestemt indeks ved hjelp av <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>metode.</xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> Du kan også fjerne alle node i samlingen ved hjelp av den <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>metoden.</xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>"
  example:
  - "The following example demonstrates how to use the Remove method to programmatically remove a node from the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties each return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/f8fda58d-8ad1-430c-83d7-_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/f8fda58d-8ad1-430c-83d7-_1.aspx)]"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.TreeNode value);
    parameters:
    - id: value
      type: System.Web.UI.WebControls.TreeNode
      description: "Den <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objektet til å fjerne."
  overload: System.Web.UI.WebControls.TreeNodeCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: TreeNodeCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Fjerner det <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objektet i den angitte indeksplasseringen fra den <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> objektet."
  remarks: "Bruk RemoveAt for å fjerne <xref:System.Web.UI.WebControls.TreeNode>objektet i den angitte nullbaserte indeksplasseringen fra <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode> Alle elementer som følger noden flyttes å fylle ut ledige posisjonen. Indeksene i flyttet elementene også oppdatert.      > [!NOTE] > I <xref:System.Web.UI.WebControls.TreeNodeCollection>kan inneholde nullreferanser (ingenting i Visual Basic), i tillegg dupliserte <xref:System.Web.UI.WebControls.TreeNode>objekter.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeCollection>       Du kan fjerne en bestemt eventuelt <xref:System.Web.UI.WebControls.TreeNode>objektet ved hjelp av den <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>metoden.</xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> </xref:System.Web.UI.WebControls.TreeNode> Du kan også fjerne alle node i samlingen ved hjelp av den <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>metoden.</xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>"
  example:
  - "The following example demonstrates how to use the RemoveAt method to programmatically remove a node from the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties each return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_37_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_37_1.aspx)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Plasseringen nullbaserte indeksen for å fjerne-noden."
  overload: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: TreeNodeCollection.SyncRoot
  fullName: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter et objekt som kan brukes til å synkronisere tilgang til den <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> objektet."
  remarks: "Egenskapen SyncRoot gir en synkroniserte versjon av den <xref:System.Web.UI.WebControls.TreeNodeCollection>som kan brukes med synkronisering (trådmodell) code.</xref:System.Web.UI.WebControls.TreeNodeCollection>      > [!CAUTION] > I <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A>for dette klasse alltid returnerer `false`, som angir at det <xref:System.Web.UI.WebControls.TreeNodeCollection>klasse er ikke synkronisert (ikke tråden trygt).</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A>       Synkroniserer kode må utføre operasjoner på SyncRoot-objekt av den <xref:System.Web.UI.WebControls.TreeNodeCollection>, ikke direkte på den <xref:System.Web.UI.WebControls.TreeNodeCollection>seg selv.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNodeCollection> Dette sikrer ordentlig med samlinger som er avledet fra andre objekter. Nærmere bestemt den opprettholder riktig synkronisering med andre tråder som kan være samtidig endring av <xref:System.Web.UI.WebControls.TreeNodeCollection>objektet.</xref:System.Web.UI.WebControls.TreeNodeCollection>      > [!NOTE] > Objektet returnerte i denne implementeringen av <xref:System.Collections.ArrayList?displayProperty=fullName>objektet brukes til å lagre den <xref:System.Web.UI.WebControls.TreeNode>objekter i samlingen.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Collections.ArrayList?displayProperty=fullName>       Lister opp i en samling vil si gjelder ikke sikker. Selv når en samling synkroniseres, kan andre tråder fortsatt endre samlingen, som fører til at enumeratoren til Iverksett et unntak. For å garantere tråd sikkerhetsnivået under opplisting, kan du låse samlingen under hele opplistingen eller opp unntak som er et resultat av endringer foretatt av andre tråder.       For mer informasjon om den <xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A>egenskapen se den <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>-egenskapen til det <xref:System.Collections.ICollection?displayProperty=fullName>grensesnittet.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "En &lt;xref:System.Object?displayProperty=fullName&gt; som kan brukes til å synkronisere tilgang til den <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: TreeNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Kopierer alle elementer fra de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> -objekt til en kompatibel endimensjonal &lt;xref:System.Array?displayProperty=fullName&gt;, med Start fra den angitte indeksen i Målmatrisen."
  remarks: "Bruk av <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A>metode for å kopiere innholdet i den <xref:System.Web.UI.WebControls.TreeNodeCollection>i den angitte nullbasert <xref:System.Array?displayProperty=fullName>objektet.</xref:System.Array?displayProperty=fullName> </xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> Elementene kopieres fra den angitte indeksen på Målmatrisen. Med <xref:System.Array?displayProperty=fullName>objektet, kan du deretter bruke matrisesyntaks for å få tilgang til elementer i <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Array?displayProperty=fullName>       Alternativt kan du også bruke den <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>metode for å opprette en opplisting som kan brukes til å få tilgang til elementer i samlingen.</xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>"
  example:
  - "The following example demonstrates how to use the <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> method to copy the values of a <xref:System.Web.UI.WebControls.TreeNodeCollection> into an array. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property returns a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionCopyTo#1](~/add/codesnippet/csharp/58422549-a31a-41f3-a6a6-_1.aspx)]\n [!code-vb[TreeNodeCollectionCopyTo#1](~/add/codesnippet/visualbasic/58422549-a31a-41f3-a6a6-_1.aspx)]"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "En nullbasert &lt;xref:System.Array?displayProperty=fullName&gt; objektet som skal motta kopierte elementer fra de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>."
    - id: index
      type: System.Int32
      description: "Plasseringen i Målmatrisen vil begynne å motta kopierte innholdet."
  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>er ikke en matrise av <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objekter."
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter en verdi som angir om den <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> objektet er lagrer endringer i visningsstatusen."
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis kontrollen er merket for å lagre tilstanden; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Laster inn den <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> objektet tidligere lagrede visningsstatusen."
  syntax:
    content: void IStateManager.LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "En &lt;xref:System.Object?displayProperty=fullName&gt; som inneholder verdiene lagrede visningen."
  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lagrer endringer for å vise statusen til en &lt;xref:System.Object?displayProperty=fullName&gt;."
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "Den &lt;xref:System.Object?displayProperty=fullName&gt; som inneholder visningen tilstandsendringer."
  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Angir at det <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> å spore endringer i visningsstatusen."
  remarks: "Når denne metoden er kalt på en serverkontroll av <xref:System.Web.UI.Control.IsTrackingViewState%2A>egenskapen returnere `true`.</xref:System.Web.UI.Control.IsTrackingViewState%2A>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: TreeNodeCollection()
  nameWithType: TreeNodeCollection.TreeNodeCollection()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.TreeNodeCollection()
- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: TreeNodeCollection(TreeNode)
  nameWithType: TreeNodeCollection.TreeNodeCollection(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.TreeNodeCollection(TreeNode)
- uid: System.Web.UI.WebControls.TreeNode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Web.UI.WebControls.TreeNode
- uid: System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Add(TreeNode)
  nameWithType: TreeNodeCollection.Add(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Add(TreeNode)
- uid: System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: AddAt(Int32,TreeNode)
  nameWithType: TreeNodeCollection.AddAt(Int32,TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.AddAt(Int32,TreeNode)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TreeNodeCollection.Clear
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Clear()
  nameWithType: TreeNodeCollection.Clear()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Clear()
- uid: System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Contains(TreeNode)
  nameWithType: TreeNodeCollection.Contains(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Contains(TreeNode)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: CopyTo(TreeNode[],Int32)
  nameWithType: TreeNodeCollection.CopyTo(TreeNode[],Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.CopyTo(TreeNode[],Int32)
- uid: System.Web.UI.WebControls.TreeNode[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Web.UI.WebControls.TreeNode[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.TreeNode
    name: TreeNode
    nameWithType: TreeNode
    fullName: TreeNode[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.TreeNodeCollection.Count
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Count
  nameWithType: TreeNodeCollection.Count
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Count
- uid: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: TreeNodeCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: IndexOf(TreeNode)
  nameWithType: TreeNodeCollection.IndexOf(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.IndexOf(TreeNode)
- uid: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: TreeNodeCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized
- uid: System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: TreeNodeCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Item(Int32)
- uid: System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Remove(TreeNode)
  nameWithType: TreeNodeCollection.Remove(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Remove(TreeNode)
- uid: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: TreeNodeCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: SyncRoot
  nameWithType: TreeNodeCollection.SyncRoot
  fullName: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: TreeNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: TreeNodeCollection
  nameWithType: TreeNodeCollection.TreeNodeCollection
- uid: System.Web.UI.WebControls.TreeNodeCollection.Add*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Add
  nameWithType: TreeNodeCollection.Add
- uid: System.Web.UI.WebControls.TreeNodeCollection.AddAt*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: AddAt
  nameWithType: TreeNodeCollection.AddAt
- uid: System.Web.UI.WebControls.TreeNodeCollection.Clear*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Clear
  nameWithType: TreeNodeCollection.Clear
- uid: System.Web.UI.WebControls.TreeNodeCollection.Contains*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Contains
  nameWithType: TreeNodeCollection.Contains
- uid: System.Web.UI.WebControls.TreeNodeCollection.CopyTo*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: CopyTo
  nameWithType: TreeNodeCollection.CopyTo
- uid: System.Web.UI.WebControls.TreeNodeCollection.Count*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Count
  nameWithType: TreeNodeCollection.Count
- uid: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: TreeNodeCollection.GetEnumerator
- uid: System.Web.UI.WebControls.TreeNodeCollection.IndexOf*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: IndexOf
  nameWithType: TreeNodeCollection.IndexOf
- uid: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: TreeNodeCollection.IsSynchronized
- uid: System.Web.UI.WebControls.TreeNodeCollection.Item*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Item
  nameWithType: TreeNodeCollection.Item
- uid: System.Web.UI.WebControls.TreeNodeCollection.Remove*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Remove
  nameWithType: TreeNodeCollection.Remove
- uid: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: RemoveAt
  nameWithType: TreeNodeCollection.RemoveAt
- uid: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: SyncRoot
  nameWithType: TreeNodeCollection.SyncRoot
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: TreeNodeCollection.System.Collections.ICollection.CopyTo
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState
