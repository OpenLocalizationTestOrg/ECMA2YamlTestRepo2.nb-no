### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.SecurityPermission
  id: SecurityPermission
  children:
  - System.Security.Permissions.SecurityPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.SecurityPermission.#ctor(System.Security.Permissions.SecurityPermissionFlag)
  - System.Security.Permissions.SecurityPermission.Copy
  - System.Security.Permissions.SecurityPermission.Flags
  - System.Security.Permissions.SecurityPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.SecurityPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.SecurityPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.SecurityPermission.IsUnrestricted
  - System.Security.Permissions.SecurityPermission.ToXml
  - System.Security.Permissions.SecurityPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: SecurityPermission
  nameWithType: SecurityPermission
  fullName: System.Security.Permissions.SecurityPermission
  type: Class
  summary: "Beskriver et sett med sikkerhetstillatelser gjelder code. Denne klassen kan ikke arves."
  remarks: "Denne tillatelsen bruker den <xref:System.Security.Permissions.SecurityPermissionFlag>opplisting.</xref:System.Security.Permissions.SecurityPermissionFlag> Verdier for denne opplistingen finner i dokumentasjonen."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class SecurityPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.SecurityPermission
  langs:
  - csharp
  name: SecurityPermission(PermissionState)
  nameWithType: SecurityPermission.SecurityPermission(PermissionState)
  fullName: System.Security.Permissions.SecurityPermission.SecurityPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Permissions.SecurityPermission&quot;> </xref> klassen med begrenset eller ubegrenset tilgang som er angitt."
  remarks: "Oppretter en fullstendig begrenset (`None`) eller `Unrestricted` tilgang til alle sikkerhetstillatelser."
  syntax:
    content: public SecurityPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Én av de <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> verdier."
  overload: System.Security.Permissions.SecurityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> state </code> parameteren er ikke en gyldig verdi for <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermission.#ctor(System.Security.Permissions.SecurityPermissionFlag)
  id: '#ctor(System.Security.Permissions.SecurityPermissionFlag)'
  parent: System.Security.Permissions.SecurityPermission
  langs:
  - csharp
  name: SecurityPermission(SecurityPermissionFlag)
  nameWithType: SecurityPermission.SecurityPermission(SecurityPermissionFlag)
  fullName: System.Security.Permissions.SecurityPermission.SecurityPermission(SecurityPermissionFlag)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Permissions.SecurityPermission&quot;> </xref> klassen med tilstanden angitt første sett av flaggene."
  remarks: ''
  example:
  - "The following code example shows the use of the SecurityPermission constructor to create instances of the <xref:System.Security.Permissions.SecurityPermission> class that are used to demand security permissions.  For the complete code example, see the <xref:System.Security.Permissions.SecurityPermissionAttribute.%23ctor%28System.Security.Permissions.SecurityAction%29> constructor.  \n  \n [!code-cs[System.Security.Permissions.SecurityPermissionAttribute#18](~/add/codesnippet/csharp/d0b0f9d1-82bd-4e97-862e-_1.cs)]\n [!code-cpp[System.Security.Permissions.SecurityPermissionAttribute#18](~/add/codesnippet/cpp/d0b0f9d1-82bd-4e97-862e-_1.cpp)]\n [!code-vb[System.Security.Permissions.SecurityPermissionAttribute#18](~/add/codesnippet/visualbasic/d0b0f9d1-82bd-4e97-862e-_1.vb)]"
  syntax:
    content: public SecurityPermission (System.Security.Permissions.SecurityPermissionFlag flag);
    parameters:
    - id: flag
      type: System.Security.Permissions.SecurityPermissionFlag
      description: "Den første tilstanden til tillatelsen, representert av en bitvis OR-kombinasjon av en tillatelse biter som er definert av <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>."
  overload: System.Security.Permissions.SecurityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> flag </code> parameteren er ikke en gyldig verdi for <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermission.Copy
  id: Copy
  parent: System.Security.Permissions.SecurityPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: SecurityPermission.Copy()
  fullName: System.Security.Permissions.SecurityPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Oppretter og returnerer en identisk kopi av gjeldende tillatelse."
  remarks: "En kopi av en tillatelse representerer samme tilgang til ressurser som den opprinnelige tillatelsen."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "En kopi av gjeldende tillatelse."
  overload: System.Security.Permissions.SecurityPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermission.Flags
  id: Flags
  parent: System.Security.Permissions.SecurityPermission
  langs:
  - csharp
  name: Flags
  nameWithType: SecurityPermission.Flags
  fullName: System.Security.Permissions.SecurityPermission.Flags
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Henter eller angir sikkerheten tillatelse flagg."
  remarks: "Individuelle tillatelse biter kan beregnes ved å utføre en AND-operasjon fra denne verdien, og søk etter ikke er null."
  syntax:
    content: public System.Security.Permissions.SecurityPermissionFlag Flags { get; set; }
    return:
      type: System.Security.Permissions.SecurityPermissionFlag
      description: "Status for den gjeldende tillatelsen som er representert av en bitvis OR-kombinasjon av en tillatelse biter som er definert av <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>."
  overload: System.Security.Permissions.SecurityPermission.Flags*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Er gjort forsøk på å angi denne egenskapen til en ugyldig verdi. Se <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> for gyldige verdier."
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.SecurityPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: SecurityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.SecurityPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Rekonstruerer en tillatelse med en angitt tilstand fra en XML-koding."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "XML-koding til å bruke Bygg opp tillatelsen."
  overload: System.Security.Permissions.SecurityPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> esd </code> -parameteren er ikke et gyldig tillatelse-element.       - eller - <code> esd </code> versjonsnummeret for parameteren støttes ikke."
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.SecurityPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: SecurityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.SecurityPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Oppretter og returnerer en tillatelse som er i skjæringspunktet mellom den gjeldende tillatelsene og angitt."
  remarks: "Skjæringspunktet mellom to tillatelsene er en tillatelse som beskriver tilstanden begge beskriver felles. En forespørsel som sender begge opprinnelige tillatelser vil sende skjæringspunktet."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Tillatelse til å intersect med gjeldende tillatelse. Det må være av samme type som gjeldende tillatelse."
    return:
      type: System.Security.IPermission
      description: "Et nytt tillatelse-objekt som representerer skjæringspunktet for den gjeldende tillatelsene og angitt. Denne nye tillatelsen er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis skjæringspunktet er tom."
  overload: System.Security.Permissions.SecurityPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> target </code> -parameteren er ikke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> og er ikke av samme type som gjeldende tillatelse."
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.SecurityPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: SecurityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.SecurityPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Avgjør om gjeldende tillatelsen er et delsett av den angitte tillatelsen."
  remarks: "Gjeldende tillatelsen er et delsett av den angitte tillatelsen hvis gjeldende tillatelsen angir et sett med operasjoner som helt finnes i den angitte tillatelsen. For eksempel en tillatelse som representerer tilgang til C:\\example.txt er et delsett for en tillatelse som representerer tilgang til C:\\\\. Hvis denne metoden returnerer `true`, gjeldende tillatelsen representerer ingen flere tilgang til beskyttet ressurs enn den angitte tillatelsen."
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Tillatelse som skal testes for delsett-relasjonen. Denne tillatelsen må være av samme type som gjeldende tillatelse."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den gjeldende tillatelsen er et delsett av den angitte tillatelsen. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.SecurityPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> target </code> -parameteren er ikke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> og er ikke av samme type som gjeldende tillatelse."
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Security.Permissions.SecurityPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: SecurityPermission.IsUnrestricted()
  fullName: System.Security.Permissions.SecurityPermission.IsUnrestricted()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Returnerer en verdi som angir om den gjeldende tillatelsen er ubegrenset."
  remarks: "En ubegrenset tilgang representerer tilgang til alle ressurser som er beskyttet av tillatelsen."
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den gjeldende tillatelsen er ubegrenset; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.SecurityPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.SecurityPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: SecurityPermission.ToXml()
  fullName: System.Security.Permissions.SecurityPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Oppretter en XML-koding av tillatelsen og den gjeldende tilstanden."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "XML-koding for tillatelse, inkludert tilstandsinformasjon."
  overload: System.Security.Permissions.SecurityPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.SecurityPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: SecurityPermission.Union(IPermission)
  fullName: System.Security.Permissions.SecurityPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Oppretter en tillatelse som Unionen av de gjeldende tillatelsene og angitt."
  remarks: "Resultatet av et kall til Union er en tillatelse som representerer alle operasjoner som er representert av både den gjeldende tillatelsene og angitt. En forespørsel som sender enten tillatelse sender sine union."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Tillatelse til å kombineres med gjeldende tillatelse. Det må være av samme type som gjeldende tillatelse."
    return:
      type: System.Security.IPermission
      description: "En ny tillatelse som representerer Unionen av de gjeldende tillatelsene og angitt."
  overload: System.Security.Permissions.SecurityPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> target </code> -parameteren er ikke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> og er ikke av samme type som gjeldende tillatelse."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Permissions.SecurityPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.SecurityPermission
  isExternal: false
  name: SecurityPermission(PermissionState)
  nameWithType: SecurityPermission.SecurityPermission(PermissionState)
  fullName: System.Security.Permissions.SecurityPermission.SecurityPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.SecurityPermission.#ctor(System.Security.Permissions.SecurityPermissionFlag)
  parent: System.Security.Permissions.SecurityPermission
  isExternal: false
  name: SecurityPermission(SecurityPermissionFlag)
  nameWithType: SecurityPermission.SecurityPermission(SecurityPermissionFlag)
  fullName: System.Security.Permissions.SecurityPermission.SecurityPermission(SecurityPermissionFlag)
- uid: System.Security.Permissions.SecurityPermissionFlag
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityPermissionFlag
  nameWithType: SecurityPermissionFlag
  fullName: System.Security.Permissions.SecurityPermissionFlag
- uid: System.Security.Permissions.SecurityPermission.Copy
  parent: System.Security.Permissions.SecurityPermission
  isExternal: false
  name: Copy()
  nameWithType: SecurityPermission.Copy()
  fullName: System.Security.Permissions.SecurityPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.SecurityPermission.Flags
  parent: System.Security.Permissions.SecurityPermission
  isExternal: false
  name: Flags
  nameWithType: SecurityPermission.Flags
  fullName: System.Security.Permissions.SecurityPermission.Flags
- uid: System.Security.Permissions.SecurityPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.SecurityPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: SecurityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.SecurityPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.SecurityPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.SecurityPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: SecurityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.SecurityPermission.Intersect(IPermission)
- uid: System.Security.Permissions.SecurityPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.SecurityPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: SecurityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.SecurityPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.SecurityPermission.IsUnrestricted
  parent: System.Security.Permissions.SecurityPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: SecurityPermission.IsUnrestricted()
  fullName: System.Security.Permissions.SecurityPermission.IsUnrestricted()
- uid: System.Security.Permissions.SecurityPermission.ToXml
  parent: System.Security.Permissions.SecurityPermission
  isExternal: false
  name: ToXml()
  nameWithType: SecurityPermission.ToXml()
  fullName: System.Security.Permissions.SecurityPermission.ToXml()
- uid: System.Security.Permissions.SecurityPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.SecurityPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: SecurityPermission.Union(IPermission)
  fullName: System.Security.Permissions.SecurityPermission.Union(IPermission)
- uid: System.Security.Permissions.SecurityPermission.#ctor*
  parent: System.Security.Permissions.SecurityPermission
  isExternal: false
  name: SecurityPermission
  nameWithType: SecurityPermission.SecurityPermission
- uid: System.Security.Permissions.SecurityPermission.Copy*
  parent: System.Security.Permissions.SecurityPermission
  isExternal: false
  name: Copy
  nameWithType: SecurityPermission.Copy
- uid: System.Security.Permissions.SecurityPermission.Flags*
  parent: System.Security.Permissions.SecurityPermission
  isExternal: false
  name: Flags
  nameWithType: SecurityPermission.Flags
- uid: System.Security.Permissions.SecurityPermission.FromXml*
  parent: System.Security.Permissions.SecurityPermission
  isExternal: false
  name: FromXml
  nameWithType: SecurityPermission.FromXml
- uid: System.Security.Permissions.SecurityPermission.Intersect*
  parent: System.Security.Permissions.SecurityPermission
  isExternal: false
  name: Intersect
  nameWithType: SecurityPermission.Intersect
- uid: System.Security.Permissions.SecurityPermission.IsSubsetOf*
  parent: System.Security.Permissions.SecurityPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: SecurityPermission.IsSubsetOf
- uid: System.Security.Permissions.SecurityPermission.IsUnrestricted*
  parent: System.Security.Permissions.SecurityPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: SecurityPermission.IsUnrestricted
- uid: System.Security.Permissions.SecurityPermission.ToXml*
  parent: System.Security.Permissions.SecurityPermission
  isExternal: false
  name: ToXml
  nameWithType: SecurityPermission.ToXml
- uid: System.Security.Permissions.SecurityPermission.Union*
  parent: System.Security.Permissions.SecurityPermission
  isExternal: false
  name: Union
  nameWithType: SecurityPermission.Union
