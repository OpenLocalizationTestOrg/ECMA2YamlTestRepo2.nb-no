### YamlMime:ManagedReference
items:
- uid: System.Security.RightsManagement.CryptoProvider
  id: CryptoProvider
  children:
  - System.Security.RightsManagement.CryptoProvider.BlockSize
  - System.Security.RightsManagement.CryptoProvider.BoundGrants
  - System.Security.RightsManagement.CryptoProvider.CanDecrypt
  - System.Security.RightsManagement.CryptoProvider.CanEncrypt
  - System.Security.RightsManagement.CryptoProvider.CanMergeBlocks
  - System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])
  - System.Security.RightsManagement.CryptoProvider.Dispose
  - System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)
  - System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])
  - System.Security.RightsManagement.CryptoProvider.Finalize
  langs:
  - csharp
  name: CryptoProvider
  nameWithType: CryptoProvider
  fullName: System.Security.RightsManagement.CryptoProvider
  type: Class
  summary: "Gir digital rights management-tjenester for kryptering og dekryptering beskyttet innhold."
  remarks: "CryptoProvider opprettes som et resultat av <xref:System.Security.RightsManagement.UseLicense.Bind%2A>metoden ved binding en administrert rettigheter <xref:System.Security.RightsManagement.UseLicense>til <xref:System.Security.RightsManagement.SecureEnvironment>.</xref:System.Security.RightsManagement.SecureEnvironment> </xref:System.Security.RightsManagement.UseLicense> </xref:System.Security.RightsManagement.UseLicense.Bind%2A>       Som med andre <xref:System.Security.RightsManagement>typer CryptoProvider brukes bare i fullstendig klarering programmer.</xref:System.Security.RightsManagement>"
  example:
  - "The following example shows how to use the CryptoProvider class to create an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubencrypt)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubencrypt)]"
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public class CryptoProvider : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.RightsManagement.CryptoProvider.BlockSize
  id: BlockSize
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: BlockSize
  nameWithType: CryptoProvider.BlockSize
  fullName: System.Security.RightsManagement.CryptoProvider.BlockSize
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Henter den cipher blokkstørrelsen, i byte."
  remarks: "Den `clearText` og `cipherText` buffere sendt til <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>og <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>må være n * Blokkstørrelse byte, der &quot;n&quot; er et heltall større enn eller lik 1.</xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> </xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>       Hvis <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A>er `false`, bufrer sendt til <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>må ha samme lengde som bufferne sendt til <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.</xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> </xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> </xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A>       Hvis <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A>er `true`, bufrer sendt til <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>kan være en annen lengde fra buffere som er sendt til <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>(alle bufferstørrelser må fremdeles alltid være et multiplum av Blokkstørrelse byte).</xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> </xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> </xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A>       Blokkstørrelse 1 angir at cipher er en dataflyt chiffrering; Blokkstørrelse 2 eller høyere angir en blokkchiffrering."
  example:
  - "The following example shows how to use the BlockSize property in converting clear-text data to encrypted-text data.  \n  \n [!code-vb[RightsManagedContentPublish#RmContPubEncrypt](~/add/codesnippet/visualbasic/rmcontentpublish/window1.xaml.vb#rmcontpubencrypt)]\n [!code-cs[RightsManagedContentPublish#RmContPubEncrypt](~/add/codesnippet/csharp/RmContentPublish/Window1.xaml.cs#rmcontpubencrypt)]"
  syntax:
    content: public int BlockSize { get; }
    return:
      type: System.Int32
      description: "Den cipher blokkstørrelsen, i byte.  Standard blokkstørrelse for [!INCLUDE[TLA#tla_aes](~/add/includes/tlasharptla-aes-md.md)] er 8."
  overload: System.Security.RightsManagement.CryptoProvider.BlockSize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.CryptoProvider.BoundGrants
  id: BoundGrants
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: BoundGrants
  nameWithType: CryptoProvider.BoundGrants
  fullName: System.Security.RightsManagement.CryptoProvider.BoundGrants
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Henter en samling med rettigheter som ble sendt bekreftelse og som er gitt til brukeren."
  remarks: ''
  example:
  - "The following example shows how to use the BoundGrants property to obtain a list rights granted through a <xref:System.Security.RightsManagement.UseLicense>.  \n  \n [!code-vb[RightsManagedContentViewer#RmContViewUseLicense](~/add/codesnippet/visualbasic/rmcontentviewer/window1.xaml.vb#rmcontviewuselicense)]\n [!code-cs[RightsManagedContentViewer#RmContViewUseLicense](~/add/codesnippet/csharp/RmContentViewer/Window1.xaml.cs#rmcontviewuselicense)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Security.RightsManagement.ContentGrant> BoundGrants { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.RightsManagement.ContentGrant}
      description: "En samling opplisting av rettigheter som ble sendt bekreftelse, og som er gitt til brukeren."
  overload: System.Security.RightsManagement.CryptoProvider.BoundGrants*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.CryptoProvider.CanDecrypt
  id: CanDecrypt
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: CanDecrypt
  nameWithType: CryptoProvider.CanDecrypt
  fullName: System.Security.RightsManagement.CryptoProvider.CanDecrypt
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Henter en verdi som angir om brukeren har rettigheter til å dekryptere."
  remarks: "Returnerer CanDecrypt **true** hvis den <xref:System.Security.RightsManagement.UseLicense>bundet til dette <xref:System.Security.RightsManagement.CryptoProvider>gir brukeren rettigheter for lesetilgang for eksempel Vis, Rediger, Skriv ut eller eieren.</xref:System.Security.RightsManagement.CryptoProvider> </xref:System.Security.RightsManagement.UseLicense>"
  example:
  - "The following example shows how to use the CanDecrypt property to determine if decryption is allowed.  \n  \n [!code-vb[RightsManagedContentViewer#RmContViewUseLicense](~/add/codesnippet/visualbasic/rmcontentviewer/window1.xaml.vb#rmcontviewuselicense)]\n [!code-cs[RightsManagedContentViewer#RmContViewUseLicense](~/add/codesnippet/csharp/RmContentViewer/Window1.xaml.cs#rmcontviewuselicense)]"
  syntax:
    content: public bool CanDecrypt { get; }
    return:
      type: System.Boolean
      description: '**TRUE** hvis den <xref href=&quot;System.Security.RightsManagement.UseLicense&quot;> </xref> gir brukerrettigheter til å dekryptere; ellers **false**.'
  overload: System.Security.RightsManagement.CryptoProvider.CanDecrypt*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.CryptoProvider.CanEncrypt
  id: CanEncrypt
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: CanEncrypt
  nameWithType: CryptoProvider.CanEncrypt
  fullName: System.Security.RightsManagement.CryptoProvider.CanEncrypt
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Henter en verdi som angir om brukeren har rettigheter til å kryptere."
  remarks: "<xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A>Returnerer **true** hvis den <xref:System.Security.RightsManagement.UseLicense>bundet til dette <xref:System.Security.RightsManagement.CryptoProvider>gir brukeren rettigheter for skrivetilgang for eksempel Rediger eller -eier.</xref:System.Security.RightsManagement.CryptoProvider> </xref:System.Security.RightsManagement.UseLicense></xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A>"
  syntax:
    content: public bool CanEncrypt { get; }
    return:
      type: System.Boolean
      description: '**TRUE** hvis den <xref href=&quot;System.Security.RightsManagement.UseLicense&quot;> </xref> gir brukerrettigheter til å kryptere; ellers **false**.'
  overload: System.Security.RightsManagement.CryptoProvider.CanEncrypt*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.CryptoProvider.CanMergeBlocks
  id: CanMergeBlocks
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: CanMergeBlocks
  nameWithType: CryptoProvider.CanMergeBlocks
  fullName: System.Security.RightsManagement.CryptoProvider.CanMergeBlocks
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Henter en verdi som angir om <> </> *> og <> </> *> godtar buffere som er forskjellig blokker størrelser lang."
  remarks: "Den `clearText` og `cipherText` buffere sendt til <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>og <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>må være n* <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> byte, der &quot;n&quot; er et heltall større enn eller lik 1.</xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> </xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> </xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>       Hvis CanMergeBlocks * *false**, bufrer sendt til <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>må ha samme lengde som bufferne sendt til <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.</xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> </xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>       Hvis CanMergeBlocks * *true**, bufrer sendt til <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>kan være en annen lengde fra buffere som er sendt til <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>(alle bufferstørrelser fortsatt alltid må være et multiplum av <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A>byte).</xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> </xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> </xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>"
  syntax:
    content: public bool CanMergeBlocks { get; }
    return:
      type: System.Boolean
      description: '**TRUE** Hvis bufferen som ble sendt til <> </> *> kan være en annen lengde fra bufferen som ble sendt til <> </> *>; ellers **false** Hvis bufferne sendt til <> </> *> og <> </> *> må ha nøyaktig samme lengde.  For [!INCLUDE[TLA#tla_aes](~/add/includes/tlasharptla-aes-md.md)] standard **true**.'
  overload: System.Security.RightsManagement.CryptoProvider.CanMergeBlocks*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])
  id: Decrypt(System.Byte[])
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: Decrypt(Byte[])
  nameWithType: CryptoProvider.Decrypt(Byte[])
  fullName: System.Security.RightsManagement.CryptoProvider.Decrypt(Byte[])
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Dekrypterer cipher tekst for å fjerne tekst."
  remarks: ''
  example:
  - "The following example shows how to use the Decrypt method to convert encrypted data to unencrypted data.  \n  \n [!code-vb[RightsManagedContentViewer#RmContViewDecrypt](~/add/codesnippet/visualbasic/rmcontentviewer/window1.xaml.vb#rmcontviewdecrypt)]\n [!code-cs[RightsManagedContentViewer#RmContViewDecrypt](~/add/codesnippet/csharp/RmContentViewer/Window1.xaml.cs#rmcontviewdecrypt)]"
  syntax:
    content: public byte[] Decrypt (byte[] cryptoText);
    parameters:
    - id: cryptoText
      type: System.Byte[]
      description: "Sifferkodetekst dekryptere."
    return:
      type: System.Byte[]
      description: "Den dekrypterte klartekst av <code> cryptoText </code>."
  overload: System.Security.RightsManagement.CryptoProvider.Decrypt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>cipherText</code>er null."
  - type: System.Security.RightsManagement.RightsManagementException
    commentId: T:System.Security.RightsManagement.RightsManagementException
    description: "Dekryptering akkurat ikke gitt."
  platform:
  - net462
- uid: System.Security.RightsManagement.CryptoProvider.Dispose
  id: Dispose
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: Dispose()
  nameWithType: CryptoProvider.Dispose()
  fullName: System.Security.RightsManagement.CryptoProvider.Dispose()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Frigir alle ressursene som brukes av den <xref href=&quot;System.Security.RightsManagement.CryptoProvider&quot;> </xref>."
  remarks: "Avhending utfører <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(~ / add/includes/ajax-current-ext-md.md).</xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>       Kall avhending når du er ferdig med <xref:System.Security.RightsManagement.CryptoProvider>.</xref:System.Security.RightsManagement.CryptoProvider> Fjerningsmetoden forlater den <xref:System.Security.RightsManagement.CryptoProvider>i en ubrukelig tilstand.</xref:System.Security.RightsManagement.CryptoProvider> Etter å avhending, må du frigi alle referanser til den <xref:System.Security.RightsManagement.CryptoProvider>Slik saneringsoppsamlingen kan gjenvinne minnet som den <xref:System.Security.RightsManagement.CryptoProvider>ble bruker.</xref:System.Security.RightsManagement.CryptoProvider> </xref:System.Security.RightsManagement.CryptoProvider> Hvis du vil ha mer informasjon, se [Rydder opp uforvaltede ressurser](~/add/includes/ajax-current-ext-md.md) og [implementere metoden fjerne](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Alltid kall fjerne før du slipper siste referanse til <xref:System.Security.RightsManagement.CryptoProvider>.</xref:System.Security.RightsManagement.CryptoProvider> Ellers ressurser den bruker vil ikke bli frigjort før saneringsoppsamling kall av <xref:System.Security.RightsManagement.CryptoProvider>objektets `Finalize` metode.</xref:System.Security.RightsManagement.CryptoProvider>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.RightsManagement.CryptoProvider.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: CryptoProvider.Dispose(Boolean)
  fullName: System.Security.RightsManagement.CryptoProvider.Dispose(Boolean)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Frigir uforvaltede ressursene som brukes av den <xref href=&quot;System.Security.RightsManagement.CryptoProvider&quot;> </xref> og eventuelt frigir administrerte ressurser."
  remarks: "Denne metoden kalles av offentlig `Dispose()`metoden og <xref:System.Object.Finalize%2A>metode.</xref:System.Object.Finalize%2A> `Dispose()`Aktiverer den beskyttede `Dispose(Boolean)` metoden med den `disposing` parameteren satt til `true`. <xref:System.Object.Finalize%2A>aktiverer `Dispose` med `disposing` satt til `false`.</xref:System.Object.Finalize%2A>       Når den `disposing` -parameteren er SANN, denne metoden Frigjør alle ressurser holdes av administrerte objekter som denne <xref:System.Security.RightsManagement.CryptoProvider>referanser.</xref:System.Security.RightsManagement.CryptoProvider> Denne metoden starter den `Dispose()` metode for hver referert objekt."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>å frigjøre både administrerte og uforvaltede ressurser. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> frigi bare uforvaltede ressurser."
  overload: System.Security.RightsManagement.CryptoProvider.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])
  id: Encrypt(System.Byte[])
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: Encrypt(Byte[])
  nameWithType: CryptoProvider.Encrypt(Byte[])
  fullName: System.Security.RightsManagement.CryptoProvider.Encrypt(Byte[])
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Krypterer ren tekst for å cipher tekst."
  remarks: "Byte lang den `clearText` bufferen må være et multiplum av cipher <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A>egenskapen.</xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A>       Digitalt rights management system bruker [!INCLUDE[TLA#tla_aes](~/add/includes/tlasharptla-aes-md.md)] blokker cipher.  Med [!INCLUDE[TLA2#tla_aes](~/add/includes/tla2sharptla-aes-md.md)], som er kryptert uavhengig slik at to blokker med identiske klartekst gi identiske cipher teksten resultater.  For å minimere potensielle trusler for dekryptering fra uavhengige block-kryptering, må programmer bruker metodene for å endre innholdet, for eksempel komprimering for å unngå kryptering identiske klartekst blokker."
  example:
  - "The following example shows how to use the Encrypt method to convert clear-text data to encrypted-text data.  \n  \n [!code-vb[RightsManagedContentPublish#RmContPubEncrypt](~/add/codesnippet/visualbasic/rmcontentpublish/window1.xaml.vb#rmcontpubencrypt)]\n [!code-cs[RightsManagedContentPublish#RmContPubEncrypt](~/add/codesnippet/csharp/RmContentPublish/Window1.xaml.cs#rmcontpubencrypt)]"
  syntax:
    content: public byte[] Encrypt (byte[] clearText);
    parameters:
    - id: clearText
      type: System.Byte[]
      description: "Innholdet i ren tekst for å kryptere."
    return:
      type: System.Byte[]
      description: "Kryptert sifferkodetekst for den angitte <code> clearText </code>."
  overload: System.Security.RightsManagement.CryptoProvider.Encrypt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>clearText</code>er null."
  - type: System.Security.RightsManagement.RightsManagementException
    commentId: T:System.Security.RightsManagement.RightsManagementException
    description: "Kryptering er ikke tillatt."
  platform:
  - net462
- uid: System.Security.RightsManagement.CryptoProvider.Finalize
  id: Finalize
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: Finalize()
  nameWithType: CryptoProvider.Finalize()
  fullName: System.Security.RightsManagement.CryptoProvider.Finalize()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Frigjør ressurser og utfører intern opprydding før forekomsten gode av datasanering."
  remarks: "Fullfør utfører <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(~ / add/includes/ajax-current-ext-md.md).</xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>       Denne metoden overstyrer <xref:System.Object.Finalize%2A>.</xref:System.Object.Finalize%2A> Applikasjons-koden kan ikke kalle denne metoden. et objekts `Finalize` metode startes automatisk under datasanering, med mindre finalization av saneringsoppsamlingen er deaktivert av et kall til den <xref:System.GC.SuppressFinalize%2A>metoden.</xref:System.GC.SuppressFinalize%2A>       Hvis du vil ha mer informasjon, se [fullføre metoder og destruktører](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [Rydder opp uforvaltede ressurser](~/add/includes/ajax-current-ext-md.md), og [overstyrer metoden fullføre](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)."
  syntax:
    content: ~CryptoProvider ();
    parameters: []
  overload: System.Security.RightsManagement.CryptoProvider.Finalize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.RightsManagement.RightsManagementException
  parent: System.Security.RightsManagement
  isExternal: false
  name: RightsManagementException
  nameWithType: RightsManagementException
  fullName: System.Security.RightsManagement.RightsManagementException
- uid: System.Security.RightsManagement.CryptoProvider.BlockSize
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: BlockSize
  nameWithType: CryptoProvider.BlockSize
  fullName: System.Security.RightsManagement.CryptoProvider.BlockSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.RightsManagement.CryptoProvider.BoundGrants
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: BoundGrants
  nameWithType: CryptoProvider.BoundGrants
  fullName: System.Security.RightsManagement.CryptoProvider.BoundGrants
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.RightsManagement.ContentGrant}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ContentGrant>
  nameWithType: ReadOnlyCollection<ContentGrant>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.RightsManagement.ContentGrant>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Security.RightsManagement.ContentGrant>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.RightsManagement.ContentGrant
    name: ContentGrant
    nameWithType: ContentGrant
    fullName: ContentGrant
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.RightsManagement.CryptoProvider.CanDecrypt
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: CanDecrypt
  nameWithType: CryptoProvider.CanDecrypt
  fullName: System.Security.RightsManagement.CryptoProvider.CanDecrypt
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.RightsManagement.CryptoProvider.CanEncrypt
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: CanEncrypt
  nameWithType: CryptoProvider.CanEncrypt
  fullName: System.Security.RightsManagement.CryptoProvider.CanEncrypt
- uid: System.Security.RightsManagement.CryptoProvider.CanMergeBlocks
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: CanMergeBlocks
  nameWithType: CryptoProvider.CanMergeBlocks
  fullName: System.Security.RightsManagement.CryptoProvider.CanMergeBlocks
- uid: System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Decrypt(Byte[])
  nameWithType: CryptoProvider.Decrypt(Byte[])
  fullName: System.Security.RightsManagement.CryptoProvider.Decrypt(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.RightsManagement.CryptoProvider.Dispose
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Dispose()
  nameWithType: CryptoProvider.Dispose()
  fullName: System.Security.RightsManagement.CryptoProvider.Dispose()
- uid: System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: CryptoProvider.Dispose(Boolean)
  fullName: System.Security.RightsManagement.CryptoProvider.Dispose(Boolean)
- uid: System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Encrypt(Byte[])
  nameWithType: CryptoProvider.Encrypt(Byte[])
  fullName: System.Security.RightsManagement.CryptoProvider.Encrypt(Byte[])
- uid: System.Security.RightsManagement.CryptoProvider.Finalize
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Finalize()
  nameWithType: CryptoProvider.Finalize()
  fullName: System.Security.RightsManagement.CryptoProvider.Finalize()
- uid: System.Security.RightsManagement.CryptoProvider.BlockSize*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: BlockSize
  nameWithType: CryptoProvider.BlockSize
- uid: System.Security.RightsManagement.CryptoProvider.BoundGrants*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: BoundGrants
  nameWithType: CryptoProvider.BoundGrants
- uid: System.Security.RightsManagement.CryptoProvider.CanDecrypt*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: CanDecrypt
  nameWithType: CryptoProvider.CanDecrypt
- uid: System.Security.RightsManagement.CryptoProvider.CanEncrypt*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: CanEncrypt
  nameWithType: CryptoProvider.CanEncrypt
- uid: System.Security.RightsManagement.CryptoProvider.CanMergeBlocks*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: CanMergeBlocks
  nameWithType: CryptoProvider.CanMergeBlocks
- uid: System.Security.RightsManagement.CryptoProvider.Decrypt*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Decrypt
  nameWithType: CryptoProvider.Decrypt
- uid: System.Security.RightsManagement.CryptoProvider.Dispose*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Dispose
  nameWithType: CryptoProvider.Dispose
- uid: System.Security.RightsManagement.CryptoProvider.Encrypt*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Encrypt
  nameWithType: CryptoProvider.Encrypt
- uid: System.Security.RightsManagement.CryptoProvider.Finalize*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Finalize
  nameWithType: CryptoProvider.Finalize
