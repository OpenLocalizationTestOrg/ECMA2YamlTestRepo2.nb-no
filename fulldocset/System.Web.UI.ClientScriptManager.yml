### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ClientScriptManager
  id: ClientScriptManager
  children:
  - System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)
  - System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  - System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)
  - System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)
  - System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)
  - System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)
  - System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)
  - System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)
  - System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)
  - System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)
  - System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.ValidateEvent(System.String)
  - System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)
  langs:
  - csharp
  name: ClientScriptManager
  nameWithType: ClientScriptManager
  fullName: System.Web.UI.ClientScriptManager
  type: Class
  summary: "Definerer metoder for administrasjon av klientskript i webprogrammer."
  remarks: "Klassen ClientScriptManager brukes til å behandle klientskript, og Legg dem til webprogrammer. Du får en referanse til klassen ClientScriptManager fra den <xref:System.Web.UI.Page.ClientScript%2A>-egenskapen til det <xref:System.Web.UI.Page>objektet.</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.ClientScript%2A>       Du kan legge til en klientskript på en side deklarativt ved å inkludere skriptet i HTML-koden på siden. Det finnes imidlertid situasjoner når du legger til klientskript dynamisk kreves. Legg til et skript dynamisk, Bruk <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>metoden, <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>metode til <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>avskrivning, eller <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>metode, avhengig av når og hvordan du vil legge til skriptet.</xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> </xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> </xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> </xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Hvis du vil ha mer informasjon, se [slik: Legg til klienten skriptet dynamisk til ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md).       Klassen ClientScriptManager identifiserer skript av en nøkkel <xref:System.String>og <xref:System.Type>.</xref:System.Type> </xref:System.String> Skript med samme nøkkel og type regnes duplikater. Ved hjelp av Skripttype hjelper deg med å unngå forvirrende lignende skript fra ulike brukerkontroller som er i bruk på siden.       Klassen ClientScriptManager kan brukes til å starte klienten tilbakeringinger i situasjoner når det er ønskelig å kjøre kode for serveren fra klienten uten å utføre en tilbakesending. Dette er referert til som utfører en ut sendefrekvens av tilbakeringing til serveren. En klient tilbakeringing sender klienten skriptfunksjonen en asynkron forespørsel til en webside for ASP.NET. Websiden kjører en endret versjon av livssyklusen normal ikke behandle tilbakeringing. Bruk av <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metode for å hente en referanse til en klient-funksjon som når den startes, starter et Klienttilbakekall til en server-hendelsen.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Hvis du vil ha mer informasjon, se [implementere klienten tilbakeringinger uten tilbakesendinger](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Skriptet tilbakeringinger vil ikke fungere i eldre nettlesere som ikke støtter det (DOKUMENTOBJEKTMODELL), og de krever at ECMAScript er aktivert på klienten. Kontroller om nettleseren støtter tilbakeringinger ved bruk av <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>egenskap, som er tilgjengelig via den <xref:System.Web.HttpRequest.Browser%2A>for ASP.NET indre <xref:System.Web.HttpContext.Request%2A>objektet.</xref:System.Web.HttpContext.Request%2A> </xref:System.Web.HttpRequest.Browser%2A> </xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>       Bruk den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metoden og <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A>metode til å definere en klient sende tilbake hendelse.</xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Disse metodene Aktiver klienten skriptet funksjoner, når den startes, slik at serveren ikke poste tilbake til siden. En klient sende tilbake hendelse er forskjellig fra en klient tilbakeringing i denne websiden er en vanlig livssyklus ikke behandle hendelsen klienten sende tilbake.      > [!NOTE] > Hvis du bruker en <xref:System.Web.UI.WebControls.Button>kontrollen og <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>er satt til `false`, og deretter kan du bruke den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metode til å returnere klienten tilbake hendelse for den <xref:System.Web.UI.WebControls.Button>kontroll.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> </xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> </xref:System.Web.UI.WebControls.Button>       Den <xref:System.Web.UI.WebControls.Button.OnClientClick%2A>for den <xref:System.Web.UI.WebControls.Button>kontroll, <xref:System.Web.UI.WebControls.ImageButton>kontrollen, og <xref:System.Web.UI.WebControls.LinkButton>kontrollen kan brukes til å kjøre klienten skript</xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.OnClientClick%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the ClientScriptManager class. Two client scripts are defined in the page: `PopupScript`, which displays an alert message when the page is loaded, and `ButtonClickScript`, which defines a client handler for an HTML button's `onClick` event.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/csharp/t-system.web.ui.clientsc_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/visualbasic/t-system.web.ui.clientsc_1.aspx)]"
  syntax:
    content: public sealed class ClientScriptManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)
  id: GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetCallbackEventReference(Control,String,String,String)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Henter en referanse til en klient-funksjon at når den startes, starter en klient kall tilbake til en server-hendelsen. Funksjonen klienten for denne overbelastet metoden omfatter en angitt kontroll argumentet, klienten skriptet og konteksten."
  remarks: "Metoden GetCallbackEventReference utfører en ut sendefrekvens av tilbakeringing til serveren som er en endret versjon av en side normal livssyklus. Hvis du vil ha mer informasjon, se [implementere klienten tilbakeringinger uten tilbakesendinger](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Når leseren er Microsoft Internet Explorer (versjon 5.0 eller nyere), skriptet tilbakeringing mekanisme implementeres via Microsoft.XmlHttp COM-objektet og krever at nettleseren for å konfigureres til å kjøre ActiveX-kontroller. For andre lesere brukes en XMLHttpRequest ved hjelp av leserens lokale dokument DOM (Object Model). Du kan kontrollere om en nettleser støtter klienten tilbakeringinger ved bruk av <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>egenskapen.</xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> Du kan kontrollere om en nettleser støtter XML sikkerhetskoder ved bruk av <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A>egenskapen.</xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> Begge egenskapene er tilgjengelige via den <xref:System.Web.HttpRequest.Browser%2A>for innebygde ASP.NET <xref:System.Web.HttpContext.Request%2A>objektet.</xref:System.Web.HttpContext.Request%2A> </xref:System.Web.HttpRequest.Browser%2A>       GetCallbackEventReference overbelastning av den <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metoden utfører en tilbakeringing synkront ved hjelp av XML sikkerhetskoder.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Når du sender data synkront i et scenario tilbakeringing, synkron tilbakeringinger returnerer umiddelbart og blokkerer ikke nettleseren. Ingen to synkron tilbakeringinger tilbakeringing kan kjøre samtidig i nettleseren. Hvis et annet synkron Tilbakekall aktiveres mens en venter, andre synkron tilbakeringing avbryter først og den andre tilbakeringingen skal returnere.       For å sende data asynkront, Bruk overlastingene som tar den `useAsync` parameteren som er en boolsk verdi som kontrollerer dette. Du kan ha flere ventende tilbakeringinger; i asynkron scenariet rekkefølgen de returnerer garanteres imidlertid ikke til å samsvare med rekkefølgen de ble startet.       I tillegg denne overbelastning av den <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metoden angir ingen klient-funksjonen til å behandle bokstavtypen på en feilbetingelse som er generert av den <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>metoden.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> </xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Hvis du vil angi et klienten feil tilbakeringing behandlingsprogram, Bruk overlastingene som bruker den `clientErrorCallback` parameteren.       Metoden GetCallbackEventReference tar en valgfri streng `argument` parameteren og returnerer en streng. Skal sendes i å motta flere verdier, koble sammen verdiene i de eller returnerer streng, henholdsvis.      > [!NOTE] > Unngå å bruke visningsstatusen i implementeringen av siden eller kontrollen egenskaper som må oppdateres under tilbakeringing skriptoperasjoner. Hvis egenskapene skal beholdes siden forespørsler, kan du bruke status for økten."
  example:
  - "The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.  \n  \n Two callback mechanisms are shown; the difference between them is the use of the `context` parameter. A `ReceiveServerData1` client callback function is provided using the `context` parameter. In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page. A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string. If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the `ProcessCallBackError` client function is called.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager7#1](~/add/codesnippet/csharp/0153bfa5-9a40-4257-b817-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager7#1](~/add/codesnippet/visualbasic/0153bfa5-9a40-4257-b817-_1.aspx)]"
  syntax:
    content: public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Serveren <xref href=&quot;System.Web.UI.Control&quot;> </xref> som behandler tilbakeringing klienten. Kontrollen må implementere den <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> grensesnittet og angi en <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metode.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: argument
      type: System.String
      description: "Et argument som er sendt fra klienten skriptet til serveren <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metode.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: clientCallback
      type: System.String
      description: "Navnet på klienten hendelsesbehandlingen mottar resultatet av vellykkede server-hendelsen."
    - id: context
      type: System.String
      description: "Klientskript som er evaluert på klienten før du starter tilbakeringing. Resultatet av skriptet sendes til klienten hendelsesbehandlingen."
    return:
      type: System.String
      description: "Navnet på en klient-funksjon som aktiverer tilbakeringing klienten."
  overload: System.Web.UI.ClientScriptManager.GetCallbackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.Control&quot;></xref> specified is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref href=&quot;System.Web.UI.Control&quot;> </xref> angitte implementerer ikke den <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> grensesnitt."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)
  id: GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetCallbackEventReference(Control,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Henter en referanse til en klient-funksjon som, når den startes, starter en klient tilbakeringing på serverhendelser. Funksjonen klienten for denne overbelastet metoden omfatter en angitt kontroll argumentet, klientskript, konteksten og boolsk verdi."
  remarks: "Denne overbelastning av den <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metoden krever en `useAsync` parameteren som lar deg utføre klienten tilbakeringing asynkront ved å sette verdien til `true`.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Overbelastning versjonene av denne metoden som ikke krever den `useAsync` parameteren setter du verdien til `false` som standard.       Hvis du vil ha mer informasjon om denne metoden, kan du se merknader for overlasten <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metode.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>"
  syntax:
    content: public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Serveren <xref href=&quot;System.Web.UI.Control&quot;> </xref> som behandler tilbakeringing klienten. Kontrollen må implementere den <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> grensesnittet og angi en <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metode.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: argument
      type: System.String
      description: "Et argument som er sendt fra klienten skriptet til serveren <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metode.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: clientCallback
      type: System.String
      description: "Navnet på klienten hendelsesbehandlingen mottar resultatet av vellykkede server-hendelsen."
    - id: context
      type: System.String
      description: "Klientskript som er evaluert på klienten før du starter tilbakeringing. Resultatet av skriptet sendes til klienten hendelsesbehandlingen."
    - id: useAsync
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>til å utføre tilbakeringing asynkront; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> til å utføre tilbakeringing synkront."
    return:
      type: System.String
      description: "Navnet på en klient-funksjon som aktiverer tilbakeringing klienten."
  overload: System.Web.UI.ClientScriptManager.GetCallbackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.Control&quot;></xref> specified is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref href=&quot;System.Web.UI.Control&quot;> </xref> angitte implementerer ikke den <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> grensesnitt."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)
  id: GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetCallbackEventReference(String,String,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(String,String,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(String,String,String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Henter en referanse til en klient-funksjon som, når den startes, starter en klient tilbakeringing på serverhendelser. Funksjonen klienten for denne overbelastet metoden omfatter en angitt argumentet, klientskript, konteksten, feil behandlingsprogrammet og boolsk verdi."
  remarks: "Denne overbelastning av den <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metoden tar en `target` strengparameter i stedet for en <xref:System.Web.UI.Control>parameter.</xref:System.Web.UI.Control> </xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Bruk denne overlasten når du vil tilbakeringing å gå tilbake til noe annet enn en streng som inneholder den <xref:System.Web.UI.Control.UniqueID%2A>kontrollens.</xref:System.Web.UI.Control.UniqueID%2A>       I tillegg denne overbelastning av den <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metoden krever en `useAsync` og en `clientErrorCallback` parameter.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Den `useAsync` parameteren lar deg utføre klienten tilbakeringing asynkront ved å sette verdien til `true`. Overbelastning versjonene av denne metoden som ikke krever den `useAsync` parameteren setter du verdien til `false` som standard. Den `clientErrorCallback` parameteren brukes til å angi navnet på klienten-funksjon som kalles hvis server-behandlingsprogrammet den <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>, returneres en feil.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> Overbelastning versjonene av denne metoden som ikke krever den `clientErrorCallback` parameteren setter du verdien til null.       Hvis du vil ha mer informasjon om denne metoden, kan du se merknader for overlasten <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metode.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>"
  example:
  - "The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.  \n  \n Two callback mechanisms are shown; the difference between them is the use of the `context` parameter. A `ReceiveServerData1` client callback function is provided using the `context` parameter. In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page. A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string. If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the client function `ProcessCallBackError` is called.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager7#1](~/add/codesnippet/csharp/b09113ee-01c3-4887-82a1-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager7#1](~/add/codesnippet/visualbasic/b09113ee-01c3-4887-82a1-_1.aspx)]"
  syntax:
    content: public string GetCallbackEventReference (string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);
    parameters:
    - id: target
      type: System.String
      description: "Navnet på en server <xref href=&quot;System.Web.UI.Control&quot;> </xref> som behandler tilbakeringing klienten. Kontrollen må implementere den <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> grensesnittet og angi en <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metode.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: argument
      type: System.String
      description: "Et argument som er sendt fra klienten skriptet til serveren <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metode.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: clientCallback
      type: System.String
      description: "Navnet på klienten hendelsesbehandlingen mottar resultatet av vellykkede server-hendelsen."
    - id: context
      type: System.String
      description: "Klientskript som er evaluert på klienten før du starter tilbakeringing. Resultatet av skriptet sendes til klienten hendelsesbehandlingen."
    - id: clientErrorCallback
      type: System.String
      description: "Navnet på klienten hendelsesbehandlingen mottar resultatet når det oppstår en feil i hendelsesbehandlingen server."
    - id: useAsync
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true &quot; name=&quot;true &quot; href=&quot;&quot;></xref>til å utføre tilbakeringing asynkront; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> til å utføre tilbakeringing synkront."
    return:
      type: System.String
      description: "Navnet på en klient-funksjon som aktiverer tilbakeringing klienten."
  overload: System.Web.UI.ClientScriptManager.GetCallbackEventReference*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)
  id: GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetCallbackEventReference(Control,String,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Henter en referanse til en klient-funksjon som, når den startes, starter en klient tilbakeringing på serverhendelser. Funksjonen klienten for denne overbelastet metoden omfatter en angitt kontroll argumentet, klientskript, konteksten, feil behandlingsprogrammet og boolsk verdi."
  remarks: "Denne overbelastning av den <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metoden krever en `useAsync` og en `clientErrorCallback` parameter.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Den `useAsync` parameteren lar deg utføre klienten tilbakeringing asynkront ved å sette verdien til `true`. Overbelastning versjonene av denne metoden som ikke krever den `useAsync` parameteren setter du verdien til `false` som standard. Den `clientErrorCallback` parameteren brukes til å angi navnet på klienten-funksjon som kalles hvis serveren behandlingsprogrammet (den <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>metoden) en feil.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> Overbelastning versjonene av denne metoden som ikke krever den `clientErrorCallback` parameteren setter du verdien til null.       Hvis du vil ha mer informasjon om denne metoden, kan du se merknader for overlasten <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metode.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>"
  syntax:
    content: public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Serveren <xref href=&quot;System.Web.UI.Control&quot;> </xref> som behandler tilbakeringing klienten. Kontrollen må implementere den <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> grensesnittet og angi en <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metode.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: argument
      type: System.String
      description: "Et argument som er sendt fra klienten skriptet til serveren <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metode.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: clientCallback
      type: System.String
      description: "Navnet på klienten hendelsesbehandlingen mottar resultatet av vellykkede server-hendelsen."
    - id: context
      type: System.String
      description: "Klientskript som er evaluert på klienten før du starter tilbakeringing. Resultatet av skriptet sendes til klienten hendelsesbehandlingen."
    - id: clientErrorCallback
      type: System.String
      description: "Navnet på klienten hendelsesbehandlingen mottar resultatet når det oppstår en feil i hendelsesbehandlingen server."
    - id: useAsync
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true &quot; name=&quot;true &quot; href=&quot;&quot;></xref>til å utføre tilbakeringing asynkront; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> til å utføre tilbakeringing synkront."
    return:
      type: System.String
      description: "Navnet på en klient-funksjon som aktiverer tilbakeringing klienten."
  overload: System.Web.UI.ClientScriptManager.GetCallbackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.Control&quot;></xref> specified is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref href=&quot;System.Web.UI.Control&quot;> </xref> angitte implementerer ikke den <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> grensesnitt."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  id: GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackClientHyperlink(Control,String)
  nameWithType: ClientScriptManager.GetPostBackClientHyperlink(Control,String)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Henter en referanse med <xref uid=&quot;langword_csharp_javascript:&quot; name=&quot;javascript:&quot; href=&quot;&quot;> </xref> legges til starten av det som kan brukes i en hendelse for klienten ikke poste på serveren for den angitte kontrollen og med de angitte hendelse argumentene."
  remarks: "Ved hjelp av den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metoden krever kontrollen som behandler tilbakesending implementere den <xref:System.Web.UI.IPostBackEventHandler>grensesnittet.</xref:System.Web.UI.IPostBackEventHandler> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Implementere den <xref:System.Web.UI.IPostBackEventHandler>grensesnitt en <xref:System.Web.UI.Page>, bruker du direktiv.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>"
  example:
  - "The following code example demonstrates the use of the GetPostBackClientHyperlink method. The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface. When the HTML anchor element on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager8#1](~/add/codesnippet/visualbasic/366d34c0-2826-48a7-a56d-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager8#1](~/add/codesnippet/csharp/366d34c0-2826-48a7-a56d-_1.aspx)]  \n  \n The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager8#2](~/add/codesnippet/csharp/366d34c0-2826-48a7-a56d-_2.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager8#2](~/add/codesnippet/visualbasic/366d34c0-2826-48a7-a56d-_2.aspx)]"
  syntax:
    content: public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Serverkontroll til å behandle tilbakesending."
    - id: argument
      type: System.String
      description: "{Parameteren sendt til serverkontrollen."
    return:
      type: System.String
      description: "En streng som representerer et JavaScript-kall til funksjonen sende tilbake som inneholder målet kontrollens ID og arrangementer argumenter."
  overload: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)
  id: GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackClientHyperlink(Control,String,Boolean)
  nameWithType: ClientScriptManager.GetPostBackClientHyperlink(Control,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(Control,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Henter en referanse med <xref uid=&quot;langword_csharp_javascript:&quot; name=&quot;javascript:&quot; href=&quot;&quot;> </xref> legges til starten av det som kan brukes i en hendelse for klienten ikke poste tilbake til serveren for den angitte bestemme med hendelsen argumenter og boolsk indikerer om å registrere poster tilbake for hendelsen validering."
  remarks: "Ved hjelp av den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metoden krever kontrollen som behandler tilbakesending implementere den <xref:System.Web.UI.IPostBackEventHandler>grensesnittet.</xref:System.Web.UI.IPostBackEventHandler> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Implementere den <xref:System.Web.UI.IPostBackEventHandler>grensesnitt en <xref:System.Web.UI.Page>, bruker du direktiv.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>"
  syntax:
    content: public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument, bool registerForEventValidation);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Serverkontroll til å behandle tilbakesending."
    - id: argument
      type: System.String
      description: "{Parameteren sendt til serverkontrollen."
    - id: registerForEventValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>registrere sende tilbake hendelsen for validering; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> ikke å registrere poster tilbake hendelsen for validering."
    return:
      type: System.String
      description: "En streng som representerer et JavaScript-kall til funksjonen sende tilbake som inneholder målet kontrollens ID og arrangementer argumenter."
  overload: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)
  id: GetPostBackEventReference(System.Web.UI.PostBackOptions)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackEventReference(PostBackOptions)
  nameWithType: ClientScriptManager.GetPostBackEventReference(PostBackOptions)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(PostBackOptions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Returnerer en streng som kan brukes i en klient-hendelse kan forårsake tilbakesending til serveren. Referanse-strengen er definert av den angitte <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> forekomsten."
  remarks: "Implementere den <xref:System.Web.UI.IPostBackEventHandler>grensesnitt en <xref:System.Web.UI.Page>, bruker du direktiv.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>       Den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metoden kan bare brukes med den <xref:System.Web.UI.WebControls.Button>kontrollerer når den <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>egenskapen `false`.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> </xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> I dette tilfellet den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metoden returnerer klienten tilbake hendelse for den <xref:System.Web.UI.WebControls.Button>kontroll.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>"
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.PostBackOptions options);
    parameters:
    - id: options
      type: System.Web.UI.PostBackOptions
      description: "En <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> som definerer tilbakesending."
    return:
      type: System.String
      description: "En streng som når den behandles som skriptet på klienten, starter klienten tilbake."
  overload: System.Web.UI.ClientScriptManager.GetPostBackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> parameteren er<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)
  id: GetPostBackEventReference(System.Web.UI.Control,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackEventReference(Control,String)
  nameWithType: ClientScriptManager.GetPostBackEventReference(Control,String)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Returnerer en streng som kan brukes i en klient-hendelse kan forårsake tilbakesending til serveren. Referanse-strengen er definert av den angitte kontrollen som behandler tilbakesending og strengargument hendelsen for ytterligere informasjon."
  remarks: "Implementere den <xref:System.Web.UI.IPostBackEventHandler>grensesnitt en <xref:System.Web.UI.Page>, bruker du direktiv.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>       Den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metoden kan bare brukes med den <xref:System.Web.UI.WebControls.Button>kontrollerer når den <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>egenskapen `false`.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> </xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> I dette tilfellet den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metoden returnerer klienten tilbake hendelse for den <xref:System.Web.UI.WebControls.Button>kontroll.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>"
  example:
  - "The following code example demonstrates the use of the GetPostBackEventReference method. The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface. When the button on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager8#1](~/add/codesnippet/visualbasic/13f44f5d-33c0-40e6-bb2f-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager8#1](~/add/codesnippet/csharp/13f44f5d-33c0-40e6-bb2f-_1.aspx)]  \n  \n The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager8#2](~/add/codesnippet/csharp/13f44f5d-33c0-40e6-bb2f-_2.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager8#2](~/add/codesnippet/visualbasic/13f44f5d-33c0-40e6-bb2f-_2.aspx)]"
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Serveren <xref href=&quot;System.Web.UI.Control&quot;> </xref> som behandler tilbakesending på serveren."
    - id: argument
      type: System.String
      description: "En streng med valgfri argumenter som sendes til kontrollen som behandler tilbakesending."
    return:
      type: System.String
      description: "En streng som når den behandles som skriptet på klienten, starter tilbakesending."
  overload: System.Web.UI.ClientScriptManager.GetPostBackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The specified <xref href=&quot;System.Web.UI.Control&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)
  id: GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackEventReference(PostBackOptions,Boolean)
  nameWithType: ClientScriptManager.GetPostBackEventReference(PostBackOptions,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(PostBackOptions,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Returnerer en streng som kan brukes i en klient-hendelse kan forårsake tilbakesending til serveren. Referanse-strengen er definert av den angitte <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> objektet. Du kan også registrerer hendelsen referansen for validering."
  remarks: "Implementere den <xref:System.Web.UI.IPostBackEventHandler>grensesnitt en <xref:System.Web.UI.Page>objekt, bruker du direktiv.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>       Den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metoden kan bare brukes med den <xref:System.Web.UI.WebControls.Button>kontrollerer når den <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>egenskapen `false`.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> </xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> I dette tilfellet den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metoden returnerer klienten tilbake hendelse for den <xref:System.Web.UI.WebControls.Button>kontroll.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>       Hvis `registerForEventValidation` er `true`, GetPostBackEventReference metodekall den <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29>metode for å registrere hendelsen referansen for validering med en unik kontroll-ID som representerer client-kontroll som genererer hendelsen.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29>"
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.PostBackOptions options, bool registerForEventValidation);
    parameters:
    - id: options
      type: System.Web.UI.PostBackOptions
      description: "En <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> som definerer tilbakesending."
    - id: registerForEventValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>registrere hendelsen referansen for validering; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "En streng som når den behandles som skriptet på klienten, starter klienten tilbake."
  overload: System.Web.UI.ClientScriptManager.GetPostBackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.PostBackOptions&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)
  id: GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackEventReference(Control,String,Boolean)
  nameWithType: ClientScriptManager.GetPostBackEventReference(Control,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(Control,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Returnerer en streng som skal brukes i en klient-hendelse kan forårsake tilbakesending til serveren. Referanse-strengen er definert av den angitte kontrollen som behandler tilbakesending og strengargument hendelsen for ytterligere informasjon. Du kan også registrerer hendelsen referansen for validering."
  remarks: "Implementere den <xref:System.Web.UI.IPostBackEventHandler>grensesnitt en <xref:System.Web.UI.Page>, bruker du direktiv.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>       Den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metoden kan bare brukes med den <xref:System.Web.UI.WebControls.Button>kontrollerer når den <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>egenskapen `false`.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> </xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> I dette tilfellet den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metoden returnerer klienten tilbake hendelse for den <xref:System.Web.UI.WebControls.Button>kontroll.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>       Hvis `registerForEventValidation` er true, den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29>metodekall den <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29>metode for å registrere hendelsen referansen for validering med en unik kontroll-ID som representerer client-kontroll som genererer hendelsen.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29>"
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.Control control, string argument, bool registerForEventValidation);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Serveren <xref href=&quot;System.Web.UI.Control&quot;> </xref> som behandler tilbakesending på serveren."
    - id: argument
      type: System.String
      description: "En streng med valgfri argumenter som sendes til `control`."
    - id: registerForEventValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>registrere hendelsen referansen for validering; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "En streng som når den behandles som skriptet på klienten, starter tilbakesending."
  overload: System.Web.UI.ClientScriptManager.GetPostBackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The specified <xref href=&quot;System.Web.UI.Control&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)
  id: GetWebResourceUrl(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetWebResourceUrl(Type,String)
  nameWithType: ClientScriptManager.GetWebResourceUrl(Type,String)
  fullName: System.Web.UI.ClientScriptManager.GetWebResourceUrl(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Henter en URL-referanse til en ressurs i en samling."
  remarks: "Metoden GetWebResourceUrl returnerer en URL-referanse til en ressurs som er innebygd i en samling. Den returnerte referansen er ikke URL-adressen kodet. Ressurser kan være skriptfiler, bilder eller en statisk fil. Du angi hvilken basert på objektet som vil ha tilgang til ressursen.       En webressursen som er registrert med siden identifiseres av type og navn. Bare én ressurs med en angitt type og name par kan registreres med siden. Forsøk på å registrere en ressurs som allerede er registrert, oppretter ikke et duplikat av registrerte ressursen.       Metoden GetWebResourceUrl brukes sammen med den <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A>metode for å få tilgang til ressurser som er innebygd i samlinger.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> Hvis du vil ha mer informasjon om hvordan du bruker ressurser i programmer, se [ASP.NET nettsiden ressurser oversikt over](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of the GetWebResourceUrl method. The *type* parameter in this example is set to the type of class in the assembly containing the resource. The `resourceName` parameter is specified with the fully qualified path to the resource, which includes the default namespace.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager4#1](~/add/codesnippet/visualbasic/m-system.web.ui.clientsc_2_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager4#1](~/add/codesnippet/csharp/m-system.web.ui.clientsc_2_1.aspx)]  \n  \n The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served. Compile the following class in a class library with a default namespace set to `Samples.AspNet.CS.Controls` or `Samples.AspNet.VB.Controls`, depending on what language you are using.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager4#2](~/add/codesnippet/visualbasic/m-system.web.ui.clientsc_2_2.vb)]\n [!code-cs[System.Web.UI.ClientScriptManager4#2](~/add/codesnippet/csharp/m-system.web.ui.clientsc_2_2.cs)]  \n  \n This example requires a JavaScript file named `Script_include.js`. The .js file is an embedded resource in the assembly that contains the `ClientScriptResourceLabel` object. If you are using [!INCLUDE[vs_current_short](~/add/includes/ajax-current-ext-md.md)], in the Properties window of the class library project, set **Build Action** to **Embedded Resource** when the script file is selected. If you are compiling the library at the command line, use the  switch to embed the resource.  \n  \n```  \nfunction DoClick() {Form1.Message.value='Text from resource script.'}  \n```"
  syntax:
    content: public string GetWebResourceUrl (Type type, string resourceName);
    parameters:
    - id: type
      type: System.Type
      description: "Typen for ressursen."
    - id: resourceName
      type: System.String
      description: "Fullstendige navnet på ressursen i samlingen."
    return:
      type: System.String
      description: "URL-referansen til ressursen."
  overload: System.Web.UI.ClientScriptManager.GetWebResourceUrl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The web resource name is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The web resource name has a length of zero."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)
  id: IsClientScriptBlockRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsClientScriptBlockRegistered(String)
  nameWithType: ClientScriptManager.IsClientScriptBlockRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Bestemmer om Skriptblokken klienten er registrert med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt med den angitte nøkkelen."
  remarks: "Kalle denne metoden før du kaller den <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>metode for å unngå registrerer dupliserte skript.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Dette er spesielt viktig hvis skriptet krever en stor mengde serverressurser til å opprette.       En klient-skriptet identifiseres av nøkkelen og filtypen. Skript med samme nøkkel og type regnes duplikater.       Denne overbelastning av den <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>metodekall overlasten som bruker både et `key` og en `type` parameter med typen som er angitt som et <xref:System.Web.UI.Page>objekt</xref:System.Web.UI.Page> </xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>"
  example:
  - >-
    [!code-cs[System.Web.UI.ClientScriptManager1#2](~/add/codesnippet/csharp/m-system.web.ui.clientsc_0_1.aspx)]
     [!code-vb[System.Web.UI.ClientScriptManager1#2](~/add/codesnippet/visualbasic/m-system.web.ui.clientsc_0_1.aspx)]
  syntax:
    content: public bool IsClientScriptBlockRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "Nøkkelen for klienten Skriptblokken til å søke etter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis klienten skriptblokk registrert; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)
  id: IsClientScriptBlockRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsClientScriptBlockRegistered(Type,String)
  nameWithType: ClientScriptManager.IsClientScriptBlockRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Bestemmer om Skriptblokken klienten er registrert med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt med en key- og type."
  remarks: "Kalle denne metoden før du kaller den <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>metode for å unngå registrerer dupliserte skript.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Dette er spesielt viktig hvis skriptet krever en stor mengde serverressurser til å opprette.       En klient-skriptet identifiseres av nøkkelen og filtypen. Skript med samme nøkkel og type regnes duplikater. Du angi hvilken basert på objektet som vil ha tilgang til ressursen. For eksempel når du bruker en `Page` forekomsten for tilgang til ressursen du angir den `Page` type."
  example:
  - "The following code example demonstrates the use of the IsClientScriptBlockRegistered method. Note that, if the logic to check for the existing client script block were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method checks for duplicates. The benefit of checking is to reduce unnecessary computation.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/csharp/b20ef5ac-aa44-4132-8ad3-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/visualbasic/b20ef5ac-aa44-4132-8ad3-_1.aspx)]"
  syntax:
    content: public bool IsClientScriptBlockRegistered (Type type, string key);
    parameters:
    - id: type
      type: System.Type
      description: "Hva slags Skriptblokken klienten til å søke etter."
    - id: key
      type: System.String
      description: "Nøkkelen for klienten Skriptblokken til å søke etter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis klienten skriptblokk registrert; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Klienten Skripttype er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)
  id: IsClientScriptIncludeRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsClientScriptIncludeRegistered(String)
  nameWithType: ClientScriptManager.IsClientScriptIncludeRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Bestemmer om skriptet klienten med er registrert med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt med den angitte nøkkelen."
  remarks: "Kalle denne metoden før du kaller den <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>metode for å unngå registrerer dupliserte skript.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Dette er spesielt viktig hvis skriptet krever en stor mengde serverressurser til å opprette.       En klient-skriptet inkluderer identifiseres av nøkkelen og filtypen. Skript med samme nøkkel og type regnes duplikater.       Denne overbelastning av den <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>metodekall overlasten som bruker både et `key` og en `type` parameteren med typen som er angitt som en <xref:System.Web.UI.Page>objektet.</xref:System.Web.UI.Page> </xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>"
  syntax:
    content: public bool IsClientScriptIncludeRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "Nøkkelen for klienten skriptet inkluderer for å søke etter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis klienten skriptet inkluderer er registrert; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)
  id: IsClientScriptIncludeRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsClientScriptIncludeRegistered(Type,String)
  nameWithType: ClientScriptManager.IsClientScriptIncludeRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Bestemmer om skriptet klienten med er registrert med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt med en key- og type."
  remarks: "Kalle denne metoden før du kaller den <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>metode for å unngå dupliserte klientskript for registrering inkluderer.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Dette er spesielt viktig hvis skriptet krever en stor mengde serverressurser til å opprette.       En klient-skriptet inkluderer identifiseres av nøkkelen og filtypen. Skript med samme nøkkel og type regnes duplikater. Du angi hvilken basert på objektet som vil ha tilgang til ressursen. For eksempel når bruker en forekomst av siden for å få tilgang til ressursen, angir du den `Page` type."
  example:
  - "The following code example demonstrates the use of the IsClientScriptIncludeRegistered method. Note that, if the logic to check for the existing client script include were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates. The benefit of checking is to reduce unnecessary computation.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager2#1](~/add/codesnippet/csharp/1a97f23b-4196-4af6-89d9-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager2#1](~/add/codesnippet/visualbasic/1a97f23b-4196-4af6-89d9-_1.aspx)]  \n  \n This example requires a JavaScript file named `Script_include.js`, with the following contents:  \n  \n```  \nfunction DoClick() {Form1.Message.value='Text from include script.'}  \n```"
  syntax:
    content: public bool IsClientScriptIncludeRegistered (Type type, string key);
    parameters:
    - id: type
      type: System.Type
      description: "Klient-Skripttype inkluderer for å søke etter."
    - id: key
      type: System.String
      description: "Nøkkelen for klienten skriptet inkluderer for å søke etter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis klienten skriptet inkluderer er registrert; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Klient-skriptet inkludere er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)
  id: IsOnSubmitStatementRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsOnSubmitStatementRegistered(String)
  nameWithType: ClientScriptManager.IsOnSubmitStatementRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Bestemmer om OnSubmit-setningen er registrert med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt med den angitte nøkkelen."
  remarks: "Kalle denne metoden før du kaller den <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>metode for å unngå registrerer dupliserte OnSubmit-setninger.</xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> Dette er spesielt viktig hvis setningen krever en stor mengde serverressurser til å opprette.       En setning identifiseres av nøkkelen og filtypen. Setninger med samme nøkkel og type regnes duplikater.       Denne overbelastning av den <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A>metodekall overlasten som bruker både et `key` og en `type` parameter med typen som er angitt som et <xref:System.Web.UI.Page>objekt</xref:System.Web.UI.Page> </xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A>"
  syntax:
    content: public bool IsOnSubmitStatementRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "Nøkkelen for uttrykket OnSubmit til å søke etter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis uttrykket OnSubmit er registrert; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)
  id: IsOnSubmitStatementRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsOnSubmitStatementRegistered(Type,String)
  nameWithType: ClientScriptManager.IsOnSubmitStatementRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Bestemmer om OnSubmit-setningen er registrert med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt ved hjelp av den angitte nøkkelen og type."
  remarks: "Kalle denne metoden før du kaller den <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>metode for å unngå registrerer dupliserte setninger.</xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> Dette er spesielt viktig hvis setningen krever en stor mengde serverressurser til å opprette.       En setning identifiseres av nøkkelen og filtypen. Setninger med samme nøkkel og type regnes duplikater. Du angi hvilken basert på objektet som vil ha tilgang til ressursen. For eksempel når du bruker en `Page` forekomsten for tilgang til ressursen du angir den `Page` type."
  example:
  - "The following code example demonstrates the use of the IsOnSubmitStatementRegistered method. A script named `OnSubmitScript` is registered with the <xref:System.Web.UI.Page> so that when the page's form is submitted the script is invoked.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager3#1](~/add/codesnippet/visualbasic/081fc7d2-9213-49e8-ad42-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager3#1](~/add/codesnippet/csharp/081fc7d2-9213-49e8-ad42-_1.aspx)]"
  syntax:
    content: public bool IsOnSubmitStatementRegistered (Type type, string key);
    parameters:
    - id: type
      type: System.Type
      description: "Typen for uttrykket OnSubmit til å søke etter."
    - id: key
      type: System.String
      description: "Nøkkelen for uttrykket OnSubmit til å søke etter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis uttrykket OnSubmit er registrert; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Typen OnSubmit-setningen er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)
  id: IsStartupScriptRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsStartupScriptRegistered(String)
  nameWithType: ClientScriptManager.IsStartupScriptRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Bestemmer om oppstartsskriptet er registrert med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt med den angitte nøkkelen."
  remarks: "Kalle denne metoden før du kaller den <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>metode for å unngå registrerer dupliserte skript.</xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Dette er spesielt viktig hvis skriptet krever en stor mengde serverressurser til å opprette.       Et skript som startet identifiseres av nøkkelen og filtypen. Skript med samme nøkkel og type regnes duplikater.       Denne overbelastning av den <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>metodekall overlasten som bruker både en streng `key` og en `type` parameter med typen som er angitt som et <xref:System.Web.UI.Page>objekt</xref:System.Web.UI.Page> </xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>"
  syntax:
    content: public bool IsStartupScriptRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "Nøkkelen for oppstartsskript til å søke etter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis oppstartsskriptet er registrert; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)
  id: IsStartupScriptRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsStartupScriptRegistered(Type,String)
  nameWithType: ClientScriptManager.IsStartupScriptRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Bestemmer om oppstartsskriptet er registrert med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt ved hjelp av den angitte nøkkelen og type."
  remarks: "Kalle denne metoden før du kaller den <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>metode for å unngå registrerer dupliserte skript.</xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Dette er spesielt viktig hvis skriptet krever en stor mengde serverressurser til å opprette.       Et skript som startet klienten identifiseres av nøkkelen og filtypen. Skript med samme nøkkel og type regnes duplikater."
  example:
  - "The following code example demonstrates the use of the IsStartupScriptRegistered method. Note that, if the logic to check for the existing startup script block were removed, there would not be two duplicate startup scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method checks for duplicates. The benefit of checking is to reduce unnecessary computation.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/csharp/31c56db0-942d-4a34-be1e-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/visualbasic/31c56db0-942d-4a34-be1e-_1.aspx)]"
  syntax:
    content: public bool IsStartupScriptRegistered (Type type, string key);
    parameters:
    - id: type
      type: System.Type
      description: "Startet Skripttype til å søke etter."
    - id: key
      type: System.String
      description: "Nøkkelen for oppstartsskript til å søke etter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis oppstartsskriptet er registrert; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Skriptet oppstartstypen er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)
  id: RegisterArrayDeclaration(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterArrayDeclaration(String,String)
  nameWithType: ClientScriptManager.RegisterArrayDeclaration(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerer en JavaScript matrise deklarasjon med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt ved hjelp av en matrise navn- og matrise."
  remarks: "The RegisterArrayDeclaration checks to see whether a registered array exists with the same name as the name specified in the `arrayName` parameter and, if so, adds the values specified in the `arrayValue` parameter. Because the underlying storage mechanism is based on an <xref:System.Collections.ArrayList>, duplicates are allowed. If a registered array with the same name as the `arrayName` parameter does not exist, it is created and the values in the `arrayValue` parameter added to it.  \n  \n If you want string literals in the resulting JavaScript array, include single quotation marks (') or escaped double quotation marks (\\\\\") in the `arrayValue` parameter. The value of the `arrayValue` parameter should be a single element. If more than one value needs to be added to the array, make multiple calls using the RegisterArrayDeclaration method."
  example:
  - "The following code example demonstrates the use of the RegisterArrayDeclaration and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods. The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager5#1](~/add/codesnippet/csharp/fb15aead-cb5d-4924-8be4-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager5#1](~/add/codesnippet/visualbasic/fb15aead-cb5d-4924-8be4-_1.aspx)]"
  syntax:
    content: public void RegisterArrayDeclaration (string arrayName, string arrayValue);
    parameters:
    - id: arrayName
      type: System.String
      description: "Matrisenavnet til å registrere."
    - id: arrayValue
      type: System.String
      description: "Matriseverdien eller verdiene for å registrere."
  overload: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>arrayName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)
  id: RegisterClientScriptBlock(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterClientScriptBlock(Type,String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptBlock(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(Type,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerer klienten skriptet, med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt ved hjelp av en type nøkkel og skript litteral."
  remarks: "En klient-skriptet identifiseres av nøkkelen og filtypen. Skript med samme nøkkel og type regnes duplikater. Bare én skriptet med en angitt type og nøkkelpar kan registreres med siden. Forsøk på å registrere et skript som allerede er registrert, oppretter ikke et duplikat av skriptet.       Kall til <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>metode for å finne ut om et klientskript med en angitt nøkkel og typen paret er allerede registrert og unngå uten grunn prøver å legge til skriptet.</xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>       I denne overbelastning av den <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>metoden, må du kontrollere at skriptet inkludert i den `script` parameteren er omsluttet av en `<script>` elementblokk.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>       Den <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>metoden legger til en skriptblokk toppen av den gjengitte siden.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Skriptblokkene garanteres ikke skal utdata i rekkefølgen som de er registrert. Hvis rekkefølgen på Skriptblokkene er viktig, kan du bruke en <xref:System.Text.StringBuilder>objekt for å samle inn skriptene sammen i en enkelt streng og registrere dem alle i en enkelt klient skriptblokk.</xref:System.Text.StringBuilder>"
  example:
  - "The following code example demonstrates the use of the RegisterClientScriptBlock method.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager12#1](~/add/codesnippet/csharp/41f57bff-a479-4a3c-91bb-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager12#1](~/add/codesnippet/visualbasic/41f57bff-a479-4a3c-91bb-_1.aspx)]"
  syntax:
    content: public void RegisterClientScriptBlock (Type type, string key, string script);
    parameters:
    - id: type
      type: System.Type
      description: "Klienten Skripttype til å registrere."
    - id: key
      type: System.String
      description: "Nøkkelen for klientskript til å registrere."
    - id: script
      type: System.String
      description: "Klientskript er litteral til å registrere."
  overload: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)
  id: RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterClientScriptBlock(Type,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterClientScriptBlock(Type,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(Type,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerer klienten skriptet, med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt ved hjelp av typen key, skriptet litteral og boolsk verdi som angir om å legge til skriptkode."
  remarks: "En klient-skriptet identifiseres av nøkkelen og filtypen. Skript med samme nøkkel og type regnes duplikater. Bare én skriptet med en angitt type og nøkkelpar kan registreres med siden. Forsøk på å registrere et skript som allerede er registrert, oppretter ikke et duplikat av skriptet.       Kall av <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>metode for å finne ut om et klientskript med en gitt nøkkel og type par er allerede registrert.</xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> Dette gjør at du unngår uten grunn prøver å legge til skriptet.       I denne overbelastning av den <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>metoden, kan du angi om skriptet angitt i den `script` parameteren står i en `<script>` elementblokk ved hjelp av den `addScriptTags` parameteren.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Angi `addScriptTags` til `true` indikerer at skriptkode blir lagt til automatisk.       Den <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>metoden legger til en skriptblokk toppen av den gjengitte siden.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Skriptblokkene garanteres ikke skal utdata i rekkefølgen som de er registrert. Hvis rekkefølgen på Skriptblokkene er viktig, kan du bruke en <xref:System.Text.StringBuilder>objekt for å samle inn skriptene sammen i en enkelt streng og registrere dem alle i en enkelt klient skriptblokk.</xref:System.Text.StringBuilder>"
  example:
  - "The following code example demonstrates the use of the RegisterClientScriptBlock method. Note that the `addScriptTags` parameter is set to `true` so the beginning and closing script tags are not included with the `script` parameter.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/csharp/e4221441-a348-44c8-8a15-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/visualbasic/e4221441-a348-44c8-8a15-_1.aspx)]"
  syntax:
    content: public void RegisterClientScriptBlock (Type type, string key, string script, bool addScriptTags);
    parameters:
    - id: type
      type: System.Type
      description: "Klienten Skripttype til å registrere."
    - id: key
      type: System.String
      description: "Nøkkelen for klientskript til å registrere."
    - id: script
      type: System.String
      description: "Klientskript er litteral til å registrere."
    - id: addScriptTags
      type: System.Boolean
      description: "En boolsk verdi som angir om å legge til skriptkode."
  overload: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Klienten Skripttype-blokk er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)
  id: RegisterClientScriptInclude(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterClientScriptInclude(String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptInclude(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerer klienten skriptet, med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt med en nøkkel og en URL-adresse, som aktiverer skriptet kalles fra klienten."
  remarks: "En klient-skriptet inkluderer identifiseres av nøkkelen og filtypen. Skript med samme nøkkel og type regnes duplikater. Bare én skriptet med en angitt type og nøkkelpar kan registreres med siden. Forsøk på å registrere et skript som allerede er registrert, oppretter ikke et duplikat av skriptet.       Kall <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A>metode for å finne ut om et klientskript tas med en angitt nøkkel og typen paret er allerede registrert og unngå uten grunn prøver å legge til skriptet.</xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A>      > [!NOTE] > For å løse klienten URL-adressen, kan du bruke den <xref:System.Web.UI.Control.ResolveClientUrl%2A>metoden.</xref:System.Web.UI.Control.ResolveClientUrl%2A> Denne metoden bruker konteksten for en URL-adressen som kalles for å løse banen.       Denne overbelastning av den <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>metodekall overbelastningen som tar en `key`, en `URL`, og en `type` parameter.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>       Metoden legger til en skriptblokk øverst i den gjengitte siden."
  example:
  - For related information, including syntax, usage, and an example, see <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>.
  syntax:
    content: public void RegisterClientScriptInclude (string key, string url);
    parameters:
    - id: key
      type: System.String
      description: "Nøkkelen for klienten skriptet inkluderer Hvis du vil registrere."
    - id: url
      type: System.String
      description: "URL-adressen til klienten skriptet inkluderer Hvis du vil registrere."
  overload: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)
  id: RegisterClientScriptInclude(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterClientScriptInclude(Type,String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptInclude(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(Type,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerer klienten skriptet tas med i <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt ved hjelp av en type, en nøkkel og en URL-adresse."
  remarks: "Denne overbelastning av den <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>metoden tar *nøkkelen* og *URL-adressen* parameterne til å identifisere skriptet, i tillegg til en `type` å angi identifikasjon av klienten skriptet inkluderer.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Du angi hvilken basert på objektet som vil ha tilgang til ressursen. For eksempel når du bruker en `Page` forekomsten for tilgang til ressursen du angir den `Page` type.      > [!NOTE] > For å løse klienten URL-adressen, kan du bruke den <xref:System.Web.UI.Control.ResolveClientUrl%2A>metoden.</xref:System.Web.UI.Control.ResolveClientUrl%2A> Denne metoden bruker konteksten for en URL-adressen som kalles for å løse banen.       Denne metoden legger til en skriptblokk øverst i den gjengitte siden."
  example:
  - "The following code example demonstrates the use of the RegisterClientScriptInclude method. Note that if the logic to check for the existing client script include were removed, there would still not be duplicate client scripts in the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates. The benefit of checking is to reduce unnecessary computation.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager2#1](~/add/codesnippet/csharp/cbae2904-30a8-438b-9fac-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager2#1](~/add/codesnippet/visualbasic/cbae2904-30a8-438b-9fac-_1.aspx)]  \n  \n This example requires a JavaScript file named Script_include.js with the following contents:  \n  \n```  \nfunction DoClick() {Form1.Message.value='Text from include script.'}  \n```"
  syntax:
    content: public void RegisterClientScriptInclude (Type type, string key, string url);
    parameters:
    - id: type
      type: System.Type
      description: "Klient-Skripttype inkluderer Hvis du vil registrere."
    - id: key
      type: System.String
      description: "Nøkkelen for klienten skriptet inkluderer Hvis du vil registrere."
    - id: url
      type: System.String
      description: "URL-adressen til klienten skriptet inkluderer Hvis du vil registrere."
  overload: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Klient-skriptet inkludere er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The URL is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The URL is empty."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)
  id: RegisterClientScriptResource(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterClientScriptResource(Type,String)
  nameWithType: ClientScriptManager.RegisterClientScriptResource(Type,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptResource(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerer klienten skriptet ressursen med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objektet ved hjelp av typen og et ressursnavn."
  remarks: "Metoden RegisterClientScriptResource brukes under tilgang til ressurser kompilert i fra samlinger via WebResource.axd HTTP-behandling. Metoden RegisterClientScriptResource registrerer skriptet, med den <xref:System.Web.UI.Page>objekt, og hindrer at dupliserte skript.</xref:System.Web.UI.Page> Denne metoden bryter innholdet for URL-adresse for ressursen med en `<script>` elementblokk."
  example:
  - "The following code example demonstrates the use of the RegisterClientScriptResource method.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager4#1](~/add/codesnippet/visualbasic/e804ef10-67d2-47bd-8da2-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager4#1](~/add/codesnippet/csharp/e804ef10-67d2-47bd-8da2-_1.aspx)]  \n  \n The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager4#2](~/add/codesnippet/visualbasic/e804ef10-67d2-47bd-8da2-_2.vb)]\n [!code-cs[System.Web.UI.ClientScriptManager4#2](~/add/codesnippet/csharp/e804ef10-67d2-47bd-8da2-_2.cs)]  \n  \n This example requires a JavaScript file named `Script_include.js`, with the following contents:  \n  \n```  \nfunction DoClick() {Form1.Message.value='Text from resource script.'}  \n```  \n  \n Compile the `Script_include.js` file as a resource in the `Samples.AspNet.CS.Controls` assembly that contains the `ClientScriptResourceLabel` class."
  syntax:
    content: public void RegisterClientScriptResource (Type type, string resourceName);
    parameters:
    - id: type
      type: System.Type
      description: "Typen for klienten skriptet ressursen til å registrere."
    - id: resourceName
      type: System.String
      description: "Navnet på klienten skriptet ressursen til å registrere."
  overload: System.Web.UI.ClientScriptManager.RegisterClientScriptResource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The client resource name is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The client resource name has a length of zero."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)
  id: RegisterExpandoAttribute(System.String,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterExpandoAttribute(String,String,String)
  nameWithType: ClientScriptManager.RegisterExpandoAttribute(String,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerer et navn/verdi-par som et attributt for egendefinert (expando) for den angitte kontrollen som er angitt en kontroll-IDen, attributtnavn og attributtverdi."
  remarks: "Metoden RegisterExpandoAttribute registrerer et navn/verdi-par som et egendefinert (expando)-attributt på den angitte <xref:System.Web.UI.Control>.</xref:System.Web.UI.Control> Attributtet expando er angitt dynamisk fra JavaScript for å beholde XHTML kompatibilitetsnivået for gjengitte kontrollens markup. Anførselstegn og omvendt skråstrek i egendefinert (expando) attributtverdier er escape-tegn. Hvis du ikke vil escape anførselstegn og omvendt skråstrek, kaller den <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A>overbelaste metoden og angi den `encode` parameter `false`.</xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A>       Hvis attributtet expando finnes ikke, eller finner ikke kontrollen for å legge til attributtet expando som, klienten skriptet fortsatt slippes ut, men den vil ikke påvirke kontrollen."
  syntax:
    content: public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue);
    parameters:
    - id: controlId
      type: System.String
      description: "Den <xref href=&quot;System.Web.UI.Control&quot;> </xref> på siden som inneholder det egendefinerte attributtet."
    - id: attributeName
      type: System.String
      description: "Navnet på det egendefinerte attributtet til å registrere."
    - id: attributeValue
      type: System.String
      description: "Verdien for det egendefinerte attributtet."
  overload: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)
  id: RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterExpandoAttribute(String,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterExpandoAttribute(String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerer et navn/verdi-par som et attributt for egendefinert (expando) for den angitte kontrollen som er angitt en kontroll-ID, et attributtnavn, en attributtverdi og en boolsk verdi som angir om kode attributtverdien."
  remarks: "Metoden RegisterExpandoAttribute registrerer et navn/verdi-par som et egendefinert (expando)-attributt på den angitte <xref:System.Web.UI.Control>.</xref:System.Web.UI.Control> Attributtet expando er angitt dynamisk fra JavaScript for å beholde XHTML kompatibilitetsnivået for gjengitte kontrollens markup. Angi den `encode` parameter `true` Hvis du trenger å Escape-kode anførselstegn og omvendt skråstrek i expando attributtets verdi.       Hvis attributtet expando finnes ikke, eller finner ikke kontrollen for å legge til attributtet expando som, klienten skriptet fortsatt slippes ut, men den vil ikke påvirke kontrollen."
  example:
  - "The following code example demonstrates how to use the RegisterExpandoAttribute method of the <xref:System.Web.UI.ClientScriptManager> class. The client script in the rendered page sets the `title` attribute of a `<span>` element.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager6#1](~/add/codesnippet/visualbasic/fbe2457b-d4ba-44a2-ac6e-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager6#1](~/add/codesnippet/csharp/fbe2457b-d4ba-44a2-ac6e-_1.aspx)]"
  syntax:
    content: public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue, bool encode);
    parameters:
    - id: controlId
      type: System.String
      description: "Den <xref href=&quot;System.Web.UI.Control&quot;> </xref> på siden som inneholder det egendefinerte attributtet."
    - id: attributeName
      type: System.String
      description: "Navnet på det egendefinerte attributtet til å registrere."
    - id: attributeValue
      type: System.String
      description: "Verdien for det egendefinerte attributtet."
    - id: encode
      type: System.Boolean
      description: "En boolsk verdi som angir om kode det egendefinerte attributtet til å registrere."
  overload: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)
  id: RegisterForEventValidation(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterForEventValidation(String)
  nameWithType: ClientScriptManager.RegisterForEventValidation(String)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerer en hendelse referanse for validering med en unik kontroll-ID som representerer klienten kontrollen genererer hendelsen."
  remarks: "For mer informasjon og eksempler, kan du se den <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>metoden.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>"
  example:
  - "The following example shows how to use the RegisterForEventValidation method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method in order to register a callback for validation, and how to validate that the callback originated from the page.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager9#2](~/add/codesnippet/csharp/m-system.web.ui.clientsc_1_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager9#2](~/add/codesnippet/visualbasic/m-system.web.ui.clientsc_1_1.aspx)]"
  syntax:
    content: public void RegisterForEventValidation (string uniqueId);
    parameters:
    - id: uniqueId
      type: System.String
      description: "En unik ID som representerer klienten kontrollen genererer hendelsen."
  overload: System.Web.UI.ClientScriptManager.RegisterForEventValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)
  id: RegisterForEventValidation(System.Web.UI.PostBackOptions)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterForEventValidation(PostBackOptions)
  nameWithType: ClientScriptManager.RegisterForEventValidation(PostBackOptions)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(PostBackOptions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerer en hendelse referanse for validering med <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref>."
  remarks: "For mer informasjon og eksempler, kan du se den <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>metoden.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>"
  syntax:
    content: public void RegisterForEventValidation (System.Web.UI.PostBackOptions options);
    parameters:
    - id: options
      type: System.Web.UI.PostBackOptions
      description: "En <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> objekt som angir hvordan klienten JavaScript genereres for å starte en sende tilbake hendelse."
  overload: System.Web.UI.ClientScriptManager.RegisterForEventValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)
  id: RegisterForEventValidation(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterForEventValidation(String,String)
  nameWithType: ClientScriptManager.RegisterForEventValidation(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerer en hendelse referanse for validering med en unik kontroll-ID og hendelsen argumenter som representerer klienten kontrollen genererer hendelsen."
  remarks: ''
  example:
  - "The following code example demonstrates using the RegisterForEventValidation method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page. To improve on the validation shown in the example, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role  \n  \n [!code-vb[System.Web.UI.ClientScriptManager9#1](~/add/codesnippet/visualbasic/b1669fea-2f0d-4c7f-a7ff-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager9#1](~/add/codesnippet/csharp/b1669fea-2f0d-4c7f-a7ff-_1.aspx)]  \n  \n The following code example demonstrates using the RegisterForEventValidation method to register a callback for validation.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager10#1](~/add/codesnippet/visualbasic/b1669fea-2f0d-4c7f-a7ff-_2.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager10#1](~/add/codesnippet/csharp/b1669fea-2f0d-4c7f-a7ff-_2.aspx)]"
  syntax:
    content: public void RegisterForEventValidation (string uniqueId, string argument);
    parameters:
    - id: uniqueId
      type: System.String
      description: "En unik ID som representerer klienten kontrollen genererer hendelsen."
    - id: argument
      type: System.String
      description: "Hendelsen argumenter sendt til klient-hendelsen."
  overload: System.Web.UI.ClientScriptManager.RegisterForEventValidation*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metoden kalles før den <xref:System.Web.UI.Page.Render*>metoden.</xref:System.Web.UI.Page.Render*>"
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)
  id: RegisterHiddenField(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterHiddenField(String,String)
  nameWithType: ClientScriptManager.RegisterHiddenField(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterHiddenField(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerer en skjult verdi med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objektet."
  remarks: "Metoden RegisterHiddenField oppretter en skjult `<input>` elementet i den gjengitte HTML-siden."
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and RegisterHiddenField methods. The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager5#1](~/add/codesnippet/csharp/0defa6d5-d8c8-43f1-af03-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager5#1](~/add/codesnippet/visualbasic/0defa6d5-d8c8-43f1-af03-_1.aspx)]"
  syntax:
    content: public void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);
    parameters:
    - id: hiddenFieldName
      type: System.String
      description: "Navnet på det skjulte feltet til å registrere."
    - id: hiddenFieldInitialValue
      type: System.String
      description: "Startverdien for feltet for å registrere."
  overload: System.Web.UI.ClientScriptManager.RegisterHiddenField*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hiddenFieldName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)
  id: RegisterOnSubmitStatement(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterOnSubmitStatement(Type,String,String)
  nameWithType: ClientScriptManager.RegisterOnSubmitStatement(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(Type,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerer en OnSubmit-setning med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt ved hjelp av en type, en nøkkel og et skript litteral. Uttrykket utfører når den <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;> </xref> er sendt."
  remarks: "En OnSubmit-setning identifiseres av nøkkelen og filtypen. Setninger med samme nøkkel og type regnes duplikater. Bare én setning med en angitt type og nøkkelpar kan registreres med siden. Forsøk på å registrere et uttrykk som er allerede registrert opprettes ikke en kopi av uttrykket.       Kall <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A>metode for å fastslå om en OnSubmit-setning er allerede registrert med en gitt nøkkel og type par og unngå uten grunn prøver å legge til skriptet.</xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A>       Den `script` parameteren for metoden RegisterOnSubmitStatement kan inneholde flere skriptkommandoer så lenge de er riktig delt med et semikolon (;).       RegisterOnSubmitStatement legger til et skript som er utført før siden sendes og gir deg muligheten til å avbryte innsending av.       For mer informasjon om HTML-skjemaer og `OnSubmit` attributtet, kan du se den [World Wide Web Consortium (W3C) webområdet](http://go.microsoft.com/fwlink/?linkid=37125)."
  example:
  - "The following code example demonstrates the use of the RegisterOnSubmitStatement method.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager3#1](~/add/codesnippet/visualbasic/597b1063-1251-4d00-82f9-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager3#1](~/add/codesnippet/csharp/597b1063-1251-4d00-82f9-_1.aspx)]"
  syntax:
    content: public void RegisterOnSubmitStatement (Type type, string key, string script);
    parameters:
    - id: type
      type: System.Type
      description: "Typen for uttrykket OnSubmit til å registrere."
    - id: key
      type: System.String
      description: "Nøkkelen i OnSubmit-setning for å registrere."
    - id: script
      type: System.String
      description: "Skriptet litteral i OnSubmit-setning for å registrere."
  overload: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)
  id: RegisterStartupScript(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterStartupScript(Type,String,String)
  nameWithType: ClientScriptManager.RegisterStartupScript(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterStartupScript(Type,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerer skriptet, startet med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt ved hjelp av en type, en nøkkel og et skript litteral."
  remarks: "En klient-skriptet identifiseres av nøkkelen og filtypen. Skript med samme nøkkel og type regnes duplikater. Bare én skriptet med en angitt type og nøkkelpar kan registreres med siden. Forsøk på å registrere et skript som allerede er registrert, oppretter ikke et duplikat av skriptet.       Kall til <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>metode for å finne ut om et skript som startet med en angitt nøkkel og typen paret er allerede registrert og unngå uten grunn prøver å legge til skriptet.</xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>       I denne overbelastning av den <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>metoden, må du kontrollere at skriptet inkludert i den `script` parameteren står i en `<script>` elementblokk.</xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>       Skriptblokken lagt til av den <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>metoden utfører når siden innlastingen, men før sidens <xref:System.Web.UI.Control.OnLoad%2A>denne hendelsen oppstår.</xref:System.Web.UI.Control.OnLoad%2A> </xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Skriptblokkene garanteres ikke skal utdata i rekkefølgen som de er registrert. Hvis rekkefølgen på Skriptblokkene er viktig, kan du bruke en <xref:System.Text.StringBuilder>objekt for å samle inn skriptene sammen i en enkelt streng og registrere dem alle i en enkelt klient skriptblokk.</xref:System.Text.StringBuilder>"
  example:
  - "The following code example demonstrates the use of the RegisterStartupScript method. Note that the beginning and closing script tags are included within the `script` parameter. To have the script tags added based on an additional parameter setting, see the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager11#1](~/add/codesnippet/csharp/77e56a73-ddd0-4c6d-99c5-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager11#1](~/add/codesnippet/visualbasic/77e56a73-ddd0-4c6d-99c5-_1.aspx)]"
  syntax:
    content: public void RegisterStartupScript (Type type, string key, string script);
    parameters:
    - id: type
      type: System.Type
      description: "Startet Skripttype til å registrere."
    - id: key
      type: System.String
      description: "Nøkkelen for oppstartsskript til å registrere."
    - id: script
      type: System.String
      description: "Startet-skript er litteral til å registrere."
  overload: System.Web.UI.ClientScriptManager.RegisterStartupScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)
  id: RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterStartupScript(Type,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterStartupScript(Type,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterStartupScript(Type,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerer skriptet, startet med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt ved hjelp av en type, en nøkkel, et skript litteral og en boolsk verdi som angir om å legge til skriptkode."
  remarks: "Et skript som startet identifiseres av nøkkelen og filtypen. Skript med samme nøkkel og type regnes duplikater. Bare én skriptet med en angitt type og nøkkelpar kan registreres med siden. Forsøk på å registrere et skript som allerede er registrert, oppretter ikke et duplikat av skriptet.       Kall til <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>metode for å finne ut om et skript som startet med en angitt nøkkel og typen paret er allerede registrert og unngå uten grunn prøver å legge til skriptet.</xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>       I denne overbelastning av den <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>metoden, kan du angi om skriptet angitt i den `script` parameteren står i en `<script>` elementblokk ved hjelp av den `addScriptTags` parameteren.</xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Angi `addScriptTags` til `true` indikerer at skriptkode blir lagt til automatisk.       Skriptblokken lagt til av den <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>metoden utfører når siden innlastingen, men før sidens <xref:System.Web.UI.Control.OnLoad%2A>denne hendelsen oppstår.</xref:System.Web.UI.Control.OnLoad%2A> </xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Skriptblokkene garanteres ikke skal utdata i rekkefølgen som de er registrert. Hvis rekkefølgen på Skriptblokkene er viktig, kan du bruke en <xref:System.Text.StringBuilder>objekt for å samle inn skriptene sammen i en enkelt streng og registrere dem alle i en enkelt klient skriptblokk.</xref:System.Text.StringBuilder>"
  example:
  - "The following code example demonstrates the use of the RegisterStartupScript method. Note that the `addScriptTags` parameter is set to `false` so the beginning and closing script tags are included with the `script` parameter.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/csharp/8a83f4c8-e8ef-4a4a-b8c6-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/visualbasic/8a83f4c8-e8ef-4a4a-b8c6-_1.aspx)]"
  syntax:
    content: public void RegisterStartupScript (Type type, string key, string script, bool addScriptTags);
    parameters:
    - id: type
      type: System.Type
      description: "Startet Skripttype til å registrere."
    - id: key
      type: System.String
      description: "Nøkkelen for oppstartsskript til å registrere."
    - id: script
      type: System.String
      description: "Startet-skript er litteral til å registrere."
    - id: addScriptTags
      type: System.Boolean
      description: "En boolsk verdi som angir om å legge til skriptkode."
  overload: System.Web.UI.ClientScriptManager.RegisterStartupScript*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.ValidateEvent(System.String)
  id: ValidateEvent(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: ValidateEvent(String)
  nameWithType: ClientScriptManager.ValidateEvent(String)
  fullName: System.Web.UI.ClientScriptManager.ValidateEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Validerer en klient-hendelse som ble registrert for hendelsen validering ved hjelp av den <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation*>metoden.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation*>"
  syntax:
    content: public void ValidateEvent (string uniqueId);
    parameters:
    - id: uniqueId
      type: System.String
      description: "En unik ID som representerer klienten kontrollen genererer hendelsen."
  overload: System.Web.UI.ClientScriptManager.ValidateEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)
  id: ValidateEvent(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: ValidateEvent(String,String)
  nameWithType: ClientScriptManager.ValidateEvent(String,String)
  fullName: System.Web.UI.ClientScriptManager.ValidateEvent(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Validerer en klient-hendelse som ble registrert for hendelsen validering ved hjelp av den <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation*>metoden.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation*>"
  remarks: ''
  example:
  - "The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the ValidateEvent method to register a callback for validation and to validate that the callback originated from the page. To improve on the validation shown here, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role  \n  \n [!code-vb[System.Web.UI.ClientScriptManager9#1](~/add/codesnippet/visualbasic/m-system.web.ui.clientsc_3_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager9#1](~/add/codesnippet/csharp/m-system.web.ui.clientsc_3_1.aspx)]"
  syntax:
    content: public void ValidateEvent (string uniqueId, string argument);
    parameters:
    - id: uniqueId
      type: System.String
      description: "En unik ID som representerer klienten kontrollen genererer hendelsen."
    - id: argument
      type: System.String
      description: "Hendelsen-argumenter sendt til klient-hendelsen."
  overload: System.Web.UI.ClientScriptManager.ValidateEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>uniqueId</code>er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en tom streng (&quot;&quot;)."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetCallbackEventReference(Control,String,String,String)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetCallbackEventReference(Control,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetCallbackEventReference(String,String,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(String,String,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(String,String,String,String,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetCallbackEventReference(Control,String,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackClientHyperlink(Control,String)
  nameWithType: ClientScriptManager.GetPostBackClientHyperlink(Control,String)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(Control,String)
- uid: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackClientHyperlink(Control,String,Boolean)
  nameWithType: ClientScriptManager.GetPostBackClientHyperlink(Control,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(Control,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackEventReference(PostBackOptions)
  nameWithType: ClientScriptManager.GetPostBackEventReference(PostBackOptions)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(PostBackOptions)
- uid: System.Web.UI.PostBackOptions
  parent: System.Web.UI
  isExternal: false
  name: PostBackOptions
  nameWithType: PostBackOptions
  fullName: System.Web.UI.PostBackOptions
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackEventReference(Control,String)
  nameWithType: ClientScriptManager.GetPostBackEventReference(Control,String)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(Control,String)
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackEventReference(PostBackOptions,Boolean)
  nameWithType: ClientScriptManager.GetPostBackEventReference(PostBackOptions,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(PostBackOptions,Boolean)
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackEventReference(Control,String,Boolean)
  nameWithType: ClientScriptManager.GetPostBackEventReference(Control,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(Control,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetWebResourceUrl(Type,String)
  nameWithType: ClientScriptManager.GetWebResourceUrl(Type,String)
  fullName: System.Web.UI.ClientScriptManager.GetWebResourceUrl(Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptBlockRegistered(String)
  nameWithType: ClientScriptManager.IsClientScriptBlockRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(String)
- uid: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptBlockRegistered(Type,String)
  nameWithType: ClientScriptManager.IsClientScriptBlockRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(Type,String)
- uid: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptIncludeRegistered(String)
  nameWithType: ClientScriptManager.IsClientScriptIncludeRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(String)
- uid: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptIncludeRegistered(Type,String)
  nameWithType: ClientScriptManager.IsClientScriptIncludeRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(Type,String)
- uid: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsOnSubmitStatementRegistered(String)
  nameWithType: ClientScriptManager.IsOnSubmitStatementRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(String)
- uid: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsOnSubmitStatementRegistered(Type,String)
  nameWithType: ClientScriptManager.IsOnSubmitStatementRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(Type,String)
- uid: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsStartupScriptRegistered(String)
  nameWithType: ClientScriptManager.IsStartupScriptRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(String)
- uid: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsStartupScriptRegistered(Type,String)
  nameWithType: ClientScriptManager.IsStartupScriptRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(Type,String)
- uid: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterArrayDeclaration(String,String)
  nameWithType: ClientScriptManager.RegisterArrayDeclaration(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptBlock(Type,String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptBlock(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(Type,String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptBlock(Type,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterClientScriptBlock(Type,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(Type,String,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptInclude(String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptInclude(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptInclude(Type,String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptInclude(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(Type,String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptResource(Type,String)
  nameWithType: ClientScriptManager.RegisterClientScriptResource(Type,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptResource(Type,String)
- uid: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterExpandoAttribute(String,String,String)
  nameWithType: ClientScriptManager.RegisterExpandoAttribute(String,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(String,String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterExpandoAttribute(String,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterExpandoAttribute(String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(String,String,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterForEventValidation(String)
  nameWithType: ClientScriptManager.RegisterForEventValidation(String)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(String)
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterForEventValidation(PostBackOptions)
  nameWithType: ClientScriptManager.RegisterForEventValidation(PostBackOptions)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(PostBackOptions)
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterForEventValidation(String,String)
  nameWithType: ClientScriptManager.RegisterForEventValidation(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterHiddenField(String,String)
  nameWithType: ClientScriptManager.RegisterHiddenField(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterHiddenField(String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterOnSubmitStatement(Type,String,String)
  nameWithType: ClientScriptManager.RegisterOnSubmitStatement(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(Type,String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterStartupScript(Type,String,String)
  nameWithType: ClientScriptManager.RegisterStartupScript(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterStartupScript(Type,String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterStartupScript(Type,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterStartupScript(Type,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterStartupScript(Type,String,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.ValidateEvent(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: ValidateEvent(String)
  nameWithType: ClientScriptManager.ValidateEvent(String)
  fullName: System.Web.UI.ClientScriptManager.ValidateEvent(String)
- uid: System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: ValidateEvent(String,String)
  nameWithType: ClientScriptManager.ValidateEvent(String,String)
  fullName: System.Web.UI.ClientScriptManager.ValidateEvent(String,String)
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetCallbackEventReference
  nameWithType: ClientScriptManager.GetCallbackEventReference
- uid: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackClientHyperlink
  nameWithType: ClientScriptManager.GetPostBackClientHyperlink
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackEventReference
  nameWithType: ClientScriptManager.GetPostBackEventReference
- uid: System.Web.UI.ClientScriptManager.GetWebResourceUrl*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetWebResourceUrl
  nameWithType: ClientScriptManager.GetWebResourceUrl
- uid: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptBlockRegistered
  nameWithType: ClientScriptManager.IsClientScriptBlockRegistered
- uid: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptIncludeRegistered
  nameWithType: ClientScriptManager.IsClientScriptIncludeRegistered
- uid: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsOnSubmitStatementRegistered
  nameWithType: ClientScriptManager.IsOnSubmitStatementRegistered
- uid: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsStartupScriptRegistered
  nameWithType: ClientScriptManager.IsStartupScriptRegistered
- uid: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterArrayDeclaration
  nameWithType: ClientScriptManager.RegisterArrayDeclaration
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptBlock
  nameWithType: ClientScriptManager.RegisterClientScriptBlock
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptInclude
  nameWithType: ClientScriptManager.RegisterClientScriptInclude
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptResource*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptResource
  nameWithType: ClientScriptManager.RegisterClientScriptResource
- uid: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterExpandoAttribute
  nameWithType: ClientScriptManager.RegisterExpandoAttribute
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterForEventValidation
  nameWithType: ClientScriptManager.RegisterForEventValidation
- uid: System.Web.UI.ClientScriptManager.RegisterHiddenField*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterHiddenField
  nameWithType: ClientScriptManager.RegisterHiddenField
- uid: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterOnSubmitStatement
  nameWithType: ClientScriptManager.RegisterOnSubmitStatement
- uid: System.Web.UI.ClientScriptManager.RegisterStartupScript*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterStartupScript
  nameWithType: ClientScriptManager.RegisterStartupScript
- uid: System.Web.UI.ClientScriptManager.ValidateEvent*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: ValidateEvent
  nameWithType: ClientScriptManager.ValidateEvent
