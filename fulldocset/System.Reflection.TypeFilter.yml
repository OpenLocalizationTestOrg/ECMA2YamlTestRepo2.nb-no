### YamlMime:ManagedReference
items:
- uid: System.Reflection.TypeFilter
  id: TypeFilter
  langs:
  - csharp
  name: TypeFilter
  nameWithType: TypeFilter
  fullName: System.Reflection.TypeFilter
  type: Delegate
  summary: "Filtrerer klasser som er representert i en matrise av <xref:System.Type>objekter.</xref:System.Type>"
  remarks: "Den `TypeFilter` representanten brukes til å filtrere en liste over klasser. Spesielt, kan du bruke den til å filtrere klasser som er representert i en matrise av <xref:System.Type>objekter.</xref:System.Type> Den <xref:System.Type.FindInterfaces%2A?displayProperty=fullName>metoden bruker denne representanten til å filtrere listen over grensesnitt som returneres.</xref:System.Type.FindInterfaces%2A?displayProperty=fullName> Hver avledet type <xref:System.Delegate>og <xref:System.MulticastDelegate>har en konstruktør og en `DynamicInvoke` metode.</xref:System.MulticastDelegate> </xref:System.Delegate> Se Visual C++ kodeeksempel som er angitt i beskrivelsen for `Delegate`."
  example:
  - "This example shows how to define a method matching the TypeFilter delegate prototype allowing you to use reflection to filter or return a subset of matching entries.  \n  \n [!code-vb[Typefilter#1](~/add/codesnippet/visualbasic/t-system.reflection.type_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public delegate bool TypeFilter(Type m, object filterCriteria);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
