### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Messaging.CallContext
  id: CallContext
  children:
  - System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot(System.String)
  - System.Runtime.Remoting.Messaging.CallContext.GetData(System.String)
  - System.Runtime.Remoting.Messaging.CallContext.GetHeaders
  - System.Runtime.Remoting.Messaging.CallContext.HostContext
  - System.Runtime.Remoting.Messaging.CallContext.LogicalGetData(System.String)
  - System.Runtime.Remoting.Messaging.CallContext.LogicalSetData(System.String,System.Object)
  - System.Runtime.Remoting.Messaging.CallContext.SetData(System.String,System.Object)
  - System.Runtime.Remoting.Messaging.CallContext.SetHeaders(System.Runtime.Remoting.Messaging.Header[])
  langs:
  - csharp
  name: CallContext
  nameWithType: CallContext
  fullName: System.Runtime.Remoting.Messaging.CallContext
  type: Class
  summary: "Inneholder et sett med egenskaper som overføres med kodebane kjøring. Denne klassen kan ikke arves."
  remarks: "CallContext er et spesialiserte collection-objekt som er lik en tråd lokalt for metodekall og gir data spor som er unikt for hver logiske tråd for utførelse. Sporene deles ikke mellom kall kontekster på andre logiske tråder. Objekter kan legges til CallContext siden den følger ned sikkerhetskopiere kodebane kjøring og undersøkes av forskjellige objekter langs banen.       Når et eksternt metodekall gjøres til et objekt i en annen <xref:System.AppDomain>, CallContext klassen genererer en <xref:System.Runtime.Remoting.Messaging.LogicalCallContext>-forekomst som følger sammen med det eksterne kallet.</xref:System.Runtime.Remoting.Messaging.LogicalCallContext> </xref:System.AppDomain> Bare objekter som Eksponer den <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative>grensesnittet og lagres i CallContext er overført utenfor for <xref:System.AppDomain>i <xref:System.Runtime.Remoting.Messaging.LogicalCallContext>.</xref:System.Runtime.Remoting.Messaging.LogicalCallContext> </xref:System.AppDomain> </xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> Objekter som ikke støtter dette grensesnittet overføres ikke i <xref:System.Runtime.Remoting.Messaging.LogicalCallContext>forekomster med eksterne metodekall.</xref:System.Runtime.Remoting.Messaging.LogicalCallContext>      > [!NOTE] > Alle metoder i CallContext er statiske og brukes i konteksten kall i gjeldende <xref:System.Threading.Thread>.</xref:System.Threading.Thread>      > [!NOTE] > Denne klassen er en kobling behov. En `SecurityException` oppstår hvis umiddelbar oppkalleren ikke har tillatelse for infrastruktur. Se [koblingen krav](~/add/includes/ajax-current-ext-md.md) for mer informasjon."
  example:
  - "The following code example demonstrates the use of the CallContext class to transmit [Principal and Identity Objects](~/add/includes/ajax-current-ext-md.md) to a remote location for identification. To view the code for the `LogicalCallContextData` class used in this sample, see the example for the <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> interface. To view the code for the `HelloServiceClass` class used in this sample, see the example for the <xref:System.Runtime.Remoting.Messaging.CallContext.GetData%2A> method. To view the code for the server class used in this sample, see the example for the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> class.  \n  \n [!code-cpp[CallContext#1](~/add/codesnippet/cpp/t-system.runtime.remotin_16_1.cpp)]\n [!code-cs[CallContext#1](~/add/codesnippet/csharp/t-system.runtime.remotin_16_1.cs)]\n [!code-vb[CallContext#1](~/add/codesnippet/visualbasic/t-system.runtime.remotin_16_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public sealed class CallContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot(System.String)
  id: FreeNamedDataSlot(System.String)
  parent: System.Runtime.Remoting.Messaging.CallContext
  langs:
  - csharp
  name: FreeNamedDataSlot(String)
  nameWithType: CallContext.FreeNamedDataSlot(String)
  fullName: System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Tømmer et data-spor med det angitte navnet."
  remarks: ''
  example:
  - "The following code example shows a client creating a named data slot, calling a method on the remote object that displays the value of the named data slot that was returned from the logical thread, and frees that named data slot.  \n  \n [!code-cpp[CallContext_GetHeaders#1](~/add/codesnippet/cpp/m-system.runtime.remotin_115_1.cpp)]\n [!code-cs[CallContext_GetHeaders#1](~/add/codesnippet/csharp/m-system.runtime.remotin_115_1.cs)]\n [!code-vb[CallContext_GetHeaders#1](~/add/codesnippet/visualbasic/m-system.runtime.remotin_115_1.vb)]"
  syntax:
    content: public static void FreeNamedDataSlot (string name);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på data plass til å være tom."
  overload: System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Umiddelbar oppkalleren har ikke tillatelse for infrastruktur."
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.CallContext.GetData(System.String)
  id: GetData(System.String)
  parent: System.Runtime.Remoting.Messaging.CallContext
  langs:
  - csharp
  name: GetData(String)
  nameWithType: CallContext.GetData(String)
  fullName: System.Runtime.Remoting.Messaging.CallContext.GetData(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Henter et objekt med det angitte navnet fra den <xref href=&quot;System.Runtime.Remoting.Messaging.CallContext&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example demonstrates the use of the GetData method to transmit [Principal and Identity Objects](~/add/includes/ajax-current-ext-md.md) to a remote location for identification. To view the code for the `LogicalCallContextData` class used in this sample, see the example for the <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> interface. To view the code for the client class used in the sample, see the example for the <xref:System.Runtime.Remoting.Messaging.CallContext> class. To view the code for the server class used in this sample, see the example for the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> class.  \n  \n [!code-cpp[CallContext#3](~/add/codesnippet/cpp/m-system.runtime.remotin_58_1.cpp)]\n [!code-cs[CallContext#3](~/add/codesnippet/csharp/m-system.runtime.remotin_58_1.cs)]\n [!code-vb[CallContext#3](~/add/codesnippet/visualbasic/m-system.runtime.remotin_58_1.vb)]"
  syntax:
    content: public static object GetData (string name);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på elementet i konteksten kall."
    return:
      type: System.Object
      description: "Objektet i kallet kontekst som er tilknyttet det angitte navnet."
  overload: System.Runtime.Remoting.Messaging.CallContext.GetData*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Umiddelbar oppkalleren har ikke tillatelse for infrastruktur."
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.CallContext.GetHeaders
  id: GetHeaders
  parent: System.Runtime.Remoting.Messaging.CallContext
  langs:
  - csharp
  name: GetHeaders()
  nameWithType: CallContext.GetHeaders()
  fullName: System.Runtime.Remoting.Messaging.CallContext.GetHeaders()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Returnerer attributter som skal sendes sammen med metodekallet."
  remarks: ''
  example:
  - "The following code example sends headers to a remote method and prints the content of those headers to the console when the remote method returns.  \n  \n [!code-cpp[CallContext_GetHeaders#2](~/add/codesnippet/cpp/m-system.runtime.remotin_44_1.cpp)]\n [!code-cs[CallContext_GetHeaders#2](~/add/codesnippet/csharp/m-system.runtime.remotin_44_1.cs)]\n [!code-vb[CallContext_GetHeaders#2](~/add/codesnippet/visualbasic/m-system.runtime.remotin_44_1.vb)]"
  syntax:
    content: public static System.Runtime.Remoting.Messaging.Header[] GetHeaders ();
    parameters: []
    return:
      type: System.Runtime.Remoting.Messaging.Header[]
      description: "Attributter som skal sendes sammen med metodekallet."
  overload: System.Runtime.Remoting.Messaging.CallContext.GetHeaders*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Umiddelbar oppkalleren har ikke tillatelse for infrastruktur."
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.CallContext.HostContext
  id: HostContext
  parent: System.Runtime.Remoting.Messaging.CallContext
  langs:
  - csharp
  name: HostContext
  nameWithType: CallContext.HostContext
  fullName: System.Runtime.Remoting.Messaging.CallContext.HostContext
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Henter eller angir verten konteksten knyttet til gjeldende tråd."
  syntax:
    content: public static object HostContext { get; set; }
    return:
      type: System.Object
      description: "Vert-kontekst som er knyttet til gjeldende tråd."
  overload: System.Runtime.Remoting.Messaging.CallContext.HostContext*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Umiddelbar oppkalleren har ikke tillatelse for infrastruktur."
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.CallContext.LogicalGetData(System.String)
  id: LogicalGetData(System.String)
  parent: System.Runtime.Remoting.Messaging.CallContext
  langs:
  - csharp
  name: LogicalGetData(String)
  nameWithType: CallContext.LogicalGetData(String)
  fullName: System.Runtime.Remoting.Messaging.CallContext.LogicalGetData(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Henter et objekt med det angitte navnet fra logiske kall konteksten."
  syntax:
    content: public static object LogicalGetData (string name);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på elementet i logiske kall konteksten."
    return:
      type: System.Object
      description: "Objektet i logiske kall kontekst som er tilknyttet det angitte navnet."
  overload: System.Runtime.Remoting.Messaging.CallContext.LogicalGetData*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Umiddelbar oppkalleren har ikke tillatelse for infrastruktur."
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.CallContext.LogicalSetData(System.String,System.Object)
  id: LogicalSetData(System.String,System.Object)
  parent: System.Runtime.Remoting.Messaging.CallContext
  langs:
  - csharp
  name: LogicalSetData(String,Object)
  nameWithType: CallContext.LogicalSetData(String,Object)
  fullName: System.Runtime.Remoting.Messaging.CallContext.LogicalSetData(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Lagrer et gitt objekt i logiske kall konteksten og knyttes til det angitte navnet."
  syntax:
    content: public static void LogicalSetData (string name, object data);
    parameters:
    - id: name
      type: System.String
      description: "Navnet skal knyttes til det nye elementet i logiske kall konteksten."
    - id: data
      type: System.Object
      description: "Objektet for lagring i logiske kall konteksten, dette objektet må være serialiseres."
  overload: System.Runtime.Remoting.Messaging.CallContext.LogicalSetData*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Umiddelbar oppkalleren har ikke tillatelse for infrastruktur."
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.CallContext.SetData(System.String,System.Object)
  id: SetData(System.String,System.Object)
  parent: System.Runtime.Remoting.Messaging.CallContext
  langs:
  - csharp
  name: SetData(String,Object)
  nameWithType: CallContext.SetData(String,Object)
  fullName: System.Runtime.Remoting.Messaging.CallContext.SetData(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Lagrer et gitt objekt og knyttes til det angitte navnet."
  remarks: ''
  example:
  - "The following code example demonstrates the use of the SetData method to transmit [Principal and Identity Objects](~/add/includes/ajax-current-ext-md.md) to a remote location for identification. To view the code for the `LogicalCallContextData` class used in this sample, see the example for the <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> interface. To view the code for the `HelloServiceClass` class used in this sample, see the example for the <xref:System.Runtime.Remoting.Messaging.CallContext.GetData%2A> method. To view the code for the server class used in this sample, see the example for the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> class.  \n  \n [!code-cpp[CallContext#1](~/add/codesnippet/cpp/79526df4-afd7-4495-8bab-_1.cpp)]\n [!code-cs[CallContext#1](~/add/codesnippet/csharp/79526df4-afd7-4495-8bab-_1.cs)]\n [!code-vb[CallContext#1](~/add/codesnippet/visualbasic/79526df4-afd7-4495-8bab-_1.vb)]"
  syntax:
    content: public static void SetData (string name, object data);
    parameters:
    - id: name
      type: System.String
      description: "Navnet skal knyttes til det nye elementet i konteksten kall."
    - id: data
      type: System.Object
      description: "Objektet for lagring i konteksten kall."
  overload: System.Runtime.Remoting.Messaging.CallContext.SetData*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Umiddelbar oppkalleren har ikke tillatelse for infrastruktur."
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.CallContext.SetHeaders(System.Runtime.Remoting.Messaging.Header[])
  id: SetHeaders(System.Runtime.Remoting.Messaging.Header[])
  parent: System.Runtime.Remoting.Messaging.CallContext
  langs:
  - csharp
  name: SetHeaders(Header[])
  nameWithType: CallContext.SetHeaders(Header[])
  fullName: System.Runtime.Remoting.Messaging.CallContext.SetHeaders(Header[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Angir attributter som skal sendes sammen med metodekallet."
  remarks: ''
  example:
  - "The following example code shows the ease with which a header is put on the logical thread.  \n  \n [!code-cpp[CallContext_GetHeaders#3](~/add/codesnippet/cpp/8c77ae3c-b36c-42f8-9ac6-_1.cpp)]\n [!code-cs[CallContext_GetHeaders#3](~/add/codesnippet/csharp/8c77ae3c-b36c-42f8-9ac6-_1.cs)]\n [!code-vb[CallContext_GetHeaders#3](~/add/codesnippet/visualbasic/8c77ae3c-b36c-42f8-9ac6-_1.vb)]"
  syntax:
    content: public static void SetHeaders (System.Runtime.Remoting.Messaging.Header[] headers);
    parameters:
    - id: headers
      type: System.Runtime.Remoting.Messaging.Header[]
      description: "En <xref href=&quot;System.Runtime.Remoting.Messaging.Header&quot;> </xref> rekke hodene som skal sendes sammen med metodekallet."
  overload: System.Runtime.Remoting.Messaging.CallContext.SetHeaders*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Umiddelbar oppkalleren har ikke tillatelse for infrastruktur."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot(System.String)
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: FreeNamedDataSlot(String)
  nameWithType: CallContext.FreeNamedDataSlot(String)
  fullName: System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Messaging.CallContext.GetData(System.String)
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: GetData(String)
  nameWithType: CallContext.GetData(String)
  fullName: System.Runtime.Remoting.Messaging.CallContext.GetData(String)
- uid: System.Runtime.Remoting.Messaging.CallContext.GetHeaders
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: GetHeaders()
  nameWithType: CallContext.GetHeaders()
  fullName: System.Runtime.Remoting.Messaging.CallContext.GetHeaders()
- uid: System.Runtime.Remoting.Messaging.Header[]
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: Header
  nameWithType: Header
  fullName: System.Runtime.Remoting.Messaging.Header[]
  spec.csharp:
  - uid: System.Runtime.Remoting.Messaging.Header
    name: Header
    nameWithType: Header
    fullName: Header[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Remoting.Messaging.CallContext.HostContext
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: HostContext
  nameWithType: CallContext.HostContext
  fullName: System.Runtime.Remoting.Messaging.CallContext.HostContext
- uid: System.Runtime.Remoting.Messaging.CallContext.LogicalGetData(System.String)
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: LogicalGetData(String)
  nameWithType: CallContext.LogicalGetData(String)
  fullName: System.Runtime.Remoting.Messaging.CallContext.LogicalGetData(String)
- uid: System.Runtime.Remoting.Messaging.CallContext.LogicalSetData(System.String,System.Object)
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: LogicalSetData(String,Object)
  nameWithType: CallContext.LogicalSetData(String,Object)
  fullName: System.Runtime.Remoting.Messaging.CallContext.LogicalSetData(String,Object)
- uid: System.Runtime.Remoting.Messaging.CallContext.SetData(System.String,System.Object)
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: SetData(String,Object)
  nameWithType: CallContext.SetData(String,Object)
  fullName: System.Runtime.Remoting.Messaging.CallContext.SetData(String,Object)
- uid: System.Runtime.Remoting.Messaging.CallContext.SetHeaders(System.Runtime.Remoting.Messaging.Header[])
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: SetHeaders(Header[])
  nameWithType: CallContext.SetHeaders(Header[])
  fullName: System.Runtime.Remoting.Messaging.CallContext.SetHeaders(Header[])
- uid: System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot*
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: FreeNamedDataSlot
  nameWithType: CallContext.FreeNamedDataSlot
- uid: System.Runtime.Remoting.Messaging.CallContext.GetData*
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: GetData
  nameWithType: CallContext.GetData
- uid: System.Runtime.Remoting.Messaging.CallContext.GetHeaders*
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: GetHeaders
  nameWithType: CallContext.GetHeaders
- uid: System.Runtime.Remoting.Messaging.CallContext.HostContext*
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: HostContext
  nameWithType: CallContext.HostContext
- uid: System.Runtime.Remoting.Messaging.CallContext.LogicalGetData*
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: LogicalGetData
  nameWithType: CallContext.LogicalGetData
- uid: System.Runtime.Remoting.Messaging.CallContext.LogicalSetData*
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: LogicalSetData
  nameWithType: CallContext.LogicalSetData
- uid: System.Runtime.Remoting.Messaging.CallContext.SetData*
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: SetData
  nameWithType: CallContext.SetData
- uid: System.Runtime.Remoting.Messaging.CallContext.SetHeaders*
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: SetHeaders
  nameWithType: CallContext.SetHeaders
