### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.MenuItemBindingCollection
  id: MenuItemBindingCollection
  children:
  - System.Web.UI.WebControls.MenuItemBindingCollection.Add(System.Web.UI.WebControls.MenuItemBinding)
  - System.Web.UI.WebControls.MenuItemBindingCollection.Contains(System.Web.UI.WebControls.MenuItemBinding)
  - System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo(System.Web.UI.WebControls.MenuItemBinding[],System.Int32)
  - System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType(System.Int32)
  - System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes
  - System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf(System.Web.UI.WebControls.MenuItemBinding)
  - System.Web.UI.WebControls.MenuItemBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.MenuItemBinding)
  - System.Web.UI.WebControls.MenuItemBindingCollection.Item(System.Int32)
  - System.Web.UI.WebControls.MenuItemBindingCollection.OnClear
  - System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete(System.Int32,System.Object)
  - System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate(System.Object)
  - System.Web.UI.WebControls.MenuItemBindingCollection.Remove(System.Web.UI.WebControls.MenuItemBinding)
  - System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject(System.Object)
  langs:
  - csharp
  name: MenuItemBindingCollection
  nameWithType: MenuItemBindingCollection
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection
  type: Class
  summary: "Representerer en samling av <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> objekter."
  remarks: "Klassen MenuItemBindingCollection brukes til å lagre og behandle en samling av <xref:System.Web.UI.WebControls.MenuItemBinding>objekter i den <xref:System.Web.UI.WebControls.Menu>kontroll.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding> Den <xref:System.Web.UI.WebControls.Menu>kontrollen bruker MenuItemBindingCollection-klassen som datatypen for den <xref:System.Web.UI.WebControls.Menu.DataBindings%2A>egenskapen.</xref:System.Web.UI.WebControls.Menu.DataBindings%2A> </xref:System.Web.UI.WebControls.Menu> Den <xref:System.Web.UI.WebControls.Menu.DataBindings%2A>egenskapen brukes til å lagre bindinger for menyen elementet definert for den <xref:System.Web.UI.WebControls.Menu>kontroll.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.Menu.DataBindings%2A>      > [!NOTE] > Rekkefølgen <xref:System.Web.UI.WebControls.MenuItemBinding>objekter vises i samlingen har ingen innvirkning på hvordan disse objektene brukes til menyelementer i en <xref:System.Web.UI.WebControls.Menu>kontroll.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding>       Klassen MenuItemBindingCollection støtter flere metoder for å få tilgang til elementer i samlingen:-Bruk av <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Item%2A>indekserer til å hente direkte i <xref:System.Web.UI.WebControls.MenuItemBinding>objektet i en bestemt nullbaserte indeksen.</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItemBindingCollection.Item%2A>      -Bruk av <xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>metode for å opprette en opplisting som kan brukes til å gå gjennom samlingen.</xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>      -Bruk av <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A>metode for å kopiere innholdet i samlingen til en matrise.</xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A>       Du kan programmatisk administrere en MenuItemBindingCollection-objektet ved å legge til og fjerne <xref:System.Web.UI.WebControls.MenuItemBinding>objekter.</xref:System.Web.UI.WebControls.MenuItemBinding> Hvis du vil legge til menyelementer i samlingen, kan du bruke den <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Add%2A>eller <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Insert%2A>metode.</xref:System.Web.UI.WebControls.MenuItemBindingCollection.Insert%2A> </xref:System.Web.UI.WebControls.MenuItemBindingCollection.Add%2A> Hvis du vil fjerne noder fra samlingen, kan du bruke den <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Remove%2A>, <xref:System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt%2A>, eller <xref:System.Web.UI.StateManagedCollection.Clear%2A>metode.</xref:System.Web.UI.StateManagedCollection.Clear%2A> </xref:System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt%2A> </xref:System.Web.UI.WebControls.MenuItemBindingCollection.Remove%2A>       Klassen MenuItemBindingCollection inneholder egenskaper og metoder som gjør det mulig å hente informasjon om samlingen seg selv. Hvis du vil finne ut hvor mange elementer som i samlingen, kan du bruke den <xref:System.Web.UI.StateManagedCollection.Count%2A>egenskapen.</xref:System.Web.UI.StateManagedCollection.Count%2A> Hvis du vil finne ut om samlingen inneholder en bestemt <xref:System.Web.UI.WebControls.MenuItemBinding>objekt, bruker du den <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Contains%2A>metoden.</xref:System.Web.UI.WebControls.MenuItemBindingCollection.Contains%2A> </xref:System.Web.UI.WebControls.MenuItemBinding> Å hente indeksen for et <xref:System.Web.UI.WebControls.MenuItemBinding>objektet i samlingen, bruker den <xref:System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf%2A>metoden.</xref:System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf%2A> </xref:System.Web.UI.WebControls.MenuItemBinding>"
  example:
  - "The following code example demonstrates how to populate a MenuItemBindingCollection object declaratively. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-vb[MenuBindings#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_217_1.aspx)]\n [!code-cs[MenuBindings#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_217_1.aspx)]  \n  \n The following code example demonstrates how to add <xref:System.Web.UI.WebControls.MenuItemBinding> objects to a MenuItemBindingCollection object programmatically. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-cs[MenuItemBindingCollectionAdd#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_217_2.aspx)]\n [!code-vb[MenuItemBindingCollectionAdd#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_217_2.aspx)]  \n  \n The following is sample site map data for the previous examples.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: 'public sealed class MenuItemBindingCollection : System.Web.UI.StateManagedCollection'
  inheritance:
  - System.Object
  - System.Web.UI.StateManagedCollection
  implements: []
  inheritedMembers:
  - System.Web.UI.StateManagedCollection.Clear
  - System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.StateManagedCollection.Count
  - System.Web.UI.StateManagedCollection.GetEnumerator
  - System.Web.UI.StateManagedCollection.OnClearComplete
  - System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.SetDirty
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot
  - System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Clear
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Add(System.Web.UI.WebControls.MenuItemBinding)
  id: Add(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: Add(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Add(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Add(MenuItemBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Legger de angitte <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> objektet til slutten av samlingen."
  remarks: "Bruk Add-metode til å legge til den angitte <xref:System.Web.UI.WebControls.MenuItemBinding>objektet til slutten av samlingen.</xref:System.Web.UI.WebControls.MenuItemBinding>      > [!NOTE] > Du kan legge til nullverdier og dupliserte <xref:System.Web.UI.WebControls.MenuItemBinding>objekter i samlingen.</xref:System.Web.UI.WebControls.MenuItemBinding>       Som et alternativ, du kan sette inn en <xref:System.Web.UI.WebControls.MenuItemBinding>objektet i samlingen på en bestemt indeks ved hjelp av den <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Insert%2A>metoden.</xref:System.Web.UI.WebControls.MenuItemBindingCollection.Insert%2A> </xref:System.Web.UI.WebControls.MenuItemBinding>      > [!NOTE] > Rekkefølgen <xref:System.Web.UI.WebControls.MenuItemBinding>objekter vises i samlingen har ingen innvirkning på hvordan disse objektene brukes til menyelementer i en <xref:System.Web.UI.WebControls.Menu>kontroll.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding>"
  example:
  - "The following code example demonstrates how to use the Add method to append a <xref:System.Web.UI.WebControls.MenuItemBinding> object to the end of the <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> collection of a <xref:System.Web.UI.WebControls.Menu> control. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-cs[MenuItemBindingCollectionAdd#1](~/add/codesnippet/csharp/455e41fd-8e8e-40dd-99e4-_1.aspx)]\n [!code-vb[MenuItemBindingCollectionAdd#1](~/add/codesnippet/visualbasic/455e41fd-8e8e-40dd-99e4-_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public int Add (System.Web.UI.WebControls.MenuItemBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.MenuItemBinding
      description: "Den <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> skal føyes til slutten av samlingen."
    return:
      type: System.Int32
      description: "Indeksen som den <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> ble satt inn i samlingen."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Contains(System.Web.UI.WebControls.MenuItemBinding)
  id: Contains(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: Contains(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Contains(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Contains(MenuItemBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Bestemmer om den angitte <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> objektet er i samlingen."
  remarks: "Bruk Contains-metoden til å fastslå om en <xref:System.Web.UI.WebControls.MenuItemBinding>objektet finnes i samlingen.</xref:System.Web.UI.WebControls.MenuItemBinding> Denne metoden brukes vanligvis til å teste for forekomsten av en <xref:System.Web.UI.WebControls.MenuItemBinding>objektet før du utfører en oppgave, for eksempel legge til eller fjerne en binding for menyen elementet fra samlingen.</xref:System.Web.UI.WebControls.MenuItemBinding>"
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.MenuItemBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.MenuItemBinding
      description: "Den <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> til å finne."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den angitte <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> er befinner seg i samlingen; ellers, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo(System.Web.UI.WebControls.MenuItemBinding[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.MenuItemBinding[],System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: CopyTo(MenuItemBinding[],Int32)
  nameWithType: MenuItemBindingCollection.CopyTo(MenuItemBinding[],Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo(MenuItemBinding[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Kopierer alle elementer fra de <xref href=&quot;System.Web.UI.WebControls.MenuItemBindingCollection&quot;> </xref> -objekt til en kompatibel endimensjonal matrise av <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> objekter, med Start fra den angitte indeksen i Målmatrisen."
  remarks: "Bruk den <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A>metoden Kopier innholdet i samlingen til den angitte nullbasert matrisen.</xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A> Elementene kopieres fra den angitte indeksen på Målmatrisen. Med matrisen, kan du deretter bruke matrise syntaksen tilgang til elementer i den <xref:System.Web.UI.WebControls.MenuItemBindingCollection>objektet.</xref:System.Web.UI.WebControls.MenuItemBindingCollection>       Alternativt kan du også bruke den <xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>metode for å opprette en opplisting som kan brukes til å få tilgang til elementer i samlingen.</xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>"
  example:
  - "The following code example demonstrates how to use the CopyTo method to copy the <xref:System.Web.UI.WebControls.MenuItemBinding> objects from the collection to an array. The array is then iterated through to display the properties of the <xref:System.Web.UI.WebControls.MenuItemBinding> objects. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-cs[MenuItemBindingCollectionCopyTo#1](~/add/codesnippet/csharp/23779e9d-0868-4199-8f19-_1.aspx)]\n [!code-vb[MenuItemBindingCollectionCopyTo#1](~/add/codesnippet/visualbasic/23779e9d-0868-4199-8f19-_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.MenuItemBinding[] array, int index);
    parameters:
    - id: array
      type: System.Web.UI.WebControls.MenuItemBinding[]
      description: "En nullbasert matrise av <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> objekter som mottar kopierte elementer fra samlingen."
    - id: index
      type: System.Int32
      description: "Plasseringen i Målmatrisen vil begynne å motta kopierte innholdet."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType(System.Int32)
  id: CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: CreateKnownType(Int32)
  nameWithType: MenuItemBindingCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override object CreateKnownType (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Som skal legges til."
    return:
      type: System.Object
      description: "Som skal legges til."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes
  id: GetKnownTypes
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: GetKnownTypes()
  nameWithType: MenuItemBindingCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override Type[] GetKnownTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "Som skal legges til."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf(System.Web.UI.WebControls.MenuItemBinding)
  id: IndexOf(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: IndexOf(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.IndexOf(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf(MenuItemBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Bestemmer indeksen for den angitte <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> objektet i samlingen."
  remarks: "Bruk IndexOf-metoden til å fastslå indeksen for den angitte <xref:System.Web.UI.WebControls.MenuItemBinding>objektet i samlingen.</xref:System.Web.UI.WebControls.MenuItemBinding>      > [!NOTE] > Rekkefølgen <xref:System.Web.UI.WebControls.MenuItemBinding>objekter vises i samlingen har ingen innvirkning på hvordan disse objektene brukes til menyelementer i en <xref:System.Web.UI.WebControls.Menu>kontroll.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding>       Hvis menyen elementet bindingen ikke er i samlingen, returnerer metoden -1.      > [!NOTE] > Hvis den angitte meny elementet bindingen vises flere ganger i samlingen, returneres indeksen for den første forekomsten."
  example:
  - "The following code example demonstrates how to use the IndexOf method to determine the index of a <xref:System.Web.UI.WebControls.MenuItemBinding> object in the collection. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-vb[MenuItemBindingCollectionIndexOf#1](~/add/codesnippet/visualbasic/4ddc9e66-fb4e-4063-8f80-_1.aspx)]\n [!code-cs[MenuItemBindingCollectionIndexOf#1](~/add/codesnippet/csharp/4ddc9e66-fb4e-4063-8f80-_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.MenuItemBinding value);
    parameters:
    - id: value
      type: System.Web.UI.WebControls.MenuItemBinding
      description: "Den <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> å finne ut indeksen."
    return:
      type: System.Int32
      description: "Den nullbaserte indeksen for den første forekomsten av <code> value </code> i samlingen, hvis fant; ellers, -1."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.MenuItemBinding)
  id: Insert(System.Int32,System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: Insert(Int32,MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Insert(Int32,MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Insert(Int32,MenuItemBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Legger til den angitte <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> objektet i samlingen ved plasseringen angitt indeks."
  remarks: "Bruke Insert-metoden til å sette inn den angitte <xref:System.Web.UI.WebControls.MenuItemBinding>objektet i samlingen i den angitte indeksen.</xref:System.Web.UI.WebControls.MenuItemBinding>      > [!NOTE] > Du kan legge til nullverdier og dupliserte <xref:System.Web.UI.WebControls.MenuItemBinding>objekter i samlingen.</xref:System.Web.UI.WebControls.MenuItemBinding>       Som et alternativ, du kan bare legge til en <xref:System.Web.UI.WebControls.MenuItemBinding>objektet til slutten av samlingen ved hjelp av den <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Add%2A>metoden.</xref:System.Web.UI.WebControls.MenuItemBindingCollection.Add%2A> </xref:System.Web.UI.WebControls.MenuItemBinding>      > [!NOTE] > Rekkefølgen <xref:System.Web.UI.WebControls.MenuItemBinding>objekter vises i samlingen har ingen innvirkning på hvordan disse objektene brukes til menyelementer i en <xref:System.Web.UI.WebControls.Menu>kontroll.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding>"
  example:
  - "The following code example demonstrates how to use the Insert method to add a <xref:System.Web.UI.WebControls.MenuItemBinding> object to the collection at a specific index. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-vb[MenuItemBindingCollectionInsert#1](~/add/codesnippet/visualbasic/4e0eb68e-1774-4135-bfc7-_1.aspx)]\n [!code-cs[MenuItemBindingCollectionInsert#1](~/add/codesnippet/csharp/4e0eb68e-1774-4135-bfc7-_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public void Insert (int index, System.Web.UI.WebControls.MenuItemBinding binding);
    parameters:
    - id: index
      type: System.Int32
      description: "Den nullbaserte indeksplasseringen for innsetting av <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref>."
    - id: binding
      type: System.Web.UI.WebControls.MenuItemBinding
      description: "Den <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> å sette inn."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: MenuItemBindingCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter den <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> objektet i den angitte indeksen fra samlingen."
  remarks: "Bruk denne indekserer til å få tilgang til en <xref:System.Web.UI.WebControls.MenuItemBinding>objektet fra samlingen i den angitte indeksen matrise notasjon.</xref:System.Web.UI.WebControls.MenuItemBinding> Indeksering gjør det mulig å få tilgang til, endre eller erstatte et <xref:System.Web.UI.WebControls.MenuItemBinding>objektet i samlingen direkte.</xref:System.Web.UI.WebControls.MenuItemBinding>"
  example:
  - "The following code example demonstrates how to retrieve a <xref:System.Web.UI.WebControls.MenuItemBinding> object from the collection using the indexer. The properties of the <xref:System.Web.UI.WebControls.MenuItemBinding> object are then updated programmatically. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-cs[MenuItemBindingCollectionIndexer#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_289_1.aspx)]\n [!code-vb[MenuItemBindingCollectionIndexer#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_289_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public System.Web.UI.WebControls.MenuItemBinding this[int i] { get; set; }
    parameters:
    - id: i
      type: System.Int32
      description: "Den nullbaserte indeksen for den <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> til å hente."
    return:
      type: System.Web.UI.WebControls.MenuItemBinding
      description: "Den <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> i den angitte indeksen i samlingen."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnClear
  id: OnClear
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: OnClear()
  nameWithType: MenuItemBindingCollection.OnClear()
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.OnClear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnClear ();
    parameters: []
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.OnClear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete(System.Int32,System.Object)
  id: OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: OnRemoveComplete(Int32,Object)
  nameWithType: MenuItemBindingCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnRemoveComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Som skal legges til."
    - id: value
      type: System.Object
      description: "Som skal legges til."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: MenuItemBindingCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnValidate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Som skal legges til."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Remove(System.Web.UI.WebControls.MenuItemBinding)
  id: Remove(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: Remove(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Remove(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Remove(MenuItemBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Fjerner det angitte <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> objektet fra samlingen."
  remarks: "Bruk Remove-metoden til å fjerne bindingen menyen elementet fra samlingen. Alle elementer som følger menyelementet flyttes å fylle ut ledige posisjonen. Indeksene i flyttet elementene også oppdatert.      > [!NOTE] > Samlingen kan inneholde nullverdier, i tillegg dupliserte <xref:System.Web.UI.WebControls.MenuItemBinding>objekter.</xref:System.Web.UI.WebControls.MenuItemBinding>       Du kan fjerne et menyelement som et alternativ fra en bestemt indeks i samlingen ved hjelp av den <xref:System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt%2A>metoden.</xref:System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt%2A> Du kan også fjerne alle menyelementer fra samlingen ved hjelp av den <xref:System.Web.UI.StateManagedCollection.Clear%2A>metoden.</xref:System.Web.UI.StateManagedCollection.Clear%2A>      > [!NOTE] > Rekkefølgen <xref:System.Web.UI.WebControls.MenuItemBinding>objekter vises i samlingen har ingen innvirkning på hvordan disse objektene brukes til menyelementer i en <xref:System.Web.UI.WebControls.Menu>kontroll.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding>"
  example:
  - "The following code example demonstrates how to use the Remove method to remove a <xref:System.Web.UI.WebControls.MenuItemBinding> object from the collection. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-vb[MenuItemBindingCollectionRemove#1](~/add/codesnippet/visualbasic/5c2a1f0c-56d8-4214-8cb5-_1.aspx)]\n [!code-cs[MenuItemBindingCollectionRemove#1](~/add/codesnippet/csharp/5c2a1f0c-56d8-4214-8cb5-_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.MenuItemBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.MenuItemBinding
      description: "Den <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> skal fjernes fra samlingen."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: MenuItemBindingCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Fjerner det <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> objektet i den angitte indeksplasseringen fra samlingen."
  remarks: "Bruk RemoveAt for å fjerne det <xref:System.Web.UI.WebControls.MenuItemBinding>objektet i den angitte indeksplasseringen fra samlingen.</xref:System.Web.UI.WebControls.MenuItemBinding> Alle elementer som følger menyelementet flyttes å fylle ut ledige posisjonen. Indeksene i flyttet elementene også oppdatert.      > [!NOTE] > Samlingen kan inneholde nullverdier, i tillegg dupliserte <xref:System.Web.UI.WebControls.MenuItemBinding>objekter.</xref:System.Web.UI.WebControls.MenuItemBinding>       Du kan fjerne en bestemt eventuelt <xref:System.Web.UI.WebControls.MenuItemBinding>objektet ved hjelp av den <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Remove%2A>metoden.</xref:System.Web.UI.WebControls.MenuItemBindingCollection.Remove%2A> </xref:System.Web.UI.WebControls.MenuItemBinding> Du kan også fjerne alle menyelementer fra samlingen ved hjelp av den <xref:System.Web.UI.StateManagedCollection.Clear%2A>metoden.</xref:System.Web.UI.StateManagedCollection.Clear%2A>"
  example:
  - "The following code example demonstrates how to use the RemoveAt method to remove a <xref:System.Web.UI.WebControls.MenuItemBinding> object from the collection at a specific index. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-cs[MenuItemBindingCollectionRemoveAt#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_120_1.aspx)]\n [!code-vb[MenuItemBindingCollectionRemoveAt#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_120_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Plasseringen nullbaserte indeksen for menyen elementet bindingen til å fjerne."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject(System.Object)
  id: SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: SetDirtyObject(Object)
  nameWithType: MenuItemBindingCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void SetDirtyObject (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Som skal legges til."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.StateManagedCollection
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Add(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Add(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Add(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Add(MenuItemBinding)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.MenuItemBinding
  parent: System.Web.UI.WebControls
  isExternal: false
  name: MenuItemBinding
  nameWithType: MenuItemBinding
  fullName: System.Web.UI.WebControls.MenuItemBinding
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Contains(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Contains(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Contains(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Contains(MenuItemBinding)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo(System.Web.UI.WebControls.MenuItemBinding[],System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: CopyTo(MenuItemBinding[],Int32)
  nameWithType: MenuItemBindingCollection.CopyTo(MenuItemBinding[],Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo(MenuItemBinding[],Int32)
- uid: System.Web.UI.WebControls.MenuItemBinding[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: MenuItemBinding
  nameWithType: MenuItemBinding
  fullName: System.Web.UI.WebControls.MenuItemBinding[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.MenuItemBinding
    name: MenuItemBinding
    nameWithType: MenuItemBinding
    fullName: MenuItemBinding[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: CreateKnownType(Int32)
  nameWithType: MenuItemBindingCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: GetKnownTypes()
  nameWithType: MenuItemBindingCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes()
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: IndexOf(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.IndexOf(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf(MenuItemBinding)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Insert(Int32,MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Insert(Int32,MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Insert(Int32,MenuItemBinding)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: MenuItemBindingCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Item(Int32)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnClear
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: OnClear()
  nameWithType: MenuItemBindingCollection.OnClear()
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.OnClear()
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: OnRemoveComplete(Int32,Object)
  nameWithType: MenuItemBindingCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete(Int32,Object)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate(System.Object)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: OnValidate(Object)
  nameWithType: MenuItemBindingCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate(Object)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Remove(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Remove(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Remove(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Remove(MenuItemBinding)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: MenuItemBindingCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: SetDirtyObject(Object)
  nameWithType: MenuItemBindingCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject(Object)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Add*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Add
  nameWithType: MenuItemBindingCollection.Add
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Contains*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Contains
  nameWithType: MenuItemBindingCollection.Contains
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: CopyTo
  nameWithType: MenuItemBindingCollection.CopyTo
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: CreateKnownType
  nameWithType: MenuItemBindingCollection.CreateKnownType
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: GetKnownTypes
  nameWithType: MenuItemBindingCollection.GetKnownTypes
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: IndexOf
  nameWithType: MenuItemBindingCollection.IndexOf
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Insert*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Insert
  nameWithType: MenuItemBindingCollection.Insert
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Item*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Item
  nameWithType: MenuItemBindingCollection.Item
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnClear*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: OnClear
  nameWithType: MenuItemBindingCollection.OnClear
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: OnRemoveComplete
  nameWithType: MenuItemBindingCollection.OnRemoveComplete
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: OnValidate
  nameWithType: MenuItemBindingCollection.OnValidate
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Remove*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Remove
  nameWithType: MenuItemBindingCollection.Remove
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: RemoveAt
  nameWithType: MenuItemBindingCollection.RemoveAt
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: SetDirtyObject
  nameWithType: MenuItemBindingCollection.SetDirtyObject
