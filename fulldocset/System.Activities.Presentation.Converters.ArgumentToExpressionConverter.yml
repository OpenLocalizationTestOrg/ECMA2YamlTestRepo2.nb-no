### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter
  id: ArgumentToExpressionConverter
  children:
  - System.Activities.Presentation.Converters.ArgumentToExpressionConverter.#ctor
  - System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  - System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  langs:
  - csharp
  name: ArgumentToExpressionConverter
  nameWithType: ArgumentToExpressionConverter
  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionConverter
  type: Class
  summary: "Definerer tilordningen mellom argumenter og uttrykk og gir funksjonaliteten for å konvertere mellom disse objektene. Denne konverteringsprogram brukes vanligvis deklarativt når du bruker en <xref href=&quot;System.Activities.Presentation.View.ExpressionTextBox&quot;> </xref> i en egendefinert Aktivitetsdesigner."
  remarks: "Denne konverteringsprogram kan også brukes imperatively; Bruk dette anbefales ikke."
  example:
  - "The following XAML snippet shows how to use the ArgumentToExpressionConverter in a custom activity designer that uses an ExpressionTextBox.  \n  \n```  \n<sapv:ExpressionTextBox   \n    Expression=\"{Binding Path=ModelItem.SampleValue,   \n                         Mode=TwoWay,   \n                         Converter={StaticResource ArgumentToExpressionConverter},   \n                         ConverterParameter=In }\"  \n    ExpressionType=\"s:String\"  \n    OwnerActivity=\"{Binding Path=ModelItem}\"  \n   />  \n  \n```"
  syntax:
    content: 'public class ArgumentToExpressionConverter : System.Windows.Data.IValueConverter'
  inheritance:
  - System.Object
  implements:
  - System.Windows.Data.IValueConverter
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter
  langs:
  - csharp
  name: ArgumentToExpressionConverter()
  nameWithType: ArgumentToExpressionConverter.ArgumentToExpressionConverter()
  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ArgumentToExpressionConverter()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Converters
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Activities.Presentation.Converters.ArgumentToExpressionConverter&quot;> </xref> klasse."
  syntax:
    content: public ArgumentToExpressionConverter ();
    parameters: []
  overload: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  id: Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter
  langs:
  - csharp
  name: Convert(Object,Type,Object,CultureInfo)
  nameWithType: ArgumentToExpressionConverter.Convert(Object,Type,Object,CultureInfo)
  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert(Object,Type,Object,CultureInfo)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Converters
  summary: "Konverterer det angitte argumentet til et uttrykk."
  remarks: "The `parameter`,"
  syntax:
    content: public object Convert (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);
    parameters:
    - id: value
      type: System.Object
      description: "Verdien som er generert av datakilden for binding."
    - id: targetType
      type: System.Type
      description: "Typen bindingen target-egenskap."
    - id: parameter
      type: System.Object
      description: "Parameteren konverteringsprogram til å bruke."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Den <xref:System.Globalization.CultureInfo>skal brukes i konverteringen.</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Object
      description: "En forekomst av <xref:System.Object>som inneholder den konverterte Argument.Expression.</xref:System.Object>       Inneholder konvertere Argument.Expression."
  overload: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  id: ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter
  langs:
  - csharp
  name: ConvertBack(Object,Type,Object,CultureInfo)
  nameWithType: ArgumentToExpressionConverter.ConvertBack(Object,Type,Object,CultureInfo)
  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack(Object,Type,Object,CultureInfo)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Converters
  summary: "Konverterer angitte Argument.Expression til et argument."
  syntax:
    content: public object ConvertBack (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);
    parameters:
    - id: value
      type: System.Object
      description: "Argument.Expression til å konvertere."
    - id: targetType
      type: System.Type
      description: "Ikke implementert."
    - id: parameter
      type: System.Object
      description: "Ikke implementert."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Ikke implementert."
    return:
      type: System.Object
      description: "Returnerer <xref:System.Object>.</xref:System.Object>       Inneholder argumentet konvertere."
  overload: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.#ctor
  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter
  isExternal: false
  name: ArgumentToExpressionConverter()
  nameWithType: ArgumentToExpressionConverter.ArgumentToExpressionConverter()
  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ArgumentToExpressionConverter()
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter
  isExternal: false
  name: Convert(Object,Type,Object,CultureInfo)
  nameWithType: ArgumentToExpressionConverter.Convert(Object,Type,Object,CultureInfo)
  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert(Object,Type,Object,CultureInfo)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter
  isExternal: false
  name: ConvertBack(Object,Type,Object,CultureInfo)
  nameWithType: ArgumentToExpressionConverter.ConvertBack(Object,Type,Object,CultureInfo)
  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack(Object,Type,Object,CultureInfo)
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.#ctor*
  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter
  isExternal: false
  name: ArgumentToExpressionConverter
  nameWithType: ArgumentToExpressionConverter.ArgumentToExpressionConverter
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert*
  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter
  isExternal: false
  name: Convert
  nameWithType: ArgumentToExpressionConverter.Convert
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack*
  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter
  isExternal: false
  name: ConvertBack
  nameWithType: ArgumentToExpressionConverter.ConvertBack
