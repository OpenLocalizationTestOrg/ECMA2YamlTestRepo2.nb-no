### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable
  id: IPersonalizable
  children:
  - System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  - System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  langs:
  - csharp
  name: IPersonalizable
  nameWithType: IPersonalizable
  fullName: System.Web.UI.WebControls.WebParts.IPersonalizable
  type: Interface
  summary: "Definerer flere administrasjonsmuligheter for programmet og henting av statusen for personlige data."
  remarks: "I tillegg til å bruke den `Personalizable` attributtet for kontrollegenskaper en kontroll kan også implementere IPersonalizable for ekstra administrasjonsmuligheter for programmet og henting av statusen for personlige data. Kontroller trenger for å styre private statusinformasjon må for eksempel implementerer dette grensesnittet. Kontrollerer tilgang til tilpassede data via komplekse mekanismer, for eksempel egendefinerte hurtigbufferen løsninger data utholdenhet stormaskiner eller XML-webtjenester, må også implementere dette grensesnittet.      > [!IMPORTANT] > Du ikke skal legge til typer basert på klasser som er definert i mappen App_Code, og deretter avhenger av binær serialiseringsfeil standardmekanismen. App_Code kodebasert artefakter er ikke konsekvent binary-serialiserbare at de har sin samlingsnavn endret på tilfeldige tidspunkter i tide."
  example:
  - "The following code example demonstrates how to use the IPersonalizable interface. The example consists of an .aspx page that references a Web Part control named `UrlListWebPart`. The following code is the .aspx file for the example.  \n  \n [!code-vb[WebParts_IPersonalizable_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_186_1.aspx)]\n [!code-cs[WebParts_IPersonalizable_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_186_1.aspx)]  \n  \n The following code is the source for the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. This file should be placed in the App_Code directory.  \n  \n [!code-cs[WebParts_IPersonalizable_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_186_2.cs)]\n [!code-vb[WebParts_IPersonalizable_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_186_2.vb)]  \n  \n Load the page in a browser. Type in a name to represent a URL, then add an actual URL beginning with `http://`, and click the **Add** button to add the URL."
  syntax:
    content: public interface IPersonalizable
  implements: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  id: IsDirty
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  langs:
  - csharp
  name: IsDirty
  nameWithType: IPersonalizable.IsDirty
  fullName: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Henter en verdi som angir om egendefinerte data som en kontroll administrerer er endret."
  remarks: "Når dataene administreres av en kontroll er endret, regnes kontrollen &quot;skadet.&quot; En kontroll skal returnere `true` hvis den tilpassede data at den administrerer via den <xref:System.Web.UI.WebControls.WebParts.IPersonalizable>grensesnittet er endret.</xref:System.Web.UI.WebControls.WebParts.IPersonalizable> Hvis en kontroll returnerer `true` fra denne egenskapens, kontrollen <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A>grensesnittet metodeimplementering kalles under Utvinning av verdien for egenskapen.</xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A>      > [!NOTE] > Egenskapen kontrolleres automatisk ved bruk av personlige data-infrastruktur fra seneste faser for behandling av en POST-forespørsel. Imidlertid for GET-forespørsler er verdien som ble returnert fra egenskapen IsDirty ikke merket. En hendelse må ha forårsaket kontrollen skal anses &quot;endret&quot; for en kontroll tilstand, ikke bare data som administreres av <xref:System.Web.UI.WebControls.WebParts.IPersonalizable>--lagres.</xref:System.Web.UI.WebControls.WebParts.IPersonalizable> Hvis en kontroll kan merke seg selv som &quot;skadet&quot; under en GET-forespørsel, eller hvis tilpassing-infrastruktur i noen spesielle grense tilfeller vurderer en kontroll &quot;endret&quot; under en henteforespørsel deretter <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A>vil alltid kalles.</xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A>       En kontroll kan referere til de tilknyttede <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollere og se den <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A>til å fastslå gjeldende omfang.</xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> &quot;Endret&quot; tilstanden til en kontroll tilpassede data skal brukes til gjeldende område."
  example:
  - "The following code example demonstrates use of the IsDirty property. The first part of the example is the Web page that hosts a <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n [!code-vb[WebParts_IPersonalizable_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_455_1.aspx)]\n [!code-cs[WebParts_IPersonalizable_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_455_1.aspx)]  \n  \n The second part of the example is the code for the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control called `UrlListWebPart`. This file should be placed in the App_Code directory to run the example. Note that the source code implements the IsDirty property.  \n  \n [!code-cs[WebParts_IPersonalizable_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_455_2.cs)]\n [!code-vb[WebParts_IPersonalizable_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_455_2.vb)]  \n  \n Load the page in a browser. Type in a name to represent a URL, then add an actual URL beginning with `http://`, and click the **Add** button to add the URL."
  syntax:
    content: public bool IsDirty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis de egendefinerte dataene administreres med den <xref href=&quot;System.Web.UI.WebControls.WebParts.IPersonalizable&quot;> </xref> grensesnittet er endret; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  langs:
  - csharp
  name: Load(PersonalizationDictionary)
  nameWithType: IPersonalizable.Load(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Laster inn tilpassede data i en kontroll."
  remarks: "Denne metoden kalles på en kontroll for å tillate at den ikke laste inn tilpassede data i seg selv. Det kan også returnere en verdi som angir om en kontroll egendefinerte tilstand må skrives tilbake til den underliggende datakilden, uansett om andre personlige data på siden er endret. En kontroll kan angi sine egne egendefinerte egenskaper og utføre flere intern logisk basert på verdiene i den personlige ordlisten. Denne metoden kalles av webdeler kontrollen som er angitt under bruk av personlige data til en kontroll.       Du må også være klar over virkemåte for sammenslåing av <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>-område sammenlignet <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>-område egenskapene i den <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>objektet.</xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> </xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> </xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> Den `state` parameteren inneholder en sammenslått representasjon av egendefinerte data som ble lastet inn fra den underliggende datakilden. I <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>område, alle verdier som ble lagt til tidligere når siden selve var i <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>omfanget vil være tilgjengelig.</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> </xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> I <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>område, hvis en verdi som er tilknyttet <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>område hadde en verdi som legges til når siden var i <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>omfang og en annen verdi når siden var i <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>område, og deretter tilpassing-infrastruktur vil bare inneholde den <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>-område verdien (i motsetning til det <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>område verdien) i den `state` parameteren.</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> </xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> </xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> </xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> </xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> </xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>"
  example:
  - "The following code example demonstrates an implementation of the Load method in a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the full code required to run this example, see the Example section in the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> class overview.  \n  \n [!code-cs[WebParts_IPersonalizable_Overview#2](~/add/codesnippet/csharp/cca5cab3-402e-4f93-9a4b-_1.cs)]\n [!code-vb[WebParts_IPersonalizable_Overview#2](~/add/codesnippet/visualbasic/cca5cab3-402e-4f93-9a4b-_1.vb)]"
  syntax:
    content: public void Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> som inneholder egendefinerte omfattede data som ble lastet inn fra den underliggende datakilden."
  overload: System.Web.UI.WebControls.WebParts.IPersonalizable.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  langs:
  - csharp
  name: Save(PersonalizationDictionary)
  nameWithType: IPersonalizable.Save(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Lagrer egendefinerte egenskaper og intern statusinformasjon i kontrollens <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> objektet."
  remarks: "En Serverkontroll kan lagre sine egne egendefinerte egenskaper og intern statusinformasjon den <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>angitt i den `state` parameteren.</xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> Informasjonen lagres som en serie med navn/verdi-par. Det er ansvarlig for kontrollen for å bruke navn/verdi-parene som det kan gjenkjenne under etterfølgende kall til kontrollen via den <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A>metoden.</xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A>       En kontroll kan referere til de tilknyttede <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollere og se den <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>objektet til å bestemme gjeldende omfang.</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Egendefinert statusinformasjon må være riktig for gjeldende område. Legg merke til at hver <xref:System.Web.UI.WebControls.WebParts.PersonalizationEntry>verdi som legges til i <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>objektet må være knyttet til den riktige områdeverdien fordi personlige data-infrastruktur avhenger av dette når du slår sammen <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>og <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>-område tilpassede data før sending av den til den <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A>metoden.</xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> </xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> </xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> </xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> </xref:System.Web.UI.WebControls.WebParts.PersonalizationEntry>       Når du bruker standard ASP.NET implementeringen av webdeler, må Kontroller kontrollere at objekter som er plassert i tilstanden ordlisten kan serialiseres av ASP.NET- <xref:System.Web.UI.ObjectStateFormatter>klasse.</xref:System.Web.UI.ObjectStateFormatter> I praksis, betyr dette følgende:-Primitive .NET Framework typer, strenger og samlingen orientert .NET Framework-typer som matriser, matrise lister, hash-tabeller og hybrid ordlister er automatisk serialiseres.      -Egendefinerte typer oppgi sine egne <xref:System.ComponentModel.TypeConverter>klasser kan serialisering til og deserialisering fra strenger regnes serializable.</xref:System.ComponentModel.TypeConverter>      -Egendefinerte typer som kan serialiseres av den <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>klassen regnes serializable.</xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>      > [!IMPORTANT] > Du ikke skal legge til typer basert på klasser som er definert i mappen App_Code, og deretter avhenger av binær serialiseringsfeil standardmekanismen. App_Code kodebasert artefakter er ikke konsekvent binary-serialiserbare at de har sin samlingsnavn endret på tilfeldige tidspunkter i tide."
  example:
  - "The following code example demonstrates implementing the Save method in a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the full code required to run this example, see the Example section in the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> class overview.  \n  \n [!code-cs[WebParts_IPersonalizable_Overview#2](~/add/codesnippet/csharp/9094b1c1-dbad-4f97-8b12-_1.cs)]\n [!code-vb[WebParts_IPersonalizable_Overview#2](~/add/codesnippet/visualbasic/9094b1c1-dbad-4f97-8b12-_1.vb)]"
  syntax:
    content: public void Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> som inneholder egendefinerte omfattede data som ble lastet inn fra den underliggende datakilden."
  overload: System.Web.UI.WebControls.WebParts.IPersonalizable.Save*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  isExternal: false
  name: IsDirty
  nameWithType: IPersonalizable.IsDirty
  fullName: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  isExternal: false
  name: Load(PersonalizationDictionary)
  nameWithType: IPersonalizable.Load(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: PersonalizationDictionary
  nameWithType: PersonalizationDictionary
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  isExternal: false
  name: Save(PersonalizationDictionary)
  nameWithType: IPersonalizable.Save(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty*
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  isExternal: false
  name: IsDirty
  nameWithType: IPersonalizable.IsDirty
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.Load*
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  isExternal: false
  name: Load
  nameWithType: IPersonalizable.Load
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.Save*
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  isExternal: false
  name: Save
  nameWithType: IPersonalizable.Save
