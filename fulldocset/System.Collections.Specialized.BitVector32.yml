### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.BitVector32
  id: BitVector32
  children:
  - System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  - System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  - System.Collections.Specialized.BitVector32.CreateMask
  - System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  - System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  - System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  - System.Collections.Specialized.BitVector32.Data
  - System.Collections.Specialized.BitVector32.Equals(System.Object)
  - System.Collections.Specialized.BitVector32.GetHashCode
  - System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  - System.Collections.Specialized.BitVector32.Item(System.Int32)
  - System.Collections.Specialized.BitVector32.ToString
  - System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  langs:
  - csharp
  name: BitVector32
  nameWithType: BitVector32
  fullName: System.Collections.Specialized.BitVector32
  type: Struct
  summary: "Inneholder en enkel struktur som lagrer boolske verdier og lavt heltall i 32-biters minne."
  remarks: "BitVector32 er mer effektivt enn <xref:System.Collections.BitArray>for boolske verdier og lavt heltall som er brukt internt.</xref:System.Collections.BitArray> En <xref:System.Collections.BitArray>kan øke på ubestemt tid som kreves, men den har minne og ytelse overhead som krever at en forekomst av klassen.</xref:System.Collections.BitArray> I motsetning bruker en BitVector32 bare 32 biter.       En BitVector32-struktur kan angis oppdaterte kan inneholde enten deler for lavt heltall eller biters flagg for boolske verdier, men ikke begge deler. Et <xref:System.Collections.Specialized.BitVector32.Section>er et vindu i BitVector32 og består av det minste antallet påfølgende biter som kan inneholde maksimalt verdien angitt i <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</xref:System.Collections.Specialized.BitVector32.CreateSection%2A> </xref:System.Collections.Specialized.BitVector32.Section> For eksempel består en inndeling med en maksimumsverdi 1 av bare én bit, mens en inndeling med en maksimumsverdi for 5 består av tre biter. Du kan opprette en <xref:System.Collections.Specialized.BitVector32.Section>med en maksimumsverdi 1 skal fungere som en boolsk verdi, slik at du kan lagre heltall og boolske verdier i samme BitVector32.</xref:System.Collections.Specialized.BitVector32.Section>       Noen medlemmer kan brukes for en BitVector32 som er angitt som deler, mens andre medlemmer som kan brukes til en som er definert som biters flagg. For eksempel den <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName>egenskapen er indekserer for en BitVector32 som er angitt som deler, og <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName>egenskapen er indekserer for en BitVector32 som er angitt som biters flagg.</xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName> </xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName> <xref:System.Collections.Specialized.BitVector32.CreateMask%2A>oppretter en rekke masker som kan brukes til å få tilgang til enkelte biter i en BitVector32 som er angitt som biters flagg.</xref:System.Collections.Specialized.BitVector32.CreateMask%2A>       Ved hjelp av en maske på en BitVector32 som er angitt som deler kan føre til uventede resultater."
  example:
  - "The following code example uses a BitVector32 as a collection of bit flags.  \n  \n [!code-cs[System.Collections.Specialized.BitVector32_BitFlags#1](~/add/codesnippet/csharp/t-system.collections.spe_10_1.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32_BitFlags#1](~/add/codesnippet/visualbasic/t-system.collections.spe_10_1.vb)]\n [!code-cpp[System.Collections.Specialized.BitVector32_BitFlags#1](~/add/codesnippet/cpp/t-system.collections.spe_10_1.cpp)]  \n  \n The following code example uses a BitVector32 as a collection of sections.  \n  \n [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/cpp/t-system.collections.spe_10_2.cpp)]\n [!code-cs[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/csharp/t-system.collections.spe_10_2.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/visualbasic/t-system.collections.spe_10_2.vb)]"
  syntax:
    content: public struct BitVector32
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  id: '#ctor(System.Collections.Specialized.BitVector32)'
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: BitVector32(BitVector32)
  nameWithType: BitVector32.BitVector32(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(BitVector32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> struktur som inneholder data som er representert i en eksisterende <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> struktur."
  remarks: "Denne konstruktøren, er en O(1)-operasjon."
  syntax:
    content: public BitVector32 (System.Collections.Specialized.BitVector32 value);
    parameters:
    - id: value
      type: System.Collections.Specialized.BitVector32
      description: "En <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> struktur som inneholder dataene du vil kopiere."
  overload: System.Collections.Specialized.BitVector32.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: BitVector32(Int32)
  nameWithType: BitVector32.BitVector32(Int32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> struktur som inneholder data som er representert i et heltall."
  remarks: "Denne konstruktøren, er en O(1)-operasjon."
  syntax:
    content: public BitVector32 (int data);
    parameters:
    - id: data
      type: System.Int32
      description: "Et heltall som representerer dataene i den nye <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateMask
  id: CreateMask
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateMask()
  nameWithType: BitVector32.CreateMask()
  fullName: System.Collections.Specialized.BitVector32.CreateMask()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Oppretter den første masken som brukes i en serie på masker som kan brukes til å hente enkelte biter i en <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> som er definert som biters flagg."
  remarks: "Bruk `CreateMask()` til å opprette den første masken som brukes i en serie og `CreateMask(int)` for alle etterfølgende masker.       Du kan opprette flere masker for å referere til samme bit-flagget.       Resulterende masken isoleres bare én bit-flagget i <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32> Du kan kombinere masker bruker bitvis OR-operasjonen til å opprette en maske som isoleres flere biters flagg i <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32>       Ved hjelp av en maske på en <xref:System.Collections.Specialized.BitVector32>som er angitt som deler kan føre til uventede resultater.</xref:System.Collections.Specialized.BitVector32>       Denne metoden er en O(1)-operasjon."
  example:
  - "The following code example shows how to create and use masks.  \n  \n [!code-cs[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/csharp/m-system.collections.spe_3_1.cs)]\n [!code-cpp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/cpp/m-system.collections.spe_3_1.cpp)]\n [!code-vb[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/visualbasic/m-system.collections.spe_3_1.vb)]"
  syntax:
    content: public static int CreateMask ();
    parameters: []
    return:
      type: System.Int32
      description: "En maske som isoleres første bit-flagget i den <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.CreateMask*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  id: CreateMask(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateMask(Int32)
  nameWithType: BitVector32.CreateMask(Int32)
  fullName: System.Collections.Specialized.BitVector32.CreateMask(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Oppretter en ekstra maske etter den angitte masken i en serie med masker som kan brukes til å hente enkelte biter i en <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> som er definert som biters flagg."
  remarks: "Bruk `CreateMask()` til å opprette den første masken som brukes i en serie og `CreateMask(int)` for alle etterfølgende masker.       Du kan opprette flere masker for å referere til samme bit-flagget.       Resulterende masken isoleres bare én bit-flagget i <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32> Du kan kombinere masker bruker bitvis OR-operasjonen til å opprette en maske som isoleres flere biters flagg i <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32>       Ved hjelp av en maske på en <xref:System.Collections.Specialized.BitVector32>som er angitt som deler kan føre til uventede resultater.</xref:System.Collections.Specialized.BitVector32>       Denne metoden er en O(1)-operasjon."
  example:
  - "The following code example shows how to create and use masks.  \n  \n [!code-cs[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/csharp/m-system.collections.spe_5_1.cs)]\n [!code-cpp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/cpp/m-system.collections.spe_5_1.cpp)]\n [!code-vb[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/visualbasic/m-system.collections.spe_5_1.vb)]"
  syntax:
    content: public static int CreateMask (int previous);
    parameters:
    - id: previous
      type: System.Int32
      description: "Maske som angir tidligere bit-flagget."
    return:
      type: System.Int32
      description: "En maske som isoleres biten flagget følgende den som <code> previous </code> peker til i <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.CreateMask*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>previous</code>Angir siste bit-flagget i den <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  id: CreateSection(System.Int16)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateSection(Int16)
  nameWithType: BitVector32.CreateSection(Int16)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Oppretter først <xref:System.Collections.Specialized.BitVector32.Section>i en serie med inndelingene som inneholder små heltall.</xref:System.Collections.Specialized.BitVector32.Section>"
  remarks: "En <xref:System.Collections.Specialized.BitVector32.Section>er et vindu i den <xref:System.Collections.Specialized.BitVector32>og består av det minste antallet påfølgende biter som kan inneholde maksimalt verdien angitt i CreateSection.</xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32.Section> For eksempel består en inndeling med en maksimumsverdi 1 av bare én bit, mens en inndeling med en maksimumsverdi for 5 består av tre biter. Du kan opprette en <xref:System.Collections.Specialized.BitVector32.Section>med en maksimumsverdi 1 skal fungere som en boolsk verdi slik at du store heltall og boolske i samme <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32.Section>       Hvis deler allerede finnes i den <xref:System.Collections.Specialized.BitVector32>, disse delene er fortsatt tilgjengelige; imidlertid overlappende deler kan føre til uventede resultater.</xref:System.Collections.Specialized.BitVector32>       Denne metoden er en O(1)-operasjon."
  example:
  - "The following code example uses a <xref:System.Collections.Specialized.BitVector32> as a collection of sections.  \n  \n [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/cpp/m-system.collections.spe_18_1.cpp)]\n [!code-cs[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/csharp/m-system.collections.spe_18_1.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/visualbasic/m-system.collections.spe_18_1.vb)]"
  syntax:
    content: public static System.Collections.Specialized.BitVector32.Section CreateSection (short maxValue);
    parameters:
    - id: maxValue
      type: System.Int16
      description: "En 16-biters heltall med fortegn som angir den maksimale verdien for den nye <xref:System.Collections.Specialized.BitVector32.Section>.</xref:System.Collections.Specialized.BitVector32.Section>"
    return:
      type: System.Collections.Specialized.BitVector32.Section
      description: "En <xref:System.Collections.Specialized.BitVector32.Section>som kan inneholde et tall fra null til <code> maxValue </code>.</xref:System.Collections.Specialized.BitVector32.Section>"
  overload: System.Collections.Specialized.BitVector32.CreateSection*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>maxValue</code>er mindre enn 1."
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  id: CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateSection(Int16,BitVector32+Section)
  nameWithType: BitVector32.CreateSection(Int16,BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16,BitVector32+Section)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  syntax:
    content: public static System.Collections.Specialized.BitVector32.Section CreateSection (short maxValue, System.Collections.Specialized.BitVector32.Section previous);
    parameters:
    - id: maxValue
      type: System.Int16
      description: "Som skal legges til."
    - id: previous
      type: System.Collections.Specialized.BitVector32.Section
      description: "Som skal legges til."
    return:
      type: System.Collections.Specialized.BitVector32.Section
      description: "Som skal legges til."
  overload: System.Collections.Specialized.BitVector32.CreateSection*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Data
  id: Data
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Data
  nameWithType: BitVector32.Data
  fullName: System.Collections.Specialized.BitVector32.Data
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Henter verdien for den <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> som et heltall."
  remarks: "Få tilgang til de individuelle delene eller bit flagg, bruker du <xref:System.Collections.Specialized.BitVector32.Item%2A>egenskapen.</xref:System.Collections.Specialized.BitVector32.Item%2A>       Henting av verdien for denne egenskapen er en O(1)-operasjon."
  syntax:
    content: public int Data { get; }
    return:
      type: System.Int32
      description: "Verdien for den <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> som et heltall."
  overload: System.Collections.Specialized.BitVector32.Data*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: BitVector32.Equals(Object)
  fullName: System.Collections.Specialized.BitVector32.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Bestemmer om det angitte objektet er lik den <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  remarks: "Objektet `o` anses lik den <xref:System.Collections.Specialized.BitVector32>Hvis typen `o` er kompatibel med den <xref:System.Collections.Specialized.BitVector32>type, og hvis verdien for `o` er lik verdien for <xref:System.Collections.Specialized.BitVector32.Data%2A>.</xref:System.Collections.Specialized.BitVector32.Data%2A> </xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32>       Denne metoden er en O(1)-operasjon."
  example:
  - "The following code example compares a <xref:System.Collections.Specialized.BitVector32> with another <xref:System.Collections.Specialized.BitVector32> and with an <xref:System.Int32>.  \n  \n [!code-cpp[System.Collections.Specialized.BitVector32.Equals#1](~/add/codesnippet/cpp/m-system.collections.spe_34_1.cpp)]\n [!code-cs[System.Collections.Specialized.BitVector32.Equals#1](~/add/codesnippet/csharp/m-system.collections.spe_34_1.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32.Equals#1](~/add/codesnippet/visualbasic/m-system.collections.spe_34_1.vb)]"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Objektet som skal sammenlignes med gjeldende <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis det angitte objektet er lik den <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.GetHashCode
  id: GetHashCode
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: BitVector32.GetHashCode()
  fullName: System.Collections.Specialized.BitVector32.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Fungerer som en hash-funksjonen for den <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  remarks: "Hashkoden for en <xref:System.Collections.Specialized.BitVector32>er basert på verdien for <xref:System.Collections.Specialized.BitVector32.Data%2A>.</xref:System.Collections.Specialized.BitVector32.Data%2A> </xref:System.Collections.Specialized.BitVector32> To forekomster av <xref:System.Collections.Specialized.BitVector32>med samme verdi for <xref:System.Collections.Specialized.BitVector32.Data%2A>også genererer samme hash-kode.</xref:System.Collections.Specialized.BitVector32.Data%2A> </xref:System.Collections.Specialized.BitVector32>       Denne metoden er en O(1)-operasjon."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "En hash-kode for den <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  id: Item(System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Item(BitVector32+Section)
  nameWithType: BitVector32.Item(BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.Item(BitVector32+Section)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  syntax:
    content: public int this[System.Collections.Specialized.BitVector32.Section section] { get; set; }
    parameters:
    - id: section
      type: System.Collections.Specialized.BitVector32.Section
      description: "Som skal legges til."
    return:
      type: System.Int32
      description: "Som skal legges til."
  overload: System.Collections.Specialized.BitVector32.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: BitVector32.Item(Int32)
  fullName: System.Collections.Specialized.BitVector32.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Henter eller angir tilstanden til bit-flagget angitt av den angitte masken."
  remarks: "Elementegenskapen [delen] er indekserer for en <xref:System.Collections.Specialized.BitVector32>som er definert som deler, og elementegenskapen [int] er indekserer for en <xref:System.Collections.Specialized.BitVector32>som er definert som biters flagg.</xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32>       Ved hjelp av denne egenskapen på en <xref:System.Collections.Specialized.BitVector32>som er angitt som deler kan føre til uventede resultater.</xref:System.Collections.Specialized.BitVector32>       Språket C# bruker nøkkelordet til å definere Indekserere i stedet for å implementere elementegenskapen. Visual Basic implementerer elementet som en egenskap, som gir samme indekserings funksjonalitet.       Henting av verdien for denne egenskapen er en O(1)-operasjonen. angivelse av egenskapen er også en O(1)-operasjon."
  syntax:
    content: public bool this[int bit] { get; set; }
    parameters:
    - id: bit
      type: System.Int32
      description: "En maske som angir biters for å hente eller angi."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis angitt bit-flagget er på (1). Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.ToString
  id: ToString
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: ToString()
  nameWithType: BitVector32.ToString()
  fullName: System.Collections.Specialized.BitVector32.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Returnerer en streng som representerer gjeldende <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  remarks: "Denne metoden overstyrer <xref:System.Object.ToString%2A?displayProperty=fullName>.</xref:System.Object.ToString%2A?displayProperty=fullName>       Denne metoden er en O(1)-operasjon."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "En streng som representerer gjeldende <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  id: ToString(System.Collections.Specialized.BitVector32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: ToString(BitVector32)
  nameWithType: BitVector32.ToString(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.ToString(BitVector32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Returnerer en streng som representerer den angitte <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  remarks: "Denne metoden er en O(1)-operasjon."
  syntax:
    content: public static string ToString (System.Collections.Specialized.BitVector32 value);
    parameters:
    - id: value
      type: System.Collections.Specialized.BitVector32
      description: "Den <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> til å representere."
    return:
      type: System.String
      description: "En streng som representerer den angitte <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: BitVector32(BitVector32)
  nameWithType: BitVector32.BitVector32(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(BitVector32)
- uid: System.Collections.Specialized.BitVector32
  parent: System.Collections.Specialized
  isExternal: false
  name: BitVector32
  nameWithType: BitVector32
  fullName: System.Collections.Specialized.BitVector32
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: BitVector32(Int32)
  nameWithType: BitVector32.BitVector32(Int32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Specialized.BitVector32.CreateMask
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateMask()
  nameWithType: BitVector32.CreateMask()
  fullName: System.Collections.Specialized.BitVector32.CreateMask()
- uid: System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateMask(Int32)
  nameWithType: BitVector32.CreateMask(Int32)
  fullName: System.Collections.Specialized.BitVector32.CreateMask(Int32)
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateSection(Int16)
  nameWithType: BitVector32.CreateSection(Int16)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16)
- uid: System.Collections.Specialized.BitVector32.Section
  parent: System.Collections.Specialized
  isExternal: false
  name: BitVector32+Section
  nameWithType: BitVector32+Section
  fullName: System.Collections.Specialized.BitVector32+Section
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateSection(Int16,BitVector32+Section)
  nameWithType: BitVector32.CreateSection(Int16,BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16,BitVector32+Section)
- uid: System.Collections.Specialized.BitVector32.Data
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Data
  nameWithType: BitVector32.Data
  fullName: System.Collections.Specialized.BitVector32.Data
- uid: System.Collections.Specialized.BitVector32.Equals(System.Object)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Equals(Object)
  nameWithType: BitVector32.Equals(Object)
  fullName: System.Collections.Specialized.BitVector32.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Specialized.BitVector32.GetHashCode
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: GetHashCode()
  nameWithType: BitVector32.GetHashCode()
  fullName: System.Collections.Specialized.BitVector32.GetHashCode()
- uid: System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Item(BitVector32+Section)
  nameWithType: BitVector32.Item(BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.Item(BitVector32+Section)
- uid: System.Collections.Specialized.BitVector32.Item(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Item(Int32)
  nameWithType: BitVector32.Item(Int32)
  fullName: System.Collections.Specialized.BitVector32.Item(Int32)
- uid: System.Collections.Specialized.BitVector32.ToString
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: ToString()
  nameWithType: BitVector32.ToString()
  fullName: System.Collections.Specialized.BitVector32.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: ToString(BitVector32)
  nameWithType: BitVector32.ToString(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.ToString(BitVector32)
- uid: System.Collections.Specialized.BitVector32.#ctor*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: BitVector32
  nameWithType: BitVector32.BitVector32
- uid: System.Collections.Specialized.BitVector32.CreateMask*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateMask
  nameWithType: BitVector32.CreateMask
- uid: System.Collections.Specialized.BitVector32.CreateSection*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateSection
  nameWithType: BitVector32.CreateSection
- uid: System.Collections.Specialized.BitVector32.Data*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Data
  nameWithType: BitVector32.Data
- uid: System.Collections.Specialized.BitVector32.Equals*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Equals
  nameWithType: BitVector32.Equals
- uid: System.Collections.Specialized.BitVector32.GetHashCode*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: GetHashCode
  nameWithType: BitVector32.GetHashCode
- uid: System.Collections.Specialized.BitVector32.Item*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Item
  nameWithType: BitVector32.Item
- uid: System.Collections.Specialized.BitVector32.ToString*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: ToString
  nameWithType: BitVector32.ToString
