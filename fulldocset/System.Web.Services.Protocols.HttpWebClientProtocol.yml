### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.HttpWebClientProtocol
  id: HttpWebClientProtocol
  children:
  - System.Web.Services.Protocols.HttpWebClientProtocol.#ctor
  - System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  - System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)
  - System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  - System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  - System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  - System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  - System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  - System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  langs:
  - csharp
  name: HttpWebClientProtocol
  nameWithType: HttpWebClientProtocol
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol
  type: Class
  summary: "Representerer basisklasse for alle XML-Web service-klienten proxy-servere som bruker HTTP-transportprotokollen."
  remarks: "Med egenskapene i denne klassen brukes til å kontrollere virkemåten for HTTP-forespørselsobjekt som brukes til å sende XML webtjenesteforespørselen og svar. Egenskaper for kartet til egenskapene som ble funnet på <xref:System.Net.HttpWebRequest>.</xref:System.Net.HttpWebRequest>       For å kommunisere med en XML-webtjeneste ved hjelp av HTTP, må du opprette en proxy-klassen som er avledet direkte eller indirekte fra HttpWebClientProtocol for XML-webtjenesten. Du kan bruke Wsdl.exe-verktøyet til å opprette en proxy-klassen for en gitt XML Web service tjenestebeskrivelsen i stedet for å opprette proxy-klassen manuelt.       Siden HttpWebClientProtocol er basisklasse for alle proxy-klassen, er egenskapene for proxy-klasser. Disse egenskapene er nyttig for å kontrollere forespørselen virkemåten for den underliggende transporten. For eksempel bruke den <xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A>egenskapen for å kalle XML-webtjenester gjennom en brannmur.</xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A> Mange av egenskapene brukes til å initialisere den <xref:System.Net.HttpWebRequest>som gjør Webforespørselen.</xref:System.Net.HttpWebRequest>       <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, og <xref:System.Web.Services.Protocols.HttpPostClientProtocol>utledet direkte eller indirekte fra HttpWebClientProtocol å levere støtte for SOAP, HTTP-GET og HTTP-POST henholdsvis.</xref:System.Web.Services.Protocols.HttpPostClientProtocol> </xref:System.Web.Services.Protocols.HttpGetClientProtocol></xref:System.Web.Services.Protocols.SoapHttpClientProtocol>"
  example:
  - "The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form allows the server to automatically redirect the client to other sites. It also sets client authentication credentials, proxy settings, the request encoding and the time out for the request before calling the XML Web service method.  \n  \n [!code-cs[Classic HttpWebClientProtocol Example#1](~/add/codesnippet/csharp/t-system.web.services.pr_9_1.aspx)]\n [!code-vb[Classic HttpWebClientProtocol Example#1](~/add/codesnippet/visualbasic/t-system.web.services.pr_9_1.aspx)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class HttpWebClientProtocol : System.Web.Services.Protocols.WebClientProtocol
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Web.Services.Protocols.WebClientProtocol
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Web.Services.Protocols.WebClientProtocol.Abort
  - System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)
  - System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
  - System.Web.Services.Protocols.WebClientProtocol.Credentials
  - System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)
  - System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
  - System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
  - System.Web.Services.Protocols.WebClientProtocol.Timeout
  - System.Web.Services.Protocols.WebClientProtocol.Url
  - System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: HttpWebClientProtocol()
  nameWithType: HttpWebClientProtocol.HttpWebClientProtocol()
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.HttpWebClientProtocol()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.Services.Protocols.HttpWebClientProtocol&quot;> </xref> klasse."
  syntax:
    content: protected HttpWebClientProtocol ();
    parameters: []
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  id: AllowAutoRedirect
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: AllowAutoRedirect
  nameWithType: HttpWebClientProtocol.AllowAutoRedirect
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Henter eller angir om klienten følger automatisk serveromadresseringer."
  remarks: "Hvis en klient sender godkjenningsinformasjon, for eksempel brukernavn og passord vil du ikke aktivere serveren å omdirigere, fordi dette kan kompromittere sikkerhet.       En <xref:System.Net.WebException>oppstår hvis egenskapen AllowAutoRedirect `false` og nettserveren prøver å omdirigere forespørselen.</xref:System.Net.WebException> Den <xref:System.Net.WebException.Response%2A>egenskapen inneholder en <xref:System.Net.HttpWebResponse>objektet der både den <xref:System.Net.HttpWebResponse.StatusCode%2A>og <xref:System.Net.HttpWebResponse.Headers%2A>Egenskaper samsvar med detaljer om forsøk omadressering.</xref:System.Net.HttpWebResponse.Headers%2A> </xref:System.Net.HttpWebResponse.StatusCode%2A> </xref:System.Net.HttpWebResponse> </xref:System.Net.WebException.Response%2A> Den <xref:System.Net.HttpWebResponse.StatusCode%2A>egenskapen inneholder en <xref:System.Net.HttpStatusCode>tilsvarer en av HTTP-omadressering statuskoder (301 302 og 307) og `Location` toppteksten i den <xref:System.Net.HttpWebResponse.Headers%2A>samlingen peker til URIEN forespørselen forsøkte å omdirigeres til.</xref:System.Net.HttpWebResponse.Headers%2A> </xref:System.Net.HttpStatusCode> </xref:System.Net.HttpWebResponse.StatusCode%2A>"
  syntax:
    content: public bool AllowAutoRedirect { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>for å automatisk omdirigere klienten for å følge server omadresserer; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect*
  exceptions:
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Egenskapen AllowAutoRedirect <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> og nettserveren prøver å omdirigere forespørselen."
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)
  id: CancelAsync(System.Object)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: CancelAsync(Object)
  nameWithType: HttpWebClientProtocol.CancelAsync(Object)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Avbryter en asynkron kall til en XML-Web service-metoden hvis kallet er allerede fullført."
  syntax:
    content: protected void CancelAsync (object userState);
    parameters:
    - id: userState
      type: System.Object
      description: "Objektet som ble angitt i parameteren siste asynkrone-kallet for den <xref uid=&quot;langword_csharp_Begin&quot; name=&quot;Begin&quot; href=&quot;&quot;> </xref> metoden."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  id: ClientCertificates
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: ClientCertificates
  nameWithType: HttpWebClientProtocol.ClientCertificates
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Henter samlingen av klientsertifikater."
  remarks: "Denne egenskapen kan en klient skal sendes også kjent som Authenticode X.509 v.3 sertifikater klientsertifikater én eller flere når du kaller en metode for XML-Web-tjenesten. Hvis metoden XML Web service er konfigurert til å bruke klientsertifikater, kan et klientsertifikat brukes som én mekanisme for å godkjenne en klient. For mer informasjon om hvordan du konfigurerer klientsertifikater, kan du se dokumentasjonen for Internet Information Services (IIS)."
  example:
  - "The following code example demonstrates how to load in a client certificate from a file and then add it to the ClientCertificates property for calling an XML Web service method that uses client certificates for authentication.  \n  \n [!code-cs[HttpWebClientProtocol.ClientCertificates#1](~/add/codesnippet/csharp/p-system.web.services.pr_6_1.aspx)]\n [!code-vb[HttpWebClientProtocol.ClientCertificates#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_6_1.aspx)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "En <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> som representerer klientsertifikatene."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  id: CookieContainer
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: CookieContainer
  nameWithType: HttpWebClientProtocol.CookieContainer
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Henter eller angir samlingen av informasjonskapsler."
  remarks: "Hvis en XML-Web service-metode bruker økttilstanden, er deretter en informasjonskapsel sendt tilbake i svarhoder til XML Web service-klienten som identifiserer økten for at XML-Web service-klienten. At en XML-webtjeneste å beholde økttilstanden for en klient, må klienten, lagre informasjonskapselen. Klienter mottar HTTP-informasjonskapselen ved å opprette en ny forekomst av <xref:System.Net.CookieContainer>og tilordne at til egenskapen CookieContainer for proxy-klassen før du kaller XML-Web-metoden.</xref:System.Net.CookieContainer> Hvis du vil beholde økttilstanden utover når proxy klasseforekomsten er utenfor området, må klienten lagre HTTP-informasjonskapselen mellom kallene til XML-webtjenesten. For eksempel en Web-skjemaer-klient kan lagre HTTP-informasjonskapselen ved lagring av <xref:System.Net.CookieContainer>i sin egen økttilstanden.</xref:System.Net.CookieContainer> Fordi ikke alle XML-webtjenester Bruk status for økten, og dermed klienter ikke alltid kreves for å bruke egenskapen CookieContainer på en proxy-klienten, må dokumentasjonen for XML-webtjenesten status om øktstatus er brukt."
  example:
  - "The following code example is a Web Forms client of an XML Web service that uses session state. The client stores the HTTP cookie that uniquely identifies the session by storing it in the client's session state.  \n  \n [!code-vb[HttpWebClientProtocol.CookieContainer#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_14_1.aspx)]\n [!code-cs[HttpWebClientProtocol.CookieContainer#1](~/add/codesnippet/csharp/p-system.web.services.pr_14_1.aspx)]"
  syntax:
    content: public System.Net.CookieContainer CookieContainer { get; set; }
    return:
      type: System.Net.CookieContainer
      description: "En <xref:System.Net.CookieContainer>som representerer informasjonskapslene for en klient nettjenester.</xref:System.Net.CookieContainer>"
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  id: EnableDecompression
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: EnableDecompression
  nameWithType: HttpWebClientProtocol.EnableDecompression
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Henter eller angir en verdi som angir om dekomprimering er aktivert for dette <xref href=&quot;System.Web.Services.Protocols.HttpWebClientProtocol&quot;> </xref>."
  syntax:
    content: public bool EnableDecompression { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis dekomprimering er aktivert for dette <xref href=&quot;System.Web.Services.Protocols.HttpWebClientProtocol&quot;> </xref>; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  id: GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: GenerateXmlMappings(Type,ArrayList)
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type,ArrayList)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(Type,ArrayList)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Henter den <xref href=&quot;System.Xml.Serialization.XmlMembersMapping&quot;> </xref> tjeneste metoden eksponert i den angitte typen for hver XML-webområdet, og lagrer tilordningene i den angitte <xref href=&quot;System.Collections.ArrayList&quot;> </xref>."
  syntax:
    content: public static bool GenerateXmlMappings (Type type, System.Collections.ArrayList mappings);
    parameters:
    - id: type
      type: System.Type
      description: "Den <xref:System.Type>som viser av XML-metoder.</xref:System.Type>"
    - id: mappings
      type: System.Collections.ArrayList
      description: "En <xref href=&quot;System.Collections.ArrayList&quot;> </xref> som brukes til å lagre tilordningene."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>type</code> can be assigned to a <xref href=&quot;System.Web.Services.Protocols.SoapHttpClientProtocol&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  id: GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: GenerateXmlMappings(Type[],ArrayList)
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type[],ArrayList)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(Type[],ArrayList)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Henter den <xref href=&quot;System.Xml.Serialization.XmlMembersMapping&quot;> </xref> tjeneste metoden vises av de angitte typene for hver XML-webområdet, og lagrer tilordningene i den angitte <xref href=&quot;System.Collections.ArrayList&quot;> </xref>samt som i en <xref href=&quot;System.Collections.Hashtable&quot;> </xref> som returnerer denne metoden."
  syntax:
    content: public static System.Collections.Hashtable GenerateXmlMappings (Type[] types, System.Collections.ArrayList mappings);
    parameters:
    - id: types
      type: System.Type[]
      description: "En matrise av typen <xref:System.Type>som inneholder typene som eksponerer i XML-metoder.</xref:System.Type>"
    - id: mappings
      type: System.Collections.ArrayList
      description: "En <xref href=&quot;System.Collections.ArrayList&quot;> </xref> som brukes til å lagre tilordningene."
    return:
      type: System.Collections.Hashtable
      description: "En <xref href=&quot;System.Collections.Hashtable&quot;> </xref> som inneholder den <xref href=&quot;System.Xml.Serialization.XmlMembersMapping&quot;> </xref> for hver XML Web service-metoden vises av de angitte typene. Typene i <code> types </code> brukes som nøkler."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)
  id: GetWebRequest(System.Uri)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: GetWebRequest(Uri)
  nameWithType: HttpWebClientProtocol.GetWebRequest(Uri)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(Uri)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Oppretter en <xref:System.Net.WebRequest>for den angitte URIEN.</xref:System.Net.WebRequest>"
  syntax:
    content: protected override System.Net.WebRequest GetWebRequest (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "På <xref:System.Uri>for å opprette <xref:System.Net.WebRequest>.</xref:System.Net.WebRequest> </xref:System.Uri>"
    return:
      type: System.Net.WebRequest
      description: "Den opprettede <xref:System.Net.WebRequest>.</xref:System.Net.WebRequest>"
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <code>uri</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)
  id: GetWebResponse(System.Net.WebRequest)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: GetWebResponse(WebRequest)
  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(WebRequest)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Returnerer et svar fra en synkron forespørsel til en XML-Web service-metoden."
  syntax:
    content: protected override System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);
    parameters:
    - id: request
      type: System.Net.WebRequest
      description: "Den <xref:System.Net.WebRequest>som ikke hente svaret.</xref:System.Net.WebRequest>"
    return:
      type: System.Net.WebResponse
      description: "Et svar fra en synkron forespørsel til en XML-Web service-metoden."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  id: GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: GetWebResponse(WebRequest,IAsyncResult)
  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Returnerer et svar fra en asynkron forespørsel til en XML-Web service-metoden."
  syntax:
    content: protected override System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);
    parameters:
    - id: request
      type: System.Net.WebRequest
      description: "Den <xref:System.Net.WebRequest>som ikke hente svaret.</xref:System.Net.WebRequest>"
    - id: result
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>skal sendes til <xref:System.Net.HttpWebRequest.EndGetResponse*>når svaret er fullført.</xref:System.Net.HttpWebRequest.EndGetResponse*> </xref:System.IAsyncResult>"
    return:
      type: System.Net.WebResponse
      description: "Et svar fra en asynkron forespørsel til en XML-Web service-metoden."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  id: Proxy
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: Proxy
  nameWithType: HttpWebClientProtocol.Proxy
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Henter eller angir proxy-informasjon for å gjøre en XML-webtjenesteforespørselen gjennom en brannmur."
  remarks: "Bruk Proxy-egenskapen Hvis en klient må bruke annen proxy-innstillinger enn de som finnes i systeminnstillingene. Bruk <xref:System.Net.WebProxy>klassen for å angi proxy-innstillinger fordi den implementerer <xref:System.Net.IWebProxy>.</xref:System.Net.IWebProxy> </xref:System.Net.WebProxy>       Standard proxy-innstillingene, kan angis i en konfigurasjonsfil. Hvis du vil ha mer informasjon, se [konfigurasjon av Internett-programmer](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example sets the following proxy settings prior to invoking the `Math` XML Web service: the proxy server to http://proxyserver, the proxy port to 80 and the bypass to the proxy server for local addresses.  \n  \n [!code-cpp[Classic HttpWebClientProtocol.Proxy Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_56_1.cpp)]\n [!code-vb[Classic HttpWebClientProtocol.Proxy Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_56_1.vb)]\n [!code-cs[Classic HttpWebClientProtocol.Proxy Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_56_1.cs)]"
  syntax:
    content: public System.Net.IWebProxy Proxy { get; set; }
    return:
      type: System.Net.IWebProxy
      description: "En <xref:System.Net.IWebProxy>som inneholder proxy-informasjon for forespørsler gjennom en brannmur.</xref:System.Net.IWebProxy> Standardverdien er operativsystemet proxy-innstillinger."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  id: UnsafeAuthenticatedConnectionSharing
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: UnsafeAuthenticatedConnectionSharing
  nameWithType: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Henter eller angir en verdi som angir om tilkobling er aktivert når klienten bruker NTLM-godkjenning til å koble til serveren som er vert XML-webtjenesten."
  remarks: "Egenskapen angir verdien for den <xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A>for den <xref:System.Net.HttpWebRequest>brukes til å kommunisere med serveren.</xref:System.Net.HttpWebRequest> </xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A>"
  syntax:
    content: public bool UnsafeAuthenticatedConnectionSharing { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis tilkobling er aktivert. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  id: UserAgent
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: UserAgent
  nameWithType: HttpWebClientProtocol.UserAgent
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Henter eller angir verdien for agent-attributtet for brukeren som er sendt med hver forespørsel."
  remarks: "Strengen som bruker agent kan en Web-server til å identifisere klienten."
  example:
  - >-
    [!code-cs[HttpWebClientProtocol_UserAgent#1](~/add/codesnippet/csharp/p-system.web.services.pr_74_1.cs)]
     [!code-vb[HttpWebClientProtocol_UserAgent#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_74_1.vb)]
     [!code-cpp[HttpWebClientProtocol_UserAgent#1](~/add/codesnippet/cpp/p-system.web.services.pr_74_1.cpp)]
  syntax:
    content: public string UserAgent { get; set; }
    return:
      type: System.String
      description: "Verdien for HTTP-protokollen bruker agent-attributtet. Standard &quot;MS Web Services Client Protocol <code> number </code> &quot;, der <code> number </code> versjon av common language runtime (for eksempel 1.0.3705.0)."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: System.Web.Services.Protocols.WebClientProtocol
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: HttpWebClientProtocol()
  nameWithType: HttpWebClientProtocol.HttpWebClientProtocol()
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.HttpWebClientProtocol()
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: AllowAutoRedirect
  nameWithType: HttpWebClientProtocol.AllowAutoRedirect
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: CancelAsync(Object)
  nameWithType: HttpWebClientProtocol.CancelAsync(Object)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: ClientCertificates
  nameWithType: HttpWebClientProtocol.ClientCertificates
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: CookieContainer
  nameWithType: HttpWebClientProtocol.CookieContainer
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
- uid: System.Net.CookieContainer
  parent: System.Net
  isExternal: true
  name: CookieContainer
  nameWithType: CookieContainer
  fullName: System.Net.CookieContainer
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: EnableDecompression
  nameWithType: HttpWebClientProtocol.EnableDecompression
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GenerateXmlMappings(Type,ArrayList)
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type,ArrayList)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(Type,ArrayList)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GenerateXmlMappings(Type[],ArrayList)
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type[],ArrayList)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(Type[],ArrayList)
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebRequest(Uri)
  nameWithType: HttpWebClientProtocol.GetWebRequest(Uri)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(Uri)
- uid: System.Net.WebRequest
  parent: System.Net
  isExternal: true
  name: WebRequest
  nameWithType: WebRequest
  fullName: System.Net.WebRequest
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebResponse(WebRequest)
  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(WebRequest)
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: true
  name: WebResponse
  nameWithType: WebResponse
  fullName: System.Net.WebResponse
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebResponse(WebRequest,IAsyncResult)
  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: Proxy
  nameWithType: HttpWebClientProtocol.Proxy
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: UnsafeAuthenticatedConnectionSharing
  nameWithType: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: UserAgent
  nameWithType: HttpWebClientProtocol.UserAgent
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: HttpWebClientProtocol
  nameWithType: HttpWebClientProtocol.HttpWebClientProtocol
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: AllowAutoRedirect
  nameWithType: HttpWebClientProtocol.AllowAutoRedirect
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: CancelAsync
  nameWithType: HttpWebClientProtocol.CancelAsync
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: ClientCertificates
  nameWithType: HttpWebClientProtocol.ClientCertificates
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: CookieContainer
  nameWithType: HttpWebClientProtocol.CookieContainer
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: EnableDecompression
  nameWithType: HttpWebClientProtocol.EnableDecompression
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GenerateXmlMappings
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebRequest
  nameWithType: HttpWebClientProtocol.GetWebRequest
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebResponse
  nameWithType: HttpWebClientProtocol.GetWebResponse
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: Proxy
  nameWithType: HttpWebClientProtocol.Proxy
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: UnsafeAuthenticatedConnectionSharing
  nameWithType: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: UserAgent
  nameWithType: HttpWebClientProtocol.UserAgent
