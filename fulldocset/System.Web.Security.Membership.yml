### YamlMime:ManagedReference
items:
- uid: System.Web.Security.Membership
  id: Membership
  children:
  - System.Web.Security.Membership.ApplicationName
  - System.Web.Security.Membership.CreateUser(System.String,System.String)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  - System.Web.Security.Membership.DeleteUser(System.String)
  - System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  - System.Web.Security.Membership.EnablePasswordReset
  - System.Web.Security.Membership.EnablePasswordRetrieval
  - System.Web.Security.Membership.FindUsersByEmail(System.String)
  - System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.FindUsersByName(System.String)
  - System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  - System.Web.Security.Membership.GetAllUsers
  - System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.GetNumberOfUsersOnline
  - System.Web.Security.Membership.GetUser
  - System.Web.Security.Membership.GetUser(System.Boolean)
  - System.Web.Security.Membership.GetUser(System.Object)
  - System.Web.Security.Membership.GetUser(System.String)
  - System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  - System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  - System.Web.Security.Membership.GetUserNameByEmail(System.String)
  - System.Web.Security.Membership.HashAlgorithmType
  - System.Web.Security.Membership.MaxInvalidPasswordAttempts
  - System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  - System.Web.Security.Membership.MinRequiredPasswordLength
  - System.Web.Security.Membership.PasswordAttemptWindow
  - System.Web.Security.Membership.PasswordStrengthRegularExpression
  - System.Web.Security.Membership.Provider
  - System.Web.Security.Membership.Providers
  - System.Web.Security.Membership.RequiresQuestionAndAnswer
  - System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  - System.Web.Security.Membership.UserIsOnlineTimeWindow
  - System.Web.Security.Membership.ValidateUser(System.String,System.String)
  - System.Web.Security.Membership.ValidatingPassword
  langs:
  - csharp
  name: Membership
  nameWithType: Membership
  fullName: System.Web.Security.Membership
  type: Class
  summary: "Validerer brukerlegitimasjon, og behandler brukerinnstillinger. Denne klassen kan ikke arves."
  remarks: "Medlemskap klassen brukes til å validere brukerlegitimasjon, og administrer brukerinnstillinger for som passord og e-postadresser i ASP.NET-applikasjoner. Klassen medlemskap kan brukes på en egen eller sammen med den <xref:System.Web.Security.FormsAuthentication>til å opprette et komplett system for å godkjenne brukere av et webprogram eller område.</xref:System.Web.Security.FormsAuthentication> Den <xref:System.Web.UI.WebControls.Login>kontrollen innkapsler medlemskap klassen for å gi praktisk validering av brukere.</xref:System.Web.UI.WebControls.Login>      > [!NOTE] > Hvis du ikke er kjent med medlemskap av ASP.NET, kan du se [innføring i medlemskap](~/add/includes/ajax-current-ext-md.md) før du fortsetter. En liste med andre emner som er relatert til medlemskap, kan du se [styre brukere ved hjelp av medlemskap](~/add/includes/ajax-current-ext-md.md).       Medlemskap klassen brukes til:-opprette nye brukere.      -Lagrer medlemskapsinformasjon (brukernavn, passord, e-postadresser og tilhørende data) i Microsoft SQL Server eller i et alternativt datalager.      -Godkjenning av brukere som besøker området. Du kan godkjenne brukere programmatisk, eller du kan bruke den <xref:System.Web.UI.WebControls.Login>kontrollen kan ikke lage fullført godkjenning som krever lite eller ingen kode.</xref:System.Web.UI.WebControls.Login>      -Administrere passord som inkluderer oppretting, endring, henter og tilbakestille dem, og så videre. Du kan også konfigurere ASP.NET-medlemskap til å kreve et for passordspørsmål og svar å godkjenne forespørsler for tilbakestilling av eller henting av passord for brukere som har glemt passordet.       Selv om ASP.NET-medlemskap er en selv standing funksjon i ASP.NET For godkjenning, kan det være integrert med ASP.NET rollebehandling for tjenester for godkjenning for området. Medlemskap kan også integreres med ASP.NET-brukeren <xref:System.Web.Profile>Angi programspesifikk tilpassing kan skreddersydd til enkeltbrukere.</xref:System.Web.Profile> Hvis du vil ha mer informasjon, se [forstå rollebehandling](~/add/includes/ajax-current-ext-md.md) og [ASP.NET profilen egenskaper oversikt over](~/add/includes/ajax-current-ext-md.md).       Klassen medlemskap, avhengig av medlemskap leverandører til å kommunisere med en datakilde. .NET Framework inkluderer en <xref:System.Web.Security.SqlMembershipProvider>, som inneholder brukerinformasjon i en Microsoft SQL Server-database, og en <xref:System.Web.Security.ActiveDirectoryMembershipProvider>, som lar deg oppbevare brukerinformasjon på en Active Directory eller Active Directory Application-modus (ADAM)-server.</xref:System.Web.Security.ActiveDirectoryMembershipProvider> </xref:System.Web.Security.SqlMembershipProvider> Du kan også implementere en egendefinert medlemskapsleverandør som skal kommunisere med en alternativ datakilde som kan brukes av klassen medlemskap. Tilpassede medlemskap leverandører arver <xref:System.Web.Security.MembershipProvider>abstrakt klasse.</xref:System.Web.Security.MembershipProvider> Hvis du vil ha mer informasjon, se [implementere en leverandør av medlemskap](~/add/includes/ajax-current-ext-md.md).       ASP.NET-medlemskap er aktivert for alle ASP.NET-applikasjoner som standard. Medlemskap standardleverandøren den <xref:System.Web.Security.SqlMembershipProvider>og er angitt i maskinkonfigurasjonen av med navnet `AspNetSqlProvider`.</xref:System.Web.Security.SqlMembershipProvider> Standardforekomst av den <xref:System.Web.Security.SqlMembershipProvider>er konfigurert til å koble til en lokal forekomst av Microsoft SQL Server.</xref:System.Web.Security.SqlMembershipProvider>       Du kan endre standardinnstillingene til å angi en <xref:System.Web.Security.SqlMembershipProvider>enn den `AspNetSqlProvider` forekomsten som standardleverandøren, eller angi en forekomst av en egendefinert leverandør som standardleverandøren for ASP.NET-programmet bruker Web.config-filen.</xref:System.Web.Security.SqlMembershipProvider> Du kan angi ASP.NET medlemskap konfigurasjonen for webprogrammet ved hjelp av konfigurasjonsdelen i Web.config-filen. Du kan bruke den `providers` avsnittet om å angi en leverandør av medlemskap enn ett standard leverandørene. For eksempel delen nedenfor fjerner standard medlemskap leverandørene fra gjeldende Programkonfigurasjonen og legger til en ny leverandør med et navn på `SqlProvider` som kobler til en SQL Server-forekomst med navnet `AspSqlServer`.      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=&quot;Data Source=AspSqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <membership defaultProvider=&quot;SqlProvider&quot; userIsOnlineTimeWindow=&quot;20&quot;>         <providers>           <remove name=&quot;AspNetSqlProvider&quot; />           <add name=&quot;SqlProvider&quot;             type=&quot;System.Web.Security.SqlMembershipProvider&quot;             connectionStringName=&quot;SqlServices&quot;             enablePasswordRetrieval=&quot;false&quot;             enablePasswordReset=&quot;true&quot;             requiresQuestionAndAnswer=&quot;true&quot;             passwordFormat=&quot;Hashed&quot;             applicationName=&quot;/&quot; />         </providers>       </membership>     </system.web>   </configuration>   ```"
  example:
  - "The following code example shows the login page for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL using the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \n  \n> [!NOTE]\n>  The ASP.NET login controls (<xref:System.Web.UI.WebControls.Login>, <xref:System.Web.UI.WebControls.LoginView>, <xref:System.Web.UI.WebControls.LoginStatus>, <xref:System.Web.UI.WebControls.LoginName>, and <xref:System.Web.UI.WebControls.PasswordRecovery>) encapsulate virtually all of the logic required to prompt users for credentials and validate the credentials in the membership system and can be used in place of programmatic checking using the Membership class.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/t-system.web.security.me_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/t-system.web.security.me_1.aspx)]"
  syntax:
    content: public static class Membership
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ApplicationName
  nameWithType: Membership.ApplicationName
  fullName: System.Web.Security.Membership.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter eller angir navnet på programmet."
  remarks: "ApplicationName brukes til å identifisere brukere som er spesifikke for en applikasjon. Det vil si kan samme brukernavn finnes i databasen for flere ASP.NET-applikasjoner som angir en annen ApplicationName. Dette aktiverer flere programmer å bruke samme database til å lagre brukerinformasjon uten å kjøre i dupliserte bruker navnet er i konflikt. Flere ASP.NET-applikasjoner kan eventuelt bruke samme brukerdatabasen ved å angi den samme ApplicationName. ApplicationName kan angis programmatisk eller deklarativt i konfigurasjonen for webprogrammet.      > [!CAUTION] > Fordi en enkelt medlemskap leverandøren Standardforekomst brukes for alle forespørsler som ble behandlet av en <xref:System.Web.HttpApplication>objektet, du kan ha flere forespørsler kjøres samtidig, og forsøk på å angi egenskapsverdien ApplicationName.</xref:System.Web.HttpApplication> Egenskapen ApplicationName er ikke klarert for flere skriver tråd, og endre egenskapsverdien ApplicationName kan føre til uventede resultater for flere brukere med en applikasjon. Vi anbefaler at du unngår skrive kode som kan brukes til å angi egenskapen ApplicationName med mindre du må gjøre. Et eksempel på et program der angivelse av ApplicationName-egenskapen kan være nødvendig med er et administrative program som administrerer medlemskap data for flere applikasjoner. Et slikt program må være et program for én bruker og ikke et webprogram."
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use a <xref:System.Web.Security.SqlMembershipProvider> instance and sets the ApplicationName to `MyApplication`.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static string ApplicationName { get; set; }
    return:
      type: System.String
      description: "Navnet på programmet."
  overload: System.Web.Security.Membership.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String)
  id: CreateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String)
  nameWithType: Membership.CreateUser(String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Legger til en ny bruker i datakilden."
  remarks: "CreateUser legger til en ny bruker i datakilden, og returnerer et <xref:System.Web.Security.MembershipUser>objekt for nyopprettede brukeren.</xref:System.Web.Security.MembershipUser> Hvis Brukeroppretting mislykkes, en <xref:System.Web.Security.MembershipCreateUserException>forårsakes.</xref:System.Web.Security.MembershipCreateUserException> Du kan hente en <xref:System.Web.Security.MembershipCreateStatus>verdi fra den <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A>for den <xref:System.Web.Security.MembershipCreateUserException>som angir hvorfor Brukeroppretting mislyktes.</xref:System.Web.Security.MembershipCreateUserException> </xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> </xref:System.Web.Security.MembershipCreateStatus>       Når en bruker medlemskap er opprettet, og du har en referanse til en <xref:System.Web.Security.MembershipUser>objekt for denne brukeren, kan du endre innstillingene for denne brukeren med den <xref:System.Web.Security.MembershipUser>offentlige metodene som <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A>for programmer der <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>er `true`, eller ved å angi egenskapsverdiene for den <xref:System.Web.Security.MembershipUser>objekt og sende dem til i <xref:System.Web.Security.Membership.UpdateUser%2A>metoden.</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Hvis det finnes allerede en bruker i datakilden for programmet, kan du få en <xref:System.Web.Security.MembershipUser>objekt for eksisterende bruker med den <xref:System.Web.Security.Membership.GetUser%2A>metoden.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       Den <xref:System.Web.Security.SqlMembershipProvider>gir mulighet til å kreve en unik e-postadresse for hver bruker.</xref:System.Web.Security.SqlMembershipProvider> Hvis den <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>egenskapen `true`, må du bruke en CreateUser overlastingene som lar deg angi e-postadressen til brukeren som opprettet.</xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> Ellers en <xref:System.Web.Security.MembershipCreateUserException>vil bli utløst.</xref:System.Web.Security.MembershipCreateUserException>       Fjernes innledende og avsluttende mellomrom fra alle parameterverdier."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.Membership#2](~/add/codesnippet/csharp/m-system.web.security.me_0_1.aspx)]\n [!code-vb[System.Web.Security.Membership#2](~/add/codesnippet/visualbasic/m-system.web.security.me_0_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password);
    parameters:
    - id: username
      type: System.String
      description: "Brukernavnet for den nye brukeren."
    - id: password
      type: System.String
      description: "Passordet for den nye brukeren."
    return:
      type: System.Web.Security.MembershipUser
      description: "En <xref:System.Web.Security.MembershipUser>objekt for nyopprettede brukeren.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.CreateUser*
  exceptions:
  - type: System.Web.Security.MembershipCreateUserException
    commentId: T:System.Web.Security.MembershipCreateUserException
    description: "Brukeren ble ikke opprettet. Se den <xref:System.Web.Security.MembershipCreateUserException.StatusCode*>egenskapen for en <xref:System.Web.Security.MembershipCreateStatus>verdi.</xref:System.Web.Security.MembershipCreateStatus> </xref:System.Web.Security.MembershipCreateUserException.StatusCode*>"
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  id: CreateUser(System.String,System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String)
  nameWithType: Membership.CreateUser(String,String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Legger til en ny bruker med en angitt e-postadresse i datakilden."
  remarks: "<xref:System.Web.Security.Membership.CreateUser%2A>legger til en ny bruker i datakilden, og returnerer et <xref:System.Web.Security.MembershipUser>objekt for nyopprettede brukeren.</xref:System.Web.Security.MembershipUser></xref:System.Web.Security.Membership.CreateUser%2A> Hvis Brukeroppretting mislykkes, en <xref:System.Web.Security.MembershipCreateUserException>forårsakes.</xref:System.Web.Security.MembershipCreateUserException> Du kan hente en <xref:System.Web.Security.MembershipCreateStatus>verdi fra den <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A>for den <xref:System.Web.Security.MembershipCreateUserException>som angir hvorfor Brukeroppretting mislyktes.</xref:System.Web.Security.MembershipCreateUserException> </xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> </xref:System.Web.Security.MembershipCreateStatus>       Når en bruker medlemskap er opprettet, og du har en referanse til en <xref:System.Web.Security.MembershipUser>objekt for denne brukeren, kan du endre innstillingene for denne brukeren med den <xref:System.Web.Security.MembershipUser>offentlige metodene som <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A>for programmer der <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>er `true`, eller ved å angi egenskapsverdiene for den <xref:System.Web.Security.MembershipUser>objekt og sende dem til i <xref:System.Web.Security.Membership.UpdateUser%2A>metoden.</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Hvis det finnes allerede en bruker i datakilden for programmet, kan du få en <xref:System.Web.Security.MembershipUser>objekt for eksisterende bruker med den <xref:System.Web.Security.Membership.GetUser%2A>metoden.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       Fjernes innledende og avsluttende mellomrom fra alle parameterverdier."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#1](~/add/codesnippet/visualbasic/8cf35595-ec0c-4c08-b671-_1.aspx)]\n [!code-cs[System.Web.Security.Membership#1](~/add/codesnippet/csharp/8cf35595-ec0c-4c08-b671-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email);
    parameters:
    - id: username
      type: System.String
      description: "Brukernavnet for den nye brukeren."
    - id: password
      type: System.String
      description: "Passordet for den nye brukeren."
    - id: email
      type: System.String
      description: "E-postadressen for den nye brukeren."
    return:
      type: System.Web.Security.MembershipUser
      description: "En <xref:System.Web.Security.MembershipUser>objekt for nyopprettede brukeren.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.CreateUser*
  exceptions:
  - type: System.Web.Security.MembershipCreateUserException
    commentId: T:System.Web.Security.MembershipCreateUserException
    description: "Brukeren ble ikke opprettet. Se den <xref:System.Web.Security.MembershipCreateUserException.StatusCode*>egenskapen for en <xref:System.Web.Security.MembershipCreateStatus>verdi.</xref:System.Web.Security.MembershipCreateStatus> </xref:System.Web.Security.MembershipCreateUserException.StatusCode*>"
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Legger til en ny bruker med angitt egenskapsverdier i datakilden, og returnerer statusen parameter som angir at brukeren ble opprettet eller årsaken ikke kan opprette brukeren."
  remarks: "CreateUser legger til en ny bruker i datakilden, og returnerer et <xref:System.Web.Security.MembershipUser>objekt for nyopprettede brukeren.</xref:System.Web.Security.MembershipUser> Hvis Brukeroppretting mislykkes, kan du hente en <xref:System.Web.Security.MembershipCreateStatus>verdi fra den `status` utdataparameter som angir hvorfor Brukeroppretting mislyktes.</xref:System.Web.Security.MembershipCreateStatus>       Metoden CreateUser tilbakestiller `null` Hvis `password` er en tom streng eller `null`, `username` er en tom streng eller `null` eller inneholder et komma (,), `passwordQuestion` er ikke `null` og er en tom streng eller `passwordAnswer` er ikke `null` og inneholder en tom streng.       Når en bruker medlemskap er opprettet, og du har en referanse til en <xref:System.Web.Security.MembershipUser>objekt for denne brukeren, kan du endre innstillingene for denne brukeren med den <xref:System.Web.Security.MembershipUser>offentlige metoder og ved å angi egenskapsverdiene for den <xref:System.Web.Security.MembershipUser>objekt og deretter sende den <xref:System.Web.Security.MembershipUser>objekt i <xref:System.Web.Security.Membership.UpdateUser%2A>metoden.</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Hvis det finnes allerede en bruker i datakilden for programmet, kan du få en <xref:System.Web.Security.MembershipUser>objekt for eksisterende bruker med den <xref:System.Web.Security.Membership.GetUser%2A>metoden.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       Fjernes innledende og avsluttende mellomrom fra alle strengverdier for parameteren."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/csharp/baa4c01c-297e-4ec6-a9d9-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/visualbasic/baa4c01c-297e-4ec6-a9d9-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, out System.Web.Security.MembershipCreateStatus status);
    parameters:
    - id: username
      type: System.String
      description: "Brukernavnet for den nye brukeren."
    - id: password
      type: System.String
      description: "Passordet for den nye brukeren."
    - id: email
      type: System.String
      description: "E-postadressen for den nye brukeren."
    - id: passwordQuestion
      type: System.String
      description: "Passordspørsmålet verdien for medlemskap brukeren."
    - id: passwordAnswer
      type: System.String
      description: "Passordsvar verdien for medlemskap brukeren."
    - id: isApproved
      type: System.Boolean
      description: "En boolsk verdi som angir om den nye brukeren er godkjent til å logge på."
    - id: status
      type: System.Web.Security.MembershipCreateStatus
      description: "En <xref:System.Web.Security.MembershipCreateStatus>som indikerer at brukeren ble opprettet eller årsaken til at oppretting mislyktes.</xref:System.Web.Security.MembershipCreateStatus>"
    return:
      type: System.Web.Security.MembershipUser
      description: "En <xref:System.Web.Security.MembershipUser>objekt for nyopprettede brukeren.</xref:System.Web.Security.MembershipUser> Hvis ingen bruker ble opprettet, metoden returnerer <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.CreateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Legger til en ny bruker med angitt egenskapsverdier og en unik identifikator i datakilden, og returnerer statusen parameter som angir at brukeren ble opprettet eller årsaken ikke kan opprette brukeren."
  remarks: "CreateUser legger til en ny bruker i datakilden, og returnerer et <xref:System.Web.Security.MembershipUser>objekt for nyopprettede brukeren.</xref:System.Web.Security.MembershipUser> Hvis Brukeroppretting mislykkes, kan du hente en <xref:System.Web.Security.MembershipCreateStatus>verdi fra den `status` utdataparameter som angir hvorfor Brukeroppretting mislyktes.</xref:System.Web.Security.MembershipCreateStatus> Du kan angi en unik identifikator for brukeren, for eksempel verdien for en primærnøkkel for en database ved hjelp av `providerUserKey` parameteren.       Metoden CreateUser tilbakestiller `null` Hvis `password` er en tom streng eller `null`, `username` er en tom streng eller `null` eller inneholder et komma (,), `passwordQuestion` er ikke `null` og inneholder en tom streng eller `passwordAnswer` er ikke `null` og inneholder en tom streng.       Når en bruker medlemskap er opprettet, og du har en referanse til en <xref:System.Web.Security.MembershipUser>objekt for denne brukeren, kan du endre innstillingene for denne brukeren med den <xref:System.Web.Security.MembershipUser>offentlige metoder og ved å angi egenskapsverdiene for den <xref:System.Web.Security.MembershipUser>objekt og deretter sende den <xref:System.Web.Security.MembershipUser>objekt i <xref:System.Web.Security.Membership.UpdateUser%2A>metoden.</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Hvis det finnes allerede en bruker i datakilden for programmet, kan du få en <xref:System.Web.Security.MembershipUser>objekt for eksisterende bruker med den <xref:System.Web.Security.Membership.GetUser%2A>metoden.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       Fjernes innledende og avsluttende mellomrom fra alle strengverdier for parameteren."
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);
    parameters:
    - id: username
      type: System.String
      description: "Brukernavnet for den nye brukeren."
    - id: password
      type: System.String
      description: "Passordet for den nye brukeren."
    - id: email
      type: System.String
      description: "E-postadressen for den nye brukeren."
    - id: passwordQuestion
      type: System.String
      description: "Passordspørsmålet verdien for medlemskap brukeren."
    - id: passwordAnswer
      type: System.String
      description: "Passordsvar verdien for medlemskap brukeren."
    - id: isApproved
      type: System.Boolean
      description: "En boolsk verdi som angir om den nye brukeren er godkjent til å logge på."
    - id: providerUserKey
      type: System.Object
      description: "Bruker-ID for brukeren som skal lagres i datalageret medlemskap."
    - id: status
      type: System.Web.Security.MembershipCreateStatus
      description: "En <xref:System.Web.Security.MembershipCreateStatus>som angir at brukeren ble opprettet eller ikke kan opprette årsak.</xref:System.Web.Security.MembershipCreateStatus>"
    return:
      type: System.Web.Security.MembershipUser
      description: "En <xref:System.Web.Security.MembershipUser>objekt for nyopprettede brukeren.</xref:System.Web.Security.MembershipUser> Hvis ingen bruker ble opprettet, metoden returnerer <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.CreateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.DeleteUser(System.String)
  id: DeleteUser(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: DeleteUser(String)
  nameWithType: Membership.DeleteUser(String)
  fullName: System.Web.Security.Membership.DeleteUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Sletter en bruker og relaterte brukerdata fra databasen."
  remarks: "Dataene for brukeren som er lagret i databasen for den <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, eller <xref:System.Web.UI.WebControls.WebParts.WebPart>personlige data slettes også når du bruker den <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, og <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider>objekter for lagring av data.</xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> </xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Security.SqlRoleProvider> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.HttpContext.Profile%2A> </xref:System.Web.Security.Roles>"
  example:
  - "The following code example deletes the currently logged-on user and all related data.  \n  \n [!code-vb[System.Web.Security.Membership#8](~/add/codesnippet/visualbasic/m-system.web.security.me_11_1.aspx)]\n [!code-cs[System.Web.Security.Membership#8](~/add/codesnippet/csharp/m-system.web.security.me_11_1.aspx)]"
  syntax:
    content: public static bool DeleteUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "Navnet på brukeren som skal slettes."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis brukeren ble slettet; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.DeleteUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>er en tom streng eller inneholder et komma (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>er<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  id: DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: DeleteUser(String,Boolean)
  nameWithType: Membership.DeleteUser(String,Boolean)
  fullName: System.Web.Security.Membership.DeleteUser(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Sletter en bruker fra databasen."
  remarks: "Brukere ble slettet fra databasen, blir bare slettet fra den konfigurerte `applicationName`.       Hvis `deleteAllRelatedData` er `true`, brukerdata som er lagret i databasen for den <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, eller <xref:System.Web.UI.WebControls.WebParts.WebPart>personlige data slettes også når du bruker den <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, og <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider>objekter for lagring av data.</xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> </xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Security.SqlRoleProvider> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.HttpContext.Profile%2A> </xref:System.Web.Security.Roles>"
  example:
  - "The following code example deletes the currently logged-on user and all related data.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/csharp/m-system.web.security.me_12_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/visualbasic/m-system.web.security.me_12_1.aspx)]"
  syntax:
    content: public static bool DeleteUser (string username, bool deleteAllRelatedData);
    parameters:
    - id: username
      type: System.String
      description: "Navnet på brukeren som skal slettes."
    - id: deleteAllRelatedData
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>slette data relatert til brukeren fra databasen. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> forlate data relatert til brukeren i databasen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis brukeren ble slettet; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.DeleteUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>er en tom streng eller inneholder et komma (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.EnablePasswordReset
  id: EnablePasswordReset
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
  fullName: System.Web.Security.Membership.EnablePasswordReset
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en verdi som angir om den gjeldende Medlemskapsleverandøren er konfigurert slik at brukere kan tilbakestille passordene sine."
  remarks: "Passord tilbakestilling er mulighet for ASP.NET-medlemskap erstatte gjeldende passord for et brukernavn med et nytt, tilfeldig generert passord når en bruker har glemt passordet, eller gjeldende passord er ikke gyldig lenger. Dette er nyttig når passord format er satt til <xref:System.Web.Security.MembershipPasswordFormat>, som brukere ikke kan hente kontrollsummert passord verdier.</xref:System.Web.Security.MembershipPasswordFormat>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and enables password reset.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code example first verifies that EnablePasswordReset is `true`, then resets a user's password and returns the new, automatically generated password.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/csharp/p-system.web.security.me_2_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/visualbasic/p-system.web.security.me_2_1.aspx)]"
  syntax:
    content: public static bool EnablePasswordReset { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis leverandøren av medlemskapet støtter tilbakestilling av passord; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.EnablePasswordReset*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.EnablePasswordRetrieval
  id: EnablePasswordRetrieval
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
  fullName: System.Web.Security.Membership.EnablePasswordRetrieval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en verdi som angir om den gjeldende Medlemskapsleverandøren er konfigurert slik at brukere kan hente passordene."
  remarks: "Hvis EnablePasswordRetrieval `false`, den underliggende Medlemskapsleverandøren kan throw <xref:System.Web.HttpException>.</xref:System.Web.HttpException>       Leverandører som er inkludert i .NET Framework støtter flere passord formater for å forbedre sikkerheten for passordet. Hvis Passordformatet er satt til <xref:System.Web.Security.MembershipPasswordFormat>, og deretter brukere vil ikke kunne ikke hente eksisterende passordet fra databasen.</xref:System.Web.Security.MembershipPasswordFormat> Den <xref:System.Web.Security.MembershipPasswordFormat>passordformatet gir enveis kodingen for passord verdier.</xref:System.Web.Security.MembershipPasswordFormat> Passord er &quot;bruke hash-kode&quot; og sammenlignet med verdier som er lagret i databasen for godkjenning. &quot;Kontrollsummert&quot; kan ikke være transaksjon kodet til å hente den opprinnelige verdien for passord. Hvis du vil ha mer informasjon, kan du se <xref:System.Web.Security.MembershipPasswordFormat>.</xref:System.Web.Security.MembershipPasswordFormat>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and enables password retrieval.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"false\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code example first verifies that EnablePasswordRetrieval is `true`, then retrieves the password for a specified user name and sends it to the e-mail address for the specified user.  \n  \n> [!IMPORTANT]\n>  Returning a password in clear text using e-mail is not recommended for sites that require a high level of security. For high-security sites, we recommend that you return passwords using encryption, such as SSL.  \n>   \n>  This example includes a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/p-system.web.security.me_4_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/p-system.web.security.me_4_1.aspx)]"
  syntax:
    content: public static bool EnablePasswordRetrieval { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis leverandøren av medlemskapet støtter henting av passord; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.EnablePasswordRetrieval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String)
  id: FindUsersByEmail(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByEmail(String)
  nameWithType: Membership.FindUsersByEmail(String)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en samling av medlemskapsbrukere der e-postadressen inneholder den angitte e-postadressen samsvarer."
  remarks: "FindUsersByEmail returnerer en liste over medlemskapsbrukere der e-postadressen samsvarer med den angitte `emailToMatch` for den konfigurerte `applicationName`.       Den <xref:System.Web.Security.SqlMembershipProvider>utfører søket ved hjelp av en LIKE-setningsdel mot den `emailToMatch` parameteren.</xref:System.Web.Security.SqlMembershipProvider> Jokertegn som støttes av SQL Server i som setningsdeler kan brukes i den `emailToMatch` parameterverdi."
  example:
  - "The following code example uses the FindUsersByEmail method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#9](~/add/codesnippet/visualbasic/m-system.web.security.me_10_1.aspx)]\n [!code-cs[System.Web.Security.Membership#9](~/add/codesnippet/csharp/m-system.web.security.me_10_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "E-postadressen til å søke etter."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "En <xref:System.Web.Security.MembershipUserCollection>som inneholder alle brukere som samsvarer med den <code> emailToMatch </code> parameteren.</xref:System.Web.Security.MembershipUserCollection>       Innledende og avsluttende mellomrom fjernes fra den <code> emailToMatch </code> parameterverdi."
  overload: System.Web.Security.Membership.FindUsersByEmail*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByEmail(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en samling av medlemskapsbrukere på en side med data, der e-postadressen inneholder den angitte e-postadressen samsvarer."
  remarks: "FindUsersByEmail returnerer en liste over medlemskapsbrukere der e-postadressen samsvarer med den angitte `emailToMatch` for den konfigurerte `applicationName`.       Den <xref:System.Web.Security.SqlMembershipProvider>utfører søket ved hjelp av en LIKE-setningsdel mot den `emailToMatch` parameteren.</xref:System.Web.Security.SqlMembershipProvider> Jokertegn som støttes av SQL Server i som setningsdeler kan brukes i den `emailToMatch` parameterverdi.       Resultatene som returneres av FindUsersByEmail er begrenset av den `pageIndex` og `pageSize` parametere. Den `pageSize` parameteren identifiserer maksimalt antall <xref:System.Web.Security.MembershipUser>objekter til å returnere i <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> Den `pageIndex` parameteren identifiserer hvilke siden med resultater skal returneres, der 0 identifiserer den første siden. Den `totalRecords` parameteren er en `out` parameter som er satt til antall medlemskapsbrukere som samsvarer med den `emailToMatch` verdi. Hvis for eksempel, fant 13 brukere where `emailToMatch` samsvarte med en del av eller hele e-postadresse og `pageIndex` verdien er 1 med en `pageSize` 5, den <xref:System.Web.Security.MembershipUserCollection>returnerte inneholder sjette via tiende brukerne returnerte.</xref:System.Web.Security.MembershipUserCollection> `totalRecords`kan settes til 13.       Innledende og avsluttende mellomrom fjernes fra den `emailToMatch` parameterverdi."
  example:
  - "The following code example uses the FindUsersByEmail method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/csharp/1954016c-87a4-4acf-9d54-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/visualbasic/1954016c-87a4-4acf-9d54-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "E-postadressen til å søke etter."
    - id: pageIndex
      type: System.Int32
      description: "Indeksen for siden for resultatene skal returneres. `pageIndex`er null."
    - id: pageSize
      type: System.Int32
      description: "Størrelsen på siden med resultater skal returneres."
    - id: totalRecords
      type: System.Int32
      description: "Totalt antall brukere som samsvarer."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "En <xref:System.Web.Security.MembershipUserCollection>som inneholder en side med <code> pageSize </code> <xref:System.Web.Security.MembershipUser>objekter som begynner på siden som er angitt av <code> pageIndex </code>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.FindUsersByEmail*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code>er mindre enn null.       - eller - <code>pageSize</code> er mindre enn 1."
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByName(System.String)
  id: FindUsersByName(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByName(String)
  nameWithType: Membership.FindUsersByName(String)
  fullName: System.Web.Security.Membership.FindUsersByName(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en samling av medlemskapsbrukere der brukernavnet inneholder det angitte brukernavnet samsvarer."
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>Returnerer en liste over medlemskapsbrukere der brukernavnet samsvarer med den angitte `usernameToMatch` for den konfigurerte `applicationName`.</xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>       Den <xref:System.Web.Security.SqlMembershipProvider>utfører søket ved hjelp av en LIKE-setningsdel mot den `usernameToMatch` parameteren.</xref:System.Web.Security.SqlMembershipProvider> Jokertegn som støttes av SQL Server i som setningsdeler kan brukes i den `usernameToMatch` parameterverdi.       Fjernes innledende og avsluttende mellomrom fra alle parameterverdier."
  example:
  - "The following code example uses the FindUsersByName method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#10](~/add/codesnippet/visualbasic/m-system.web.security.me_6_1.aspx)]\n [!code-cs[System.Web.Security.Membership#10](~/add/codesnippet/csharp/m-system.web.security.me_6_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch);
    parameters:
    - id: usernameToMatch
      type: System.String
      description: "Brukernavnet for å søke etter."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "En <xref:System.Web.Security.MembershipUserCollection>som inneholder alle brukere som samsvarer med den <code> usernameToMatch </code> parameteren.</xref:System.Web.Security.MembershipUserCollection>       Innledende og avsluttende mellomrom fjernes fra den <code> usernameToMatch </code> parameterverdi."
  overload: System.Web.Security.Membership.FindUsersByName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>er en tom streng."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByName(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByName(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByName(String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en samling av medlemskapsbrukere på en side med data, der brukernavnet inneholder det angitte brukernavnet samsvarer."
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>Returnerer en liste over medlemskapsbrukere der brukernavnet samsvarer med den angitte `usernameToMatch` for den konfigurerte `applicationName`.</xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>       Den <xref:System.Web.Security.SqlMembershipProvider>utfører søket ved hjelp av en LIKE-setningsdel mot den `usernameToMatch` parameteren.</xref:System.Web.Security.SqlMembershipProvider> Jokertegn som støttes av SQL Server i som setningsdeler kan brukes i den `usernameToMatch` parameterverdi.       Resultatene som returneres av FindUsersByName er begrenset av den `pageIndex` og `pageSize` parametere. Den `pageSize` parameteren identifiserer maksimalt antall <xref:System.Web.Security.MembershipUser>objekter til å returnere i <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> Den `pageIndex` parameteren identifiserer hvilke siden med resultater skal returneres, der 0 identifiserer den første siden. Den `totalRecords` parameteren er en `out` parameter som er satt til antall medlemskapsbrukere som samsvarer med den `usernameToMatch` verdi. Hvis for eksempel, fant 13 brukere where `usernameToMatch` samsvarte med en del av eller hele brukernavnet, og `pageIndex` verdien er 1 med en `pageSize` 5, den <xref:System.Web.Security.MembershipUserCollection>returnerte inneholder sjette via tiende brukerne returnerte.</xref:System.Web.Security.MembershipUserCollection> `totalRecords`kan settes til 13."
  example:
  - "The following code example uses the FindUsersByName method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/csharp/4f01d951-55a8-446c-be57-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/visualbasic/4f01d951-55a8-446c-be57-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: usernameToMatch
      type: System.String
      description: "Brukernavnet for å søke etter."
    - id: pageIndex
      type: System.Int32
      description: "Indeksen for siden for resultatene skal returneres. `pageIndex`er null."
    - id: pageSize
      type: System.Int32
      description: "Størrelsen på siden med resultater skal returneres."
    - id: totalRecords
      type: System.Int32
      description: "Totalt antall brukere som samsvarer."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "En <xref:System.Web.Security.MembershipUserCollection>som inneholder en side med <code> pageSize </code> <xref:System.Web.Security.MembershipUser>objekter som begynner på siden som er angitt av <code> pageIndex </code>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>       Innledende og avsluttende mellomrom fjernes fra den <code> usernameToMatch </code> parameterverdi."
  overload: System.Web.Security.Membership.FindUsersByName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>er en tom streng.       - eller - <code>pageIndex</code> er mindre enn null.       - eller - <code>pageSize</code> er mindre enn 1."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  id: GeneratePassword(System.Int32,System.Int32)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GeneratePassword(Int32,Int32)
  nameWithType: Membership.GeneratePassword(Int32,Int32)
  fullName: System.Web.Security.Membership.GeneratePassword(Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Genererer en tilfeldig passordet for den angitte lengden."
  remarks: "Metoden GeneratePassword brukes til å generere et tilfeldig passord og vanligvis brukes av den <xref:System.Web.Security.MembershipProvider.ResetPassword%2A>metoden implementeres av en leverandør av medlemskap å tilbakestille passordet for en bruker til et nytt midlertidig passord.</xref:System.Web.Security.MembershipProvider.ResetPassword%2A>       Genererte passordet inneholder bare alfanumeriske tegn og følgende skilletegn: `!@#$%^&*()_-+=[{]};:<>|./?`. Ingen skjult eller ikke kan skrives ut kontrolltegn er inkludert i genererte passordet.      > [!NOTE] > Tilfeldig passordet opprettet av metoden GeneratePassword garanteres ikke til å sende det vanlige uttrykket i den <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>egenskapen.</xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> Tilfeldig passordet vil imidlertid oppfyller kriteriene opprettet av den <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>egenskapen og `numberOfNonAlphanumericCharacters` parameteren.</xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>"
  example:
  - "The following code example creates a new membership user and uses the GeneratePassword method to initialize the password for the new user to a random value, which is displayed to the user.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#5](~/add/codesnippet/visualbasic/m-system.web.security.me_1_1.aspx)]\n [!code-cs[System.Web.Security.Membership#5](~/add/codesnippet/csharp/m-system.web.security.me_1_1.aspx)]"
  syntax:
    content: public static string GeneratePassword (int length, int numberOfNonAlphanumericCharacters);
    parameters:
    - id: length
      type: System.Int32
      description: "Antallet tegn i genererte passordet. Lengden må være mellom 1 og 128 tegn."
    - id: numberOfNonAlphanumericCharacters
      type: System.Int32
      description: 'Minste antall ikke-alfanumeriske tegn (eksempel @, #,!, %, &amp;og så videre) i genererte passordet.'
    return:
      type: System.String
      description: "En tilfeldig passordet for den angitte lengden."
  overload: System.Web.Security.Membership.GeneratePassword*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>length</code>er mindre enn 1 eller større enn 128 - eller - <code>numberOfNonAlphanumericCharacters</code> er mindre enn 0 eller større enn <code>length</code>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetAllUsers
  id: GetAllUsers
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetAllUsers()
  nameWithType: Membership.GetAllUsers()
  fullName: System.Web.Security.Membership.GetAllUsers()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en samling av alle brukerne i databasen."
  remarks: "GetAllUsers returnerer informasjon for alle medlemskapsbrukere for et program som en samling av <xref:System.Web.Security.MembershipUser>objekter.</xref:System.Web.Security.MembershipUser> Vær forsiktig med metoden GetAllUsers med svært brukerdatabaser som den resulterende <xref:System.Web.Security.MembershipUserCollection>siden kan redusere ytelsen til programmet i din ASP.NET.</xref:System.Web.Security.MembershipUserCollection>"
  example:
  - "The following code example returns a list of users with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/m-system.web.security.me_4_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/m-system.web.security.me_4_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection GetAllUsers ();
    parameters: []
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "En <xref:System.Web.Security.MembershipUserCollection>av <xref:System.Web.Security.MembershipUser>objekter som representerer alle brukere i databasen.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.GetAllUsers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  id: GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetAllUsers(Int32,Int32,Int32)
  nameWithType: Membership.GetAllUsers(Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.GetAllUsers(Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en samling av alle brukerne i databasen i sider med data."
  remarks: "Resultatene som returneres av GetAllUsers er begrenset av den `pageIndex` og `pageSize` parametere. Den `pageSize` parameteren identifiserer maksimalt antall <xref:System.Web.Security.MembershipUser>objekter til å returnere i <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> Den `pageIndex` parameteren identifiserer hvilke siden med resultater skal returneres, der 0 identifiserer den første siden. Den `totalRecords` parameteren er en `out` parameter som er satt til totalt antall medlemskapsbrukere for den konfigurerte `applicationName`. For eksempel hvis det finnes 13 brukere for den konfigurerte `applicationName`, og `pageIndex` verdien er 1 med en `pageSize` 5, den <xref:System.Web.Security.MembershipUserCollection>returnerte inneholder sjette via tiende brukerne returnerte.</xref:System.Web.Security.MembershipUserCollection> `totalRecords`kan settes til 13."
  example:
  - "The following code example returns a list of users in pages of data with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/e84b0b6e-963c-4328-843a-_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/e84b0b6e-963c-4328-843a-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: pageIndex
      type: System.Int32
      description: "Indeksen for siden for resultatene skal returneres. Bruk 0 for å angi den første siden."
    - id: pageSize
      type: System.Int32
      description: "Størrelsen på siden med resultater skal returneres. `pageIndex`er null."
    - id: totalRecords
      type: System.Int32
      description: "Totalt antall brukere."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "En <xref:System.Web.Security.MembershipUserCollection>av <xref:System.Web.Security.MembershipUser>objekter som representerer alle brukerne i databasen for den konfigurerte <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.GetAllUsers*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code>er mindre enn null.       - eller - <code>pageSize</code> er mindre enn 1."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline
  id: GetNumberOfUsersOnline
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetNumberOfUsersOnline()
  nameWithType: Membership.GetNumberOfUsersOnline()
  fullName: System.Web.Security.Membership.GetNumberOfUsersOnline()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter antallet brukere som har tilgang til en applikasjon."
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>Returnerer antallet brukere for den gjeldende <xref:System.Web.Security.Membership.ApplicationName%2A>der datoen for siste aktivitet er større enn gjeldende klokkeslett mindre <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>.</xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> </xref:System.Web.Security.Membership.ApplicationName%2A></xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> Den siste-aktiviteten dato/klokkeslett tidsstempel er oppdatert til gjeldende dato og klokkeslett når brukerlegitimasjon, godkjennes ved way av den <xref:System.Web.Security.Membership.ValidateUser%2A>eller <xref:System.Web.Security.Membership.UpdateUser%2A>metoden eller når et kall til en <xref:System.Web.Security.Membership.GetUser%2A>overbelastningen som tar uten parametere eller med den `userIsOnline` å angi at dato-/ tidsstempel skal oppdateres.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.Membership.ValidateUser%2A>"
  example:
  - "The following code example returns a list of users with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/m-system.web.security.me_2_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/m-system.web.security.me_2_1.aspx)]"
  syntax:
    content: public static int GetNumberOfUsersOnline ();
    parameters: []
    return:
      type: System.Int32
      description: "Antall brukere som har tilgang til en applikasjon."
  overload: System.Web.Security.Membership.GetNumberOfUsersOnline*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser
  id: GetUser
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser()
  nameWithType: Membership.GetUser()
  fullName: System.Web.Security.Membership.GetUser()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter informasjon fra datakilden og oppdaterer siste-aktiviteten dato-/ tidsstempel for den gjeldende brukeren er logget på medlemskap."
  remarks: "GetUser henter brukerinformasjonen fra datakilden, og oppretter en <xref:System.Web.Security.MembershipUser>objektet fylles ut med de returnerte dataene.</xref:System.Web.Security.MembershipUser> Hvis du bruker et av GetUser overlastingene som ikke tar en `username` parameteren GetUser returnerer informasjon for den gjeldende brukeren er logget på medlemskap. Gjeldende bruker er logget på medlemskap er identifisert av den <xref:System.Security.Principal.IIdentity.Name%2A>til brukeren i gjeldende <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Security.Principal.IIdentity.Name%2A>       Du kan også angi om du vil GetUser å oppdatere den siste-aktiviteten tidsstempel for dato/klokkeslett for brukeren som hentes ved hjelp av den `userIsOnline` parameteren. For den <xref:System.Web.Security.Membership.GetUser%2A>overlastingene som ikke tar en `userIsOnline` parameteren `GetUser()` implisitt oppdateringer siste-aktiviteten dato-/ tidsstempel for brukeren.</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`og `GetUser(System.Object)` ikke."
  example:
  - "The following code example updates the last-activity date/time stamp for the current logged-on membership user and displays the user name in the ASP.NET page.  \n  \n [!code-cs[System.Web.Security.Membership#3](~/add/codesnippet/csharp/m-system.web.security.me_14_1.aspx)]\n [!code-vb[System.Web.Security.Membership#3](~/add/codesnippet/visualbasic/m-system.web.security.me_14_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser ();
    parameters: []
    return:
      type: System.Web.Security.MembershipUser
      description: "En <xref:System.Web.Security.MembershipUser>-objekt som representerer gjeldende påloggede brukeren.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Ingen medlemskap brukeren er pålogget."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Boolean)
  id: GetUser(System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Boolean)
  nameWithType: Membership.GetUser(Boolean)
  fullName: System.Web.Security.Membership.GetUser(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter informasjon fra datakilden for den gjeldende brukeren er logget på medlemskap. Oppdateringer for siste-aktiviteten dato/klokkeslett tidsstempel for gjeldende bruker er logget på medlemskap, hvis angitt."
  remarks: "Metoden GetUser henter brukerinformasjonen fra datakilden, og oppretter en <xref:System.Web.Security.MembershipUser>objektet fylles ut med de returnerte dataene.</xref:System.Web.Security.MembershipUser> Hvis du bruker en av de <xref:System.Web.Security.Membership.GetUser%2A>overlastingene som ikke tar en `username` parameteren <xref:System.Web.Security.Membership.GetUser%2A>returnerer informasjon for den gjeldende brukeren er logget på medlemskap.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> Gjeldende bruker er logget på medlemskap er identifisert av den <xref:System.Security.Principal.IIdentity.Name%2A>til brukeren i gjeldende <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Security.Principal.IIdentity.Name%2A>       Du kan også angi om du vil <xref:System.Web.Security.Membership.GetUser%2A>å oppdatere den siste-aktiviteten tidsstempel for dato/klokkeslett for brukeren som hentes ved hjelp av den `userIsOnline` parameteren.</xref:System.Web.Security.Membership.GetUser%2A> For den <xref:System.Web.Security.Membership.GetUser%2A>overlastingene som ikke tar en `userIsOnline` parameteren `GetUser()` implisitt oppdateringer siste-aktiviteten dato-/ tidsstempel for brukeren.</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`og `GetUser(System.Object)` ikke."
  example:
  - "The following code example displays the user name for the current logged-on membership user in the ASP.NET page without updating the last-activity date/time stamp for the user.  \n  \n [!code-cs[System.Web.Security.Membership#4](~/add/codesnippet/csharp/m-system.web.security.me_9_1.aspx)]\n [!code-vb[System.Web.Security.Membership#4](~/add/codesnippet/visualbasic/m-system.web.security.me_9_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (bool userIsOnline);
    parameters:
    - id: userIsOnline
      type: System.Boolean
      description: "Hvis <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, oppdateringer siste-aktiviteten dato/klokkeslett tidsstempel for den angitte brukeren."
    return:
      type: System.Web.Security.MembershipUser
      description: "En <xref:System.Web.Security.MembershipUser>-objekt som representerer gjeldende påloggede brukeren.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Ingen medlemskap brukeren er pålogget."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Object)
  id: GetUser(System.Object)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Object)
  nameWithType: Membership.GetUser(Object)
  fullName: System.Web.Security.Membership.GetUser(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter informasjon fra datakilden for medlemskap brukeren som er knyttet til den angitte unike identifikatoren."
  remarks: "Metoden GetUser henter brukerinformasjonen fra datakilden, og oppretter en <xref:System.Web.Security.MembershipUser>objektet fylles ut med de returnerte dataene.</xref:System.Web.Security.MembershipUser> Brukeren er identifisert ved hjelp av den unike identifikatoren fra datakilden ved hjelp av den `providerUserKey` parameteren.       Du kan også angi om du vil <xref:System.Web.Security.Membership.GetUser%2A>å oppdatere den siste-aktiviteten tidsstempel for dato/klokkeslett for brukeren som hentes med den `userIsOnline` parameteren.</xref:System.Web.Security.Membership.GetUser%2A> For den <xref:System.Web.Security.Membership.GetUser%2A>overlastingene som ikke tar en `userIsOnline` parameteren `GetUser()` implisitt oppdateringer siste-aktiviteten dato-/ tidsstempel for brukeren.</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`og `GetUser(System.Object)` ikke"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (object providerUserKey);
    parameters:
    - id: providerUserKey
      type: System.Object
      description: "Den unike bruker-IDen fra datakilden for medlemskap for brukeren."
    return:
      type: System.Web.Security.MembershipUser
      description: "En <xref:System.Web.Security.MembershipUser>-objekt som representerer brukeren som er knyttet til den angitte unike identifikatoren.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>providerUserKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.String)
  id: GetUser(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(String)
  nameWithType: Membership.GetUser(String)
  fullName: System.Web.Security.Membership.GetUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter informasjon fra datakilden for det angitte medlemskap."
  remarks: "Metoden GetUser henter brukerinformasjonen fra datakilden, og oppretter en <xref:System.Web.Security.MembershipUser>objektet fylles ut med de returnerte dataene.</xref:System.Web.Security.MembershipUser> Hvis du bruker en av de <xref:System.Web.Security.Membership.GetUser%2A>overlastingene som ikke tar en `username` parameteren <xref:System.Web.Security.Membership.GetUser%2A>returnerer informasjon for den gjeldende brukeren er logget på medlemskap.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> Gjeldende bruker er logget på medlemskap er identifisert av den <xref:System.Security.Principal.IIdentity.Name%2A>til brukeren i gjeldende <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Security.Principal.IIdentity.Name%2A>       Du kan også angi om du vil <xref:System.Web.Security.Membership.GetUser%2A>å oppdatere den siste-aktiviteten tidsstempel for dato/klokkeslett for brukeren som hentes med den `userIsOnline` parameteren.</xref:System.Web.Security.Membership.GetUser%2A> For den <xref:System.Web.Security.Membership.GetUser%2A>overlastingene som ikke tar en `userIsOnline` parameteren <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>implisitt oppdateringer siste-aktiviteten dato-/ tidsstempel for brukeren.</xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> </xref:System.Web.Security.Membership.GetUser%2A> GetUser og <xref:System.Web.Security.Membership.GetUser%2A>ikke.</xref:System.Web.Security.Membership.GetUser%2A>"
  example:
  - "The following code example uses the GetUser method to return a <xref:System.Web.Security.MembershipUser> object for the current logged-on user and updates the e-mail address for the user.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/csharp/m-system.web.security.me_3_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/visualbasic/m-system.web.security.me_3_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "Navnet på brukeren å hente."
    return:
      type: System.Web.Security.MembershipUser
      description: "En <xref:System.Web.Security.MembershipUser>-objekt som representerer den angitte brukeren.</xref:System.Web.Security.MembershipUser> Hvis den <code> username </code> parameteren ikke samsvarer med en eksisterende bruker, metoden returnerer <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>inneholder et komma (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  id: GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Object,Boolean)
  nameWithType: Membership.GetUser(Object,Boolean)
  fullName: System.Web.Security.Membership.GetUser(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter informasjon fra datakilden for medlemskap brukeren som er knyttet til den angitte unike identifikatoren. Oppdateringer for siste-aktiviteten dato/klokkeslett tidsstempel for brukeren, hvis angitt."
  remarks: "Metoden GetUser henter brukerinformasjonen fra datakilden, og oppretter en <xref:System.Web.Security.MembershipUser>objektet fylles ut med de returnerte dataene.</xref:System.Web.Security.MembershipUser> Brukeren identifiseres med den unike identifikatoren fra datakilden som er angitt i den `providerUserKey` parameteren."
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);
    parameters:
    - id: providerUserKey
      type: System.Object
      description: "Den unike bruker-IDen fra datakilden for medlemskap for brukeren."
    - id: userIsOnline
      type: System.Boolean
      description: "Hvis <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, oppdateringer siste-aktiviteten dato/klokkeslett tidsstempel for den angitte brukeren."
    return:
      type: System.Web.Security.MembershipUser
      description: "En <xref:System.Web.Security.MembershipUser>-objekt som representerer brukeren som er knyttet til den angitte unike identifikatoren.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>providerUserKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  id: GetUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(String,Boolean)
  nameWithType: Membership.GetUser(String,Boolean)
  fullName: System.Web.Security.Membership.GetUser(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter informasjon fra datakilden for det angitte medlemskap. Oppdateringer for siste-aktiviteten dato/klokkeslett tidsstempel for brukeren, hvis angitt."
  remarks: "Metoden GetUser henter brukerinformasjonen fra datakilden, og oppretter en <xref:System.Web.Security.MembershipUser>objektet fylles ut med de returnerte dataene.</xref:System.Web.Security.MembershipUser>       Hvis du bruker en av de <xref:System.Web.Security.Membership.GetUser%2A>overlastingene som ikke tar en `username` parameteren <xref:System.Web.Security.Membership.GetUser%2A>returnerer informasjon for den gjeldende brukeren er logget på medlemskap.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> Gjeldende bruker er logget på medlemskap er identifisert av den <xref:System.Security.Principal.IIdentity.Name%2A>til brukeren i gjeldende <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Security.Principal.IIdentity.Name%2A>       Du kan også angi om du vil <xref:System.Web.Security.Membership.GetUser%2A>å oppdatere den siste-aktiviteten tidsstempel for dato/klokkeslett for brukeren som hentes med den `userIsOnline` parameteren.</xref:System.Web.Security.Membership.GetUser%2A> For den <xref:System.Web.Security.Membership.GetUser%2A>overlastingene som ikke tar en `userIsOnline` parameteren <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>implisitt oppdateringer siste-aktiviteten dato-/ tidsstempel for brukeren.</xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> </xref:System.Web.Security.Membership.GetUser%2A> <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>og <xref:System.Web.Security.Membership.GetUser%2A>ikke.</xref:System.Web.Security.Membership.GetUser%2A></xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>"
  example:
  - "The following code example retrieves the password for a specified user name and sends it to the e-mail address for the specified user. The call to <xref:System.Web.Security.Membership.GetUser%2A> specifies that the last-activity date/time stamp for the user not be updated.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/m-system.web.security.me_13_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/m-system.web.security.me_13_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);
    parameters:
    - id: username
      type: System.String
      description: "Navnet på brukeren å hente."
    - id: userIsOnline
      type: System.Boolean
      description: "Hvis <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, oppdateringer siste-aktiviteten dato/klokkeslett tidsstempel for den angitte brukeren."
    return:
      type: System.Web.Security.MembershipUser
      description: "En <xref:System.Web.Security.MembershipUser>-objekt som representerer den angitte brukeren.</xref:System.Web.Security.MembershipUser> Hvis den <code> username </code> parameteren ikke samsvarer med en eksisterende bruker, metoden returnerer <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>inneholder et komma (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUserNameByEmail(System.String)
  id: GetUserNameByEmail(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUserNameByEmail(String)
  nameWithType: Membership.GetUserNameByEmail(String)
  fullName: System.Web.Security.Membership.GetUserNameByEmail(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter et brukernavn der e-postadresse for brukeren samsvarer med den angitte e-postadressen."
  remarks: "GetUserNameByEmail kan brukes til å hente brukernavnet for en bruker medlemskap i tilfeller der en bruker ikke kjenner brukernavnet, men vet e-postadressen. Hvis mer enn én bruker i datalageret har samme e-postadressen, returneres det første brukernavnet oppdaget.       Fjernes innledende og avsluttende mellomrom fra alle parameterverdier."
  example:
  - "The following code example retrieves the user name for a specified e-mail address.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/csharp/m-system.web.security.me_5_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/visualbasic/m-system.web.security.me_5_1.aspx)]"
  syntax:
    content: public static string GetUserNameByEmail (string emailToMatch);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "E-postadressen til å søke etter."
    return:
      type: System.String
      description: "Brukernavnet der e-postadresse for brukeren samsvarer med den angitte e-postadressen. Hvis ingen forekomst blir funnet, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> returneres."
  overload: System.Web.Security.Membership.GetUserNameByEmail*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.HashAlgorithmType
  id: HashAlgorithmType
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
  fullName: System.Web.Security.Membership.HashAlgorithmType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Identifikatoren for algoritmen som brukes til hash-passord."
  remarks: "Egenskapen HashAlgorithmType identifiserer egendefinerte hash-algoritmen som brukes av <xref:System.Web.Security.Membership>klasse.</xref:System.Web.Security.Membership> Du har angitt HashAlgorithmType-egenskapen ved hjelp av den `hashAlgorithmType` -attributtet for elementet.       .NET Framework, kan du konfigurere egendefinerte kryptografi klasser med konfigurasjonsdelen elementet. Egenskapen HashAlgorithmType må samsvare med den `name` for elementet i et element. Hvis du vil ha mer informasjon, se [tilordning algoritmen navn kryptografi klasser](~/add/includes/ajax-current-ext-md.md).       Hvis egenskapen HashAlgorithmType ikke er angitt, den <xref:System.Web.Security.Membership>klassen bruker nummeralgoritmen som er angitt i den `validation` -attributtet for elementet.</xref:System.Web.Security.Membership>"
  syntax:
    content: public static string HashAlgorithmType { get; }
    return:
      type: System.String
      description: "Identifikatoren av algoritmen som brukes til hash-passord, eller tomme for å bruke standard hash-algoritmen."
  overload: System.Web.Security.Membership.HashAlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  id: MaxInvalidPasswordAttempts
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
  fullName: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter antall ugyldig passord eller passordsvar forsøk tillatt før brukeren medlemskap låses."
  remarks: "Egenskapen MaxInvalidPasswordAttempts fungerer sammen med den <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>til å beskytte mot et uønsket datakilde ved hjelp av gjentatte forsøk å gjette passordet eller passordsvar for en bruker medlemskap.</xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>       Hvis antall ugyldige passord eller passord svar angitt for en bruker medlemskap er større enn eller lik verdien for egenskapen MaxInvalidPasswordAttempts i antall minutter angitt av den <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>egenskap, og deretter brukeren er låst ute fra webområdet ved å angi den <xref:System.Web.Security.MembershipUser.IsLockedOut%2A>egenskapen `true` før brukeren låses opp et kall til den <xref:System.Web.Security.MembershipUser.UnlockUser%2A>metoden.</xref:System.Web.Security.MembershipUser.UnlockUser%2A> </xref:System.Web.Security.MembershipUser.IsLockedOut%2A> </xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>       Hvis et gyldig passord eller passordsvar angis før verdien for egenskapen MaxInvalidPasswordAttempts er nådd, er telleren som sporer antallet Ugyldig forsøk satt til null.       Ugyldig passord og svar passordforsøk spores separat. For eksempel hvis egenskapen MaxInvalidPasswordAttempts er satt til 5, har brukeren fem forsøk på å angi riktig passord og opptil fem forsøk på å skrive inn en riktig passordsvar uten er låst.       Egenskapsverdien MaxInvalidPasswordAttempts er angitt i application-konfigurasjonen ved hjelp av den `maxInvalidPasswordAttempts` for konfigurasjonselementet.       Hvis den <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>egenskapen `false`, ugyldig passordsvar forsøk er ikke registrert.</xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of an application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      maxInvalidPasswordAttempts=\"5\"  \n      passwordAttemptWindow=\"30\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MaxInvalidPasswordAttempts { get; }
    return:
      type: System.Int32
      description: "Antall ugyldig passord eller passordsvar forsøk tillatt før brukeren medlemskap låses."
  overload: System.Web.Security.Membership.MaxInvalidPasswordAttempts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  id: MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
  fullName: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter minimumsantallet spesialtegn som må være til stede i et gyldig passord."
  remarks: "Egenskapen MinRequiredNonAlphanumericCharacters returnerer minste antall spesielle, ikke-alfanumeriske tegn som må angis for å opprette et gyldig passord for leverandøren av medlemskapet som er angitt i den <xref:System.Web.Security.Membership.Provider%2A>egenskapen.</xref:System.Web.Security.Membership.Provider%2A>       Egenskapsverdien MinRequiredNonAlphanumericCharacters er angitt i application-konfigurasjonen ved hjelp av den `minRequiredNonAlphanumericCharacters` for konfigurasjonselementet.       Et ikke-alfanumeriske tegn er et tegn som den <xref:System.Char.IsLetterOrDigit%2A>metoden returnerer `false`.</xref:System.Char.IsLetterOrDigit%2A>"
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredNonAlphanumericCharacters` attribute to 1 character.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      minRequiredNonAlphanumericCharacters=\"1\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MinRequiredNonAlphanumericCharacters { get; }
    return:
      type: System.Int32
      description: "Minste antall spesialtegn som må være til stede i et gyldig passord."
  overload: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MinRequiredPasswordLength
  id: MinRequiredPasswordLength
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
  fullName: System.Web.Security.Membership.MinRequiredPasswordLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter minimumslengden kreves for et passord."
  remarks: "Egenskapen MinRequiredPasswordLength henter det minste antallet tegn som må angis for å opprette et gyldig passord for leverandøren av medlemskapet som er angitt i den <xref:System.Web.Security.Membership.Provider%2A>egenskapen.</xref:System.Web.Security.Membership.Provider%2A>       Egenskapsverdien MinRequiredPasswordLength er angitt i application-konfigurasjonen ved hjelp av den `minRequiredPasswordLength` for konfigurasjonselementet."
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredPasswordLength` attribute to seven characters.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      minRequiredPasswordLength=\"7\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MinRequiredPasswordLength { get; }
    return:
      type: System.Int32
      description: "Minimumslengden som kreves for et passord."
  overload: System.Web.Security.Membership.MinRequiredPasswordLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.PasswordAttemptWindow
  id: PasswordAttemptWindow
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
  fullName: System.Web.Security.Membership.PasswordAttemptWindow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter tidsvinduet mellom etterfølgende mislykkede forsøk på å angi et gyldig passord eller passordsvar spores."
  remarks: "Egenskapen PasswordAttemptWindow fungerer sammen med den <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>egenskapen for å beskytte mot en uønsket kilde gjette passordet eller passordsvar for en bruker medlemskap via gjentatte forsøk.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Når en bruker forsøker å logge på med, endre eller tilbakestille passordet sitt, tillates bare et bestemt antall etterfølgende forsøk i en angitt tidsperiode. Lengden på dette tidsvinduet er angitt i egenskapen PasswordAttemptWindow, som identifiserer antallet minutter som er tillatt mellom Ugyldig forsøk.       Hvis hvor mange etterfølgende mislykkede forsøk som en bruker gjør tilbakestille hans eller hennes passord er lik verdien som er lagret i den <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>egenskapen og tiden gått siden det siste forsøket på ugyldig er mindre enn antall minutter angitt i egenskapen PasswordAttemptWindow medlemskap brukeren er låst.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Brukeren er låst ved å angi den <xref:System.Web.Security.MembershipUser.IsLockedOut%2A>egenskapen `true` før brukeren låses opp et kall til den <xref:System.Web.Security.MembershipUser.UnlockUser%2A>metoden.</xref:System.Web.Security.MembershipUser.UnlockUser%2A> </xref:System.Web.Security.MembershipUser.IsLockedOut%2A>       Hvis intervallet mellom den gjeldende mislykkede forsøket på og forrige mislykkede forsøk er større enn innstillingen for PasswordAttemptWindow-egenskapen, telles gjeldende Ugyldig forsøk som først. Hvis et gyldig passordsvar angis før det maksimale antallet tillatte Ugyldig forsøk er nådd, er antall ugyldig passordsvar forsøk satt til 0 (null). Hvis et gyldig passord er oppgitt før det maksimale antallet tillatte Ugyldig forsøk er nådd, antall ugyldig passordforsøk og antall forsøk på ugyldig passordsvar er satt til 0 (null).       Ugyldig forsøk på passord og passordsvar samler uavhengig av hverandre. For eksempel hvis den <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>er satt til 5, og tre ugyldig passordforsøk utføres etterfulgt av to ugyldig passordsvar forsøk, to flere ugyldig passordforsøk (eller tre flere ugyldig passordsvar forsøk) må gjøres i PasswordAttemptWindow for brukeren medlemskap låses.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>       Egenskapsverdien PasswordAttemptWindow er angitt i Programkonfigurasjonen ved hjelp av den `passwordAttemptWindow` attributtet for konfigurasjonselementet delen.       Hvis den <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>er satt til `false`, ugyldig passordsvar forsøk er ikke registrert.</xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"   \n  userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      maxInvalidPasswordAttempts=\"5\"  \n      passwordAttemptWindow=\"30\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int PasswordAttemptWindow { get; }
    return:
      type: System.Int32
      description: "Tidsvinduet, i minutter, som etterfølgende mislyktes under forsøk på å angi et gyldig passord eller passordsvar spores. Standard er 10 minutter. Hvis intervallet mellom den gjeldende mislykkede forsøket på og forrige mislykkede forsøk er større enn innstillingen for PasswordAttemptWindow-egenskapen, behandles hvert mislykkede forsøk som om det er det første forsøket mislykkes."
  overload: System.Web.Security.Membership.PasswordAttemptWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression
  id: PasswordStrengthRegularExpression
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
  fullName: System.Web.Security.Membership.PasswordStrengthRegularExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter det vanlige uttrykket som brukes til å evaluere et passord."
  remarks: "Egenskapen PasswordStrengthRegularExpression henter det vanlige uttrykket som brukes til å evaluere passordkompleksitet av leverandøren som er angitt i den <xref:System.Web.Security.Membership.Provider%2A>egenskapen.</xref:System.Web.Security.Membership.Provider%2A>       Egenskapen PasswordStrengthRegularExpression er angitt i application-konfigurasjonen ved hjelp av den `passwordStrengthRegularExpression` for konfigurasjonselementet.       Du finner mer informasjon om vanlige uttrykk [.NET Framework vanlige uttrykk](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `passwordStrengthRegularExpression` attribute to a regular expression that validates the password meets the following criteria:  \n  \n-   Is greater than seven characters.  \n  \n-   Contains at least one digit.  \n  \n-   Contains at least one special (non-alphanumeric) character.  \n  \n If the password does not meet these criteria, the password is not accepted by the membership provider.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordStrengthRegularExpression=\" @\\\"(?=.{6,})(?=(.*\\d){1,})(?=(.*\\W){1,})\"  \n      />  \n   </providers>  \n</membership>  \n```"
  syntax:
    content: public static string PasswordStrengthRegularExpression { get; }
    return:
      type: System.String
      description: "Et vanlig uttrykk som brukes til å evaluere et passord."
  overload: System.Web.Security.Membership.PasswordStrengthRegularExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.Provider
  id: Provider
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: Provider
  nameWithType: Membership.Provider
  fullName: System.Web.Security.Membership.Provider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en referanse til medlemskap standardleverandøren for programmet."
  remarks: "Egenskapen mulig å referere til medlemskap standardleverandøren for et program direkte. Dette brukes vanligvis til å få tilgang til egendefinerte medlemmer av leverandøren av medlemskapet som ikke er en del av <xref:System.Web.Security.MembershipProvider>abstrakt klasse som base.</xref:System.Web.Security.MembershipProvider>"
  example:
  - "The following code example accesses the default <xref:System.Web.Security.SqlMembershipProvider> enabled for the application using the Provider property in order to determine the value of the custom <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property.  \n  \n [!code-vb[System.Web.Security.Membership#6](~/add/codesnippet/visualbasic/p-system.web.security.me_0_1.aspx)]\n [!code-cs[System.Web.Security.Membership#6](~/add/codesnippet/csharp/p-system.web.security.me_0_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipProvider Provider { get; }
    return:
      type: System.Web.Security.MembershipProvider
      description: "Medlemskap standardleverandøren for applikasjonen eksponert ved hjelp av <xref:System.Web.Security.MembershipProvider>abstrakt klasse som base.</xref:System.Web.Security.MembershipProvider>"
  overload: System.Web.Security.Membership.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.Providers
  id: Providers
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: Providers
  nameWithType: Membership.Providers
  fullName: System.Web.Security.Membership.Providers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en samling av leverandørene medlemskap for ASP.NET-programmet."
  remarks: "Egenskapen leverandører refererer til alle medlemskap leverandørene er aktivert for en applikasjon, inkludert leverandører lagt til i Web.config-filen for programmet og Machine.config-filen for alle applikasjoner. Du kan kontrollere hvilke medlemskap leverandører er tilgjengelige for en applikasjon som bruker den `providers` element i delen i konfigurasjonen for programmet. For eksempel følgende eksempel viser delen i Web.config-filen for et program som fjerner det <xref:System.Web.Security.SqlMembershipProvider>forekomsten (`AspNetSqlProvider`) angitt i konfigurasjonsfilen maskinen og legger til en <xref:System.Web.Security.SqlMembershipProvider>forekomst med navnet `SqlProvider` som medlemskap standardleverandøren for applikasjonen.</xref:System.Web.Security.SqlMembershipProvider> </xref:System.Web.Security.SqlMembershipProvider>      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=&quot;Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <membership defaultProvider=&quot;SqlProvider&quot; userIsOnlineTimeWindow=&quot;20&quot;>         <providers>           <remove name=&quot;AspNetSqlProvider&quot; />             <add name=&quot;SqlProvider&quot;               type=&quot;System.Web.Security.SqlMembershipProvider&quot;               connectionStringName=&quot;SqlServices&quot;               enablePasswordRetrieval=&quot;false&quot;               enablePasswordReset=&quot;true&quot;               requiresQuestionAndAnswer=&quot;true&quot;               passwordFormat=&quot;Hashed&quot;               applicationName=&quot;/&quot; />         </providers>       </membership>     </system.web>   </configuration>   ```Ved angivelse av [medlemskap elementet (ASP.NET innstillingsskjemaet)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) delen, må du angi den `defaultProvider` attributtet. Hvis du ikke angir en [medlemskap elementet (ASP.NET innstillingsskjemaet)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) -delen i Web.config verdiene fra maskinkonfigurasjonen på brukes og <xref:System.Web.Security.SqlMembershipProvider>forekomst med navnet `AspNetSqlProvider` er opprettet som den `defaultProvider`.</xref:System.Web.Security.SqlMembershipProvider>       Du kan få en forespørselsparameter av sterk type referanse til en leverandør fra samlingen av indeksering leverandøren av medlemskapet etter navn og endring som ønsket type."
  example:
  - "The following code example lists the providers enabled for an application and their respective types.  \n  \n [!code-cs[System.Web.Security.Membership#7](~/add/codesnippet/csharp/p-system.web.security.me_1_1.aspx)]\n [!code-vb[System.Web.Security.Membership#7](~/add/codesnippet/visualbasic/p-system.web.security.me_1_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipProviderCollection Providers { get; }
    return:
      type: System.Web.Security.MembershipProviderCollection
      description: "En <xref:System.Web.Security.MembershipProviderCollection>over medlemskap-leverandører som er konfigurert for ASP.NET-programmet.</xref:System.Web.Security.MembershipProviderCollection>"
  overload: System.Web.Security.Membership.Providers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer
  id: RequiresQuestionAndAnswer
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
  fullName: System.Web.Security.Membership.RequiresQuestionAndAnswer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en verdi som angir om medlemskap standardleverandøren krever at brukeren svare på passordspørsmål for henting og tilbakestilling av passord."
  remarks: "Å kreve et for passordspørsmål og svar gir et ekstra lag med sikkerhet under henting av eller tilbakestille en brukers passord. Brukere kan gi deg et spørsmål og svar når brukernavn opprettes at de senere kan bruke til å hente eller tilbakestille passordet.       RequiresQuestionAndAnswer kontrolleres når <xref:System.Web.Security.MembershipUser.ResetPassword%2A>eller <xref:System.Web.Security.MembershipUser.GetPassword%2A>kalles.</xref:System.Web.Security.MembershipUser.GetPassword%2A> </xref:System.Web.Security.MembershipUser.ResetPassword%2A> Leverandør gav .NET Framework oppstår en <xref:System.NotSupportedException>Hvis RequiresQuestionAndAnswer `true` og det angitte Passordsvaret er `null`.</xref:System.NotSupportedException>       Hvis <xref:System.Web.Security.Membership.EnablePasswordReset%2A>og <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A>begge `false`, du kan fremdeles bruke RequiresQuestionAndAnswer implementere oppretting av spørsmål og svar ved oppretting av nye brukere; imidlertid spørsmål og svar vil ikke bli brukt.</xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> </xref:System.Web.Security.Membership.EnablePasswordReset%2A> Kan ikke hente spørsmålet ved hjelp av <xref:System.Web.Security.MembershipUser>klasse.</xref:System.Web.Security.MembershipUser>       Hvis du vil ha mer informasjon, se <xref:System.Web.Security.MembershipUser.ResetPassword%2A>og <xref:System.Web.Security.MembershipUser.GetPassword%2A>.</xref:System.Web.Security.MembershipUser.GetPassword%2A> </xref:System.Web.Security.MembershipUser.ResetPassword%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider>, enables password reset, and requires a password answer when performing a reset.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code sample checks the value of RequiresQuestionAndAnswer and adds the necessary controls for a password question and answer to be supplied when creating a user.  \n  \n> [!IMPORTANT]\n>  This example includes a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/csharp/p-system.web.security.me_3_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/visualbasic/p-system.web.security.me_3_1.aspx)]"
  syntax:
    content: public static bool RequiresQuestionAndAnswer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis et passordsvar er nødvendig for tilbakestilling av passord og henting av; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.RequiresQuestionAndAnswer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  id: UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: UpdateUser(MembershipUser)
  nameWithType: Membership.UpdateUser(MembershipUser)
  fullName: System.Web.Security.Membership.UpdateUser(MembershipUser)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Oppdaterer databasen med informasjon for den angitte brukeren."
  remarks: "UpdateUser ta som inndata, en <xref:System.Web.Security.MembershipUser>objektet fylt med gjeldende informasjon for brukeren medlemskap og oppdaterer datakilden med egenskapsverdiene for den <xref:System.Web.Security.MembershipUser>objektet.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> Du kan lage en ny <xref:System.Web.Security.MembershipUser>, eller hente en <xref:System.Web.Security.MembershipUser>objektet fylt med gjeldende verdier i data-datakilde ved hjelp av den <xref:System.Web.Security.Membership.GetUser%2A>, <xref:System.Web.Security.Membership.GetAllUsers%2A>, <xref:System.Web.Security.Membership.FindUsersByName%2A>, eller <xref:System.Web.Security.Membership.FindUsersByEmail%2A>metoder.</xref:System.Web.Security.Membership.FindUsersByEmail%2A> </xref:System.Web.Security.Membership.FindUsersByName%2A> </xref:System.Web.Security.Membership.GetAllUsers%2A> </xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>"
  example:
  - "The following code example updates the e-mail address for the current logged-on user.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/csharp/m-system.web.security.me_8_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/visualbasic/m-system.web.security.me_8_1.aspx)]"
  syntax:
    content: public static void UpdateUser (System.Web.Security.MembershipUser user);
    parameters:
    - id: user
      type: System.Web.Security.MembershipUser
      description: "En <xref:System.Web.Security.MembershipUser>objektet som representerer brukeren som skal oppdateres, og den oppdaterte informasjonen for brukeren.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.UpdateUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>user</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow
  id: UserIsOnlineTimeWindow
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
  fullName: System.Web.Security.Membership.UserIsOnlineTimeWindow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Angir antall minutter etter siste-aktiviteten dato/klokkeslett tidsstempel for en bruker som brukeren anses som online."
  remarks: "Egenskapsverdien UserIsOnlineTimeWindow kontrolleres under kall til <xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A>.</xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A> Hvis den <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>for en bruker er større enn gjeldende dato og klokkeslett minus UserIsOnlineTimeWindow verdien i minutter, brukeren anses online.</xref:System.Web.Security.MembershipUser.LastActivityDate%2A> Du kan fastslå om en medlemskap bruker anses med <xref:System.Web.Security.MembershipUser.IsOnline%2A>egenskapen for <xref:System.Web.Security.MembershipUser>klassen.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser.IsOnline%2A>       Den <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>for en bruker oppdateres når en bruker er validert av den <xref:System.Web.Security.Membership.ValidateUser%2A>metoden.</xref:System.Web.Security.Membership.ValidateUser%2A> </xref:System.Web.Security.MembershipUser.LastActivityDate%2A> Du kan også oppdatere den <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>for en medlemskap bruker når du kaller en av de <xref:System.Web.Security.Membership.GetUser%2A>overlastingene.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser.LastActivityDate%2A> Hvis du kaller en <xref:System.Web.Security.Membership.GetUser%2A>overbelastningen som tar en `userIsOnline` parameteren angi verdien `true` å oppdatere den <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>for brukeren.</xref:System.Web.Security.MembershipUser.LastActivityDate%2A> </xref:System.Web.Security.Membership.GetUser%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `userIsOnlineTimeWindow` attribute to 20 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int UserIsOnlineTimeWindow { get; }
    return:
      type: System.Int32
      description: "Antall minutter etter siste-aktiviteten dato/klokkeslett tidsstempel for en bruker som brukeren anses som online."
  overload: System.Web.Security.Membership.UserIsOnlineTimeWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ValidateUser(System.String,System.String)
  id: ValidateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ValidateUser(String,String)
  nameWithType: Membership.ValidateUser(String,String)
  fullName: System.Web.Security.Membership.ValidateUser(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Kontrollerer at brukernavnet og passordet er ugyldig."
  remarks: "ValidateUser gir en enkel måte å kontrollere brukernavn og passord fra datakilden. Legg merke til at, hvis den `username` parameter er tom eller `null`, en <xref:System.Web.HttpException>forårsakes.</xref:System.Web.HttpException>"
  example:
  - "The following code example shows the login page for an ASP.NET application configured to use forms authentication and the <xref:System.Web.Security.Membership> class. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL by the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/m-system.web.security.me_7_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.me_7_1.aspx)]"
  syntax:
    content: public static bool ValidateUser (string username, string password);
    parameters:
    - id: username
      type: System.String
      description: "Navnet på brukeren valideres."
    - id: password
      type: System.String
      description: "Passordet for brukeren som er angitt."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis det angitte brukernavnet og passordet er ugyldig. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.ValidateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ValidatingPassword
  id: ValidatingPassword
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ValidatingPassword
  nameWithType: Membership.ValidatingPassword
  fullName: System.Web.Security.Membership.ValidatingPassword
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Forekommer når en bruker er opprettet en passordet er endret eller et passord er tilbakestilt."
  remarks: "Den <xref:System.Web.Security.MembershipProvider.ValidatingPassword>denne hendelsen oppstår når den <xref:System.Web.Security.MembershipProvider.CreateUser%2A>-metoden i <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>metode, eller <xref:System.Web.Security.MembershipProvider.ResetPassword%2A>metoden for en leverandør av medlemskap kalles.</xref:System.Web.Security.MembershipProvider.ResetPassword%2A> </xref:System.Web.Security.MembershipProvider.ChangePassword%2A> </xref:System.Web.Security.MembershipProvider.CreateUser%2A> </xref:System.Web.Security.MembershipProvider.ValidatingPassword>       Du kan bruke den <xref:System.Web.Security.MembershipProvider.ValidatingPassword>-hendelsen for å validere passordet formater og verdier for medlemskapsbrukere.</xref:System.Web.Security.MembershipProvider.ValidatingPassword>       Du kan avbryte gjeldende <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, eller <xref:System.Web.Security.MembershipProvider.ResetPassword%2A>handlingen ved å angi den <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A>for den angitte <xref:System.Web.Security.ValidatePasswordEventArgs>til `true` under den <xref:System.Web.Security.MembershipProvider.ValidatingPassword>hendelsen.</xref:System.Web.Security.MembershipProvider.ValidatingPassword> </xref:System.Web.Security.ValidatePasswordEventArgs> </xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> </xref:System.Web.Security.MembershipProvider.ResetPassword%2A> </xref:System.Web.Security.MembershipProvider.ChangePassword%2A> </xref:System.Web.Security.MembershipProvider.CreateUser%2A>       Hvis du avbryter gjeldende handling ved å angi den <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A>egenskapen `true`, kan du angi den <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>for den angitte <xref:System.Web.Security.ValidatePasswordEventArgs>et unntak som beskriver hvorfor for passord valideringsfeil.</xref:System.Web.Security.ValidatePasswordEventArgs> </xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> </xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> Kall metoden vil iverksette unntaket som den <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>er satt til.</xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> Hvis den <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>egenskapen `null`, oppkalleren vil iverksette en generisk passord valideringsfeil-unntak.</xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>"
  example:
  - "The following code example shows a <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event that validates the format of the password for a user and cancels the action if the password does not match the required format.  \n  \n [!code-cs[System.Web.Security.Membership#11](~/add/codesnippet/csharp/e-system.web.security.me_1.aspx)]\n [!code-vb[System.Web.Security.Membership#11](~/add/codesnippet/visualbasic/e-system.web.security.me_1.aspx)]"
  syntax:
    content: public static event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;
    return:
      type: System.Web.Security.MembershipValidatePasswordEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Security.MembershipCreateUserException
  isExternal: true
  name: System.Web.Security.MembershipCreateUserException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Security.Membership.ApplicationName
  parent: System.Web.Security.Membership
  isExternal: false
  name: ApplicationName
  nameWithType: Membership.ApplicationName
  fullName: System.Web.Security.Membership.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String)
  nameWithType: Membership.CreateUser(String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String)
- uid: System.Web.Security.MembershipUser
  parent: System.Web.Security
  isExternal: true
  name: MembershipUser
  nameWithType: MembershipUser
  fullName: System.Web.Security.MembershipUser
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String)
  nameWithType: Membership.CreateUser(String,String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String)
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.MembershipCreateStatus
  parent: System.Web.Security
  isExternal: true
  name: MembershipCreateStatus
  nameWithType: MembershipCreateStatus
  fullName: System.Web.Security.MembershipCreateStatus
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
- uid: System.Web.Security.Membership.DeleteUser(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser(String)
  nameWithType: Membership.DeleteUser(String)
  fullName: System.Web.Security.Membership.DeleteUser(String)
- uid: System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser(String,Boolean)
  nameWithType: Membership.DeleteUser(String,Boolean)
  fullName: System.Web.Security.Membership.DeleteUser(String,Boolean)
- uid: System.Web.Security.Membership.EnablePasswordReset
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
  fullName: System.Web.Security.Membership.EnablePasswordReset
- uid: System.Web.Security.Membership.EnablePasswordRetrieval
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
  fullName: System.Web.Security.Membership.EnablePasswordRetrieval
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail(String)
  nameWithType: Membership.FindUsersByEmail(String)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String)
- uid: System.Web.Security.MembershipUserCollection
  parent: System.Web.Security
  isExternal: true
  name: MembershipUserCollection
  nameWithType: MembershipUserCollection
  fullName: System.Web.Security.MembershipUserCollection
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String,Int32,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Security.Membership.FindUsersByName(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName(String)
  nameWithType: Membership.FindUsersByName(String)
  fullName: System.Web.Security.Membership.FindUsersByName(String)
- uid: System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByName(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByName(String,Int32,Int32,Int32)
- uid: System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GeneratePassword(Int32,Int32)
  nameWithType: Membership.GeneratePassword(Int32,Int32)
  fullName: System.Web.Security.Membership.GeneratePassword(Int32,Int32)
- uid: System.Web.Security.Membership.GetAllUsers
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers()
  nameWithType: Membership.GetAllUsers()
  fullName: System.Web.Security.Membership.GetAllUsers()
- uid: System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers(Int32,Int32,Int32)
  nameWithType: Membership.GetAllUsers(Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.GetAllUsers(Int32,Int32,Int32)
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetNumberOfUsersOnline()
  nameWithType: Membership.GetNumberOfUsersOnline()
  fullName: System.Web.Security.Membership.GetNumberOfUsersOnline()
- uid: System.Web.Security.Membership.GetUser
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser()
  nameWithType: Membership.GetUser()
  fullName: System.Web.Security.Membership.GetUser()
- uid: System.Web.Security.Membership.GetUser(System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Boolean)
  nameWithType: Membership.GetUser(Boolean)
  fullName: System.Web.Security.Membership.GetUser(Boolean)
- uid: System.Web.Security.Membership.GetUser(System.Object)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Object)
  nameWithType: Membership.GetUser(Object)
  fullName: System.Web.Security.Membership.GetUser(Object)
- uid: System.Web.Security.Membership.GetUser(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(String)
  nameWithType: Membership.GetUser(String)
  fullName: System.Web.Security.Membership.GetUser(String)
- uid: System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Object,Boolean)
  nameWithType: Membership.GetUser(Object,Boolean)
  fullName: System.Web.Security.Membership.GetUser(Object,Boolean)
- uid: System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(String,Boolean)
  nameWithType: Membership.GetUser(String,Boolean)
  fullName: System.Web.Security.Membership.GetUser(String,Boolean)
- uid: System.Web.Security.Membership.GetUserNameByEmail(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUserNameByEmail(String)
  nameWithType: Membership.GetUserNameByEmail(String)
  fullName: System.Web.Security.Membership.GetUserNameByEmail(String)
- uid: System.Web.Security.Membership.HashAlgorithmType
  parent: System.Web.Security.Membership
  isExternal: false
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
  fullName: System.Web.Security.Membership.HashAlgorithmType
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  parent: System.Web.Security.Membership
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
  fullName: System.Web.Security.Membership.MaxInvalidPasswordAttempts
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
  fullName: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.Membership.MinRequiredPasswordLength
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
  fullName: System.Web.Security.Membership.MinRequiredPasswordLength
- uid: System.Web.Security.Membership.PasswordAttemptWindow
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
  fullName: System.Web.Security.Membership.PasswordAttemptWindow
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
  fullName: System.Web.Security.Membership.PasswordStrengthRegularExpression
- uid: System.Web.Security.Membership.Provider
  parent: System.Web.Security.Membership
  isExternal: false
  name: Provider
  nameWithType: Membership.Provider
  fullName: System.Web.Security.Membership.Provider
- uid: System.Web.Security.MembershipProvider
  parent: System.Web.Security
  isExternal: true
  name: MembershipProvider
  nameWithType: MembershipProvider
  fullName: System.Web.Security.MembershipProvider
- uid: System.Web.Security.Membership.Providers
  parent: System.Web.Security.Membership
  isExternal: false
  name: Providers
  nameWithType: Membership.Providers
  fullName: System.Web.Security.Membership.Providers
- uid: System.Web.Security.MembershipProviderCollection
  parent: System.Web.Security
  isExternal: true
  name: MembershipProviderCollection
  nameWithType: MembershipProviderCollection
  fullName: System.Web.Security.MembershipProviderCollection
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer
  parent: System.Web.Security.Membership
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
  fullName: System.Web.Security.Membership.RequiresQuestionAndAnswer
- uid: System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.Membership
  isExternal: false
  name: UpdateUser(MembershipUser)
  nameWithType: Membership.UpdateUser(MembershipUser)
  fullName: System.Web.Security.Membership.UpdateUser(MembershipUser)
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow
  parent: System.Web.Security.Membership
  isExternal: false
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
  fullName: System.Web.Security.Membership.UserIsOnlineTimeWindow
- uid: System.Web.Security.Membership.ValidateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidateUser(String,String)
  nameWithType: Membership.ValidateUser(String,String)
  fullName: System.Web.Security.Membership.ValidateUser(String,String)
- uid: System.Web.Security.Membership.ValidatingPassword
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidatingPassword
  nameWithType: Membership.ValidatingPassword
  fullName: System.Web.Security.Membership.ValidatingPassword
- uid: System.Web.Security.MembershipValidatePasswordEventHandler
  parent: System.Web.Security
  isExternal: true
  name: MembershipValidatePasswordEventHandler
  nameWithType: MembershipValidatePasswordEventHandler
  fullName: System.Web.Security.MembershipValidatePasswordEventHandler
- uid: System.Web.Security.Membership.ApplicationName*
  parent: System.Web.Security.Membership
  isExternal: false
  name: ApplicationName
  nameWithType: Membership.ApplicationName
- uid: System.Web.Security.Membership.CreateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser
  nameWithType: Membership.CreateUser
- uid: System.Web.Security.Membership.DeleteUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser
  nameWithType: Membership.DeleteUser
- uid: System.Web.Security.Membership.EnablePasswordReset*
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
- uid: System.Web.Security.Membership.EnablePasswordRetrieval*
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
- uid: System.Web.Security.Membership.FindUsersByEmail*
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail
  nameWithType: Membership.FindUsersByEmail
- uid: System.Web.Security.Membership.FindUsersByName*
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName
  nameWithType: Membership.FindUsersByName
- uid: System.Web.Security.Membership.GeneratePassword*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GeneratePassword
  nameWithType: Membership.GeneratePassword
- uid: System.Web.Security.Membership.GetAllUsers*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers
  nameWithType: Membership.GetAllUsers
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetNumberOfUsersOnline
  nameWithType: Membership.GetNumberOfUsersOnline
- uid: System.Web.Security.Membership.GetUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser
  nameWithType: Membership.GetUser
- uid: System.Web.Security.Membership.GetUserNameByEmail*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUserNameByEmail
  nameWithType: Membership.GetUserNameByEmail
- uid: System.Web.Security.Membership.HashAlgorithmType*
  parent: System.Web.Security.Membership
  isExternal: false
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.Membership.MinRequiredPasswordLength*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
- uid: System.Web.Security.Membership.PasswordAttemptWindow*
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression*
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
- uid: System.Web.Security.Membership.Provider*
  parent: System.Web.Security.Membership
  isExternal: false
  name: Provider
  nameWithType: Membership.Provider
- uid: System.Web.Security.Membership.Providers*
  parent: System.Web.Security.Membership
  isExternal: false
  name: Providers
  nameWithType: Membership.Providers
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer*
  parent: System.Web.Security.Membership
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
- uid: System.Web.Security.Membership.UpdateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: UpdateUser
  nameWithType: Membership.UpdateUser
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow*
  parent: System.Web.Security.Membership
  isExternal: false
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
- uid: System.Web.Security.Membership.ValidateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidateUser
  nameWithType: Membership.ValidateUser
