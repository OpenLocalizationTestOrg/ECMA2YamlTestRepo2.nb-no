### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SecurityToken
  id: SecurityToken
  children:
  - System.IdentityModel.Tokens.SecurityToken.#ctor
  - System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.SecurityToken.Id
  - System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityToken.SecurityKeys
  - System.IdentityModel.Tokens.SecurityToken.ValidFrom
  - System.IdentityModel.Tokens.SecurityToken.ValidTo
  langs:
  - csharp
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
  type: Class
  summary: "Representerer en basisklasse som brukes til å implementere alle sikkerhetstokener."
  remarks: "Bruk en sikkerhetskode legitimasjon for godkjenning, eller til å beskytte en melding.       En sikkerhetskode kan brukes til å angi legitimasjon for godkjenning, kryptografisk nøkkel materiale, eller, hvis det er en sikkerhetskode utstedt av en sikkerhetstokentjenesten (STS), en samling av krav om et emne. Alle sikkerhetstokener avledet fra klassen SecurityToken.       Begynner med .NET 4.5, Windows Identity Foundation (WIF) er integrert i .NET Framework, og klassene eksponert i WIF er den foretrukne metoden for behandling av sikkerhetstokener i koden. WIF, sikkerhetstokener serialisert og deserialiseres til og fra sine XML-representasjon og er validert ved hjelp av klasser som er avledet fra <xref:System.IdentityModel.Tokens.SecurityTokenHandler>basere klasse.</xref:System.IdentityModel.Tokens.SecurityTokenHandler> Validering av et token inkluderer ikke bare sørger for at tokenet er gyldig, men returnerer også en <xref:System.Security.Claims.ClaimsIdentity>forekomsten fra tokenet som kan brukes til å godkjenning og autorisasjon avgjørelsene.</xref:System.Security.Claims.ClaimsIdentity> Den <xref:System.Security.Claims.ClaimsIdentity>bygges av token behandlingsprogrammet implementeringen av den <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A>metoden fra krav i token som korrekt fra krav som er innebygd tokenet typen seg selv.</xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> </xref:System.Security.Claims.ClaimsIdentity>       WIF leveres med støtte for følgende typer sikkerhetstokener:- <xref:System.IdentityModel.Tokens.Saml2SecurityToken>: representerer en sikkerhetskode som er basert på en SAML 2.0-deklarasjon.</xref:System.IdentityModel.Tokens.Saml2SecurityToken> Denne tokentypen utstedes vanligvis av en sikkerhetstokentjenesten som svar på en WS-Trust eller WS Federation sikkerhet token forespørsel (første).      - <xref:System.IdentityModel.Tokens.SamlSecurityToken>: Representerer en sikkerhetskode som er basert på en SAML 1.1-deklarasjon.</xref:System.IdentityModel.Tokens.SamlSecurityToken> Denne tokentypen utstedes vanligvis av en sikkerhetstokentjenesten som svar på en WS-Trust eller WS Federation sikkerhet token forespørsel (første).      - <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>og <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>: representerer en sikkerhetskode som er basert på en Kerberos-billetten som er mottatt eller sendt i en melding i SOAP - <xref:System.IdentityModel.Tokens.RsaSecurityToken>: representerer en sikkerhetskode som er basert på nøkkel som er opprettet med RSA-algoritmen.</xref:System.IdentityModel.Tokens.RsaSecurityToken> </xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken> </xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>      - <xref:System.IdentityModel.Tokens.SessionSecurityToken>: Representerer en sikkerhetskode som inneholder informasjon om en økt.</xref:System.IdentityModel.Tokens.SessionSecurityToken>      - <xref:System.IdentityModel.Tokens.UserNameSecurityToken>: Representerer en sikkerhetskode som er basert på et brukernavn og passord.</xref:System.IdentityModel.Tokens.UserNameSecurityToken>      - <xref:System.IdentityModel.Tokens.WindowsSecurityToken>: Representerer en sikkerhetskode som er basert på identiteten til en Windows-domene eller bruker konto.</xref:System.IdentityModel.Tokens.WindowsSecurityToken>      - <xref:System.IdentityModel.Tokens.X509SecurityToken>: Representerer en sikkerhetskode som er basert på et X.509-sertifikat.</xref:System.IdentityModel.Tokens.X509SecurityToken>      - <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>: Representerer en sikkerhetskode som er basert på et X.509-sertifikat som er tilordnet til et Windows-domenebruker eller lokal datamaskin brukerkonto.</xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>       To andre sikkerhet token klasser, <xref:System.IdentityModel.Tokens.GenericXmlSecurityToken>og <xref:System.IdentityModel.Tokens.EncryptedSecurityToken>, kan brukes til å håndtere generelle tilfeller.</xref:System.IdentityModel.Tokens.EncryptedSecurityToken> </xref:System.IdentityModel.Tokens.GenericXmlSecurityToken>       Et bredt snakker sikkerhetstokener finnes i tre overordnede kategorier:-symboler utføre eller referanse kryptografisk nøkkel materiale. For eksempel den <xref:System.IdentityModel.Tokens.RsaSecurityToken>og <xref:System.IdentityModel.Tokens.X509SecurityToken>brukes ofte for dette formålet.</xref:System.IdentityModel.Tokens.X509SecurityToken> </xref:System.IdentityModel.Tokens.RsaSecurityToken>      -Token som representerer legitimasjonen for brukere som allerede er godkjent. For eksempel den <xref:System.IdentityModel.Tokens.UserNameSecurityToken>, <xref:System.IdentityModel.Tokens.WindowsSecurityToken>, og hvis det er en bruker som er godkjent ved hjelp av et sertifikat i <xref:System.IdentityModel.Tokens.X509SecurityToken>typer.</xref:System.IdentityModel.Tokens.X509SecurityToken> </xref:System.IdentityModel.Tokens.WindowsSecurityToken> </xref:System.IdentityModel.Tokens.UserNameSecurityToken>      -Token som er utstedt av en sikkerhetstokentjenesten (STS) som svar på en sikkerhet token forespørsel om å bruke WS-Trust eller WS Federation protokollen. Disse returneres vanligvis i en `wst:RequestSecurityTokenResponse` XML-fragment. Den <xref:System.IdentityModel.Tokens.Saml2SecurityToken>og <xref:System.IdentityModel.Tokens.SamlSecurityToken>typer brukes vanligvis til å representere disse tokener.</xref:System.IdentityModel.Tokens.SamlSecurityToken> </xref:System.IdentityModel.Tokens.Saml2SecurityToken>       En spesiell tokentypen den <xref:System.IdentityModel.Tokens.SessionSecurityToken>, inneholder informasjonen som kreves for å opprette en sikkerhetskontohaver når du bruker økter i active eller passive scenarier.</xref:System.IdentityModel.Tokens.SessionSecurityToken>       Du kan utledes fra spesifikk type og det tilknyttede token behandlingsprogrammet for å støtte nye elementer du legger til tokenet for å legge til funksjonalitet eksisterende token typer. Hvis du vil legge til støtte for ny token, kan du utledet direkte fra SecurityToken-klassen. Når du gjør dette, må du også å opprette en token behandlingsprogrammet klasse av avledet fra <xref:System.IdentityModel.Tokens.SecurityTokenHandler>klassen.</xref:System.IdentityModel.Tokens.SecurityTokenHandler> Avhengig av hvordan tokenet ditt som skal brukes, kan også må du opprette en egendefinert token Løsningsprogrammet av avledet fra <xref:System.IdentityModel.Tokens.IssuerTokenResolver>klassen og én eller flere egendefinerte key setningsdelen identifikatortyper av avledet fra <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>klassen.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> </xref:System.IdentityModel.Tokens.IssuerTokenResolver>"
  example:
  - "The code examples that are used in the SecurityToken topics are taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens. For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/add/includes/ajax-current-ext-md.md). The following code shows the implementation of the `SimpleWebToken` class. This class extends SecurityToken.  \n  \n [!code-cs[WifCustomTokenST#1](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtokenconstants.cs#1)]  \n[!code-cs[WifCustomTokenST#2](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtoken.cs#2)]"
  syntax:
    content: public abstract class SecurityToken
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityToken.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: SecurityToken()
  nameWithType: SecurityToken.SecurityToken()
  fullName: System.IdentityModel.Tokens.SecurityToken.SecurityToken()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Kalles av konstruktører i avledede klasser initialisere den <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> klasse."
  syntax:
    content: protected SecurityToken ();
    parameters: []
  overload: System.IdentityModel.Tokens.SecurityToken.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1
  id: CanCreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: CanCreateKeyIdentifierClause()
  nameWithType: SecurityToken.CanCreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  syntax:
    content: 'public virtual bool CanCreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    return:
      type: System.Boolean
      description: "Som skal legges til."
  overload: System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause<T>*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1
  id: CreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: CreateKeyIdentifierClause()
  nameWithType: SecurityToken.CreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  syntax:
    content: 'public virtual T CreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    return:
      type: T
      description: "Som skal legges til."
  overload: System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause<T>*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityToken.Id
  id: Id
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: Id
  nameWithType: SecurityToken.Id
  fullName: System.IdentityModel.Tokens.SecurityToken.Id
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Henter en unik identifikator for sikkerhetstokenet."
  remarks: "Vanligvis når en sikkerhetskode serialiseres til XML, den `Id` attributt for sikkerhetstokenet er satt til verdien for Id-egenskapen."
  example:
  - "The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens. For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/add/includes/ajax-current-ext-md.md). The following code shows the override of the Id property.  \n  \n [!code-cs[WifCustomTokenST#1](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtokenconstants.cs#1)]  \n[!code-cs[WifCustomTokenST#3](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtoken.cs#3)]  \n[!code-cs[WifCustomTokenST#4](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtoken.cs#4)]"
  syntax:
    content: public abstract string Id { get; }
    return:
      type: System.String
      description: "Den unike identifikatoren for sikkerhetstokenet."
  overload: System.IdentityModel.Tokens.SecurityToken.Id*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Returnerer en verdi som angir om nøkkel-ID for denne forekomsten ikke kan løses til den angitte nøkkelen identifikatoren."
  remarks: "Standard implementering støtter nøkkel-ID-setningsdelene i typen<xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause></xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>"
  syntax:
    content: public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "En <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> til å sammenligne for denne forekomsten."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <code> keyIdentifierClause </code> er en <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> og den har samme unike ID som den <xref:System.IdentityModel.Tokens.SecurityToken.Id*>egenskapen; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.SecurityToken.Id*>"
  overload: System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Henter nøkkel for angitt nøkkel-ID-setningsdelen."
  remarks: "Metodekall ResolveKeyIdentifierClause den <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A>først å avgjøre om setningsdelen angitt nøkkel-ID er den samme som denne forekomsten.</xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A>       Standard implementering returnerer det første elementet i den <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A>samlingen hvis samlingen ikke er tom og <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A>returnerer `true`; Hvis ikke, returneres `null`.</xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> </xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A>"
  syntax:
    content: public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "En <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> å hente nøkkel for."
    return:
      type: System.IdentityModel.Tokens.SecurityKey
      description: "En <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> som representerer nøkkelen."
  overload: System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityToken.SecurityKeys
  id: SecurityKeys
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: SecurityKeys
  nameWithType: SecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.SecurityToken.SecurityKeys
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Henter krypteringsnøklene tilknyttet sikkerhetstokenet."
  remarks: "Bruk av <xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A>til å angi den kryptografiske nøkkelen på dette sikkerhetskode å beskytte tokener eller en SOAP-melding.</xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A> Nøklene kan brukes, blant annet til å signere eller kryptere tokener eller SOAP-meldinger."
  example:
  - "The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens. For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/add/includes/ajax-current-ext-md.md). The following code shows the override of the SecurityKeys property.  \n  \n [!code-cs[WifCustomTokenST#1](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtokenconstants.cs#1)]  \n[!code-cs[WifCustomTokenST#3](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtoken.cs#3)]  \n[!code-cs[WifCustomTokenST#5](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtoken.cs#5)]"
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey> SecurityKeys { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
      description: "En &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; av typen <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> som inneholder settet med nøkler som er knyttet til sikkerhetstokenet."
  overload: System.IdentityModel.Tokens.SecurityToken.SecurityKeys*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityToken.ValidFrom
  id: ValidFrom
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: ValidFrom
  nameWithType: SecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.SecurityToken.ValidFrom
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Henter den første instant tidspunkt denne sikkerhetstoken er gyldig."
  remarks: "Bruk av ValidFrom og <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A>til å fastsette hvor lang tid som en <xref:System.IdentityModel.Tokens.SecurityToken>-tokenet er gyldig.</xref:System.IdentityModel.Tokens.SecurityToken> </xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> ValidFrom og <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A>Egenskaper representerer første og siste instants i tid som sikkerhetstokenet er gyldig, henholdsvis.</xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A>"
  example:
  - "The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens. For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/add/includes/ajax-current-ext-md.md). The following code shows the override of the ValidFrom property.  \n  \n [!code-cs[WifCustomTokenST#1](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtokenconstants.cs#1)]  \n[!code-cs[WifCustomTokenST#3](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtoken.cs#3)]  \n[!code-cs[WifCustomTokenST#6](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtoken.cs#6)]  \n[!code-cs[WifCustomTokenST#8](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtoken.cs#8)]"
  syntax:
    content: public abstract DateTime ValidFrom { get; }
    return:
      type: System.DateTime
      description: "En <xref:System.DateTime>som representerer øyeblikk tidspunkt da denne sikkerhetskode gjelder først.</xref:System.DateTime>"
  overload: System.IdentityModel.Tokens.SecurityToken.ValidFrom*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityToken.ValidTo
  id: ValidTo
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: ValidTo
  nameWithType: SecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.SecurityToken.ValidTo
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Henter sist instant tidspunkt denne sikkerhetstoken er gyldig."
  remarks: "Bruk av <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A>og ValidTo til å fastsette hvor lang tid som en <xref:System.IdentityModel.Tokens.SecurityToken>-tokenet er gyldig.</xref:System.IdentityModel.Tokens.SecurityToken> </xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> Den <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A>og ValidTo egenskaper representerer første og siste instants tidspunkt der sikkerhetstokenet er gyldig, henholdsvis.</xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A>"
  example:
  - "The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens. For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/add/includes/ajax-current-ext-md.md). The following code shows the override of the ValidTo property.  \n  \n [!code-cs[WifCustomTokenST#1](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtokenconstants.cs#1)]  \n[!code-cs[WifCustomTokenST#3](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtoken.cs#3)]  \n[!code-cs[WifCustomTokenST#7](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtoken.cs#7)]  \n[!code-cs[WifCustomTokenST#8](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtoken.cs#8)]"
  syntax:
    content: public abstract DateTime ValidTo { get; }
    return:
      type: System.DateTime
      description: "En <xref:System.DateTime>som representerer sist instant tidspunkt denne sikkerhetstoken er gyldig.</xref:System.DateTime>"
  overload: System.IdentityModel.Tokens.SecurityToken.ValidTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Tokens.SecurityToken.#ctor
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: SecurityToken()
  nameWithType: SecurityToken.SecurityToken()
  fullName: System.IdentityModel.Tokens.SecurityToken.SecurityToken()
- uid: System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: CanCreateKeyIdentifierClause()
  nameWithType: SecurityToken.CanCreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: CreateKeyIdentifierClause()
  nameWithType: SecurityToken.CreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.IdentityModel.Tokens.SecurityToken.Id
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: Id
  nameWithType: SecurityToken.Id
  fullName: System.IdentityModel.Tokens.SecurityToken.Id
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.SecurityToken.SecurityKeys
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: SecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.SecurityToken.SecurityKeys
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<SecurityKey>
  nameWithType: ReadOnlyCollection<SecurityKey>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: SecurityKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SecurityToken.ValidFrom
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: SecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.SecurityToken.ValidFrom
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Tokens.SecurityToken.ValidTo
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: SecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.SecurityToken.ValidTo
- uid: System.IdentityModel.Tokens.SecurityToken.#ctor*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken.SecurityToken
- uid: System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause<T>*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: CanCreateKeyIdentifierClause<T>
  nameWithType: SecurityToken.CanCreateKeyIdentifierClause<T>
- uid: System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause<T>*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: CreateKeyIdentifierClause<T>
  nameWithType: SecurityToken.CreateKeyIdentifierClause<T>
- uid: System.IdentityModel.Tokens.SecurityToken.Id*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: Id
  nameWithType: SecurityToken.Id
- uid: System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: MatchesKeyIdentifierClause
  nameWithType: SecurityToken.MatchesKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: ResolveKeyIdentifierClause
  nameWithType: SecurityToken.ResolveKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityToken.SecurityKeys*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: SecurityToken.SecurityKeys
- uid: System.IdentityModel.Tokens.SecurityToken.ValidFrom*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: SecurityToken.ValidFrom
- uid: System.IdentityModel.Tokens.SecurityToken.ValidTo*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: SecurityToken.ValidTo
