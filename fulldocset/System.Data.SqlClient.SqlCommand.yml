### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlCommand
  id: SqlCommand
  children:
  - System.Data.SqlClient.SqlCommand.#ctor
  - System.Data.SqlClient.SqlCommand.#ctor(System.String)
  - System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  - System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)
  - System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)
  - System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery
  - System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)
  - System.Data.SqlClient.SqlCommand.BeginExecuteReader
  - System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)
  - System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader
  - System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)
  - System.Data.SqlClient.SqlCommand.Cancel
  - System.Data.SqlClient.SqlCommand.Clone
  - System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
  - System.Data.SqlClient.SqlCommand.CommandText
  - System.Data.SqlClient.SqlCommand.CommandTimeout
  - System.Data.SqlClient.SqlCommand.CommandType
  - System.Data.SqlClient.SqlCommand.Connection
  - System.Data.SqlClient.SqlCommand.CreateDbParameter
  - System.Data.SqlClient.SqlCommand.CreateParameter
  - System.Data.SqlClient.SqlCommand.DbConnection
  - System.Data.SqlClient.SqlCommand.DbParameterCollection
  - System.Data.SqlClient.SqlCommand.DbTransaction
  - System.Data.SqlClient.SqlCommand.DesignTimeVisible
  - System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)
  - System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)
  - System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)
  - System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)
  - System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteNonQuery
  - System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteReader
  - System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteScalar
  - System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteXmlReader
  - System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync
  - System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.Notification
  - System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
  - System.Data.SqlClient.SqlCommand.Parameters
  - System.Data.SqlClient.SqlCommand.Prepare
  - System.Data.SqlClient.SqlCommand.ResetCommandTimeout
  - System.Data.SqlClient.SqlCommand.StatementCompleted
  - System.Data.SqlClient.SqlCommand.System#ICloneable#Clone
  - System.Data.SqlClient.SqlCommand.Transaction
  - System.Data.SqlClient.SqlCommand.UpdatedRowSource
  langs:
  - csharp
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
  type: Class
  summary: "Representerer en Transact-SQL-setningen eller lagret prosedyre skal kjøres mot en SQL Server-database. Denne klassen kan ikke arves."
  remarks: "Når en forekomst av SqlCommand er opprettet, er det angitt egenskapene lese-og skrivetilgang til de opprinnelige verdiene. Hvis du vil se en liste av disse verdiene, kan du se SqlCommand-konstruktøren.       SqlCommand funksjoner følgende metoder for å utføre kommandoer hos en SQL Server-database: | Elementet | Beskrivelse |   |----------|-----------------|   | <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>| Starter asynkron kjøringen av Transact-SQL-setning eller lagret prosedyre som er beskrevet i denne SqlCommand, vanligvis kjøring av kommandoer for eksempel INSERT, Oppdater og Slett Sett-setninger.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Hvert kall til <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>må være i par med et kall til <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>som avsluttes operasjonen, vanligvis på en egen tråd. |   | <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>| Starter asynkron kjøringen av Transact-SQL-setningen eller lagret prosedyre som er beskrevet i denne SqlCommand og henter én eller flere resultater angir fra serveren.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Hvert kall til <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>må være i par med et kall til <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>som avsluttes operasjonen, vanligvis på en egen tråd. |   | <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>| Starter asynkron kjøringen av Transact-SQL-setning eller lagret prosedyre som er beskrevet i denne SqlCommand.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Hvert kall til `BeginExecuteXmlReader` må være i par med et kall til `EndExecuteXmlReader`, som avsluttes operasjonen, vanligvis på en egen tråd, og returnerer et objekt som <xref:System.Xml.XmlReader>. |   | <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>| Utfører kommandoer som returnerer radene.</xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> </xref:System.Xml.XmlReader> For økt ytelse <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>aktiverer-kommandoer i Transact-SQL `sp_executesql` system lagret prosedyre.</xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Derfor <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>kan ikke føre til at du vil Hvis brukes til å utføre kommandoer som angitt Transact-SQL-setninger. |   | <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>| Utfører kommandoer som Transact-SQL-INNSETTING, Oppdater og Slett Sett-setninger. |   | <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>| Henter en enkelt verdi (for eksempel en aggregatfunksjon verdi) fra en database. |   | <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>| Sender <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>til <xref:System.Data.SqlClient.SqlCommand.Connection%2A>og bygger et <xref:System.Xml.XmlReader>-objekt. |       Du kan tilbakestille den <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>egenskapen og gjenbruk SqlCommand-objekt.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> </xref:System.Xml.XmlReader> </xref:System.Data.SqlClient.SqlCommand.Connection%2A> </xref:System.Data.SqlClient.SqlCommand.CommandText%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Du må imidlertid lukke den <xref:System.Data.SqlClient.SqlDataReader>før du kan utføre en kommando for ny eller tidligere.</xref:System.Data.SqlClient.SqlDataReader>       Hvis en <xref:System.Data.SqlClient.SqlException>er generert av kjøring av en SqlCommand-metoden i <xref:System.Data.SqlClient.SqlConnection>forblir åpent når alvorsgrad 19 år eller mindre.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlException> Når alvorsgrad 20 eller senere, lukker serveren vanligvis <xref:System.Data.SqlClient.SqlConnection>.</xref:System.Data.SqlClient.SqlConnection> Brukeren kan imidlertid åpne tilkoblingen, og fortsette.      > [!NOTE] > Nameless, også kalt ordenstall, parametere støttes ikke av .NET Framework-dataleverandør for SQL Server."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a SqlCommand, and a <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it to the console. Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader> and then the <xref:System.Data.SqlClient.SqlConnection> as it exits the `Using` code blocks.  \n  \n [!code-cs[Classic WebData SqlCommand Example#1](~/add/codesnippet/csharp/t-system.data.sqlclient._6_1.cs)]\n [!code-vb[Classic WebData SqlCommand Example#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._6_1.vb)]  \n  \n The following sample shows how to create and execute different types of SqlCommand objects.  \n  \n First you must create the sample database, by executing the following script:  \n  \n```  \nUSE [master]  \nGO  \n  \nCREATE DATABASE [MySchool]  \nGO  \n  \nUSE [MySchool]  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE procedure [dbo].[CourseExtInfo] @CourseId int  \nas  \nselect c.CourseID,c.Title,c.Credits,d.Name as DepartmentName  \nfrom Course as c left outer join Department as d on c.DepartmentID=d.DepartmentID  \nwhere c.CourseID=@CourseId  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \ncreate procedure [dbo].[DepartmentInfo] @DepartmentId int,@CourseCount int output  \nas  \nselect @CourseCount=Count(c.CourseID)  \nfrom course as c  \nwhere c.DepartmentID=@DepartmentId  \n  \nselect d.DepartmentID,d.Name,d.Budget,d.StartDate,d.Administrator  \nfrom Department as d  \nwhere d.DepartmentID=@DepartmentId  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCreate PROCEDURE [dbo].[GetDepartmentsOfSpecifiedYear]   \n@Year int,@BudgetSum money output  \nAS  \nBEGIN  \n        SELECT @BudgetSum=SUM([Budget])  \n  FROM [MySchool].[dbo].[Department]  \n  Where YEAR([StartDate])=@Year   \n  \nSELECT [DepartmentID]  \n      ,[Name]  \n      ,[Budget]  \n      ,[StartDate]  \n      ,[Administrator]  \n  FROM [MySchool].[dbo].[Department]  \n  Where YEAR([StartDate])=@Year  \n  \nEND  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE TABLE [dbo].[Course](~/add/includes/ajax-current-ext-md.md [nvarchar](10) NOT NULL,  \n[Year] [smallint] NOT NULL,  \n[Title] [nvarchar](100) NOT NULL,  \n[Credits] [int] NOT NULL,  \n[DepartmentID] [int] NOT NULL,  \n CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   \n(  \n[CourseID] ASC,  \n[Year] ASC  \n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE TABLE [dbo].[Department](~/add/includes/ajax-current-ext-md.md [int] IDENTITY(1,1) NOT NULL,  \n[Name] [nvarchar](50) NOT NULL,  \n[Budget] [money] NOT NULL,  \n[StartDate] [datetime] NOT NULL,  \n[Administrator] [int] NULL,  \n CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   \n(  \n[DepartmentID] ASC  \n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE TABLE [dbo].[Person](~/add/includes/ajax-current-ext-md.md [int] IDENTITY(1,1) NOT NULL,  \n[LastName] [nvarchar](50) NOT NULL,  \n[FirstName] [nvarchar](50) NOT NULL,  \n[HireDate] [datetime] NULL,  \n[EnrollmentDate] [datetime] NULL,  \n CONSTRAINT [PK_School.Student] PRIMARY KEY CLUSTERED   \n(  \n[PersonID] ASC  \n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE TABLE [dbo].[StudentGrade](~/add/includes/ajax-current-ext-md.md [int] IDENTITY(1,1) NOT NULL,  \n[CourseID] [nvarchar](10) NOT NULL,  \n[StudentID] [int] NOT NULL,  \n[Grade] [decimal](3, 2) NOT NULL,  \n CONSTRAINT [PK_StudentGrade] PRIMARY KEY CLUSTERED   \n(  \n[EnrollmentID] ASC  \n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \ncreate view [dbo].[EnglishCourse]  \nas  \nselect c.CourseID,c.Title,c.Credits,c.DepartmentID  \nfrom Course as c join Department as d on c.DepartmentID=d.DepartmentID  \nwhere d.Name=N'English'  \n  \nGO  \nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  \nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  \nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  \nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  \nSET IDENTITY_INSERT [dbo].[Department] ON   \n  \nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  \nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  \nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  \nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  \nSET IDENTITY_INSERT [dbo].[Department] OFF  \nSET IDENTITY_INSERT [dbo].[Person] ON   \n  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (1, N'Hu', N'Nan', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (2, N'Norman', N'Laura', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (3, N'Olivotto', N'Nino', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (4, N'Anand', N'Arturo', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (5, N'Jai', N'Damien', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (6, N'Holt', N'Roger', CAST(0x000097F100000000 AS DateTime), NULL)  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (7, N'Martin', N'Randall', CAST(0x00008B1A00000000 AS DateTime), NULL)  \nSET IDENTITY_INSERT [dbo].[Person] OFF  \nSET IDENTITY_INSERT [dbo].[StudentGrade] ON   \n  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (1, N'C1045', 1, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (2, N'C1045', 2, CAST(3.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (3, N'C1045', 3, CAST(2.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (4, N'C1045', 4, CAST(4.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (5, N'C1045', 5, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (6, N'C1061', 1, CAST(4.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (7, N'C1061', 3, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (8, N'C1061', 4, CAST(2.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (9, N'C1061', 5, CAST(1.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (10, N'C2021', 1, CAST(2.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (11, N'C2021', 2, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (12, N'C2021', 4, CAST(3.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (13, N'C2021', 5, CAST(3.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (14, N'C2042', 1, CAST(2.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (15, N'C2042', 2, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (16, N'C2042', 3, CAST(4.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (17, N'C2042', 5, CAST(3.00 AS Decimal(3, 2)))  \nSET IDENTITY_INSERT [dbo].[StudentGrade] OFF  \nALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  \nREFERENCES [dbo].[Department] ([DepartmentID])  \nGO  \nALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  \nGO  \nALTER TABLE [dbo].[StudentGrade]  WITH CHECK ADD  CONSTRAINT [FK_StudentGrade_Student] FOREIGN KEY([StudentID])  \nREFERENCES [dbo].[Person] ([PersonID])  \nGO  \nALTER TABLE [dbo].[StudentGrade] CHECK CONSTRAINT [FK_StudentGrade_Student]  \nGO  \n```  \n  \n Next, compile and execute the following:  \n  \n```  \nusing System;  \nusing System.Data;  \nusing System.Data.SqlClient;  \nusing System.Threading.Tasks;  \n  \nclass Program {  \n  \n   static class SqlHelper {  \n      // Set the connection, command, and then execute the command with non query.  \n      public static Int32 ExecuteNonQuery(String connectionString, String commandText,  \n          CommandType commandType, params SqlParameter[] parameters) {  \n         using (SqlConnection conn = new SqlConnection(connectionString)) {  \n            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  \n               // There're three command types: StoredProcedure, Text, TableDirect. The TableDirect   \n               // type is only for OLE DB.    \n               cmd.CommandType = commandType;  \n               cmd.Parameters.AddRange(parameters);  \n  \n               conn.Open();  \n               return cmd.ExecuteNonQuery();  \n            }  \n         }  \n      }  \n  \n      // Set the connection, command, and then execute the command and only return one value.  \n      public static Object ExecuteScalar(String connectionString, String commandText,  \n          CommandType commandType, params SqlParameter[] parameters) {  \n         using (SqlConnection conn = new SqlConnection(connectionString)) {  \n            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  \n               cmd.CommandType = commandType;  \n               cmd.Parameters.AddRange(parameters);  \n  \n               conn.Open();  \n               return cmd.ExecuteScalar();  \n            }  \n         }  \n      }  \n  \n      // Set the connection, command, and then execute the command with query and return the reader.  \n      public static SqlDataReader ExecuteReader(String connectionString, String commandText,  \n          CommandType commandType, params SqlParameter[] parameters) {  \n         SqlConnection conn = new SqlConnection(connectionString);  \n  \n         using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  \n            cmd.CommandType = commandType;  \n            cmd.Parameters.AddRange(parameters);  \n  \n            conn.Open();  \n            // When using CommandBehavior.CloseConnection, the connection will be closed when the   \n            // IDataReader is closed.  \n            SqlDataReader reader = cmd.ExecuteReader(CommandBehavior.CloseConnection);  \n  \n            return reader;  \n         }  \n      }  \n   }  \n  \n   static void Main(string[] args) {  \n      String connectionString = \"Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;\";  \n  \n      CountCourses(connectionString, 2012);  \n      Console.WriteLine();  \n  \n      Console.WriteLine(\"Following result is the departments that started from 2007:\");  \n      GetDepartments(connectionString, 2007);  \n      Console.WriteLine();  \n  \n      Console.WriteLine(\"Add the credits when the credits of course is lower than 4.\");  \n      AddCredits(connectionString, 4);  \n      Console.WriteLine();  \n  \n      Console.WriteLine(\"Please press any key to exit...\");  \n      Console.ReadKey();  \n   }  \n  \n   static void CountCourses(String connectionString, Int32 year) {  \n      String commandText = \"Select Count([CourseID]) FROM [MySchool].[dbo].[Course] Where Year=@Year\";  \n      SqlParameter parameterYear = new SqlParameter(\"@Year\", SqlDbType.Int);  \n      parameterYear.Value = year;  \n  \n      Object oValue = SqlHelper.ExecuteScalar(connectionString, commandText, CommandType.Text, parameterYear);  \n      Int32 count;  \n      if (Int32.TryParse(oValue.ToString(), out count))  \n         Console.WriteLine(\"There {0} {1} course{2} in {3}.\", count > 1 ? \"are\" : \"is\", count, count > 1 ? \"s\" : null, year);  \n   }  \n  \n   // Display the Departments that start from the specified year.  \n   static void GetDepartments(String connectionString, Int32 year) {  \n      String commandText = \"dbo.GetDepartmentsOfSpecifiedYear\";  \n  \n      // Specify the year of StartDate  \n      SqlParameter parameterYear = new SqlParameter(\"@Year\", SqlDbType.Int);  \n      parameterYear.Value = year;  \n  \n      // When the direction of parameter is set as Output, you can get the value after   \n      // executing the command.  \n      SqlParameter parameterBudget = new SqlParameter(\"@BudgetSum\", SqlDbType.Money);  \n      parameterBudget.Direction = ParameterDirection.Output;  \n  \n      using (SqlDataReader reader = SqlHelper.ExecuteReader(connectionString, commandText,  \n          CommandType.StoredProcedure, parameterYear, parameterBudget)) {  \n         Console.WriteLine(\"{0,-20}{1,-20}{2,-20}{3,-20}\", \"Name\", \"Budget\", \"StartDate\",  \n             \"Administrator\");  \n         while (reader.Read()) {  \n            Console.WriteLine(\"{0,-20}{1,-20:C}{2,-20:d}{3,-20}\", reader[\"Name\"],  \n                reader[\"Budget\"], reader[\"StartDate\"], reader[\"Administrator\"]);  \n         }  \n      }  \n      Console.WriteLine(\"{0,-20}{1,-20:C}\", \"Sum:\", parameterBudget.Value);  \n   }  \n  \n   // If credits of course is lower than the certain value, the method will add the credits.  \n   static void AddCredits(String connectionString, Int32 creditsLow) {  \n      String commandText = \"Update [MySchool].[dbo].[Course] Set Credits=Credits+1 Where Credits<@Credits\";  \n  \n      SqlParameter parameterCredits = new SqlParameter(\"@Credits\", creditsLow);  \n  \n      Int32 rows = SqlHelper.ExecuteNonQuery(connectionString, commandText, CommandType.Text, parameterCredits);  \n  \n      Console.WriteLine(\"{0} row{1} {2} updated.\", rows, rows > 1 ? \"s\" : null, rows > 1 ? \"are\" : \"is\");  \n   }  \n}  \n```"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RecordsAffected")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem(true)]

      public sealed class SqlCommand : System.Data.Common.DbCommand, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommand
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync
  - System.Data.Common.DbCommand.ExecuteScalarAsync
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  - System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand()
  nameWithType: SqlCommand.SqlCommand()
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> klasse."
  remarks: "Grunnleggende konstruktøren initialiserer alle felt til standardverdiene. Tabellen nedenfor viser første egenskapsverdier for en forekomst av <xref:System.Data.SqlClient.SqlCommand>.</xref:System.Data.SqlClient.SqlCommand>      | Egenskaper | Standardverdi |   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>| tom streng (&quot;&quot;) |   | <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|&30; |   | <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>| `CommandType.Text`|   | <xref:System.Data.SqlClient.SqlCommand.Connection%2A>| Null |       Du kan endre verdien for disse egenskapene via en egen kall til egenskapen.</xref:System.Data.SqlClient.SqlCommand.Connection%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.CommandText%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets the `CommandTimeout` property.  \n  \n [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._39_1.vb)]\n [!code-cs[Classic WebData IDbCommand.CommandTimeout Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._39_1.cs)]"
  syntax:
    content: public SqlCommand ();
    parameters: []
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand(String)
  nameWithType: SqlCommand.SqlCommand(String)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> klasse teksten i spørringen."
  remarks: "Når en forekomst av <xref:System.Data.SqlClient.SqlCommand>er opprettet, følgende lese-og skrivetilgang er angitt til opprinnelige verdier.</xref:System.Data.SqlClient.SqlCommand>      | Egenskaper | Standardverdi |   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>| `cmdText`|   | <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|&30; |   | <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>| `CommandType.Text`|   | <xref:System.Data.SqlClient.SqlCommand.Connection%2A>| null |       Du kan endre verdien for disse egenskapene via en egen kall til egenskapen.</xref:System.Data.SqlClient.SqlCommand.Connection%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.CommandText%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand>, passing in the connection string and command text.  \n  \n [!code-vb[Classic WebData SqlCommand.SqlCommand1 Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._21_1.vb)]\n [!code-cs[Classic WebData SqlCommand.SqlCommand1 Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._21_1.cs)]"
  syntax:
    content: public SqlCommand (string cmdText);
    parameters:
    - id: cmdText
      type: System.String
      description: "Teksten i spørringen."
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand(String,SqlConnection)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> klasse teksten i spørringen, og en <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>."
  remarks: "Tabellen nedenfor viser første egenskapsverdier for en forekomst av <xref:System.Data.SqlClient.SqlCommand>.</xref:System.Data.SqlClient.SqlCommand>      | Egenskaper | Standardverdi |   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>| `cmdText`|   | <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|&30; |   | <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>| `CommandType.Text`|   | <xref:System.Data.SqlClient.SqlCommand.Connection%2A>| En ny <xref:System.Data.SqlClient.SqlConnection>som er verdien for den `connection` parameteren. |       Du kan endre verdien for noen av disse parameterne ved å angi egenskapen relaterte.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlCommand.Connection%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.CommandText%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlCommand.SqlCommand2 Example#1](~/add/codesnippet/csharp/c858d494-4959-470c-91ba-_1.cs)]\n [!code-vb[Classic WebData SqlCommand.SqlCommand2 Example#1](~/add/codesnippet/visualbasic/c858d494-4959-470c-91ba-_1.vb)]"
  syntax:
    content: public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection);
    parameters:
    - id: cmdText
      type: System.String
      description: "Teksten i spørringen."
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: "En <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> som representerer tilkoblingen til en forekomst av SQL Server."
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)
  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand(String,SqlConnection,SqlTransaction)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> klasse teksten i spørringen, en <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>, og <xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;> </xref>."
  remarks: "Tabellen nedenfor viser første egenskapsverdier for en forekomst av <xref:System.Data.SqlClient.SqlCommand>.</xref:System.Data.SqlClient.SqlCommand>      | Egenskaper | Standardverdi |   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>| `cmdText`|   | <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|&30; |   | <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>| `CommandType.Text`|   | <xref:System.Data.SqlClient.SqlCommand.Connection%2A>| En ny <xref:System.Data.SqlClient.SqlConnection>som er verdien for den `connection` parameteren. |       Du kan endre verdien for noen av disse parameterne ved å angi egenskapen relaterte.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlCommand.Connection%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.CommandText%2A>"
  syntax:
    content: public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction);
    parameters:
    - id: cmdText
      type: System.String
      description: "Teksten i spørringen."
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: "En <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> som representerer tilkoblingen til en forekomst av SQL Server."
    - id: transaction
      type: System.Data.SqlClient.SqlTransaction
      description: "Den <xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;> </xref> der den <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> utfører."
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)
  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> klasse angitte Kommandotekst, tilkobling, transaksjon og innstillingen for tilkoblingskryptering."
  syntax:
    content: public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction, System.Data.SqlClient.SqlCommandColumnEncryptionSetting columnEncryptionSetting);
    parameters:
    - id: cmdText
      type: System.String
      description: "Teksten i spørringen."
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: "En <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> som representerer tilkoblingen til en forekomst av SQL Server."
    - id: transaction
      type: System.Data.SqlClient.SqlTransaction
      description: "Den <xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;> </xref> der den <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> utfører."
    - id: columnEncryptionSetting
      type: System.Data.SqlClient.SqlCommandColumnEncryptionSetting
      description: "Innstillingen for tilkoblingskryptering. Hvis du vil ha mer informasjon, se [alltid krypteres](https://msdn.microsoft.com/library/mt163865.aspx)."
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery
  id: BeginExecuteNonQuery
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteNonQuery()
  nameWithType: SqlCommand.BeginExecuteNonQuery()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Starter asynkron kjøringen av Transact-SQL-setning eller lagret prosedyre som er beskrevet i dette <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>."
  remarks: "Metoden BeginExecuteNonQuery starter prosessen for asynkront kjøring av en [!INCLUDE[tsql](~/add/includes/tsql-md.md)] setning eller lagret prosedyre som ikke returnerer rader, slik at andre oppgaver kan kjøres samtidig under kjøring av uttrykket. Når uttrykket er fullført, utviklere må kalle den <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>metode for å fullføre operasjonen.</xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> Metoden BeginExecuteNonQuery returnerer umiddelbart (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> har ingen innvirkning på BeginExecuteNonQuery), men før koden utfører den tilsvarende <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>metodekall, må den ikke utføre andre kall som starter en synkron eller asynkron kjøring mot samme <xref:System.Data.SqlClient.SqlCommand>objektet.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> Kaller den <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>før den Kommandoutførelsen fullstendige årsaker den <xref:System.Data.SqlClient.SqlCommand>objektet til å blokkere til utførelse er fullført.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>       Legg merke til at Kommandotekst og parametere er sendt til serveren synkront. Hvis en stor kommando eller mange parametre sendes, kan denne metoden blokkere under skriver. Når kommandoen sendes, returneres umiddelbart uten å vente på et svar fra serveren--det vil si er leseoperasjoner asynkront.       Fordi denne overlasten ikke støtter en tilbakeringing prosedyre, utviklere må enten avspørringen for å finne ut om kommandoen er fullført, ved hjelp av den <xref:System.IAsyncResult.IsCompleted%2A>for den <xref:System.IAsyncResult>returnert av metoden BeginExecuteNonQuery; eller vente på fullføring av én eller flere kommandoer ved hjelp av <xref:System.IAsyncResult.AsyncWaitHandle%2A>egenskapen for den returnerte <xref:System.IAsyncResult>.</xref:System.IAsyncResult> </xref:System.IAsyncResult.AsyncWaitHandle%2A> </xref:System.IAsyncResult> </xref:System.IAsyncResult.IsCompleted%2A>"
  example:
  - "The following console application creates updates data within the **AdventureWorks** sample database, doing its work asynchronously. In order to emulate a long-running process, this example inserts a WAITFOR statement in the command text. Normally, you would not take efforts to make your commands run slower, but doing this in this case makes it easier to demonstrate the asynchronous behavior.  \n  \n [!code-vb[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._34_1.vb)]\n [!code-cs[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/add/codesnippet/csharp/m-system.data.sqlclient._34_1.cs)]"
  syntax:
    content: public IAsyncResult BeginExecuteNonQuery ();
    parameters: []
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>som kan brukes til å registrere eller vente resultatene, eller begge; denne verdien er også nødvendig ved aktivering av <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*>, som returnerer antall påvirkede rader.</xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Eventuelle feil som oppstod under utførelse av kommandoteksten.       Det oppstod et tidsavbrudd under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Navn/verdi-paret &quot;Asynkron behandling = true&quot; er ikke inkludert i tilkoblingsstrengen definerer tilkobling til denne <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       Den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> lukket eller slettet under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en feilen i en <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objekt under en direkteavspilt operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objektet ble lukket under en direkteavspilling operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)
  id: BeginExecuteNonQuery(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteNonQuery(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteNonQuery(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Starter asynkron kjøringen av Transact-SQL-setning eller lagret prosedyre som er beskrevet i dette <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>, angitt informasjon om tilbakeringing prosedyren og tilstand."
  remarks: "Den <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>metoden starter prosessen for asynkront kjøring av en Transact-SQL-setningen eller lagret prosedyre som ikke returnerer rader, slik at andre oppgaver kan kjøres samtidig under kjøring av oppgaven.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Når uttrykket er fullført, utviklere må kalle den <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>metode for å fullføre operasjonen.</xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> Den <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>metoden returnerer umiddelbart (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> har ingen innvirkning på BeginExecuteNonQuery), men før koden utfører den tilsvarende <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>metodekall, må den ikke utføre andre kall som starter en synkron eller asynkron kjøring mot samme <xref:System.Data.SqlClient.SqlCommand>objektet.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Kaller den <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>før den Kommandoutførelsen fullstendige årsaker den <xref:System.Data.SqlClient.SqlCommand>objektet til å blokkere til utførelse er fullført.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>       Den `callback` parameter kan du angi en <xref:System.AsyncCallback>representanten kalles når uttrykket er fullført.</xref:System.AsyncCallback> Du kan ringe det <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>metode fra denne representanten-prosedyre eller fra et annet sted i programmets.</xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> I tillegg kan du sende et objekt i den `asyncStateObject` parameteren og tilbakeringing prosedyren kan hente denne informasjonen ved hjelp av den <xref:System.IAsyncResult.AsyncState%2A>egenskapen.</xref:System.IAsyncResult.AsyncState%2A>       Legg merke til at Kommandotekst og parametere er sendt til serveren synkront. Hvis en stor kommando eller mange parametre sendes, kan denne metoden blokkere under skriver. Når kommandoen sendes, returneres umiddelbart uten å vente på et svar fra serveren--det vil si er leseoperasjoner asynkront.       Fordi tilbakeringing prosedyren kjøres fra i en bakgrunnstråd ble levert av Microsoft .NET common language runtime, er det svært viktig at du utføre en streng tilnærming til å håndtere på tvers av tråder Bruk fra i programmene dine. For eksempel må du ikke kommunisere med en form innhold fra i prosedyren tilbakeringing; bør du må oppdatere skjemaet, må du bytte tilbake til skjemaet tråd for å kunne gjøre arbeidet ditt. Eksemplet i dette emnet beskriver dette problemet.       Alle feil som oppstår under utførelse av operasjonen er registrert som unntak i tilbakeringing prosedyren. Du må unntaket i prosedyren tilbakeringing, ikke i den primære applikasjonen. Se eksemplet i dette emnet for mer informasjon om behandling av unntak i tilbakeringing prosedyren."
  example:
  - "The following Windows application demonstrates the use of the BeginExecuteNonQuery method, executing a Transact-SQL statement that includes a delay of several seconds (emulating a long-running command).  \n  \n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \n  \n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/add/codesnippet/csharp/DataWorks SqlCommand.BeginExecuteNonQueryForm.TesterFormCS/Form1.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/add/codesnippet/visualbasic/DataWorks SqlCommand.BeginExecuteNonQueryForm.TesterFormVB/Form1.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteNonQuery (AsyncCallback callback, object stateObject);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "En <xref:System.AsyncCallback>representanten aktiveres når det Kommandoutførelsen er fullført.</xref:System.AsyncCallback> Sende <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Microsoft Visual Basic) til å angi at ingen tilbakeringing kreves."
    - id: stateObject
      type: System.Object
      description: "Brukerdefinerte tilstand-objekt som er sendt til tilbakeringing-prosedyre. Hente dette objektet fra i tilbakeringing-prosedyren ved hjelp av den <xref:System.IAsyncResult.AsyncState*>egenskapen.</xref:System.IAsyncResult.AsyncState*>"
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>som kan brukes til å registrere eller vente resultatene, eller begge; denne verdien er også nødvendig ved aktivering av <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*>, som returnerer antall påvirkede rader.</xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Eventuelle feil som oppstod under utførelse av kommandoteksten.       Det oppstod et tidsavbrudd under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Navn/verdi-paret &quot;Asynkron behandling = true&quot; er ikke inkludert i tilkoblingsstrengen definerer tilkobling til denne <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       Den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> lukket eller slettet under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en feilen i en <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objekt under en direkteavspilt operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objektet ble lukket under en direkteavspilling operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader
  id: BeginExecuteReader
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteReader()
  nameWithType: SqlCommand.BeginExecuteReader()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Starter asynkron kjøringen av Transact-SQL-setning eller lagret prosedyre som er beskrevet i dette <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>, og henter én eller flere resultatsett fra serveren."
  remarks: "Metoden BeginExecuteReader starter prosessen for asynkront kjøring av en Transact-SQL-setningen eller lagret prosedyre som returnerer rader, slik at andre oppgaver kan kjøres samtidig under kjøring av uttrykket. Når uttrykket er fullført, utviklere må kalle den <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>metoden fullføre operasjonen for å hente den <xref:System.Data.SqlClient.SqlDataReader>returnert av kommandoen.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> Metoden BeginExecuteReader returnerer umiddelbart, men før koden utfører den tilsvarende <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>metodekall, må den ikke utføre andre kall som starter en synkron eller asynkron kjøring mot samme <xref:System.Data.SqlClient.SqlCommand>objektet.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> Kaller den <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>før den Kommandoutførelsen fullstendige årsaker den <xref:System.Data.SqlClient.SqlCommand>objektet til å blokkere til utførelse er fullført.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>       Legg merke til at Kommandotekst og parametere er sendt til serveren synkront. Hvis en stor kommando eller mange parametre sendes, kan denne metoden blokkere under skriver. Når kommandoen sendes, returneres umiddelbart uten å vente på et svar fra serveren--det vil si er leseoperasjoner asynkront. Selv om Kommandoutførelsen asynkrone, er henting av verdien fortsatt synkron. Dette betyr at kall til <xref:System.Data.SqlClient.SqlDataReader.Read%2A>kan blokkere Hvis flere data er obligatorisk og det underliggende nettverket lese operasjonen blokker.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>       Fordi denne overlasten ikke støtter en tilbakeringing prosedyre, utviklere må enten avspørringen for å finne ut om kommandoen er fullført, ved hjelp av den <xref:System.IAsyncResult.IsCompleted%2A>for den <xref:System.IAsyncResult>returnert av metoden BeginExecuteReader; eller vente på fullføring av én eller flere kommandoer ved hjelp av <xref:System.IAsyncResult.AsyncWaitHandle%2A>egenskapen for den returnerte <xref:System.IAsyncResult>.</xref:System.IAsyncResult> </xref:System.IAsyncResult.AsyncWaitHandle%2A> </xref:System.IAsyncResult> </xref:System.IAsyncResult.IsCompleted%2A>       Hvis du bruker <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>eller BeginExecuteReader tilgang XML-dataene, SQL Server vil returnere noen XML-resultater som er større enn 2,033 tegn lang i flere rader 2,033 tegn.</xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Du kan unngå dette ved å bruke <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>eller <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>til å lese FOR XML-spørringer.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> For mer informasjon, kan du se artikkel Q310378, &quot;PRB: XML Data er avkortet når du Bruk SqlDataReader,&quot; i Microsoft Knowledge Base på http://support.microsoft.com."
  example:
  - "The following console application starts the process of retrieving a data reader asynchronously. While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value. As soon as the process has completed, the code retrieves the <xref:System.Data.SqlClient.SqlDataReader> and displays its contents.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteReader#1](~/add/codesnippet/csharp/m-system.data.sqlclient._4_1.cs)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteReader#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._4_1.vb)]"
  syntax:
    content: public IAsyncResult BeginExecuteReader ();
    parameters: []
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>som kan brukes til å registrere eller vente resultatene, eller begge; denne verdien er også nødvendig ved aktivering av <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*>, som returnerer en <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> -forekomst som kan brukes til å hente returnerte radene.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Eventuelle feil som oppstod under utførelse av kommandoteksten.       Det oppstod et tidsavbrudd under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Navn/verdi-paret &quot;Asynkron behandling = true&quot; er ikke inkludert i tilkoblingsstrengen definerer tilkobling til denne <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       Den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> lukket eller slettet under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en feilen i en <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objekt under en direkteavspilt operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objektet ble lukket under en direkteavspilling operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)
  id: BeginExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteReader(CommandBehavior)
  nameWithType: SqlCommand.BeginExecuteReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Starter asynkron kjøringen av Transact-SQL-setning eller lagret prosedyre som er beskrevet i dette <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> ved hjelp av en av de <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> verdier."
  remarks: "Den <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>metoden starter prosessen for asynkront kjøring av en Transact-SQL-setningen eller lagret prosedyre som returnerer rader, slik at andre oppgaver kan kjøres samtidig under kjøring av oppgaven.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Når uttrykket er fullført, utviklere må kalle den <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>metoden fullføre operasjonen for å hente den <xref:System.Data.SqlClient.SqlDataReader>returnert av kommandoen.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> Den <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>metoden returnerer umiddelbart, men før koden utfører den tilsvarende <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>metodekall, må den ikke utføre andre kall som starter en synkron eller asynkron kjøring mot samme <xref:System.Data.SqlClient.SqlCommand>objektet.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Kaller den <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>før den Kommandoutførelsen fullstendige årsaker den <xref:System.Data.SqlClient.SqlCommand>objektet til å blokkere til utførelse er fullført.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>       Den `behavior` parameteren lar deg angi alternativer for kontroll av kommandoen, og tilkoblingen. Disse verdiene kan kombineres sammen (ved hjelp av programmeringsspråket `OR` operator); vanligvis utviklere bruker den `CommandBehavior.CloseConnection` verdi og kontroller at tilkoblingen er lukket av kjøretiden når den <xref:System.Data.SqlClient.SqlDataReader>er lukket.</xref:System.Data.SqlClient.SqlDataReader>       Legg merke til at Kommandotekst og parametere er sendt til serveren synkront. Hvis en stor kommando eller mange parametre sendes, kan denne metoden blokkere under skriver. Når kommandoen sendes, returneres umiddelbart uten å vente på et svar fra serveren--det vil si er leseoperasjoner asynkront. Selv om Kommandoutførelsen asynkrone, er henting av verdien fortsatt synkron. Dette betyr at kall til <xref:System.Data.SqlClient.SqlDataReader.Read%2A>kan blokkere Hvis flere data er obligatorisk og det underliggende nettverket lese operasjonen blokker.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>       Fordi denne overlasten ikke støtter en tilbakeringing prosedyre, må utviklere enten registrere deg for å finne ut om kommandoen er fullført, ved hjelp av <xref:System.IAsyncResult.IsCompleted%2A>egenskapen for det <xref:System.IAsyncResult>returnert av <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>metoden; eller vente på fullføring av én eller flere kommandoer ved hjelp av <xref:System.IAsyncResult.AsyncWaitHandle%2A>egenskapen for den returnerte <xref:System.IAsyncResult>.</xref:System.IAsyncResult> </xref:System.IAsyncResult.AsyncWaitHandle%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> </xref:System.IAsyncResult> </xref:System.IAsyncResult.IsCompleted%2A>       Hvis du bruker <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>eller <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>for å få tilgang til XML-data, SQL Server returnerer XML resultater større enn 2,033 tegn lang i flere rader 2,033 tegn.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Du kan unngå dette ved å bruke <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>eller <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>til å lese FOR XML-spørringer.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> For mer informasjon, kan du se artikkel Q310378, &quot;PRB: XML Data er avkortet når du Bruk SqlDataReader,&quot; i Microsoft Knowledge Base på http://support.microsoft.com."
  example:
  - "The following console application starts the process of retrieving a data reader asynchronously. While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value. Once the process has completed, the code retrieves the <xref:System.Data.SqlClient.SqlDataReader> and displays its contents.  \n  \n This example also passes the `CommandBehavior.CloseConnection` and `CommandBehavior.SingleRow` values in the behavior parameter, causing the connection to be closed with the returned <xref:System.Data.SqlClient.SqlDataReader> is closed, and to optimize for a single row result.  \n  \n [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/add/codesnippet/visualbasic/d7d83823-a2e6-4b2d-a7a2-_1.vb)]\n [!code-cs[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/add/codesnippet/csharp/d7d83823-a2e6-4b2d-a7a2-_1.cs)]"
  syntax:
    content: public IAsyncResult BeginExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Én av de <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> verdier, som angir alternativer for henting av setningen kjøring og data."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>som kan brukes til å registrere deg, venter du resultatene eller begge deler; denne verdien er også nødvendig ved aktivering av <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*>, som returnerer en <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> -forekomst som kan brukes til å hente returnerte radene.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Eventuelle feil som oppstod under utførelse av kommandoteksten.       Det oppstod et tidsavbrudd under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Navn/verdi-paret &quot;Asynkron behandling = true&quot; er ikke inkludert i tilkoblingsstrengen definerer tilkobling til denne <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       Den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> lukket eller slettet under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en feilen i en <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objekt under en direkteavspilt operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objektet ble lukket under en direkteavspilling operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)
  id: BeginExecuteReader(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteReader(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Starter asynkron kjøringen av Transact-SQL-setning eller lagret prosedyre som er beskrevet i dette <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> og henter én eller flere resultatsett fra serveren, angitt informasjon om tilbakeringing prosedyren og tilstand."
  remarks: "Den <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>metoden starter prosessen for asynkront kjøring av en Transact-SQL-setningen eller lagret prosedyre som returnerer rader, slik at andre oppgaver kan kjøres samtidig under kjøring av oppgaven.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Når uttrykket er fullført, utviklere må kalle den <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>metoden fullføre operasjonen for å hente den <xref:System.Data.SqlClient.SqlDataReader>returnert av kommandoen.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> Den <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>metoden returnerer umiddelbart, men før koden utfører den tilsvarende <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>metodekall, må den ikke utføre andre kall som starter en synkron eller asynkron kjøring mot samme <xref:System.Data.SqlClient.SqlCommand>objektet.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Kaller den <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>før den Kommandoutførelsen er fullført årsaken den <xref:System.Data.SqlClient.SqlCommand>objektet til å blokkere til utførelse er fullført.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>       Den `callback` parameter kan du angi en <xref:System.AsyncCallback>representanten kalles når uttrykket er fullført.</xref:System.AsyncCallback> Du kan ringe det <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>metode fra denne representanten-prosedyre eller fra et annet sted i programmets.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> I tillegg kan du sende et objekt i den `stateObject` parameteren og tilbakeringing prosedyren kan hente denne informasjonen ved hjelp av den <xref:System.IAsyncResult.AsyncState%2A>egenskapen.</xref:System.IAsyncResult.AsyncState%2A>       Legg merke til at Kommandotekst og parametere er sendt til serveren synkront. Hvis en stor kommando eller mange parametre sendes, kan denne metoden blokkere under skriver. Når kommandoen sendes, returneres umiddelbart uten å vente på et svar fra serveren--det vil si er leseoperasjoner asynkront. Selv om Kommandoutførelsen asynkrone, er henting av verdien fortsatt synkron. Dette betyr at kall til <xref:System.Data.SqlClient.SqlDataReader.Read%2A>kan blokkere Hvis flere data er obligatorisk og det underliggende nettverket lese operasjonen blokker.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>       Fordi tilbakeringing prosedyren kjøres fra i en bakgrunnstråd ble levert av Microsoft .NET runtime, er det svært viktig at du utføre en streng tilnærming til å håndtere på tvers av tråder Bruk fra i programmene dine. For eksempel må du ikke kommunisere med en form innhold fra i prosedyren tilbakeringing; bør du må oppdatere skjemaet, må du bytte tilbake til skjemaet tråd for å kunne gjøre arbeidet ditt. Eksemplet i dette emnet beskriver dette problemet.       Alle feil som oppstår under utførelse av operasjonen er registrert som unntak i tilbakeringing prosedyren. Du må unntaket i prosedyren tilbakeringing, ikke i den primære applikasjonen. Se eksemplet i dette emnet for mer informasjon om behandling av unntak i tilbakeringing prosedyren.       Hvis du bruker <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>eller <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>for å få tilgang til XML-data, SQL Server returnerer XML resultater større enn 2,033 tegn lang i flere rader 2,033 tegn.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Du kan unngå dette ved å bruke <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>eller <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>til å lese FOR XML-spørringer.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> For mer informasjon, kan du se artikkel Q310378, &quot;PRB: XML Data er avkortet når du Bruk SqlDataReader,&quot; i Microsoft Knowledge Base på http://support.microsoft.com."
  example:
  - "The following Windows application demonstrates the use of the BeginExecuteReader method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command). Because the sample executes the command asynchronously, the form remains responsive while awaiting the results. This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter; doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method corresponding to the initial call to BeginExecuteReader.  \n  \n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \n  \n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.DataGridView> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/add/codesnippet/csharp/DataWorks SqlCommand.BeginExecuteReaderAsync.TesterFormCS/Form1.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/add/codesnippet/visualbasic/DataWorks SqlCommand.BeginExecuteReaderAsync.TesterFormVB/Form1.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "En <xref:System.AsyncCallback>representanten aktiveres når det Kommandoutførelsen er fullført.</xref:System.AsyncCallback> Sende <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Microsoft Visual Basic) til å angi at ingen tilbakeringing kreves."
    - id: stateObject
      type: System.Object
      description: "Brukerdefinerte tilstand-objekt som er sendt til tilbakeringing-prosedyre. Hente dette objektet fra i tilbakeringing-prosedyren ved hjelp av den <xref:System.IAsyncResult.AsyncState*>egenskapen.</xref:System.IAsyncResult.AsyncState*>"
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>som kan brukes til å registrere deg, venter du resultatene eller begge deler; denne verdien er også nødvendig ved aktivering av <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*>, som returnerer en <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> forekomsten som kan brukes til å hente returnerte radene.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Eventuelle feil som oppstod under utførelse av kommandoteksten.       Det oppstod et tidsavbrudd under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Navn/verdi-paret &quot;Asynkron behandling = true&quot; er ikke inkludert i tilkoblingsstrengen definerer tilkobling til denne <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       Den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> lukket eller slettet under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en feilen i en <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objekt under en direkteavspilt operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objektet ble lukket under en direkteavspilling operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)
  id: BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Starter asynkron kjøringen av Transact-SQL-setning eller lagret prosedyre som er beskrevet i dette <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>, for den <xref uid=&quot;langword_csharp_CommandBehavior&quot; name=&quot;CommandBehavior&quot; href=&quot;&quot;> </xref> verdier, og kan ikke hente en eller flere resultatsett fra serveren, angitt informasjon om tilbakeringing prosedyren og tilstand."
  remarks: "Den <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>metoden starter prosessen for asynkront kjøring av en Transact-SQL-setningen eller lagret prosedyre som returnerer rader, slik at andre oppgaver kan kjøres samtidig under kjøring av oppgaven.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Når uttrykket er fullført, utviklere må kalle den <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>metoden fullføre operasjonen for å hente den <xref:System.Data.SqlClient.SqlDataReader>returnert av kommandoen.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> Den <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>metoden returnerer umiddelbart, men før koden utfører den tilsvarende <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>metodekall, må den ikke utføre andre kall som starter en synkron eller asynkron kjøring mot samme <xref:System.Data.SqlClient.SqlCommand>objektet.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Kaller den <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>før den Kommandoutførelsen fullstendige årsaker den <xref:System.Data.SqlClient.SqlCommand>objektet til å blokkere til utførelse er fullført.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>       Den `callback` parameter kan du angi en <xref:System.AsyncCallback>representanten kalles når uttrykket er fullført.</xref:System.AsyncCallback> Du kan ringe det <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>metode fra denne representanten-prosedyre eller fra et annet sted i programmets.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> I tillegg kan du sende et objekt i den `stateObject` parameteren og tilbakeringing prosedyren kan hente denne informasjonen ved hjelp av den <xref:System.IAsyncResult.AsyncState%2A>egenskapen.</xref:System.IAsyncResult.AsyncState%2A>       Den `behavior` parameteren lar deg angi alternativer for kontroll av kommandoen, og tilkoblingen. Disse verdiene kan kombineres sammen (ved hjelp av programmeringsspråket `Or` operator); vanligvis utviklere bruker den `CloseConnection` verdi og kontroller at tilkoblingen er lukket av kjøretiden når den <xref:System.Data.SqlClient.SqlDataReader>er lukket.</xref:System.Data.SqlClient.SqlDataReader> Utviklere kan også optimalisere virkemåten for den <xref:System.Data.SqlClient.SqlDataReader>ved å angi den `SingleRow` verdi når det er kjent på forhånd at Transact-SQL-setning eller lagret prosedyre bare returnerer én rad.</xref:System.Data.SqlClient.SqlDataReader>       Legg merke til at Kommandotekst og parametere er sendt til serveren synkront. Hvis en stor kommando eller mange parametre sendes, kan denne metoden blokkere under skriver. Når kommandoen sendes, returneres umiddelbart uten å vente på et svar fra serveren--det vil si er leseoperasjoner asynkront. Selv om Kommandoutførelsen asynkrone, er henting av verdien fortsatt synkron. Dette betyr at kall til <xref:System.Data.SqlClient.SqlDataReader.Read%2A>kan blokkere Hvis flere data er obligatorisk og det underliggende nettverket lese operasjonen blokker.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>       Fordi tilbakeringing prosedyren kjøres fra i en bakgrunnstråd ble levert av Microsoft .NET common language runtime, er det svært viktig at du utføre en streng tilnærming til å håndtere på tvers av tråder Bruk fra i programmene dine. Du må for eksempel ikke kommunisere med et skjema innhold fra tilbakeringing-prosedyre, må du oppdatere skjemaet du må gå tilbake til skjemaet tråd for å utføre arbeidet. Eksemplet i dette emnet beskriver dette problemet.       Alle feil som oppstår under utførelse av operasjonen er registrert som unntak i tilbakeringing prosedyren. Du må unntaket i prosedyren tilbakeringing, ikke i den primære applikasjonen. Se eksemplet i dette emnet for mer informasjon om behandling av unntak i tilbakeringing prosedyren.       Hvis du bruker <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>eller <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>for å få tilgang til XML-data, SQL Server vil returnere noen XML-resultater større enn 2,033 tegn lang i flere rader 2,033 tegn.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Du kan unngå dette ved å bruke <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>eller <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>til å lese FOR XML-spørringer.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> For mer informasjon, kan du se artikkel Q310378, &quot;PRB: XML Data er avkortet når du Bruk SqlDataReader,&quot; i Microsoft Knowledge Base på http://support.microsoft.com."
  example:
  - "The following Windows application demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command). Because the sample executes the command asynchronously, the form remains responsive while awaiting the results. This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter; doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method corresponding to the initial call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.  \n  \n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \n  \n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.DataGridView> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \n  \n This example passes the `CommandBehavior.CloseConnection` value in the `behavior` parameter, causing the returned <xref:System.Data.SqlClient.SqlDataReader> to automatically close its connection when it is closed.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/add/codesnippet/csharp/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior.TesterFormCS/Form1.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/add/codesnippet/visualbasic/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior.TesterFormVB/Form1.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject, System.Data.CommandBehavior behavior);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "En <xref:System.AsyncCallback>representanten aktiveres når det Kommandoutførelsen er fullført.</xref:System.AsyncCallback> Sende <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Microsoft Visual Basic) til å angi at ingen tilbakeringing kreves."
    - id: stateObject
      type: System.Object
      description: "Brukerdefinerte tilstand-objekt som er sendt til tilbakeringing-prosedyre. Hente dette objektet fra i tilbakeringing-prosedyren ved hjelp av den <xref:System.IAsyncResult.AsyncState*>egenskapen.</xref:System.IAsyncResult.AsyncState*>"
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Én av de <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> verdier, som angir alternativer for henting av setningen kjøring og data."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>som kan brukes til å registrere eller vente resultatene, eller begge; denne verdien er også nødvendig ved aktivering av <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*>, som returnerer en <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> forekomsten som kan brukes til å hente returnerte radene.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Eventuelle feil som oppstod under utførelse av kommandoteksten.       Det oppstod et tidsavbrudd under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Navn/verdi-paret &quot;Asynkron behandling = true&quot; er ikke inkludert i tilkoblingsstrengen definerer tilkobling til denne <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       Den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> lukket eller slettet under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en feilen i en <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objekt under en direkteavspilt operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objektet ble lukket under en direkteavspilling operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader
  id: BeginExecuteXmlReader
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteXmlReader()
  nameWithType: SqlCommand.BeginExecuteXmlReader()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Starter asynkron kjøringen av Transact-SQL-setning eller lagret prosedyre som er beskrevet i dette <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> og returnerer resultatet som en <xref:System.Xml.XmlReader>objektet.</xref:System.Xml.XmlReader>"
  remarks: "Metoden BeginExecuteXmlReader starter prosessen for asynkront kjøring av en Transact-SQL-setning som returnerer radene som XML, slik at andre oppgaver kan kjøres samtidig under kjøring av uttrykket. Når uttrykket er fullført, utviklere må kalle den `EndExecuteXmlReader` metode for å fullføre operasjonen og hente XML returnert av kommandoen. Metoden BeginExecuteXmlReader returnerer umiddelbart, men før koden utfører den tilsvarende `EndExecuteXmlReader` metodekall, må den ikke utføre andre kall som starter en synkron eller asynkron kjøring mot samme <xref:System.Data.SqlClient.SqlCommand>objektet.</xref:System.Data.SqlClient.SqlCommand> Kaller den `EndExecuteXmlReader` før den Kommandoutførelsen fullstendige årsaker den <xref:System.Data.SqlClient.SqlCommand>objektet til å blokkere til utførelse er fullført.</xref:System.Data.SqlClient.SqlCommand>       Den <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>egenskapen angir vanligvis en Transact-SQL-setning med en gyldig FOR XML-setningsdel.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> Imidlertid `CommandText` kan også angi et uttrykk som returnerer `ntext` data som inneholder gyldig XML.       En vanlig <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>spørringen kan formatere eksemplet nedenfor C#: ```   SqlCommand command = new SqlCommand(&quot;SELECT ContactID, FirstName, LastName FROM dbo.Contact FOR XML AUTO, XMLDATA&quot;, SqlConn);   ``` denne metoden kan også brukes til å hente et enkelt rader og én kolonne resultatsett.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> I dette tilfellet hvis mer enn én rad returneres av `EndExecuteXmlReader` metoden tilordner den <xref:System.Xml.XmlReader>verdien på den første raden, og ignorerer resten av resultatet som er angitt.</xref:System.Xml.XmlReader>       Flere aktive resultatet sett (MARS) funksjonen lar flere handlinger bruker samme tilkobling.       Legg merke til at Kommandotekst og parametere er sendt til serveren synkront. Hvis en stor kommando eller mange parametre sendes, kan denne metoden blokkere under skriver. Når kommandoen sendes, returneres umiddelbart uten å vente på et svar fra serveren--det vil si er leseoperasjoner asynkront. Selv om Kommandoutførelsen asynkrone, er henting av verdien fortsatt synkron.       Fordi denne overlasten ikke støtter en tilbakeringing prosedyre, utviklerne må enten avspørringen finne ut om kommandoen er fullført, bruker du <xref:System.IAsyncResult.IsCompleted%2A>for den <xref:System.IAsyncResult>returnert av metoden BeginExecuteXmlReader; eller vente på fullføring av én eller flere kommandoer ved hjelp av <xref:System.IAsyncResult.AsyncWaitHandle%2A>egenskapen for den returnerte <xref:System.IAsyncResult>.</xref:System.IAsyncResult> </xref:System.IAsyncResult.AsyncWaitHandle%2A> </xref:System.IAsyncResult> </xref:System.IAsyncResult.IsCompleted%2A>       Hvis du bruker <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>eller <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>for å få tilgang til XML-data, SQL Server returnerer XML resultater større enn 2,033 tegn lang i flere rader 2,033 tegn.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Du kan unngå dette ved å bruke <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>eller <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>til å lese FOR XML-spørringer.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> For mer informasjon, kan du se artikkel Q310378, &quot;PRB: XML Data er avkortet når du Bruk SqlDataReader,&quot; i Microsoft Knowledge Base på http://support.microsoft.com."
  example:
  - "The following console application starts the process of retrieving XML data asynchronously. While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value. Once the process has completed, the code retrieves the XML and displays its contents.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/add/codesnippet/csharp/m-system.data.sqlclient._41_1.cs)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._41_1.vb)]"
  syntax:
    content: public IAsyncResult BeginExecuteXmlReader ();
    parameters: []
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>som kan brukes til å registrere eller vente resultatene, eller begge; denne verdien er også nødvendig ved aktivering av <xref uid=&quot;langword_csharp_EndExecuteXmlReader&quot; name=&quot;EndExecuteXmlReader&quot; href=&quot;&quot;> </xref>, som returnerer en enkelt verdi for XML.</xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Eventuelle feil som oppstod under utførelse av kommandoteksten.       Det oppstod et tidsavbrudd under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Navn/verdi-paret &quot;Asynkron behandling = true&quot; er ikke inkludert i tilkoblingsstrengen definerer tilkobling til denne <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       Den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> lukket eller slettet under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en feilen i en <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objekt under en direkteavspilt operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objektet ble lukket under en direkteavspilling operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)
  id: BeginExecuteXmlReader(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteXmlReader(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteXmlReader(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Starter asynkron kjøringen av Transact-SQL-setning eller lagret prosedyre som er beskrevet i dette <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> og returnerer resultatet som en <xref:System.Xml.XmlReader>objektet, ved hjelp av en tilbakeringing-prosedyre.</xref:System.Xml.XmlReader>"
  remarks: "Den <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>metoden starter prosessen for asynkront kjøring av en Transact-SQL-setningen eller lagret prosedyre som returnerer rader som XML, slik at andre oppgaver kan kjøres samtidig under kjøring av oppgaven.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Når uttrykket er fullført, utviklere må kalle den <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>metode for å fullføre operasjonen, og den forespurte XML datahenting.</xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> Den <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>metoden returnerer umiddelbart, men før koden utfører den tilsvarende <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>metodekall, må den ikke utføre andre kall som starter en synkron eller asynkron kjøring mot samme <xref:System.Data.SqlClient.SqlCommand>objektet.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Kaller den <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>før den Kommandoutførelsen fullstendige årsaker den <xref:System.Data.SqlClient.SqlCommand>objektet til å blokkere til utførelse er fullført.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>       Den <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>egenskapen angir vanligvis en Transact-SQL-setning med en gyldig FOR XML-setningsdel.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> Imidlertid `CommandText` kan også angi et uttrykk som returnerer dataene som inneholder gyldig XML. Denne metoden kan også brukes til å hente et enkelt rader og én kolonne resultatsett. I dette tilfellet hvis mer enn én rad returneres av <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>metoden tilordner den <xref:System.Xml.XmlReader>verdien på den første raden, og ignorerer resten av resultatet som er angitt.</xref:System.Xml.XmlReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>       En vanlig BeginExecuteXmlReader-spørring kan formatere eksemplet nedenfor C#: ```   SqlCommand command = new SqlCommand(&quot;SELECT ContactID, FirstName, LastName FROM Contact FOR XML AUTO, XMLDATA&quot;, SqlConn);   ``` denne metoden kan også brukes til å hente et enkelt rader og én kolonne resultatsett. I dette tilfellet hvis mer enn én rad returneres av <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>metoden tilordner den <xref:System.Xml.XmlReader>verdien på den første raden, og ignorerer resten av resultatet som er angitt.</xref:System.Xml.XmlReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>       Flere aktive resultatet sett (MARS) funksjonen lar flere handlinger bruker samme tilkobling.       Den `callback` parameter kan du angi en <xref:System.AsyncCallback>representanten kalles når uttrykket er fullført.</xref:System.AsyncCallback> Du kan ringe det <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>metode fra denne representanten-prosedyre eller fra et annet sted i programmets.</xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> I tillegg kan du sende et objekt i den `stateObject` parameteren og tilbakeringing prosedyren kan hente denne informasjonen ved hjelp av den <xref:System.IAsyncResult.AsyncState%2A>egenskapen.</xref:System.IAsyncResult.AsyncState%2A>       Legg merke til at Kommandotekst og parametere er sendt til serveren synkront. Hvis en stor kommando eller mange parametre sendes, kan denne metoden blokkere under skriver. Når kommandoen sendes, returneres umiddelbart uten å vente på et svar fra serveren--det vil si er leseoperasjoner asynkront.       Alle feil som oppstår under utførelse av operasjonen er registrert som unntak i tilbakeringing prosedyren. Du må unntaket i prosedyren tilbakeringing, ikke i den primære applikasjonen. Se eksemplet i dette emnet for mer informasjon om behandling av unntak i tilbakeringing prosedyren.       Hvis du bruker <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>eller <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>for å få tilgang til XML-data, SQL Server vil returnere noen XML-resultater større enn 2,033 tegn lang i flere rader 2,033 tegn.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Du kan unngå dette ved å bruke <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>eller <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>til å lese FOR XML-spørringer.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> For mer informasjon, kan du se artikkel Q310378, &quot;PRB: XML Data er avkortet når du Bruk SqlDataReader,&quot; i Microsoft Knowledge Base på http://support.microsoft.com."
  example:
  - "The following Windows application demonstrates the use of the BeginExecuteXmlReader method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command). This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter--doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method corresponding to the initial call to BeginExecuteXmlReader.  \n  \n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \n  \n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.ListBox> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/add/codesnippet/csharp/DataWorks SqlCommand.BeginExecuteXmlReaderAsync.TesterFormCS/Form1.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/add/codesnippet/visualbasic/DataWorks SqlCommand.BeginExecuteXmlReaderAsync.TesterFormVB/Form1.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteXmlReader (AsyncCallback callback, object stateObject);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "En <xref:System.AsyncCallback>representanten aktiveres når det Kommandoutførelsen er fullført.</xref:System.AsyncCallback> Sende <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Microsoft Visual Basic) til å angi at ingen tilbakeringing kreves."
    - id: stateObject
      type: System.Object
      description: "Brukerdefinerte tilstand-objekt som er sendt til tilbakeringing-prosedyre. Hente dette objektet fra i tilbakeringing-prosedyren ved hjelp av den <xref:System.IAsyncResult.AsyncState*>egenskapen.</xref:System.IAsyncResult.AsyncState*>"
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>som kan brukes til å registrere deg, venter du resultatene eller begge deler, denne verdien er også nødvendig når den <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader*>kalles, som returnerer resultatet av kommandoen som XML.</xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Eventuelle feil som oppstod under utførelse av kommandoteksten.       Det oppstod et tidsavbrudd under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Navn/verdi-paret &quot;Asynkron behandling = true&quot; er ikke inkludert i tilkoblingsstrengen definerer tilkobling til denne <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       Den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> lukket eller slettet under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en feilen i en <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objekt under en direkteavspilt operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objektet ble lukket under en direkteavspilling operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Cancel
  id: Cancel
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Cancel()
  nameWithType: SqlCommand.Cancel()
  fullName: System.Data.SqlClient.SqlCommand.Cancel()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Prøver å avbryte kjøringen av en <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>."
  remarks: "Hvis det finnes ingenting å avbryte, oppstår det ingenting. Hvis det pågår en kommando, og forsøk på å avbryte mislykkes, genereres imidlertid ingen unntak.       I noen, sjelden, tilfeller Hvis du kaller <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>kaller <xref:System.Data.SqlClient.SqlDataReader.Close%2A>(implicitily eller eksplisitt) før du kaller Avbryt og kaller Avbryt, kommandoen Avbryt vil ikke bli sendt til SQL Server og resultatsettet kan fortsette å flyten når du kaller <xref:System.Data.SqlClient.SqlConnection.Close%2A>.</xref:System.Data.SqlClient.SqlConnection.Close%2A> </xref:System.Data.SqlClient.SqlDataReader.Close%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Du kan unngå dette ved Sørg for at du ringer Avbryt før du lukker leseren eller tilkobling."
  example:
  - "The following example demonstrates the use of the Cancel method.  \n  \n [!code-vb[Classic WebData SqlCommand.Cancel#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._13_1.vb)]\n [!code-cs[Classic WebData SqlCommand.Cancel#1](~/add/codesnippet/csharp/m-system.data.sqlclient._13_1.cs)]"
  syntax:
    content: public override void Cancel ();
    parameters: []
  overload: System.Data.SqlClient.SqlCommand.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Clone
  id: Clone
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Clone()
  nameWithType: SqlCommand.Clone()
  fullName: System.Data.SqlClient.SqlCommand.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Oppretter en ny <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> objekt som er en kopi av den gjeldende forekomsten."
  syntax:
    content: public System.Data.SqlClient.SqlCommand Clone ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "En ny <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> objekt som er en kopi av denne forekomsten."
  overload: System.Data.SqlClient.SqlCommand.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
  id: ColumnEncryptionSetting
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ColumnEncryptionSetting
  nameWithType: SqlCommand.ColumnEncryptionSetting
  fullName: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter eller angir innstillingen for kryptering for denne kommandoen."
  syntax:
    content: public System.Data.SqlClient.SqlCommandColumnEncryptionSetting ColumnEncryptionSetting { get; }
    return:
      type: System.Data.SqlClient.SqlCommandColumnEncryptionSetting
      description: "Krypteringsinnstillingen for denne kommandoen."
  overload: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.CommandText
  id: CommandText
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CommandText
  nameWithType: SqlCommand.CommandText
  fullName: System.Data.SqlClient.SqlCommand.CommandText
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter eller angir den Transact-SQL-setningen, tabellnavn eller lagret prosedyre til å kjøre i datakilden."
  remarks: "Når den <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>er satt til `StoredProcedure`, CommandText-egenskapen må være satt til navnet på den lagrede prosedyren.</xref:System.Data.SqlClient.SqlCommand.CommandType%2A> Brukeren kan være nødvendig å bruke tegnet avbrytningssyntaks Hvis det lagrede prosedyrenavnet inneholder noen spesialtegn. Utfører denne lagrede prosedyren når du kaller en av de `Execute` metoder.       Microsoft .NET Framework-dataleverandør for SQL Server støtter ikke spørsmål merke (?)-plassholder for sending av parameterne til en Transact-SQL-setning eller en lagret prosedyre kalles av en kommando for `CommandType.Text`. I dette tilfellet må parametere med navn brukes. For eksempel: ```   SELECT * FROM dbo.Customers WHERE CustomerID = @CustomerID   ``` For mer informasjon, kan du se [parameteren datatypene og konfigurere parametere](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlCommand.CommandText Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._56_1.vb)]\n [!code-cs[Classic WebData SqlCommand.CommandText Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._56_1.cs)]"
  syntax:
    content: public override string CommandText { get; set; }
    return:
      type: System.String
      description: "Transact-SQL-setning eller lagret prosedyre til å kjøre. Standarden er en tom streng."
  overload: System.Data.SqlClient.SqlCommand.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.CommandTimeout
  id: CommandTimeout
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CommandTimeout
  nameWithType: SqlCommand.CommandTimeout
  fullName: System.Data.SqlClient.SqlCommand.CommandTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter eller angir ventetiden før forsøket å utføre en kommando og det genereres en feil."
  remarks: "Verdien 0 indikerer ingen grense (et forsøk på å utføre en kommando skal vente på ubestemt tid).      > [!NOTE] > For CommandTimeout egenskapen blir ignorert under asynkrone metodekall for eksempel <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>       CommandTimeout har ingen virkning når kommandoen kjøres mot en context-tilkobling (en <xref:System.Data.SqlClient.SqlConnection>åpnes med &quot;konteksttilkoblingen = true&quot; i tilkoblingsstrengen).</xref:System.Data.SqlClient.SqlConnection>      > [!NOTE] > Denne egenskapen er kumulativ tidsavbrudd (for alle nettverkstilkoblinger pakker som leses under aktivering av metoden) for å få alle leseoperasjoner under kjøring av kommando eller behandling av resultatene. Et tidsavbrudd fortsatt kan forekomme når den første raden, returneres og ikke inkluderer brukeren behandlingstid bare nettverk lese tid.   >> For eksempel med 30 sekund tid ut om <xref:System.Data.SqlClient.SqlDataReader.Read%2A>krever to nettverkstilkoblingen pakker, må den har 30 sekunder å lese begge nettverkstilkoblingen pakker.</xref:System.Data.SqlClient.SqlDataReader.Read%2A> Hvis du kaller <xref:System.Data.SqlClient.SqlDataReader.Read%2A>på nytt, den har en annen 30 sekunder å lese data som den krever.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>      ```   using System;   using System.Data.SqlClient;   ///    public class A {      ///       public static void Main() {         string connectionString = &quot;&quot;;         // Wait for 5 second delay in the command         string queryString = &quot;waitfor delay &quot;00:00:05&quot;&quot;;         using (SqlConnection connection = new SqlConnection(connectionString)) {            connection.Open();            SqlCommand command = new SqlCommand(queryString, connection);            // Setting command timeout to 1 second            command.CommandTimeout = 1;            try {               command.ExecuteNonQuery();            }            catch (SqlException e) {               Console.WriteLine(&quot;Got expected SqlException due to command timeout &quot;);               Console.WriteLine(e);            }         }      }   }   ```"
  syntax:
    content: public override int CommandTimeout { get; set; }
    return:
      type: System.Int32
      description: "Tid i sekunder å vente på kommandoen som skal kjøres. Standardverdien er 30 sekunder."
  overload: System.Data.SqlClient.SqlCommand.CommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.CommandType
  id: CommandType
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CommandType
  nameWithType: SqlCommand.CommandType
  fullName: System.Data.SqlClient.SqlCommand.CommandType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter eller angir en verdi som angir hvordan <xref:System.Data.SqlClient.SqlCommand.CommandText*>egenskapen er tolkes.</xref:System.Data.SqlClient.SqlCommand.CommandText*>"
  remarks: "Når du setter CommandType-egenskapen til `StoredProcedure`, bør du sette den <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>egenskapen til navnet på den lagrede prosedyren.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> Utfører denne lagrede prosedyren når du kaller én av metodene Execute.       Microsoft .NET Framework-dataleverandør for SQL Server støtter ikke spørsmål merke (?)-plassholder for sending av parameterne til en SQL-setning eller en lagret prosedyre kalles med en CommandType av <xref:System.Data.CommandType>.</xref:System.Data.CommandType> I dette tilfellet må parametere med navn brukes. For eksempel: Velg * fra kunder WHERE CustomerID = @CustomerID For mer informasjon, kan du se [parameteren datatypene og konfigurere parametere](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._8_1.vb)]\n [!code-cs[Classic WebData IDbCommand.CommandTimeout Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._8_1.cs)]"
  syntax:
    content: public override System.Data.CommandType CommandType { get; set; }
    return:
      type: System.Data.CommandType
      description: "Én av de <xref href=&quot;System.Data.CommandType&quot;> </xref> verdier. Standard <xref uid=&quot;langword_csharp_Text&quot; name=&quot;Text&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlCommand.CommandType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Verdien er ikke en gyldig <xref href=&quot;System.Data.CommandType&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Connection
  id: Connection
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Connection
  nameWithType: SqlCommand.Connection
  fullName: System.Data.SqlClient.SqlCommand.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter eller angir den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> brukes i denne forekomsten av den <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>."
  remarks: "Hvis kommandoen innrulleres i en eksisterende transaksjon, og tilkoblingen er endret, vil forsøk på å kjøre kommandoen throw <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException>       Hvis den <xref:System.Data.SqlClient.SqlCommand.Transaction%2A>egenskapen er null, og transaksjonen allerede er iverksatt eller rullet tilbake, <xref:System.Data.SqlClient.SqlCommand.Transaction%2A>er satt til null.</xref:System.Data.SqlClient.SqlCommand.Transaction%2A> </xref:System.Data.SqlClient.SqlCommand.Transaction%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlCommand.Connection Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._22_1.vb)]\n [!code-cs[Classic WebData SqlCommand.Connection Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._22_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlConnection Connection { get; set; }
    return:
      type: System.Data.SqlClient.SqlConnection
      description: "Tilkobling til en datakilde. Standardverdien er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlCommand.Connection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Connection-egenskapen ble endret mens kommandoen ble ført opp i en transaksjon.."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.CreateDbParameter
  id: CreateDbParameter
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CreateDbParameter()
  nameWithType: SqlCommand.CreateDbParameter()
  fullName: System.Data.SqlClient.SqlCommand.CreateDbParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbParameter CreateDbParameter ();
    parameters: []
    return:
      type: System.Data.Common.DbParameter
      description: "Som skal legges til."
  overload: System.Data.SqlClient.SqlCommand.CreateDbParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.CreateParameter
  id: CreateParameter
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CreateParameter()
  nameWithType: SqlCommand.CreateParameter()
  fullName: System.Data.SqlClient.SqlCommand.CreateParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Oppretter en ny forekomst av en <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref> objektet."
  remarks: "Metoden CreateParameter er en strongly-typed-versjon av <xref:System.Data.IDbCommand.CreateParameter%2A>.</xref:System.Data.IDbCommand.CreateParameter%2A>"
  syntax:
    content: public System.Data.SqlClient.SqlParameter CreateParameter ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlParameter
      description: "A <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref> object."
  overload: System.Data.SqlClient.SqlCommand.CreateParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.DbConnection
  id: DbConnection
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: DbConnection
  nameWithType: SqlCommand.DbConnection
  fullName: System.Data.SqlClient.SqlCommand.DbConnection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbConnection DbConnection { get; set; }
    return:
      type: System.Data.Common.DbConnection
      description: "Som skal legges til."
  overload: System.Data.SqlClient.SqlCommand.DbConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.DbParameterCollection
  id: DbParameterCollection
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: DbParameterCollection
  nameWithType: SqlCommand.DbParameterCollection
  fullName: System.Data.SqlClient.SqlCommand.DbParameterCollection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }
    return:
      type: System.Data.Common.DbParameterCollection
      description: "Som skal legges til."
  overload: System.Data.SqlClient.SqlCommand.DbParameterCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.DbTransaction
  id: DbTransaction
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: DbTransaction
  nameWithType: SqlCommand.DbTransaction
  fullName: System.Data.SqlClient.SqlCommand.DbTransaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbTransaction DbTransaction { get; set; }
    return:
      type: System.Data.Common.DbTransaction
      description: "Som skal legges til."
  overload: System.Data.SqlClient.SqlCommand.DbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.DesignTimeVisible
  id: DesignTimeVisible
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: DesignTimeVisible
  nameWithType: SqlCommand.DesignTimeVisible
  fullName: System.Data.SqlClient.SqlCommand.DesignTimeVisible
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter eller angir en verdi som angir om command-objektet skal være synlig i en Windows Form Designer-kontroll."
  syntax:
    content: public override bool DesignTimeVisible { get; set; }
    return:
      type: System.Boolean
      description: "En verdi som angir om det skal være synlig i en kontroll command-objektet. Standard **true**."
  overload: System.Data.SqlClient.SqlCommand.DesignTimeVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SqlCommand.Dispose(Boolean)
  fullName: System.Data.SqlClient.SqlCommand.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Som skal legges til."
  overload: System.Data.SqlClient.SqlCommand.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)
  id: EndExecuteNonQuery(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: EndExecuteNonQuery(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteNonQuery(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(IAsyncResult)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Avsluttes asynkron kjøring av en Transact-SQL-setning."
  remarks: "Når du kaller <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>til å utføre en [!INCLUDE[tsql](~/add/includes/tsql-md.md)] -setningen, må du kaller EndExecuteNonQuery for å fullføre operasjonen.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Hvis prosessen for utførelse av kommandoen ikke har ennå er fullført, som denne metoden før operasjonen er fullført. Brukere kan kontrollere at kommandoen er fullført operasjonen ved hjelp av den <xref:System.IAsyncResult>forekomsten ble returnert av den <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>metoden.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> </xref:System.IAsyncResult> Hvis en tilbakeringing prosedyren ble angitt i kallet til <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>, denne metoden må kalles.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>"
  example:
  - For examples demonstrating the use of the EndExecuteNonQuery method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>.
  syntax:
    content: public int EndExecuteNonQuery (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Returnert av kallet til <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*> </xref:System.IAsyncResult>"
    return:
      type: System.Int32
      description: "Antall rader som er berørt (på samme måte som <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery*>).</xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery*>"
  overload: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>parameteren er null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Microsoft Visual Basic)"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "EndExecuteNonQuery ble kalt mer enn én gang for en enkelt Kommandoutførelsen eller metoden ble ikke samsvarer mot den kjøring-metoden (for eksempel koden kalles EndExecuteNonQuery for å fullføre kjøring av et kall til <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Hvor lang tid som er angitt i <> </> *> utløpt, og den asynkrone operasjonen som er angitt med <> </> *> er ikke fullført.       I enkelte situasjoner <xref:System.IAsyncResult>kan bare settes til <xref uid=&quot;langword_csharp_IsCompleted&quot; name=&quot;IsCompleted&quot; href=&quot;&quot;> </xref> feil.</xref:System.IAsyncResult> Hvis dette skjer og EndExecuteNonQuery kalles EndExecuteNonQuery kan øke feilmeldingen SqlException Hvis hvor lang tid angitt i <> </> *> utløpt, og den asynkrone operasjonen som er angitt med <> </> *> er ikke fullført. For å rette opp dette, bør du øker verdien for CommandTimeout eller redusere arbeidet som den asynkrone operasjonen."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)
  id: EndExecuteReader(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: EndExecuteReader(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteReader(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteReader(IAsyncResult)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Avsluttes asynkron kjøring av en Transact-SQL-setning, returnerer den forespurte <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>."
  remarks: "Når du kaller <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>for å utføre en Transact-SQL-setning, må du kaller EndExecuteReader for å fullføre operasjonen.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Hvis prosessen for utførelse av kommandoen ikke har ennå er fullført, som denne metoden før operasjonen er fullført. Brukere kan kontrollere at kommandoen er fullført operasjonen ved hjelp av den <xref:System.IAsyncResult>forekomsten ble returnert av den <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>metoden.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.IAsyncResult> Hvis en tilbakeringing prosedyren ble angitt i kallet til <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>, denne metoden må kalles.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>"
  example:
  - For examples demonstrating the use of the EndExecuteReader method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.
  syntax:
    content: public System.Data.SqlClient.SqlDataReader EndExecuteReader (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Returnert av kallet til <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader*> </xref:System.IAsyncResult>"
    return:
      type: System.Data.SqlClient.SqlDataReader
      description: "En <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> objekt som kan brukes til å hente de forespurte radene."
  overload: System.Data.SqlClient.SqlCommand.EndExecuteReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>parameteren er null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Microsoft Visual Basic)"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "EndExecuteReader ble kalt mer enn én gang for en enkelt Kommandoutførelsen eller metoden ble ikke samsvarer mot den kjøring-metoden (for eksempel koden kalles EndExecuteReader for å fullføre kjøring av et kall til <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*>"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)
  id: EndExecuteXmlReader(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: EndExecuteXmlReader(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteXmlReader(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(IAsyncResult)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Avsluttes asynkron kjøring av en Transact-SQL-setningen som returnerer de forespurte dataene som XML."
  remarks: "Når du kaller <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>for å utføre en Transact-SQL-setning, må du kaller EndExecuteXmlReader for å fullføre operasjonen.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Hvis prosessen for utførelse av kommandoen ikke har ennå er fullført, som denne metoden før operasjonen er fullført. Brukere kan kontrollere at kommandoen er fullført operasjonen ved hjelp av den <xref:System.IAsyncResult>forekomsten ble returnert av den <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>metoden.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.IAsyncResult> Hvis en tilbakeringing prosedyren ble angitt i kallet til <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>, denne metoden må kalles.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>"
  example:
  - For examples demonstrating the use of the EndExecuteXmlReader method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>.
  syntax:
    content: public System.Xml.XmlReader EndExecuteXmlReader (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Returnert av kallet til <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*> </xref:System.IAsyncResult>"
    return:
      type: System.Xml.XmlReader
      description: "En <xref:System.Xml.XmlReader>objekt som kan brukes til å hente resulterende XML-dataene.</xref:System.Xml.XmlReader>"
  overload: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>parameteren er null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Microsoft Visual Basic)"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "EndExecuteXmlReader ble kalt mer enn én gang for en enkelt Kommandoutførelsen eller metoden ble ikke samsvarer mot den kjøring-metoden (for eksempel koden kalles EndExecuteXmlReader for å fullføre kjøring av et kall til <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*>"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  id: ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: SqlCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Som skal legges til."
    return:
      type: System.Data.Common.DbDataReader
      description: "Som skal legges til."
  overload: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  id: ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Threading.Tasks.Task<System.Data.Common.DbDataReader> ExecuteDbDataReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Som skal legges til."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Som skal legges til."
    return:
      type: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
      description: "Som skal legges til."
  overload: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQuery
  id: ExecuteNonQuery
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteNonQuery()
  nameWithType: SqlCommand.ExecuteNonQuery()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Utfører en Transact-SQL-setning mot tilkoblingen, og returnerer antall berørt av rader."
  remarks: "Du kan bruke ExecuteNonQuery til å utføre operasjoner, katalogen (for eksempel spørring strukturen i en database eller oppretting av databaseobjekter som tabeller), eller endre data i en database uten å bruke en <xref:System.Data.DataSet>ved å utføre oppdatering, INNSETTING eller DELETE-setninger.</xref:System.Data.DataSet>       Selv om ExecuteNonQuery returnerer ingen rader, noen utdataparametere eller returverdier som er tilordnet til parametere er fylt ut med data.       For UPDATE-, INSERT- og DELETE-setninger er returverdien hvor mange rader som er berørt av kommandoen. Når det finnes en utløser i en tabell som er satt inn eller oppdatert, inneholder returverdien hvor mange rader som er berørt av både innsettingen eller oppdateringen operasjonen og hvor mange rader som er berørt av utløser eller utløsere. For alle andre typer setninger er returverdien -1. Hvis det oppstår en tilbakerulling, er også verdien som returneres-1."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using ExecuteNonQuery. The example is passed a string that is a Transact-SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._23_1.cs)]\n [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._23_1.vb)]"
  syntax:
    content: public override int ExecuteNonQuery ();
    parameters: []
    return:
      type: System.Int32
      description: "Antall påvirkede rader."
  overload: System.Data.SqlClient.SqlCommand.ExecuteNonQuery*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Det oppstod et unntak under utførelse av kommandoen mot en låst rad. Dette unntaket er ikke generert når du bruker Microsoft .NET Framework, versjon 1.0.       Det oppstod et tidsavbrudd under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en feilen i en <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objekt under en direkteavspilt operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> lukket eller slettet under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objektet ble lukket under en direkteavspilling operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  id: ExecuteNonQueryAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteNonQueryAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteNonQueryAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "En asynkron versjon av <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery*>, som utfører en [!INCLUDE[tsql](~/add/includes/tsql-md.md)] setning mot tilkoblingen og returnerer antall rader berørt.</xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery*> Avbryte tokenet kan brukes til å be om at operasjonen forlates før tidsavbruddet for kommando utløper.  Unntak rapporteres via returnerte oppgaven-objektet."
  remarks: "For mer informasjon om asynkrone programming i den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dataleverandøren for [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], se [asynkront Programming](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Threading.Tasks.Task<int> ExecuteNonQueryAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Instruksjonene for annullering."
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: "En oppgave som representerer den asynkrone operasjonen."
  overload: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Kaller ExecuteNonQueryAsync flere ganger for samme forekomsten før fullføring av oppgaven.       Den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> lukket eller slettet under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>er angitt i tilkoblingsstrengen."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]returnerte en feil under kjøring av kommandoteksten.       Det oppstod et tidsavbrudd under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en feilen i en <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objekt under en direkteavspilt operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objektet ble lukket under en direkteavspilling operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader
  id: ExecuteReader
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReader()
  nameWithType: SqlCommand.ExecuteReader()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Sender den <> </> *> til den <> </> *> og bygger en <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>."
  remarks: "Når den <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>er satt til `StoredProcedure`, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>egenskapen må være satt til navnet på den lagrede prosedyren.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> Utfører denne lagrede prosedyren når du kaller ExecuteReader.      > [!NOTE] > Hvis en transaksjon er gått i vranglås, kan ikke bli utløst et unntak før <xref:System.Data.SqlClient.SqlDataReader.Read%2A>kalles.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>       Funksjonen med angitt (MARS) flere aktive resultatet tillater flere handlinger ved hjelp av samme tilkobling.       Hvis du bruker ExecuteReader eller <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>for å få tilgang til XML-data, SQL Server vil returnere noen XML-resultater større enn 2,033 tegn lang i flere rader 2,033 tegn.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Du kan unngå dette ved å bruke <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>eller <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>til å lese FOR XML-spørringer.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> For mer informasjon, kan du se artikkel Q310378, &quot;PRB: XML Data er avkortet når du Bruk SqlDataReader,&quot; i Microsoft Knowledge Base på http://support.microsoft.com."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData SqlCommand.ExecuteReader Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._22_1.cs)]\n [!code-vb[Classic WebData SqlCommand.ExecuteReader Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._22_1.vb)]"
  syntax:
    content: public System.Data.SqlClient.SqlDataReader ExecuteReader ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlDataReader
      description: "A <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;></xref> object."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Det oppstod et unntak under utførelse av kommandoen mot en låst rad. Dette unntaket er ikke generert når du bruker Microsoft .NET Framework, versjon 1.0.       Det oppstod et tidsavbrudd under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Gjeldende status for tilkoblingen er lukket. ExecuteReader krever en åpen <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>.       Den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> lukket eller slettet under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en feilen i en <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objekt under en direkteavspilt operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objektet ble lukket under en direkteavspilling operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)
  id: ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReader(CommandBehavior)
  nameWithType: SqlCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Sender den <> </> *> til den <> </> *>, og bygger en <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> ved hjelp av en av de <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> verdier."
  remarks: "Når den <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>er satt til `StoredProcedure`, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>egenskapen må være satt til navnet på den lagrede prosedyren.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> Utfører denne lagrede prosedyren når du kaller <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>.</xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>      > [!NOTE] > Bruk <xref:System.Data.CommandBehavior>å hente store verdier og binærdata.</xref:System.Data.CommandBehavior> Ellers en <xref:System.OutOfMemoryException>kan oppstå og tilkoblingen vil bli lukket.</xref:System.OutOfMemoryException>       Funksjonen med angitt (MARS) flere aktive resultatet tillater flere handlinger ved hjelp av samme tilkobling.       Hvis du bruker <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>eller <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>for å få tilgang til XML-data, SQL Server vil returnere noen XML-resultater større enn 2,033 tegn lang i flere rader 2,033 tegn.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Du kan unngå dette ved å bruke <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>eller <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>til å lese FOR XML-spørringer.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> For mer informasjon, kan du se artikkel Q310378, &quot;PRB: XML Data er avkortet når du Bruk SqlDataReader,&quot; i Microsoft Knowledge Base på http://support.microsoft.com."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source. <xref:System.Data.CommandBehavior> is set to <xref:System.Data.CommandBehavior>.  \n  \n [!code-cs[Classic WebData SqlCommand.ExecuteReader2#1](~/add/codesnippet/csharp/m-system.data.sqlclient._14_1.cs)]\n [!code-vb[Classic WebData SqlCommand.ExecuteReader2#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._14_1.vb)]"
  syntax:
    content: public System.Data.SqlClient.SqlDataReader ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Én av de <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> verdier."
    return:
      type: System.Data.SqlClient.SqlDataReader
      description: "A <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;></xref> object."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Det oppstod et tidsavbrudd under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en feilen i en <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objekt under en direkteavspilt operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> lukket eller slettet under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objektet ble lukket under en direkteavspilling operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync
  id: ExecuteReaderAsync
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReaderAsync()
  nameWithType: SqlCommand.ExecuteReaderAsync()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "En asynkron versjon av <> </> *>, som sender den <> </> *> til den <xref:System.Data.SqlClient.SqlCommand.Connection*>og bygger en <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>.</xref:System.Data.SqlClient.SqlCommand.Connection*> Unntak rapporteres via returnerte oppgaven-objektet."
  remarks: "For mer informasjon om asynkrone programming i den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dataleverandøren for [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], se [asynkront Programming](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
      description: "En oppgave som representerer den asynkrone operasjonen."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "En ugyldig <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> verdi."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Kaller ExecuteReaderAsync flere ganger for samme forekomsten før fullføring av oppgaven.       Den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> lukket eller slettet under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>er angitt i tilkoblingsstrengen."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]returnerte en feil under kjøring av kommandoteksten.       Det oppstod et tidsavbrudd under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en feilen i en <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objekt under en direkteavspilt operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objektet ble lukket under en direkteavspilling operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  id: ExecuteReaderAsync(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReaderAsync(CommandBehavior)
  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "En asynkron versjon av <> </> *>, som sender den <> </> *> til den <xref:System.Data.SqlClient.SqlCommand.Connection*>, og bygger en <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>.</xref:System.Data.SqlClient.SqlCommand.Connection*> Unntak rapporteres via returnerte oppgaven-objektet."
  remarks: "For mer informasjon om asynkrone programming i den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dataleverandøren for [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], se [asynkront Programming](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Alternativer for henting av setningen kjøring og data.  Når er satt til <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;> </xref>, <xref:System.Data.SqlClient.SqlDataReader.ReadAsync*>leser hele raden før den returnerer fullføre oppgaven.</xref:System.Data.SqlClient.SqlDataReader.ReadAsync*>"
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
      description: "En oppgave som representerer den asynkrone operasjonen."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "En ugyldig <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> verdi."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Kaller ExecuteReaderAsync flere ganger for samme forekomsten før fullføring av oppgaven.       Den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> lukket eller slettet under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>er angitt i tilkoblingsstrengen."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]returnerte en feil under kjøring av kommandoteksten.       Det oppstod et tidsavbrudd under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en feilen i en <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objekt under en direkteavspilt operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objektet ble lukket under en direkteavspilling operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  id: ExecuteReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReaderAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteReaderAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "En asynkron versjon av <> </> *>, som sender den <> </> *> til den <xref:System.Data.SqlClient.SqlCommand.Connection*>og bygger en <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>.</xref:System.Data.SqlClient.SqlCommand.Connection*>       Avbryte tokenet kan brukes til å be om at operasjonen forlates før tidsavbruddet for kommando utløper.  Unntak rapporteres via returnerte oppgaven-objektet."
  remarks: "For mer informasjon om asynkrone programming i den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dataleverandøren for [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], se [asynkront Programming](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Instruksjonene for annullering."
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
      description: "En oppgave som representerer den asynkrone operasjonen."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "En ugyldig <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> verdi."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Kaller <xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*>flere ganger for samme forekomsten før fullføring av oppgaven.</xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*>       Den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> lukket eller slettet under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>er angitt i tilkoblingsstrengen."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]returnerte en feil under kjøring av kommandoteksten.       Det oppstod et tidsavbrudd under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en feilen i en <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objekt under en direkteavspilt operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objektet ble lukket under en direkteavspilling operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  id: ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "En asynkron versjon av <> </> *>, som sender den <> </> *> til den <xref:System.Data.SqlClient.SqlCommand.Connection*>, og bygger en <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> avbryte tokenet kan brukes til å be om at operasjonen forlates før tidsavbruddet for kommando går.</xref:System.Data.SqlClient.SqlCommand.Connection*>  Unntak rapporteres via returnerte oppgaven-objektet."
  remarks: "For mer informasjon om asynkrone programming i den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dataleverandøren for [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], se [asynkront Programming](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Alternativer for henting av setningen kjøring og data.  Når er satt til <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;> </xref>, <xref:System.Data.SqlClient.SqlDataReader.ReadAsync*>leser hele raden før den returnerer fullføre oppgaven.</xref:System.Data.SqlClient.SqlDataReader.ReadAsync*>"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Instruksjonene for annullering."
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
      description: "En oppgave som representerer den asynkrone operasjonen."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "En ugyldig <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> verdi."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Kaller ExecuteReaderAsync flere ganger for samme forekomsten før fullføring av oppgaven.       Den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> lukket eller slettet under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>er angitt i tilkoblingsstrengen."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]returnerte en feil under kjøring av kommandoteksten.       Det oppstod et tidsavbrudd under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en feilen i en <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objekt under en direkteavspilt operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objektet ble lukket under en direkteavspilling operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalar
  id: ExecuteScalar
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteScalar()
  nameWithType: SqlCommand.ExecuteScalar()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteScalar()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Kjører spørringen, og returnerer den første kolonnen i den første raden i resultatsettet som returneres av spørringen. Flere kolonner eller rader ignoreres."
  remarks: "Bruk ExecuteScalar-metoden til å hente en enkelt verdi (for eksempel en aggregatfunksjon verdi) fra en database. Dette krever mindre kode enn ved hjelp av <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>metoden, og deretter utføre operasjoner som du må generere enkeltverdi med dataene som ble returnert av <xref:System.Data.SqlClient.SqlDataReader>.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>       En vanlig ExecuteScalar-spørring kan formatere eksemplet nedenfor C#:```   cmd.CommandText = &quot;SELECT COUNT(*) FROM dbo.region&quot;;   Int32 count = (Int32) cmd.ExecuteScalar();   ```"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using ExecuteScalar. The example is passed a string representing a new value to be inserted into a table, and a string to use to connect to the data source. The function returns the new **Identity** column value if a new row was inserted, 0 on failure.  \n  \n [!code-vb[DataWorks SqlCommand.ExecuteScalar#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._31_1.vb)]\n [!code-cs[DataWorks SqlCommand.ExecuteScalar#1](~/add/codesnippet/csharp/m-system.data.sqlclient._31_1.cs)]"
  syntax:
    content: public override object ExecuteScalar ();
    parameters: []
    return:
      type: System.Object
      description: "Den første kolonnen i den første raden i resultatsettet eller en nullreferanse (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic) Hvis resultatsettet er tom. Returnerer maksimalt 2033 tegn."
  overload: System.Data.SqlClient.SqlCommand.ExecuteScalar*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Det oppstod et unntak under utførelse av kommandoen mot en låst rad. Dette unntaket er ikke generert når du bruker Microsoft .NET Framework, versjon 1.0.       Det oppstod et tidsavbrudd under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> lukket eller slettet under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en feilen i en <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objekt under en direkteavspilt operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objektet ble lukket under en direkteavspilling operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  id: ExecuteScalarAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteScalarAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteScalarAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "En asynkron versjon av <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar*>, som kjører spørringen asynkront og returnerer den første kolonnen i den første raden i resultatsettet som returneres av spørringen.</xref:System.Data.SqlClient.SqlCommand.ExecuteScalar*> Flere kolonner eller rader ignoreres.       Avbryte tokenet kan brukes til å be om at operasjonen forlates før tidsavbruddet for kommando utløper. Unntak rapporteres via returnerte oppgaven-objektet."
  remarks: "For mer informasjon om asynkrone programming i den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dataleverandøren for [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], se [asynkront Programming](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Threading.Tasks.Task<object> ExecuteScalarAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Instruksjonene for annullering."
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "En oppgave som representerer den asynkrone operasjonen."
  overload: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Kaller ExecuteScalarAsync flere ganger for samme forekomsten før fullføring av oppgaven.       Den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> lukket eller slettet under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>er angitt i tilkoblingsstrengen."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]returnerte en feil under kjøring av kommandoteksten.       Det oppstod et tidsavbrudd under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en feilen i en <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objekt under en direkteavspilt operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objektet ble lukket under en direkteavspilling operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReader
  id: ExecuteXmlReader
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteXmlReader()
  nameWithType: SqlCommand.ExecuteXmlReader()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Sender den <> </> *> til den <> </> *> og bygger en <xref:System.Xml.XmlReader>objektet.</xref:System.Xml.XmlReader>"
  remarks: "Den <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>egenskapen angir vanligvis et [!INCLUDE[tsql](~/add/includes/tsql-md.md)] setning med en gyldig FOR XML-setningsdel.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> Imidlertid <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>kan også angi et uttrykk som returnerer `ntext` eller `nvarchar` data som inneholder gyldig XML eller innholdet i en kolonne som er definert med den `xml` datatype.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A>       En vanlig ExecuteXmlReader-spørring kan formatere eksemplet nedenfor Microsoft Visual C#: ```   SqlCommand command = new SqlCommand(&quot;SELECT * FROM dbo.Customers FOR XML AUTO, XMLDATA&quot;, SqlConn);   ``` denne metoden kan også brukes til å hente et enkelt rader og én kolonne resultatsett som inneholder XML-data. I dette tilfellet hvis mer enn én rad returneres, metoden ExecuteXmlReader knytter det <xref:System.Xml.XmlReader>verdien på den første raden, og ignorerer resten av resultatet som er angitt.</xref:System.Xml.XmlReader>       Funksjonen med angitt (MARS) flere aktive resultatet tillater flere handlinger ved hjelp av samme tilkobling.       Hvis du bruker <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>eller <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>for å få tilgang til XML-data, SQL Server vil returnere noen XML-resultater større enn 2,033 tegn lang i flere rader 2,033 tegn.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Du kan unngå dette ved å bruke ExecuteXmlReader eller <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>til å lese FOR XML-spørringer.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> For mer informasjon, kan du se artikkel Q310378, &quot;PRB: XML Data er avkortet når du Bruk SqlDataReader,&quot; i Microsoft Knowledge Base på http://support.microsoft.com."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using ExecuteXmlReader. The example is passed a string that is a Transact-SQL FOR XML SELECT statement, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData SqlCommand.ExecuteXmlReader#1](~/add/codesnippet/csharp/m-system.data.sqlclient._42_1.cs)]\n [!code-vb[Classic WebData SqlCommand.ExecuteXmlReader#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._42_1.vb)]"
  syntax:
    content: public System.Xml.XmlReader ExecuteXmlReader ();
    parameters: []
    return:
      type: System.Xml.XmlReader
      description: "En <xref:System.Xml.XmlReader>objektet.</xref:System.Xml.XmlReader>"
  overload: System.Data.SqlClient.SqlCommand.ExecuteXmlReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Det oppstod et unntak under utførelse av kommandoen mot en låst rad. Dette unntaket er ikke generert når du bruker Microsoft .NET Framework, versjon 1.0.       Det oppstod et tidsavbrudd under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> lukket eller slettet under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en feilen i en <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objekt under en direkteavspilt operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objektet ble lukket under en direkteavspilling operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync
  id: ExecuteXmlReaderAsync
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteXmlReaderAsync()
  nameWithType: SqlCommand.ExecuteXmlReaderAsync()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "En asynkron versjon av <> </> *>, som sender den <> </> *> til den <xref:System.Data.SqlClient.SqlCommand.Connection*>og bygger en <xref:System.Xml.XmlReader>objektet.</xref:System.Xml.XmlReader> </xref:System.Data.SqlClient.SqlCommand.Connection*>       Unntak rapporteres via returnerte oppgaven-objektet."
  remarks: "For mer informasjon om asynkrone programming i den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dataleverandøren for [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], se [asynkront Programming](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Xml.XmlReader> ExecuteXmlReaderAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Xml.XmlReader}
      description: "En oppgave som representerer den asynkrone operasjonen."
  overload: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Kaller <xref:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*>flere ganger for samme forekomsten før fullføring av oppgaven.</xref:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*>       Den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> lukket eller slettet under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>er angitt i tilkoblingsstrengen."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]returnerte en feil under kjøring av kommandoteksten.       Det oppstod et tidsavbrudd under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en feilen i en <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objekt under en direkteavspilt operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objektet ble lukket under en direkteavspilling operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  id: ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteXmlReaderAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteXmlReaderAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "En asynkron versjon av <> </> *>, som sender den <> </> *> til den <xref:System.Data.SqlClient.SqlCommand.Connection*>og bygger en <xref:System.Xml.XmlReader>objektet.</xref:System.Xml.XmlReader> </xref:System.Data.SqlClient.SqlCommand.Connection*>       Avbryte tokenet kan brukes til å be om at operasjonen forlates før tidsavbruddet for kommando utløper.  Unntak rapporteres via returnerte oppgaven-objektet."
  remarks: "For mer informasjon om asynkrone programming i den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dataleverandøren for [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], se [asynkront Programming](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Xml.XmlReader> ExecuteXmlReaderAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Instruksjonene for annullering."
    return:
      type: System.Threading.Tasks.Task{System.Xml.XmlReader}
      description: "En oppgave som representerer den asynkrone operasjonen."
  overload: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Kaller <xref:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*>flere ganger for samme forekomsten før fullføring av oppgaven.</xref:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*>       Den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> lukket eller slettet under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>er angitt i tilkoblingsstrengen."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]returnerte en feil under kjøring av kommandoteksten.       Det oppstod et tidsavbrudd under en av operasjonen. Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en feilen i en <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objekt under en direkteavspilt operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>eller <xref:System.IO.TextReader>objektet ble lukket under en direkteavspilling operasjon.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  Du finner mer informasjon om direkteavspilling [SqlClient direkteavspilling støtte](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Notification
  id: Notification
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Notification
  nameWithType: SqlCommand.Notification
  fullName: System.Data.SqlClient.SqlCommand.Notification
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter eller angir en verdi som angir den <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;> </xref> objektet bundet til denne kommandoen."
  remarks: "Du må angi verdien for denne egenskapen før kommandoen utføres for at den skal tre i kraft."
  syntax:
    content: public System.Data.Sql.SqlNotificationRequest Notification { get; set; }
    return:
      type: System.Data.Sql.SqlNotificationRequest
      description: "Når satt til null (standard), ingen varsling skal bli bedt om."
  overload: System.Data.SqlClient.SqlCommand.Notification*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
  id: NotificationAutoEnlist
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: NotificationAutoEnlist
  nameWithType: SqlCommand.NotificationAutoEnlist
  fullName: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter eller angir en verdi som angir om programmet automatisk skal motta spørringsvarsler fra et felles <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref> objektet."
  remarks: "Denne funksjonen brukes til å motta varsler for alle kommandoer som utføres i en ASP-side mot SQL Server i ASP.NET-applikasjoner. Dette gjør det mulig for ASP.NET å hurtigbufre siden før de brukes til å gjengi siden vil spørringene et annet resultat. Automatisk oppføring.       Denne egenskapen gjelder bare for versjonene av SQL Server som støtter spørringsvarsler. For tidligere versjoner når egenskapen settes **true** har ingen innvirkning på programmet."
  syntax:
    content: public bool NotificationAutoEnlist { get; set; }
    return:
      type: System.Boolean
      description: '**TRUE** Hvis programmet automatisk skal motta spørringsvarsler; ellers **false**. Standardverdien er **true**.'
  overload: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Parameters
  id: Parameters
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Parameters
  nameWithType: SqlCommand.Parameters
  fullName: System.Data.SqlClient.SqlCommand.Parameters
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets the <xref href=&quot;System.Data.SqlClient.SqlParameterCollection&quot;></xref>."
  remarks: "Microsoft .NET Framework-dataleverandør for SQL Server støtter ikke spørsmål merke (?)-plassholder for sending av parameterne til en SQL-setning eller en lagret prosedyre kalles av en kommando for `CommandType.Text`. I dette tilfellet må parametere med navn brukes. For eksempel: Velg * fra kunder WHERE CustomerID = @CustomerID > [!NOTE] > Hvis parameterne i samlingen ikke samsvarer med kravene for spørringen kjøres, kan det føre en feil.       Hvis du vil ha mer informasjon, se [parameteren datatypene og konfigurere parametere](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to create a <xref:System.Data.SqlClient.SqlCommand> and add parameters to the <xref:System.Data.SqlClient.SqlParameterCollection>.  \n  \n [!code-vb[DataWorks SqlParameterCollection.AddWithValue#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._32_1.vb)]\n [!code-cs[DataWorks SqlParameterCollection.AddWithValue#1](~/add/codesnippet/csharp/p-system.data.sqlclient._32_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlParameterCollection Parameters { get; }
    return:
      type: System.Data.SqlClient.SqlParameterCollection
      description: "Parameterne for Transact-SQL-setning eller lagret prosedyre. Standarden er en tom samling."
  overload: System.Data.SqlClient.SqlCommand.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Prepare
  id: Prepare
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Prepare()
  nameWithType: SqlCommand.Prepare()
  fullName: System.Data.SqlClient.SqlCommand.Prepare()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Oppretter en klargjort versjon av kommandoen til en forekomst av SQL Server."
  remarks: "Hvis <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>er satt til `StoredProcedure`, kallet til Prepare skal lykkes, selv om det kan føre til at ingen-drift</xref:System.Data.SqlClient.SqlCommand.CommandType%2A>       Før du kaller Prepare, må du angi datatypen for hver parameter i å være forberedt-setningen. For hver parameter som har datatypen variabel lengde, må du angi den <xref:System.Data.SqlClient.SqlParameter.Size%2A>egenskapen til den maksimale størrelsen som er nødvendig.</xref:System.Data.SqlClient.SqlParameter.Size%2A> Klargjør returnerer en feil hvis disse vilkårene ikke er oppfylt.      > [!NOTE] > Hvis databasekonteksten endres ved å kjøre Transact-SQL `USE <database>` setningen eller ved å ringe det <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A>metoden og Prepare må kalles én gang.</xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A>       Hvis du kaller en `Execute` metoden når du kaller Prepare, en parameterverdi som er større enn verdien som er angitt av den <xref:System.Data.SqlClient.SqlParameter.Size%2A>egenskapen avkortes automatisk til den opprinnelige størrelsen som er angitt for parameteren, og ingen avkutting feil returneres.</xref:System.Data.SqlClient.SqlParameter.Size%2A>       Sender parameterne (om forberedt eller ikke) må ha en brukerdefinert datatype. Hvis du angir en variabel lengdedatatype, må du også angi maksimalt <xref:System.Data.SqlClient.SqlParameter.Size%2A>.</xref:System.Data.SqlClient.SqlParameter.Size%2A>       Før Visual Studio 2010 forårsaket Prepare et unntak.  Starter i Visual Studio 2010, denne metoden ikke Iverksett et unntak."
  example:
  - "The following example demonstrates the use of the Prepare method.  \n  \n [!code-vb[Classic WebData SqlCommand.Prepare#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._45_1.vb)]\n [!code-cs[Classic WebData SqlCommand.Prepare#1](~/add/codesnippet/csharp/m-system.data.sqlclient._45_1.cs)]"
  syntax:
    content: public override void Prepare ();
    parameters: []
  overload: System.Data.SqlClient.SqlCommand.Prepare*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ResetCommandTimeout
  id: ResetCommandTimeout
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ResetCommandTimeout()
  nameWithType: SqlCommand.ResetCommandTimeout()
  fullName: System.Data.SqlClient.SqlCommand.ResetCommandTimeout()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Tilbakestiller det <xref:System.Data.SqlClient.SqlCommand.CommandTimeout*>egenskapen til standardverdien.</xref:System.Data.SqlClient.SqlCommand.CommandTimeout*>"
  remarks: "Standardverdien for den <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>er 30 sekunder.</xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>"
  syntax:
    content: public void ResetCommandTimeout ();
    parameters: []
  overload: System.Data.SqlClient.SqlCommand.ResetCommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.StatementCompleted
  id: StatementCompleted
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: StatementCompleted
  nameWithType: SqlCommand.StatementCompleted
  fullName: System.Data.SqlClient.SqlCommand.StatementCompleted
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Forekommer når kjøringen av en Transact-SQL-setningen er fullført."
  syntax:
    content: public event System.Data.StatementCompletedEventHandler StatementCompleted;
    return:
      type: System.Data.StatementCompletedEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: SqlCommand.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlCommand.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Oppretter en ny <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> objekt som er en kopi av den gjeldende forekomsten."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "En ny <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> objekt som er en kopi av denne forekomsten."
  overload: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Transaction
  id: Transaction
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Transaction
  nameWithType: SqlCommand.Transaction
  fullName: System.Data.SqlClient.SqlCommand.Transaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter eller angir den <xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;> </xref> som den <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> utfører."
  remarks: "Du kan ikke angi egenskapen Transaction hvis den allerede er satt til en bestemt verdi, og kommandoen er i ferd med å kjøres. Hvis du setter transaction-egenskapen til en <xref:System.Data.SqlClient.SqlTransaction>objekt som ikke er koblet til samme <xref:System.Data.SqlClient.SqlConnection>som den <xref:System.Data.SqlClient.SqlCommand>objekt, et unntak neste gang du forsøker å utføre en setning.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlTransaction>"
  syntax:
    content: public System.Data.SqlClient.SqlTransaction Transaction { get; set; }
    return:
      type: System.Data.SqlClient.SqlTransaction
      description: "The <xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;></xref>. Standardverdien er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlCommand.Transaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.UpdatedRowSource
  id: UpdatedRowSource
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: UpdatedRowSource
  nameWithType: SqlCommand.UpdatedRowSource
  fullName: System.Data.SqlClient.SqlCommand.UpdatedRowSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter eller angir hvordan kommandoen brukes av <xref href=&quot;System.Data.DataRow&quot;> </xref> ved bruk av den **oppdateringen** metoden for den <xref href=&quot;System.Data.Common.DbDataAdapter&quot;> </xref>."
  remarks: "Standard <xref:System.Data.UpdateRowSource>verdien er **begge** Hvis kommandoen genereres automatisk (som med den <xref:System.Data.SqlClient.SqlCommandBuilder>), og da standarden er **ingen**.</xref:System.Data.SqlClient.SqlCommandBuilder> </xref:System.Data.UpdateRowSource>       For mer informasjon om hvordan du bruker den **UpdatedRowSource** egenskapen se [DataAdapter parametere](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }
    return:
      type: System.Data.UpdateRowSource
      description: "Én av de <xref href=&quot;System.Data.UpdateRowSource&quot;> </xref> verdier."
  overload: System.Data.SqlClient.SqlCommand.UpdatedRowSource*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.Common.DbCommand
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Data.SqlClient.SqlException
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlException
  nameWithType: SqlException
  fullName: System.Data.SqlClient.SqlException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.SqlClient.SqlCommand.#ctor
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand()
  nameWithType: SqlCommand.SqlCommand()
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand()
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand(String)
  nameWithType: SqlCommand.SqlCommand(String)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand(String,SqlConnection)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection)
- uid: System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnection
  nameWithType: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand(String,SqlConnection,SqlTransaction)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction)
- uid: System.Data.SqlClient.SqlTransaction
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlTransaction
  nameWithType: SqlTransaction
  fullName: System.Data.SqlClient.SqlTransaction
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
- uid: System.Data.SqlClient.SqlCommandColumnEncryptionSetting
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommandColumnEncryptionSetting
  nameWithType: SqlCommandColumnEncryptionSetting
  fullName: System.Data.SqlClient.SqlCommandColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteNonQuery()
  nameWithType: SqlCommand.BeginExecuteNonQuery()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery()
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteNonQuery(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteNonQuery(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(AsyncCallback,Object)
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader()
  nameWithType: SqlCommand.BeginExecuteReader()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader()
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader(CommandBehavior)
  nameWithType: SqlCommand.BeginExecuteReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(CommandBehavior)
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(AsyncCallback,Object)
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteXmlReader()
  nameWithType: SqlCommand.BeginExecuteXmlReader()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader()
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteXmlReader(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteXmlReader(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(AsyncCallback,Object)
- uid: System.Data.SqlClient.SqlCommand.Cancel
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Cancel()
  nameWithType: SqlCommand.Cancel()
  fullName: System.Data.SqlClient.SqlCommand.Cancel()
- uid: System.Data.SqlClient.SqlCommand.Clone
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Clone()
  nameWithType: SqlCommand.Clone()
  fullName: System.Data.SqlClient.SqlCommand.Clone()
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ColumnEncryptionSetting
  nameWithType: SqlCommand.ColumnEncryptionSetting
  fullName: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlCommand.CommandText
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandText
  nameWithType: SqlCommand.CommandText
  fullName: System.Data.SqlClient.SqlCommand.CommandText
- uid: System.Data.SqlClient.SqlCommand.CommandTimeout
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: SqlCommand.CommandTimeout
  fullName: System.Data.SqlClient.SqlCommand.CommandTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlCommand.CommandType
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandType
  nameWithType: SqlCommand.CommandType
  fullName: System.Data.SqlClient.SqlCommand.CommandType
- uid: System.Data.CommandType
  parent: System.Data
  isExternal: false
  name: CommandType
  nameWithType: CommandType
  fullName: System.Data.CommandType
- uid: System.Data.SqlClient.SqlCommand.Connection
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Connection
  nameWithType: SqlCommand.Connection
  fullName: System.Data.SqlClient.SqlCommand.Connection
- uid: System.Data.SqlClient.SqlCommand.CreateDbParameter
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CreateDbParameter()
  nameWithType: SqlCommand.CreateDbParameter()
  fullName: System.Data.SqlClient.SqlCommand.CreateDbParameter()
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.SqlClient.SqlCommand.CreateParameter
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CreateParameter()
  nameWithType: SqlCommand.CreateParameter()
  fullName: System.Data.SqlClient.SqlCommand.CreateParameter()
- uid: System.Data.SqlClient.SqlParameter
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlParameter
  nameWithType: SqlParameter
  fullName: System.Data.SqlClient.SqlParameter
- uid: System.Data.SqlClient.SqlCommand.DbConnection
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbConnection
  nameWithType: SqlCommand.DbConnection
  fullName: System.Data.SqlClient.SqlCommand.DbConnection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.SqlClient.SqlCommand.DbParameterCollection
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: SqlCommand.DbParameterCollection
  fullName: System.Data.SqlClient.SqlCommand.DbParameterCollection
- uid: System.Data.Common.DbParameterCollection
  parent: System.Data.Common
  isExternal: false
  name: DbParameterCollection
  nameWithType: DbParameterCollection
  fullName: System.Data.Common.DbParameterCollection
- uid: System.Data.SqlClient.SqlCommand.DbTransaction
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbTransaction
  nameWithType: SqlCommand.DbTransaction
  fullName: System.Data.SqlClient.SqlCommand.DbTransaction
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.SqlClient.SqlCommand.DesignTimeVisible
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: SqlCommand.DesignTimeVisible
  fullName: System.Data.SqlClient.SqlCommand.DesignTimeVisible
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SqlCommand.Dispose(Boolean)
  fullName: System.Data.SqlClient.SqlCommand.Dispose(Boolean)
- uid: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteNonQuery(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteNonQuery(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(IAsyncResult)
- uid: System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteReader(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteReader(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteReader(IAsyncResult)
- uid: System.Data.SqlClient.SqlDataReader
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlDataReader
  nameWithType: SqlDataReader
  fullName: System.Data.SqlClient.SqlDataReader
- uid: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteXmlReader(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteXmlReader(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(IAsyncResult)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: SqlCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
- uid: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<DbDataReader>
  nameWithType: Task<DbDataReader>
  fullName: System.Threading.Tasks.Task<System.Data.Common.DbDataReader>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Data.Common.DbDataReader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.DbDataReader
    name: DbDataReader
    nameWithType: DbDataReader
    fullName: DbDataReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQuery
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteNonQuery()
  nameWithType: SqlCommand.ExecuteNonQuery()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteNonQueryAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteNonQueryAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(CancellationToken)
- uid: System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReader()
  nameWithType: SqlCommand.ExecuteReader()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReader()
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReader(CommandBehavior)
  nameWithType: SqlCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync()
  nameWithType: SqlCommand.ExecuteReaderAsync()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync()
- uid: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<SqlDataReader>
  nameWithType: Task<SqlDataReader>
  fullName: System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Data.SqlClient.SqlDataReader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.SqlClient.SqlDataReader
    name: SqlDataReader
    nameWithType: SqlDataReader
    fullName: SqlDataReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync(CommandBehavior)
  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CommandBehavior)
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteReaderAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CancellationToken)
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalar
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteScalar()
  nameWithType: SqlCommand.ExecuteScalar()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteScalar()
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteScalarAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteScalarAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(CancellationToken)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReader
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReader()
  nameWithType: SqlCommand.ExecuteXmlReader()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReader()
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReaderAsync()
  nameWithType: SqlCommand.ExecuteXmlReaderAsync()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync()
- uid: System.Threading.Tasks.Task{System.Xml.XmlReader}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<XmlReader>
  nameWithType: Task<XmlReader>
  fullName: System.Threading.Tasks.Task<System.Xml.XmlReader>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Xml.XmlReader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: XmlReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReaderAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteXmlReaderAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(CancellationToken)
- uid: System.Data.SqlClient.SqlCommand.Notification
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Notification
  nameWithType: SqlCommand.Notification
  fullName: System.Data.SqlClient.SqlCommand.Notification
- uid: System.Data.Sql.SqlNotificationRequest
  parent: System.Data.Sql
  isExternal: false
  name: SqlNotificationRequest
  nameWithType: SqlNotificationRequest
  fullName: System.Data.Sql.SqlNotificationRequest
- uid: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: NotificationAutoEnlist
  nameWithType: SqlCommand.NotificationAutoEnlist
  fullName: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
- uid: System.Data.SqlClient.SqlCommand.Parameters
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Parameters
  nameWithType: SqlCommand.Parameters
  fullName: System.Data.SqlClient.SqlCommand.Parameters
- uid: System.Data.SqlClient.SqlParameterCollection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlParameterCollection
  nameWithType: SqlParameterCollection
  fullName: System.Data.SqlClient.SqlParameterCollection
- uid: System.Data.SqlClient.SqlCommand.Prepare
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Prepare()
  nameWithType: SqlCommand.Prepare()
  fullName: System.Data.SqlClient.SqlCommand.Prepare()
- uid: System.Data.SqlClient.SqlCommand.ResetCommandTimeout
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ResetCommandTimeout()
  nameWithType: SqlCommand.ResetCommandTimeout()
  fullName: System.Data.SqlClient.SqlCommand.ResetCommandTimeout()
- uid: System.Data.SqlClient.SqlCommand.StatementCompleted
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: StatementCompleted
  nameWithType: SqlCommand.StatementCompleted
  fullName: System.Data.SqlClient.SqlCommand.StatementCompleted
- uid: System.Data.StatementCompletedEventHandler
  parent: System.Data
  isExternal: false
  name: StatementCompletedEventHandler
  nameWithType: StatementCompletedEventHandler
  fullName: System.Data.StatementCompletedEventHandler
- uid: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: SqlCommand.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlCommand.System.ICloneable.Clone()
- uid: System.Data.SqlClient.SqlCommand.Transaction
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Transaction
  nameWithType: SqlCommand.Transaction
  fullName: System.Data.SqlClient.SqlCommand.Transaction
- uid: System.Data.SqlClient.SqlCommand.UpdatedRowSource
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: SqlCommand.UpdatedRowSource
  fullName: System.Data.SqlClient.SqlCommand.UpdatedRowSource
- uid: System.Data.UpdateRowSource
  parent: System.Data
  isExternal: false
  name: UpdateRowSource
  nameWithType: UpdateRowSource
  fullName: System.Data.UpdateRowSource
- uid: System.Data.SqlClient.SqlCommand.#ctor*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand.SqlCommand
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteNonQuery
  nameWithType: SqlCommand.BeginExecuteNonQuery
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader
  nameWithType: SqlCommand.BeginExecuteReader
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteXmlReader
  nameWithType: SqlCommand.BeginExecuteXmlReader
- uid: System.Data.SqlClient.SqlCommand.Cancel*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Cancel
  nameWithType: SqlCommand.Cancel
- uid: System.Data.SqlClient.SqlCommand.Clone*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Clone
  nameWithType: SqlCommand.Clone
- uid: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ColumnEncryptionSetting
  nameWithType: SqlCommand.ColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlCommand.CommandText*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandText
  nameWithType: SqlCommand.CommandText
- uid: System.Data.SqlClient.SqlCommand.CommandTimeout*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: SqlCommand.CommandTimeout
- uid: System.Data.SqlClient.SqlCommand.CommandType*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandType
  nameWithType: SqlCommand.CommandType
- uid: System.Data.SqlClient.SqlCommand.Connection*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Connection
  nameWithType: SqlCommand.Connection
- uid: System.Data.SqlClient.SqlCommand.CreateDbParameter*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CreateDbParameter
  nameWithType: SqlCommand.CreateDbParameter
- uid: System.Data.SqlClient.SqlCommand.CreateParameter*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CreateParameter
  nameWithType: SqlCommand.CreateParameter
- uid: System.Data.SqlClient.SqlCommand.DbConnection*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbConnection
  nameWithType: SqlCommand.DbConnection
- uid: System.Data.SqlClient.SqlCommand.DbParameterCollection*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: SqlCommand.DbParameterCollection
- uid: System.Data.SqlClient.SqlCommand.DbTransaction*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbTransaction
  nameWithType: SqlCommand.DbTransaction
- uid: System.Data.SqlClient.SqlCommand.DesignTimeVisible*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: SqlCommand.DesignTimeVisible
- uid: System.Data.SqlClient.SqlCommand.Dispose*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Dispose
  nameWithType: SqlCommand.Dispose
- uid: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteNonQuery
  nameWithType: SqlCommand.EndExecuteNonQuery
- uid: System.Data.SqlClient.SqlCommand.EndExecuteReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteReader
  nameWithType: SqlCommand.EndExecuteReader
- uid: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteXmlReader
  nameWithType: SqlCommand.EndExecuteXmlReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteDbDataReader
  nameWithType: SqlCommand.ExecuteDbDataReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteDbDataReaderAsync
  nameWithType: SqlCommand.ExecuteDbDataReaderAsync
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQuery*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteNonQuery
  nameWithType: SqlCommand.ExecuteNonQuery
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteNonQueryAsync
  nameWithType: SqlCommand.ExecuteNonQueryAsync
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReader
  nameWithType: SqlCommand.ExecuteReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync
  nameWithType: SqlCommand.ExecuteReaderAsync
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalar*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteScalar
  nameWithType: SqlCommand.ExecuteScalar
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteScalarAsync
  nameWithType: SqlCommand.ExecuteScalarAsync
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReader
  nameWithType: SqlCommand.ExecuteXmlReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReaderAsync
  nameWithType: SqlCommand.ExecuteXmlReaderAsync
- uid: System.Data.SqlClient.SqlCommand.Notification*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Notification
  nameWithType: SqlCommand.Notification
- uid: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: NotificationAutoEnlist
  nameWithType: SqlCommand.NotificationAutoEnlist
- uid: System.Data.SqlClient.SqlCommand.Parameters*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Parameters
  nameWithType: SqlCommand.Parameters
- uid: System.Data.SqlClient.SqlCommand.Prepare*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Prepare
  nameWithType: SqlCommand.Prepare
- uid: System.Data.SqlClient.SqlCommand.ResetCommandTimeout*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ResetCommandTimeout
  nameWithType: SqlCommand.ResetCommandTimeout
- uid: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: SqlCommand.System.ICloneable.Clone
- uid: System.Data.SqlClient.SqlCommand.Transaction*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Transaction
  nameWithType: SqlCommand.Transaction
- uid: System.Data.SqlClient.SqlCommand.UpdatedRowSource*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: SqlCommand.UpdatedRowSource
