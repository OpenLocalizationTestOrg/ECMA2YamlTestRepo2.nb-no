### YamlMime:ManagedReference
items:
- uid: System.SystemException
  id: SystemException
  children:
  - System.SystemException.#ctor
  - System.SystemException.#ctor(System.String)
  - System.SystemException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.SystemException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
  type: Class
  summary: "Fungerer som basisklasse for systemnavneområde unntak."
  remarks: "Denne klassen er angitt som en metode til å skille mellom system unntak, og programmet unntak. Det er basisklassen på slike unntak som <xref:System.ArgumentException>, <xref:System.FormatException>, og <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.FormatException> </xref:System.ArgumentException>      > [!IMPORTANT] > Fordi SystemException fungerer som basisklassen av unntak datatyper, koden kan ikke slette et SystemException-unntak eller skal den forsøk på å behandle en SystemException unntak med mindre du har tenkt å iverksette det opprinnelige unntaket på nytt.       SystemException bruker HRESULT COR_E_SYSTEM, som har verdien 0x80131501."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SystemException : Exception
  inheritance:
  - System.Exception
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.SystemException.#ctor
  id: '#ctor'
  parent: System.SystemException
  langs:
  - csharp
  name: SystemException()
  nameWithType: SystemException.SystemException()
  fullName: System.SystemException.SystemException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.SystemException&quot;> </xref> klasse."
  remarks: "Denne konstruktøren initialiserer <xref:System.Exception.Message%2A>for den nye forekomsten til en system-angitt melding som beskriver feilen, slik som &quot;det har oppstått en systemfeil.&quot;</xref:System.Exception.Message%2A> Meldingen tar hensyn til gjeldende system kultur.       Tabellen nedenfor viser første egenskapsverdiene for en forekomst av <xref:System.SystemException>.</xref:System.SystemException>      | Egenskapen | Verdien |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| En nullreferanse (`Nothing` i Visual Basic). |   | <xref:System.Exception.Message%2A>| Lokaliserte feil melding strengen. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public SystemException ();
    parameters: []
  overload: System.SystemException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.SystemException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.SystemException
  langs:
  - csharp
  name: SystemException(String)
  nameWithType: SystemException.SystemException(String)
  fullName: System.SystemException.SystemException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.SystemException&quot;> </xref> klassen med en angitt feilmelding."
  remarks: "Innholdet i den `message` -parameteren må være forstå til brukeren. Oppkalleren for denne konstruktøren kreves for å sikre at denne strengen er lokalisert for den gjeldende kulturen i systemet.       Tabellen nedenfor viser første egenskapsverdiene for en forekomst av <xref:System.SystemException>.</xref:System.SystemException>      | Egenskapen | Verdien |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| En nullreferanse (`Nothing` i Visual Basic). |   | <xref:System.Exception.Message%2A>| Feil melding strengen. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public SystemException (string message);
    parameters:
    - id: message
      type: System.String
      description: "Meldingen som beskriver problemet."
  overload: System.SystemException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.SystemException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.SystemException
  langs:
  - csharp
  name: SystemException(SerializationInfo,StreamingContext)
  nameWithType: SystemException.SystemException(SerializationInfo,StreamingContext)
  fullName: System.SystemException.SystemException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.SystemException&quot;> </xref> klasse serialiserte dataene."
  remarks: "Denne konstruktøren kalles under deserialisering til reconstitute unntak objektet overføres via en dataflyt. Hvis du vil ha mer informasjon, se [XML og SOAP-serialisering](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected SystemException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Objektet som har datatypen serialiserte objektet."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Kontekstavhengig informasjon om kilden eller målet."
  overload: System.SystemException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.SystemException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.SystemException
  langs:
  - csharp
  name: SystemException(String,Exception)
  nameWithType: SystemException.SystemException(String,Exception)
  fullName: System.SystemException.SystemException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.SystemException&quot;> </xref> klassen med en angitt feilmelding og en referanse til det interne unntaket er årsaken til dette unntaket."
  remarks: "Et unntak som er registrert som en direkte resultatet av et tidligere unntak kan inneholde en referanse til det tidligere unntaket i den <xref:System.Exception.InnerException%2A>egenskapen.</xref:System.Exception.InnerException%2A> Den <xref:System.Exception.InnerException%2A>egenskapen returnerer samme verdi som er sendt til konstruktøren, eller en nullreferanse (`Nothing` i Visual Basic) Hvis den <xref:System.Exception.InnerException%2A>egenskapen leverer ikke internt unntak verdien til konstruktøren.</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       Tabellen nedenfor viser første egenskapsverdiene for en forekomst av <xref:System.SystemException>.</xref:System.SystemException>      | Egenskapen | Verdien |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| Referansen for det indre unntaket. |   | <xref:System.Exception.Message%2A>| Feil melding strengen. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public SystemException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "Feilmelding som forklarer hvorfor unntaket."
    - id: innerException
      type: System.Exception
      description: "Unntaket er årsaken til den gjeldende unntaket. Hvis den `innerException` -parameteren er ikke en nullreferanse (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic), gjeldende unntaket blir opphøyd i en <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> blokken som behandler det interne unntaket."
  overload: System.SystemException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Exception
  isExternal: false
  name: System.Exception
- uid: System.SystemException.#ctor
  parent: System.SystemException
  isExternal: false
  name: SystemException()
  nameWithType: SystemException.SystemException()
  fullName: System.SystemException.SystemException()
- uid: System.SystemException.#ctor(System.String)
  parent: System.SystemException
  isExternal: false
  name: SystemException(String)
  nameWithType: SystemException.SystemException(String)
  fullName: System.SystemException.SystemException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.SystemException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.SystemException
  isExternal: false
  name: SystemException(SerializationInfo,StreamingContext)
  nameWithType: SystemException.SystemException(SerializationInfo,StreamingContext)
  fullName: System.SystemException.SystemException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.SystemException.#ctor(System.String,System.Exception)
  parent: System.SystemException
  isExternal: false
  name: SystemException(String,Exception)
  nameWithType: SystemException.SystemException(String,Exception)
  fullName: System.SystemException.SystemException(String,Exception)
- uid: System.SystemException.#ctor*
  parent: System.SystemException
  isExternal: false
  name: SystemException
  nameWithType: SystemException.SystemException
