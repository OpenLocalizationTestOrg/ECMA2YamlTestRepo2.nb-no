### YamlMime:ManagedReference
items:
- uid: System.Windows.Style
  id: Style
  children:
  - System.Windows.Style.#ctor
  - System.Windows.Style.#ctor(System.Type)
  - System.Windows.Style.#ctor(System.Type,System.Windows.Style)
  - System.Windows.Style.BasedOn
  - System.Windows.Style.GetHashCode
  - System.Windows.Style.IsSealed
  - System.Windows.Style.RegisterName(System.String,System.Object)
  - System.Windows.Style.Resources
  - System.Windows.Style.Seal
  - System.Windows.Style.Setters
  - System.Windows.Style.System#Windows#Markup#IAddChild#AddChild(System.Object)
  - System.Windows.Style.System#Windows#Markup#IAddChild#AddText(System.String)
  - System.Windows.Style.System#Windows#Markup#INameScope#FindName(System.String)
  - System.Windows.Style.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  - System.Windows.Style.TargetType
  - System.Windows.Style.Triggers
  - System.Windows.Style.UnregisterName(System.String)
  langs:
  - csharp
  name: Style
  nameWithType: Style
  fullName: System.Windows.Style
  type: Class
  summary: "Aktiverer deling av egenskaper, ressurser og hendelsesbehandling mellom forekomster av en type."
  remarks: "Du kan angi en stil for elementet som er avledet fra <xref:System.Windows.FrameworkElement>eller <xref:System.Windows.FrameworkContentElement>.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement> En mal som ofte er deklarert som en ressurs i den <xref:System.Windows.Application.Resources%2A>delen.</xref:System.Windows.Application.Resources%2A> Fordi stiler ressurser, må overholde de samme områdemaskinen regler som gjelder for alle ressurser, så der du angir en stil påvirker der den kan brukes. Hvis du for eksempel du deklarerer stilen i rotelementet definisjonen for programmet [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] filen stilen kan brukes hvor som helst i programmet. Hvis du oppretter en navigering-program og deklarere stilen i ett av programmets [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] filer, stilen kan bare brukes i som [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] filen. For mer informasjon om regler for regler for ressurser, kan du se [XAML ressurser](~/add/includes/ajax-current-ext-md.md).       Stilen deklarasjonen består av en stilobjekt som inneholder en samling av én eller flere <xref:System.Windows.Setter>objekter.</xref:System.Windows.Setter> Hver <xref:System.Windows.Setter>består av et <xref:System.Windows.Setter.Property%2A>og <xref:System.Windows.Setter.Value%2A>.</xref:System.Windows.Setter.Value%2A> </xref:System.Windows.Setter.Property%2A> </xref:System.Windows.Setter> Egenskapen er navnet på egenskapen for elementet stilen skal brukes. Når stilen er deklarert som en ressurs, kan det deretter refereres akkurat som en annen ressurs.      > [!NOTE] > Om det er flere aksesamlingen i samlingen aksesamlingen med samme <xref:System.Windows.Setter.Property%2A>egenskapsverdien, setter er deklarert siste brukes.</xref:System.Windows.Setter.Property%2A> På samme måte hvis du angir en verdi for samme egenskap i en stil og et element direkte, prioriteres verdisettet for elementet direkte.       Den [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] stil og templating modellen tillater deling av se samt skille presentasjon og logic og vedlikehold. Stil og templating modellen inneholder en rekke funksjoner som gjør at du kan tilpasse din [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]. Denne pakken funksjonene inkluderer klassen stil i tillegg til følgende:- <xref:System.Windows.Trigger>- <xref:System.Windows.EventTrigger>og <xref:System.Windows.Media.Animation.Storyboard>- <xref:System.Windows.Controls.ControlTemplate>- <xref:System.Windows.DataTemplate>For mer informasjon, kan du se [stil og Templating](~/add/includes/ajax-current-ext-md.md).</xref:System.Windows.DataTemplate> </xref:System.Windows.Controls.ControlTemplate> </xref:System.Windows.Media.Animation.Storyboard> </xref:System.Windows.EventTrigger> </xref:System.Windows.Trigger>"
  example:
  - "The following example shows a style declaration that will affect the <xref:System.Windows.Controls.Control.Background%2A> property of a <xref:System.Windows.Controls.Control>.  \n  \n [!code-xml[StyleOvw01#StyleSimple](~/add/codesnippet/xaml/StyleOvw1/Page1.xaml#stylesimple)]\n [!code-xml[StyleOvw01#StyleSimple](~/add/codesnippet/xaml/t-system.windows.style_1.xaml)]  \n  \n To apply the above style, do the following:  \n  \n [!code-xml[StyleOvw01#StyleSimpleApplied](~/add/codesnippet/xaml/StyleOvw1/Page1.xaml#stylesimpleapplied)]\n [!code-xml[StyleOvw01#StyleSimpleApplied](~/add/codesnippet/xaml/t-system.windows.style_2.xaml)]  \n  \n You can also apply styles to all elements of a given type by using the <xref:System.Windows.Style.TargetType%2A> property. Adding the target type to the style means that you no longer have to fully qualify the property you are setting with the `ClassName.PropertyName` syntax. The following example defines a style that will be applied to every <xref:System.Windows.Controls.TextBlock> element.  \n  \n [!code-xml[PhotoStoreDemoStyled#1](~/add/codesnippet/xaml/photostore/window1.xaml#1)]\n [!code-xml[PhotoStoreDemoStyled#1](~/add/codesnippet/xaml/t-system.windows.style_3.xaml)]  \n  \n> [!NOTE]\n>  Many [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] controls consist of a combination of other [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] controls, so creating a style that applies to all controls of a type can have broad impact. For instance, if you create a style that targets the <xref:System.Windows.Controls.TextBlock> controls in a <xref:System.Windows.Controls.Canvas>, the style is applied to all <xref:System.Windows.Controls.TextBlock> controls in the canvas, even if the <xref:System.Windows.Controls.TextBlock> is part of another control, such as a <xref:System.Windows.Controls.ListBox>.  \n  \n For information on how to extend or inherit from a defined style, see the <xref:System.Windows.Style.BasedOn%2A> page."
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)]

      [System.Windows.Markup.ContentProperty("Setters")]

      [System.Windows.Markup.DictionaryKeyProperty("TargetType")]

      public class Style : System.Windows.Threading.DispatcherObject, System.Windows.Markup.IAddChild, System.Windows.Markup.INameScope, System.Windows.Markup.IQueryAmbient
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  implements:
  - System.Windows.Markup.IAddChild
  - System.Windows.Markup.INameScope
  - System.Windows.Markup.IQueryAmbient
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Style.#ctor
  id: '#ctor'
  parent: System.Windows.Style
  langs:
  - csharp
  name: Style()
  nameWithType: Style.Style()
  fullName: System.Windows.Style.Style()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Windows.Style&quot;> </xref> klasse."
  remarks: "Konstruktøren kallet krever forsinket validering av <xref:System.Windows.Style.TargetType%2A>og <xref:System.Windows.Style.BasedOn%2A>style-typen.</xref:System.Windows.Style.BasedOn%2A> </xref:System.Windows.Style.TargetType%2A> Hvis dette brukes utenfor sammenhengen for parseren, er virkemåten udefinert."
  syntax:
    content: public Style ();
    parameters: []
  overload: System.Windows.Style.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Style.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Windows.Style
  langs:
  - csharp
  name: Style(Type)
  nameWithType: Style.Style(Type)
  fullName: System.Windows.Style.Style(Type)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Windows.Style&quot;> </xref> klasse som skal brukes på den angitte <xref:System.Type>.</xref:System.Type>"
  syntax:
    content: public Style (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "Typen som stilen gjelder."
  overload: System.Windows.Style.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Style.#ctor(System.Type,System.Windows.Style)
  id: '#ctor(System.Type,System.Windows.Style)'
  parent: System.Windows.Style
  langs:
  - csharp
  name: Style(Type,Style)
  nameWithType: Style.Style(Type,Style)
  fullName: System.Windows.Style.Style(Type,Style)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Windows.Style&quot;> </xref> klasse som skal brukes på den angitte <xref:System.Type>og basert på den angitte <xref href=&quot;System.Windows.Style&quot;> </xref>.</xref:System.Type>"
  syntax:
    content: public Style (Type targetType, System.Windows.Style basedOn);
    parameters:
    - id: targetType
      type: System.Type
      description: "Typen som stilen gjelder."
    - id: basedOn
      type: System.Windows.Style
      description: "Stil for basere denne stilen på."
  overload: System.Windows.Style.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Style.BasedOn
  id: BasedOn
  parent: System.Windows.Style
  langs:
  - csharp
  name: BasedOn
  nameWithType: Style.BasedOn
  fullName: System.Windows.Style.BasedOn
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Henter eller angir en stil for definert som grunnlag for gjeldende stil."
  remarks: "Hver mal støtter bare én basert på verdien.      <a name=&quot;xamlAttributeUsage_BasedOn&quot;></a>## XAML Attributtbruk ```   <object BasedOn=&quot;myStyle&quot; .../>   ``` <a name=&quot;xamlValues_BasedOn&quot;> </a> ## XAML verdier *myStyle* en eksisterende stil.       Vanligvis bruker du den [Markup utvidelser og WPF XAML](~/add/includes/ajax-current-ext-md.md) til å henvise til en eksisterende stil."
  example:
  - "There are several ways that styles in [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] can be extended or inherited. Styles can be based on other styles through this property. When you use this property, the new style will inherit the values of the original style that are not explicitly redefined in the new style. In the following example, `Style2` inherits the <xref:System.Windows.Controls.Control.Background%2A?displayProperty=fullName>value of `Yellow`, and adds a <xref:System.Windows.Controls.Control.Foreground%2A?displayProperty=fullName>value of `Blue`.  \n  \n [!code-xml[StyleOvw01#ExtendingStyle](~/add/codesnippet/xaml/StyleOvw1/Page1.xaml#extendingstyle)]\n [!code-xml[StyleOvw01#ExtendingStyle](~/add/codesnippet/xaml/p-system.windows.style.b_1.xaml)]  \n  \n Similarly, styles can be based on the style of an existing [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] element, as in the following example where the new style is based on the style of a <xref:System.Windows.Controls.TextBlock> element.  \n  \n [!code-xml[PhotoStoreDemoStyled#2](~/add/codesnippet/xaml/photostore/window1.xaml#2)]\n [!code-xml[PhotoStoreDemoStyled#2](~/add/codesnippet/xaml/p-system.windows.style.b_2.xaml)]  \n  \n> [!NOTE]\n>  If you create a style with a <xref:System.Windows.Style.TargetType%2A> property and base it on another style that also defines a <xref:System.Windows.Style.TargetType%2A> property, the target type of the derived style must be the same as or be derived from the type of the base style.  \n  \n Styles defined for specific types can also be based on other styles, as in the following example.  \n  \n [!code-xml[StyleOvw01#ExtendingStyleTargetType](~/add/codesnippet/xaml/StyleOvw1/Page1.xaml#extendingstyletargettype)]\n [!code-xml[StyleOvw01#ExtendingStyleTargetType](~/add/codesnippet/xaml/p-system.windows.style.b_3.xaml)]"
  syntax:
    content: public System.Windows.Style BasedOn { get; set; }
    return:
      type: System.Windows.Style
      description: "En definert stil som grunnlag for gjeldende stil. Standardverdien er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Style.BasedOn*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Style.GetHashCode
  id: GetHashCode
  parent: System.Windows.Style
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Style.GetHashCode()
  fullName: System.Windows.Style.GetHashCode()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Returnerer hashkoden for denne <xref href=&quot;System.Windows.Style&quot;> </xref>."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Hash-kode for denne <xref href=&quot;System.Windows.Style&quot;> </xref>."
  overload: System.Windows.Style.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Style.IsSealed
  id: IsSealed
  parent: System.Windows.Style
  langs:
  - csharp
  name: IsSealed
  nameWithType: Style.IsSealed
  fullName: System.Windows.Style.IsSealed
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Henter en verdi som angir om stilen er skrivebeskyttet og kan ikke endres."
  remarks: "En stil er lukket når en annen stil er basert på den, eller når den brukes for første gang."
  syntax:
    content: public bool IsSealed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis stilen er lukket; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Style.IsSealed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Style.RegisterName(System.String,System.Object)
  id: RegisterName(System.String,System.Object)
  parent: System.Windows.Style
  langs:
  - csharp
  name: RegisterName(String,Object)
  nameWithType: Style.RegisterName(String,Object)
  fullName: System.Windows.Style.RegisterName(String,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Registrerer en ny navnet på objektet paret i den gjeldende namescope."
  syntax:
    content: public void RegisterName (string name, object scopedElement);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på å registrere."
    - id: scopedElement
      type: System.Object
      description: "Objektet som skal tilordnes til den angitte `name`."
  overload: System.Windows.Style.RegisterName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Style.Resources
  id: Resources
  parent: System.Windows.Style
  langs:
  - csharp
  name: Resources
  nameWithType: Style.Resources
  fullName: System.Windows.Style.Resources
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Henter eller angir samlingen av ressurser som kan brukes i området for denne stilen."
  remarks: "<a name=\"xamlPropertyElementUsage_Resources\"></a>   \n## XAML Property Element Usage  \n  \n```  \n<object>  \n  <object.Resources>  \n    oneOrMoreResourceElements  \n  </object.Resources>  \n</object>  \n- or -   \n<object>  \n  <object.Resources>  \n    <ResourceDictionary Source=\"externalDictionarySource\"/>  \n  </object.Resources>  \n</object>  \n```  \n  \n<a name=\"xamlValues_Resources\"></a>   \n## XAML Values  \n *oneOrMoreResourceElements*  \n One or more resource elements. To be referenced later in either [StaticResource Markup Extension](~/add/includes/ajax-current-ext-md.md) or [DynamicResource Markup Extension](~/add/includes/ajax-current-ext-md.md) syntax in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], a resource element must have an `x:Key` attribute.  \n  \n \\<ResourceDictionary Source=\" *externalDictionarySource*\"/>  \n An external dictionary source. For details, see [Merged Resource Dictionaries](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Windows.ResourceDictionary Resources { get; set; }
    return:
      type: System.Windows.ResourceDictionary
      description: "Ressurser som kan brukes i området for denne stilen."
  overload: System.Windows.Style.Resources*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Style.Seal
  id: Seal
  parent: System.Windows.Style
  langs:
  - csharp
  name: Seal()
  nameWithType: Style.Seal()
  fullName: System.Windows.Style.Seal()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Låser denne stilen og fabrikker og utløsere slik at de ikke kan endres."
  syntax:
    content: public void Seal ();
    parameters: []
  overload: System.Windows.Style.Seal*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Style.Setters
  id: Setters
  parent: System.Windows.Style
  langs:
  - csharp
  name: Setters
  nameWithType: Style.Setters
  fullName: System.Windows.Style.Setters
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Henter en samling av <xref href=&quot;System.Windows.Setter&quot;> </xref> og <xref href=&quot;System.Windows.EventSetter&quot;> </xref> objekter."
  remarks: "Egenskapen Setters for et <xref:System.Windows.Style>objekt kan bestå av bare objekter som kan tilordnes til <xref:System.Windows.SetterBase>.</xref:System.Windows.SetterBase> </xref:System.Windows.Style> Legger til en <xref:System.Windows.SetterBase>barnet en <xref:System.Windows.Style>objektet implisitt legger den til den <xref:System.Windows.SetterBaseCollection>for den <xref:System.Windows.Style>objektet.</xref:System.Windows.Style> </xref:System.Windows.SetterBaseCollection> </xref:System.Windows.Style> </xref:System.Windows.SetterBase>       Bruk en eksplisitt egenskap-elementet for Setters er også relativt vanlig. Dette er en markup stil avgjørelse som noen ganger bidrar til å skille Setters fra <xref:System.Windows.Style.Resources%2A>og <xref:System.Windows.Style.Triggers%2A>elementer i en kompleks stil.</xref:System.Windows.Style.Triggers%2A> </xref:System.Windows.Style.Resources%2A> For eksempel: ```   <Style>     <Style.Setters>       <!--one or more SetterBase derived object elements here-->     </Style.Setters>   </Style>   ``` <a name=&quot;xamlPropertyElementUsage_Setters&quot;> </a> ## XAML egenskapen Element Bruk ```   <object>     oneOrMoreSetters   </object>   ``` <a name=&quot;xamlValues_Setters&quot;> </a> ## XAML verdier *oneOrMoreSetters* én eller flere <xref:System.Windows.Setter>eller <xref:System.Windows.EventSetter>objekter.</xref:System.Windows.EventSetter> </xref:System.Windows.Setter>            "
  example:
  - "The following example shows how to use this property.  \n  \n [!code-vb[listboxitemstyle#1](~/add/codesnippet/visualbasic/ListBoxItemStyle/Pane1.xaml.vb#1)]\n [!code-cs[listboxitemstyle#1](~/add/codesnippet/csharp/ListBoxItemStyle/Pane1.xaml.cs#1)]  \n  \n Adding a <xref:System.Windows.SetterBase> child to a <xref:System.Windows.Style> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Style> object. The following <xref:System.Windows.EventSetter> is implicitly added to the <xref:System.Windows.SetterBaseCollection> of the style:  \n  \n [!code-xml[eventovwsupport#XAML2](~/add/codesnippet/xaml/EventOvwSupport/page2.xaml#xaml2)]"
  syntax:
    content: public System.Windows.SetterBaseCollection Setters { get; }
    return:
      type: System.Windows.SetterBaseCollection
      description: "En samling av <xref href=&quot;System.Windows.Setter&quot;> </xref> og <xref href=&quot;System.Windows.EventSetter&quot;> </xref> objekter. Standarden er en tom samling."
  overload: System.Windows.Style.Setters*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Style.System#Windows#Markup#IAddChild#AddChild(System.Object)
  id: System#Windows#Markup#IAddChild#AddChild(System.Object)
  isEii: true
  parent: System.Windows.Style
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: Style.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Style.System.Windows.Markup.IAddChild.AddChild(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Legger til et underordnet objekt."
  remarks: "Dette medlemmet er implementering eksplisitt grensesnitt medlem. Den kan brukes bare når den <xref:System.Windows.Style>forekomsten endres til en <xref:System.Windows.Markup.IAddChild>grensesnittet.</xref:System.Windows.Markup.IAddChild> </xref:System.Windows.Style>"
  syntax:
    content: void IAddChild.AddChild (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Det underordnede objektet til å legge til."
  overload: System.Windows.Style.System#Windows#Markup#IAddChild#AddChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Style.System#Windows#Markup#IAddChild#AddText(System.String)
  id: System#Windows#Markup#IAddChild#AddText(System.String)
  isEii: true
  parent: System.Windows.Style
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: Style.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Style.System.Windows.Markup.IAddChild.AddText(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Legger til tekstinnhold i en node i objektet."
  remarks: "Dette medlemmet er implementering eksplisitt grensesnitt medlem. Den kan brukes bare når den <xref:System.Windows.Style>forekomsten endres til en <xref:System.Windows.Markup.IAddChild>grensesnittet.</xref:System.Windows.Markup.IAddChild> </xref:System.Windows.Style>"
  syntax:
    content: void IAddChild.AddText (string text);
    parameters:
    - id: text
      type: System.String
      description: "Teksten du vil legge til objektet."
  overload: System.Windows.Style.System#Windows#Markup#IAddChild#AddText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Style.System#Windows#Markup#INameScope#FindName(System.String)
  id: System#Windows#Markup#INameScope#FindName(System.String)
  isEii: true
  parent: System.Windows.Style
  langs:
  - csharp
  name: System.Windows.Markup.INameScope.FindName(String)
  nameWithType: Style.System.Windows.Markup.INameScope.FindName(String)
  fullName: System.Windows.Style.System.Windows.Markup.INameScope.FindName(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Returnerer et objekt med angitt ID navn."
  remarks: "Dette medlemmet er implementering eksplisitt grensesnitt medlem. Den kan brukes bare når den <xref:System.Windows.Style>forekomsten endres til en <xref:System.Windows.Markup.INameScope>grensesnittet.</xref:System.Windows.Markup.INameScope> </xref:System.Windows.Style>"
  syntax:
    content: object INameScope.FindName (string name);
    parameters:
    - id: name
      type: System.String
      description: "Navn på identifikatoren for objektet som ble forespurt."
    return:
      type: System.Object
      description: "Objektet, hvis funnet. Returnerer <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis Fant ikke objektet med dette navnet."
  overload: System.Windows.Style.System#Windows#Markup#INameScope#FindName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Style.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  id: System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  isEii: true
  parent: System.Windows.Style
  langs:
  - csharp
  name: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(String)
  nameWithType: Style.System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(String)
  fullName: System.Windows.Style.System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Spør om en bestemt omkringliggende egenskap er tilgjengelig i gjeldende område."
  syntax:
    content: bool IQueryAmbient.IsAmbientPropertyAvailable (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "Navnet på den forespurte omkringliggende egenskapen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den forespurte omkringliggende egenskapen er tilgjengelig. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Style.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Style.TargetType
  id: TargetType
  parent: System.Windows.Style
  langs:
  - csharp
  name: TargetType
  nameWithType: Style.TargetType
  fullName: System.Windows.Style.TargetType
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Henter eller angir typen denne stilen er beregnet."
  remarks: "Du kan angi en stil for elementet som er avledet fra <xref:System.Windows.FrameworkElement>eller <xref:System.Windows.FrameworkContentElement>.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement> Target-typen kan derfor være noen av disse elementene. Imidlertid Hvis du oppretter en mal med en egenskap for TargetType og knytte den til en annen stil som definerer også en TargetType egenskap, måltypen for avledede stilen må være den samme som eller være avledet fra måltypen for base stilen.       Hvis du ikke angir en TargetType, bør du må angi en `x:Key` for din <xref:System.Windows.Style>og kvalifisere også egenskapene i stilen med klassenavn.</xref:System.Windows.Style>      <a name=&quot;xamlAttributeUsage_TargetType&quot;></a>## XAML Attributtbruk ```   <object  TargetType=&quot;{x:Type typeName}&quot;/>   -or-   <object  TargetType=&quot;typeName&quot;/>   ``` <a name=&quot;xamlValues_TargetType&quot;> </a> ## XAML verdier `{x:Type ...}` en [x: Type Markup utvidelsen](~/add/includes/ajax-current-ext-md.md) markup utvidelsen bruk.             *typeName* typenavnet av klassen."
  example:
  - "The following example defines a style that will be applied to all instances of the <xref:System.Windows.Controls.TextBlock> element.  \n  \n [!code-xml[PhotoStoreDemoStyled#1](~/add/codesnippet/xaml/photostore/window1.xaml#1)]\n [!code-xml[PhotoStoreDemoStyled#1](~/add/codesnippet/xaml/p-system.windows.style.t_0_1.xaml)]  \n  \n Setting the TargetType property to the <xref:System.Windows.Controls.TextBlock> type without setting an `x:Key` implicitly sets the `x:Key` to `{x:Type TextBlock}`. This also means that if you give the above <xref:System.Windows.Style> an `x:Key` value of anything other than `{x:Type TextBlock}`, the <xref:System.Windows.Style> would not be applied to all <xref:System.Windows.Controls.TextBlock> elements automatically. Instead, you need to apply the style to the <xref:System.Windows.Controls.TextBlock> elements explicitly.  \n  \n Many [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] controls consist of a combination of other [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] controls, so creating a style that applies to all controls of a type can have broad impact. For instance, if you create a style that targets the <xref:System.Windows.Controls.TextBox> controls in a <xref:System.Windows.Controls.Canvas>, the style is applied to all <xref:System.Windows.Controls.TextBox> controls in the canvas, even if the <xref:System.Windows.Controls.TextBox> is part of another control, such as a <xref:System.Windows.Controls.ComboBox>."
  syntax:
    content: public Type TargetType { get; set; }
    return:
      type: System.Type
      description: "Måltypen for denne stilen."
  overload: System.Windows.Style.TargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Style.Triggers
  id: Triggers
  parent: System.Windows.Style
  langs:
  - csharp
  name: Triggers
  nameWithType: Style.Triggers
  fullName: System.Windows.Style.Triggers
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Henter en samling av <xref href=&quot;System.Windows.TriggerBase&quot;> </xref> objekter som gjelder egenskapsverdier basert på angitte vilkår."
  remarks: "Den [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] stil og templating modell kan du angi utløsere i <xref:System.Windows.Style>.</xref:System.Windows.Style> I hovedsak utløsere er objekter som gjør det mulig å bruke endringene når visse betingelser (for eksempel når en bestemt egenskapsverdi blir `true`, eller når en hendelse forekommer) være ferdig.      <a name=&quot;xamlPropertyElementUsage_Triggers&quot;></a>## XAML egenskapen Element Bruk ```   <object>     <object.Triggers>       oneOrMoreTriggers     </object.Triggers>   </object>   ``` <a name=&quot;xamlValues_Triggers&quot;> </a> ## XAML verdier *oneOrMoreTriggers* null eller flere objekt-elementer som er avledet fra <xref:System.Windows.TriggerBase>.</xref:System.Windows.TriggerBase> klasser      "
  example:
  - "The following example shows a named <xref:System.Windows.Style> available to <xref:System.Windows.Controls.Button> controls. The <xref:System.Windows.Style> defines a <xref:System.Windows.Trigger> element that changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is `true`.  \n  \n [!code-xml[BtnStyles#2](~/add/codesnippet/xaml/ButtonStyles2/app.xaml#2)]"
  syntax:
    content: public System.Windows.TriggerCollection Triggers { get; }
    return:
      type: System.Windows.TriggerCollection
      description: "En samling av <xref href=&quot;System.Windows.TriggerBase&quot;> </xref> objekter. Standarden er en tom samling."
  overload: System.Windows.Style.Triggers*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Style.UnregisterName(System.String)
  id: UnregisterName(System.String)
  parent: System.Windows.Style
  langs:
  - csharp
  name: UnregisterName(String)
  nameWithType: Style.UnregisterName(String)
  fullName: System.Windows.Style.UnregisterName(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Fjerner tilordning name-objektet fra namescope."
  syntax:
    content: public void UnregisterName (string name);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på tilordningen til å fjerne."
  overload: System.Windows.Style.UnregisterName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: System.Windows.Threading.DispatcherObject
- uid: System.Windows.Style.#ctor
  parent: System.Windows.Style
  isExternal: false
  name: Style()
  nameWithType: Style.Style()
  fullName: System.Windows.Style.Style()
- uid: System.Windows.Style.#ctor(System.Type)
  parent: System.Windows.Style
  isExternal: false
  name: Style(Type)
  nameWithType: Style.Style(Type)
  fullName: System.Windows.Style.Style(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Style.#ctor(System.Type,System.Windows.Style)
  parent: System.Windows.Style
  isExternal: false
  name: Style(Type,Style)
  nameWithType: Style.Style(Type,Style)
  fullName: System.Windows.Style.Style(Type,Style)
- uid: System.Windows.Style
  parent: System.Windows
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Windows.Style
- uid: System.Windows.Style.BasedOn
  parent: System.Windows.Style
  isExternal: false
  name: BasedOn
  nameWithType: Style.BasedOn
  fullName: System.Windows.Style.BasedOn
- uid: System.Windows.Style.GetHashCode
  parent: System.Windows.Style
  isExternal: false
  name: GetHashCode()
  nameWithType: Style.GetHashCode()
  fullName: System.Windows.Style.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Style.IsSealed
  parent: System.Windows.Style
  isExternal: false
  name: IsSealed
  nameWithType: Style.IsSealed
  fullName: System.Windows.Style.IsSealed
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Style.RegisterName(System.String,System.Object)
  parent: System.Windows.Style
  isExternal: false
  name: RegisterName(String,Object)
  nameWithType: Style.RegisterName(String,Object)
  fullName: System.Windows.Style.RegisterName(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Style.Resources
  parent: System.Windows.Style
  isExternal: false
  name: Resources
  nameWithType: Style.Resources
  fullName: System.Windows.Style.Resources
- uid: System.Windows.ResourceDictionary
  parent: System.Windows
  isExternal: false
  name: ResourceDictionary
  nameWithType: ResourceDictionary
  fullName: System.Windows.ResourceDictionary
- uid: System.Windows.Style.Seal
  parent: System.Windows.Style
  isExternal: false
  name: Seal()
  nameWithType: Style.Seal()
  fullName: System.Windows.Style.Seal()
- uid: System.Windows.Style.Setters
  parent: System.Windows.Style
  isExternal: false
  name: Setters
  nameWithType: Style.Setters
  fullName: System.Windows.Style.Setters
- uid: System.Windows.SetterBaseCollection
  parent: System.Windows
  isExternal: false
  name: SetterBaseCollection
  nameWithType: SetterBaseCollection
  fullName: System.Windows.SetterBaseCollection
- uid: System.Windows.Style.System#Windows#Markup#IAddChild#AddChild(System.Object)
  parent: System.Windows.Style
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: Style.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Style.System.Windows.Markup.IAddChild.AddChild(Object)
- uid: System.Windows.Style.System#Windows#Markup#IAddChild#AddText(System.String)
  parent: System.Windows.Style
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: Style.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Style.System.Windows.Markup.IAddChild.AddText(String)
- uid: System.Windows.Style.System#Windows#Markup#INameScope#FindName(System.String)
  parent: System.Windows.Style
  isExternal: false
  name: System.Windows.Markup.INameScope.FindName(String)
  nameWithType: Style.System.Windows.Markup.INameScope.FindName(String)
  fullName: System.Windows.Style.System.Windows.Markup.INameScope.FindName(String)
- uid: System.Windows.Style.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  parent: System.Windows.Style
  isExternal: false
  name: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(String)
  nameWithType: Style.System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(String)
  fullName: System.Windows.Style.System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(String)
- uid: System.Windows.Style.TargetType
  parent: System.Windows.Style
  isExternal: false
  name: TargetType
  nameWithType: Style.TargetType
  fullName: System.Windows.Style.TargetType
- uid: System.Windows.Style.Triggers
  parent: System.Windows.Style
  isExternal: false
  name: Triggers
  nameWithType: Style.Triggers
  fullName: System.Windows.Style.Triggers
- uid: System.Windows.TriggerCollection
  parent: System.Windows
  isExternal: false
  name: TriggerCollection
  nameWithType: TriggerCollection
  fullName: System.Windows.TriggerCollection
- uid: System.Windows.Style.UnregisterName(System.String)
  parent: System.Windows.Style
  isExternal: false
  name: UnregisterName(String)
  nameWithType: Style.UnregisterName(String)
  fullName: System.Windows.Style.UnregisterName(String)
- uid: System.Windows.Style.#ctor*
  parent: System.Windows.Style
  isExternal: false
  name: Style
  nameWithType: Style.Style
- uid: System.Windows.Style.BasedOn*
  parent: System.Windows.Style
  isExternal: false
  name: BasedOn
  nameWithType: Style.BasedOn
- uid: System.Windows.Style.GetHashCode*
  parent: System.Windows.Style
  isExternal: false
  name: GetHashCode
  nameWithType: Style.GetHashCode
- uid: System.Windows.Style.IsSealed*
  parent: System.Windows.Style
  isExternal: false
  name: IsSealed
  nameWithType: Style.IsSealed
- uid: System.Windows.Style.RegisterName*
  parent: System.Windows.Style
  isExternal: false
  name: RegisterName
  nameWithType: Style.RegisterName
- uid: System.Windows.Style.Resources*
  parent: System.Windows.Style
  isExternal: false
  name: Resources
  nameWithType: Style.Resources
- uid: System.Windows.Style.Seal*
  parent: System.Windows.Style
  isExternal: false
  name: Seal
  nameWithType: Style.Seal
- uid: System.Windows.Style.Setters*
  parent: System.Windows.Style
  isExternal: false
  name: Setters
  nameWithType: Style.Setters
- uid: System.Windows.Style.System#Windows#Markup#IAddChild#AddChild*
  parent: System.Windows.Style
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild
  nameWithType: Style.System.Windows.Markup.IAddChild.AddChild
- uid: System.Windows.Style.System#Windows#Markup#IAddChild#AddText*
  parent: System.Windows.Style
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText
  nameWithType: Style.System.Windows.Markup.IAddChild.AddText
- uid: System.Windows.Style.System#Windows#Markup#INameScope#FindName*
  parent: System.Windows.Style
  isExternal: false
  name: System.Windows.Markup.INameScope.FindName
  nameWithType: Style.System.Windows.Markup.INameScope.FindName
- uid: System.Windows.Style.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable*
  parent: System.Windows.Style
  isExternal: false
  name: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable
  nameWithType: Style.System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable
- uid: System.Windows.Style.TargetType*
  parent: System.Windows.Style
  isExternal: false
  name: TargetType
  nameWithType: Style.TargetType
- uid: System.Windows.Style.Triggers*
  parent: System.Windows.Style
  isExternal: false
  name: Triggers
  nameWithType: Style.Triggers
- uid: System.Windows.Style.UnregisterName*
  parent: System.Windows.Style
  isExternal: false
  name: UnregisterName
  nameWithType: Style.UnregisterName
