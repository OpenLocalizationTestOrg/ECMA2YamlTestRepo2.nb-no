### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ICallbackEventHandler
  id: ICallbackEventHandler
  children:
  - System.Web.UI.ICallbackEventHandler.GetCallbackResult
  - System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)
  langs:
  - csharp
  name: ICallbackEventHandler
  nameWithType: ICallbackEventHandler
  fullName: System.Web.UI.ICallbackEventHandler
  type: Interface
  summary: "Brukes til å angi at en kontroll kan være et mål for en hendelse tilbakeringing på serveren."
  remarks: "Implementere grensesnittet ICallbackEventHandler for egendefinert kontroll som skal motta tilbakeringing hendelser. Hvis du vil ha mer informasjon, se [implementere klienten tilbakeringinger uten tilbakesendinger](~/add/includes/ajax-current-ext-md.md).       Eksempler på kontroller som implementerer grensesnittet ICallbackEventHandler i <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, og <xref:System.Web.UI.WebControls.TreeView>Kontroller.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Når en hendelse for tilbakeringing rettet mot en kontroll som implementerer grensesnittet ICallbackEventHandler i <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>-metoden til å behandle hendelsen, kast argumentet hendelse som parameter og <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>metoden returnerer resultatet av tilbakeringing.</xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> </xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>       Kontroller som henter data fra en kontroll av data under tilbakeringing kan gjøre det synkron eller asynkron. ASP.NET-kontroller at <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, og <xref:System.Web.UI.WebControls.TreeView>implementeres synkront.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Synkron tilbakeringinger hindrer ikke brukeren i arbeider i leseren. I synkron modus kan bare én tilbakeringing samtidig kjøre, med den siste tilbakeringingen tar prioritet. Når en webkontroll implementeres som støtter asynkrone virkemåte, kan du starter flere tilbakeringinger samtidig. Mer informasjon om asynkrone programming [hendelsen kodebasert asynkrone mønsteret (EAP)](~/add/includes/ajax-current-ext-md.md).       Du kan angi om tilbakeringing hendelser som stammer fra brukergrensesnittet gjengis av en kontroll som implementerer grensesnittet ICallbackEventHandler valideres. Validering av hendelser er god sikkerhetspraksis. Hensyn til ytelsen du kan imidlertid deaktivere den. Til å kontrollere om hendelsen validering er utført av tilbakeringing hendelser, angi den `enableEventValidation` for den [@ siden](http://msdn.microsoft.com/en-us/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) direktivet eller `enableEventValidation` for den [sider elementet (ASP.NET innstillingsskjemaet)](http://msdn.microsoft.com/en-us/4123bb66-3fe4-4d62-b70e-33758656b458) i Web.config-filen. Hvis du angir den <xref:System.Web.UI.Page.EnableEventValidation%2A>egenskap i koden, angitt i den `Page_Init` fase av behandlingen av siden.</xref:System.Web.UI.Page.EnableEventValidation%2A> Hvis du vil ha mer informasjon om belastningsfordeling sikkerhet nytte av hendelsen validering med kostnaden ytelse, se [ASP.NET ytelse oversikt over](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public interface ICallbackEventHandler
  implements: []
  platform:
  - net462
- uid: System.Web.UI.ICallbackEventHandler.GetCallbackResult
  id: GetCallbackResult
  parent: System.Web.UI.ICallbackEventHandler
  langs:
  - csharp
  name: GetCallbackResult()
  nameWithType: ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Returnerer resultatet av en tilbakeringing hendelse som er rettet mot en kontroll."
  remarks: "Unntak <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>vil ikke forhindre GetCallbackResult blir kalt, og returnerer et resultat.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> Angir et flagg for å hindre at GetCallbackResult returnerer et resultat når det er et unntaket i <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>og returnere en tom streng fra GetCallbackResult.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>"
  syntax:
    content: public string GetCallbackResult ();
    parameters: []
    return:
      type: System.String
      description: "Resultatet av tilbakeringing."
  overload: System.Web.UI.ICallbackEventHandler.GetCallbackResult*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)
  id: RaiseCallbackEvent(System.String)
  parent: System.Web.UI.ICallbackEventHandler
  langs:
  - csharp
  name: RaiseCallbackEvent(String)
  nameWithType: ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Behandler en tilbakeringing hendelse som er rettet mot en kontroll."
  remarks: "Når `null` brukes som parameteren hendelsen argumentet strengen er serialisert &quot;null&quot; og sendt tilbake til serveren. Fordi det er ikke mulig å skille mellom `null` og &quot;null&quot;, du bør ikke bruke `null` argumentet parametere med tilbakeringinger.       Unntak i RaiseCallbackEvent vil ikke forhindre <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>fra blir kalt, og returnerer et resultat.</xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> Hindre <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>returnerer et resultat angir et flagg når det er et unntaket i RaiseCallbackEvent og returnere en tom streng fra <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> </xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>"
  syntax:
    content: public void RaiseCallbackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "En streng som representerer argument hendelsen skal sendes til hendelsesbehandlingen."
  overload: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.ICallbackEventHandler.GetCallbackResult
  parent: System.Web.UI.ICallbackEventHandler
  isExternal: false
  name: GetCallbackResult()
  nameWithType: ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)
  parent: System.Web.UI.ICallbackEventHandler
  isExternal: false
  name: RaiseCallbackEvent(String)
  nameWithType: ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
- uid: System.Web.UI.ICallbackEventHandler.GetCallbackResult*
  parent: System.Web.UI.ICallbackEventHandler
  isExternal: false
  name: GetCallbackResult
  nameWithType: ICallbackEventHandler.GetCallbackResult
- uid: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*
  parent: System.Web.UI.ICallbackEventHandler
  isExternal: false
  name: RaiseCallbackEvent
  nameWithType: ICallbackEventHandler.RaiseCallbackEvent
