### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.ECDsaCng
  id: ECDsaCng
  children:
  - System.Security.Cryptography.ECDsaCng.#ctor
  - System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)
  - System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)
  - System.Security.Cryptography.ECDsaCng.Dispose(System.Boolean)
  - System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)
  - System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)
  - System.Security.Cryptography.ECDsaCng.HashAlgorithm
  - System.Security.Cryptography.ECDsaCng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.ECDsaCng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.ECDsaCng.Key
  - System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])
  - System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)
  - System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])
  - System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)
  - System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)
  - System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])
  - System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])
  - System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])
  - System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])
  langs:
  - csharp
  name: ECDsaCng
  nameWithType: ECDsaCng
  fullName: System.Security.Cryptography.ECDsaCng
  type: Class
  summary: "Inneholder en kryptografi neste generasjon (CNG) implementering av den Elliptic kurve Digital signatur Algorithm (ECDSA)."
  remarks: "Denne klassen er avledet fra <xref:System.Security.Cryptography.ECDsa>abstrakt klasse som base.</xref:System.Security.Cryptography.ECDsa>"
  example:
  - "The following example shows how to use the ECDsaCng class to sign a message and how to use the signature to verify that the message has not been altered.  \n  \n [!code-cs[ECDsaCng#1](~/add/codesnippet/csharp/t-system.security.crypto_32_1.cs)]\n [!code-vb[ECDsaCng#1](~/add/codesnippet/visualbasic/t-system.security.crypto_32_1.vb)]"
  syntax:
    content: 'public sealed class ECDsaCng : System.Security.Cryptography.ECDsa'
  inheritance:
  - System.Object
  - System.Security.Cryptography.AsymmetricAlgorithm
  - System.Security.Cryptography.ECDsa
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.AsymmetricAlgorithm.Clear
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.ECDsa.Create
  - System.Security.Cryptography.ECDsa.Create(System.String)
  - System.Security.Cryptography.ECDsa.KeyExchangeAlgorithm
  - System.Security.Cryptography.ECDsa.SignatureAlgorithm
  - System.Security.Cryptography.ECDsa.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.ECDsa.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.ECDsa.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.ECDsa.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.ECDsa.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.ECDsa.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: ECDsaCng()
  nameWithType: ECDsaCng.ECDsaCng()
  fullName: System.Security.Cryptography.ECDsaCng.ECDsaCng()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.ECDsaCng&quot;> </xref> klassen med et tilfeldig nøkkelpar."
  remarks: "Tilfeldig nøkkelparet har en offentlig nøkkellengde på 521 biter."
  syntax:
    content: public ECDsaCng ();
    parameters: []
  overload: System.Security.Cryptography.ECDsaCng.#ctor*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Kryptografi neste generasjon (CNG) klasser støttes ikke på dette systemet."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: ECDsaCng(Int32)
  nameWithType: ECDsaCng.ECDsaCng(Int32)
  fullName: System.Security.Cryptography.ECDsaCng.ECDsaCng(Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.ECDsaCng&quot;> </xref> klassen med et tilfeldig nøkkelpar, ved hjelp av den angitte nøkkelstørrelsen."
  remarks: "Tilfeldig nøkkelparet får offentlige nøkkellengden er definert av den `keySize` parameteren."
  syntax:
    content: public ECDsaCng (int keySize);
    parameters:
    - id: keySize
      type: System.Int32
      description: "Størrelsen på nøkkelen. Ugyldig er nøkkel 256, 384 og 521 biter."
  overload: System.Security.Cryptography.ECDsaCng.#ctor*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Kryptografi neste generasjon (CNG) klasser støttes ikke på dette systemet."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>keySize</code>angir en ugyldig lengde."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)
  id: '#ctor(System.Security.Cryptography.CngKey)'
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: ECDsaCng(CngKey)
  nameWithType: ECDsaCng.ECDsaCng(CngKey)
  fullName: System.Security.Cryptography.ECDsaCng.ECDsaCng(CngKey)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.ECDsaCng&quot;> </xref> klassen ved hjelp av den angitte <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> objektet."
  syntax:
    content: public ECDsaCng (System.Security.Cryptography.CngKey key);
    parameters:
    - id: key
      type: System.Security.Cryptography.CngKey
      description: "Nøkkelen som brukes som inndata til de kryptografiske operasjonene som utføres av det gjeldende objektet."
  overload: System.Security.Cryptography.ECDsaCng.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>key</code>angir ikke en Elliptic Curve Digital signatur algoritmen ECDSA ()-gruppe."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Kryptografi neste generasjon (CNG) klasser støttes ikke på dette systemet."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ECDsaCng.Dispose(Boolean)
  fullName: System.Security.Cryptography.ECDsaCng.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Som skal legges til."
  overload: System.Security.Cryptography.ECDsaCng.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)
  id: FromXmlString(System.String)
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: FromXmlString(String)
  nameWithType: ECDsaCng.FromXmlString(String)
  fullName: System.Security.Cryptography.ECDsaCng.FromXmlString(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Denne metoden er ikke implementert."
  remarks: "Hvis du vil deserialisere en XML-nøkkel, kan du bruke den <xref:System.Security.Cryptography.ECDsaCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29>overbelaste i stedet.</xref:System.Security.Cryptography.ECDsaCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29>"
  syntax:
    content: public override void FromXmlString (string xmlString);
    parameters:
    - id: xmlString
      type: System.String
      description: "I XML-baserte nøkkelinformasjon deserialiseres."
  overload: System.Security.Cryptography.ECDsaCng.FromXmlString*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "Denne metoden er ikke overstyres for denne forekomsten."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)
  id: FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: FromXmlString(String,ECKeyXmlFormat)
  nameWithType: ECDsaCng.FromXmlString(String,ECKeyXmlFormat)
  fullName: System.Security.Cryptography.ECDsaCng.FromXmlString(String,ECKeyXmlFormat)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Deserializes nøkkelinformasjon fra en XML-strengen ved hjelp av angitt format."
  syntax:
    content: public void FromXmlString (string xml, System.Security.Cryptography.ECKeyXmlFormat format);
    parameters:
    - id: xml
      type: System.String
      description: "I XML-baserte nøkkelinformasjon deserialiseres."
    - id: format
      type: System.Security.Cryptography.ECKeyXmlFormat
      description: "En av verdiene for enumeration som angir formatet for XML-strengen. Den eneste som er godkjent formatet <xref href=&quot;System.Security.Cryptography.ECKeyXmlFormat&quot;> </xref>."
  overload: System.Security.Cryptography.ECDsaCng.FromXmlString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xml</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>format</code>angir et ugyldig format. Den eneste aksepterte verdien er <xref href=&quot;System.Security.Cryptography.ECKeyXmlFormat&quot;> </xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Alle andre feil."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.HashAlgorithm
  id: HashAlgorithm
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: HashAlgorithm
  nameWithType: ECDsaCng.HashAlgorithm
  fullName: System.Security.Cryptography.ECDsaCng.HashAlgorithm
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Henter eller angir nummeralgoritmen skal brukes når logger og kontroll av data."
  remarks: "Egenskapen godtar følgende algoritmer: <xref:System.Security.Cryptography.CngAlgorithm.MD5%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A>, og <xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A>.</xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A> </xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A> </xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A> </xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A> </xref:System.Security.Cryptography.CngAlgorithm.MD5%2A>       Andre tilpassede hash-algoritmer kan også brukes.       Standard-algoritmen er <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>.</xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>       Denne egenskapen brukes ikke hvis du logger eller kontrollerer data som er allerede bruke hash-kode."
  syntax:
    content: public System.Security.Cryptography.CngAlgorithm HashAlgorithm { get; set; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "Et objekt som angir hash-algoritmen."
  overload: System.Security.Cryptography.ECDsaCng.HashAlgorithm*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Verdien er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: HashData(Stream,HashAlgorithmName)
  nameWithType: ECDsaCng.HashData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.ECDsaCng.HashData(Stream,HashAlgorithmName)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.IO.Stream
      description: "Som skal legges til."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "Som skal legges til."
    return:
      type: System.Byte[]
      description: "Som skal legges til."
  overload: System.Security.Cryptography.ECDsaCng.HashData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: ECDsaCng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.ECDsaCng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Som skal legges til."
    - id: offset
      type: System.Int32
      description: "Som skal legges til."
    - id: count
      type: System.Int32
      description: "Som skal legges til."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "Som skal legges til."
    return:
      type: System.Byte[]
      description: "Som skal legges til."
  overload: System.Security.Cryptography.ECDsaCng.HashData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.Key
  id: Key
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: Key
  nameWithType: ECDsaCng.Key
  fullName: System.Security.Cryptography.ECDsaCng.Key
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Henter eller angir nøkkelen som brukes når logger og kontroll av data."
  syntax:
    content: public System.Security.Cryptography.CngKey Key { get; }
    return:
      type: System.Security.Cryptography.CngKey
      description: "Et objekt som angir nøkkelen."
  overload: System.Security.Cryptography.ECDsaCng.Key*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])
  id: SignData(System.Byte[])
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: SignData(Byte[])
  nameWithType: ECDsaCng.SignData(Byte[])
  fullName: System.Security.Cryptography.ECDsaCng.SignData(Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Genererer en signatur for de angitte dataene."
  remarks: "Denne metoden genererer en signatur for de angitte dataene ved nummer inndata ved hjelp av den <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>egenskapen og signerer resultatet.</xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>       Den <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>flagget er obligatorisk hvis nøkkelen for kryptografisk neste generasjon (CNG) ikke tilfeldig generert av den <xref:System.Security.Cryptography.ECDsaCng>objektet.</xref:System.Security.Cryptography.ECDsaCng> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>"
  syntax:
    content: public byte[] SignData (byte[] data);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Meldingsdataene signeres."
    return:
      type: System.Byte[]
      description: "En digital signatur for de angitte dataene."
  overload: System.Security.Cryptography.ECDsaCng.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Nøkkelinformasjon som er knyttet til forekomsten har ikke en privatnøkkel."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)
  id: SignData(System.IO.Stream)
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: SignData(Stream)
  nameWithType: ECDsaCng.SignData(Stream)
  fullName: System.Security.Cryptography.ECDsaCng.SignData(Stream)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Genererer en signatur for den angitte datastrømmen lese til slutten av dataflyten."
  remarks: "Denne metoden genererer en signatur for dataflyten som er angitt av nummer inndata ved hjelp av den <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>egenskapen og signerer resultatet.</xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>       Den <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>flagget er obligatorisk hvis nøkkelen for kryptografisk neste generasjon (CNG) ikke tilfeldig generert av den <xref:System.Security.Cryptography.ECDsaCng>objektet.</xref:System.Security.Cryptography.ECDsaCng> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>"
  syntax:
    content: public byte[] SignData (System.IO.Stream data);
    parameters:
    - id: data
      type: System.IO.Stream
      description: "Datastrøm signeres."
    return:
      type: System.Byte[]
      description: "En digital signatur for den angitte dataflyten."
  overload: System.Security.Cryptography.ECDsaCng.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Nøkkelinformasjon som er knyttet til forekomsten har ikke en privatnøkkel."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)
  id: SignData(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: SignData(Byte[],Int32,Int32)
  nameWithType: ECDsaCng.SignData(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.ECDsaCng.SignData(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Genererer en digital signatur for den angitte lengden av data fra fra den angitte forskyvningen."
  remarks: "Denne metoden genererer en signatur for de angitte dataene ved nummer inndata ved hjelp av den <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>egenskapen og signerer resultatet av <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>flagget er obligatorisk hvis nøkkelen for kryptografisk neste generasjon (CNG) ikke tilfeldig generert av den <xref:System.Security.Cryptography.ECDsaCng>objektet.</xref:System.Security.Cryptography.ECDsaCng> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>"
  syntax:
    content: public byte[] SignData (byte[] data, int offset, int count);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Meldingsdataene signeres."
    - id: offset
      type: System.Int32
      description: "Plasseringen i strengen vil starte signering."
    - id: count
      type: System.Int32
      description: "Lengden på strengen i tegn, følgende `offset` som skal signeres."
    return:
      type: System.Byte[]
      description: "En digital signatur for den angitte lengden av data."
  overload: System.Security.Cryptography.ECDsaCng.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>count</code>eller <code>offset</code> forårsaket lesing utenfor grensene for datastreng."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Nøkkelinformasjon som er knyttet til forekomsten har ikke en privatnøkkel."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])
  id: SignHash(System.Byte[])
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: SignHash(Byte[])
  nameWithType: ECDsaCng.SignHash(Byte[])
  fullName: System.Security.Cryptography.ECDsaCng.SignHash(Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Genererer en signatur for den angitte hash-verdien."
  remarks: "Den <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>flagget er obligatorisk hvis nøkkelen for kryptografisk neste generasjon (CNG) ikke tilfeldig generert av den <xref:System.Security.Cryptography.ECDsaCng>objektet.</xref:System.Security.Cryptography.ECDsaCng> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>"
  syntax:
    content: public override byte[] SignHash (byte[] hash);
    parameters:
    - id: hash
      type: System.Byte[]
      description: "Hash-verdien i signeres."
    return:
      type: System.Byte[]
      description: "En digital signatur for den angitte hash-verdien."
  overload: System.Security.Cryptography.ECDsaCng.SignHash*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hash</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Nøkkelinformasjon som er knyttet til forekomsten har ikke en privatnøkkel."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)
  id: ToXmlString(System.Boolean)
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: ToXmlString(Boolean)
  nameWithType: ECDsaCng.ToXmlString(Boolean)
  fullName: System.Security.Cryptography.ECDsaCng.ToXmlString(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Denne metoden er ikke implementert."
  remarks: "Bruk til å konvertere gjeldende nøkkel til en XML-representasjon av <xref:System.Security.Cryptography.ECDsaCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29>overbelaste i stedet.</xref:System.Security.Cryptography.ECDsaCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29>"
  syntax:
    content: public override string ToXmlString (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>inkludere private parametere; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Gjelder ikke."
  overload: System.Security.Cryptography.ECDsaCng.ToXmlString*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "Denne metoden er ikke implementert."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)
  id: ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: ToXmlString(ECKeyXmlFormat)
  nameWithType: ECDsaCng.ToXmlString(ECKeyXmlFormat)
  fullName: System.Security.Cryptography.ECDsaCng.ToXmlString(ECKeyXmlFormat)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Serializes nøkkelinformasjon til en XML-strengen ved hjelp av angitt format."
  syntax:
    content: public string ToXmlString (System.Security.Cryptography.ECKeyXmlFormat format);
    parameters:
    - id: format
      type: System.Security.Cryptography.ECKeyXmlFormat
      description: "En av verdiene for enumeration som angir formatet for XML-strengen. Den eneste som er godkjent formatet <xref href=&quot;System.Security.Cryptography.ECKeyXmlFormat&quot;> </xref>."
    return:
      type: System.String
      description: "Strengobjekt som inneholder nøkkelinformasjon serialiseres til en XML-strengen i henhold til det forespurte formatet."
  overload: System.Security.Cryptography.ECDsaCng.ToXmlString*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>format</code>angir et ugyldig format. Den eneste aksepterte verdien er <xref href=&quot;System.Security.Cryptography.ECKeyXmlFormat&quot;> </xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Alle andre feil."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])
  id: VerifyData(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: VerifyData(Byte[],Byte[])
  nameWithType: ECDsaCng.VerifyData(Byte[],Byte[])
  fullName: System.Security.Cryptography.ECDsaCng.VerifyData(Byte[],Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Kontrollerer den digitale signaturen til de angitte dataene."
  remarks: "Denne metoden genererer en signatur for de angitte dataene ved nummer inndata ved hjelp av den <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>egenskapen og signerer resultatet.</xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>"
  syntax:
    content: public bool VerifyData (byte[] data, byte[] signature);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Dataene som ble signert."
    - id: signature
      type: System.Byte[]
      description: "Signaturen bekreftes."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis signaturen er ugyldig. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.ECDsaCng.VerifyData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>or <code>signature</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])
  id: VerifyData(System.IO.Stream,System.Byte[])
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: VerifyData(Stream,Byte[])
  nameWithType: ECDsaCng.VerifyData(Stream,Byte[])
  fullName: System.Security.Cryptography.ECDsaCng.VerifyData(Stream,Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Kontrollerer den digitale signaturen til den angitte datastrømmen lese til slutten av dataflyten."
  remarks: "Denne metoden hashes inndataene ved hjelp av den <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>egenskap før bekreftelse.</xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>"
  syntax:
    content: public bool VerifyData (System.IO.Stream data, byte[] signature);
    parameters:
    - id: data
      type: System.IO.Stream
      description: "Datastrøm som er signert."
    - id: signature
      type: System.Byte[]
      description: "Signaturen bekreftes."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis signaturen er ugyldig. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.ECDsaCng.VerifyData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>or <code>signature</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])
  id: VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: VerifyData(Byte[],Int32,Int32,Byte[])
  nameWithType: ECDsaCng.VerifyData(Byte[],Int32,Int32,Byte[])
  fullName: System.Security.Cryptography.ECDsaCng.VerifyData(Byte[],Int32,Int32,Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Kontrollerer signaturen for den angitte lengden av data fra fra den angitte forskyvningen."
  remarks: "Denne metoden hashes inndataene ved hjelp av den <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>egenskap før bekreftelse.</xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>"
  syntax:
    content: public bool VerifyData (byte[] data, int offset, int count, byte[] signature);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Dataene som ble signert."
    - id: offset
      type: System.Int32
      description: "Plasseringen i dataene som signerte dataene starter."
    - id: count
      type: System.Int32
      description: "Lengden på dataene i tegn, følgende `offset` som skal signeres."
    - id: signature
      type: System.Byte[]
      description: "Signaturen bekreftes."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis signaturen er ugyldig. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.ECDsaCng.VerifyData*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>eller <code>count</code> er mindre enn null.       - eller - <code>offset</code> eller <code>count</code> er større enn lengden på Bytematrisen sendt den <code>data</code> parameteren."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>or <code>signature</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])
  id: VerifyHash(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: VerifyHash(Byte[],Byte[])
  nameWithType: ECDsaCng.VerifyHash(Byte[],Byte[])
  fullName: System.Security.Cryptography.ECDsaCng.VerifyHash(Byte[],Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Kontrollerer den angitte digitale signaturen mot en angitt hash-verdi."
  syntax:
    content: public override bool VerifyHash (byte[] hash, byte[] signature);
    parameters:
    - id: hash
      type: System.Byte[]
      description: "Hash-verdien for dataene som skal kontrolleres."
    - id: signature
      type: System.Byte[]
      description: "Den digitale signaturen data du kan verifiseres mot hash-verdien."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis signaturen er ugyldig. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.ECDsaCng.VerifyHash*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hash</code>or <code>signature</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.ECDsa
  isExternal: false
  name: System.Security.Cryptography.ECDsa
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotImplementedException
  isExternal: true
  name: System.NotImplementedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.ECDsaCng.#ctor
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: ECDsaCng()
  nameWithType: ECDsaCng.ECDsaCng()
  fullName: System.Security.Cryptography.ECDsaCng.ECDsaCng()
- uid: System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: ECDsaCng(Int32)
  nameWithType: ECDsaCng.ECDsaCng(Int32)
  fullName: System.Security.Cryptography.ECDsaCng.ECDsaCng(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: ECDsaCng(CngKey)
  nameWithType: ECDsaCng.ECDsaCng(CngKey)
  fullName: System.Security.Cryptography.ECDsaCng.ECDsaCng(CngKey)
- uid: System.Security.Cryptography.CngKey
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKey
  nameWithType: CngKey
  fullName: System.Security.Cryptography.CngKey
- uid: System.Security.Cryptography.ECDsaCng.Dispose(System.Boolean)
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ECDsaCng.Dispose(Boolean)
  fullName: System.Security.Cryptography.ECDsaCng.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: FromXmlString(String)
  nameWithType: ECDsaCng.FromXmlString(String)
  fullName: System.Security.Cryptography.ECDsaCng.FromXmlString(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: FromXmlString(String,ECKeyXmlFormat)
  nameWithType: ECDsaCng.FromXmlString(String,ECKeyXmlFormat)
  fullName: System.Security.Cryptography.ECDsaCng.FromXmlString(String,ECKeyXmlFormat)
- uid: System.Security.Cryptography.ECKeyXmlFormat
  parent: System.Security.Cryptography
  isExternal: false
  name: ECKeyXmlFormat
  nameWithType: ECKeyXmlFormat
  fullName: System.Security.Cryptography.ECKeyXmlFormat
- uid: System.Security.Cryptography.ECDsaCng.HashAlgorithm
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: HashAlgorithm
  nameWithType: ECDsaCng.HashAlgorithm
  fullName: System.Security.Cryptography.ECDsaCng.HashAlgorithm
- uid: System.Security.Cryptography.CngAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithm
  nameWithType: CngAlgorithm
  fullName: System.Security.Cryptography.CngAlgorithm
- uid: System.Security.Cryptography.ECDsaCng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: HashData(Stream,HashAlgorithmName)
  nameWithType: ECDsaCng.HashData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.ECDsaCng.HashData(Stream,HashAlgorithmName)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.Security.Cryptography.ECDsaCng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: ECDsaCng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.ECDsaCng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
- uid: System.Security.Cryptography.ECDsaCng.Key
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: Key
  nameWithType: ECDsaCng.Key
  fullName: System.Security.Cryptography.ECDsaCng.Key
- uid: System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: SignData(Byte[])
  nameWithType: ECDsaCng.SignData(Byte[])
  fullName: System.Security.Cryptography.ECDsaCng.SignData(Byte[])
- uid: System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: SignData(Stream)
  nameWithType: ECDsaCng.SignData(Stream)
  fullName: System.Security.Cryptography.ECDsaCng.SignData(Stream)
- uid: System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: SignData(Byte[],Int32,Int32)
  nameWithType: ECDsaCng.SignData(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.ECDsaCng.SignData(Byte[],Int32,Int32)
- uid: System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: SignHash(Byte[])
  nameWithType: ECDsaCng.SignHash(Byte[])
  fullName: System.Security.Cryptography.ECDsaCng.SignHash(Byte[])
- uid: System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: ToXmlString(Boolean)
  nameWithType: ECDsaCng.ToXmlString(Boolean)
  fullName: System.Security.Cryptography.ECDsaCng.ToXmlString(Boolean)
- uid: System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: ToXmlString(ECKeyXmlFormat)
  nameWithType: ECDsaCng.ToXmlString(ECKeyXmlFormat)
  fullName: System.Security.Cryptography.ECDsaCng.ToXmlString(ECKeyXmlFormat)
- uid: System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: VerifyData(Byte[],Byte[])
  nameWithType: ECDsaCng.VerifyData(Byte[],Byte[])
  fullName: System.Security.Cryptography.ECDsaCng.VerifyData(Byte[],Byte[])
- uid: System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: VerifyData(Stream,Byte[])
  nameWithType: ECDsaCng.VerifyData(Stream,Byte[])
  fullName: System.Security.Cryptography.ECDsaCng.VerifyData(Stream,Byte[])
- uid: System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: VerifyData(Byte[],Int32,Int32,Byte[])
  nameWithType: ECDsaCng.VerifyData(Byte[],Int32,Int32,Byte[])
  fullName: System.Security.Cryptography.ECDsaCng.VerifyData(Byte[],Int32,Int32,Byte[])
- uid: System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: VerifyHash(Byte[],Byte[])
  nameWithType: ECDsaCng.VerifyHash(Byte[],Byte[])
  fullName: System.Security.Cryptography.ECDsaCng.VerifyHash(Byte[],Byte[])
- uid: System.Security.Cryptography.ECDsaCng.#ctor*
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: ECDsaCng
  nameWithType: ECDsaCng.ECDsaCng
- uid: System.Security.Cryptography.ECDsaCng.Dispose*
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: Dispose
  nameWithType: ECDsaCng.Dispose
- uid: System.Security.Cryptography.ECDsaCng.FromXmlString*
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: FromXmlString
  nameWithType: ECDsaCng.FromXmlString
- uid: System.Security.Cryptography.ECDsaCng.HashAlgorithm*
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: HashAlgorithm
  nameWithType: ECDsaCng.HashAlgorithm
- uid: System.Security.Cryptography.ECDsaCng.HashData*
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: HashData
  nameWithType: ECDsaCng.HashData
- uid: System.Security.Cryptography.ECDsaCng.Key*
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: Key
  nameWithType: ECDsaCng.Key
- uid: System.Security.Cryptography.ECDsaCng.SignData*
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: SignData
  nameWithType: ECDsaCng.SignData
- uid: System.Security.Cryptography.ECDsaCng.SignHash*
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: SignHash
  nameWithType: ECDsaCng.SignHash
- uid: System.Security.Cryptography.ECDsaCng.ToXmlString*
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: ToXmlString
  nameWithType: ECDsaCng.ToXmlString
- uid: System.Security.Cryptography.ECDsaCng.VerifyData*
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: VerifyData
  nameWithType: ECDsaCng.VerifyData
- uid: System.Security.Cryptography.ECDsaCng.VerifyHash*
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: VerifyHash
  nameWithType: ECDsaCng.VerifyHash
