### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.SymbolStore.SymMethod
  id: SymMethod
  children:
  - System.Diagnostics.SymbolStore.SymMethod.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod*)
  - System.Diagnostics.SymbolStore.SymMethod.Dispose
  - System.Diagnostics.SymbolStore.SymMethod.Dispose(System.Boolean)
  - System.Diagnostics.SymbolStore.SymMethod.Finalize
  - System.Diagnostics.SymbolStore.SymMethod.GetNamespace
  - System.Diagnostics.SymbolStore.SymMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymMethod.GetParameters
  - System.Diagnostics.SymbolStore.SymMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymMethod.GetScope(System.Int32)
  - System.Diagnostics.SymbolStore.SymMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  - System.Diagnostics.SymbolStore.SymMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])
  - System.Diagnostics.SymbolStore.SymMethod.RootScope
  - System.Diagnostics.SymbolStore.SymMethod.RootScopeInternal
  - System.Diagnostics.SymbolStore.SymMethod.SequencePointCount
  - System.Diagnostics.SymbolStore.SymMethod.Token
  langs:
  - csharp
  name: SymMethod
  nameWithType: SymMethod
  fullName: System.Diagnostics.SymbolStore.SymMethod
  type: Class
  summary: "Representerer en metode i et symbol-butikk."
  remarks: "Klassen SymMethod gir tilgang bare til attributtene symbolet som er relatert til en metode som sekvensnummer peker, Leksikalsk omfang og parameterinformasjon. Bruk av <xref:System.Reflection>klasser til å lese i type-relaterte attributter for en metode.</xref:System.Reflection>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SymMethod : System.Diagnostics.SymbolStore.SymMethodBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolMethod
  inheritance:
  - System.Object
  - System.Diagnostics.SymbolStore.SymMethodBase
  implements:
  - System.Diagnostics.SymbolStore.ISymbolMethod
  - System.IDisposable
  inheritedMembers:
  - System.Diagnostics.SymbolStore.SymMethodBase.{dtor}
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymMethod.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod*)
  id: '#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod*)'
  parent: System.Diagnostics.SymbolStore.SymMethod
  langs:
  - csharp
  name: SymMethod(ISymUnmanagedMethod*)
  nameWithType: SymMethod.SymMethod(ISymUnmanagedMethod*)
  fullName: System.Diagnostics.SymbolStore.SymMethod.SymMethod(ISymUnmanagedMethod*)
  type: Constructor
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  syntax:
    content: public SymMethod (System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod* pMethod);
    parameters:
    - id: pMethod
      type: System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod*
      description: "Som skal legges til."
  overload: System.Diagnostics.SymbolStore.SymMethod.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymMethod.Dispose
  id: Dispose
  parent: System.Diagnostics.SymbolStore.SymMethod
  langs:
  - csharp
  name: Dispose()
  nameWithType: SymMethod.Dispose()
  fullName: System.Diagnostics.SymbolStore.SymMethod.Dispose()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Frigir ressursene som brukes av den gjeldende forekomsten av den <xref href=&quot;System.Diagnostics.SymbolStore.SymMethod&quot;> </xref> klasse."
  syntax:
    content: public override sealed void Dispose ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymMethod.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymMethod.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymMethod
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SymMethod.Dispose(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymMethod.Dispose(Boolean)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Kalles av den <> </> *> og <> </> *> metoder for å frigjøre behandlet ressursene som brukes i den gjeldende forekomsten av den <xref href=&quot;System.Diagnostics.SymbolStore.SymMethod&quot;> </xref> klasse."
  remarks: "Denne metoden kalles bare av offentlig <xref:System.Diagnostics.SymbolStore.SymMethod.Dispose%2A>og <xref:System.Diagnostics.SymbolStore.SymMethod.Finalize%2A>metoder; ikke kalle denne metoden direkte.</xref:System.Diagnostics.SymbolStore.SymMethod.Finalize%2A> </xref:System.Diagnostics.SymbolStore.SymMethod.Dispose%2A>"
  syntax:
    content: protected virtual void Dispose (bool A_0);
    parameters:
    - id: A_0
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>å frigjøre ressurser behandlet. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> frigi bare uforvaltede ressurser."
  overload: System.Diagnostics.SymbolStore.SymMethod.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymMethod.Finalize
  id: Finalize
  parent: System.Diagnostics.SymbolStore.SymMethod
  langs:
  - csharp
  name: Finalize()
  nameWithType: SymMethod.Finalize()
  fullName: System.Diagnostics.SymbolStore.SymMethod.Finalize()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Frigir uforvaltede ressurser og til å utføre andre operasjoner for opprydding før den <xref href=&quot;System.Diagnostics.SymbolStore.SymMethod&quot;> </xref> gode av datasanering."
  remarks: "Denne metoden overstyrer <xref:System.Object.Finalize%2A>.</xref:System.Object.Finalize%2A> Applikasjons-koden kan ikke kalle denne metoden. et objekts `Finalize` metode startes automatisk under datasanering, med mindre finalization av saneringsoppsamlingen er deaktivert av et kall til den <xref:System.GC.SuppressFinalize%2A>metoden.</xref:System.GC.SuppressFinalize%2A>"
  syntax:
    content: ~SymMethod ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymMethod.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymMethod.GetNamespace
  id: GetNamespace
  parent: System.Diagnostics.SymbolStore.SymMethod
  langs:
  - csharp
  name: GetNamespace()
  nameWithType: SymMethod.GetNamespace()
  fullName: System.Diagnostics.SymbolStore.SymMethod.GetNamespace()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Oppstår en <xref:System.NotSupportedException>i alle tilfellene.</xref:System.NotSupportedException>"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolNamespace GetNamespace ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolNamespace
      description: "Oppstår en <xref:System.NotSupportedException>i alle tilfellene.</xref:System.NotSupportedException>"
  overload: System.Diagnostics.SymbolStore.SymMethod.GetNamespace*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "I alle tilfeller."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  id: GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymMethod
  langs:
  - csharp
  name: GetOffset(ISymbolDocument,Int32,Int32)
  nameWithType: SymMethod.GetOffset(ISymbolDocument,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymMethod.GetOffset(ISymbolDocument,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Henter Microsoft mellomliggende språket (MSIL) forskyvning i metoden som tilsvarer den angitte posisjonen."
  syntax:
    content: public virtual int GetOffset (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);
    parameters:
    - id: document
      type: System.Diagnostics.SymbolStore.ISymbolDocument
      description: "Dokumentet forskyvningen forespørres."
    - id: line
      type: System.Int32
      description: "Linjen for forskyvningen forespørres."
    - id: column
      type: System.Int32
      description: "Forskyvningen forespørres dokument-kolonnen."
    return:
      type: System.Int32
      description: "IL forskyvningen i den gjeldende metoden for den angitte plasseringen i dokumentet."
  overload: System.Diagnostics.SymbolStore.SymMethod.GetOffset*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymMethod.GetParameters
  id: GetParameters
  parent: System.Diagnostics.SymbolStore.SymMethod
  langs:
  - csharp
  name: GetParameters()
  nameWithType: SymMethod.GetParameters()
  fullName: System.Diagnostics.SymbolStore.SymMethod.GetParameters()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Henter parameterne for den gjeldende."
  remarks: "Parameterne returneres i rekkefølgen som de er definert i signaturen for metoden. Den returnerte matrisen er tom hvis metoden ingen har parametere."
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetParameters ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolVariable[]
      description: "Matrise med parametere for den gjeldende."
  overload: System.Diagnostics.SymbolStore.SymMethod.GetParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  id: GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymMethod
  langs:
  - csharp
  name: GetRanges(ISymbolDocument,Int32,Int32)
  nameWithType: SymMethod.GetRanges(ISymbolDocument,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymMethod.GetRanges(ISymbolDocument,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Henter en matrise med start- og forskyvningen parene som tilsvarer av Microsoft mellomspråk (MSIL) forskyvning som omfatter en angitt posisjon i denne metoden."
  remarks: "Matrisen er en matrise med heltall formatet {{Start&1;, end1}, {start2 end2}...}, der hvert par representerer en IL forskyvningen område i metoden. Antall områder er lengden på matrisen dividert 2."
  syntax:
    content: public virtual int[] GetRanges (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);
    parameters:
    - id: document
      type: System.Diagnostics.SymbolStore.ISymbolDocument
      description: "Dokumentet IL forskyvningen områdene forespørres."
    - id: line
      type: System.Int32
      description: "Linjen for IL forskyvningen områdene forespørres."
    - id: column
      type: System.Int32
      description: "Dokumentet kolonnen IL forskyvningen områdene forespørres."
    return:
      type: System.Int32[]
      description: "En matrise med start- og IL forskyvning par."
  overload: System.Diagnostics.SymbolStore.SymMethod.GetRanges*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymMethod.GetScope(System.Int32)
  id: GetScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.SymMethod
  langs:
  - csharp
  name: GetScope(Int32)
  nameWithType: SymMethod.GetScope(Int32)
  fullName: System.Diagnostics.SymbolStore.SymMethod.GetScope(Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Returnerer det mest omsluttende Leksikalsk omfanget som tilsvarer en forskyvning i en metode."
  remarks: "Du kan bruke den <xref:System.Diagnostics.SymbolStore.ISymbolMethod.GetScope%2A>metode for å starte lokale variabelen søk.</xref:System.Diagnostics.SymbolStore.ISymbolMethod.GetScope%2A>"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolScope GetScope (int offset);
    parameters:
    - id: offset
      type: System.Int32
      description: "IL forskyvningen i metoden til å slå opp."
    return:
      type: System.Diagnostics.SymbolStore.ISymbolScope
      description: "Mest omsluttende Leksikalsk omfanget for den angitte forskyvningen. IL i metoden."
  overload: System.Diagnostics.SymbolStore.SymMethod.GetScope*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  id: GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  parent: System.Diagnostics.SymbolStore.SymMethod
  langs:
  - csharp
  name: GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])
  nameWithType: SymMethod.GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])
  fullName: System.Diagnostics.SymbolStore.SymMethod.GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Henter sekvensnummer-peker for den gjeldende og lagrer informasjonen i de angitte matrisene."
  remarks: "Sekvensnummer peker brukes til å tilordne mellom kilde filplassering og IL forskyvningene.  Hver sekvenspunkt består av en IL forskyvning, og kilden filen området som er angitt av start- og avslutte linje/kolonne tall i forhold til en <xref:System.Diagnostics.SymbolStore.ISymbolDocument>objektet.</xref:System.Diagnostics.SymbolStore.ISymbolDocument>  Hvert element i en bestemt indeks for hver matrise som svarer til et bestemt sekvenspunkt. Oppkalleren må oppgi diskblokker matriser for å inneholde informasjonen som skal returneres. Alle verdier i matrisene overskrives. Bruk <xref:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount%2A>til å hente telling av alle sekvensnummer peker og opprette matriser med riktig størrelse.</xref:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount%2A> Sekvensnummer peker sorteres etter forskyvningen og er for alle dokumenter i metoden. <xref:System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints%2A>Kontrollerer størrelsen på hver matrise og plasserer sekvens punkt informasjonen inn i hver.</xref:System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints%2A> Hvis en matrise er `null`, dataene for at tabellmatrisen returneres ikke."
  syntax:
    content: public virtual void GetSequencePoints (int[] offsets, System.Diagnostics.SymbolStore.ISymbolDocument[] documents, int[] lines, int[] columns, int[] endLines, int[] endColumns);
    parameters:
    - id: offsets
      type: System.Int32[]
      description: "En matrise i der du vil lagre IL forskyvning fra begynnelsen av metoden for punktene i rekkefølge."
    - id: documents
      type: System.Diagnostics.SymbolStore.ISymbolDocument[]
      description: "En matrise der du vil lagre dokumenter sekvensnummer peker finnes i."
    - id: lines
      type: System.Int32[]
      description: "En matrise i der du vil lagre linjene i dokumenter sekvensnummer peker er plassert."
    - id: columns
      type: System.Int32[]
      description: "En matrise som lagrer kolonnene i dokumenter sekvensnummer peker er plassert."
    - id: endLines
      type: System.Int32[]
      description: "Matrisen for linjer i dokumenter som peker sekvensen slutten."
    - id: endColumns
      type: System.Int32[]
      description: "Matrise med kolonner i dokumenter som peker sekvensen slutten."
  overload: System.Diagnostics.SymbolStore.SymMethod.GetSequencePoints*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])
  id: GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])
  parent: System.Diagnostics.SymbolStore.SymMethod
  langs:
  - csharp
  name: GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])
  nameWithType: SymMethod.GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])
  fullName: System.Diagnostics.SymbolStore.SymMethod.GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Oppstår en <xref:System.NotSupportedException>i alle tilfellene.</xref:System.NotSupportedException>"
  syntax:
    content: public virtual bool GetSourceStartEnd (System.Diagnostics.SymbolStore.ISymbolDocument[] docs, int[] lines, int[] columns);
    parameters:
    - id: docs
      type: System.Diagnostics.SymbolStore.ISymbolDocument[]
      description: "Denne parameteren brukes ikke."
    - id: lines
      type: System.Int32[]
      description: "Denne parameteren brukes ikke."
    - id: columns
      type: System.Int32[]
      description: "Denne parameteren brukes ikke."
    return:
      type: System.Boolean
      description: "Oppstår en <xref:System.NotSupportedException>i alle tilfellene.</xref:System.NotSupportedException>"
  overload: System.Diagnostics.SymbolStore.SymMethod.GetSourceStartEnd*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "I alle tilfeller."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymMethod.RootScope
  id: RootScope
  parent: System.Diagnostics.SymbolStore.SymMethod
  langs:
  - csharp
  name: RootScope
  nameWithType: SymMethod.RootScope
  fullName: System.Diagnostics.SymbolStore.SymMethod.RootScope
  type: Property
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Henter roten Leksikalsk omfanget for den gjeldende. Dette området, omslutter du hele metoden."
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolScope RootScope { get; }
    return:
      type: System.Diagnostics.SymbolStore.ISymbolScope
      description: "Root Leksikalsk omfanget som omslutter du hele metoden."
  overload: System.Diagnostics.SymbolStore.SymMethod.RootScope*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymMethod.RootScopeInternal
  id: RootScopeInternal
  parent: System.Diagnostics.SymbolStore.SymMethod
  langs:
  - csharp
  name: RootScopeInternal()
  nameWithType: SymMethod.RootScopeInternal()
  fullName: System.Diagnostics.SymbolStore.SymMethod.RootScopeInternal()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Henter roten Leksikalsk omfanget for den gjeldende. Dette området, omslutter du hele metoden."
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolScope RootScopeInternal ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolScope
      description: "Root Leksikalsk omfanget som omslutter du hele metoden."
  overload: System.Diagnostics.SymbolStore.SymMethod.RootScopeInternal*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymMethod.SequencePointCount
  id: SequencePointCount
  parent: System.Diagnostics.SymbolStore.SymMethod
  langs:
  - csharp
  name: SequencePointCount
  nameWithType: SymMethod.SequencePointCount
  fullName: System.Diagnostics.SymbolStore.SymMethod.SequencePointCount
  type: Property
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Henter en telling av sekvensnummer peker i-metoden."
  syntax:
    content: public virtual int SequencePointCount { get; }
    return:
      type: System.Int32
      description: "Antall sekvensnummer peker i-metoden."
  overload: System.Diagnostics.SymbolStore.SymMethod.SequencePointCount*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymMethod.Token
  id: Token
  parent: System.Diagnostics.SymbolStore.SymMethod
  langs:
  - csharp
  name: Token
  nameWithType: SymMethod.Token
  fullName: System.Diagnostics.SymbolStore.SymMethod.Token
  type: Property
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Henter den <xref href=&quot;System.Diagnostics.SymbolStore.SymbolToken&quot;> </xref> med metadata for den gjeldende."
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.SymbolToken Token { get; }
    return:
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "Metadatatoken for den gjeldende."
  overload: System.Diagnostics.SymbolStore.SymMethod.Token*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.SymbolStore.SymMethodBase
  isExternal: false
  name: System.Diagnostics.SymbolStore.SymMethodBase
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Diagnostics.SymbolStore.SymMethod.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod*)
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: SymMethod(ISymUnmanagedMethod*)
  nameWithType: SymMethod.SymMethod(ISymUnmanagedMethod*)
  fullName: System.Diagnostics.SymbolStore.SymMethod.SymMethod(ISymUnmanagedMethod*)
- uid: System.Diagnostics.SymbolStore.SymMethod.Dispose
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: Dispose()
  nameWithType: SymMethod.Dispose()
  fullName: System.Diagnostics.SymbolStore.SymMethod.Dispose()
- uid: System.Diagnostics.SymbolStore.SymMethod.Dispose(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SymMethod.Dispose(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymMethod.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.SymbolStore.SymMethod.Finalize
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: Finalize()
  nameWithType: SymMethod.Finalize()
  fullName: System.Diagnostics.SymbolStore.SymMethod.Finalize()
- uid: System.Diagnostics.SymbolStore.SymMethod.GetNamespace
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: GetNamespace()
  nameWithType: SymMethod.GetNamespace()
  fullName: System.Diagnostics.SymbolStore.SymMethod.GetNamespace()
- uid: System.Diagnostics.SymbolStore.ISymbolNamespace
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolNamespace
  nameWithType: ISymbolNamespace
  fullName: System.Diagnostics.SymbolStore.ISymbolNamespace
- uid: System.Diagnostics.SymbolStore.SymMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: GetOffset(ISymbolDocument,Int32,Int32)
  nameWithType: SymMethod.GetOffset(ISymbolDocument,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymMethod.GetOffset(ISymbolDocument,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.SymbolStore.ISymbolDocument
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolDocument
  nameWithType: ISymbolDocument
  fullName: System.Diagnostics.SymbolStore.ISymbolDocument
- uid: System.Diagnostics.SymbolStore.SymMethod.GetParameters
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: GetParameters()
  nameWithType: SymMethod.GetParameters()
  fullName: System.Diagnostics.SymbolStore.SymMethod.GetParameters()
- uid: System.Diagnostics.SymbolStore.ISymbolVariable[]
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolVariable
  nameWithType: ISymbolVariable
  fullName: System.Diagnostics.SymbolStore.ISymbolVariable[]
  spec.csharp:
  - uid: System.Diagnostics.SymbolStore.ISymbolVariable
    name: ISymbolVariable
    nameWithType: ISymbolVariable
    fullName: ISymbolVariable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: GetRanges(ISymbolDocument,Int32,Int32)
  nameWithType: SymMethod.GetRanges(ISymbolDocument,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymMethod.GetRanges(ISymbolDocument,Int32,Int32)
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymMethod.GetScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: GetScope(Int32)
  nameWithType: SymMethod.GetScope(Int32)
  fullName: System.Diagnostics.SymbolStore.SymMethod.GetScope(Int32)
- uid: System.Diagnostics.SymbolStore.ISymbolScope
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolScope
  nameWithType: ISymbolScope
  fullName: System.Diagnostics.SymbolStore.ISymbolScope
- uid: System.Diagnostics.SymbolStore.SymMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])
  nameWithType: SymMethod.GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])
  fullName: System.Diagnostics.SymbolStore.SymMethod.GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])
- uid: System.Diagnostics.SymbolStore.ISymbolDocument[]
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolDocument
  nameWithType: ISymbolDocument
  fullName: System.Diagnostics.SymbolStore.ISymbolDocument[]
  spec.csharp:
  - uid: System.Diagnostics.SymbolStore.ISymbolDocument
    name: ISymbolDocument
    nameWithType: ISymbolDocument
    fullName: ISymbolDocument[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])
  nameWithType: SymMethod.GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])
  fullName: System.Diagnostics.SymbolStore.SymMethod.GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])
- uid: System.Diagnostics.SymbolStore.SymMethod.RootScope
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: RootScope
  nameWithType: SymMethod.RootScope
  fullName: System.Diagnostics.SymbolStore.SymMethod.RootScope
- uid: System.Diagnostics.SymbolStore.SymMethod.RootScopeInternal
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: RootScopeInternal()
  nameWithType: SymMethod.RootScopeInternal()
  fullName: System.Diagnostics.SymbolStore.SymMethod.RootScopeInternal()
- uid: System.Diagnostics.SymbolStore.SymMethod.SequencePointCount
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: SequencePointCount
  nameWithType: SymMethod.SequencePointCount
  fullName: System.Diagnostics.SymbolStore.SymMethod.SequencePointCount
- uid: System.Diagnostics.SymbolStore.SymMethod.Token
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: Token
  nameWithType: SymMethod.Token
  fullName: System.Diagnostics.SymbolStore.SymMethod.Token
- uid: System.Diagnostics.SymbolStore.SymbolToken
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: SymbolToken
  nameWithType: SymbolToken
  fullName: System.Diagnostics.SymbolStore.SymbolToken
- uid: System.Diagnostics.SymbolStore.SymMethod.#ctor*
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: SymMethod
  nameWithType: SymMethod.SymMethod
- uid: System.Diagnostics.SymbolStore.SymMethod.Dispose*
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: Dispose
  nameWithType: SymMethod.Dispose
- uid: System.Diagnostics.SymbolStore.SymMethod.Finalize*
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: Finalize
  nameWithType: SymMethod.Finalize
- uid: System.Diagnostics.SymbolStore.SymMethod.GetNamespace*
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: GetNamespace
  nameWithType: SymMethod.GetNamespace
- uid: System.Diagnostics.SymbolStore.SymMethod.GetOffset*
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: GetOffset
  nameWithType: SymMethod.GetOffset
- uid: System.Diagnostics.SymbolStore.SymMethod.GetParameters*
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: GetParameters
  nameWithType: SymMethod.GetParameters
- uid: System.Diagnostics.SymbolStore.SymMethod.GetRanges*
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: GetRanges
  nameWithType: SymMethod.GetRanges
- uid: System.Diagnostics.SymbolStore.SymMethod.GetScope*
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: GetScope
  nameWithType: SymMethod.GetScope
- uid: System.Diagnostics.SymbolStore.SymMethod.GetSequencePoints*
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: GetSequencePoints
  nameWithType: SymMethod.GetSequencePoints
- uid: System.Diagnostics.SymbolStore.SymMethod.GetSourceStartEnd*
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: GetSourceStartEnd
  nameWithType: SymMethod.GetSourceStartEnd
- uid: System.Diagnostics.SymbolStore.SymMethod.RootScope*
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: RootScope
  nameWithType: SymMethod.RootScope
- uid: System.Diagnostics.SymbolStore.SymMethod.RootScopeInternal*
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: RootScopeInternal
  nameWithType: SymMethod.RootScopeInternal
- uid: System.Diagnostics.SymbolStore.SymMethod.SequencePointCount*
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: SequencePointCount
  nameWithType: SymMethod.SequencePointCount
- uid: System.Diagnostics.SymbolStore.SymMethod.Token*
  parent: System.Diagnostics.SymbolStore.SymMethod
  isExternal: false
  name: Token
  nameWithType: SymMethod.Token
