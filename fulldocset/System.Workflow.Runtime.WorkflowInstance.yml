### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.WorkflowInstance
  id: WorkflowInstance
  children:
  - System.Workflow.Runtime.WorkflowInstance.Abort
  - System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  - System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)
  - System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)
  - System.Workflow.Runtime.WorkflowInstance.Equals(System.Object)
  - System.Workflow.Runtime.WorkflowInstance.GetHashCode
  - System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition
  - System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration
  - System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData
  - System.Workflow.Runtime.WorkflowInstance.InstanceId
  - System.Workflow.Runtime.WorkflowInstance.Load
  - System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles
  - System.Workflow.Runtime.WorkflowInstance.Resume
  - System.Workflow.Runtime.WorkflowInstance.Start
  - System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)
  - System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)
  - System.Workflow.Runtime.WorkflowInstance.TryUnload
  - System.Workflow.Runtime.WorkflowInstance.Unload
  - System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowInstance
  nameWithType: WorkflowInstance
  fullName: System.Workflow.Runtime.WorkflowInstance
  type: Class
  summary: "Representerer en arbeidsflytforekomst."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Klassen WorkflowInstance inneholder metoder og egenskaper som kan brukes til å kontrollere kjøringen av en arbeidsflytforekomst; Det er egentlig en proxy for den faktiske arbeidsflytforekomsten som brukes av arbeidsflyten runtime motoren. Vert eller en tjeneste du kan be arbeidsflyten runtime motoren å utføre handlinger på en arbeidsflytforekomst ved å kalle riktig metodene som finnes i WorkflowInstance klassen.  Hvis den ønskede handlingen ikke er gyldig for eksempel hvis verten kaller <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A>arbeidsflyten runtime motoren vil vise et passende unntak på en arbeidsflytforekomst som er allerede fullført.</xref:System.Workflow.Runtime.WorkflowInstance.Load%2A>      > [!NOTE] > Om en arbeidsflytforekomst ikke svarer fordi en oppringing på vertsprogram ikke returnerer, er den eneste måten å gjenopprette forekomsten starte kjøretiden. Imidlertid Hvis forekomsten vil bli lastet tvang, avbrutt eller deaktiveres, den kan fortsette ved å kalle den <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=fullName>metoden.</xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how you can create and start a WorkflowInstance in a workflow host. The code creates an instance of the <xref:System.Workflow.Runtime.WorkflowRuntime>, adds services to the runtime, and then demonstrates the recommended way to create a WorkflowInstance object. The code initializes WorkflowInstance by calling the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method and passing the previously created type to it. The WorkflowInstance is started with the <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> method call.  \n  \n This code example is part of the Canceling a Workflow SDK sample from the Program.cs file. For more information, see [Canceling a Workflow](http://msdn.microsoft.com/en-us/d5077f56-a78b-48e7-825c-f6c77c8e54fb).  \n  \n [!code-cs[WF_Samples#260](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#260)]\n [!code-vb[WF_Samples#260](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#260)]"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public sealed class WorkflowInstance
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowInstance.Abort
  id: Abort
  parent: System.Workflow.Runtime.WorkflowInstance
  langs:
  - csharp
  name: Abort()
  nameWithType: WorkflowInstance.Abort()
  fullName: System.Workflow.Runtime.WorkflowInstance.Abort()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Avbryter arbeidsflytforekomsten."
  remarks: "Arbeidsflytforekomsten ble avbrutt på en synkron måte; Det vil si returneres når arbeidsflytforekomsten ble avbrutt. Arbeidsflyten runtime motoren ugyldiggjøres arbeidsflytforekomsten i minnet, og fjerner <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> Hvis ingen fast tjeneste ble brukt av din arbeidsflytforekomsten, utføres alle arbeid fordi det siste punktet utholdenhet er slettes. Når den avbryter arbeidsflytforekomsten, arbeidsflyt runtime motoren opphøyer den <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted>hendelsen.</xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> Du kan ringe <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A>for å laste inn arbeidsflytforekomsten og starte fra det siste punktet utholdenhet.</xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A>       `Abort`er forskjellig fra <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A>i at `Abort` bare tømmes i minnet arbeidsflytforekomsten og startes på nytt fra det siste punktet i utholdenhet Avslutt tømmes arbeidsflytforekomsten i minnet, og informerer om tjenesten utholdenhet at forekomsten er fjernet fra minnet.</xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> For den <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, dette betyr at alle tilstandsinformasjon for at arbeidsflytforekomsten er slettet fra databasen ved avslutning.</xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> Du kan ikke laste inn arbeidsflytforekomsten fra et tidligere lagret utholdenhet."
  example:
  - "The following example demonstrates calling Abort on a workflow instance of type Workflow1.  \n  \n [!code-cs[WF_Samples#13](~/add/codesnippet/csharp/wf_snippets/snippets.cs#13)]\n [!code-vb[WF_Samples#13](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#13)]"
  syntax:
    content: public void Abort ();
    parameters: []
  overload: System.Workflow.Runtime.WorkflowInstance.Abort*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Arbeidsflyten runtime databasemotoren kjører ikke."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  id: ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  parent: System.Workflow.Runtime.WorkflowInstance
  langs:
  - csharp
  name: ApplyWorkflowChanges(WorkflowChanges)
  nameWithType: WorkflowInstance.ApplyWorkflowChanges(WorkflowChanges)
  fullName: System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(WorkflowChanges)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Bruker endringer på arbeidsflytforekomsten som er angitt av den <xref href=&quot;System.Workflow.ComponentModel.WorkflowChanges&quot;> </xref> objektet."
  remarks: "Hvis arbeidsflytforekomsten ikke allerede er deaktivert, deaktiverer arbeidsflyten runtime motoren midlertidig forekomsten før endringene."
  example:
  - "The following example demonstrates calling ApplyWorkflowChanges to a <xref:System.Workflow.Runtime.WorkflowInstance> object.  This example is from the Ordering State Machine SDK sample, from the Mainform.cs file.  For more information, see the [Ordering State Machine Sample](http://msdn.microsoft.com/en-us/59272cf4-bc98-439c-bcfa-b66999ebce5c).  \n  \n [!code-cs[WF_Samples#89](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#89)]\n [!code-vb[WF_Samples#89](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#89)]"
  syntax:
    content: public void ApplyWorkflowChanges (System.Workflow.ComponentModel.WorkflowChanges workflowChanges);
    parameters:
    - id: workflowChanges
      type: System.Workflow.ComponentModel.WorkflowChanges
      description: "En <xref href=&quot;System.Workflow.ComponentModel.WorkflowChanges&quot;> </xref> angir dynamiske oppdateringer for arbeidsflytforekomsten."
  overload: System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Arbeidsflyten runtime databasemotoren kjører ikke."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)
  id: EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)
  parent: System.Workflow.Runtime.WorkflowInstance
  langs:
  - csharp
  name: EnqueueItem(IComparable,Object,IPendingWork,Object)
  nameWithType: WorkflowInstance.EnqueueItem(IComparable,Object,IPendingWork,Object)
  fullName: System.Workflow.Runtime.WorkflowInstance.EnqueueItem(IComparable,Object,IPendingWork,Object)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Legger en melding til den angitte arbeidsflyt køen synkront."
  remarks: "Sender den `item` til den angitte <xref:System.Workflow.Runtime.WorkflowQueue>.</xref:System.Workflow.Runtime.WorkflowQueue> Hvis du vil bli varslet når leveres meldingen, du kan implementere <xref:System.Workflow.Runtime.IPendingWork>service, og pass en `workItem` og en <xref:System.Workflow.Runtime.IPendingWork>objekt EnqueueItem.</xref:System.Workflow.Runtime.IPendingWork> </xref:System.Workflow.Runtime.IPendingWork> Hvis du ikke vil varsling om, kan du sende en nullreferanse (`Nothing` i Visual Basic) for `pendingWork` og `workItem`.       Når du bruker denne metoden i en tilstand maskinen arbeidsflyt, kan du få et unntak med meldingen &quot;køen: {0} ikke er aktivert.&quot; Dette skjer når den gjeldende tilstanden til maskin for tilstand ikke vet behandlingsmåten for en bestemt hendelse. For eksempel når en annen tilstand enn den gjeldende tilstanden inneholder den <xref:System.Workflow.Activities.EventDrivenActivity>som inneholder den <xref:System.Workflow.Activities.HandleExternalEventActivity>som representeres av køen, {0}.</xref:System.Workflow.Activities.HandleExternalEventActivity> </xref:System.Workflow.Activities.EventDrivenActivity>      > [!NOTE] > Meldinger garanteres mottas av arbeidsflytforekomsten i rekkefølgen som de ble sendt. For eksempel hvis mottak av en melding i en eksisterende kø (køen A) gjør at en arbeidsflyt til å opprette en annen kø (køen B), som lytter for en ny melding sendt etter den første meldingen, er det mulig at den andre meldingen kommer først, og vil ikke bli mottatt på grunn av køen som enda ikke opprettet. For å unngå problemet, den andre meldingen kan ikke sendes til tilstedeværelsen av andre køen er bekreftet (ved hjelp av <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>.)</xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>"
  example:
  - "The following code example demonstrates how to use EnqueueItem. When the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event occurs, the `OnWorkflowIdled` method defined in this example is called. It determines which workflow is idled using the <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> property and then gets a collection of queued items for the workflow instance by calling the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> method. The code iterates over the collection to determine which activity is waiting for the event that idled the workflow. It then sends an exception to the workflow queue using the EnqueueItem method along with the name of the event queue item.  \n  \n This code example is part of the Canceling a Workflow SDK sample from the Program.cs file. For more information, see [Canceling a Workflow](http://msdn.microsoft.com/en-us/d5077f56-a78b-48e7-825c-f6c77c8e54fb).  \n  \n [!code-cs[WF_Samples#261](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#261)]\n [!code-vb[WF_Samples#261](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#261)]"
  syntax:
    content: public void EnqueueItem (IComparable queueName, object item, System.Workflow.Runtime.IPendingWork pendingWork, object workItem);
    parameters:
    - id: queueName
      type: System.IComparable
      description: "Navnet på den <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref>."
    - id: item
      type: System.Object
      description: "Objektet som køplassering."
    - id: pendingWork
      type: System.Workflow.Runtime.IPendingWork
      description: "En <xref href=&quot;System.Workflow.Runtime.IPendingWork&quot;> </xref> som gjør det mulig avsenderen som skal varsles når `item` leveres."
    - id: workItem
      type: System.Object
      description: "Et objekt som skal sendes til den <xref href=&quot;System.Workflow.Runtime.IPendingWork&quot;> </xref> metoder."
  overload: System.Workflow.Runtime.WorkflowInstance.EnqueueItem*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>queueName</code>er en nullreferanse (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Arbeidsflyten runtime databasemotoren kjører ikke.       - eller - <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref> angitt av <code> queueName </code> finnes ikke.       - eller - <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref> angitt av <code> queueName </code> er ikke aktivert."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)
  id: EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)
  parent: System.Workflow.Runtime.WorkflowInstance
  langs:
  - csharp
  name: EnqueueItemOnIdle(IComparable,Object,IPendingWork,Object)
  nameWithType: WorkflowInstance.EnqueueItemOnIdle(IComparable,Object,IPendingWork,Object)
  fullName: System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(IComparable,Object,IPendingWork,Object)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Legger en melding til køen angitt arbeidsflyten når arbeidsflyten er inaktiv. EnqueueItemOnIdle venter til arbeidsflyten når en inaktiv punkt- og enqueues etter å ha kontrollert at arbeidsflyten scheduler er inaktiv (det vil si ingen aktive operasjon utføres)."
  remarks: "Venter på arbeidsflytforekomsten skal bli inaktiv og sender den `item` til den angitte <xref:System.Workflow.Runtime.WorkflowQueue>.</xref:System.Workflow.Runtime.WorkflowQueue> Hvis du kaller EnqueueItemOnIdle mens arbeidsflytforekomsten er deaktivert, throw arbeidsflyt runtime motoren <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> Hvis du vil bli varslet når leveres meldingen, du kan implementere <xref:System.Workflow.Runtime.IPendingWork>service, og pass en `workItem` og et <xref:System.Workflow.Runtime.IPendingWork>objekt <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> </xref:System.Workflow.Runtime.IPendingWork> </xref:System.Workflow.Runtime.IPendingWork> Hvis du ikke vil varsling om, kan du sende en nullreferanse (`Nothing` i Visual Basic) for `pendingWork` og `workItem`.       Når du bruker denne metoden i en tilstand maskinen arbeidsflyt, kan du få et unntak som inneholder meldingen &quot;Køen: {0} er ikke aktivert.&quot; Dette skjer når den gjeldende tilstanden til maskin for tilstand ikke vet behandlingsmåten for en bestemt hendelse. For eksempel når en annen tilstand enn den gjeldende tilstanden inneholder den <xref:System.Workflow.Activities.EventDrivenActivity>som inneholder den <xref:System.Workflow.Activities.HandleExternalEventActivity>som representeres av køen, {0}.</xref:System.Workflow.Activities.HandleExternalEventActivity> </xref:System.Workflow.Activities.EventDrivenActivity>"
  example:
  - "The following example demonstrates sending information to a workflow instance using the `EnqueueItemOnIdle` method. First, a WorkflowInstance object is created and started; next, an object that implements the <xref:System.Workflow.Runtime.IPendingWork> interface is created. `EnqueueItemOnIdle` is then called, passing in string values for the queue name, the enqueued item, and the work item to be passed to the methods of the pendingWork object.  \n  \n [!code-cs[WF_Samples#12](~/add/codesnippet/csharp/wf_snippets/snippets.cs#12)]\n [!code-vb[WF_Samples#12](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#12)]"
  syntax:
    content: public void EnqueueItemOnIdle (IComparable queueName, object item, System.Workflow.Runtime.IPendingWork pendingWork, object workItem);
    parameters:
    - id: queueName
      type: System.IComparable
      description: "Navnet på den <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref>."
    - id: item
      type: System.Object
      description: "Objektet som køplassering."
    - id: pendingWork
      type: System.Workflow.Runtime.IPendingWork
      description: "En <xref href=&quot;System.Workflow.Runtime.IPendingWork&quot;> </xref> som gjør det mulig avsenderen som skal varsles når `item` leveres."
    - id: workItem
      type: System.Object
      description: "Et objekt som skal sendes til den <xref href=&quot;System.Workflow.Runtime.IPendingWork&quot;> </xref> metoder."
  overload: System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>queueName</code>er en nullreferanse (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Arbeidsflyten runtime databasemotoren kjører ikke.       - eller - arbeidsflytforekomsten er fullført.       - eller - <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref> angitt av <code> queueName </code> finnes ikke.       - eller - <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref> angitt av <code> queueName </code> er ikke aktivert."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowInstance.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Workflow.Runtime.WorkflowInstance
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: WorkflowInstance.Equals(Object)
  fullName: System.Workflow.Runtime.WorkflowInstance.Equals(Object)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Returnerer en verdi som angir om det angitte objektet er lik den <xref href=&quot;System.Workflow.Runtime.WorkflowInstance&quot;> </xref>."
  remarks: "Objektet må være en forekomst av <xref:System.Workflow.Runtime.WorkflowInstance>klassen og har den samme <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A>som <xref:System.Workflow.Runtime.WorkflowInstance>.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> </xref:System.Workflow.Runtime.WorkflowInstance>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Objektet som skal sammenlignes."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis det angitte objektet er lik dette <xref href=&quot;System.Workflow.Runtime.WorkflowInstance&quot;> </xref>; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Runtime.WorkflowInstance.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowInstance.GetHashCode
  id: GetHashCode
  parent: System.Workflow.Runtime.WorkflowInstance
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: WorkflowInstance.GetHashCode()
  fullName: System.Workflow.Runtime.WorkflowInstance.GetHashCode()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Returnerer hashkoden for denne arbeidsflytforekomsten."
  remarks: "GetHashCode returnerer en hash-kode som er basert på verdien for <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A>.</xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Hash-kode for denne <xref href=&quot;System.Workflow.Runtime.WorkflowInstance&quot;> </xref>."
  overload: System.Workflow.Runtime.WorkflowInstance.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition
  id: GetWorkflowDefinition
  parent: System.Workflow.Runtime.WorkflowInstance
  langs:
  - csharp
  name: GetWorkflowDefinition()
  nameWithType: WorkflowInstance.GetWorkflowDefinition()
  fullName: System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Henter den primære aktiviteten for denne arbeidsflytforekomsten."
  remarks: "Du kan bruke den primære aktiviteten for å navigere aktivitetshierarkiet for arbeidsflyten.       Denne metoden er ikke tråd trygt, så verten bør synkronisere kallene til denne metoden."
  example:
  - "The following example demonstrates retrieving the workflow definition from a workflow instance.  This example is from the Ordering State Machine SDK sample, from the Mainform.cs file.  For more information, see the [Ordering State Machine Sample](http://msdn.microsoft.com/en-us/59272cf4-bc98-439c-bcfa-b66999ebce5c).  \n  \n [!code-cs[WF_Samples#86](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#86)]\n [!code-vb[WF_Samples#86](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#86)]"
  syntax:
    content: public System.Workflow.ComponentModel.Activity GetWorkflowDefinition ();
    parameters: []
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "En <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> objektet."
  overload: System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration
  id: GetWorkflowNextTimerExpiration
  parent: System.Workflow.Runtime.WorkflowInstance
  langs:
  - csharp
  name: GetWorkflowNextTimerExpiration()
  nameWithType: WorkflowInstance.GetWorkflowNextTimerExpiration()
  fullName: System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Returnerer neste peker i tid som denne <xref href=&quot;System.Workflow.Runtime.WorkflowInstance&quot;> </xref> er planlagt å levere en tidtaker-melding."
  remarks: ''
  example:
  - "The following example demonstrates using the GetWorkflowNextTimerExpiration method to determine if more workflow timer messages are enqueued. This example is from the WorkflowThreading SDK sample, from the Program.cs file. For more information, see [Workflow Threading Sample](http://msdn.microsoft.com/en-us/5b650be7-09fa-47db-a2f6-523dc8ea5ee9).  \n  \n [!code-cs[WF_Samples#284](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#284)]\n [!code-vb[WF_Samples#284](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#284)]"
  syntax:
    content: public DateTime GetWorkflowNextTimerExpiration ();
    parameters: []
    return:
      type: System.DateTime
      description: "En dato/klokkeslett-verdi som representerer neste <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt*>time dette <xref href=&quot;System.Workflow.Runtime.WorkflowInstance&quot;> </xref> vil bli levert en tidtaker-melding.</xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt*>"
  overload: System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData
  id: GetWorkflowQueueData
  parent: System.Workflow.Runtime.WorkflowInstance
  langs:
  - csharp
  name: GetWorkflowQueueData()
  nameWithType: WorkflowInstance.GetWorkflowQueueData()
  fullName: System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Henter en samling av <xref href=&quot;System.Workflow.Runtime.WorkflowQueueInfo&quot;> </xref> objekter som inneholder elementer som skal og abonnerer aktiviteter for arbeidsflyt-køene som er forbundet med denne arbeidsflytforekomsten."
  remarks: "GetWorkflowQueueData returnerer en samling av <xref:System.Workflow.Runtime.WorkflowQueueInfo>objekter, som inneholder informasjon om tilstanden til en arbeidsflyt-køene som er forbundet med denne arbeidsflytforekomsten.</xref:System.Workflow.Runtime.WorkflowQueueInfo> <xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=fullName>inneholder elementer som skal for <xref:System.Workflow.Runtime.WorkflowQueue>og <xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=fullName>inneholder en liste over aktivitetene som abonnerer for elementet levering <xref:System.Workflow.Runtime.WorkflowQueue>.</xref:System.Workflow.Runtime.WorkflowQueue> </xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=fullName> </xref:System.Workflow.Runtime.WorkflowQueue></xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how you can use the GetWorkflowQueueData method to obtain information about the state of all workflow queues associated with a <xref:System.Workflow.Runtime.WorkflowInstance> object. When the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event occurs, the `OnWorkflowIdled` method defined in this example is called. It determines which workflow is idled using the <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> property and then gets a collection of queued items for the workflow instance by calling the GetWorkflowQueueData method. The code iterates over the collection to determine which activity is waiting for the event that idled the workflow. It then sends an exception to the workflow queue using the <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> method along with the name of the event queue item.  \n  \n This code example is part of the Canceling a Workflow SDK sample from the Program.cs file. For more information, see [Canceling a Workflow](http://msdn.microsoft.com/en-us/d5077f56-a78b-48e7-825c-f6c77c8e54fb).  \n  \n [!code-cs[WF_Samples#261](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#261)]\n [!code-vb[WF_Samples#261](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#261)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Workflow.Runtime.WorkflowQueueInfo> GetWorkflowQueueData ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.Runtime.WorkflowQueueInfo}
      description: "En &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; av <xref href=&quot;System.Workflow.Runtime.WorkflowQueueInfo&quot;> </xref> objekter."
  overload: System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Arbeidsflyten runtime databasemotoren kjører ikke."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowInstance.InstanceId
  id: InstanceId
  parent: System.Workflow.Runtime.WorkflowInstance
  langs:
  - csharp
  name: InstanceId
  nameWithType: WorkflowInstance.InstanceId
  fullName: System.Workflow.Runtime.WorkflowInstance.InstanceId
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Henter den unike identifikatoren for arbeidsflytforekomsten."
  remarks: "Du kan bruke InstanceId for å referere til arbeidsflytforekomsten."
  example:
  - "The following code example demonstrates how you can use the InstanceId property to obtain information about a <xref:System.Workflow.Runtime.WorkflowInstance> object. The first code snippet creates a <xref:System.Workflow.Runtime.WorkflowInstance> variable named `instanceId`.  \n  \n [!code-cs[WF_Samples#210](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#210)]\n [!code-vb[WF_Samples#210](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#210)]  \n  \n The second snippet uses the InstanceId property as the first object in an `OrderEventArgs` constructor call when the `CallBackForApproval` method is called.  \n  \n This code example is part of the Listen SDK Sample from the OrderServiceImple.cs file. For more information, see [Listen Sample](http://msdn.microsoft.com/en-us/1cec0e82-7544-429f-b717-0fc25eb42b7f).  \n  \n [!code-cs[WF_Samples#211](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#211)]\n [!code-vb[WF_Samples#211](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#211)]"
  syntax:
    content: public Guid InstanceId { get; }
    return:
      type: System.Guid
      description: "Den <xref:System.Guid>til arbeidsflytforekomsten.</xref:System.Guid>"
  overload: System.Workflow.Runtime.WorkflowInstance.InstanceId*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowInstance.Load
  id: Load
  parent: System.Workflow.Runtime.WorkflowInstance
  langs:
  - csharp
  name: Load()
  nameWithType: WorkflowInstance.Load()
  fullName: System.Workflow.Runtime.WorkflowInstance.Load()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Laster inn en tidligere utlastet arbeidsflytforekomst."
  remarks: "Er synkron; Hvis arbeidsflytforekomsten kan lastes, tilbakestiller innlasting etter arbeidsflytforekomsten er lastet inn i minnet og planlagt av arbeidsflyten runtime motoren. Kjøretiden opphøyer den <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded>hendelsen etter utholdenhet-tjenesten har gjenopprettet arbeidsflytforekomsten i minnet, men før arbeidsflyten planlegger runtime motoren forekomsten.</xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded>"
  example:
  - "The following example demonstrates how to load a previously unloaded <xref:System.Workflow.Runtime.WorkflowInstance> object.  \n  \n [!code-cs[WF_Samples#10](~/add/codesnippet/csharp/wf_snippets/snippets.cs#10)]\n [!code-vb[WF_Samples#10](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#10)]"
  syntax:
    content: public void Load ();
    parameters: []
  overload: System.Workflow.Runtime.WorkflowInstance.Load*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Arbeidsflyten runtime databasemotoren kjører ikke."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles
  id: ReloadTrackingProfiles
  parent: System.Workflow.Runtime.WorkflowInstance
  langs:
  - csharp
  name: ReloadTrackingProfiles()
  nameWithType: WorkflowInstance.ReloadTrackingProfiles()
  fullName: System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Last inn sporing-profiler for denne arbeidsflytforekomsten."
  remarks: "Kjøring sporing infrastruktur Last inn hver <xref:System.Workflow.Runtime.Tracking.TrackingProfile>for denne arbeidsflytforekomsten som er knyttet til de sporing kanalene.</xref:System.Workflow.Runtime.Tracking.TrackingProfile> Hvis den ikke allerede er i deaktivert tilstand, stanses midlertidig arbeidsflyten av kjøretiden sporing infrastruktur under sporing-profiler er lastet inn på nytt."
  syntax:
    content: public void ReloadTrackingProfiles ();
    parameters: []
  overload: System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Arbeidsflyten runtime databasemotoren kjører ikke."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowInstance.Resume
  id: Resume
  parent: System.Workflow.Runtime.WorkflowInstance
  langs:
  - csharp
  name: Resume()
  nameWithType: WorkflowInstance.Resume()
  fullName: System.Workflow.Runtime.WorkflowInstance.Resume()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Gjenopptar kjøringen av en tidligere avbrutt arbeidsflytforekomsten."
  remarks: "Verten kan ringe Fortsett for å fortsette kjøringen av en arbeidsflytforekomst som tidligere har stoppet. Hvis arbeidsflytforekomsten ikke er deaktivert, ble ingen handling utført. Kjøretiden opphøyer den <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed>hendelsen like før kjøringen av arbeidsflytforekomsten er gjenopptatt.</xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed>"
  example:
  - "The following example demonstrates calling Resume on a previously suspended workflow instance.  This example is from the Suspend and Terminate SDK sample.  For more information, see [Suspend and Terminate Sample](http://msdn.microsoft.com/en-us/f4dffa58-d01e-44fb-b5a1-3b283d2c4517).  \n  \n [!code-cs[WF_Samples#172](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#172)]\n [!code-vb[WF_Samples#172](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#172)]"
  syntax:
    content: public void Resume ();
    parameters: []
  overload: System.Workflow.Runtime.WorkflowInstance.Resume*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Arbeidsflyten runtime databasemotoren kjører ikke."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowInstance.Start
  id: Start
  parent: System.Workflow.Runtime.WorkflowInstance
  langs:
  - csharp
  name: Start()
  nameWithType: WorkflowInstance.Start()
  fullName: System.Workflow.Runtime.WorkflowInstance.Start()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Starter kjøringen av arbeidsflytforekomsten."
  remarks: "Start kall <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A>på roten aktiviteten til denne arbeidsflytforekomsten.</xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> Hvis Start oppstår et unntak, avbrytes arbeidsflytforekomsten ved å kalle <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A>med den <xref:System.Exception.Message%2A>for unntaket sendt som årsaken til avslutningen.</xref:System.Exception.Message%2A> </xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A>"
  example:
  - "The following code example demonstrates how you can use the Start method to start a <xref:System.Workflow.Runtime.WorkflowInstance> in a workflow host. The code creates an instance of the <xref:System.Workflow.Runtime.WorkflowRuntime>, adds services to the runtime, and then demonstrates the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object. It creates a <xref:System.Type> object and casts it to one of the workflow objects with which the host is associated. The code next initializes <xref:System.Workflow.Runtime.WorkflowInstance> by calling the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method and passing the previously created type to it. The <xref:System.Workflow.Runtime.WorkflowInstance> is started with the Start method call.  \n  \n This code example is part of the Canceling a Workflow SDK sample from the Program.cs file. For more information, see [Canceling a Workflow](http://msdn.microsoft.com/en-us/d5077f56-a78b-48e7-825c-f6c77c8e54fb).  \n  \n [!code-cs[WF_Samples#260](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#260)]\n [!code-vb[WF_Samples#260](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#260)]"
  syntax:
    content: public void Start ();
    parameters: []
  overload: System.Workflow.Runtime.WorkflowInstance.Start*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Arbeidsflyten runtime databasemotoren kjører ikke.       - eller - arbeidsflytforekomsten er allerede startet."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)
  id: Suspend(System.String)
  parent: System.Workflow.Runtime.WorkflowInstance
  langs:
  - csharp
  name: Suspend(String)
  nameWithType: WorkflowInstance.Suspend(String)
  fullName: System.Workflow.Runtime.WorkflowInstance.Suspend(String)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Stopper arbeidsflytforekomsten."
  remarks: "Arbeidsflytforekomsten er stoppet på en synkron måte. Hvis arbeidsflytforekomsten er allerede stoppet, vil ingen handling ble utført; Ellers arbeidsflyten runtime motoren stopper arbeidsflytforekomsten hever den <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended>hendelsen og formidler `reason` i <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs>.</xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended>      > [!NOTE] > Hvile blir ikke fjernet arbeidsflytforekomsten."
  example:
  - "The following code example demonstrates calling Suspend on a <xref:System.Workflow.Runtime.WorkflowInstance> object.  \n  \n [!code-cs[WF_Samples#9](~/add/codesnippet/csharp/wf_snippets/snippets.cs#9)]\n [!code-vb[WF_Samples#9](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#9)]"
  syntax:
    content: public void Suspend (string error);
    parameters:
    - id: error
      type: System.String
      description: "En beskrivelse av årsak for å utsette arbeidsflytforekomsten."
  overload: System.Workflow.Runtime.WorkflowInstance.Suspend*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Arbeidsflyten runtime databasemotoren kjører ikke."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)
  id: Terminate(System.String)
  parent: System.Workflow.Runtime.WorkflowInstance
  langs:
  - csharp
  name: Terminate(String)
  nameWithType: WorkflowInstance.Terminate(String)
  fullName: System.Workflow.Runtime.WorkflowInstance.Terminate(String)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Avslutter arbeidsflytforekomsten på en synkron måte."
  remarks: "Arbeidsflytforekomsten avsluttes på en synkron måte. Verten kaller Avslutt avslutte arbeidsflytforekomsten. Arbeidsflyten runtime motoren tømmes i minnet arbeidsflytforekomsten og informerer tjenesten utholdenhet at forekomsten er fjernet fra minnet. For den <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, dette betyr at alle tilstandsinformasjon for at arbeidsflytforekomsten er slettet fra databasen ved avslutning.</xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> Du kan ikke laste inn arbeidsflytforekomsten fra et tidligere lagret utholdenhet.       Når i minnet arbeidsflytforekomsten fjernes, og tjenesten utholdenhet informert om avslutning, den `Terminate` metoden hever den <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated>hendelsen og formidler `reason` i <xref:System.Exception.Message%2A>egenskapen for et <xref:System.Workflow.ComponentModel.WorkflowTerminatedException>finnes i <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs>.</xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs> </xref:System.Workflow.ComponentModel.WorkflowTerminatedException> </xref:System.Exception.Message%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated>       `Terminate`er forskjellig fra <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A>i som under Avslutt fjernes i minnet arbeidsflytforekomsten og informerer tjenesten utholdenhet avslutning, `Abort` tømmes ganske enkelt i minnet arbeidsflytforekomsten, som kan startes på nytt fra det siste punktet utholdenhet.</xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A>"
  example:
  - "The following code example demonstrates calling Terminate on a <xref:System.Workflow.Runtime.WorkflowInstance> object.  \n  \n [!code-cs[WF_Samples#8](~/add/codesnippet/csharp/wf_snippets/snippets.cs#8)]\n [!code-vb[WF_Samples#8](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#8)]"
  syntax:
    content: public void Terminate (string error);
    parameters:
    - id: error
      type: System.String
      description: "En beskrivelse av årsaken til avslutter arbeidsflytforekomsten."
  overload: System.Workflow.Runtime.WorkflowInstance.Terminate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Arbeidsflyten runtime databasemotoren kjører ikke."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowInstance.TryUnload
  id: TryUnload
  parent: System.Workflow.Runtime.WorkflowInstance
  langs:
  - csharp
  name: TryUnload()
  nameWithType: WorkflowInstance.TryUnload()
  fullName: System.Workflow.Runtime.WorkflowInstance.TryUnload()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Laster ut arbeidsflytforekomsten fra minnet til vedvarende lager når forekomsten er deaktivert eller inaktiv."
  remarks: "Hvis arbeidsflytforekomsten er inaktiv eller avbrutte, bruker TryUnload utholdenhet tjenesten å fjerne arbeidsflytforekomsten fra minnet og beholde den til en datalageret. Hvis det finnes ingen utholdenhet-tjeneste som er registrert med <xref:System.Workflow.Runtime.WorkflowRuntime>oppstår det et <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> TryUnload</xref:System.Workflow.Runtime.WorkflowRuntime> Hvis arbeidsflytforekomsten er vellykket fast, kjøretiden opphøyer den <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded>hendelsen, og returnerer `true`.</xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A>Returnerer `false` Hvis arbeidsflytforekomsten allerede er lastet ut, er avsluttet, ble avbrutt eller er allerede fullført.</xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A>       Verten kan bruke TryUnload for å frigjøre systemressurser fra en inaktiv arbeidsflyten."
  example:
  - "The following example demonstrates using the TryUnload method to unload a workflow when the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event fires. This example is from the Using Persistence Services SDK sample, from the Program.cs file. For more information, see [Using Persistence Services Sample](http://msdn.microsoft.com/en-us/3176b7e7-ae49-4d5c-802b-85032d6ebde6).  \n  \n [!code-cs[WF_Samples#280](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#280)]\n [!code-vb[WF_Samples#280](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#280)]"
  syntax:
    content: public bool TryUnload ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis arbeidsflytforekomsten ble utlastet; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Runtime.WorkflowInstance.TryUnload*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det finnes ingen utholdenhet-tjeneste som er registrert med arbeidsflyten runtime-motoren."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowInstance.Unload
  id: Unload
  parent: System.Workflow.Runtime.WorkflowInstance
  langs:
  - csharp
  name: Unload()
  nameWithType: WorkflowInstance.Unload()
  fullName: System.Workflow.Runtime.WorkflowInstance.Unload()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Laster ut arbeidsflytforekomsten fra minnet til vedvarende lager. Kallet blokkerer før etter at det gjeldende planlagte arbeidet er ferdig, eller på slutten av en transaksjonsområdet."
  remarks: "Last opp er synkron; Det vil si returneres når du har fullført handlingen som utføres. Hvis arbeidsflytforekomsten er inaktiv, venter kjøretiden til forekomsten kan avbrytes. En forekomst kan bare avbrytes etter at gjeldende planlagte arbeidselementet er fullført; Dette er vanligvis når kjørende aktiviteten returnerer fra den <xref:System.Workflow.ComponentModel.Activity.Execute%2A>metoden.</xref:System.Workflow.ComponentModel.Activity.Execute%2A> Men hvis forekomsten kjører en <xref:System.Workflow.ComponentModel.TransactionScopeActivity>, transaksjonsområdet må fullføres kjøring før forekomsten kan avbrytes.</xref:System.Workflow.ComponentModel.TransactionScopeActivity> Last opp bruker tjenesten utholdenhet fjerne arbeidsflytforekomsten fra minnet og vedvarer til en datalageret. Hvis det finnes ingen utholdenhet-tjeneste som er registrert med <xref:System.Workflow.Runtime.WorkflowRuntime>oppstår det et <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> fjerning</xref:System.Workflow.Runtime.WorkflowRuntime> Hvis arbeidsflytforekomsten er vellykket fast, kjøretiden opphøyer den <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded>hendelsen.</xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded>       Verten kan bruke fjerning for å frigjøre systemressurser fra en inaktiv arbeidsflyten."
  example:
  - "The following example demonstrates calling Unload on a <xref:System.Workflow.Runtime.WorkflowInstance> object.  \n  \n [!code-cs[WF_Samples#11](~/add/codesnippet/csharp/wf_snippets/snippets.cs#11)]\n [!code-vb[WF_Samples#11](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#11)]"
  syntax:
    content: public void Unload ();
    parameters: []
  overload: System.Workflow.Runtime.WorkflowInstance.Unload*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det finnes ingen utholdenhet-tjeneste som er registrert med arbeidsflyten runtime-motoren."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime
  id: WorkflowRuntime
  parent: System.Workflow.Runtime.WorkflowInstance
  langs:
  - csharp
  name: WorkflowRuntime
  nameWithType: WorkflowInstance.WorkflowRuntime
  fullName: System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Henter den <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> for denne arbeidsflytforekomsten."
  remarks: ''
  example:
  - "The following example demonstrates accessing the executing <xref:System.Workflow.Runtime.WorkflowRuntime> of a <xref:System.Workflow.Runtime.WorkflowInstance> object.  \n  \n [!code-cs[WF_Samples#7](~/add/codesnippet/csharp/wf_snippets/snippets.cs#7)]\n [!code-vb[WF_Samples#7](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#7)]"
  syntax:
    content: public System.Workflow.Runtime.WorkflowRuntime WorkflowRuntime { get; }
    return:
      type: System.Workflow.Runtime.WorkflowRuntime
      description: "En <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> som representerer kjøring miljøet som denne arbeidsflytforekomsten kjører."
  overload: System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Workflow.Runtime.WorkflowInstance.Abort
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: Abort()
  nameWithType: WorkflowInstance.Abort()
  fullName: System.Workflow.Runtime.WorkflowInstance.Abort()
- uid: System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: ApplyWorkflowChanges(WorkflowChanges)
  nameWithType: WorkflowInstance.ApplyWorkflowChanges(WorkflowChanges)
  fullName: System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(WorkflowChanges)
- uid: System.Workflow.ComponentModel.WorkflowChanges
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: WorkflowChanges
  nameWithType: WorkflowChanges
  fullName: System.Workflow.ComponentModel.WorkflowChanges
- uid: System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: EnqueueItem(IComparable,Object,IPendingWork,Object)
  nameWithType: WorkflowInstance.EnqueueItem(IComparable,Object,IPendingWork,Object)
  fullName: System.Workflow.Runtime.WorkflowInstance.EnqueueItem(IComparable,Object,IPendingWork,Object)
- uid: System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Workflow.Runtime.IPendingWork
  parent: System.Workflow.Runtime
  isExternal: false
  name: IPendingWork
  nameWithType: IPendingWork
  fullName: System.Workflow.Runtime.IPendingWork
- uid: System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: EnqueueItemOnIdle(IComparable,Object,IPendingWork,Object)
  nameWithType: WorkflowInstance.EnqueueItemOnIdle(IComparable,Object,IPendingWork,Object)
  fullName: System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(IComparable,Object,IPendingWork,Object)
- uid: System.Workflow.Runtime.WorkflowInstance.Equals(System.Object)
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: Equals(Object)
  nameWithType: WorkflowInstance.Equals(Object)
  fullName: System.Workflow.Runtime.WorkflowInstance.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Runtime.WorkflowInstance.GetHashCode
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: GetHashCode()
  nameWithType: WorkflowInstance.GetHashCode()
  fullName: System.Workflow.Runtime.WorkflowInstance.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: GetWorkflowDefinition()
  nameWithType: WorkflowInstance.GetWorkflowDefinition()
  fullName: System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition()
- uid: System.Workflow.ComponentModel.Activity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
- uid: System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: GetWorkflowNextTimerExpiration()
  nameWithType: WorkflowInstance.GetWorkflowNextTimerExpiration()
  fullName: System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration()
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: GetWorkflowQueueData()
  nameWithType: WorkflowInstance.GetWorkflowQueueData()
  fullName: System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.Runtime.WorkflowQueueInfo}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<WorkflowQueueInfo>
  nameWithType: ReadOnlyCollection<WorkflowQueueInfo>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Workflow.Runtime.WorkflowQueueInfo>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Workflow.Runtime.WorkflowQueueInfo>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowQueueInfo
    name: WorkflowQueueInfo
    nameWithType: WorkflowQueueInfo
    fullName: WorkflowQueueInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowInstance.InstanceId
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: InstanceId
  nameWithType: WorkflowInstance.InstanceId
  fullName: System.Workflow.Runtime.WorkflowInstance.InstanceId
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.WorkflowInstance.Load
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: Load()
  nameWithType: WorkflowInstance.Load()
  fullName: System.Workflow.Runtime.WorkflowInstance.Load()
- uid: System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: ReloadTrackingProfiles()
  nameWithType: WorkflowInstance.ReloadTrackingProfiles()
  fullName: System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles()
- uid: System.Workflow.Runtime.WorkflowInstance.Resume
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: Resume()
  nameWithType: WorkflowInstance.Resume()
  fullName: System.Workflow.Runtime.WorkflowInstance.Resume()
- uid: System.Workflow.Runtime.WorkflowInstance.Start
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: Start()
  nameWithType: WorkflowInstance.Start()
  fullName: System.Workflow.Runtime.WorkflowInstance.Start()
- uid: System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: Suspend(String)
  nameWithType: WorkflowInstance.Suspend(String)
  fullName: System.Workflow.Runtime.WorkflowInstance.Suspend(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: Terminate(String)
  nameWithType: WorkflowInstance.Terminate(String)
  fullName: System.Workflow.Runtime.WorkflowInstance.Terminate(String)
- uid: System.Workflow.Runtime.WorkflowInstance.TryUnload
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: TryUnload()
  nameWithType: WorkflowInstance.TryUnload()
  fullName: System.Workflow.Runtime.WorkflowInstance.TryUnload()
- uid: System.Workflow.Runtime.WorkflowInstance.Unload
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: Unload()
  nameWithType: WorkflowInstance.Unload()
  fullName: System.Workflow.Runtime.WorkflowInstance.Unload()
- uid: System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: WorkflowRuntime
  nameWithType: WorkflowInstance.WorkflowRuntime
  fullName: System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime
- uid: System.Workflow.Runtime.WorkflowRuntime
  parent: System.Workflow.Runtime
  isExternal: false
  name: WorkflowRuntime
  nameWithType: WorkflowRuntime
  fullName: System.Workflow.Runtime.WorkflowRuntime
- uid: System.Workflow.Runtime.WorkflowInstance.Abort*
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: Abort
  nameWithType: WorkflowInstance.Abort
- uid: System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges*
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: ApplyWorkflowChanges
  nameWithType: WorkflowInstance.ApplyWorkflowChanges
- uid: System.Workflow.Runtime.WorkflowInstance.EnqueueItem*
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: EnqueueItem
  nameWithType: WorkflowInstance.EnqueueItem
- uid: System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle*
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: EnqueueItemOnIdle
  nameWithType: WorkflowInstance.EnqueueItemOnIdle
- uid: System.Workflow.Runtime.WorkflowInstance.Equals*
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: Equals
  nameWithType: WorkflowInstance.Equals
- uid: System.Workflow.Runtime.WorkflowInstance.GetHashCode*
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: GetHashCode
  nameWithType: WorkflowInstance.GetHashCode
- uid: System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition*
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: GetWorkflowDefinition
  nameWithType: WorkflowInstance.GetWorkflowDefinition
- uid: System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration*
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: GetWorkflowNextTimerExpiration
  nameWithType: WorkflowInstance.GetWorkflowNextTimerExpiration
- uid: System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData*
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: GetWorkflowQueueData
  nameWithType: WorkflowInstance.GetWorkflowQueueData
- uid: System.Workflow.Runtime.WorkflowInstance.InstanceId*
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: InstanceId
  nameWithType: WorkflowInstance.InstanceId
- uid: System.Workflow.Runtime.WorkflowInstance.Load*
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: Load
  nameWithType: WorkflowInstance.Load
- uid: System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles*
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: ReloadTrackingProfiles
  nameWithType: WorkflowInstance.ReloadTrackingProfiles
- uid: System.Workflow.Runtime.WorkflowInstance.Resume*
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: Resume
  nameWithType: WorkflowInstance.Resume
- uid: System.Workflow.Runtime.WorkflowInstance.Start*
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: Start
  nameWithType: WorkflowInstance.Start
- uid: System.Workflow.Runtime.WorkflowInstance.Suspend*
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: Suspend
  nameWithType: WorkflowInstance.Suspend
- uid: System.Workflow.Runtime.WorkflowInstance.Terminate*
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: Terminate
  nameWithType: WorkflowInstance.Terminate
- uid: System.Workflow.Runtime.WorkflowInstance.TryUnload*
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: TryUnload
  nameWithType: WorkflowInstance.TryUnload
- uid: System.Workflow.Runtime.WorkflowInstance.Unload*
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: Unload
  nameWithType: WorkflowInstance.Unload
- uid: System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime*
  parent: System.Workflow.Runtime.WorkflowInstance
  isExternal: false
  name: WorkflowRuntime
  nameWithType: WorkflowInstance.WorkflowRuntime
