### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.TypeConverterAttribute
  id: TypeConverterAttribute
  children:
  - System.ComponentModel.TypeConverterAttribute.#ctor
  - System.ComponentModel.TypeConverterAttribute.#ctor(System.String)
  - System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
  - System.ComponentModel.TypeConverterAttribute.ConverterTypeName
  - System.ComponentModel.TypeConverterAttribute.Default
  - System.ComponentModel.TypeConverterAttribute.Equals(System.Object)
  - System.ComponentModel.TypeConverterAttribute.GetHashCode
  langs:
  - csharp
  name: TypeConverterAttribute
  nameWithType: TypeConverterAttribute
  fullName: System.ComponentModel.TypeConverterAttribute
  type: Class
  summary: "Angir hvilken type som brukes som et konverteringsprogram for objektet dette attributtet er bundet til."
  remarks: "Klassen som du bruker for konverteringen må arver fra <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter> Bruk av <xref:System.ComponentModel.TypeConverterAttribute.ConverterTypeName%2A>til å hente navnet på klassen som gir datakonvertering for objektet dette attributtet er bundet til.</xref:System.ComponentModel.TypeConverterAttribute.ConverterTypeName%2A>       Du finner mer informasjon om attributter [attributter](~/add/includes/ajax-current-ext-md.md). Du finner mer informasjon om typen konverteringsprogrammer i <xref:System.ComponentModel.TypeConverter>basisklasse og [slik: implementere et konverteringsprogram av typen](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.TypeConverter>       For å opprette et typen konverteringsprogram på en egendefinert klasse som inneholder typen konvertering virkemåte for XAML, kan du bruke attributtet TypeConverterAttribute for din type. Argumentet for attributtet refererer til typen konverteringsprogram implementeringen. Type-konverteringsprogram skal kunne godta verdier fra en streng som brukes for attributter eller initialisering tekst i XAML markup, og Konverter denne strengen til målet-typen. Hvis du vil ha mer informasjon, se[TypeConverters og XAML](~/add/includes/ajax-current-ext-md.md).       I stedet for å bruke alle verdier i en type, kan typen konverteringsprogram virkemåte for XAML også opprette på en bestemt egenskap. I dette tilfellet du bruke TypeConverterAttribute i definisjonen av egenskapen (ytre definisjonen, ikke angitt `get` og `set` definisjoner).       Typen konverteringsprogram virkemåte for XAML bruk av et egendefinert kan legges ved medlem kan tilordnes ved å bruke TypeConverterAttribute til den `get` metoden aksessor som støtter bruk av XAML. Hvis du vil ha mer informasjon, se [knyttet egenskaper oversikt over](~/add/includes/ajax-current-ext-md.md).       Sammensatte XAML serialisering tilfeller, som krever ekstra tilstand fra kjøretiden objektet, kan du definere et verdien serialisering i tillegg til en type konverteringsprogram, og attributtet støtte begge klasser på egendefinerte typer eller egendefinerte medlemmer. Hvis du vil ha mer informasjon, kan du se <xref:System.Windows.Markup.ValueSerializer>.</xref:System.Windows.Markup.ValueSerializer>"
  example:
  - "The following example declares `MyClass` to use the type converter called `MyClassConverter`. This example assumes that `MyClassConverter` has been implemented elsewhere. The class implementing the converter (`MyClassConverter`) must inherit from the <xref:System.ComponentModel.TypeConverter> class.  \n  \n [!code-vb[Classic TypeConverterAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._140_1.vb)]\n [!code-cpp[Classic TypeConverterAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._140_1.cpp)]\n [!code-cs[Classic TypeConverterAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._140_1.cs)]  \n  \n The next example creates an instance of `MyClass`. Then it gets the attributes for the class, and prints the name of the type converter used by `MyClass`.  \n  \n [!code-vb[Classic TypeConverterAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._140_2.vb)]\n [!code-cpp[Classic TypeConverterAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._140_2.cpp)]\n [!code-cs[Classic TypeConverterAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._140_2.cs)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.All)]

      public sealed class TypeConverterAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: TypeConverterAttribute()
  nameWithType: TypeConverterAttribute.TypeConverterAttribute()
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref> klasse standard typen konverteringsprogram som er en tom streng (&quot;&quot;)."
  remarks: "Klassen som inneholder datakonverteringen må arve fra <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: public TypeConverterAttribute ();
    parameters: []
  overload: System.ComponentModel.TypeConverterAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: TypeConverterAttribute(String)
  nameWithType: TypeConverterAttribute.TypeConverterAttribute(String)
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref> class, ved hjelp av navnet på angitt som data konverteringsprogram for dette attributtet er bundet til objektet."
  remarks: "Klassen som inneholder datakonverteringen må arve fra <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: public TypeConverterAttribute (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "Det fullstendig kvalifiserte navnet på klassen som skal brukes for datakonvertering for objektet dette attributtet er bundet til."
  overload: System.ComponentModel.TypeConverterAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: TypeConverterAttribute(Type)
  nameWithType: TypeConverterAttribute.TypeConverterAttribute(Type)
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute(Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref> class, ved hjelp av den angitte typen som data konverteringsprogram for dette attributtet er bundet til objektet."
  remarks: "Klassen som inneholder datakonverteringen må arve fra <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: public TypeConverterAttribute (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "En <xref:System.Type>som representerer typen konverteringsprogram klassen som skal brukes for datakonvertering for dette attributtet er bundet til objektet.</xref:System.Type>"
  overload: System.ComponentModel.TypeConverterAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.ConverterTypeName
  id: ConverterTypeName
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: ConverterTypeName
  nameWithType: TypeConverterAttribute.ConverterTypeName
  fullName: System.ComponentModel.TypeConverterAttribute.ConverterTypeName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Henter fullstendige typenavnet på den <xref:System.Type>som brukes som et konverteringsprogram for dette attributtet er bundet til objektet.</xref:System.Type>"
  syntax:
    content: public string ConverterTypeName { get; }
    return:
      type: System.String
      description: "Fullstendige typenavnet på den <xref:System.Type>som brukes som et konverteringsprogram for dette attributtet er bundet til objektet eller en tom streng (&quot;&quot;) Hvis ingen er registrert.</xref:System.Type> Standardverdien er en tom streng (&quot;&quot;)."
  overload: System.ComponentModel.TypeConverterAttribute.ConverterTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.Default
  id: Default
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: Default
  nameWithType: TypeConverterAttribute.Default
  fullName: System.ComponentModel.TypeConverterAttribute.Default
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Angir som brukes som et konverteringsprogram for dette attributtet er bundet til objektet."
  syntax:
    content: public static readonly System.ComponentModel.TypeConverterAttribute Default;
    return:
      type: System.ComponentModel.TypeConverterAttribute
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: TypeConverterAttribute.Equals(Object)
  fullName: System.ComponentModel.TypeConverterAttribute.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerer om verdien for det angitte objektet er lik gjeldende <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref>."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Objektet for å teste verdien likheten mellom."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis verdien for det angitte objektet er det samme som gjeldende <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref>; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeConverterAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: TypeConverterAttribute.GetHashCode()
  fullName: System.ComponentModel.TypeConverterAttribute.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerer hashkoden for denne forekomsten."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "En hash-kode for gjeldende <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref>."
  overload: System.ComponentModel.TypeConverterAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.TypeConverterAttribute.#ctor
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: TypeConverterAttribute()
  nameWithType: TypeConverterAttribute.TypeConverterAttribute()
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute()
- uid: System.ComponentModel.TypeConverterAttribute.#ctor(System.String)
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: TypeConverterAttribute(String)
  nameWithType: TypeConverterAttribute.TypeConverterAttribute(String)
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: TypeConverterAttribute(Type)
  nameWithType: TypeConverterAttribute.TypeConverterAttribute(Type)
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.TypeConverterAttribute.ConverterTypeName
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: ConverterTypeName
  nameWithType: TypeConverterAttribute.ConverterTypeName
  fullName: System.ComponentModel.TypeConverterAttribute.ConverterTypeName
- uid: System.ComponentModel.TypeConverterAttribute.Default
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: Default
  nameWithType: TypeConverterAttribute.Default
  fullName: System.ComponentModel.TypeConverterAttribute.Default
- uid: System.ComponentModel.TypeConverterAttribute
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverterAttribute
  nameWithType: TypeConverterAttribute
  fullName: System.ComponentModel.TypeConverterAttribute
- uid: System.ComponentModel.TypeConverterAttribute.Equals(System.Object)
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: TypeConverterAttribute.Equals(Object)
  fullName: System.ComponentModel.TypeConverterAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.TypeConverterAttribute.GetHashCode
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: TypeConverterAttribute.GetHashCode()
  fullName: System.ComponentModel.TypeConverterAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.TypeConverterAttribute.#ctor*
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: TypeConverterAttribute
  nameWithType: TypeConverterAttribute.TypeConverterAttribute
- uid: System.ComponentModel.TypeConverterAttribute.ConverterTypeName*
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: ConverterTypeName
  nameWithType: TypeConverterAttribute.ConverterTypeName
- uid: System.ComponentModel.TypeConverterAttribute.Equals*
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: Equals
  nameWithType: TypeConverterAttribute.Equals
- uid: System.ComponentModel.TypeConverterAttribute.GetHashCode*
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: TypeConverterAttribute.GetHashCode
