### YamlMime:ManagedReference
items:
- uid: System.CodeDom.Compiler.ICodeGenerator
  id: ICodeGenerator
  children:
  - System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(System.String)
  - System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(System.String)
  - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)
  - System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(System.String)
  - System.CodeDom.Compiler.ICodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)
  - System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(System.String)
  langs:
  - csharp
  name: ICodeGenerator
  nameWithType: ICodeGenerator
  fullName: System.CodeDom.Compiler.ICodeGenerator
  type: Interface
  summary: "Definerer et grensesnitt for kodegenerering."
  remarks: "> [!NOTE]> I .NET Framework-versjonene 1.0 og 1.1 kode leverandører som består av implementeringer av <xref:System.CodeDom.Compiler.CodeDomProvider>, ICodeGenerator, <xref:System.CodeDom.Compiler.ICodeParser>, og <xref:System.CodeDom.Compiler.ICodeCompiler>.</xref:System.CodeDom.Compiler.ICodeCompiler> </xref:System.CodeDom.Compiler.ICodeParser> </xref:System.CodeDom.Compiler.CodeDomProvider> I de [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)], <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A>, <xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A>, og <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A>metodene som er foreldet, og metoder for ICodeGenerator og <xref:System.CodeDom.Compiler.ICodeCompiler>direkte tilgjengelige i <xref:System.CodeDom.Compiler.CodeDomProvider>klasse.</xref:System.CodeDom.Compiler.CodeDomProvider> </xref:System.CodeDom.Compiler.ICodeCompiler> </xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> </xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A> </xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> Du må overstyre disse metodene i koden leverandøren implementeringen og ikke kall base-metoder.       Utviklerne av kompilatorer kan implementerer dette grensesnittet slik at brukerne å generere dynamisk kode i et bestemt språk. Dette kan brukes for en rekke oppgaver som oppretting av generering av koden veivisere, oppretter dynamiske samlinger med innhold som kan være feilsøking og organisasjonsapper dokumenter med innebygd kode, for eksempel ASP.NET.       Implementering av ICodeGenerator vanligvis er anskaffet via et kall til <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A>metoden for <xref:System.CodeDom.Compiler.CodeDomProvider>.</xref:System.CodeDom.Compiler.CodeDomProvider> </xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A>"
  syntax:
    content: public interface ICodeGenerator
  implements: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(System.String)
  id: CreateEscapedIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: CreateEscapedIdentifier(String)
  nameWithType: ICodeGenerator.CreateEscapedIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Oppretter en identifikator for den angitte verdien."
  remarks: "CreateEscapedIdentifier tester om identifikatoren som er i konflikt med reservert eller språknøkkelord og i så fall returnerer et tilsvarende navn med formatering av language-spesifikke escape-kode. Det refereres til en identifikator. Identifikatoren mellom skilletegn inneholder den samme `value` , men må formatering av escape-kode legges til å skille identifikatoren fra nøkkelordet. Er foregående eksemplene implementering av `value` med &quot;@&quot; eller bracketing i `value` med &quot;[&quot; og &quot;]&quot;."
  syntax:
    content: public string CreateEscapedIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "Strengen som brukes til å opprette en identifikator for."
    return:
      type: System.String
      description: "Identifikatoren mellom skilletegn for verdien."
  overload: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(System.String)
  id: CreateValidIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: CreateValidIdentifier(String)
  nameWithType: ICodeGenerator.CreateValidIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Oppretter en gyldig identifikator for den angitte verdien."
  remarks: "CreateValidIdentifier tester om identifikator konflikter med reservert eller språknøkkelord og returnerer en gyldig identifikator navn som ikke er i konflikt. Den returnerte IDen inneholder den samme `value` , men hvis den er i konflikt med reservert eller språknøkkelord får formatering av escape-kode legges til å skille identifikatoren fra nøkkelordet. Vanligvis hvis verdien må endres, returneres verdien preceded med et understrekingstegn &quot;_&quot;."
  syntax:
    content: public string CreateValidIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "Strengen som skal generere en gyldig identifikator for."
    return:
      type: System.String
      description: "En gyldig identifikator for den angitte verdien."
  overload: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Genererer kode for den angitte koden dokumentobjektmodellen (CodeDOM) kompilering enheten, og legger den til den angitte tekstskriver med de angitte alternativene."
  syntax:
    content: public void GenerateCodeFromCompileUnit (System.CodeDom.CodeCompileUnit e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeCompileUnit
      description: "En <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> til å generere kode for."
    - id: w
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>output-koden for å.</xref:System.IO.TextWriter>"
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "En <xref href=&quot;System.CodeDom.Compiler.CodeGeneratorOptions&quot;> </xref> som angir alternativene du vil bruke for kodegenerering."
  overload: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Genererer kode for det angitte uttrykket for koden dokumentobjektmodellen (CodeDOM) og legger den til den angitte tekstskriver."
  syntax:
    content: public void GenerateCodeFromExpression (System.CodeDom.CodeExpression e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeExpression
      description: "En <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> som angir uttrykket til å generere kode for."
    - id: w
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>output-koden for å.</xref:System.IO.TextWriter>"
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "En <xref href=&quot;System.CodeDom.Compiler.CodeGeneratorOptions&quot;> </xref> som angir alternativene du vil bruke for kodegenerering."
  overload: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Genererer kode for det angitte kode dokumentobjektmodellen (CodeDOM) navneområdet, og legger den til den angitte tekstskriver med de angitte alternativene."
  syntax:
    content: public void GenerateCodeFromNamespace (System.CodeDom.CodeNamespace e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeNamespace
      description: "En <xref href=&quot;System.CodeDom.CodeNamespace&quot;> </xref> som angir navneområde for å generere kode for."
    - id: w
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>output-koden for å.</xref:System.IO.TextWriter>"
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "En <xref href=&quot;System.CodeDom.Compiler.CodeGeneratorOptions&quot;> </xref> som angir alternativene du vil bruke for kodegenerering."
  overload: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Genererer kode for den angitte koden dokumentobjektmodellen (CodeDOM)-setningen, og legger den til den angitte tekstskriver med de angitte alternativene."
  syntax:
    content: public void GenerateCodeFromStatement (System.CodeDom.CodeStatement e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeStatement
      description: "En <xref href=&quot;System.CodeDom.CodeStatement&quot;> </xref> som inneholder CodeDOM elementer oversette."
    - id: w
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>output-koden for å.</xref:System.IO.TextWriter>"
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "En <xref href=&quot;System.CodeDom.Compiler.CodeGeneratorOptions&quot;> </xref> som angir alternativene du vil bruke for kodegenerering."
  overload: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Genererer kode for den angitte deklarasjonen av typen kode dokumentobjektmodellen (CodeDOM) og legger den til den angitte tekstskriver med de angitte alternativene."
  syntax:
    content: public void GenerateCodeFromType (System.CodeDom.CodeTypeDeclaration e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeTypeDeclaration
      description: "En <xref href=&quot;System.CodeDom.CodeTypeDeclaration&quot;> </xref> som angir hvilken type til å generere kode for."
    - id: w
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>output-koden for å.</xref:System.IO.TextWriter>"
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "En <xref href=&quot;System.CodeDom.Compiler.CodeGeneratorOptions&quot;> </xref> som angir alternativene du vil bruke for kodegenerering."
  overload: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)
  id: GetTypeOutput(System.CodeDom.CodeTypeReference)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GetTypeOutput(CodeTypeReference)
  nameWithType: ICodeGenerator.GetTypeOutput(CodeTypeReference)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(CodeTypeReference)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Henter typen som er angitt av den angitte <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref>."
  syntax:
    content: public string GetTypeOutput (System.CodeDom.CodeTypeReference type);
    parameters:
    - id: type
      type: System.CodeDom.CodeTypeReference
      description: "En <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> som angir hvilken type skal returneres."
    return:
      type: System.String
      description: "En Tekstrepresentasjonen av angitt type for denne koden generatoren er utformet for å generere kode i språket. For eksempel vil sende i typen System.Int32 returnere &quot;Heltall&quot; i Visual Basic."
  overload: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(System.String)
  id: IsValidIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: IsValidIdentifier(String)
  nameWithType: ICodeGenerator.IsValidIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Henter en verdi som angir om den angitte verdien er en gyldig identifikator for gjeldende språk."
  remarks: "Denne metoden tester om en ID er gyldig. Ved implementering av IsValidIdentifier i en avledet klasse, utforme metoden å teste verdien som ble sendt til den, og returnerer `true` bare hvis verdien passer reglene for språket og ikke er i konflikt med et nøkkelord."
  syntax:
    content: public bool IsValidIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "Verdien som skal testes for å være en gyldig identifikator."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den <code> value </code> parameter er en gyldig identifikator; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)
  id: Supports(System.CodeDom.Compiler.GeneratorSupport)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: Supports(GeneratorSupport)
  nameWithType: ICodeGenerator.Supports(GeneratorSupport)
  fullName: System.CodeDom.Compiler.ICodeGenerator.Supports(GeneratorSupport)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Henter en verdi som angir om generatoren gir støtte for språkfunksjoner som er representert av den angitte <xref href=&quot;System.CodeDom.Compiler.GeneratorSupport&quot;> </xref> objektet."
  remarks: "Denne metoden kan bare kalles med et antall <xref:System.CodeDom.Compiler.GeneratorSupport>flagg samtidig for å teste for et sett med funksjoner ved å delta i et sett med riktig funksjonen flagg sammen med en binær &quot;Eller&quot; operator |.</xref:System.CodeDom.Compiler.GeneratorSupport>"
  syntax:
    content: public bool Supports (System.CodeDom.Compiler.GeneratorSupport supports);
    parameters:
    - id: supports
      type: System.CodeDom.Compiler.GeneratorSupport
      description: "Funksjonene å teste generatoren for."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis de angitte egenskapene støttes. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.ICodeGenerator.Supports*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(System.String)
  id: ValidateIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: ValidateIdentifier(String)
  nameWithType: ICodeGenerator.ValidateIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Oppstår et unntak hvis den angitte verdien ikke er en gyldig identifikator."
  remarks: "I stedet for å returnere en verdi, oppstår et unntak i denne metoden hvis den angitte IDen ikke er gyldig i henhold til metoden implementeringen. Unntaket er vanligvis en <xref:System.ArgumentException>.</xref:System.ArgumentException> Denne metoden gjør det mulig for en kode generatoren som implementerer denne metoden for å lage en informativ feilmelding basert på verdien til en ugyldig identifikator."
  syntax:
    content: public void ValidateIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "Identifikatoren til å validere."
  overload: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Identifikatoren er ikke gyldig."
  platform:
  - net462
references:
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: CreateEscapedIdentifier(String)
  nameWithType: ICodeGenerator.CreateEscapedIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: CreateValidIdentifier(String)
  nameWithType: ICodeGenerator.CreateValidIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(String)
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.CodeDom.Compiler.CodeGeneratorOptions
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CodeGeneratorOptions
  nameWithType: CodeGeneratorOptions
  fullName: System.CodeDom.Compiler.CodeGeneratorOptions
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.CodeNamespace
  parent: System.CodeDom
  isExternal: false
  name: CodeNamespace
  nameWithType: CodeNamespace
  fullName: System.CodeDom.CodeNamespace
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.CodeStatement
  parent: System.CodeDom
  isExternal: false
  name: CodeStatement
  nameWithType: CodeStatement
  fullName: System.CodeDom.CodeStatement
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.CodeTypeDeclaration
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeDeclaration
  nameWithType: CodeTypeDeclaration
  fullName: System.CodeDom.CodeTypeDeclaration
- uid: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GetTypeOutput(CodeTypeReference)
  nameWithType: ICodeGenerator.GetTypeOutput(CodeTypeReference)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(CodeTypeReference)
- uid: System.CodeDom.CodeTypeReference
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference
- uid: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: IsValidIdentifier(String)
  nameWithType: ICodeGenerator.IsValidIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CodeDom.Compiler.ICodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: Supports(GeneratorSupport)
  nameWithType: ICodeGenerator.Supports(GeneratorSupport)
  fullName: System.CodeDom.Compiler.ICodeGenerator.Supports(GeneratorSupport)
- uid: System.CodeDom.Compiler.GeneratorSupport
  parent: System.CodeDom.Compiler
  isExternal: false
  name: GeneratorSupport
  nameWithType: GeneratorSupport
  fullName: System.CodeDom.Compiler.GeneratorSupport
- uid: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: ValidateIdentifier(String)
  nameWithType: ICodeGenerator.ValidateIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(String)
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: CreateEscapedIdentifier
  nameWithType: ICodeGenerator.CreateEscapedIdentifier
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: CreateValidIdentifier
  nameWithType: ICodeGenerator.CreateValidIdentifier
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromCompileUnit
  nameWithType: ICodeGenerator.GenerateCodeFromCompileUnit
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromExpression
  nameWithType: ICodeGenerator.GenerateCodeFromExpression
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromNamespace
  nameWithType: ICodeGenerator.GenerateCodeFromNamespace
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromStatement
  nameWithType: ICodeGenerator.GenerateCodeFromStatement
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromType
  nameWithType: ICodeGenerator.GenerateCodeFromType
- uid: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GetTypeOutput
  nameWithType: ICodeGenerator.GetTypeOutput
- uid: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: IsValidIdentifier
  nameWithType: ICodeGenerator.IsValidIdentifier
- uid: System.CodeDom.Compiler.ICodeGenerator.Supports*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: Supports
  nameWithType: ICodeGenerator.Supports
- uid: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: ValidateIdentifier
  nameWithType: ICodeGenerator.ValidateIdentifier
