### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.CommandBinding
  id: CommandBinding
  children:
  - System.Windows.Input.CommandBinding.#ctor
  - System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand)
  - System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler)
  - System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler,System.Windows.Input.CanExecuteRoutedEventHandler)
  - System.Windows.Input.CommandBinding.CanExecute
  - System.Windows.Input.CommandBinding.Command
  - System.Windows.Input.CommandBinding.Executed
  - System.Windows.Input.CommandBinding.PreviewCanExecute
  - System.Windows.Input.CommandBinding.PreviewExecuted
  langs:
  - csharp
  name: CommandBinding
  nameWithType: CommandBinding
  fullName: System.Windows.Input.CommandBinding
  type: Class
  summary: "Binding en <xref href=&quot;System.Windows.Input.RoutedCommand&quot;> </xref> til hendelsesbehandlingen som implementerer kommandoen."
  remarks: "En CommandBinding knytter en kommando med den <xref:System.Windows.Input.CommandBinding.PreviewExecuted>/<xref:System.Windows.Input.CommandBinding.Executed> og <xref:System.Windows.Input.CommandBinding.PreviewCanExecute>/<xref:System.Windows.Input.CommandBinding.CanExecute> hendelser som implementerer og fastslå statusen for kommandoen.</xref:System.Windows.Input.CommandBinding.CanExecute> </xref:System.Windows.Input.CommandBinding.PreviewCanExecute> </xref:System.Windows.Input.CommandBinding.Executed> </xref:System.Windows.Input.CommandBinding.PreviewExecuted>       Når den <xref:System.Windows.Input.RoutedCommand.Execute%2A>eller <xref:System.Windows.Input.RoutedCommand.CanExecute%2A>-metoden til et <xref:System.Windows.Input.RoutedCommand>kalles, den <xref:System.Windows.Input.CommandBinding.PreviewExecuted>/<xref:System.Windows.Input.CommandBinding.Executed> eller <xref:System.Windows.Input.CommandBinding.PreviewCanExecute>/<xref:System.Windows.Input.CommandBinding.CanExecute> hendelser registreres i kommandoen måldatabasen.</xref:System.Windows.Input.CommandBinding.CanExecute> </xref:System.Windows.Input.CommandBinding.PreviewCanExecute> </xref:System.Windows.Input.CommandBinding.Executed> </xref:System.Windows.Input.CommandBinding.PreviewExecuted> </xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.RoutedCommand.CanExecute%2A> </xref:System.Windows.Input.RoutedCommand.Execute%2A>  Hvis kommandoen målet har en CommandBinding for kommandoen, er riktig behandlingsprogramdelen kalles.  Hvis målet kommandoen ikke har en CommandBinding for kommandoen, rutes hendelsene gjennom treet elementet til et element som har en CommandBinding blir funnet.       En CommandBinding er begrenset til bruk med en <xref:System.Windows.Input.ICommand>som er ikke en<xref:System.Windows.Input.RoutedCommand>.</xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.ICommand>  Fordi en CommandBinding binding kommandoen til den <xref:System.Windows.Input.ExecutedRoutedEventHandler>og <xref:System.Windows.Input.CanExecuteRoutedEventHandler>som lytte til den <xref:System.Windows.Input.CommandManager.Executed>og <xref:System.Windows.Input.CommandManager.CanExecute>rutet hendelser som aktiveres når den <xref:System.Windows.Input.RoutedCommand.Execute%2A>og <xref:System.Windows.Input.RoutedCommand.CanExecute%2A>-metoden til den <xref:System.Windows.Input.RoutedCommand>kalles.</xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.RoutedCommand.CanExecute%2A> </xref:System.Windows.Input.RoutedCommand.Execute%2A> </xref:System.Windows.Input.CommandManager.CanExecute> </xref:System.Windows.Input.CommandManager.Executed> </xref:System.Windows.Input.CanExecuteRoutedEventHandler> </xref:System.Windows.Input.ExecutedRoutedEventHandler>"
  syntax:
    content: public class CommandBinding
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.#ctor
  id: '#ctor'
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: CommandBinding()
  nameWithType: CommandBinding.CommandBinding()
  fullName: System.Windows.Input.CommandBinding.CommandBinding()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> klasse."
  syntax:
    content: public CommandBinding ();
    parameters: []
  overload: System.Windows.Input.CommandBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand)
  id: '#ctor(System.Windows.Input.ICommand)'
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: CommandBinding(ICommand)
  nameWithType: CommandBinding.CommandBinding(ICommand)
  fullName: System.Windows.Input.CommandBinding.CommandBinding(ICommand)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> klassen ved hjelp av den angitte <xref:System.Windows.Input.ICommand>.</xref:System.Windows.Input.ICommand>"
  syntax:
    content: public CommandBinding (System.Windows.Input.ICommand command);
    parameters:
    - id: command
      type: System.Windows.Input.ICommand
      description: "Kommandoen som grunnlag for den nye <xref href=&quot;System.Windows.Input.RoutedCommand&quot;> </xref> på."
  overload: System.Windows.Input.CommandBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler)
  id: '#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler)'
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: CommandBinding(ICommand,ExecutedRoutedEventHandler)
  nameWithType: CommandBinding.CommandBinding(ICommand,ExecutedRoutedEventHandler)
  fullName: System.Windows.Input.CommandBinding.CommandBinding(ICommand,ExecutedRoutedEventHandler)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> klassen ved hjelp av den angitte <xref:System.Windows.Input.ICommand>og det angitte <xref href=&quot;System.Windows.Input.CommandBinding.Executed&quot;> </xref> hendelsesbehandlingen.</xref:System.Windows.Input.ICommand>"
  syntax:
    content: public CommandBinding (System.Windows.Input.ICommand command, System.Windows.Input.ExecutedRoutedEventHandler executed);
    parameters:
    - id: command
      type: System.Windows.Input.ICommand
      description: "Kommandoen som grunnlag for den nye <xref href=&quot;System.Windows.Input.RoutedCommand&quot;> </xref> på."
    - id: executed
      type: System.Windows.Input.ExecutedRoutedEventHandler
      description: "Et behandlingsprogram for den <xref href=&quot;System.Windows.Input.CommandBinding.Executed&quot;> </xref> hendelse på den nye <xref href=&quot;System.Windows.Input.RoutedCommand&quot;> </xref>."
  overload: System.Windows.Input.CommandBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler,System.Windows.Input.CanExecuteRoutedEventHandler)
  id: '#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler,System.Windows.Input.CanExecuteRoutedEventHandler)'
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: CommandBinding(ICommand,ExecutedRoutedEventHandler,CanExecuteRoutedEventHandler)
  nameWithType: CommandBinding.CommandBinding(ICommand,ExecutedRoutedEventHandler,CanExecuteRoutedEventHandler)
  fullName: System.Windows.Input.CommandBinding.CommandBinding(ICommand,ExecutedRoutedEventHandler,CanExecuteRoutedEventHandler)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> klassen ved hjelp av den angitte <xref:System.Windows.Input.ICommand>og det angitte <xref href=&quot;System.Windows.Input.CommandBinding.Executed&quot;> </xref> og <xref href=&quot;System.Windows.Input.CommandBinding.CanExecute&quot;> </xref> hendelsesbehandling.</xref:System.Windows.Input.ICommand>"
  syntax:
    content: public CommandBinding (System.Windows.Input.ICommand command, System.Windows.Input.ExecutedRoutedEventHandler executed, System.Windows.Input.CanExecuteRoutedEventHandler canExecute);
    parameters:
    - id: command
      type: System.Windows.Input.ICommand
      description: "Kommandoen som grunnlag for den nye <xref href=&quot;System.Windows.Input.RoutedCommand&quot;> </xref> på."
    - id: executed
      type: System.Windows.Input.ExecutedRoutedEventHandler
      description: "Et behandlingsprogram for den <xref href=&quot;System.Windows.Input.CommandBinding.Executed&quot;> </xref> hendelse på den nye <xref href=&quot;System.Windows.Input.RoutedCommand&quot;> </xref>."
    - id: canExecute
      type: System.Windows.Input.CanExecuteRoutedEventHandler
      description: "Et behandlingsprogram for den <xref href=&quot;System.Windows.Input.CommandBinding.CanExecute&quot;> </xref> hendelse på den nye <xref href=&quot;System.Windows.Input.RoutedCommand&quot;> </xref>."
  overload: System.Windows.Input.CommandBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.CanExecute
  id: CanExecute
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: CanExecute
  nameWithType: CommandBinding.CanExecute
  fullName: System.Windows.Input.CommandBinding.CanExecute
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Forekommer når kommandoen som er forbundet med denne <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> starter kontroll for å finne ut om kommandoen kan utføres for kommandoen-målet."
  remarks: "Når den <xref:System.Windows.Input.RoutedCommand.CanExecute%2A>-metode på en <xref:System.Windows.Input.RoutedCommand>kalles, den <xref:System.Windows.Input.CommandBinding.PreviewCanExecute>denne hendelsen oppstår ved kommandoen målet.</xref:System.Windows.Input.CommandBinding.PreviewCanExecute> </xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.RoutedCommand.CanExecute%2A>  Hvis hendelsen ikke behandles, oppstår CanExecute-hendelsen.  Hvis kommandoen målet har en <xref:System.Windows.Input.CommandBinding>for kommandoen CanExecute behandlingsprogram for som <xref:System.Windows.Input.CommandBinding>kalles.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding>  Hvis målet kommandoen ikke har en <xref:System.Windows.Input.CommandBinding>for kommandoen, oppover CanExecute hendelsen bobler treet elementet søker etter et element som har en <xref:System.Windows.Input.CommandBinding>knyttet til kommandoen.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding>      <a name=&quot;routedEventInfo_CanExecute&quot;></a>## Rutet hendelsesinformasjon |||   |-|-|   | ID-feltet | <xref:System.Windows.Input.CommandManager.CanExecuteEvent>|   | Rutingstrategi | Bobling |   | Representanten | <xref:System.Windows.Input.CanExecuteRoutedEventHandler>|      -Tilsvarende tunnelering hendelsen er <xref:System.Windows.Input.CommandBinding.PreviewCanExecute>.</xref:System.Windows.Input.CommandBinding.PreviewCanExecute> </xref:System.Windows.Input.CanExecuteRoutedEventHandler> </xref:System.Windows.Input.CommandManager.CanExecuteEvent>"
  example:
  - "The following example creates a <xref:System.Windows.Input.CommandBinding> that maps an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and a <xref:System.Windows.Input.CanExecuteRoutedEventArgs> handler to the <xref:System.Windows.Input.ApplicationCommands.Open%2A> command.  \n  \n [!code-xml[commandwithhandler#CommandHandlerCommandBinding](~/add/codesnippet/xaml/commandWithHandler/Window1.xaml#commandhandlercommandbinding)]  \n  \n [!code-cs[CommandHandlerProcedural#CommandHandlerBindingInit](~/add/codesnippet/csharp/CommandHandlerProcedural/Window1.xaml.cs#commandhandlerbindinginit)]\n [!code-vb[CommandHandlerProcedural#CommandHandlerBindingInit](~/add/codesnippet/visualbasic/commandhandlerprocedural/window1.xaml.vb#commandhandlerbindinginit)]  \n  \n The following shows the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> which sets <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> to `true`.  \n  \n [!code-cs[commandwithhandler#CommandHandlerCanExecuteHandler](~/add/codesnippet/csharp/commandWithHandler/Window1.xaml.cs#commandhandlercanexecutehandler)]\n [!code-vb[commandwithhandler#CommandHandlerCanExecuteHandler](~/add/codesnippet/visualbasic/commandWithHandler/Window1.xaml.vb#commandhandlercanexecutehandler)]"
  syntax:
    content: public event System.Windows.Input.CanExecuteRoutedEventHandler CanExecute;
    return:
      type: System.Windows.Input.CanExecuteRoutedEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.Command
  id: Command
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: Command
  nameWithType: CommandBinding.Command
  fullName: System.Windows.Input.CommandBinding.Command
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Henter eller angir den <xref:System.Windows.Input.ICommand>knyttet til dette <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref>.</xref:System.Windows.Input.ICommand>"
  remarks: ''
  example:
  - "The following example creates a <xref:System.Windows.Input.CommandBinding> that maps an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and a <xref:System.Windows.Input.CanExecuteRoutedEventArgs> handler to the <xref:System.Windows.Input.ApplicationCommands.Open%2A> command.  \n  \n [!code-xml[commandWithHandler#CommandHandlerCommandBinding](~/add/codesnippet/xaml/commandWithHandler/Window1.xaml#commandhandlercommandbinding)]  \n  \n [!code-cs[commandhandlerprocedural#CommandHandlerBindingInit](~/add/codesnippet/csharp/CommandHandlerProcedural/Window1.xaml.cs#commandhandlerbindinginit)]\n [!code-vb[commandhandlerprocedural#CommandHandlerBindingInit](~/add/codesnippet/visualbasic/commandhandlerprocedural/window1.xaml.vb#commandhandlerbindinginit)]  \n  \n The following shows the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> which sets <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> to `true`.  \n  \n [!code-cs[commandWithHandler#CommandHandlerCanExecuteHandler](~/add/codesnippet/csharp/commandWithHandler/Window1.xaml.cs#commandhandlercanexecutehandler)]\n [!code-vb[commandWithHandler#CommandHandlerCanExecuteHandler](~/add/codesnippet/visualbasic/commandWithHandler/Window1.xaml.vb#commandhandlercanexecutehandler)]  \n  \n The following shows the <xref:System.Windows.Input.ExecutedRoutedEventHandler> which creates a <xref:System.Windows.MessageBox> when the command is executed.  \n  \n [!code-cs[commandWithHandler#CommandHandlerExecutedHandler](~/add/codesnippet/csharp/commandWithHandler/Window1.xaml.cs#commandhandlerexecutedhandler)]\n [!code-vb[commandWithHandler#CommandHandlerExecutedHandler](~/add/codesnippet/visualbasic/commandWithHandler/Window1.xaml.vb#commandhandlerexecutedhandler)]"
  syntax:
    content: public System.Windows.Input.ICommand Command { get; set; }
    return:
      type: System.Windows.Input.ICommand
      description: "Kommandoen som er forbundet med denne bindingen."
  overload: System.Windows.Input.CommandBinding.Command*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.Executed
  id: Executed
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: Executed
  nameWithType: CommandBinding.Executed
  fullName: System.Windows.Input.CommandBinding.Executed
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Forekommer når kommandoen som er forbundet med denne <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> utfører."
  remarks: "Når en <xref:System.Windows.Input.RoutedCommand>utfører, den opphøyer den <xref:System.Windows.Input.CommandBinding.PreviewExecuted>hendelsen for kommandoen-målet.</xref:System.Windows.Input.CommandBinding.PreviewExecuted> </xref:System.Windows.Input.RoutedCommand>  Hvis den <xref:System.Windows.Input.CommandBinding.PreviewExecuted>hendelsen behandles ikke, utført denne hendelsen oppstår ved kommandoen målet.</xref:System.Windows.Input.CommandBinding.PreviewExecuted>  Hvis kommandoen målet har en <xref:System.Windows.Input.CommandBinding>for kommandoen bestemte er utført behandlingsprogram for som <xref:System.Windows.Input.CommandBinding>kalles.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding>  Hvis målet kommandoen ikke har en <xref:System.Windows.Input.CommandBinding>for som bestemt kommando hendelsen utført dukker det opp treet elementet søker etter et element som har en <xref:System.Windows.Input.CommandBinding>knyttet til kommandoen.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding>  Hvis en <xref:System.Windows.Input.CommandBinding>ikke blir funnet, kommandoen ikke behandles.</xref:System.Windows.Input.CommandBinding>      <a name=&quot;routedEventInfo_Executed&quot;></a>## Rutet hendelsesinformasjon |||   |-|-|   | ID-feltet | <xref:System.Windows.Input.CommandManager.ExecutedEvent>|   | Rutingstrategi | Bobling |   | Representanten | <xref:System.Windows.Input.ExecutedRoutedEventHandler>|      -Tilsvarende tunnelering hendelsen er <xref:System.Windows.Input.CommandBinding.PreviewExecuted>.</xref:System.Windows.Input.CommandBinding.PreviewExecuted> </xref:System.Windows.Input.ExecutedRoutedEventHandler> </xref:System.Windows.Input.CommandManager.ExecutedEvent>"
  example:
  - "The following example creates a <xref:System.Windows.Input.CommandBinding> that maps an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and a <xref:System.Windows.Input.CanExecuteRoutedEventArgs> handler to the <xref:System.Windows.Input.ApplicationCommands.Open%2A> command.  \n  \n [!code-xml[commandwithhandler#CommandHandlerCommandBinding](~/add/codesnippet/xaml/commandWithHandler/Window1.xaml#commandhandlercommandbinding)]  \n  \n [!code-cs[CommandHandlerProcedural#CommandHandlerBindingInit](~/add/codesnippet/csharp/CommandHandlerProcedural/Window1.xaml.cs#commandhandlerbindinginit)]\n [!code-vb[CommandHandlerProcedural#CommandHandlerBindingInit](~/add/codesnippet/visualbasic/commandhandlerprocedural/window1.xaml.vb#commandhandlerbindinginit)]  \n  \n The following shows the <xref:System.Windows.Input.ExecutedRoutedEventHandler> which creates a <xref:System.Windows.MessageBox> when the command is executed.  \n  \n [!code-cs[commandWithHandler#CommandHandlerExecutedHandler](~/add/codesnippet/csharp/commandWithHandler/Window1.xaml.cs#commandhandlerexecutedhandler)]\n [!code-vb[commandWithHandler#CommandHandlerExecutedHandler](~/add/codesnippet/visualbasic/commandWithHandler/Window1.xaml.vb#commandhandlerexecutedhandler)]"
  syntax:
    content: public event System.Windows.Input.ExecutedRoutedEventHandler Executed;
    return:
      type: System.Windows.Input.ExecutedRoutedEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.PreviewCanExecute
  id: PreviewCanExecute
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: PreviewCanExecute
  nameWithType: CommandBinding.PreviewCanExecute
  fullName: System.Windows.Input.CommandBinding.PreviewCanExecute
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Forekommer når kommandoen som er forbundet med denne <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> starter kontroll for å finne ut om kommandoen kan utføres på det gjeldende kommando-målet."
  remarks: "Når den <xref:System.Windows.Input.RoutedCommand.CanExecute%2A>-metode på en <xref:System.Windows.Input.RoutedCommand>kalles PreviewCanExecute denne hendelsen oppstår ved kommandoen målet hvis kommandoen målet har en <xref:System.Windows.Input.CommandBinding>for kommandoen.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.RoutedCommand.CanExecute%2A> Vil <xref:System.Windows.Input.CommandBinding.CanExecute>behandlingsprogram for som <xref:System.Windows.Input.CommandBinding>kalles.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding.CanExecute>  Hvis målet kommandoen ikke har en <xref:System.Windows.Input.CommandBinding>for kommandoen, i <xref:System.Windows.Input.CommandBinding.CanExecute>hendelsen bobler oppover treet elementet søker etter et element som har en <xref:System.Windows.Input.CommandBinding>knyttet til kommandoen.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding.CanExecute> </xref:System.Windows.Input.CommandBinding>  Hvis hendelsen ikke behandles, den <xref:System.Windows.Input.CommandBinding.CanExecute>denne hendelsen oppstår.</xref:System.Windows.Input.CommandBinding.CanExecute>      <a name=&quot;routedEventInfo_PreviewCanExecute&quot;></a>## Rutet hendelsesinformasjon |||   |-|-|   | ID-feltet | <xref:System.Windows.Input.CommandManager.PreviewCanExecuteEvent>|   | Rutingstrategi | Tunnelering |   | Representanten | <xref:System.Windows.Input.CanExecuteRoutedEventHandler>|      -Tilsvarende bubbling hendelsen er <xref:System.Windows.Input.CommandBinding.CanExecute>.</xref:System.Windows.Input.CommandBinding.CanExecute> </xref:System.Windows.Input.CanExecuteRoutedEventHandler> </xref:System.Windows.Input.CommandManager.PreviewCanExecuteEvent>"
  syntax:
    content: public event System.Windows.Input.CanExecuteRoutedEventHandler PreviewCanExecute;
    return:
      type: System.Windows.Input.CanExecuteRoutedEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.PreviewExecuted
  id: PreviewExecuted
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: PreviewExecuted
  nameWithType: CommandBinding.PreviewExecuted
  fullName: System.Windows.Input.CommandBinding.PreviewExecuted
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Forekommer når kommandoen som er forbundet med denne <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> utfører."
  remarks: "Når en <xref:System.Windows.Input.RoutedCommand>utfører, den viser PreviewExecuted-hendelsen for kommandoen-målet.</xref:System.Windows.Input.RoutedCommand>  Hvis kommandoen målet har en <xref:System.Windows.Input.CommandBinding>for kommandoen i PreviewExecuted behandlingsprogram for som <xref:System.Windows.Input.CommandBinding>kalles.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding>  Hvis målet kommandoen ikke har en <xref:System.Windows.Input.CommandBinding>for kommandoen PreviewExecuted hendelsen tunneler nedover treet elementet søker etter et element som har en <xref:System.Windows.Input.CommandBinding>knyttet til kommandoen.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding>  Hvis hendelsen forhåndsvisning ikke behandles, den <xref:System.Windows.Input.CommandBinding.Executed>hendelsen starter for kommandoen målet.</xref:System.Windows.Input.CommandBinding.Executed>      <a name=&quot;routedEventInfo_PreviewExecuted&quot;></a>## Rutet hendelsesinformasjon |||   |-|-|   | ID-feltet | <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent>|   | Rutingstrategi | Tunnelering |   | Representanten | <xref:System.Windows.Input.ExecutedRoutedEventHandler>|      -Tilsvarende bubbling hendelsen er <xref:System.Windows.Input.CommandBinding.Executed>.</xref:System.Windows.Input.CommandBinding.Executed> </xref:System.Windows.Input.ExecutedRoutedEventHandler> </xref:System.Windows.Input.CommandManager.PreviewExecutedEvent>"
  syntax:
    content: public event System.Windows.Input.ExecutedRoutedEventHandler PreviewExecuted;
    return:
      type: System.Windows.Input.ExecutedRoutedEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Input.CommandBinding.#ctor
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: CommandBinding()
  nameWithType: CommandBinding.CommandBinding()
  fullName: System.Windows.Input.CommandBinding.CommandBinding()
- uid: System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand)
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: CommandBinding(ICommand)
  nameWithType: CommandBinding.CommandBinding(ICommand)
  fullName: System.Windows.Input.CommandBinding.CommandBinding(ICommand)
- uid: System.Windows.Input.ICommand
  parent: System.Windows.Input
  isExternal: true
  name: ICommand
  nameWithType: ICommand
  fullName: System.Windows.Input.ICommand
- uid: System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler)
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: CommandBinding(ICommand,ExecutedRoutedEventHandler)
  nameWithType: CommandBinding.CommandBinding(ICommand,ExecutedRoutedEventHandler)
  fullName: System.Windows.Input.CommandBinding.CommandBinding(ICommand,ExecutedRoutedEventHandler)
- uid: System.Windows.Input.ExecutedRoutedEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: ExecutedRoutedEventHandler
  nameWithType: ExecutedRoutedEventHandler
  fullName: System.Windows.Input.ExecutedRoutedEventHandler
- uid: System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler,System.Windows.Input.CanExecuteRoutedEventHandler)
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: CommandBinding(ICommand,ExecutedRoutedEventHandler,CanExecuteRoutedEventHandler)
  nameWithType: CommandBinding.CommandBinding(ICommand,ExecutedRoutedEventHandler,CanExecuteRoutedEventHandler)
  fullName: System.Windows.Input.CommandBinding.CommandBinding(ICommand,ExecutedRoutedEventHandler,CanExecuteRoutedEventHandler)
- uid: System.Windows.Input.CanExecuteRoutedEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: CanExecuteRoutedEventHandler
  nameWithType: CanExecuteRoutedEventHandler
  fullName: System.Windows.Input.CanExecuteRoutedEventHandler
- uid: System.Windows.Input.CommandBinding.CanExecute
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: CanExecute
  nameWithType: CommandBinding.CanExecute
  fullName: System.Windows.Input.CommandBinding.CanExecute
- uid: System.Windows.Input.CommandBinding.Command
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: Command
  nameWithType: CommandBinding.Command
  fullName: System.Windows.Input.CommandBinding.Command
- uid: System.Windows.Input.CommandBinding.Executed
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: Executed
  nameWithType: CommandBinding.Executed
  fullName: System.Windows.Input.CommandBinding.Executed
- uid: System.Windows.Input.CommandBinding.PreviewCanExecute
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: PreviewCanExecute
  nameWithType: CommandBinding.PreviewCanExecute
  fullName: System.Windows.Input.CommandBinding.PreviewCanExecute
- uid: System.Windows.Input.CommandBinding.PreviewExecuted
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: PreviewExecuted
  nameWithType: CommandBinding.PreviewExecuted
  fullName: System.Windows.Input.CommandBinding.PreviewExecuted
- uid: System.Windows.Input.CommandBinding.#ctor*
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: CommandBinding
  nameWithType: CommandBinding.CommandBinding
- uid: System.Windows.Input.CommandBinding.Command*
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: Command
  nameWithType: CommandBinding.Command
