### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.IReplyChannel
  id: IReplyChannel
  children:
  - System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest(System.IAsyncResult)
  - System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest(System.IAsyncResult,System.ServiceModel.Channels.RequestContext@)
  - System.ServiceModel.Channels.IReplyChannel.EndWaitForRequest(System.IAsyncResult)
  - System.ServiceModel.Channels.IReplyChannel.LocalAddress
  - System.ServiceModel.Channels.IReplyChannel.ReceiveRequest
  - System.ServiceModel.Channels.IReplyChannel.ReceiveRequest(System.TimeSpan)
  - System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)
  - System.ServiceModel.Channels.IReplyChannel.WaitForRequest(System.TimeSpan)
  langs:
  - csharp
  name: IReplyChannel
  nameWithType: IReplyChannel
  fullName: System.ServiceModel.Channels.IReplyChannel
  type: Interface
  summary: "Definerer grensesnittet en kanal må implementere skal på mottak side av en forespørsel-svar-kommunikasjon mellom meldingsinfrastruktur endepunkt."
  remarks: "Grensesnittet IReplyChannel inkluderer synkrone og asynkrone varianter av en <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A>metoden returneres en <xref:System.ServiceModel.Channels.RequestContext>som kan brukes til å konstruere svar på forespørsler som er mottatt.</xref:System.ServiceModel.Channels.RequestContext> </xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A>       Kontrakten inneholder synkrone og asynkrone varianter Receive, prøv å motta og for-en-ventemeldingen funksjonalitet.       En IReplyChannel ikke nødvendigvis er bundet til en avsender. Andre kanaler og kanal grensesnitt gir sammenheng mellom avsenderen og svar-kanalen, men basistypen kontrakten gjør uten slike begrensninger.       Pull-modellen brukes sammen med en IReplyChannel for å motta meldinger. Denne modellen består av kaller <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A>(eller en av variantene) og deretter venter på en melding kommer.</xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A>"
  syntax:
    content: 'public interface IReplyChannel : System.ServiceModel.Channels.IChannel'
  implements:
  - System.ServiceModel.Channels.IChannel
  platform:
  - net462
- uid: System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)
  id: BeginReceiveRequest(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IReplyChannel
  langs:
  - csharp
  name: BeginReceiveRequest(AsyncCallback,Object)
  nameWithType: IReplyChannel.BeginReceiveRequest(AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Starter en asynkron operasjon for å motta en tilgjengelig forespørsel med et standard tidsavbrudd."
  remarks: "Metoden BeginReceiveRequest implementerer standard mønsteret til å starte <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest>asynkront.</xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest> Standard tidsavbrudd er 1 minutt. Hvis et mottakstidsavbrudd for er satt på bindingen brukes til å konfigurere tilkoblingen, brukes denne verdien. Bruk <xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>Hvis du vil angi en eksplisitt tidsavbrudd med kallet som overstyrer disse andre verdier.</xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>       Hvis forespørselsmeldingen mottatt overstiger maksimalt meldingen størrelsen som er tillatt av binding som brukes, en <xref:System.ServiceModel.QuotaExceededException>forårsakes.</xref:System.ServiceModel.QuotaExceededException> Størrelsen på meldingen som er angitt av den <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>egenskapen.</xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> Standardverdien er 65536 byte."
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#1](~/add/codesnippet/csharp/b714b94c-13fc-4c03-a779-_1.cs)]"
  syntax:
    content: public IAsyncResult BeginReceiveRequest (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Den <xref:System.AsyncCallback>representant får beskjed om den asynkrone motta at en forespørsel om-operasjonen er fullført.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Intet objekt angitt av appen, som inneholder informasjon om knyttet til et asynkront mottatt en forespørselsoperasjon."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som refererer til det asynkrone mottaket av forespørselen.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IReplyChannel
  langs:
  - csharp
  name: BeginReceiveRequest(TimeSpan,AsyncCallback,Object)
  nameWithType: IReplyChannel.BeginReceiveRequest(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Starter en asynkron operasjon for å motta en tilgjengelig forespørsel med en angitt tidsavbrudd."
  remarks: "Metoden BeginReceiveRequest implementerer standard mønsteret til å starte <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%28System.TimeSpan%29>asynkront.</xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%28System.TimeSpan%29> Tidsavbruddet som er angitt i denne metoden overstyrer et receive-tidsavbruddet som er angitt for binding som brukes til å konfigurere tilkoblingen.       Hvis forespørselsmeldingen mottatt overstiger maksimalt meldingen størrelsen som er tillatt av binding som brukes, en <xref:System.ServiceModel.QuotaExceededException>forårsakes.</xref:System.ServiceModel.QuotaExceededException> Størrelsen på meldingen som er angitt av den <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>egenskapen.</xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> Standardverdien er 65536 byte."
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#2](~/add/codesnippet/csharp/6f48cd8d-c63c-4708-86c4-_1.cs)]"
  syntax:
    content: public IAsyncResult BeginReceiveRequest (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Den <xref:System.TimeSpan>som angir intervallet ventetid for mottak av en tilgjengelig forespørsel.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "Den <xref:System.AsyncCallback>representant får beskjed om den asynkrone motta at en forespørsel om-operasjonen er fullført.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Intet objekt angitt av appen, som inneholder informasjon om knyttet til et asynkront mottatt en forespørselsoperasjon."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som refererer til det asynkrone mottaket av forespørselen.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IReplyChannel
  langs:
  - csharp
  name: BeginTryReceiveRequest(TimeSpan,AsyncCallback,Object)
  nameWithType: IReplyChannel.BeginTryReceiveRequest(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Starter en asynkron operasjon for å motta en forespørselsmelding som har en angitt tidsavbrudd og tilstand-objektet som er knyttet til den."
  remarks: "Bruk metoden asynkrone BeginTryReceiveRequest når du trenger den Programbehandling fortsette uten å måtte vente. Bruk av synkron <xref:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest%28System.TimeSpan%2CSystem.ServiceModel.Channels.RequestContext%40%29>metoder når den er godkjent for gjeldende tråd blokkert mens den svarer til forespørselsmeldingen, eller til intervallet er overskredet.</xref:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest%28System.TimeSpan%2CSystem.ServiceModel.Channels.RequestContext%40%29>       Denne metoden får beskjed, via en tilbakeringing om identiteten til hendelsesbehandlingen for operasjonen. Operasjonen er fullført før enten en melding som er tilgjengelig i kanalen eller tidsavbruddet er utført."
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#5](~/add/codesnippet/csharp/cdb71277-0f0f-4e22-85af-_1.cs)]"
  syntax:
    content: public IAsyncResult BeginTryReceiveRequest (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Den <xref:System.TimeSpan>som angir hvor lenge receive-forespørselsoperasjon må fullføres før tidsavbrutt og returnerer <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "Den <xref:System.AsyncCallback>representant får beskjed om den asynkrone motta at en forespørsel om-operasjonen er fullført.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Intet objekt angitt av appen, som inneholder informasjon om knyttet til et asynkront mottatt en forespørselsoperasjon."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som refererer til asynkrone receive-forespørselsoperasjon.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IReplyChannel
  langs:
  - csharp
  name: BeginWaitForRequest(TimeSpan,AsyncCallback,Object)
  nameWithType: IReplyChannel.BeginWaitForRequest(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Starter en asynkron forespørsel-operasjon som ikke har angitt tidsavbrudd og tilstand-objektet som er knyttet til den."
  remarks: "Bruk av synkron <xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29>metoden når den er godkjent for gjeldende tråd blokkert mens den venter på en forespørselsmelding kommer i køen.</xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29> Tråden er blokkert til den angitte `timeout`.       Denne metoden får beskjed, via en tilbakeringing om identiteten til hendelsesbehandlingen for operasjonen. Operasjonen er fullført før enten en forespørselsmelding er tilgjengelig i kanalen eller tidsavbruddet er utført."
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#10](~/add/codesnippet/csharp/80573a5a-f5c0-4be0-a875-_1.cs)]"
  syntax:
    content: public IAsyncResult BeginWaitForRequest (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Den <xref:System.TimeSpan>som angir intervallet ventetid for mottak av en tilgjengelig forespørsel.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "Den <xref:System.AsyncCallback>representant får beskjed om den asynkrone motta at en forespørsel om-operasjonen er fullført.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Intet objekt angitt av appen, som inneholder informasjon om knyttet til et asynkront mottatt en forespørselsoperasjon."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som refererer til den asynkrone operasjonen skal vente på en forespørselsmelding kommer.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest(System.IAsyncResult)
  id: EndReceiveRequest(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IReplyChannel
  langs:
  - csharp
  name: EndReceiveRequest(IAsyncResult)
  nameWithType: IReplyChannel.EndReceiveRequest(IAsyncResult)
  fullName: System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Fullfører en asynkron operasjon for å motta en tilgjengelig forespørsel."
  remarks: "Hvis forespørselsmeldingen mottatt overstiger maksimalt meldingen størrelsen som er tillatt av binding som brukes, en <xref:System.ServiceModel.QuotaExceededException>forårsakes.</xref:System.ServiceModel.QuotaExceededException> Størrelsen på meldingen som er angitt av den <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>egenskapen.</xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> Standardverdien er 65536 byte."
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#3](~/add/codesnippet/csharp/c3561a14-d2f1-46f1-99c2-_1.cs)]"
  syntax:
    content: public System.ServiceModel.Channels.RequestContext EndReceiveRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>returnert av et kall til den <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive*>metoden.</xref:System.ServiceModel.Channels.IInputChannel.BeginReceive*> </xref:System.IAsyncResult>"
    return:
      type: System.ServiceModel.Channels.RequestContext
      description: "Den <xref:System.ServiceModel.Channels.RequestContext>brukes til å lage et svar på forespørselen.</xref:System.ServiceModel.Channels.RequestContext>"
  overload: System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest(System.IAsyncResult,System.ServiceModel.Channels.RequestContext@)
  id: EndTryReceiveRequest(System.IAsyncResult,System.ServiceModel.Channels.RequestContext@)
  parent: System.ServiceModel.Channels.IReplyChannel
  langs:
  - csharp
  name: EndTryReceiveRequest(IAsyncResult,RequestContext)
  nameWithType: IReplyChannel.EndTryReceiveRequest(IAsyncResult,RequestContext)
  fullName: System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest(IAsyncResult,RequestContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Fullfører angitt asynkron operasjon for å motta en forespørselsmelding."
  remarks: ''
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#6](~/add/codesnippet/csharp/2c432ec9-bfc6-46e4-8a1c-_1.cs)]"
  syntax:
    content: public bool EndTryReceiveRequest (IAsyncResult result, out System.ServiceModel.Channels.RequestContext context);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>returnert av et kall til den &lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt; metode.</xref:System.IAsyncResult>"
    - id: context
      type: System.ServiceModel.Channels.RequestContext
      description: "Den <xref:System.ServiceModel.Channels.RequestContext>mottatt.</xref:System.ServiceModel.Channels.RequestContext>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis en forespørselsmelding mottas før det angitte intervallet for tid går; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IReplyChannel.EndWaitForRequest(System.IAsyncResult)
  id: EndWaitForRequest(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IReplyChannel
  langs:
  - csharp
  name: EndWaitForRequest(IAsyncResult)
  nameWithType: IReplyChannel.EndWaitForRequest(IAsyncResult)
  fullName: System.ServiceModel.Channels.IReplyChannel.EndWaitForRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Fullført angitte asynkrone Vent-for-en-forespørselsmeldingen-operasjonen."
  remarks: ''
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#11](~/add/codesnippet/csharp/fc7d466d-2acc-417f-aa1b-_1.cs)]"
  syntax:
    content: public bool EndWaitForRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som identifiserer den &lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt; operasjonen er fullført, og som ikke hente en resultatet.</xref:System.IAsyncResult>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis en forespørsel mottas før det angitte intervallet for tid går; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.IReplyChannel.EndWaitForRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IReplyChannel.LocalAddress
  id: LocalAddress
  parent: System.ServiceModel.Channels.IReplyChannel
  langs:
  - csharp
  name: LocalAddress
  nameWithType: IReplyChannel.LocalAddress
  fullName: System.ServiceModel.Channels.IReplyChannel.LocalAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Henter adressen som svar kanalen mottar meldinger."
  remarks: ''
  example:
  - "The following code illustrates how to implement this property:  \n  \n [!code-cs[S_UE_MessageInterceptor#0](~/add/codesnippet/csharp/p-system.servicemodel.ch_2_1.cs)]"
  syntax:
    content: public System.ServiceModel.EndpointAddress LocalAddress { get; }
    return:
      type: System.ServiceModel.EndpointAddress
      description: "Den <xref:System.ServiceModel.EndpointAddress>som svar kanalen mottar meldinger.</xref:System.ServiceModel.EndpointAddress>"
  overload: System.ServiceModel.Channels.IReplyChannel.LocalAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IReplyChannel.ReceiveRequest
  id: ReceiveRequest
  parent: System.ServiceModel.Channels.IReplyChannel
  langs:
  - csharp
  name: ReceiveRequest()
  nameWithType: IReplyChannel.ReceiveRequest()
  fullName: System.ServiceModel.Channels.IReplyChannel.ReceiveRequest()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Returnerer konteksten for forespørselen mottatt, hvis det er tilgjengelig. Hvis en kontekst som ikke er tilgjengelig, venter du til det finnes en tilgjengelig."
  remarks: "<xref:System.ServiceModel.Channels.RequestContext>innkapsler forespørselsmeldingen og en mekanisme for svar på meldingen.</xref:System.ServiceModel.Channels.RequestContext>       ReceiveRequest kan bare kalles flere ganger eller samtidig. Bare én ReceiveRequest-kallet er fullført per mottok forespørselen.       Hvis forespørselsmeldingen mottatt overstiger maksimalt meldingen størrelsen som er tillatt av binding som brukes, en <xref:System.ServiceModel.QuotaExceededException>forårsakes.</xref:System.ServiceModel.QuotaExceededException> Størrelsen på meldingen som er angitt av den <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>egenskapen.</xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> Standardverdien er 65536 byte."
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#7](~/add/codesnippet/csharp/m-system.servicemodel.ch_9_1.cs)]"
  syntax:
    content: public System.ServiceModel.Channels.RequestContext ReceiveRequest ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.RequestContext
      description: "Den <xref:System.ServiceModel.Channels.RequestContext>brukes til å konstruere svar.</xref:System.ServiceModel.Channels.RequestContext>"
  overload: System.ServiceModel.Channels.IReplyChannel.ReceiveRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IReplyChannel.ReceiveRequest(System.TimeSpan)
  id: ReceiveRequest(System.TimeSpan)
  parent: System.ServiceModel.Channels.IReplyChannel
  langs:
  - csharp
  name: ReceiveRequest(TimeSpan)
  nameWithType: IReplyChannel.ReceiveRequest(TimeSpan)
  fullName: System.ServiceModel.Channels.IReplyChannel.ReceiveRequest(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Returnerer konteksten for forespørselen mottatt, hvis det er tilgjengelig. Hvis en kontekst som ikke er tilgjengelig, venter du til det finnes en tilgjengelig."
  remarks: "<xref:System.ServiceModel.Channels.RequestContext>innkapsler forespørselsmeldingen og en mekanisme for svar på meldingen.</xref:System.ServiceModel.Channels.RequestContext>       <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A>kan bare kalles flere ganger eller samtidig.</xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> Bare én <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A>kallet er fullført per forespørselen som er mottatt.</xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A>       Hvis forespørselsmeldingen mottatt overstiger maksimalt meldingen størrelsen som er tillatt av binding som brukes, en <xref:System.ServiceModel.QuotaExceededException>forårsakes.</xref:System.ServiceModel.QuotaExceededException> Størrelsen på meldingen som er angitt av den <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>egenskapen.</xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> Standardverdien er 65536 byte."
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#8](~/add/codesnippet/csharp/m-system.servicemodel.ch_3_1.cs)]"
  syntax:
    content: public System.ServiceModel.Channels.RequestContext ReceiveRequest (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Den <xref:System.TimeSpan>som angir hvor lenge mottak av en forespørsel om-operasjonen er fullført før tidsavbrutt og returnerer <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.TimeSpan>"
    return:
      type: System.ServiceModel.Channels.RequestContext
      description: "Den <xref:System.ServiceModel.Channels.RequestContext>brukes til å konstruere svar.</xref:System.ServiceModel.Channels.RequestContext>"
  overload: System.ServiceModel.Channels.IReplyChannel.ReceiveRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)
  id: TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)
  parent: System.ServiceModel.Channels.IReplyChannel
  langs:
  - csharp
  name: TryReceiveRequest(TimeSpan,RequestContext)
  nameWithType: IReplyChannel.TryReceiveRequest(TimeSpan,RequestContext)
  fullName: System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest(TimeSpan,RequestContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Returnerer en verdi som angir om en forespørsel mottas før et angitt intervall for tiden går."
  remarks: "Bruk TryReceiveRequest når den er godkjent for gjeldende tråd blokkert mens den venter på en forespørselsmelding kommer i køen. Tråden er blokkert til den angitte `timeout`. Hvis du trenger den Programbehandling fortsette uten å måtte vente, bruker du den asynkrone <xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>metode.</xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>"
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#4](~/add/codesnippet/csharp/78581c5e-1028-4e54-ba3b-_1.cs)]"
  syntax:
    content: public bool TryReceiveRequest (TimeSpan timeout, out System.ServiceModel.Channels.RequestContext context);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Den <xref:System.TimeSpan>som angir hvor lenge mottak av en forespørsel om-operasjonen er fullført før tidsavbrutt og returnerer <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.TimeSpan>"
    - id: context
      type: System.ServiceModel.Channels.RequestContext
      description: "Den <xref:System.ServiceModel.Channels.RequestContext>mottatt.</xref:System.ServiceModel.Channels.RequestContext>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis en forespørselsmelding mottas før det angitte intervallet for tid går; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IReplyChannel.WaitForRequest(System.TimeSpan)
  id: WaitForRequest(System.TimeSpan)
  parent: System.ServiceModel.Channels.IReplyChannel
  langs:
  - csharp
  name: WaitForRequest(TimeSpan)
  nameWithType: IReplyChannel.WaitForRequest(TimeSpan)
  fullName: System.ServiceModel.Channels.IReplyChannel.WaitForRequest(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Returnerer en verdi som angir om en forespørselsmelding mottas før et angitt intervall for tiden går."
  remarks: "Kaller WaitForRequest resulterer ikke i en forespørselsmelding er mottatt eller behandle på noen måte.       Den <xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>metoden finnes først og fremst for utførte scenarioer der brukeren vil motta melding med en transaksjon.</xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> Når du bruker akkurat <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A>vanligvis for dette brukeren må opprette transaksjonen, og kall deretter <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A>og håper meldingen som kommer før transaksjonen blir tidsavbrutt, som ikke er mulig.</xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A> </xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A>       I stedet brukeren kan ringe WaitForRequest og angi tidsavbrudd (selv uendelig), og deretter når en melding ankommer de kan åpne transaksjon, kaller <xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A>og være sikker på at de kan få meldingen tilbake før transaksjonen utløper.</xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A>       Bruk WaitForRequest når den er godkjent for gjeldende tråd blokkert mens den venter på en melding kommer i køen. Tråden er blokkert til den angitte `timeout`. Hvis du trenger den Programbehandling fortsette uten å måtte vente, bruker du den asynkrone <xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>metode.</xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>"
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#9](~/add/codesnippet/csharp/m-system.servicemodel.ch_6_1.cs)]"
  syntax:
    content: public bool WaitForRequest (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Den <xref:System.TimeSpan>som angir hvor lenge en forespørsel om operasjonen er fullført før tidsavbrutt og returnerer <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.TimeSpan>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis en forespørsel mottas før det angitte intervallet for tid går; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.IReplyChannel.WaitForRequest*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: BeginReceiveRequest(AsyncCallback,Object)
  nameWithType: IReplyChannel.BeginReceiveRequest(AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: BeginReceiveRequest(TimeSpan,AsyncCallback,Object)
  nameWithType: IReplyChannel.BeginReceiveRequest(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(TimeSpan,AsyncCallback,Object)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: BeginTryReceiveRequest(TimeSpan,AsyncCallback,Object)
  nameWithType: IReplyChannel.BeginTryReceiveRequest(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: BeginWaitForRequest(TimeSpan,AsyncCallback,Object)
  nameWithType: IReplyChannel.BeginWaitForRequest(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: EndReceiveRequest(IAsyncResult)
  nameWithType: IReplyChannel.EndReceiveRequest(IAsyncResult)
  fullName: System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest(IAsyncResult)
- uid: System.ServiceModel.Channels.RequestContext
  parent: System.ServiceModel.Channels
  isExternal: true
  name: RequestContext
  nameWithType: RequestContext
  fullName: System.ServiceModel.Channels.RequestContext
- uid: System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest(System.IAsyncResult,System.ServiceModel.Channels.RequestContext@)
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: EndTryReceiveRequest(IAsyncResult,RequestContext)
  nameWithType: IReplyChannel.EndTryReceiveRequest(IAsyncResult,RequestContext)
  fullName: System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest(IAsyncResult,RequestContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.IReplyChannel.EndWaitForRequest(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: EndWaitForRequest(IAsyncResult)
  nameWithType: IReplyChannel.EndWaitForRequest(IAsyncResult)
  fullName: System.ServiceModel.Channels.IReplyChannel.EndWaitForRequest(IAsyncResult)
- uid: System.ServiceModel.Channels.IReplyChannel.LocalAddress
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: LocalAddress
  nameWithType: IReplyChannel.LocalAddress
  fullName: System.ServiceModel.Channels.IReplyChannel.LocalAddress
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.Channels.IReplyChannel.ReceiveRequest
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: ReceiveRequest()
  nameWithType: IReplyChannel.ReceiveRequest()
  fullName: System.ServiceModel.Channels.IReplyChannel.ReceiveRequest()
- uid: System.ServiceModel.Channels.IReplyChannel.ReceiveRequest(System.TimeSpan)
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: ReceiveRequest(TimeSpan)
  nameWithType: IReplyChannel.ReceiveRequest(TimeSpan)
  fullName: System.ServiceModel.Channels.IReplyChannel.ReceiveRequest(TimeSpan)
- uid: System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: TryReceiveRequest(TimeSpan,RequestContext)
  nameWithType: IReplyChannel.TryReceiveRequest(TimeSpan,RequestContext)
  fullName: System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest(TimeSpan,RequestContext)
- uid: System.ServiceModel.Channels.IReplyChannel.WaitForRequest(System.TimeSpan)
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: WaitForRequest(TimeSpan)
  nameWithType: IReplyChannel.WaitForRequest(TimeSpan)
  fullName: System.ServiceModel.Channels.IReplyChannel.WaitForRequest(TimeSpan)
- uid: System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest*
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: BeginReceiveRequest
  nameWithType: IReplyChannel.BeginReceiveRequest
- uid: System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest*
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: BeginTryReceiveRequest
  nameWithType: IReplyChannel.BeginTryReceiveRequest
- uid: System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest*
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: BeginWaitForRequest
  nameWithType: IReplyChannel.BeginWaitForRequest
- uid: System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest*
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: EndReceiveRequest
  nameWithType: IReplyChannel.EndReceiveRequest
- uid: System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest*
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: EndTryReceiveRequest
  nameWithType: IReplyChannel.EndTryReceiveRequest
- uid: System.ServiceModel.Channels.IReplyChannel.EndWaitForRequest*
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: EndWaitForRequest
  nameWithType: IReplyChannel.EndWaitForRequest
- uid: System.ServiceModel.Channels.IReplyChannel.LocalAddress*
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: LocalAddress
  nameWithType: IReplyChannel.LocalAddress
- uid: System.ServiceModel.Channels.IReplyChannel.ReceiveRequest*
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: ReceiveRequest
  nameWithType: IReplyChannel.ReceiveRequest
- uid: System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest*
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: TryReceiveRequest
  nameWithType: IReplyChannel.TryReceiveRequest
- uid: System.ServiceModel.Channels.IReplyChannel.WaitForRequest*
  parent: System.ServiceModel.Channels.IReplyChannel
  isExternal: false
  name: WaitForRequest
  nameWithType: IReplyChannel.WaitForRequest
