### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.EvidenceBase
  id: EvidenceBase
  children:
  - System.Security.Policy.EvidenceBase.#ctor
  - System.Security.Policy.EvidenceBase.Clone
  langs:
  - csharp
  name: EvidenceBase
  nameWithType: EvidenceBase
  fullName: System.Security.Policy.EvidenceBase
  type: Class
  summary: "Inneholder en basisklasse fra hvilke alle objekter som skal brukes som bevis må være utledet."
  remarks: "Før den [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], nesten alle objektet kan brukes som et objekt som bevis hvis verts koden vil bruke den som bevis. For eksempel .NET Framework kode gjenkjent <xref:System.Uri?displayProperty=fullName>objekter som bevis.</xref:System.Uri?displayProperty=fullName> Common language runtime (CLR) anses som bevis objekter som <xref:System.Object?displayProperty=fullName>refererer til, og ikke bruke en type sikkerhetsnivået dem.</xref:System.Object?displayProperty=fullName>       Dette vises et problem fordi det fantes implisitt begrensninger typer kan brukes som bevis objekter. Nærmere bestemt et objekt som brukes som bevis hadde skal serialiseres og kan ikke `null`. Hvis disse kravene ikke ble oppfylt, oppstod et avvik i CLR når en operasjon som krever én av disse Forutsetninger ble utført.       Klassen EvidenceBase alle objekter som bevis må være utledet fra, ble introdusert i den [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] å aktivere begrensninger i av objekttyper som kan brukes som bevis og gir deg muligheten til å legge til nye funksjoner og krav i alle bevis-objekter. Klassen EvidenceBase sikrer, når instantiering, at bevis-objektet er serialiseres. I tillegg aktiverer den nye bevis krav opprettes ved å legge til nye standard implementeringer basisklassen.       Alle typer som brukes av CLR som bevis objekter er blitt oppdatert i den [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] avledes fra EvidenceBase."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class EvidenceBase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.EvidenceBase.#ctor
  id: '#ctor'
  parent: System.Security.Policy.EvidenceBase
  langs:
  - csharp
  name: EvidenceBase()
  nameWithType: EvidenceBase.EvidenceBase()
  fullName: System.Security.Policy.EvidenceBase.EvidenceBase()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Policy.EvidenceBase&quot;> </xref> klasse."
  remarks: "Alle objekter som skal brukes som bevis må være serialiseres. Du må merke noen avledede typer som kan serialiseres, fordi attributtet serializable ikke overføre til avledede klasser."
  syntax:
    content: protected EvidenceBase ();
    parameters: []
  overload: System.Security.Policy.EvidenceBase.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Et objekt som skal brukes som bevis ikke kan serialiseres."
  platform:
  - net462
- uid: System.Security.Policy.EvidenceBase.Clone
  id: Clone
  parent: System.Security.Policy.EvidenceBase
  langs:
  - csharp
  name: Clone()
  nameWithType: EvidenceBase.Clone()
  fullName: System.Security.Policy.EvidenceBase.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Oppretter et nytt objekt som er et fullstendig eksemplar av den gjeldende forekomsten."
  remarks: "Duplisert er et fullstendig eksemplar som inneholder alle bevis objektene i samlingen."
  syntax:
    content: public virtual System.Security.Policy.EvidenceBase Clone ();
    parameters: []
    return:
      type: System.Security.Policy.EvidenceBase
      description: "En kopi av dette bevis-objektet."
  overload: System.Security.Policy.EvidenceBase.Clone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Policy.EvidenceBase.#ctor
  parent: System.Security.Policy.EvidenceBase
  isExternal: false
  name: EvidenceBase()
  nameWithType: EvidenceBase.EvidenceBase()
  fullName: System.Security.Policy.EvidenceBase.EvidenceBase()
- uid: System.Security.Policy.EvidenceBase.Clone
  parent: System.Security.Policy.EvidenceBase
  isExternal: false
  name: Clone()
  nameWithType: EvidenceBase.Clone()
  fullName: System.Security.Policy.EvidenceBase.Clone()
- uid: System.Security.Policy.EvidenceBase
  parent: System.Security.Policy
  isExternal: false
  name: EvidenceBase
  nameWithType: EvidenceBase
  fullName: System.Security.Policy.EvidenceBase
- uid: System.Security.Policy.EvidenceBase.#ctor*
  parent: System.Security.Policy.EvidenceBase
  isExternal: false
  name: EvidenceBase
  nameWithType: EvidenceBase.EvidenceBase
- uid: System.Security.Policy.EvidenceBase.Clone*
  parent: System.Security.Policy.EvidenceBase
  isExternal: false
  name: Clone
  nameWithType: EvidenceBase.Clone
