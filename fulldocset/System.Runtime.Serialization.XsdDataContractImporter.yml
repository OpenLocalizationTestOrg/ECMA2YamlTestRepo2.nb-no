### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.XsdDataContractImporter
  id: XsdDataContractImporter
  children:
  - System.Runtime.Serialization.XsdDataContractImporter.#ctor
  - System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)
  - System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)
  - System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  - System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  - System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  - System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit
  - System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)
  - System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)
  - System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)
  - System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)
  - System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  - System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  - System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  - System.Runtime.Serialization.XsdDataContractImporter.Options
  langs:
  - csharp
  name: XsdDataContractImporter
  nameWithType: XsdDataContractImporter
  fullName: System.Runtime.Serialization.XsdDataContractImporter
  type: Class
  summary: "Tillater at transformeringen av et sett med XML-skjemafiler (XSD) til common language runtime (CLR) typer."
  remarks: "Bruk av XsdDataContractImporter Hvis du oppretter en webtjeneste må fungere sammen med en eksisterende webtjeneste, eller til å opprette kontrakten datatyper fra XML-skjemaer. XsdDataContractImporter vil transformeringen et sett med XML-skjemaer og opprette den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] typer som representerer dataene kontrakt i et valgte programmeringsspråk. Hvis du vil opprette koden, kan du bruke klassene i den <xref:System.CodeDom>navneområde.</xref:System.CodeDom>       Bruk derimot den <xref:System.Runtime.Serialization.XsdDataContractExporter>klasse når du har opprettet en webtjeneste som inneholder data som er representert av CLR-typer og når du trenger å eksportere XML-skjemaer for hver data som brukes av andre nettjenester.</xref:System.Runtime.Serialization.XsdDataContractExporter> Det vil si <xref:System.Runtime.Serialization.XsdDataContractExporter>overfører et sett med CLR-typer i et sett med XML-skjemaer.</xref:System.Runtime.Serialization.XsdDataContractExporter>      > [!NOTE] > For å generere CLR-typer fra XML-skjemaer på utformingstidspunktet, kan du bruke den [ServiceModel Metadata verktøyet verktøyet (Svcutil.exe)](~/add/includes/ajax-current-ext-md.md). Generert kode fra XSD-filer, kan du bruke den `/dataContractOnly` switch av verktøyet. Du kan også bruke XsdDataContractImporter Hvis du trenger mer kontroll over prosessen eller trenger å gjøre det programmatisk."
  example:
  - "The following example creates an <xref:System.Xml.Schema.XmlSchemaSet> and calls the <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> method to create a <xref:System.CodeDom.CodeCompileUnit>. The <xref:System.CodeDom.CodeCompileUnit> is then used to create both Visual C# and Visual Basic code files.  \n  \n [!code-cs[XsdDataContractImporter#0](~/add/codesnippet/csharp/t-system.runtime.seriali_7_1.cs)]\n [!code-vb[XsdDataContractImporter#0](~/add/codesnippet/visualbasic/t-system.runtime.seriali_7_1.vb)]"
  syntax:
    content: public class XsdDataContractImporter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.#ctor
  id: '#ctor'
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: XsdDataContractImporter()
  nameWithType: XsdDataContractImporter.XsdDataContractImporter()
  fullName: System.Runtime.Serialization.XsdDataContractImporter.XsdDataContractImporter()
  type: Constructor
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Runtime.Serialization.XsdDataContractImporter&quot;> </xref> klasse."
  syntax:
    content: public XsdDataContractImporter ();
    parameters: []
  overload: System.Runtime.Serialization.XsdDataContractImporter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)
  id: '#ctor(System.CodeDom.CodeCompileUnit)'
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: XsdDataContractImporter(CodeCompileUnit)
  nameWithType: XsdDataContractImporter.XsdDataContractImporter(CodeCompileUnit)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.XsdDataContractImporter(CodeCompileUnit)
  type: Constructor
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Runtime.Serialization.XsdDataContractImporter&quot;> </xref> klasse med den <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> som skal brukes til å generere CLR-kode."
  remarks: "Bruk denne konstruktøren legge til flere kode i en <xref:System.CodeDom.CodeCompileUnit>som allerede er generert.</xref:System.CodeDom.CodeCompileUnit>"
  example:
  - "The following example creates an <xref:System.Xml.Schema.XmlSchemaSet> and calls the <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> method to create a <xref:System.CodeDom.CodeCompileUnit>. The <xref:System.CodeDom.CodeCompileUnit> is then used to create both Visual C# and Visual Basic code files.  \n  \n [!code-cs[XsdDataContractImporter#1](~/add/codesnippet/csharp/03617d2d-d820-45ea-9187-_1.cs)]\n [!code-vb[XsdDataContractImporter#1](~/add/codesnippet/visualbasic/03617d2d-d820-45ea-9187-_1.vb)]"
  syntax:
    content: public XsdDataContractImporter (System.CodeDom.CodeCompileUnit codeCompileUnit);
    parameters:
    - id: codeCompileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "Den <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> som skal brukes til å lagre koden."
  overload: System.Runtime.Serialization.XsdDataContractImporter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)
  id: CanImport(System.Xml.Schema.XmlSchemaSet)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: CanImport(XmlSchemaSet)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Henter en verdi som angir om skjemaene finnes i en <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> kan gjøres om til et <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>."
  remarks: ''
  example:
  - "The following example calls the CanImport method to determine whether the <xref:System.CodeDom.CodeCompileUnit> can be generated.  \n  \n [!code-cs[XsdDataContractImporter#2](~/add/codesnippet/csharp/b2b83fee-fce3-4860-9703-_1.cs)]\n [!code-vb[XsdDataContractImporter#2](~/add/codesnippet/visualbasic/b2b83fee-fce3-4860-9703-_1.vb)]"
  syntax:
    content: public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "En <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> som inneholder skjemaer til transformeringen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis skjemaene kan gjøres om til kontrakten datatyper; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Serialization.XsdDataContractImporter.CanImport*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: "En datakontrakt som er involvert i importen er ugyldig."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  id: CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: CanImport(XmlSchemaSet,ICollection<XmlQualifiedName>)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet,ICollection<XmlQualifiedName>)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet,ICollection<XmlQualifiedName>)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Henter en verdi som angir om det angitte settet med typer finnes i en <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> kan gjøres om til CLR-typer som er generert på en <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>."
  syntax:
    content: public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas, System.Collections.Generic.ICollection<System.Xml.XmlQualifiedName> typeNames);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "En <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> som inneholder skjemaer til transformeringen."
    - id: typeNames
      type: System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName}
      description: "En &lt;xref:System.Collections.Generic.ICollection%601&gt; av <xref:System.Xml.XmlQualifiedName>som representerer settet med skjematypene å importere.</xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis skjemaene kan gjøres om; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Serialization.XsdDataContractImporter.CanImport*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> or <code>typeNames</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: "En datakontrakt som er involvert i importen er ugyldig."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  id: CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: CanImport(XmlSchemaSet,XmlSchemaElement)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet,XmlSchemaElement)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet,XmlSchemaElement)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Henter en verdi som angir om en bestemt schema-elementet finnes i en <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> kan importeres."
  remarks: "Denne metoden kontrollerer typen og alle skjematypene det henvises til fra den."
  syntax:
    content: public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.XmlSchemaElement element);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "En <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> å importere."
    - id: element
      type: System.Xml.Schema.XmlSchemaElement
      description: "En bestemt <xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;> </xref> å se i settet med skjemaer."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis elementet kan ikke importeres; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Serialization.XsdDataContractImporter.CanImport*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> or <code>element</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: "En datakontrakt som er involvert i importen er ugyldig."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  id: CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: CanImport(XmlSchemaSet,XmlQualifiedName)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet,XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Henter en verdi som angir om skjemaene finnes i en <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> kan gjøres om til et <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>."
  remarks: "Du finner mer informasjon om typer som kan importeres [typer støttes av Data kontrakten serialiseringen](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.XmlQualifiedName typeName);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "En <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> som inneholder gjengivelsene skjemaet."
    - id: typeName
      type: System.Xml.XmlQualifiedName
      description: "En <xref:System.Collections.IList>av <xref:System.Xml.XmlQualifiedName>som angir navnene på skjematypene som skal importeres fra den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.XmlQualifiedName> </xref:System.Collections.IList>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis skjemaene kan gjøres om til kontrakten datatyper; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Serialization.XsdDataContractImporter.CanImport*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> or <code>typeName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: "En datakontrakt som er involvert i importen er ugyldig."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit
  id: CodeCompileUnit
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: CodeCompileUnit
  nameWithType: XsdDataContractImporter.CodeCompileUnit
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit
  type: Property
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Henter en <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> brukes til lagring av CLR-typer som er generert."
  remarks: "Kall denne egenskapen når du har importert skjemaer ved hjelp av den <xref:System.Runtime.Serialization.XsdDataContractImporter>Access den <xref:System.CodeDom.CodeCompileUnit>som alle genererte koden er lagret.</xref:System.CodeDom.CodeCompileUnit> </xref:System.Runtime.Serialization.XsdDataContractImporter>"
  example:
  - "The following example uses creates a <xref:System.CodeDom.CodeCompileUnit>. The <xref:System.CodeDom.CodeCompileUnit> is then used to create both a Visual C# and Visual Basic code file.  \n  \n [!code-cs[XsdDataContractImporter#1](~/add/codesnippet/csharp/p-system.runtime.seriali_1_1.cs)]\n [!code-vb[XsdDataContractImporter#1](~/add/codesnippet/visualbasic/p-system.runtime.seriali_1_1.vb)]"
  syntax:
    content: public System.CodeDom.CodeCompileUnit CodeCompileUnit { get; }
    return:
      type: System.CodeDom.CodeCompileUnit
      description: "En <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> brukes til å lagre CLR-typer som er generert."
  overload: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)
  id: GetCodeTypeReference(System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: GetCodeTypeReference(XmlQualifiedName)
  nameWithType: XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Returnerer en <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> til CLR-typen som er generert for skjematypen med den angitte <xref:System.Xml.XmlQualifiedName>.</xref:System.Xml.XmlQualifiedName>"
  remarks: "Bruk denne metoden til å slå opp referanse til en generert CLR-typen etter kall av <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A>metode.</xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> Den <xref:System.CodeDom.CodeTypeReference>inneholder navnet på den genererte typen og kan brukes til å slå opp den tilsvarende <xref:System.CodeDom.CodeTypeDeclaration>i <xref:System.CodeDom.CodeCompileUnit>.</xref:System.CodeDom.CodeCompileUnit> </xref:System.CodeDom.CodeTypeDeclaration> </xref:System.CodeDom.CodeTypeReference>"
  syntax:
    content: public System.CodeDom.CodeTypeReference GetCodeTypeReference (System.Xml.XmlQualifiedName typeName);
    parameters:
    - id: typeName
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>Som angir skjemaet til å se. du</xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.CodeDom.CodeTypeReference
      description: "En <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> referanse til CLR-type som er generert for skjematypen med den <code> typeName </code> angitt."
  overload: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)
  id: GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: GetCodeTypeReference(XmlQualifiedName,XmlSchemaElement)
  nameWithType: XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName,XmlSchemaElement)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName,XmlSchemaElement)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Returnerer en <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> for den angitte XML kvalifiserte element og schema-elementet."
  remarks: "Schema-elementet er nødvendig for data om typen som er angitt i elementet omfang. Det primære eksemplet på dette er XSD-attributtet `nillable`. I skjemaet, innstillingen `nillable` til `true` er angitt i inneholdende schema-elementet mens begrep nullverdi uttrykkes i CLR-typen <xref:System.Nullable%601>.</xref:System.Nullable%601> Elementet er sendt slik at denne importer kan slå opp elementet nivå-informasjon og returnere riktig type-referanse i henhold til dette.       Når du importerer WSDL, hver parameter er importert separat og parameter-elementer må derfor være sendt separat."
  syntax:
    content: public System.CodeDom.CodeTypeReference GetCodeTypeReference (System.Xml.XmlQualifiedName typeName, System.Xml.Schema.XmlSchemaElement element);
    parameters:
    - id: typeName
      type: System.Xml.XmlQualifiedName
      description: "En <xref:System.Xml.XmlQualifiedName>som angir det kvalifiserte navnet på XML av skjematype for å se. du</xref:System.Xml.XmlQualifiedName>"
    - id: element
      type: System.Xml.Schema.XmlSchemaElement
      description: "En <xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;> </xref> som angir et element i et XML-skjema."
    return:
      type: System.CodeDom.CodeTypeReference
      description: "En <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> som representerer typen som ble generert for den angitte XML-typen."
  overload: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)
  id: GetKnownTypeReferences(System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: GetKnownTypeReferences(XmlQualifiedName)
  nameWithType: XsdDataContractImporter.GetKnownTypeReferences(XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(XmlQualifiedName)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Returnerer en liste over <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> objekter som representerer kjente typer genereres under generering av kode for den angitte XML-typen."
  remarks: "Ved generering av CLR-typer for XML-typer, genereres også kjente typer for alle avledede typer som finnes i skjemaet. Disse kjente typer er lagt til med attributter den genererte koden i mange tilfeller. (For eksempel se <xref:System.Runtime.Serialization.KnownTypeAttribute>klasse.</xref:System.Runtime.Serialization.KnownTypeAttribute> ) Imidlertid for typen på øverste nivå må det være en måte å returnere sett av kjente typer som er generert. Denne metoden returnerer den <xref:System.CodeDom.CodeTypeReference>for kjente typer som ble generert for en bestemt skjematypen.</xref:System.CodeDom.CodeTypeReference>       Hvis du vil ha mer informasjon, se [kontrakten kjent datatyper](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Collections.Generic.ICollection<System.CodeDom.CodeTypeReference> GetKnownTypeReferences (System.Xml.XmlQualifiedName typeName);
    parameters:
    - id: typeName
      type: System.Xml.XmlQualifiedName
      description: "En <xref:System.Xml.XmlQualifiedName>som representerer skjematypen til å slå opp kjente typer setningen for.</xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.Collections.Generic.ICollection{System.CodeDom.CodeTypeReference}
      description: "En &lt;xref:System.Collections.Generic.IList%601&gt; av typen <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref>."
  overload: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)
  id: Import(System.Xml.Schema.XmlSchemaSet)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: Import(XmlSchemaSet)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Overfører det angitte settet med XML-skjemaer i en <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> til en <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>."
  remarks: ''
  example:
  - "The following example uses the <xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A> method to test whether a set of schemas can be imported. If the <xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A> method returns `true`, the code invokes the Import method.  \n  \n [!code-cs[XsdDataContractImporter#2](~/add/codesnippet/csharp/8343a280-8e19-434b-8b6b-_1.cs)]\n [!code-vb[XsdDataContractImporter#2](~/add/codesnippet/visualbasic/8343a280-8e19-434b-8b6b-_1.vb)]"
  syntax:
    content: public void Import (System.Xml.Schema.XmlSchemaSet schemas);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "En <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> som inneholder gjengivelsene skjemaet til å generere CLR-typer for."
  overload: System.Runtime.Serialization.XsdDataContractImporter.Import*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  id: Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: Import(XmlSchemaSet,ICollection<XmlQualifiedName>)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet,ICollection<XmlQualifiedName>)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet,ICollection<XmlQualifiedName>)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Overfører det angitte settet med skjematypene i en <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> til CLR-typer som er generert på en <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>."
  syntax:
    content: public void Import (System.Xml.Schema.XmlSchemaSet schemas, System.Collections.Generic.ICollection<System.Xml.XmlQualifiedName> typeNames);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "En <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> som inneholder gjengivelsene skjemaet."
    - id: typeNames
      type: System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName}
      description: "En &lt;xref:System.Collections.Generic.ICollection%601&gt; (av <xref:System.Xml.XmlQualifiedName>) som representerer settet med skjematypene å importere.</xref:System.Xml.XmlQualifiedName>"
  overload: System.Runtime.Serialization.XsdDataContractImporter.Import*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  id: Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: Import(XmlSchemaSet,XmlSchemaElement)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet,XmlSchemaElement)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet,XmlSchemaElement)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Overfører angitte schema-elementet i settet med angitte XML-skjemaer i en <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> og returnerer en <xref:System.Xml.XmlQualifiedName>som representerer datakontraktnavn for det angitte elementet.</xref:System.Xml.XmlQualifiedName>"
  syntax:
    content: public System.Xml.XmlQualifiedName Import (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.XmlSchemaElement element);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "En <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> som inneholder skjemaer til transformeringen."
    - id: element
      type: System.Xml.Schema.XmlSchemaElement
      description: "En <xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;> </xref> som representerer bestemte schema-elementet til transformeringen."
    return:
      type: System.Xml.XmlQualifiedName
      description: "En <xref:System.Xml.XmlQualifiedName>som representerer det angitte elementet.</xref:System.Xml.XmlQualifiedName>"
  overload: System.Runtime.Serialization.XsdDataContractImporter.Import*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> or <code>element</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  id: Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: Import(XmlSchemaSet,XmlQualifiedName)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet,XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Overfører den angitte XML-skjematypen i en <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> til en <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>."
  syntax:
    content: public void Import (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.XmlQualifiedName typeName);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "En <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> som inneholder gjengivelsene skjemaet."
    - id: typeName
      type: System.Xml.XmlQualifiedName
      description: "En <xref:System.Xml.XmlQualifiedName>som representerer en bestemt skjematypen å importere.</xref:System.Xml.XmlQualifiedName>"
  overload: System.Runtime.Serialization.XsdDataContractImporter.Import*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> or <code>typeName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.Options
  id: Options
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: Options
  nameWithType: XsdDataContractImporter.Options
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Options
  type: Property
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Henter eller angir en <xref href=&quot;System.Runtime.Serialization.ImportOptions&quot;> </xref> som inneholder angis alternativer for importen."
  remarks: "Bruk av <xref:System.Runtime.Serialization.ImportOptions>klassen for å tilpasse hvordan CLR-typer genereres under skjemaimport.</xref:System.Runtime.Serialization.ImportOptions>"
  syntax:
    content: public System.Runtime.Serialization.ImportOptions Options { get; set; }
    return:
      type: System.Runtime.Serialization.ImportOptions
      description: "En <xref href=&quot;System.Runtime.Serialization.ImportOptions&quot;> </xref> som inneholder angis alternativer."
  overload: System.Runtime.Serialization.XsdDataContractImporter.Options*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Serialization.InvalidDataContractException
  isExternal: true
  name: System.Runtime.Serialization.InvalidDataContractException
- uid: System.Runtime.Serialization.XsdDataContractImporter.#ctor
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: XsdDataContractImporter()
  nameWithType: XsdDataContractImporter.XsdDataContractImporter()
  fullName: System.Runtime.Serialization.XsdDataContractImporter.XsdDataContractImporter()
- uid: System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: XsdDataContractImporter(CodeCompileUnit)
  nameWithType: XsdDataContractImporter.XsdDataContractImporter(CodeCompileUnit)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.XsdDataContractImporter(CodeCompileUnit)
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CanImport(XmlSchemaSet)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CanImport(XmlSchemaSet,ICollection<XmlQualifiedName>)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet,ICollection<XmlQualifiedName>)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet,ICollection<XmlQualifiedName>)
- uid: System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<XmlQualifiedName>
  nameWithType: ICollection<XmlQualifiedName>
  fullName: System.Collections.Generic.ICollection<System.Xml.XmlQualifiedName>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Xml.XmlQualifiedName>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.XmlQualifiedName
    name: XmlQualifiedName
    nameWithType: XmlQualifiedName
    fullName: XmlQualifiedName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CanImport(XmlSchemaSet,XmlSchemaElement)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet,XmlSchemaElement)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet,XmlSchemaElement)
- uid: System.Xml.Schema.XmlSchemaElement
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaElement
  nameWithType: XmlSchemaElement
  fullName: System.Xml.Schema.XmlSchemaElement
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CanImport(XmlSchemaSet,XmlQualifiedName)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet,XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet,XmlQualifiedName)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CodeCompileUnit
  nameWithType: XsdDataContractImporter.CodeCompileUnit
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: GetCodeTypeReference(XmlQualifiedName)
  nameWithType: XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName)
- uid: System.CodeDom.CodeTypeReference
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: GetCodeTypeReference(XmlQualifiedName,XmlSchemaElement)
  nameWithType: XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName,XmlSchemaElement)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName,XmlSchemaElement)
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: GetKnownTypeReferences(XmlQualifiedName)
  nameWithType: XsdDataContractImporter.GetKnownTypeReferences(XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(XmlQualifiedName)
- uid: System.Collections.Generic.ICollection{System.CodeDom.CodeTypeReference}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<CodeTypeReference>
  nameWithType: ICollection<CodeTypeReference>
  fullName: System.Collections.Generic.ICollection<System.CodeDom.CodeTypeReference>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.CodeDom.CodeTypeReference>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.CodeDom.CodeTypeReference
    name: CodeTypeReference
    nameWithType: CodeTypeReference
    fullName: CodeTypeReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Import(XmlSchemaSet)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet)
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Import(XmlSchemaSet,ICollection<XmlQualifiedName>)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet,ICollection<XmlQualifiedName>)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet,ICollection<XmlQualifiedName>)
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Import(XmlSchemaSet,XmlSchemaElement)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet,XmlSchemaElement)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet,XmlSchemaElement)
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Import(XmlSchemaSet,XmlQualifiedName)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet,XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet,XmlQualifiedName)
- uid: System.Runtime.Serialization.XsdDataContractImporter.Options
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Options
  nameWithType: XsdDataContractImporter.Options
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Options
- uid: System.Runtime.Serialization.ImportOptions
  parent: System.Runtime.Serialization
  isExternal: false
  name: ImportOptions
  nameWithType: ImportOptions
  fullName: System.Runtime.Serialization.ImportOptions
- uid: System.Runtime.Serialization.XsdDataContractImporter.#ctor*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: XsdDataContractImporter
  nameWithType: XsdDataContractImporter.XsdDataContractImporter
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CanImport
  nameWithType: XsdDataContractImporter.CanImport
- uid: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CodeCompileUnit
  nameWithType: XsdDataContractImporter.CodeCompileUnit
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: GetCodeTypeReference
  nameWithType: XsdDataContractImporter.GetCodeTypeReference
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: GetKnownTypeReferences
  nameWithType: XsdDataContractImporter.GetKnownTypeReferences
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Import
  nameWithType: XsdDataContractImporter.Import
- uid: System.Runtime.Serialization.XsdDataContractImporter.Options*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Options
  nameWithType: XsdDataContractImporter.Options
