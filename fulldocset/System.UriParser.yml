### YamlMime:ManagedReference
items:
- uid: System.UriParser
  id: UriParser
  children:
  - System.UriParser.#ctor
  - System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)
  - System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)
  - System.UriParser.IsBaseOf(System.Uri,System.Uri)
  - System.UriParser.IsKnownScheme(System.String)
  - System.UriParser.IsWellFormedOriginalString(System.Uri)
  - System.UriParser.OnNewUri
  - System.UriParser.OnRegister(System.String,System.Int32)
  - System.UriParser.Register(System.UriParser,System.String,System.Int32)
  - System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)
  langs:
  - csharp
  name: UriParser
  nameWithType: UriParser
  fullName: System.UriParser
  type: Class
  summary: "Analyserer en ny URI-skjemaet. Dette er en abstrakt klasse."
  remarks: "Klassen UriParser lar deg opprette parsere for ny URI-adresseskjemaer. Du kan skrive disse parsere i sin helhet, eller parsere kan utledes fra velkjente skjemaene (HTTP FTP og andre skjemaene som er basert på nettverksprotokoller). Hvis du vil opprette en helt ny parser, Arv fra <xref:System.GenericUriParser>.</xref:System.GenericUriParser> Hvis du vil opprette en parser som utvider en velkjente URI-skjemaet, arver fra <xref:System.FtpStyleUriParser>, <xref:System.HttpStyleUriParser>, <xref:System.FileStyleUriParser>, <xref:System.GopherStyleUriParser>, eller <xref:System.LdapStyleUriParser>.</xref:System.LdapStyleUriParser> </xref:System.GopherStyleUriParser> </xref:System.FileStyleUriParser> </xref:System.HttpStyleUriParser> </xref:System.FtpStyleUriParser>       Microsoft anbefaler at du bruker en parser levert med .NET Framework. Bygging av dine egne parseren økes kompleksiteten ved programmet, og vil ikke fungere i tillegg til de leverte parsere."
  syntax:
    content: public abstract class UriParser
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.UriParser.#ctor
  id: '#ctor'
  parent: System.UriParser
  langs:
  - csharp
  name: UriParser()
  nameWithType: UriParser.UriParser()
  fullName: System.UriParser.UriParser()
  type: Constructor
  assemblies:
  - System
  namespace: System
  summary: "Bygger en standard URI-parser."
  syntax:
    content: protected UriParser ();
    parameters: []
  overload: System.UriParser.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)
  id: GetComponents(System.Uri,System.UriComponents,System.UriFormat)
  parent: System.UriParser
  langs:
  - csharp
  name: GetComponents(Uri,UriComponents,UriFormat)
  nameWithType: UriParser.GetComponents(Uri,UriComponents,UriFormat)
  fullName: System.UriParser.GetComponents(Uri,UriComponents,UriFormat)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Henter komponentene fra en URI."
  remarks: "Bruk GetComponents-metoden til å bestemme verdien for ulike delene av URI, som den <xref:System.UriComponents>, <xref:System.UriComponents>, eller <xref:System.UriComponents>.</xref:System.UriComponents> </xref:System.UriComponents> </xref:System.UriComponents>       Komponentene returneres i rekkefølgen som vises i URIEN. For eksempel hvis <xref:System.UriComponents>er angitt, den vises først.</xref:System.UriComponents>"
  syntax:
    content: protected virtual string GetComponents (Uri uri, UriComponents components, UriFormat format);
    parameters:
    - id: uri
      type: System.Uri
      description: "URIEN som analysere."
    - id: components
      type: System.UriComponents
      description: "Den <xref:System.UriComponents>til å hente `uri`.</xref:System.UriComponents>"
    - id: format
      type: System.UriFormat
      description: "Én av de <xref:System.UriFormat>verdier som styrer hvordan spesialtegn er escape-tegn.</xref:System.UriFormat>"
    return:
      type: System.String
      description: "En streng som inneholder komponentene."
  overload: System.UriParser.GetComponents*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>uriFormat</code> is invalid.  \n  \n \\- or -  \n  \n <code>uriComponents</code> is not a combination of valid <xref:System.UriComponents> values."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>uri</code> requires user-driven parsing  \n  \n \\- or -  \n  \n <code>uri</code> is not an absolute URI. Relative URIs cannot be used with this method."
  platform:
  - net462
- uid: System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)
  id: InitializeAndValidate(System.Uri,System.UriFormatException@)
  parent: System.UriParser
  langs:
  - csharp
  name: InitializeAndValidate(Uri,UriFormatException)
  nameWithType: UriParser.InitializeAndValidate(Uri,UriFormatException)
  fullName: System.UriParser.InitializeAndValidate(Uri,UriFormatException)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Initialiser tilstanden til parseren og validere URIEN."
  remarks: "Metoden InitializeAndValidate kalles hver gang en <xref:System.Uri>startes.</xref:System.Uri>"
  syntax:
    content: protected virtual void InitializeAndValidate (Uri uri, out UriFormatException parsingError);
    parameters:
    - id: uri
      type: System.Uri
      description: "T:System.Uri til å validere."
    - id: parsingError
      type: System.UriFormatException
      description: "Valideringsfeil eventuell."
  overload: System.UriParser.InitializeAndValidate*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.IsBaseOf(System.Uri,System.Uri)
  id: IsBaseOf(System.Uri,System.Uri)
  parent: System.UriParser
  langs:
  - csharp
  name: IsBaseOf(Uri,Uri)
  nameWithType: UriParser.IsBaseOf(Uri,Uri)
  fullName: System.UriParser.IsBaseOf(Uri,Uri)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Bestemmer om <code> baseUri </code> er basis-URIEN for <code> relativeUri </code>."
  syntax:
    content: protected virtual bool IsBaseOf (Uri baseUri, Uri relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "Basis-URIEN."
    - id: relativeUri
      type: System.Uri
      description: "URIEN å teste."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>baseUri</code> is a base URI for <code>relativeUri</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.UriParser.IsBaseOf*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.IsKnownScheme(System.String)
  id: IsKnownScheme(System.String)
  parent: System.UriParser
  langs:
  - csharp
  name: IsKnownScheme(String)
  nameWithType: UriParser.IsKnownScheme(String)
  fullName: System.UriParser.IsKnownScheme(String)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Angir om parseren på en plan er registrert."
  syntax:
    content: public static bool IsKnownScheme (string schemeName);
    parameters:
    - id: schemeName
      type: System.String
      description: "Skjemanavnet å se."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <code> schemeName </code> har blitt registrert; ellers, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.UriParser.IsKnownScheme*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <code> schemeName </code> -parameteren er null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den <code> schemeName </code> parameteren er ugyldig."
  platform:
  - net462
- uid: System.UriParser.IsWellFormedOriginalString(System.Uri)
  id: IsWellFormedOriginalString(System.Uri)
  parent: System.UriParser
  langs:
  - csharp
  name: IsWellFormedOriginalString(Uri)
  nameWithType: UriParser.IsWellFormedOriginalString(Uri)
  fullName: System.UriParser.IsWellFormedOriginalString(Uri)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Angir om en URI er korrekt utformet."
  remarks: "Metoden IsWellFormedOriginalString returnerer false Hvis:-strengen er ikke riktig escape-tegn per RFC 2396.      -Strengen representerer en absolutt URI som refererer til en implisitt fil URI.      -Strengen representerer en absolutt URI som mangler en skråstrek før banekomponenten.      -Strengen inneholder spørrestrengen omvendt skråstrek, selv om disse behandles som Videresend skråstrek."
  syntax:
    content: protected virtual bool IsWellFormedOriginalString (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "URIEN som kontroller."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <code> uri </code> er korrekt utformet; ellers, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.UriParser.IsWellFormedOriginalString*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.OnNewUri
  id: OnNewUri
  parent: System.UriParser
  langs:
  - csharp
  name: OnNewUri()
  nameWithType: UriParser.OnNewUri()
  fullName: System.UriParser.OnNewUri()
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Startet av en <xref:System.Uri>konstruktøren for å få en <xref href=&quot;System.UriParser&quot;> </xref> forekomsten</xref:System.Uri>"
  remarks: "Standard implementering returnerer samme <xref:System.UriParser>forekomsten.</xref:System.UriParser> Du må kanskje overstyre denne metoden, og returnerer et annet <xref:System.UriParser>for hver aktivering hvis du arbeider i et flertrådsmiljø.</xref:System.UriParser>"
  syntax:
    content: protected virtual UriParser OnNewUri ();
    parameters: []
    return:
      type: System.UriParser
      description: "En <xref href=&quot;System.UriParser&quot;> </xref> for konstruert <xref:System.Uri>.</xref:System.Uri>"
  overload: System.UriParser.OnNewUri*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.OnRegister(System.String,System.Int32)
  id: OnRegister(System.String,System.Int32)
  parent: System.UriParser
  langs:
  - csharp
  name: OnRegister(String,Int32)
  nameWithType: UriParser.OnRegister(String,Int32)
  fullName: System.UriParser.OnRegister(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Startet av rammeverket når en <xref href=&quot;System.UriParser&quot;> </xref> metoden er registrert."
  syntax:
    content: protected virtual void OnRegister (string schemeName, int defaultPort);
    parameters:
    - id: schemeName
      type: System.String
      description: "Skjemaet som er forbundet med denne <xref href=&quot;System.UriParser&quot;> </xref>."
    - id: defaultPort
      type: System.Int32
      description: "Portnummeret for skjemaet."
  overload: System.UriParser.OnRegister*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.Register(System.UriParser,System.String,System.Int32)
  id: Register(System.UriParser,System.String,System.Int32)
  parent: System.UriParser
  langs:
  - csharp
  name: Register(UriParser,String,Int32)
  nameWithType: UriParser.Register(UriParser,String,Int32)
  fullName: System.UriParser.Register(UriParser,String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Knytter et skjema og port tallet med et <xref href=&quot;System.UriParser&quot;> </xref>."
  remarks: "Hvis den `defaultPort` parameteren er satt til -1, metoden registrere registrerer ingen standardverdi for portnummeret."
  syntax:
    content: public static void Register (UriParser uriParser, string schemeName, int defaultPort);
    parameters:
    - id: uriParser
      type: System.UriParser
      description: "URI-parseren til å registrere."
    - id: schemeName
      type: System.String
      description: "Navnet på skjemaet som er forbundet med denne parseren."
    - id: defaultPort
      type: System.Int32
      description: "Standard portnummeret for den angitte planen."
  overload: System.UriParser.Register*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriParser</code> parameter is null  \n  \n \\- or -  \n  \n <code>schemeName</code> parameter is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>schemeName</code> parameter is not valid  \n  \n \\- or -  \n  \n <code>defaultPort</code> parameter is not valid. The <code>defaultPort</code> parameter is less than -1 or greater than 65,534."
  platform:
  - net462
- uid: System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)
  id: Resolve(System.Uri,System.Uri,System.UriFormatException@)
  parent: System.UriParser
  langs:
  - csharp
  name: Resolve(Uri,Uri,UriFormatException)
  nameWithType: UriParser.Resolve(Uri,Uri,UriFormatException)
  fullName: System.UriParser.Resolve(Uri,Uri,UriFormatException)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Kalles av <xref:System.Uri>konstruktører og &lt;xref:System.Uri.TryCreate%2A?displayProperty=fullName&gt; å løse en relativ URI.</xref:System.Uri>"
  remarks: "<xref:System.Uri>Konstruktører og <xref:System.Uri.TryCreate%2A?displayProperty=fullName>bruke Løs til å lage en URI fra `baseUri` og `relativeUri`.</xref:System.Uri.TryCreate%2A?displayProperty=fullName></xref:System.Uri>       Hvis en analyse feil oppstår returnerte strengen for løst relativ <xref:System.Uri>er null.</xref:System.Uri>"
  syntax:
    content: protected virtual string Resolve (Uri baseUri, Uri relativeUri, out UriFormatException parsingError);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "Basis-URIEN."
    - id: relativeUri
      type: System.Uri
      description: "En relativ URI."
    - id: parsingError
      type: System.UriFormatException
      description: "Feil under løsing-prosessen eventuell."
    return:
      type: System.String
      description: "Tekststrengen løst relativ <xref:System.Uri>.</xref:System.Uri>"
  overload: System.UriParser.Resolve*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>baseUri</code> parameter is not an absolute <xref:System.Uri>  \n  \n \\- or -  \n  \n <code>baseUri</code> parameter requires user-driven parsing."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.UriParser.#ctor
  parent: System.UriParser
  isExternal: false
  name: UriParser()
  nameWithType: UriParser.UriParser()
  fullName: System.UriParser.UriParser()
- uid: System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)
  parent: System.UriParser
  isExternal: false
  name: GetComponents(Uri,UriComponents,UriFormat)
  nameWithType: UriParser.GetComponents(Uri,UriComponents,UriFormat)
  fullName: System.UriParser.GetComponents(Uri,UriComponents,UriFormat)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.UriComponents
  parent: System
  isExternal: true
  name: UriComponents
  nameWithType: UriComponents
  fullName: System.UriComponents
- uid: System.UriFormat
  parent: System
  isExternal: true
  name: UriFormat
  nameWithType: UriFormat
  fullName: System.UriFormat
- uid: System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)
  parent: System.UriParser
  isExternal: false
  name: InitializeAndValidate(Uri,UriFormatException)
  nameWithType: UriParser.InitializeAndValidate(Uri,UriFormatException)
  fullName: System.UriParser.InitializeAndValidate(Uri,UriFormatException)
- uid: System.UriFormatException
  parent: System
  isExternal: true
  name: UriFormatException
  nameWithType: UriFormatException
  fullName: System.UriFormatException
- uid: System.UriParser.IsBaseOf(System.Uri,System.Uri)
  parent: System.UriParser
  isExternal: false
  name: IsBaseOf(Uri,Uri)
  nameWithType: UriParser.IsBaseOf(Uri,Uri)
  fullName: System.UriParser.IsBaseOf(Uri,Uri)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.UriParser.IsKnownScheme(System.String)
  parent: System.UriParser
  isExternal: false
  name: IsKnownScheme(String)
  nameWithType: UriParser.IsKnownScheme(String)
  fullName: System.UriParser.IsKnownScheme(String)
- uid: System.UriParser.IsWellFormedOriginalString(System.Uri)
  parent: System.UriParser
  isExternal: false
  name: IsWellFormedOriginalString(Uri)
  nameWithType: UriParser.IsWellFormedOriginalString(Uri)
  fullName: System.UriParser.IsWellFormedOriginalString(Uri)
- uid: System.UriParser.OnNewUri
  parent: System.UriParser
  isExternal: false
  name: OnNewUri()
  nameWithType: UriParser.OnNewUri()
  fullName: System.UriParser.OnNewUri()
- uid: System.UriParser
  parent: System
  isExternal: false
  name: UriParser
  nameWithType: UriParser
  fullName: System.UriParser
- uid: System.UriParser.OnRegister(System.String,System.Int32)
  parent: System.UriParser
  isExternal: false
  name: OnRegister(String,Int32)
  nameWithType: UriParser.OnRegister(String,Int32)
  fullName: System.UriParser.OnRegister(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UriParser.Register(System.UriParser,System.String,System.Int32)
  parent: System.UriParser
  isExternal: false
  name: Register(UriParser,String,Int32)
  nameWithType: UriParser.Register(UriParser,String,Int32)
  fullName: System.UriParser.Register(UriParser,String,Int32)
- uid: System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)
  parent: System.UriParser
  isExternal: false
  name: Resolve(Uri,Uri,UriFormatException)
  nameWithType: UriParser.Resolve(Uri,Uri,UriFormatException)
  fullName: System.UriParser.Resolve(Uri,Uri,UriFormatException)
- uid: System.UriParser.#ctor*
  parent: System.UriParser
  isExternal: false
  name: UriParser
  nameWithType: UriParser.UriParser
- uid: System.UriParser.GetComponents*
  parent: System.UriParser
  isExternal: false
  name: GetComponents
  nameWithType: UriParser.GetComponents
- uid: System.UriParser.InitializeAndValidate*
  parent: System.UriParser
  isExternal: false
  name: InitializeAndValidate
  nameWithType: UriParser.InitializeAndValidate
- uid: System.UriParser.IsBaseOf*
  parent: System.UriParser
  isExternal: false
  name: IsBaseOf
  nameWithType: UriParser.IsBaseOf
- uid: System.UriParser.IsKnownScheme*
  parent: System.UriParser
  isExternal: false
  name: IsKnownScheme
  nameWithType: UriParser.IsKnownScheme
- uid: System.UriParser.IsWellFormedOriginalString*
  parent: System.UriParser
  isExternal: false
  name: IsWellFormedOriginalString
  nameWithType: UriParser.IsWellFormedOriginalString
- uid: System.UriParser.OnNewUri*
  parent: System.UriParser
  isExternal: false
  name: OnNewUri
  nameWithType: UriParser.OnNewUri
- uid: System.UriParser.OnRegister*
  parent: System.UriParser
  isExternal: false
  name: OnRegister
  nameWithType: UriParser.OnRegister
- uid: System.UriParser.Register*
  parent: System.UriParser
  isExternal: false
  name: Register
  nameWithType: UriParser.Register
- uid: System.UriParser.Resolve*
  parent: System.UriParser
  isExternal: false
  name: Resolve
  nameWithType: UriParser.Resolve
