### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Routing.Configuration.FilterElement
  id: FilterElement
  children:
  - System.ServiceModel.Routing.Configuration.FilterElement.#ctor
  - System.ServiceModel.Routing.Configuration.FilterElement.CustomType
  - System.ServiceModel.Routing.Configuration.FilterElement.Filter1
  - System.ServiceModel.Routing.Configuration.FilterElement.Filter2
  - System.ServiceModel.Routing.Configuration.FilterElement.FilterData
  - System.ServiceModel.Routing.Configuration.FilterElement.FilterType
  - System.ServiceModel.Routing.Configuration.FilterElement.Name
  langs:
  - csharp
  name: FilterElement
  nameWithType: FilterElement
  fullName: System.ServiceModel.Routing.Configuration.FilterElement
  type: Class
  summary: "Representerer en konfigurasjonselementet som definerer et Filterelement. Dette elementet som definerer filteret, i tillegg til en støttet data eller parametere som kreves av filteret."
  syntax:
    content: 'public class FilterElement : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Properties
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.FilterElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Routing.Configuration.FilterElement
  langs:
  - csharp
  name: FilterElement()
  nameWithType: FilterElement.FilterElement()
  fullName: System.ServiceModel.Routing.Configuration.FilterElement.FilterElement()
  type: Constructor
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.ServiceModel.Routing.Configuration.FilterElement&quot;> </xref> klasse."
  syntax:
    content: public FilterElement ();
    parameters: []
  overload: System.ServiceModel.Routing.Configuration.FilterElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.FilterElement.CustomType
  id: CustomType
  parent: System.ServiceModel.Routing.Configuration.FilterElement
  langs:
  - csharp
  name: CustomType
  nameWithType: FilterElement.CustomType
  fullName: System.ServiceModel.Routing.Configuration.FilterElement.CustomType
  type: Property
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "Henter eller angir det fullstendig kvalifisert navnet av den egendefinerte typen som skal brukes som et filter."
  remarks: "Hvis <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType%2A>er satt til egendefinert CustomType er fullstendig typenavnet på klassen for å opprette.</xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType%2A> <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>kan også inneholde verdier som skal brukes under evaluering av CustomType filteret.</xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> CustomType må implementere en konstruktør som godtar en strengverdi som inneholder den <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>informasjon.</xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>       [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]<xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.</xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>"
  syntax:
    content: public string CustomType { get; set; }
    return:
      type: System.String
      description: "Fullstendig-typen."
  overload: System.ServiceModel.Routing.Configuration.FilterElement.CustomType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.FilterElement.Filter1
  id: Filter1
  parent: System.ServiceModel.Routing.Configuration.FilterElement
  langs:
  - csharp
  name: Filter1
  nameWithType: FilterElement.Filter1
  fullName: System.ServiceModel.Routing.Configuration.FilterElement.Filter1
  type: Property
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "Henter eller angir filter1-data for denne konfigurasjonselementet. Denne verdien er bare brukes når <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType*>er satt til og.</xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType*>"
  remarks: "Innholdet i Filter1 brukes bare under evaluering av og filteret. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]<xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.</xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>"
  syntax:
    content: public string Filter1 { get; set; }
    return:
      type: System.String
      description: "Filter1 verdien for dette elementet."
  overload: System.ServiceModel.Routing.Configuration.FilterElement.Filter1*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.FilterElement.Filter2
  id: Filter2
  parent: System.ServiceModel.Routing.Configuration.FilterElement
  langs:
  - csharp
  name: Filter2
  nameWithType: FilterElement.Filter2
  fullName: System.ServiceModel.Routing.Configuration.FilterElement.Filter2
  type: Property
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "Henter eller angir filter2-data for denne konfigurasjonselementet. Denne verdien er bare brukes når <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType*>er satt til og.</xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType*>"
  remarks: "Innholdet i Filter2 brukes bare under evaluering av og-filtre. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]<xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.</xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>"
  syntax:
    content: public string Filter2 { get; set; }
    return:
      type: System.String
      description: "Filter2 verdien for dette elementet."
  overload: System.ServiceModel.Routing.Configuration.FilterElement.Filter2*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.FilterElement.FilterData
  id: FilterData
  parent: System.ServiceModel.Routing.Configuration.FilterElement
  langs:
  - csharp
  name: FilterData
  nameWithType: FilterElement.FilterData
  fullName: System.ServiceModel.Routing.Configuration.FilterElement.FilterData
  type: Property
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "Henter eller angir filterdata for dette konfigurasjonselementet."
  remarks: "The following table describes the meaning of FilterData based on the value of <xref:System.ServiceModel.Routing.Configuration.FilterType>.  \n  \n|Filter  Type|Description|Filter Data Meaning|Example Filter|  \n|------------------|-----------------|-------------------------|--------------------|  \n|Action|Uses the ActionMessageFilter that comes with WCF.|The Action to filter upon.|\\<filter name=\"action1\" filterType=\"Action\" filterData=\"http://ACTION\" />|  \n|Address|Uses the EndpointAddressMessageFilter that comes with WCF with ignore host name == true.|The address to filter upon (in the To header).|\\<filter name=\"address1\" filterType=\"Address\" filterData=\"http://host/vdir/s.svc/b\"  />|  \n|AddressPrefix|Uses the PrefixEndpointAddressMessageFilter that comes with WCF with ignore host name == true.|The address to filter upon using longest prefix matching.|\\<filter name=\"prefix1\" filterType=\"AddressPrefix\" filterData=\"http://host\" />|  \n|StrictAnd|A custom AndMessageFilter that always evaluates both conditions before returning.|filterData is not used, instead filter1 and filter2 have the names of the corresponding messages filters (also in the table), which should be ANDed together.|\\<filter name=\"and1\" filterType=\"And\" filter1=\"address1\" filter2=\"action1\" />|  \n|Custom|A user-defined type that extends MessageFilter and has a constructor taking a string.|customType attribute is the fully-qualified type name of the class to create, filterData is the string to pass to the constructor when creating the filter.|\\<filter name=\"custom1\" filterType=\"Custom\" customType=\"CustomAssembly.CustomMsgFilter, CustomAssembly\" filterData=\"Custom Data\" />|  \n|EndpointName|A custom message filter for use solely in the Routing Service, which filters messages based on the name of the service endpoint.|The name of the service endpoint, for example: “serviceEndpoint1”.  This should be one of the endpoints exposed on the Routing Service.|\\<filter name=\"stock1\" filterType=\"Endpoint\" filterData=\"SvcEndpoint\" />|  \n|MatchAll|Uses the MatchAllMessageFilter that comes with WCF.|N/A|\\<filter name=\"matchAll1\" filterType=\"MatchAll\" />|  \n|XPath|Uses the XPathMessageFilter that comes with WCF.|The XPath query to use when matching messages.|\\<filter name=\"XPath1\" filterType=\"XPath\" filterData=\"//ns:element\" />|"
  syntax:
    content: public string FilterData { get; set; }
    return:
      type: System.String
      description: "Filtrer dataene for dette elementet."
  overload: System.ServiceModel.Routing.Configuration.FilterElement.FilterData*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.FilterElement.FilterType
  id: FilterType
  parent: System.ServiceModel.Routing.Configuration.FilterElement
  langs:
  - csharp
  name: FilterType
  nameWithType: FilterElement.FilterType
  fullName: System.ServiceModel.Routing.Configuration.FilterElement.FilterType
  type: Property
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "Henter eller angir den <xref href=&quot;System.ServiceModel.Routing.Configuration.FilterType&quot;> </xref> for dette konfigurasjonselementet."
  syntax:
    content: public System.ServiceModel.Routing.Configuration.FilterType FilterType { get; set; }
    return:
      type: System.ServiceModel.Routing.Configuration.FilterType
      description: "Filtertypen for dette elementet."
  overload: System.ServiceModel.Routing.Configuration.FilterElement.FilterType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.FilterElement.Name
  id: Name
  parent: System.ServiceModel.Routing.Configuration.FilterElement
  langs:
  - csharp
  name: Name
  nameWithType: FilterElement.Name
  fullName: System.ServiceModel.Routing.Configuration.FilterElement.Name
  type: Property
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "Henter eller angir navnet på dette konfigurasjonselementet."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Det unike navnet på dette konfigurasjonselementet."
  overload: System.ServiceModel.Routing.Configuration.FilterElement.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.ServiceModel.Routing.Configuration.FilterElement.#ctor
  parent: System.ServiceModel.Routing.Configuration.FilterElement
  isExternal: false
  name: FilterElement()
  nameWithType: FilterElement.FilterElement()
  fullName: System.ServiceModel.Routing.Configuration.FilterElement.FilterElement()
- uid: System.ServiceModel.Routing.Configuration.FilterElement.CustomType
  parent: System.ServiceModel.Routing.Configuration.FilterElement
  isExternal: false
  name: CustomType
  nameWithType: FilterElement.CustomType
  fullName: System.ServiceModel.Routing.Configuration.FilterElement.CustomType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Routing.Configuration.FilterElement.Filter1
  parent: System.ServiceModel.Routing.Configuration.FilterElement
  isExternal: false
  name: Filter1
  nameWithType: FilterElement.Filter1
  fullName: System.ServiceModel.Routing.Configuration.FilterElement.Filter1
- uid: System.ServiceModel.Routing.Configuration.FilterElement.Filter2
  parent: System.ServiceModel.Routing.Configuration.FilterElement
  isExternal: false
  name: Filter2
  nameWithType: FilterElement.Filter2
  fullName: System.ServiceModel.Routing.Configuration.FilterElement.Filter2
- uid: System.ServiceModel.Routing.Configuration.FilterElement.FilterData
  parent: System.ServiceModel.Routing.Configuration.FilterElement
  isExternal: false
  name: FilterData
  nameWithType: FilterElement.FilterData
  fullName: System.ServiceModel.Routing.Configuration.FilterElement.FilterData
- uid: System.ServiceModel.Routing.Configuration.FilterElement.FilterType
  parent: System.ServiceModel.Routing.Configuration.FilterElement
  isExternal: false
  name: FilterType
  nameWithType: FilterElement.FilterType
  fullName: System.ServiceModel.Routing.Configuration.FilterElement.FilterType
- uid: System.ServiceModel.Routing.Configuration.FilterType
  parent: System.ServiceModel.Routing.Configuration
  isExternal: false
  name: FilterType
  nameWithType: FilterType
  fullName: System.ServiceModel.Routing.Configuration.FilterType
- uid: System.ServiceModel.Routing.Configuration.FilterElement.Name
  parent: System.ServiceModel.Routing.Configuration.FilterElement
  isExternal: false
  name: Name
  nameWithType: FilterElement.Name
  fullName: System.ServiceModel.Routing.Configuration.FilterElement.Name
- uid: System.ServiceModel.Routing.Configuration.FilterElement.#ctor*
  parent: System.ServiceModel.Routing.Configuration.FilterElement
  isExternal: false
  name: FilterElement
  nameWithType: FilterElement.FilterElement
- uid: System.ServiceModel.Routing.Configuration.FilterElement.CustomType*
  parent: System.ServiceModel.Routing.Configuration.FilterElement
  isExternal: false
  name: CustomType
  nameWithType: FilterElement.CustomType
- uid: System.ServiceModel.Routing.Configuration.FilterElement.Filter1*
  parent: System.ServiceModel.Routing.Configuration.FilterElement
  isExternal: false
  name: Filter1
  nameWithType: FilterElement.Filter1
- uid: System.ServiceModel.Routing.Configuration.FilterElement.Filter2*
  parent: System.ServiceModel.Routing.Configuration.FilterElement
  isExternal: false
  name: Filter2
  nameWithType: FilterElement.Filter2
- uid: System.ServiceModel.Routing.Configuration.FilterElement.FilterData*
  parent: System.ServiceModel.Routing.Configuration.FilterElement
  isExternal: false
  name: FilterData
  nameWithType: FilterElement.FilterData
- uid: System.ServiceModel.Routing.Configuration.FilterElement.FilterType*
  parent: System.ServiceModel.Routing.Configuration.FilterElement
  isExternal: false
  name: FilterType
  nameWithType: FilterElement.FilterType
- uid: System.ServiceModel.Routing.Configuration.FilterElement.Name*
  parent: System.ServiceModel.Routing.Configuration.FilterElement
  isExternal: false
  name: Name
  nameWithType: FilterElement.Name
