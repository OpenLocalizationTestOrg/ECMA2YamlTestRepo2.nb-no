### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.DesignerAttribute
  id: DesignerAttribute
  children:
  - System.ComponentModel.DesignerAttribute.#ctor(System.String)
  - System.ComponentModel.DesignerAttribute.#ctor(System.Type)
  - System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)
  - System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)
  - System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)
  - System.ComponentModel.DesignerAttribute.DesignerBaseTypeName
  - System.ComponentModel.DesignerAttribute.DesignerTypeName
  - System.ComponentModel.DesignerAttribute.Equals(System.Object)
  - System.ComponentModel.DesignerAttribute.GetHashCode
  - System.ComponentModel.DesignerAttribute.TypeId
  langs:
  - csharp
  name: DesignerAttribute
  nameWithType: DesignerAttribute
  fullName: System.ComponentModel.DesignerAttribute
  type: Class
  summary: "Angir klassen som brukes til å implementere utformingen services for en komponent."
  remarks: "Klassen som du bruker for utforming tjenestene må implementere den <xref:System.ComponentModel.Design.IDesigner>grensesnittet.</xref:System.ComponentModel.Design.IDesigner>       Bruk av <xref:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName%2A>til å finne den utformeren basistype.</xref:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName%2A> Bruk av <xref:System.ComponentModel.DesignerAttribute.DesignerTypeName%2A>til å hente navnet på hva slags designer som er knyttet til dette medlemmet.</xref:System.ComponentModel.DesignerAttribute.DesignerTypeName%2A>       Hvis du vil ha mer informasjon, se [attributter](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a class called `MyForm`. `MyForm` has two attributes, a DesignerAttribute that specifies this class uses the <xref:System.Windows.Forms.Design.DocumentDesigner>, and a <xref:System.ComponentModel.DesignerCategoryAttribute> that specifies the <xref:System.ComponentModel.DesignerCategoryAttribute.Form> category.  \n  \n [!code-cpp[Classic DesignerAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._157_1.cpp)]\n [!code-vb[Classic DesignerAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._157_1.vb)]\n [!code-cs[Classic DesignerAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._157_1.cs)]  \n  \n The next example creates an instance of `MyForm`. Then it gets the attributes for the class, extracts the DesignerAttribute, and prints the name of the designer.  \n  \n [!code-cpp[Classic DesignerAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._157_2.cpp)]\n [!code-vb[Classic DesignerAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._157_2.vb)]\n [!code-cs[Classic DesignerAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._157_2.cs)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)]

      public sealed class DesignerAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: DesignerAttribute(String)
  nameWithType: DesignerAttribute.DesignerAttribute(String)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.ComponentModel.DesignerAttribute&quot;> </xref> klasse med navnet på typen som inneholder utformingen."
  remarks: "Klassen som du bruker for utforming tjenestene må implementere den <xref:System.ComponentModel.Design.IDesigner>grensesnittet.</xref:System.ComponentModel.Design.IDesigner>"
  syntax:
    content: public DesignerAttribute (string designerTypeName);
    parameters:
    - id: designerTypeName
      type: System.String
      description: "Sammensetningen av det fullstendige navnet på typen som inneholder utformingen for komponenten dette attributtet er bundet til, og navnet på samlingen denne typen finnes i."
  overload: System.ComponentModel.DesignerAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: DesignerAttribute(Type)
  nameWithType: DesignerAttribute.DesignerAttribute(Type)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.ComponentModel.DesignerAttribute&quot;> </xref> klasse med typen som inneholder utformingen."
  remarks: "Klassen som du bruker for utforming tjenestene må implementere den <xref:System.ComponentModel.Design.IDesigner>grensesnittet.</xref:System.ComponentModel.Design.IDesigner>"
  syntax:
    content: public DesignerAttribute (Type designerType);
    parameters:
    - id: designerType
      type: System.Type
      description: "En <xref:System.Type>som representerer klassen som inneholder utformingen for komponenten dette attributtet er bundet til.</xref:System.Type>"
  overload: System.ComponentModel.DesignerAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: DesignerAttribute(String,String)
  nameWithType: DesignerAttribute.DesignerAttribute(String,String)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.ComponentModel.DesignerAttribute&quot;> </xref> klasse ved hjelp av typen designer og basisklassen for designer."
  remarks: "Klassen som du bruker for utforming tjenestene må implementere den <xref:System.ComponentModel.Design.IDesigner>grensesnittet.</xref:System.ComponentModel.Design.IDesigner>       Den `designerBaseTypeName` parameteren lar deg legge ved flere designer for en angitt klasse."
  syntax:
    content: public DesignerAttribute (string designerTypeName, string designerBaseTypeName);
    parameters:
    - id: designerTypeName
      type: System.String
      description: "Sammensetningen av det fullstendige navnet på typen som inneholder utformingen for komponenten dette attributtet er bundet til, og navnet på samlingen denne typen finnes i."
    - id: designerBaseTypeName
      type: System.String
      description: "Fullstendige navnet på basisklassen å knytte til designer klassen."
  overload: System.ComponentModel.DesignerAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: DesignerAttribute(String,Type)
  nameWithType: DesignerAttribute.DesignerAttribute(String,Type)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(String,Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.ComponentModel.DesignerAttribute&quot;> </xref> class, ved hjelp av navnet på designer klassen og basisklassen for designer."
  remarks: "Klassen som du bruker for utforming tjenestene må implementere den <xref:System.ComponentModel.Design.IDesigner>grensesnittet.</xref:System.ComponentModel.Design.IDesigner>       Den `designerBaseType` parameteren lar deg legge ved flere designer for en angitt klasse."
  syntax:
    content: public DesignerAttribute (string designerTypeName, Type designerBaseType);
    parameters:
    - id: designerTypeName
      type: System.String
      description: "Sammensetningen av det fullstendige navnet på typen som inneholder utformingen for komponenten dette attributtet er bundet til, og navnet på samlingen denne typen finnes i."
    - id: designerBaseType
      type: System.Type
      description: "En <xref:System.Type>som representerer basisklassen å knytte til den `designerTypeName`.</xref:System.Type>"
  overload: System.ComponentModel.DesignerAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)
  id: '#ctor(System.Type,System.Type)'
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: DesignerAttribute(Type,Type)
  nameWithType: DesignerAttribute.DesignerAttribute(Type,Type)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(Type,Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.ComponentModel.DesignerAttribute&quot;> </xref> klasse med designer og designer basisklasse."
  remarks: "Klassen som du bruker for utforming tjenestene må implementere den <xref:System.ComponentModel.Design.IDesigner>grensesnittet.</xref:System.ComponentModel.Design.IDesigner>       Den `designerBaseType` parameteren lar deg legge ved flere designer for en angitt klasse."
  syntax:
    content: public DesignerAttribute (Type designerType, Type designerBaseType);
    parameters:
    - id: designerType
      type: System.Type
      description: "En <xref:System.Type>som representerer klassen som inneholder utformingen for komponenten dette attributtet er bundet til.</xref:System.Type>"
    - id: designerBaseType
      type: System.Type
      description: "En <xref:System.Type>som representerer basisklassen å knytte til den `designerType`.</xref:System.Type>"
  overload: System.ComponentModel.DesignerAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName
  id: DesignerBaseTypeName
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: DesignerBaseTypeName
  nameWithType: DesignerAttribute.DesignerBaseTypeName
  fullName: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Henter navnet på basistype for utformeren."
  syntax:
    content: public string DesignerBaseTypeName { get; }
    return:
      type: System.String
      description: "Navnet på basistype for utformeren."
  overload: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.DesignerTypeName
  id: DesignerTypeName
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: DesignerTypeName
  nameWithType: DesignerAttribute.DesignerTypeName
  fullName: System.ComponentModel.DesignerAttribute.DesignerTypeName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Henter navnet på designer typen som er forbundet med designer attributtet."
  syntax:
    content: public string DesignerTypeName { get; }
    return:
      type: System.String
      description: "Navnet på designer typen som er forbundet med designer attributtet."
  overload: System.ComponentModel.DesignerAttribute.DesignerTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: DesignerAttribute.Equals(Object)
  fullName: System.ComponentModel.DesignerAttribute.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerer om verdien for det angitte objektet er lik gjeldende <xref href=&quot;System.ComponentModel.DesignerAttribute&quot;> </xref>."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Objektet for å teste verdien likheten mellom."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis verdien for det angitte objektet er det samme som gjeldende; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.DesignerAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: DesignerAttribute.GetHashCode()
  fullName: System.ComponentModel.DesignerAttribute.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerer hashkoden for denne forekomsten."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "En 32-biters heltall med fortegn hash-kode."
  overload: System.ComponentModel.DesignerAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.TypeId
  id: TypeId
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: TypeId
  nameWithType: DesignerAttribute.TypeId
  fullName: System.ComponentModel.DesignerAttribute.TypeId
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Henter en unik ID for dette attributtet."
  remarks: "Den brukes av filtrering algoritmer til å identifisere to attributtene som er av samme type. For de fleste attributter dette bare returnerer den <xref:System.Type>forekomsten for attributtet.</xref:System.Type> <xref:System.ComponentModel.DesignerAttribute>overstyrer her for å inkludere designer basistypen.</xref:System.ComponentModel.DesignerAttribute>"
  syntax:
    content: public override object TypeId { get; }
    return:
      type: System.Object
      description: "En unik ID for dette attributtet."
  overload: System.ComponentModel.DesignerAttribute.TypeId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String)
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerAttribute(String)
  nameWithType: DesignerAttribute.DesignerAttribute(String)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.Type)
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerAttribute(Type)
  nameWithType: DesignerAttribute.DesignerAttribute(Type)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerAttribute(String,String)
  nameWithType: DesignerAttribute.DesignerAttribute(String,String)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(String,String)
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerAttribute(String,Type)
  nameWithType: DesignerAttribute.DesignerAttribute(String,Type)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(String,Type)
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerAttribute(Type,Type)
  nameWithType: DesignerAttribute.DesignerAttribute(Type,Type)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(Type,Type)
- uid: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerBaseTypeName
  nameWithType: DesignerAttribute.DesignerBaseTypeName
  fullName: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName
- uid: System.ComponentModel.DesignerAttribute.DesignerTypeName
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerTypeName
  nameWithType: DesignerAttribute.DesignerTypeName
  fullName: System.ComponentModel.DesignerAttribute.DesignerTypeName
- uid: System.ComponentModel.DesignerAttribute.Equals(System.Object)
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: DesignerAttribute.Equals(Object)
  fullName: System.ComponentModel.DesignerAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.DesignerAttribute.GetHashCode
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: DesignerAttribute.GetHashCode()
  fullName: System.ComponentModel.DesignerAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.DesignerAttribute.TypeId
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: TypeId
  nameWithType: DesignerAttribute.TypeId
  fullName: System.ComponentModel.DesignerAttribute.TypeId
- uid: System.ComponentModel.DesignerAttribute.#ctor*
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerAttribute
  nameWithType: DesignerAttribute.DesignerAttribute
- uid: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName*
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerBaseTypeName
  nameWithType: DesignerAttribute.DesignerBaseTypeName
- uid: System.ComponentModel.DesignerAttribute.DesignerTypeName*
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerTypeName
  nameWithType: DesignerAttribute.DesignerTypeName
- uid: System.ComponentModel.DesignerAttribute.Equals*
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: Equals
  nameWithType: DesignerAttribute.Equals
- uid: System.ComponentModel.DesignerAttribute.GetHashCode*
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: DesignerAttribute.GetHashCode
- uid: System.ComponentModel.DesignerAttribute.TypeId*
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: TypeId
  nameWithType: DesignerAttribute.TypeId
