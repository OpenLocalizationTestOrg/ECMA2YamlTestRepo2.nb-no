### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.AnyReturnReader
  id: AnyReturnReader
  children:
  - System.Web.Services.Protocols.AnyReturnReader.#ctor
  - System.Web.Services.Protocols.AnyReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.AnyReturnReader.Initialize(System.Object)
  - System.Web.Services.Protocols.AnyReturnReader.Read(System.Net.WebResponse,System.IO.Stream)
  langs:
  - csharp
  name: AnyReturnReader
  nameWithType: AnyReturnReader
  fullName: System.Web.Services.Protocols.AnyReturnReader
  type: Class
  summary: "Gir minimal leseren for innkommende svar returverdier for Web service-klienter implementert ved hjelp av HTTP, men uten SOAP."
  remarks: "AnyReturnReader og andre klasser i den <xref:System.Web.Services.Protocols>navneområdet støtter .NET Framework-implementeringer av webtjenester via HTTP-GET og HTTP-POST-operasjoner.</xref:System.Web.Services.Protocols> Web service forfattere lesere serialisere og deserialisere henholdsvis mellom parameterne eller return objekter av Web-metoder og HTTP-forespørselen eller svar dataflytene. Web service forfattere og lesere bruke HTTP til transport, men exchange ikke meldinger ved hjelp av SOAP-standard.       Klassen AnyReturnReader gir en minimal implementering av grensesnittet abstrakte overordnede klasse <xref:System.Web.Services.Protocols.MimeReturnReader>. Vanligvis ikke må du bruke AnyReturnReader direkte.</xref:System.Web.Services.Protocols.MimeReturnReader> Når verktøyet Wsdl.exe genererer proxy-Klientkoden i henhold til implementeringer HTTP-GET eller HTTP-POST, brukes <xref:System.Web.Services.Protocols.HttpMethodAttribute>til hver Web-metode, og som standard angir attributtets- <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>egenskapen for å <xref:System.Web.Services.Protocols.XmlReturnReader>en annen klasse som er avledet fra <xref:System.Web.Services.Protocols.MimeReturnReader>.</xref:System.Web.Services.Protocols.MimeReturnReader> </xref:System.Web.Services.Protocols.XmlReturnReader> </xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> </xref:System.Web.Services.Protocols.HttpMethodAttribute>"
  syntax:
    content: 'public class AnyReturnReader : System.Web.Services.Protocols.MimeReturnReader'
  inheritance:
  - System.Object
  - System.Web.Services.Protocols.MimeFormatter
  - System.Web.Services.Protocols.MimeReturnReader
  implements: []
  inheritedMembers:
  - System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  platform:
  - net462
- uid: System.Web.Services.Protocols.AnyReturnReader.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.AnyReturnReader
  langs:
  - csharp
  name: AnyReturnReader()
  nameWithType: AnyReturnReader.AnyReturnReader()
  fullName: System.Web.Services.Protocols.AnyReturnReader.AnyReturnReader()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.Services.Protocols.AnyReturnReader&quot;> </xref> klasse."
  syntax:
    content: public AnyReturnReader ();
    parameters: []
  overload: System.Web.Services.Protocols.AnyReturnReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.AnyReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  id: GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.AnyReturnReader
  langs:
  - csharp
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: AnyReturnReader.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.AnyReturnReader.GetInitializer(LogicalMethodInfo)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Returnerer parameteren som sendes til den <xref:System.Web.Services.Protocols.AnyReturnReader.Initialize*>metoden.</xref:System.Web.Services.Protocols.AnyReturnReader.Initialize*>"
  remarks: "En initialisering er et objekt som ble sendt som en parameter i <xref:System.Web.Services.Protocols.AnyReturnReader.Initialize%2A>metode.</xref:System.Web.Services.Protocols.AnyReturnReader.Initialize%2A> For den <xref:System.Web.Services.Protocols.AnyReturnReader>klassen, er initialiseringen forekomsten av referert til av nøkkelordet `this`, med mindre den <xref:System.Web.Services.Protocols.LogicalMethodInfo>parameterverdien har en ugyldig returtype, der store/små bokstaver i initialisering er satt til `null`.</xref:System.Web.Services.Protocols.LogicalMethodInfo> </xref:System.Web.Services.Protocols.AnyReturnReader>       Metoden GetInitializer aktiveres under initialisering av tjenesten. Senere, da svar behandles, initialiseringen <xref:System.Web.Services.Protocols.AnyReturnReader>objekt som er sendt til den <xref:System.Web.Services.Protocols.AnyReturnReader.Initialize%2A>-metoden til et annet <xref:System.Web.Services.Protocols.AnyReturnReader>forekomsten.</xref:System.Web.Services.Protocols.AnyReturnReader> </xref:System.Web.Services.Protocols.AnyReturnReader.Initialize%2A> </xref:System.Web.Services.Protocols.AnyReturnReader> Den andre forekomsten tar kallet til den <xref:System.Web.Services.Protocols.AnyReturnReader.Read%2A>metoden.</xref:System.Web.Services.Protocols.AnyReturnReader.Read%2A>"
  syntax:
    content: public override object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);
    parameters:
    - id: methodInfo
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "En <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> som angir Web-metoden i initialisering hentes."
    return:
      type: System.Object
      description: "{Parameteren sendt til den <xref:System.Web.Services.Protocols.AnyReturnReader.Initialize*>metoden.</xref:System.Web.Services.Protocols.AnyReturnReader.Initialize*>"
  overload: System.Web.Services.Protocols.AnyReturnReader.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.AnyReturnReader.Initialize(System.Object)
  id: Initialize(System.Object)
  parent: System.Web.Services.Protocols.AnyReturnReader
  langs:
  - csharp
  name: Initialize(Object)
  nameWithType: AnyReturnReader.Initialize(Object)
  fullName: System.Web.Services.Protocols.AnyReturnReader.Initialize(Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Initialiserer en forekomst av den <xref href=&quot;System.Web.Services.Protocols.AnyReturnReader&quot;> </xref> klasse."
  remarks: "I initialiseringsmetoden gjøre noe.       Denne metoden aktiveres da svar er behandlet. Inndataparameteren `initializer`, er en annen forekomst av <xref:System.Web.Services.Protocols.AnyReturnReader>, hentede under initialisering av klienten.</xref:System.Web.Services.Protocols.AnyReturnReader>"
  syntax:
    content: public override void Initialize (object o);
    parameters:
    - id: o
      type: System.Object
      description: "En annen forekomst av den <xref href=&quot;System.Web.Services.Protocols.AnyReturnReader&quot;> </xref> klassen som den <xref:System.Web.Services.Protocols.AnyReturnReader.GetInitializer*>metoden tidligere ble kalt.</xref:System.Web.Services.Protocols.AnyReturnReader.GetInitializer*>"
  overload: System.Web.Services.Protocols.AnyReturnReader.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.AnyReturnReader.Read(System.Net.WebResponse,System.IO.Stream)
  id: Read(System.Net.WebResponse,System.IO.Stream)
  parent: System.Web.Services.Protocols.AnyReturnReader
  langs:
  - csharp
  name: Read(WebResponse,Stream)
  nameWithType: AnyReturnReader.Read(WebResponse,Stream)
  fullName: System.Web.Services.Protocols.AnyReturnReader.Read(WebResponse,Stream)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Returnerer den inngående HTTP-svar dataflyten."
  remarks: "Den <xref:System.Web.Services.Protocols.AnyReturnReader>klassens implementering av metoden lese støtter ikke lesing.</xref:System.Web.Services.Protocols.AnyReturnReader> I stedet bare returneres av <xref:System.IO.Stream>objekt sendt som en parameter.</xref:System.IO.Stream>"
  syntax:
    content: public override object Read (System.Net.WebResponse response, System.IO.Stream responseStream);
    parameters:
    - id: response
      type: System.Net.WebResponse
      description: "En representasjon av HTTP-svar sendt av en webtjeneste, som inneholder utdatameldingen for en operasjon."
    - id: responseStream
      type: System.IO.Stream
      description: "En output-dataflyten filreferanser er meldingsteksten i HTTP-svar som representerer den `response` parameteren."
    return:
      type: System.Object
      description: "Den inngående HTTP-svar dataflyten."
  overload: System.Web.Services.Protocols.AnyReturnReader.Read*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Services.Protocols.MimeReturnReader
  isExternal: false
  name: System.Web.Services.Protocols.MimeReturnReader
- uid: System.Web.Services.Protocols.AnyReturnReader.#ctor
  parent: System.Web.Services.Protocols.AnyReturnReader
  isExternal: false
  name: AnyReturnReader()
  nameWithType: AnyReturnReader.AnyReturnReader()
  fullName: System.Web.Services.Protocols.AnyReturnReader.AnyReturnReader()
- uid: System.Web.Services.Protocols.AnyReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.AnyReturnReader
  isExternal: false
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: AnyReturnReader.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.AnyReturnReader.GetInitializer(LogicalMethodInfo)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Services.Protocols.LogicalMethodInfo
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo
- uid: System.Web.Services.Protocols.AnyReturnReader.Initialize(System.Object)
  parent: System.Web.Services.Protocols.AnyReturnReader
  isExternal: false
  name: Initialize(Object)
  nameWithType: AnyReturnReader.Initialize(Object)
  fullName: System.Web.Services.Protocols.AnyReturnReader.Initialize(Object)
- uid: System.Web.Services.Protocols.AnyReturnReader.Read(System.Net.WebResponse,System.IO.Stream)
  parent: System.Web.Services.Protocols.AnyReturnReader
  isExternal: false
  name: Read(WebResponse,Stream)
  nameWithType: AnyReturnReader.Read(WebResponse,Stream)
  fullName: System.Web.Services.Protocols.AnyReturnReader.Read(WebResponse,Stream)
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: true
  name: WebResponse
  nameWithType: WebResponse
  fullName: System.Net.WebResponse
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.Services.Protocols.AnyReturnReader.#ctor*
  parent: System.Web.Services.Protocols.AnyReturnReader
  isExternal: false
  name: AnyReturnReader
  nameWithType: AnyReturnReader.AnyReturnReader
- uid: System.Web.Services.Protocols.AnyReturnReader.GetInitializer*
  parent: System.Web.Services.Protocols.AnyReturnReader
  isExternal: false
  name: GetInitializer
  nameWithType: AnyReturnReader.GetInitializer
- uid: System.Web.Services.Protocols.AnyReturnReader.Initialize*
  parent: System.Web.Services.Protocols.AnyReturnReader
  isExternal: false
  name: Initialize
  nameWithType: AnyReturnReader.Initialize
- uid: System.Web.Services.Protocols.AnyReturnReader.Read*
  parent: System.Web.Services.Protocols.AnyReturnReader
  isExternal: false
  name: Read
  nameWithType: AnyReturnReader.Read
