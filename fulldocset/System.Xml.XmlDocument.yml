### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlDocument
  id: XmlDocument
  children:
  - System.Xml.XmlDocument.#ctor
  - System.Xml.XmlDocument.#ctor(System.Xml.XmlImplementation)
  - System.Xml.XmlDocument.#ctor(System.Xml.XmlNameTable)
  - System.Xml.XmlDocument.BaseURI
  - System.Xml.XmlDocument.CloneNode(System.Boolean)
  - System.Xml.XmlDocument.CreateAttribute(System.String)
  - System.Xml.XmlDocument.CreateAttribute(System.String,System.String)
  - System.Xml.XmlDocument.CreateAttribute(System.String,System.String,System.String)
  - System.Xml.XmlDocument.CreateCDataSection(System.String)
  - System.Xml.XmlDocument.CreateComment(System.String)
  - System.Xml.XmlDocument.CreateDefaultAttribute(System.String,System.String,System.String)
  - System.Xml.XmlDocument.CreateDocumentFragment
  - System.Xml.XmlDocument.CreateDocumentType(System.String,System.String,System.String,System.String)
  - System.Xml.XmlDocument.CreateElement(System.String)
  - System.Xml.XmlDocument.CreateElement(System.String,System.String)
  - System.Xml.XmlDocument.CreateElement(System.String,System.String,System.String)
  - System.Xml.XmlDocument.CreateEntityReference(System.String)
  - System.Xml.XmlDocument.CreateNavigator
  - System.Xml.XmlDocument.CreateNavigator(System.Xml.XmlNode)
  - System.Xml.XmlDocument.CreateNode(System.String,System.String,System.String)
  - System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String)
  - System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String,System.String)
  - System.Xml.XmlDocument.CreateProcessingInstruction(System.String,System.String)
  - System.Xml.XmlDocument.CreateSignificantWhitespace(System.String)
  - System.Xml.XmlDocument.CreateTextNode(System.String)
  - System.Xml.XmlDocument.CreateWhitespace(System.String)
  - System.Xml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)
  - System.Xml.XmlDocument.DocumentElement
  - System.Xml.XmlDocument.DocumentType
  - System.Xml.XmlDocument.GetElementById(System.String)
  - System.Xml.XmlDocument.GetElementsByTagName(System.String)
  - System.Xml.XmlDocument.GetElementsByTagName(System.String,System.String)
  - System.Xml.XmlDocument.Implementation
  - System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)
  - System.Xml.XmlDocument.InnerText
  - System.Xml.XmlDocument.InnerXml
  - System.Xml.XmlDocument.IsReadOnly
  - System.Xml.XmlDocument.Load(System.IO.Stream)
  - System.Xml.XmlDocument.Load(System.IO.TextReader)
  - System.Xml.XmlDocument.Load(System.String)
  - System.Xml.XmlDocument.Load(System.Xml.XmlReader)
  - System.Xml.XmlDocument.LoadXml(System.String)
  - System.Xml.XmlDocument.LocalName
  - System.Xml.XmlDocument.Name
  - System.Xml.XmlDocument.NameTable
  - System.Xml.XmlDocument.NodeChanged
  - System.Xml.XmlDocument.NodeChanging
  - System.Xml.XmlDocument.NodeInserted
  - System.Xml.XmlDocument.NodeInserting
  - System.Xml.XmlDocument.NodeRemoved
  - System.Xml.XmlDocument.NodeRemoving
  - System.Xml.XmlDocument.NodeType
  - System.Xml.XmlDocument.OwnerDocument
  - System.Xml.XmlDocument.ParentNode
  - System.Xml.XmlDocument.PreserveWhitespace
  - System.Xml.XmlDocument.ReadNode(System.Xml.XmlReader)
  - System.Xml.XmlDocument.Save(System.IO.Stream)
  - System.Xml.XmlDocument.Save(System.IO.TextWriter)
  - System.Xml.XmlDocument.Save(System.String)
  - System.Xml.XmlDocument.Save(System.Xml.XmlWriter)
  - System.Xml.XmlDocument.SchemaInfo
  - System.Xml.XmlDocument.Schemas
  - System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler)
  - System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlNode)
  - System.Xml.XmlDocument.WriteContentTo(System.Xml.XmlWriter)
  - System.Xml.XmlDocument.WriteTo(System.Xml.XmlWriter)
  - System.Xml.XmlDocument.XmlResolver
  langs:
  - csharp
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
  type: Class
  summary: "Representerer et XML-dokument. Du kan bruke denne klassen å laste inn validere, redigere, legge til og Plasser XML i et dokument."
  remarks: "<a name=\"Remarks\"></a> The XmlDocument class is an in-memory representation of an XML document. It implements the W3C [XML Document Object Model (DOM)](~/add/includes/ajax-current-ext-md.md) Level 1 Core and the Core DOM Level 2.  \n  \n *DOM* stands for *document object model*. To read more about it, see [XML Document Object Model (DOM)](../Topic/XML%20Document%20Object%20Model%20\\(DOM\\).md).  \n  \n You can load XML into the DOM by using the XmlDocument class, and then programmatically read, modify, and remove XML in the document.  \n  \n If you want to pry open the XmlDocument class and see how it’s implemented, see the [Reference Source](http://referencesource.microsoft.com/#System.Xml/Xml/System/Xml/Dom/XmlDocument.cs#f82a4c1bd1f0ee12).  \n  \n<a name=\"Common\"></a>   \n## Tasks  \n  \n-   [Load XML into the document object model](#Load)  \n  \n-   [Validate it against a schema](#Validation)  \n  \n-   [Navigate the document tree](#Navigate)  \n  \n-   [Find nodes](#Find)  \n  \n-   [Edit nodes](#Edit)  \n  \n-   [Add nodes](#Add)  \n  \n-   [Remove nodes](#Remove)  \n  \n-   [Position nodes](#Position)  \n  \n<a name=\"Load\"></a>   \n## Load XML into the document object model  \n Start with an XML document like this one. It’s just a few books in a collection. But it does contain the basic things that you’d find in any XML document; a namespace, elements that represent data and attributes that describe the data.  \n  \n```xml  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<books xmlns=\"http://www.contoso.com/books\">  \n  <book genre=\"novel\" ISBN=\"1-861001-57-8\" publicationdate=\"1823-01-28\">  \n    <title>Pride And Prejudice</title>  \n    <price>24.95</price>  \n  </book>  \n  <book genre=\"novel\" ISBN=\"1-861002-30-1\" publicationdate=\"1985-01-01\">  \n    <title>The Handmaid's Tale</title>  \n    <price>29.95</price>  \n  </book>  \n  <book genre=\"novel\" ISBN=\"1-861001-45-3\" publicationdate=\"1811-01-01\">  \n    <title>Sense and Sensibility</title>  \n    <price>19.95</price>  \n  </book>  \n</books>  \n```  \n  \n Next, load this data into the DOM so that you can work with it in memory. The most popular way to do this is refer to a file on your local computer or on a network.  \n  \n This example loads XML from a file. If the file doesn’t exist, it just generates some XML and loads that.  \n  \n [!code-cpp[XMLProcessingApp#1](~/add/codesnippet/cpp/xmldomprocessing/xmldomprocessing.cpp#1)]\n [!code-cs[XMLProcessingApp#1](~/add/codesnippet/csharp/xmlprocessingapp/xmlhelpermethods.cs#1)]\n [!code-vb[XMLProcessingApp#1](~/add/codesnippet/visualbasic/xmlprocessingappvb/xmlhelpermethods.vb#1)]  \n  \n **Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)  \n  \n **Learn more:** [Reading an XML Document into the DOM](~/add/includes/ajax-current-ext-md.md)  \n  \n<a name=\"Validation\"></a>   \n## Validate it against a schema  \n Start with an XML schema like this one. This schema defines the data types in the XML and which attributes are required.  \n  \n```xml  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"  \n  attributeFormDefault=\"unqualified\"   \n  elementFormDefault=\"qualified\"  \n  targetNamespace=\"http://www.contoso.com/books\">   \n  <xs:element name=\"books\">  \n    <xs:complexType>  \n      <xs:sequence>  \n        <xs:element maxOccurs=\"unbounded\" name=\"book\">  \n          <xs:complexType>  \n            <xs:sequence>  \n              <xs:element name=\"title\" type=\"xs:string\" />  \n              <xs:element name=\"price\" type=\"xs:decimal\" />  \n            </xs:sequence>  \n            <xs:attribute name=\"genre\" type=\"xs:string\" use=\"required\" />  \n            <xs:attribute name=\"ISBN\" type=\"xs:string\" use=\"required\" />  \n            <xs:attribute name=\"publicationdate\" type=\"xs:date\" use=\"required\" />  \n          </xs:complexType>  \n        </xs:element>  \n      </xs:sequence>  \n    </xs:complexType>  \n  </xs:element>  \n</xs:schema>  \n```  \n  \n Create an <xref:System.Xml.XmlReader> object by using your schema, and then load that object into the DOM. Create an event handler that executes when code attempts to modify your XML file in ways that violate the rules of the schema.  \n  \n These blocks of code show helper methods that do all of this.  \n  \n [!code-cpp[XMLProcessingApp#2](~/add/codesnippet/cpp/xmldomprocessing/xmldomprocessing.cpp#2)]\n [!code-cs[XMLProcessingApp#2](~/add/codesnippet/csharp/xmlprocessingapp/xmlhelpermethods.cs#2)]\n [!code-vb[XMLProcessingApp#2](~/add/codesnippet/visualbasic/xmlprocessingappvb/xmlhelpermethods.vb#2)]  \n  \n **Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)  \n  \n **Learn more:** [Validating an XML Document in the DOM](~/add/includes/ajax-current-ext-md.md)  \n  \n<a name=\"Navigate\"></a>   \n## Navigate the document tree  \n You can use properties to navigate around an XML document. But before you use any of them, let’s quickly review a few terms. Your document is composed of nodes. Each node has as single *parent* node directly above it. The only node that does not have a parent node is the document root, as it is the top-level node. Most nodes can have *child* nodes, which are nodes directly below them. Nodes that are at the same level are *siblings*.  \n  \n The following examples, show you how to obtain the root node, jump to the first child node of the root node, access any of its child nodes, get back out to the parent node, and then navigate across sibling nodes.  \n  \n **Start with the root node**  \n  \n This example gets the root node and then uses that node to output the contents of the document to the console.  \n  \n [!code-cs[Classic WebData XmlDocument.DocumentElement Example#1](~/add/codesnippet/csharp/t-system.xml.xmldocument_3.cs)]\n [!code-cpp[Classic WebData XmlDocument.DocumentElement Example#1](~/add/codesnippet/cpp/t-system.xml.xmldocument_3.cpp)]\n [!code-vb[Classic WebData XmlDocument.DocumentElement Example#1](~/add/codesnippet/visualbasic/t-system.xml.xmldocument_3.vb)]  \n  \n **Get child nodes**  \n  \n This example jumps to the first child node of the root node and then iterates through the child nodes of that node if any exist.  \n  \n [!code-cs[Classic WebData XmlNode.HasChildNodes Example#1](~/add/codesnippet/csharp/t-system.xml.xmldocument_4.cs)]\n [!code-cpp[Classic WebData XmlNode.HasChildNodes Example#1](~/add/codesnippet/cpp/t-system.xml.xmldocument_4.cpp)]\n [!code-vb[Classic WebData XmlNode.HasChildNodes Example#1](~/add/codesnippet/visualbasic/t-system.xml.xmldocument_4.vb)]  \n  \n **Get back to the parent node**  \n  \n Use the <xref:System.Xml.XmlDocument.ParentNode%2A> property.  \n  \n **Refer to the last child node**  \n  \n This example writes the price of a book to the console (which is the last child node of a book node).  \n  \n [!code-cpp[Classic WebData XmlNode.LastChild Example#1](~/add/codesnippet/cpp/t-system.xml.xmldocument_5.cpp)]\n [!code-cs[Classic WebData XmlNode.LastChild Example#1](~/add/codesnippet/csharp/t-system.xml.xmldocument_5.cs)]\n [!code-vb[Classic WebData XmlNode.LastChild Example#1](~/add/codesnippet/visualbasic/t-system.xml.xmldocument_5.vb)]  \n  \n **Navigate forward across siblings**  \n  \n This example moves forward from book to book. Book nodes are siblings to one another.  \n  \n [!code-vb[Classic WebData XmlNode.NextSibling Example#1](~/add/codesnippet/visualbasic/t-system.xml.xmldocument_6.vb)]\n [!code-cpp[Classic WebData XmlNode.NextSibling Example#1](~/add/codesnippet/cpp/t-system.xml.xmldocument_6.cpp)]\n [!code-cs[Classic WebData XmlNode.NextSibling Example#1](~/add/codesnippet/csharp/t-system.xml.xmldocument_6.cs)]  \n  \n **Navigate backwards across siblings**  \n  \n This example moves backwards from book to book.  \n  \n [!code-cs[Classic WebData XmlNode.PreviousSibling Example#1](~/add/codesnippet/csharp/t-system.xml.xmldocument_7.cs)]\n [!code-cpp[Classic WebData XmlNode.PreviousSibling Example#1](~/add/codesnippet/cpp/t-system.xml.xmldocument_7.cpp)]\n [!code-vb[Classic WebData XmlNode.PreviousSibling Example#1](~/add/codesnippet/visualbasic/t-system.xml.xmldocument_7.vb)]  \n  \n<a name=\"Find\"></a>   \n## Find nodes  \n The most popular way to find one or more nodes of data is to use an XPath query string, but there are also methods that don’t require one.  \n  \n **Get a single node**  \n  \n This example locates a book by using the ISBN number.  \n  \n [!code-cpp[XMLProcessingApp#3](~/add/codesnippet/cpp/xmldomprocessing/xmldomprocessing.cpp#3)]\n [!code-cs[XMLProcessingApp#3](~/add/codesnippet/csharp/xmlprocessingapp/xmlhelpermethods.cs#3)]\n [!code-vb[XMLProcessingApp#3](~/add/codesnippet/visualbasic/xmlprocessingappvb/xmlhelpermethods.vb#3)]  \n  \n The string used in this example is an Xpath query. You can find more examples of them here:   [XPath examples](https://msdn.microsoft.com/en-us/library/ms256086.aspx).  \n  \n You can also use the <xref:System.Xml.XmlDocument.GetElementById%2A> to retrieve nodes. To use this approach, you’ll have to define ID’s in the document type definition declarations of your XML file.  \n  \n After you get a node, you get the value of attributes or child nodes. This example does that with a book node.  \n  \n [!code-cpp[XMLProcessingApp#4](~/add/codesnippet/cpp/xmldomprocessing/xmldomprocessing.cpp#4)]\n [!code-cs[XMLProcessingApp#4](~/add/codesnippet/csharp/xmlprocessingapp/xmlhelpermethods.cs#4)]\n [!code-vb[XMLProcessingApp#4](~/add/codesnippet/visualbasic/xmlprocessingappvb/xmlhelpermethods.vb#4)]  \n  \n **Get a collection of nodes**  \n  \n This example selects all books where the author's last name is **Austen**, and then changes the price of those books.  \n  \n [!code-cpp[Classic WebData XmlNode.SelectNodes Example#1](~/add/codesnippet/cpp/t-system.xml.xmldocument_10.cpp)]\n [!code-cs[Classic WebData XmlNode.SelectNodes Example#1](~/add/codesnippet/csharp/t-system.xml.xmldocument_10.cs)]\n [!code-vb[Classic WebData XmlNode.SelectNodes Example#1](~/add/codesnippet/visualbasic/t-system.xml.xmldocument_10.vb)]  \n  \n You can also get a collection of nodes by using the name of the node. For example, this example gets a collection of all book titles.  \n  \n [!code-cs[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/add/codesnippet/csharp/t-system.xml.xmldocument_11.cs)]\n [!code-cpp[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/add/codesnippet/cpp/t-system.xml.xmldocument_11.cpp)]\n [!code-vb[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/add/codesnippet/visualbasic/t-system.xml.xmldocument_11.vb)]  \n  \n **Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)  \n  \n **Learn more:** [Select Nodes Using XPath Navigation](~/add/includes/ajax-current-ext-md.md)  \n  \n<a name=\"Edit\"></a>   \n## Edit nodes  \n This example edits a book node and its attributes.  \n  \n [!code-cpp[XMLProcessingApp#7](~/add/codesnippet/cpp/xmldomprocessing/xmldomprocessing.cpp#7)]\n [!code-cs[XMLProcessingApp#7](~/add/codesnippet/csharp/xmlprocessingapp/xmlhelpermethods.cs#7)]\n [!code-vb[XMLProcessingApp#7](~/add/codesnippet/visualbasic/xmlprocessingappvb/xmlhelpermethods.vb#7)]  \n  \n **Learn more:** [Modifying Nodes, Content, and Values in an XML Document](~/add/includes/ajax-current-ext-md.md)  \n  \n **Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)  \n  \n<a name=\"Add\"></a>   \n## Add nodes  \n To add a node, use the <xref:System.Xml.XmlDocument.CreateElement%2A> method or the <xref:System.Xml.XmlDocument.CreateNode%2A> method.  \n  \n To add a data node such as a book, use the <xref:System.Xml.XmlDocument.CreateElement%2A> method.  \n  \n For any other type of node such as a comment, whitespace node, or CDATA node, use the <xref:System.Xml.XmlDocument.CreateNode%2A> method.  \n  \n This example creates a book node, adds attrubutes to that node, and then adds that node to the document.  \n  \n [!code-cpp[XMLProcessingApp#5](~/add/codesnippet/cpp/xmldomprocessing/xmldomprocessing.cpp#5)]\n [!code-cs[XMLProcessingApp#5](~/add/codesnippet/csharp/xmlprocessingapp/xmlhelpermethods.cs#5)]\n [!code-vb[XMLProcessingApp#5](~/add/codesnippet/visualbasic/xmlprocessingappvb/xmlhelpermethods.vb#5)]  \n  \n **Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)  \n  \n **Learn more:** [Inserting Nodes into an XML Document](~/add/includes/ajax-current-ext-md.md)  \n  \n<a name=\"Remove\"></a>   \n## Remove nodes  \n To remove a node, use the <xref:System.Xml.XmlNode.RemoveChild%2A> method.  \n  \n This example removes a book from the document and any whitespace that appears just before the book node.  \n  \n [!code-cpp[XMLProcessingApp#6](~/add/codesnippet/cpp/xmldomprocessing/xmldomprocessing.cpp#6)]\n [!code-cs[XMLProcessingApp#6](~/add/codesnippet/csharp/xmlprocessingapp/xmlhelpermethods.cs#6)]\n [!code-vb[XMLProcessingApp#6](~/add/codesnippet/visualbasic/xmlprocessingappvb/xmlhelpermethods.vb#6)]  \n  \n **Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)  \n  \n **Learn more:** [Removing Nodes, Content, and Values from an XML Document](~/add/includes/ajax-current-ext-md.md)  \n  \n<a name=\"Position\"></a>   \n## Position nodes  \n You can choose where you want a node to appear in your document by using the <xref:System.Xml.XmlNode.InsertBefore%2A> and <xref:System.Xml.XmlNode.InsertAfter%2A> methods.  \n  \n This example shows two helper methods. One of them moves a node higher in a list. The other one moves a node lower.  \n  \n These methods could be used in an application that enables users to move books up and down in a list of books. When a user chooses a book and presses an up or down button, your code could call methods like these to position the corresponding book node before or after other book nodes.  \n  \n [!code-cpp[XMLProcessingApp#8](~/add/codesnippet/cpp/xmldomprocessing/xmldomprocessing.cpp#8)]\n [!code-cs[XMLProcessingApp#8](~/add/codesnippet/csharp/xmlprocessingapp/xmlhelpermethods.cs#8)]\n [!code-vb[XMLProcessingApp#8](~/add/codesnippet/visualbasic/xmlprocessingappvb/xmlhelpermethods.vb#8)]  \n  \n **Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)"
  syntax:
    content: 'public class XmlDocument : System.Xml.XmlNode'
  inheritance:
  - System.Object
  - System.Xml.XmlNode
  implements: []
  inheritedMembers:
  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.Attributes
  - System.Xml.XmlNode.ChildNodes
  - System.Xml.XmlNode.Clone
  - System.Xml.XmlNode.FirstChild
  - System.Xml.XmlNode.GetEnumerator
  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  - System.Xml.XmlNode.HasChildNodes
  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.Item(System.String)
  - System.Xml.XmlNode.Item(System.String,System.String)
  - System.Xml.XmlNode.LastChild
  - System.Xml.XmlNode.NamespaceURI
  - System.Xml.XmlNode.NextSibling
  - System.Xml.XmlNode.Normalize
  - System.Xml.XmlNode.OuterXml
  - System.Xml.XmlNode.Prefix
  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.PreviousSibling
  - System.Xml.XmlNode.PreviousText
  - System.Xml.XmlNode.RemoveAll
  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.SelectNodes(System.String)
  - System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.SelectSingleNode(System.String)
  - System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.Supports(System.String,System.String)
  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator
  - System.Xml.XmlNode.System#ICloneable#Clone
  - System.Xml.XmlNode.Value
  platform:
  - net462
- uid: System.Xml.XmlDocument.#ctor
  id: '#ctor'
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: XmlDocument()
  nameWithType: XmlDocument.XmlDocument()
  fullName: System.Xml.XmlDocument.XmlDocument()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> klasse."
  remarks: ''
  example:
  - "The following is an example of load-time validation. A document type definition (DTD) validating <xref:System.Xml.XmlReader> is passed to the <xref:System.Xml.XmlDocument.Load%2A> method and a <xref:System.Xml.Schema.ValidationEventHandler> is provided to notify users of any validation errors. In this example a validation error is found, but the document is still loaded. Alternatively, you can define a validating <xref:System.Xml.XmlReader> to throw an exception and stop the load process when a validation error is found by not specifying the <xref:System.Xml.Schema.ValidationEventHandler>. For more information about validating XML data, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.  \n  \n [!code-vb[XmlDocument.cctor#1](~/add/codesnippet/visualbasic/m-system.xml.xmldocument_11_1.vb)]\n [!code-cs[XmlDocument.cctor#1](~/add/codesnippet/csharp/m-system.xml.xmldocument_11_1.cs)]\n [!code-cpp[XmlDocument.cctor#1](~/add/codesnippet/cpp/m-system.xml.xmldocument_11_1.cpp)]  \n  \n The example uses the `bookDTD.xml` file as input.  \n  \n [!code-xml[XmlDocument.cctor#2](~/add/codesnippet/xml/m-system.xml.xmldocument_11_2.xml)]"
  syntax:
    content: public XmlDocument ();
    parameters: []
  overload: System.Xml.XmlDocument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.#ctor(System.Xml.XmlImplementation)
  id: '#ctor(System.Xml.XmlImplementation)'
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: XmlDocument(XmlImplementation)
  nameWithType: XmlDocument.XmlDocument(XmlImplementation)
  fullName: System.Xml.XmlDocument.XmlDocument(XmlImplementation)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Initialiserer en ny forekomst av den <xref uid=&quot;langword_csharp_XmlDocument&quot; name=&quot;XmlDocument&quot; href=&quot;&quot;> </xref> klassen med den angitte <xref href=&quot;System.Xml.XmlImplementation&quot;> </xref>."
  syntax:
    content: protected XmlDocument (System.Xml.XmlImplementation imp);
    parameters:
    - id: imp
      type: System.Xml.XmlImplementation
      description: "The <xref uid=&quot;langword_csharp_XmlImplementation&quot; name=&quot;XmlImplementation&quot; href=&quot;&quot;></xref> to use."
  overload: System.Xml.XmlDocument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.#ctor(System.Xml.XmlNameTable)
  id: '#ctor(System.Xml.XmlNameTable)'
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: XmlDocument(XmlNameTable)
  nameWithType: XmlDocument.XmlDocument(XmlNameTable)
  fullName: System.Xml.XmlDocument.XmlDocument(XmlNameTable)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Initialiserer en ny forekomst av den <xref uid=&quot;langword_csharp_XmlDocument&quot; name=&quot;XmlDocument&quot; href=&quot;&quot;> </xref> klassen med den angitte <xref:System.Xml.XmlNameTable>.</xref:System.Xml.XmlNameTable>"
  syntax:
    content: public XmlDocument (System.Xml.XmlNameTable nt);
    parameters:
    - id: nt
      type: System.Xml.XmlNameTable
      description: "The <xref uid=&quot;langword_csharp_XmlNameTable&quot; name=&quot;XmlNameTable&quot; href=&quot;&quot;></xref> to use."
  overload: System.Xml.XmlDocument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.BaseURI
  id: BaseURI
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: BaseURI
  nameWithType: XmlDocument.BaseURI
  fullName: System.Xml.XmlDocument.BaseURI
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Henter basis-URIEN for den gjeldende noden."
  remarks: "Et nettverk XML-dokument består av tilgjengelig, aggregeres med ulike W3C standard inkluderings mekanismer, og derfor inneholder noder som kommer fra ulike steder. Den `BaseURI` forteller hvor disse nodene kom fra.       For dokumentet noder `BaseURI` returnerer plasseringen av XML-dokumentet. For eksempel hvis den `XmlDocument` ble lastet inn med følgende kall dokumentet. Lastingen (&quot;http://server/mydata.xml&quot;), den `BaseURI` noden er http://server/mydata.xml for dokumentet. Imidlertid hvis den <xref:System.Xml.XmlDocument.Load%2A>metoden omdirigert via server til en annen URI `BaseURI` returnerer den opprinnelige URIEN som er sendt til den `Load` metoden.</xref:System.Xml.XmlDocument.Load%2A>       Denne egenskapen er en Microsoft-filtype til dokumentet objektet Model (DOM). For mer informasjon om `BaseURI` og hvordan det fungerer med andre typer, kan du se <xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=fullName>.</xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=fullName>"
  syntax:
    content: public override string BaseURI { get; }
    return:
      type: System.String
      description: "Plasseringen som noden ble lastet inn fra."
  overload: System.Xml.XmlDocument.BaseURI*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.CloneNode(System.Boolean)
  id: CloneNode(System.Boolean)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: CloneNode(Boolean)
  nameWithType: XmlDocument.CloneNode(Boolean)
  fullName: System.Xml.XmlDocument.CloneNode(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Oppretter et duplikat av denne noden."
  remarks: "Denne metoden fungerer som en kopi konstruktør for noder. Det klonede har ingen overordnede (<xref:System.Xml.XmlNode.ParentNode%2A> returnerer `null`).</xref:System.Xml.XmlNode.ParentNode%2A>       Hvis `deep` er `true`, noden klonede inkluderer alle underordnede noder, ellers bare den `XmlDocument` noden klone. Se den <xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=fullName>metode for å se hvordan denne metoden fungerer på andre typer.</xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=fullName>"
  example:
  - "The following example shows the difference between a deep and shallow clone.  \n  \n [!code-cpp[Classic WebData XmlDocument.CloneNode Example#1](~/add/codesnippet/cpp/m-system.xml.xmldocument_13_1.cpp)]\n [!code-cs[Classic WebData XmlDocument.CloneNode Example#1](~/add/codesnippet/csharp/m-system.xml.xmldocument_13_1.cs)]\n [!code-vb[Classic WebData XmlDocument.CloneNode Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmldocument_13_1.vb)]"
  syntax:
    content: public override System.Xml.XmlNode CloneNode (bool deep);
    parameters:
    - id: deep
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>til rekursivt klone undertreet under den angitte noden. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> til klone noden seg selv."
    return:
      type: System.Xml.XmlNode
      description: "Det klonede <xref uid=&quot;langword_csharp_XmlDocument&quot; name=&quot;XmlDocument&quot; href=&quot;&quot;> </xref> noden."
  overload: System.Xml.XmlDocument.CloneNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.CreateAttribute(System.String)
  id: CreateAttribute(System.String)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: CreateAttribute(String)
  nameWithType: XmlDocument.CreateAttribute(String)
  fullName: System.Xml.XmlDocument.CreateAttribute(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Oppretter en <xref href=&quot;System.Xml.XmlAttribute&quot;> </xref> med den angitte <xref:System.Xml.XmlDocument.Name*>.</xref:System.Xml.XmlDocument.Name*>"
  remarks: "Den `XmlAttribute` kan legges til en <xref:System.Xml.XmlElement>ved hjelp av den <xref:System.Xml.XmlElement.SetAttributeNode%2A>metoden.</xref:System.Xml.XmlElement.SetAttributeNode%2A> </xref:System.Xml.XmlElement>"
  example:
  - "The following creates an attribute and adds it to an XML document.  \n  \n [!code-cs[Classic WebData XmlDocument.CreateAttribute Example#1](~/add/codesnippet/csharp/m-system.xml.xmldocument_1_1.cs)]\n [!code-cpp[Classic WebData XmlDocument.CreateAttribute Example#1](~/add/codesnippet/cpp/m-system.xml.xmldocument_1_1.cpp)]\n [!code-vb[Classic WebData XmlDocument.CreateAttribute Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmldocument_1_1.vb)]"
  syntax:
    content: public System.Xml.XmlAttribute CreateAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: "Det kvalifiserte navnet på attributtet. Hvis navnet inneholder et kolon i <> </> *> egenskapen gjenspeiler delen av navnet foregående første kolon og <> </> *> egenskapen gjenspeiler delen av navnet på følgende første kolon. Den <xref:System.Xml.XmlNode.NamespaceURI*>forblir tom prefikset er en gjenkjent innebygde prefiks for eksempel xmlns.</xref:System.Xml.XmlNode.NamespaceURI*> I dette tilfellet <xref uid=&quot;langword_csharp_NamespaceURI&quot; name=&quot;NamespaceURI&quot; href=&quot;&quot;> </xref> har verdien http://www.w3.org/2000/xmlns/."
    return:
      type: System.Xml.XmlAttribute
      description: "The new <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.XmlDocument.CreateAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.CreateAttribute(System.String,System.String)
  id: CreateAttribute(System.String,System.String)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: CreateAttribute(String,String)
  nameWithType: XmlDocument.CreateAttribute(String,String)
  fullName: System.Xml.XmlDocument.CreateAttribute(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Oppretter en <xref href=&quot;System.Xml.XmlAttribute&quot;> </xref> med angitt kvalifisert navn og <xref:System.Xml.XmlNode.NamespaceURI*>.</xref:System.Xml.XmlNode.NamespaceURI*>"
  remarks: "Den `XmlAttribute` kan legges til en <xref:System.Xml.XmlElement>ved hjelp av den <xref:System.Xml.XmlElement.SetAttributeNode%2A>metoden.</xref:System.Xml.XmlElement.SetAttributeNode%2A> </xref:System.Xml.XmlElement>"
  syntax:
    content: public System.Xml.XmlAttribute CreateAttribute (string qualifiedName, string namespaceURI);
    parameters:
    - id: qualifiedName
      type: System.String
      description: "Det kvalifiserte navnet på attributtet. Hvis navnet inneholder et kolon og deretter den <> </> *> egenskapen gjenspeiler delen av navnet foregående kolon og <> </> *> egenskapen gjenspeiler del av navnet etter kolon."
    - id: namespaceURI
      type: System.String
      description: "NamespaceURI for attributtet. Hvis det kvalifiserte navnet inneholder et prefiks fra xmlns, må parameteren være http://www.w3.org/2000/xmlns/."
    return:
      type: System.Xml.XmlAttribute
      description: "The new <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.XmlDocument.CreateAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.CreateAttribute(System.String,System.String,System.String)
  id: CreateAttribute(System.String,System.String,System.String)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: CreateAttribute(String,String,String)
  nameWithType: XmlDocument.CreateAttribute(String,String,String)
  fullName: System.Xml.XmlDocument.CreateAttribute(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Oppretter en <xref href=&quot;System.Xml.XmlAttribute&quot;> </xref> med angitt <> </> *>, <> </> *>, og <xref:System.Xml.XmlNode.NamespaceURI*>.</xref:System.Xml.XmlNode.NamespaceURI*>"
  remarks: "Den `XmlAttribute` kan legges til en <xref:System.Xml.XmlElement>ved hjelp av den <xref:System.Xml.XmlElement.SetAttributeNode%2A>metoden.</xref:System.Xml.XmlElement.SetAttributeNode%2A> </xref:System.Xml.XmlElement>       Denne metoden er en Microsoft-filtype til dokumentet objektet Model (DOM)."
  syntax:
    content: public virtual System.Xml.XmlAttribute CreateAttribute (string prefix, string localName, string namespaceURI);
    parameters:
    - id: prefix
      type: System.String
      description: "Prefiks for attributtet (Hvis noen). String.Empty og <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> er like."
    - id: localName
      type: System.String
      description: "Lokale navnet på attributtet."
    - id: namespaceURI
      type: System.String
      description: "Navneområde-URI for attributtet (Hvis noen). String.Empty og <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> er like. Hvis `prefix` er xmlns, blir denne parameteren må være http://www.w3.org/2000/xmlns/; ellers et unntak."
    return:
      type: System.Xml.XmlAttribute
      description: "The new <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.XmlDocument.CreateAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.CreateCDataSection(System.String)
  id: CreateCDataSection(System.String)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: CreateCDataSection(String)
  nameWithType: XmlDocument.CreateCDataSection(String)
  fullName: System.Xml.XmlDocument.CreateCDataSection(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Oppretter en <xref href=&quot;System.Xml.XmlCDataSection&quot;> </xref> som inneholder de angitte dataene."
  remarks: "Selv om denne metoden oppretter det nye objektet i konteksten til dokumentet, legger den ikke automatisk til det nye objektet dokumenttreet. Hvis du vil legge til det nye objektet, må du eksplisitt kalle én av metodene noden insert.       I henhold til W3C omfattende Markup Language (XML) 1.0 anbefaler (www.w3.org/TR/1998/REC-xml-19980210), CDataSection noder er tillatt i elementnoder og EntityReference noder når noden EntityReference ikke er en underordnet av en attributtnode."
  example:
  - "The following example creates a CDATA node and adds it to the document.  \n  \n [!code-vb[Classic WebData XmlDocument.CreateCDataSection Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmldocument_9_1.vb)]\n [!code-cpp[Classic WebData XmlDocument.CreateCDataSection Example#1](~/add/codesnippet/cpp/m-system.xml.xmldocument_9_1.cpp)]\n [!code-cs[Classic WebData XmlDocument.CreateCDataSection Example#1](~/add/codesnippet/csharp/m-system.xml.xmldocument_9_1.cs)]"
  syntax:
    content: public virtual System.Xml.XmlCDataSection CreateCDataSection (string data);
    parameters:
    - id: data
      type: System.String
      description: "Innholdet i den nye <xref uid=&quot;langword_csharp_XmlCDataSection&quot; name=&quot;XmlCDataSection&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Xml.XmlCDataSection
      description: "The new <xref uid=&quot;langword_csharp_XmlCDataSection&quot; name=&quot;XmlCDataSection&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.XmlDocument.CreateCDataSection*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.CreateComment(System.String)
  id: CreateComment(System.String)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: CreateComment(String)
  nameWithType: XmlDocument.CreateComment(String)
  fullName: System.Xml.XmlDocument.CreateComment(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Oppretter en <xref href=&quot;System.Xml.XmlComment&quot;> </xref> som inneholder de angitte dataene."
  remarks: "Selv om denne metoden oppretter det nye objektet i konteksten til dokumentet, legger den ikke automatisk til det nye objektet dokumenttreet. Hvis du vil legge til det nye objektet, må du eksplisitt kalle én av metodene noden insert.       I henhold til W3C omfattende Markup Language (XML) 1.0 anbefaler (www.w3.org/TR/1998/REC-xml-19980210) tillates bare Kommentarnoder i dokumentet, elementet og EntityReference noder når EntityReference-noden ikke er en underordnet av en attributtnode."
  example:
  - "The following example creates a comment and adds it to an XML document.  \n  \n [!code-cs[Classic WebData XmlDocument.CreateComment Example#1](~/add/codesnippet/csharp/m-system.xml.xmldocument_12_1.cs)]\n [!code-vb[Classic WebData XmlDocument.CreateComment Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmldocument_12_1.vb)]\n [!code-cpp[Classic WebData XmlDocument.CreateComment Example#1](~/add/codesnippet/cpp/m-system.xml.xmldocument_12_1.cpp)]"
  syntax:
    content: public virtual System.Xml.XmlComment CreateComment (string data);
    parameters:
    - id: data
      type: System.String
      description: "Innholdet i den nye <xref uid=&quot;langword_csharp_XmlComment&quot; name=&quot;XmlComment&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Xml.XmlComment
      description: "The new <xref uid=&quot;langword_csharp_XmlComment&quot; name=&quot;XmlComment&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.XmlDocument.CreateComment*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.CreateDefaultAttribute(System.String,System.String,System.String)
  id: CreateDefaultAttribute(System.String,System.String,System.String)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: CreateDefaultAttribute(String,String,String)
  nameWithType: XmlDocument.CreateDefaultAttribute(String,String,String)
  fullName: System.Xml.XmlDocument.CreateDefaultAttribute(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Oppretter et standard-attributt med den angitte prefiks, lokalt navn og navneområde-URI."
  remarks: "Denne metoden er en Microsoft-filtype til dokumentet objektet Model (DOM)."
  syntax:
    content: protected virtual System.Xml.XmlAttribute CreateDefaultAttribute (string prefix, string localName, string namespaceURI);
    parameters:
    - id: prefix
      type: System.String
      description: "Prefiks for attributtet (Hvis noen)."
    - id: localName
      type: System.String
      description: "Lokale navnet på attributtet."
    - id: namespaceURI
      type: System.String
      description: "Navneområde-URI for attributtet (Hvis noen)."
    return:
      type: System.Xml.XmlAttribute
      description: "The new <xref href=&quot;System.Xml.XmlAttribute&quot;></xref>."
  overload: System.Xml.XmlDocument.CreateDefaultAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.CreateDocumentFragment
  id: CreateDocumentFragment
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: CreateDocumentFragment()
  nameWithType: XmlDocument.CreateDocumentFragment()
  fullName: System.Xml.XmlDocument.CreateDocumentFragment()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Oppretter en <xref href=&quot;System.Xml.XmlDocumentFragment&quot;> </xref>."
  remarks: "DocumentFragment noder kan settes inn i et dokument. Du kan imidlertid inn underordnede av noden som DocumentFragment i et dokument."
  example:
  - "The following example adds new nodes to an XML document.  \n  \n [!code-cpp[Classic WebData XmlDocument.CreateDocumentFragment Example#1](~/add/codesnippet/cpp/m-system.xml.xmldocument_14_1.cpp)]\n [!code-vb[Classic WebData XmlDocument.CreateDocumentFragment Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmldocument_14_1.vb)]\n [!code-cs[Classic WebData XmlDocument.CreateDocumentFragment Example#1](~/add/codesnippet/csharp/m-system.xml.xmldocument_14_1.cs)]"
  syntax:
    content: public virtual System.Xml.XmlDocumentFragment CreateDocumentFragment ();
    parameters: []
    return:
      type: System.Xml.XmlDocumentFragment
      description: "The new <xref uid=&quot;langword_csharp_XmlDocumentFragment&quot; name=&quot;XmlDocumentFragment&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.XmlDocument.CreateDocumentFragment*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.CreateDocumentType(System.String,System.String,System.String,System.String)
  id: CreateDocumentType(System.String,System.String,System.String,System.String)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: CreateDocumentType(String,String,String,String)
  nameWithType: XmlDocument.CreateDocumentType(String,String,String,String)
  fullName: System.Xml.XmlDocument.CreateDocumentType(String,String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Returnerer en ny <xref href=&quot;System.Xml.XmlDocumentType&quot;> </xref> objektet."
  remarks: "Den returnerte noden har analysert <xref:System.Xml.XmlDocumentType.Entities%2A>og <xref:System.Xml.XmlDocumentType.Notations%2A>samlinger.</xref:System.Xml.XmlDocumentType.Notations%2A> </xref:System.Xml.XmlDocumentType.Entities%2A>       Selv om denne metoden oppretter det nye objektet i konteksten til dokumentet, legger den ikke automatisk til det nye objektet dokumenttreet. Hvis du vil legge til det nye objektet, må du eksplisitt kalle én av metodene noden insert.       DocumentType noder er bare tillatt i dokumentet noder i henhold til det W3C omfattende Markup Language (XML) 1.0-alternativet (www.w3.org/TR/1998/REC-xml-19980210). Hver <xref:System.Xml.XmlDocument>kan ha bare én DocumentType node.</xref:System.Xml.XmlDocument> Noden DocumentType må også settes inn før rotelementet for den `XmlDocument` (Hvis dokumentet har allerede et rotelement, du kan ikke legge til en DocumentType node).       Hvis de sendte parameterne ikke slå sammen for å opprette en gyldig `XmlDocumentType`, et unntak."
  example:
  - "The following example creates a DocumentType node and adds it to an XML document.  \n  \n [!code-cpp[Classic WebData XmlDocument.CreateDocumentType Example#1](~/add/codesnippet/cpp/8d2758e1-ca32-4a6b-b7e7-_1.cpp)]\n [!code-cs[Classic WebData XmlDocument.CreateDocumentType Example#1](~/add/codesnippet/csharp/8d2758e1-ca32-4a6b-b7e7-_1.cs)]\n [!code-vb[Classic WebData XmlDocument.CreateDocumentType Example#1](~/add/codesnippet/visualbasic/8d2758e1-ca32-4a6b-b7e7-_1.vb)]"
  syntax:
    content: public virtual System.Xml.XmlDocumentType CreateDocumentType (string name, string publicId, string systemId, string internalSubset);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på dokumenttypen."
    - id: publicId
      type: System.String
      description: "Felles identifikator dokumenttypen eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Du kan angi en offentlig URI samt en systemidentifikator for å identifisere plasseringen av eksterne DTD delsettet."
    - id: systemId
      type: System.String
      description: "Systemidentifikatoren for typen eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Angir URL-adressen til filplasseringen for eksterne DTD delsettet."
    - id: internalSubset
      type: System.String
      description: "DTD internt delsett av typen eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Xml.XmlDocumentType
      description: "The new <xref uid=&quot;langword_csharp_XmlDocumentType&quot; name=&quot;XmlDocumentType&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.XmlDocument.CreateDocumentType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.CreateElement(System.String)
  id: CreateElement(System.String)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: CreateElement(String)
  nameWithType: XmlDocument.CreateElement(String)
  fullName: System.Xml.XmlDocument.CreateElement(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Oppretter et element med det angitte navnet."
  remarks: "Vær oppmerksom på at forekomsten returnerte implementerer den `XmlElement` grensesnitt standard attributter vil bli opprettet direkte på returnerte-objektet.       Selv om denne metoden oppretter det nye objektet i konteksten til dokumentet, legger den ikke automatisk til det nye objektet dokumenttreet. Hvis du vil legge til det nye objektet, må du eksplisitt kalle én av metodene noden insert.       I henhold til W3C omfattende Markup Language (XML) 1.0 anbefaler (www.w3.org/TR/1998/REC-xml-19980210), elementnoder er tillatt i dokumentet og Element-noder, og i EntityReference noder når noden EntityReference ikke er en underordnet av en attributtnode."
  example:
  - "The following example creates a new element and adds it to the document.  \n  \n [!code-cpp[Classic WebData XmlDocument.CreateElement Example#1](~/add/codesnippet/cpp/m-system.xml.xmldocument_17_1.cpp)]\n [!code-cs[Classic WebData XmlDocument.CreateElement Example#1](~/add/codesnippet/csharp/m-system.xml.xmldocument_17_1.cs)]\n [!code-vb[Classic WebData XmlDocument.CreateElement Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmldocument_17_1.vb)]"
  syntax:
    content: public System.Xml.XmlElement CreateElement (string name);
    parameters:
    - id: name
      type: System.String
      description: "Det kvalifiserte navnet på elementet. Hvis navnet inneholder et kolon og deretter den <> </> *> egenskapen gjenspeiler delen av navnet foregående kolon og <> </> *> egenskapen gjenspeiler del av navnet etter kolon. Det kvalifiserte navnet kan ikke inneholde et prefiks of&quot;xmlns&quot;."
    return:
      type: System.Xml.XmlElement
      description: "The new <xref uid=&quot;langword_csharp_XmlElement&quot; name=&quot;XmlElement&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.XmlDocument.CreateElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.CreateElement(System.String,System.String)
  id: CreateElement(System.String,System.String)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: CreateElement(String,String)
  nameWithType: XmlDocument.CreateElement(String,String)
  fullName: System.Xml.XmlDocument.CreateElement(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Oppretter en <xref href=&quot;System.Xml.XmlElement&quot;> </xref> med kvalifisert navn og <xref:System.Xml.XmlNode.NamespaceURI*>.</xref:System.Xml.XmlNode.NamespaceURI*>"
  remarks: "Følgende C# kode ```   XmlElement elem;   elem=doc.CreateElement(&quot;xy:item&quot;, &quot;urn:abc&quot;);   ``` resulterer i et element som tilsvarer følgende XML-teksten.      ```   <xy:item          xmlns:xy=&quot;urn:abc&quot;/>   ```Selv om denne metoden oppretter det nye objektet i konteksten til dokumentet, legger den ikke automatisk til det nye objektet dokumenttreet. Hvis du vil legge til det nye objektet, må du eksplisitt kalle én av metodene noden insert.       I henhold til W3C omfattende Markup Language (XML) 1.0 anbefaler (www.w3.org/TR/1998/REC-xml-19980210), elementnoder er tillatt i dokumentet og Element-noder, og i EntityReference noder når noden EntityReference ikke er en underordnet av en attributtnode."
  syntax:
    content: public System.Xml.XmlElement CreateElement (string qualifiedName, string namespaceURI);
    parameters:
    - id: qualifiedName
      type: System.String
      description: "Det kvalifiserte navnet på elementet. Hvis navnet inneholder et kolon og deretter den <> </> *> egenskapen gjenspeiler delen av navnet foregående kolon og <> </> *> egenskapen gjenspeiler del av navnet etter kolon. Det kvalifiserte navnet kan ikke inneholde et prefiks of&quot;xmlns&quot;."
    - id: namespaceURI
      type: System.String
      description: "Navneområde-URI for elementet."
    return:
      type: System.Xml.XmlElement
      description: "The new <xref uid=&quot;langword_csharp_XmlElement&quot; name=&quot;XmlElement&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.XmlDocument.CreateElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.CreateElement(System.String,System.String,System.String)
  id: CreateElement(System.String,System.String,System.String)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: CreateElement(String,String,String)
  nameWithType: XmlDocument.CreateElement(String,String,String)
  fullName: System.Xml.XmlDocument.CreateElement(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Oppretter et element med den angitte <> </> *>, <> </> *>, og <xref:System.Xml.XmlNode.NamespaceURI*>.</xref:System.Xml.XmlNode.NamespaceURI*>"
  remarks: "Følgende C# kode ```   XmlElement elem;   elem=doc.CreateElement(&quot;xy&quot;, &quot;item&quot;, &quot;urn:abc&quot;);   ``` oppretter et element tilsvarer følgende XML-teksten: ```   <xy:item xmlns:xy=&quot;urn:abc&quot;/>   ``` selv om denne metoden oppretter det nye objektet i konteksten til dokumentet, den ikke automatisk legges det nye objektet i dokumenttreet. Hvis du vil legge til det nye objektet, må du eksplisitt kalle én av metodene noden insert.       I henhold til W3C omfattende Markup Language (XML) 1.0 anbefaler (www.w3.org/TR/1998/REC-xml-19980210), elementnoder er tillatt i dokumentet og Element-noder, og i EntityReference noder når EntityReference er utenfor en attributtnode.       Denne metoden er en Microsoft-filtype til dokumentet objektet Model (DOM)."
  example:
  - "The following example adds a new element to the existing XML document.  \n  \n [!code-cs[Classic WebData XmlDocument.CreateElement2 Example#1](~/add/codesnippet/csharp/9cc675fc-f986-4de5-bce9-_1.cs)]\n [!code-vb[Classic WebData XmlDocument.CreateElement2 Example#1](~/add/codesnippet/visualbasic/9cc675fc-f986-4de5-bce9-_1.vb)]\n [!code-cpp[Classic WebData XmlDocument.CreateElement2 Example#1](~/add/codesnippet/cpp/9cc675fc-f986-4de5-bce9-_1.cpp)]"
  syntax:
    content: public virtual System.Xml.XmlElement CreateElement (string prefix, string localName, string namespaceURI);
    parameters:
    - id: prefix
      type: System.String
      description: "Prefiks for nytt element (Hvis noen). String.Empty og <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> er like."
    - id: localName
      type: System.String
      description: "Lokale navnet på det nye objektet."
    - id: namespaceURI
      type: System.String
      description: "Navneområde-URI for nytt element (Hvis noen). String.Empty og <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> er like."
    return:
      type: System.Xml.XmlElement
      description: "The new <xref href=&quot;System.Xml.XmlElement&quot;></xref>."
  overload: System.Xml.XmlDocument.CreateElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.CreateEntityReference(System.String)
  id: CreateEntityReference(System.String)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: CreateEntityReference(String)
  nameWithType: XmlDocument.CreateEntityReference(String)
  fullName: System.Xml.XmlDocument.CreateEntityReference(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Oppretter en <xref href=&quot;System.Xml.XmlEntityReference&quot;> </xref> med det angitte navnet."
  remarks: "Hvis den refererte enheten er kjent, underordnede listen over den `XmlEntityReference` node gjøres den samme som de tilsvarende <xref:System.Xml.XmlEntity>node.</xref:System.Xml.XmlEntity>       Navneområder som brukes i den nye teksten for enhetsreferansen er bundet da overordnede noden enheten referanse først er angitt (for eksempel når noden enheten referanse settes inn i dokumentet). For eksempel angitt følgende enhet: ```   <!ENTITY a &quot;<b>test</b>&quot;>   ``` Hvis du kaller `CreateEntityReference(&quot;a&quot;)` du komme én enkelt node av typen EntityReference uten underordnede objekter. Hvis du har lagt til denne noden som en underordnet av noden følgende ```   <item xmlns=&quot;urn:1&quot;/>   ``` deretter da kaller <xref:System.Xml.XmlNode.AppendChild%2A>overordnede noden nyopprettede enheten referansen er angitt og underordnede utledes i denne konteksten navneområde.</xref:System.Xml.XmlNode.AppendChild%2A> Underordnet elementnode `b` får NamespaceURI lik `urn:1`. Underordnede noder av enhetsreferansen være den samme selv om du flytter enhetsreferansen til plassering i dokumentet som har en annen standard navneområde kontekst. Dette skjer ikke for eksisterende enhet referanse noder når du fjerner og sette dem inn eller enhetsreferanser som du klone med <xref:System.Xml.XmlDocument.CloneNode%2A>.</xref:System.Xml.XmlDocument.CloneNode%2A> Det skjer bare for nyopprettede enheten refererer til.       Hvis må tilhørende enhet ikke er definert i DocumentType når noden enheten referanse legges, fordi enhetsreferansen ikke er definert, blir bare underordnede noden en tom text-node.       Den innebygde enheter amp lt, gt, er og quot kan også, og de har en underordnet text-node med den riktige utvidede tegnverdien.       Selv om denne metoden oppretter det nye objektet i konteksten til dokumentet, legger den ikke automatisk til det nye objektet dokumenttreet. Hvis du vil legge til det nye objektet, må du eksplisitt kalle én av metodene noden insert.       EntityReference noder er bare tillatt i Element, attributt og EntityReference noder i henhold til det W3C omfattende Markup Language (XML) 1.0-alternativet (www.w3.org/TR/1998/REC-xml-19980210)."
  example:
  - "The following example creates two entity reference nodes and inserts them into an XML document.  \n  \n [!code-cpp[Classic WebData XmlDocument.CreateEntityReference Example#1](~/add/codesnippet/cpp/m-system.xml.xmldocument_7_1.cpp)]\n [!code-cs[Classic WebData XmlDocument.CreateEntityReference Example#1](~/add/codesnippet/csharp/m-system.xml.xmldocument_7_1.cs)]\n [!code-vb[Classic WebData XmlDocument.CreateEntityReference Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmldocument_7_1.vb)]"
  syntax:
    content: public virtual System.Xml.XmlEntityReference CreateEntityReference (string name);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på enhetsreferansen."
    return:
      type: System.Xml.XmlEntityReference
      description: "The new <xref uid=&quot;langword_csharp_XmlEntityReference&quot; name=&quot;XmlEntityReference&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.XmlDocument.CreateEntityReference*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Navnet er ugyldig (for eksempel navn som begynner med &quot;#&quot; er ugyldig.)"
  platform:
  - net462
- uid: System.Xml.XmlDocument.CreateNavigator
  id: CreateNavigator
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: CreateNavigator()
  nameWithType: XmlDocument.CreateNavigator()
  fullName: System.Xml.XmlDocument.CreateNavigator()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Oppretter en ny <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> objekt for å navigere i dette dokumentet."
  remarks: "Denne metoden er en Microsoft-filtype til dokumentet objektet Model (DOM)."
  example:
  - See <xref:System.Xml.XmlNode.CreateNavigator%2A?displayProperty=fullName> for an example using this method.
  syntax:
    content: public override System.Xml.XPath.XPathNavigator CreateNavigator ();
    parameters: []
    return:
      type: System.Xml.XPath.XPathNavigator
      description: "En <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> objektet."
  overload: System.Xml.XmlDocument.CreateNavigator*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.CreateNavigator(System.Xml.XmlNode)
  id: CreateNavigator(System.Xml.XmlNode)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: CreateNavigator(XmlNode)
  nameWithType: XmlDocument.CreateNavigator(XmlNode)
  fullName: System.Xml.XmlDocument.CreateNavigator(XmlNode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Oppretter en <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> objekt for å navigere i dette dokumentet plasseres på den <xref href=&quot;System.Xml.XmlNode&quot;> </xref> angitt."
  remarks: "Denne metoden er en Microsoft-filtype til dokumentet objektet Model (DOM)."
  example:
  - See <xref:System.Xml.XmlNode.CreateNavigator%2A?displayProperty=fullName> for an example using this method.
  syntax:
    content: protected virtual System.Xml.XPath.XPathNavigator CreateNavigator (System.Xml.XmlNode node);
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: "Den <xref href=&quot;System.Xml.XmlNode&quot;> </xref> du vil navigatoren først plasseres i."
    return:
      type: System.Xml.XPath.XPathNavigator
      description: "En <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> objektet."
  overload: System.Xml.XmlDocument.CreateNavigator*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.CreateNode(System.String,System.String,System.String)
  id: CreateNode(System.String,System.String,System.String)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: CreateNode(String,String,String)
  nameWithType: XmlDocument.CreateNode(String,String,String)
  fullName: System.Xml.XmlDocument.CreateNode(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Oppretter en <xref href=&quot;System.Xml.XmlNode&quot;> </xref> med den angitte nodetypen <> </> *>, og <> </> *>."
  remarks: "The `nodeTypeString` parameter is case sensitive and must be one of the values in the following table.  \n  \n|nodeTypeString|XmlNodeType|  \n|--------------------|-----------------|  \n|attribute|Attribute|  \n|cdatasection|CDATA|  \n|comment|Comment|  \n|document|Document|  \n|documentfragment|DocumentFragment|  \n|documenttype|DocumentType|  \n|element|Element|  \n|entityreference|EntityReference|  \n|processinginstruction|ProcessingInstruction|  \n|significantwhitespace|SignificantWhitespace|  \n|text|Text|  \n|whitespace|Whitespace|  \n  \n Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree. To add the new object, you must explicitly call one of the node insert methods.  \n  \n The following table shows you what NodeType[row] is allowed inside another NodeType[column] according to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210).  \n  \n||Document|DocumentType|XmlDeclaration|Element|Attribute|Text|CDATA|Markup|EntityReference|  \n|------|--------------|------------------|--------------------|-------------|---------------|----------|-----------|------------|---------------------|  \n|`Document`|no|no|no|no|no|no|no|no|no|  \n|`DocumentType`|yes|no|no|no|no|no|no|no|no|  \n|`XmlDeclaration`|yes*|no|no|no|no|no|no|no|no|  \n|`Element`|yes|no|no|yes|no|no|no|no|yes***|  \n|`Attribute`|no|no|no|yes****|no|no|no|no|no|  \n|`Text`|no|no|no|yes|yes|no|no|no|yes|  \n|`CDATA`|no|no|no|yes|no|no|no|no|yes***|  \n|`Markup**`|yes|no|no|yes|no|no|no|no|no|  \n|`EntityReference`|no|no|no|yes|yes|no|no|no|yes|  \n  \n \\* The XmlDeclaration node must be the first child of the Document node.  \n  \n ** Markup includes ProcessingInstruction and Comment nodes.  \n  \n *** Element and CDATA nodes are only allowed in EntityReference nodes when the EntityReference node is not a child of an Attribute node.  \n  \n **** Attributes are not children of an Element node. Attributes are contained inside an attribute collection that belongs to an Element node.  \n  \n This method is a Microsoft extension to the Document Object Model (DOM)."
  example:
  - "The following example creates a new element and inserts it into the document.  \n  \n [!code-cpp[Classic WebData XmlDocument.CreateNode1 Example#1](~/add/codesnippet/cpp/m-system.xml.xmldocument_15_1.cpp)]\n [!code-vb[Classic WebData XmlDocument.CreateNode1 Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmldocument_15_1.vb)]\n [!code-cs[Classic WebData XmlDocument.CreateNode1 Example#1](~/add/codesnippet/csharp/m-system.xml.xmldocument_15_1.cs)]"
  syntax:
    content: public virtual System.Xml.XmlNode CreateNode (string nodeTypeString, string name, string namespaceURI);
    parameters:
    - id: nodeTypeString
      type: System.String
      description: "Streng-versjonen av den <xref:System.Xml.XmlNodeType>for noden for nye.</xref:System.Xml.XmlNodeType> Denne parameteren må være en av verdiene som er oppført i tabellen nedenfor."
    - id: name
      type: System.String
      description: "Det kvalifiserte navnet på noden for nye. Hvis navnet inneholder et kolon, analyseres til <> </> *> og <> </> *> komponenter."
    - id: namespaceURI
      type: System.String
      description: "Navneområde-URI for noden for nye."
    return:
      type: System.Xml.XmlNode
      description: "The new <xref uid=&quot;langword_csharp_XmlNode&quot; name=&quot;XmlNode&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.XmlDocument.CreateNode*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Navnet er ikke angitt og <xref uid=&quot;langword_csharp_XmlNodeType&quot; name=&quot;XmlNodeType&quot; href=&quot;&quot;> </xref> krever et navn; eller <code> nodeTypeString </code> er ikke én av strenger som vises nedenfor."
  platform:
  - net462
- uid: System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String)
  id: CreateNode(System.Xml.XmlNodeType,System.String,System.String)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: CreateNode(XmlNodeType,String,String)
  nameWithType: XmlDocument.CreateNode(XmlNodeType,String,String)
  fullName: System.Xml.XmlDocument.CreateNode(XmlNodeType,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Oppretter en <xref href=&quot;System.Xml.XmlNode&quot;> </xref> med angitt <xref:System.Xml.XmlNodeType>, <> </> *>, og <> </> *>.</xref:System.Xml.XmlNodeType>"
  remarks: "Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree. To add the new object, you must explicitly call one of the node insert methods.  \n  \n The following table shows you what NodeType[row] is allowed inside another NodeType[column] according to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210).  \n  \n||Document|DocumentType|XmlDeclaration|Element|Attribute|Text|CDATA|Markup|EntityReference|  \n|------|--------------|------------------|--------------------|-------------|---------------|----------|-----------|------------|---------------------|  \n|`Document`|no|no|no|no|no|no|no|no|no|  \n|`DocumentType`|yes|no|no|no|no|no|no|no|no|  \n|`XmlDeclaration`|yes*|no|no|no|no|no|no|no|no|  \n|`Element`|yes|no|no|yes|no|no|no|no|yes***|  \n|`Attribute`|no|no|no|yes****|no|no|no|no|no|  \n|`Text`|no|no|no|yes|yes|no|no|no|yes|  \n|`CDATA`|no|no|no|yes|no|no|no|no|yes***|  \n|`Markup**`|yes|no|no|yes|no|no|no|no|no|  \n|`EntityReference`|no|no|no|yes|yes|no|no|no|yes|  \n  \n \\* The XmlDeclaration node must be the first child of the Document node.  \n  \n ** Markup includes ProcessingInstruction and Comment nodes.  \n  \n *** Element and CDATA nodes are only allowed in EntityReference nodes when the EntityReference node is not a child of an Attribute node.  \n  \n **** Attributes are not children of an Element node. Attributes are contained inside an attribute collection that belongs to an Element node.  \n  \n This method is a Microsoft extension to the Document Object Model (DOM)."
  example:
  - "The following example creates a new element and inserts it into an XML document.  \n  \n [!code-cs[Classic WebData XmlDocument.CreateNode Example#1](~/add/codesnippet/csharp/5e223793-7104-464b-b797-_1.cs)]\n [!code-cpp[Classic WebData XmlDocument.CreateNode Example#1](~/add/codesnippet/cpp/5e223793-7104-464b-b797-_1.cpp)]\n [!code-vb[Classic WebData XmlDocument.CreateNode Example#1](~/add/codesnippet/visualbasic/5e223793-7104-464b-b797-_1.vb)]"
  syntax:
    content: public virtual System.Xml.XmlNode CreateNode (System.Xml.XmlNodeType type, string name, string namespaceURI);
    parameters:
    - id: type
      type: System.Xml.XmlNodeType
      description: "Den <xref uid=&quot;langword_csharp_XmlNodeType&quot; name=&quot;XmlNodeType&quot; href=&quot;&quot;> </xref> for noden for nye."
    - id: name
      type: System.String
      description: "Det kvalifiserte navnet på noden for nye. Hvis navnet inneholder et kolon og den er analyseres til <> </> *> og <> </> *> komponenter."
    - id: namespaceURI
      type: System.String
      description: "Navneområde-URI for noden for nye."
    return:
      type: System.Xml.XmlNode
      description: "The new <xref uid=&quot;langword_csharp_XmlNode&quot; name=&quot;XmlNode&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.XmlDocument.CreateNode*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Navnet er ikke angitt og <xref uid=&quot;langword_csharp_XmlNodeType&quot; name=&quot;XmlNodeType&quot; href=&quot;&quot;> </xref> må ha et navn."
  platform:
  - net462
- uid: System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String,System.String)
  id: CreateNode(System.Xml.XmlNodeType,System.String,System.String,System.String)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: CreateNode(XmlNodeType,String,String,String)
  nameWithType: XmlDocument.CreateNode(XmlNodeType,String,String,String)
  fullName: System.Xml.XmlDocument.CreateNode(XmlNodeType,String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Creates a <xref href=&quot;System.Xml.XmlNode&quot;></xref> with the specified <xref:System.Xml.XmlNodeType>, <>*>, <>*>, and <xref:System.Xml.XmlNode.NamespaceURI*>.</xref:System.Xml.XmlNode.NamespaceURI*></xref:System.Xml.XmlNodeType>"
  remarks: "Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree. To add the new object, you must explicitly call one of the node insert methods.  \n  \n The following table shows you what NodeType[row] is allowed inside another NodeType[column] according to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210).  \n  \n||Document|DocumentType|XmlDeclaration|Element|Attribute|Text|CDATA|Markup|EntityReference|  \n|------|--------------|------------------|--------------------|-------------|---------------|----------|-----------|------------|---------------------|  \n|`Document`|no|no|no|no|no|no|no|no|no|  \n|`DocumentType`|yes|no|no|no|no|no|no|no|no|  \n|`XmlDeclaration`|yes*|no|no|no|no|no|no|no|no|  \n|`Element`|yes|no|no|yes|no|no|no|no|yes***|  \n|`Attribute`|no|no|no|yes****|no|no|no|no|no|  \n|`Text`|no|no|no|yes|yes|no|no|no|yes|  \n|`CDATA`|no|no|no|yes|no|no|no|no|yes***|  \n|`Markup**`|yes|no|no|yes|no|no|no|no|no|  \n|`EntityReference`|no|no|no|yes|yes|no|no|no|yes|  \n  \n \\* The XmlDeclaration node must be the first child of the Document node.  \n  \n ** Markup includes ProcessingInstruction and Comment nodes.  \n  \n *** Element and CDATA nodes are only allowed in EntityReference nodes when the EntityReference node is not a child of an Attribute node.  \n  \n **** Attributes are not children of an Element node. Attributes are contained inside an attribute collection that belongs to the Element node.  \n  \n This method is a Microsoft extension to the Document Object Model (DOM)."
  example:
  - "The following example adds a new element to the document.  \n  \n [!code-vb[Classic WebData XmlDocument.CreateNode2 Example#1](~/add/codesnippet/visualbasic/9b485b37-d267-4da7-a8ac-_1.vb)]\n [!code-cpp[Classic WebData XmlDocument.CreateNode2 Example#1](~/add/codesnippet/cpp/9b485b37-d267-4da7-a8ac-_1.cpp)]\n [!code-cs[Classic WebData XmlDocument.CreateNode2 Example#1](~/add/codesnippet/csharp/9b485b37-d267-4da7-a8ac-_1.cs)]"
  syntax:
    content: public virtual System.Xml.XmlNode CreateNode (System.Xml.XmlNodeType type, string prefix, string name, string namespaceURI);
    parameters:
    - id: type
      type: System.Xml.XmlNodeType
      description: "Den <xref uid=&quot;langword_csharp_XmlNodeType&quot; name=&quot;XmlNodeType&quot; href=&quot;&quot;> </xref> for noden for nye."
    - id: prefix
      type: System.String
      description: "Prefiks for noden for nye."
    - id: name
      type: System.String
      description: "Lokale navnet på noden for nye."
    - id: namespaceURI
      type: System.String
      description: "Navneområde-URI for noden for nye."
    return:
      type: System.Xml.XmlNode
      description: "The new <xref uid=&quot;langword_csharp_XmlNode&quot; name=&quot;XmlNode&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.XmlDocument.CreateNode*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Navnet er ikke angitt og <xref uid=&quot;langword_csharp_XmlNodeType&quot; name=&quot;XmlNodeType&quot; href=&quot;&quot;> </xref> må ha et navn."
  platform:
  - net462
- uid: System.Xml.XmlDocument.CreateProcessingInstruction(System.String,System.String)
  id: CreateProcessingInstruction(System.String,System.String)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: CreateProcessingInstruction(String,String)
  nameWithType: XmlDocument.CreateProcessingInstruction(String,String)
  fullName: System.Xml.XmlDocument.CreateProcessingInstruction(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Oppretter en <xref href=&quot;System.Xml.XmlProcessingInstruction&quot;> </xref> med det angitte navnet og data."
  remarks: "Selv om denne metoden oppretter det nye objektet i konteksten til dokumentet, legger den ikke automatisk til det nye objektet dokumenttreet. Hvis du vil legge til det nye objektet, må du eksplisitt kalle én av metodene noden insert.       I henhold til W3C omfattende Markup Language (XML) 1.0 anbefaler (www.w3.org/TR/1998/REC-xml-19980210), ProcessingInstruction noder er bare tillatt i dokumentet, elementet og EntityReference noder når noden EntityReference ikke er en underordnet av en attributtnode."
  example:
  - "The following example creates a ProcessingInstruction node and adds it to the document.  \n  \n [!code-cpp[Classic WebData XmlDocument.CreateProcessingInstruction Example#1](~/add/codesnippet/cpp/b628e59c-914d-4083-89f5-_1.cpp)]\n [!code-vb[Classic WebData XmlDocument.CreateProcessingInstruction Example#1](~/add/codesnippet/visualbasic/b628e59c-914d-4083-89f5-_1.vb)]\n [!code-cs[Classic WebData XmlDocument.CreateProcessingInstruction Example#1](~/add/codesnippet/csharp/b628e59c-914d-4083-89f5-_1.cs)]"
  syntax:
    content: public virtual System.Xml.XmlProcessingInstruction CreateProcessingInstruction (string target, string data);
    parameters:
    - id: target
      type: System.String
      description: "Navnet på behandlingsinstruksjonen."
    - id: data
      type: System.String
      description: "Dataene for behandlingsinstruksjonen."
    return:
      type: System.Xml.XmlProcessingInstruction
      description: "The new <xref uid=&quot;langword_csharp_XmlProcessingInstruction&quot; name=&quot;XmlProcessingInstruction&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.XmlDocument.CreateProcessingInstruction*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.CreateSignificantWhitespace(System.String)
  id: CreateSignificantWhitespace(System.String)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: CreateSignificantWhitespace(String)
  nameWithType: XmlDocument.CreateSignificantWhitespace(String)
  fullName: System.Xml.XmlDocument.CreateSignificantWhitespace(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Oppretter en <xref href=&quot;System.Xml.XmlSignificantWhitespace&quot;> </xref> noden."
  remarks: "Denne metoden er en Microsoft-filtype til dokumentet objektet Model (DOM). Det brukes når du vil formatere manuelt dokumentet.       Selv om denne metoden oppretter det nye objektet i konteksten til dokumentet, legger den ikke automatisk til det nye objektet dokumenttreet. Hvis du vil legge til det nye objektet, må du eksplisitt kalle én av metodene noden insert."
  example:
  - "The following example adds significant white space to the document.  \n  \n [!code-cpp[Classic WebData XmlDocument.CreateSignificantWhitespace Example#1](~/add/codesnippet/cpp/m-system.xml.xmldocument_24_1.cpp)]\n [!code-cs[Classic WebData XmlDocument.CreateSignificantWhitespace Example#1](~/add/codesnippet/csharp/m-system.xml.xmldocument_24_1.cs)]\n [!code-vb[Classic WebData XmlDocument.CreateSignificantWhitespace Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmldocument_24_1.vb)]"
  syntax:
    content: public virtual System.Xml.XmlSignificantWhitespace CreateSignificantWhitespace (string text);
    parameters:
    - id: text
      type: System.String
      description: "Strengen må inneholde følgende tegn &amp;#20; &amp;#10; &amp;#13; and &amp;#9;"
    return:
      type: System.Xml.XmlSignificantWhitespace
      description: "A new <xref uid=&quot;langword_csharp_XmlSignificantWhitespace&quot; name=&quot;XmlSignificantWhitespace&quot; href=&quot;&quot;></xref> node."
  overload: System.Xml.XmlDocument.CreateSignificantWhitespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.CreateTextNode(System.String)
  id: CreateTextNode(System.String)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: CreateTextNode(String)
  nameWithType: XmlDocument.CreateTextNode(String)
  fullName: System.Xml.XmlDocument.CreateTextNode(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Oppretter en <xref href=&quot;System.Xml.XmlText&quot;> </xref> med den angitte teksten."
  remarks: "Selv om denne metoden oppretter det nye objektet i konteksten til dokumentet, legger den ikke automatisk til det nye objektet dokumenttreet. Hvis du vil legge til det nye objektet, må du eksplisitt kalle én av metodene noden insert.       Tekstnoder er bare tillatt i Element, attributt og EntityReference noder i henhold til det W3C omfattende Markup Language (XML) 1.0-alternativet (www.w3.org/TR/1998/REC-xml-19980210)."
  example:
  - "The following example creates a new element and adds it to the document.  \n  \n [!code-cpp[Classic WebData XmlDocument.CreateElement Example#1](~/add/codesnippet/cpp/m-system.xml.xmldocument_3_1.cpp)]\n [!code-cs[Classic WebData XmlDocument.CreateElement Example#1](~/add/codesnippet/csharp/m-system.xml.xmldocument_3_1.cs)]\n [!code-vb[Classic WebData XmlDocument.CreateElement Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmldocument_3_1.vb)]"
  syntax:
    content: public virtual System.Xml.XmlText CreateTextNode (string text);
    parameters:
    - id: text
      type: System.String
      description: "Teksten for Text-node."
    return:
      type: System.Xml.XmlText
      description: "Den nye <xref uid=&quot;langword_csharp_XmlText&quot; name=&quot;XmlText&quot; href=&quot;&quot;> </xref> noden."
  overload: System.Xml.XmlDocument.CreateTextNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.CreateWhitespace(System.String)
  id: CreateWhitespace(System.String)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: CreateWhitespace(String)
  nameWithType: XmlDocument.CreateWhitespace(String)
  fullName: System.Xml.XmlDocument.CreateWhitespace(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Oppretter en <xref href=&quot;System.Xml.XmlWhitespace&quot;> </xref> noden."
  remarks: "Denne metoden er en Microsoft-filtype til dokumentet objektet Model (DOM). Det brukes når du vil formatere manuelt dokumentet.       Selv om denne metoden oppretter det nye objektet i konteksten til dokumentet, legger den ikke automatisk til det nye objektet dokumenttreet. Hvis du vil legge til det nye objektet, må du eksplisitt kalle én av metodene noden insert."
  example:
  - "The following example adds white space to the document.  \n  \n [!code-cpp[Classic WebData XmlDocument.CreateWhitespace Example#1](~/add/codesnippet/cpp/m-system.xml.xmldocument_4_1.cpp)]\n [!code-vb[Classic WebData XmlDocument.CreateWhitespace Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmldocument_4_1.vb)]\n [!code-cs[Classic WebData XmlDocument.CreateWhitespace Example#1](~/add/codesnippet/csharp/m-system.xml.xmldocument_4_1.cs)]"
  syntax:
    content: public virtual System.Xml.XmlWhitespace CreateWhitespace (string text);
    parameters:
    - id: text
      type: System.String
      description: "Strengen må inneholde følgende tegn &amp;#20; &amp;#10; &amp;#13; and &amp;#9;"
    return:
      type: System.Xml.XmlWhitespace
      description: "A new <xref uid=&quot;langword_csharp_XmlWhitespace&quot; name=&quot;XmlWhitespace&quot; href=&quot;&quot;></xref> node."
  overload: System.Xml.XmlDocument.CreateWhitespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)
  id: CreateXmlDeclaration(System.String,System.String,System.String)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: CreateXmlDeclaration(String,String,String)
  nameWithType: XmlDocument.CreateXmlDeclaration(String,String,String)
  fullName: System.Xml.XmlDocument.CreateXmlDeclaration(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Oppretter en <xref href=&quot;System.Xml.XmlDeclaration&quot;> </xref> node med de angitte verdiene."
  remarks: "Attributtene vises som spesielle egenskaper på den `XmlDeclaration` noden, og ikke som <xref:System.Xml.XmlAttribute>noder.</xref:System.Xml.XmlAttribute>       Selv om denne metoden oppretter det nye objektet i konteksten til dokumentet, legger den ikke automatisk til det nye objektet dokumenttreet. Hvis du vil legge til det nye objektet, må du eksplisitt kalle én av metodene noden insert.       I henhold til W3C omfattende Markup Language (XML) 1.0 anbefaler (www.w3.org/TR/1998/REC-xml-19980210) i `XmlDeclaration` node må være den første noden i dokumentet.       Denne metoden er en Microsoft-filtype til dokumentet objektet Model (DOM)."
  example:
  - "The following example creates an XML declaration and adds it to the document.  \n  \n [!code-cs[Classic WebData XmlDocument.CreateXmlDeclaration Example#1](~/add/codesnippet/csharp/89cf6f87-55c5-4c7d-9c11-_1.cs)]\n [!code-cpp[Classic WebData XmlDocument.CreateXmlDeclaration Example#1](~/add/codesnippet/cpp/89cf6f87-55c5-4c7d-9c11-_1.cpp)]\n [!code-vb[Classic WebData XmlDocument.CreateXmlDeclaration Example#1](~/add/codesnippet/visualbasic/89cf6f87-55c5-4c7d-9c11-_1.vb)]"
  syntax:
    content: public virtual System.Xml.XmlDeclaration CreateXmlDeclaration (string version, string encoding, string standalone);
    parameters:
    - id: version
      type: System.String
      description: "Versjonen må være &quot;1.0&quot;."
    - id: encoding
      type: System.String
      description: "Verdien for attributtet koding. Dette er kodingen som brukes når du lagrer den <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> til en fil eller en dataflyt; derfor må den settes til en streng som støttes av den <xref:System.Text.Encoding>klasse, ellers <xref:System.Xml.XmlDocument.Save*>mislykkes.</xref:System.Xml.XmlDocument.Save*> </xref:System.Text.Encoding> Hvis dette er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller String.Empty, den <xref uid=&quot;langword_csharp_Save&quot; name=&quot;Save&quot; href=&quot;&quot;> </xref> metoden skriver ikke attributtet kodingen for XML-deklarasjonen, og derfor standard koding, UTF-8, brukes.       Merk: Hvis den <xref uid=&quot;langword_csharp_XmlDocument&quot; name=&quot;XmlDocument&quot; href=&quot;&quot;> </xref> lagres i enten et <xref:System.IO.TextWriter>eller en <xref:System.Xml.XmlTextWriter>, koding verdien forkastes.</xref:System.Xml.XmlTextWriter> </xref:System.IO.TextWriter> I stedet kodingen for den <xref uid=&quot;langword_csharp_TextWriter&quot; name=&quot;TextWriter&quot; href=&quot;&quot;> </xref> eller <xref uid=&quot;langword_csharp_XmlTextWriter&quot; name=&quot;XmlTextWriter&quot; href=&quot;&quot;> </xref> brukes. Dette sikrer at XML-filen skrives kan leses med tilbake riktig koding."
    - id: standalone
      type: System.String
      description: "Verdien må være &quot;Ja&quot; eller &quot;Nei&quot;. Hvis dette er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller String.Empty, den <xref uid=&quot;langword_csharp_Save&quot; name=&quot;Save&quot; href=&quot;&quot;> </xref> metoden ikke skrive en frittstående attributtet på XML-deklarering."
    return:
      type: System.Xml.XmlDeclaration
      description: "Den nye <xref uid=&quot;langword_csharp_XmlDeclaration&quot; name=&quot;XmlDeclaration&quot; href=&quot;&quot;> </xref> noden."
  overload: System.Xml.XmlDocument.CreateXmlDeclaration*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Verdiene i <code> version </code> eller <code> standalone </code> er noe annet enn det som er angitt ovenfor."
  platform:
  - net462
- uid: System.Xml.XmlDocument.DocumentElement
  id: DocumentElement
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: DocumentElement
  nameWithType: XmlDocument.DocumentElement
  fullName: System.Xml.XmlDocument.DocumentElement
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Henter roten <xref href=&quot;System.Xml.XmlElement&quot;> </xref> for dokumentet."
  remarks: ''
  example:
  - "The following example displays the root element of the XML document.  \n  \n [!code-cs[Classic WebData XmlDocument.DocumentElement Example#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_8_1.cs)]\n [!code-cpp[Classic WebData XmlDocument.DocumentElement Example#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_8_1.cpp)]\n [!code-vb[Classic WebData XmlDocument.DocumentElement Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_8_1.vb)]  \n  \n **Output:**  \n  \n```  \n<book genre=\"novel\" ISBN=\"1-861001-57-5\"><title>Pride And Prejudice</title></book>   \n```"
  syntax:
    content: public System.Xml.XmlElement DocumentElement { get; }
    return:
      type: System.Xml.XmlElement
      description: "Den <xref uid=&quot;langword_csharp_XmlElement&quot; name=&quot;XmlElement&quot; href=&quot;&quot;> </xref> som representerer roten av XML-dokumenttreet. Hvis det finnes ingen rot, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> returneres."
  overload: System.Xml.XmlDocument.DocumentElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.DocumentType
  id: DocumentType
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: DocumentType
  nameWithType: XmlDocument.DocumentType
  fullName: System.Xml.XmlDocument.DocumentType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Henter noden som inneholder DOCTYPE-deklarering."
  remarks: "En `XmlDocument` kan ha bare én underordnet med <xref:System.Xml.XmlNodeType>lik DocumentType.</xref:System.Xml.XmlNodeType>      > [!NOTE] > Denne egenskapen er skrivebeskyttet. Hvis du vil endre noden DocumentType, Slett den eksisterende noden, Opprett en ny én med den <xref:System.Xml.XmlDocument.CreateDocumentType%2A>metoden, og Legg til noden for nye dokumentet.</xref:System.Xml.XmlDocument.CreateDocumentType%2A>"
  example:
  - "The following example gets and displays the DOCTYPE declaration for the document.  \n  \n [!code-cpp[Classic WebData XmlDocument.DocumentType Example#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_4_1.cpp)]\n [!code-cs[Classic WebData XmlDocument.DocumentType Example#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_4_1.cs)]\n [!code-vb[Classic WebData XmlDocument.DocumentType Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_4_1.vb)]"
  syntax:
    content: public virtual System.Xml.XmlDocumentType DocumentType { get; }
    return:
      type: System.Xml.XmlDocumentType
      description: "Den <xref href=&quot;System.Xml.XmlNode&quot;> </xref> som inneholder DocumentType (DOCTYPE-deklarering)."
  overload: System.Xml.XmlDocument.DocumentType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.GetElementById(System.String)
  id: GetElementById(System.String)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: GetElementById(String)
  nameWithType: XmlDocument.GetElementById(String)
  fullName: System.Xml.XmlDocument.GetElementById(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Henter den <xref href=&quot;System.Xml.XmlElement&quot;> </xref> med den angitte IDen."
  remarks: "Hvis det er flere elementer med samsvarende ID, returnerer metoden det første, samsvarende elementet i dokumentet.      > [!NOTE] > For DOM implementering må ha informasjon som definerer hvilke attributter som er av typen-ID. Selv om attributter av typen ID kan defineres i XSD-skjema eller DTDer, støtter denne versjonen av produktet bare de som er definert i DTDer. Attributter med navnet &quot;ID&quot; ikke er av typen ID med mindre derfor definert i DTD. Implementeringer der det er ukjent om attributtene er av typen ID er forventet å returnere `null`."
  example:
  - "The following example uses the `GetElementById` method.  \n  \n [!code-cs[Classic WebData XmlDocument.GetElementById Example#1](~/add/codesnippet/csharp/m-system.xml.xmldocument_20_1.cs)]\n [!code-cpp[Classic WebData XmlDocument.GetElementById Example#1](~/add/codesnippet/cpp/m-system.xml.xmldocument_20_1.cpp)]\n [!code-vb[Classic WebData XmlDocument.GetElementById Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmldocument_20_1.vb)]  \n  \n The example uses the file, `ids.xml`, as input.  \n  \n```xml  \n<!DOCTYPE root [  \n  <!ELEMENT root ANY>   \n  <!ELEMENT Person ANY>   \n  <!ELEMENT Customer EMPTY>  \n  <!ELEMENT Team EMPTY>  \n  <!ATTLIST Person SSN ID #REQUIRED>  \n  <!ATTLIST Customer id IDREF #REQUIRED >  \n  <!ATTLIST Team members IDREFS #REQUIRED>]>  \n<root>  \n  <Person SSN='A111' Name='Fred'/>  \n  <Person SSN='A222' Name='Tom'/>  \n  <Customer id='A222334444'/>  \n  <Team members='A222334444 A333445555'/>  \n</root>  \n```"
  syntax:
    content: public virtual System.Xml.XmlElement GetElementById (string elementId);
    parameters:
    - id: elementId
      type: System.String
      description: "Attributt-IDen samsvarer."
    return:
      type: System.Xml.XmlElement
      description: "Den <xref uid=&quot;langword_csharp_XmlElement&quot; name=&quot;XmlElement&quot; href=&quot;&quot;> </xref> med samsvarende ID eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis ingen samsvarende elementer er funnet."
  overload: System.Xml.XmlDocument.GetElementById*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.GetElementsByTagName(System.String)
  id: GetElementsByTagName(System.String)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: GetElementsByTagName(String)
  nameWithType: XmlDocument.GetElementsByTagName(String)
  fullName: System.Xml.XmlDocument.GetElementsByTagName(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Returnerer en <xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> som inneholder en liste over alle underordnede elementer som samsvarer med den angitte <xref:System.Xml.XmlDocument.Name*>.</xref:System.Xml.XmlDocument.Name*>"
  remarks: "Nodene plasseres i rekkefølgen som vil de oppstod i dokumentet.      > [!NOTE] > Det anbefales at du bruker den <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName>eller <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName>metoden i stedet for metoden GetElementsByTagName.</xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName> </xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName>"
  example:
  - "The following example creates a `XmlDocument` object and uses the `GetElementsByTagName` method and the resulting <xref:System.Xml.XmlNodeList> object to display all the book titles.  \n  \n [!code-cs[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/add/codesnippet/csharp/m-system.xml.xmldocument_10_1.cs)]\n [!code-cpp[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/add/codesnippet/cpp/m-system.xml.xmldocument_10_1.cpp)]\n [!code-vb[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmldocument_10_1.vb)]  \n  \n The example uses the `books.xml` file as input.  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/m-system.xml.xmldocument_10_2.xml)]"
  syntax:
    content: public virtual System.Xml.XmlNodeList GetElementsByTagName (string name);
    parameters:
    - id: name
      type: System.String
      description: "Det kvalifiserte navnet skal samsvare med. Det er sammenlignet mot den <xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref> -egenskapen for samsvarende noden. Verdien som er spesielle &quot;*&quot; samsvarer med alle koder."
    return:
      type: System.Xml.XmlNodeList
      description: "En <xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> som inneholder en liste over alle noder. Hvis ingen noder samsvarer med <code> name </code>, returnerte samlingen være tomt."
  overload: System.Xml.XmlDocument.GetElementsByTagName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.GetElementsByTagName(System.String,System.String)
  id: GetElementsByTagName(System.String,System.String)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: GetElementsByTagName(String,String)
  nameWithType: XmlDocument.GetElementsByTagName(String,String)
  fullName: System.Xml.XmlDocument.GetElementsByTagName(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Returnerer en <xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> som inneholder en liste over alle underordnede elementer som samsvarer med den angitte <> </> *> og <> </> *>."
  remarks: "Nodene plasseres i rekkefølgen som vil de oppdaget i dokumenttreet.      > [!NOTE] > Det anbefales at du bruker den <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName>eller <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName>metoden i stedet for metoden GetElementsByTagName.</xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName> </xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName>"
  syntax:
    content: public virtual System.Xml.XmlNodeList GetElementsByTagName (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: "LocalName samsvarer. Verdien som er spesielle &quot;*&quot; samsvarer med alle koder."
    - id: namespaceURI
      type: System.String
      description: "NamespaceURI samsvarer."
    return:
      type: System.Xml.XmlNodeList
      description: "En <xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> som inneholder en liste over alle noder. Hvis ingen noder samsvarer med den angitte <code> localName </code> og <code> namespaceURI </code>, returnerte samlingen være tomt."
  overload: System.Xml.XmlDocument.GetElementsByTagName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.Implementation
  id: Implementation
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: Implementation
  nameWithType: XmlDocument.Implementation
  fullName: System.Xml.XmlDocument.Implementation
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Henter den <xref href=&quot;System.Xml.XmlImplementation&quot;> </xref> objekt for gjeldende dokument."
  remarks: "`XmlDocument`objekter som er opprettet fra samme `XmlImplementation` deler samme <xref:System.Xml.XmlNameTable>.</xref:System.Xml.XmlNameTable> Dette gjør at brukere til å sammenligne attributtet og elementet som objekter i stedet for strenger.       Selv om den `XmlDocument` objektene deler samme implementeringen, flytte noder fra ett dokument til en annen må du bruke den <xref:System.Xml.XmlDocument.ImportNode%2A>metoden.</xref:System.Xml.XmlDocument.ImportNode%2A>"
  example:
  - "The following example creates a new `XmlDocument` using another document's implementation.  \n  \n [!code-cs[Classic WebData XmlDocument.Implementation Example#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_11_1.cs)]\n [!code-cpp[Classic WebData XmlDocument.Implementation Example#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_11_1.cpp)]\n [!code-vb[Classic WebData XmlDocument.Implementation Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_11_1.vb)]"
  syntax:
    content: public System.Xml.XmlImplementation Implementation { get; }
    return:
      type: System.Xml.XmlImplementation
      description: "Den <xref uid=&quot;langword_csharp_XmlImplementation&quot; name=&quot;XmlImplementation&quot; href=&quot;&quot;> </xref> objekt for gjeldende dokument."
  overload: System.Xml.XmlDocument.Implementation*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)
  id: ImportNode(System.Xml.XmlNode,System.Boolean)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: ImportNode(XmlNode,Boolean)
  nameWithType: XmlDocument.ImportNode(XmlNode,Boolean)
  fullName: System.Xml.XmlDocument.ImportNode(XmlNode,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Importerer en node fra et annet dokument til dokumentet."
  remarks: "Den returnerte har en overordnet. Kilde node er ikke endret eller fjernet fra det opprinnelige dokumentet. `ImportNode` opprettes en kopi av kilde-node.       Import av en node oppretter en `XmlNode` objekt som eies av import dokumentet med <xref:System.Xml.XmlNode.Name%2A>og <xref:System.Xml.XmlNode.NodeType%2A>identisk kilde node.</xref:System.Xml.XmlNode.NodeType%2A> </xref:System.Xml.XmlNode.Name%2A> Det nye objektet har også attributter som er relatert til navneområder (<xref:System.Xml.XmlNode.Prefix%2A>, <xref:System.Xml.XmlNode.LocalName%2A>, og <xref:System.Xml.XmlNode.NamespaceURI%2A>).</xref:System.Xml.XmlNode.NamespaceURI%2A> </xref:System.Xml.XmlNode.LocalName%2A> </xref:System.Xml.XmlNode.Prefix%2A>       Avhengig av nodetypen noden importerte og verdien for den `deep` parameteren tilleggsinformasjon overført etter behov. Denne metoden forsøker å speil virkemåten forventet hvis et fragment av XML-eller HTML ble kopiert fra en dokument til en annen (gjenkjenner at dokumentene i XML-tilfeller kan ha forskjellige DTDer).       Tabellen nedenfor beskriver bestemte virkemåten for hver <xref:System.Xml.XmlNodeType>.</xref:System.Xml.XmlNodeType>      | XmlNodeType | ImportNode(true) | ImportNode(false) |   |-----------------|------------------------|-------------------------|   | Attributtet | Den <xref:System.Xml.XmlAttribute.Specified%2A>er satt til `true` genererte <xref:System.Xml.XmlAttribute>.</xref:System.Xml.XmlAttribute> </xref:System.Xml.XmlAttribute.Specified%2A> Underordnede for kilden `XmlAttribute` er rekursivt importert og de resulterende nodene sammen igjen for å danne undertreet tilsvarende. | Den `deep` parameteren gjelder ikke for `XmlAttribute` noder; de alltid inneholder underordnede med dem når den importeres. |   | CData | Overfører noden, inkludert data. | Overfører noden, inkludert rapportdataene. |   | Merknaden | Overfører noden, inkludert rapportdataene. | Overfører noden, inkludert data. |   | DocumentFragment | Underordnede av kildenoden som er rekursivt importert og resulterende nodene sammen igjen for å danne undertreet tilsvarende. | En tom <xref:System.Xml.XmlDocumentFragment>genereres. |   | DocumentType | Overfører noden, inkludert data. *| Overfører noden, inkludert data. *|   | Elementet | Underordnede kildeelementet og de angitte attributtet nodene er rekursivt importert og resulterende nodene sammen igjen for å danne undertreet tilsvarende.</xref:System.Xml.XmlDocumentFragment><br /><br /> Merk: Standard attributter er ikke overført. Hvis dokumentet blir importert til definerer standard attributter for denne elementnavn, de som er tilordnet. | Angitt attributt noder av elementet datakilden blir importert og generert `XmlAttribute` noder er koblet til den genererte <xref:System.Xml.XmlElement>.</xref:System.Xml.XmlElement><br /><br /> Merk: Standard attributter er ikke overført. Hvis dokumentet blir importert til definerer standard attributter for denne elementnavn, de som er tilordnet. |   | EntityReference | Fordi dokumentene kilden og målet kan ha enheter som er definert på forskjellige måter, denne metoden bare kopierer den <xref:System.Xml.XmlEntityReference>node.</xref:System.Xml.XmlEntityReference> Den nye teksten er ikke inkludert. Hvis måldokumentet har enhet som er definert, verdien er tilordnet. | Fordi kilde- og dokumenter kan ha enheter som er definert på forskjellige måter, denne metoden bare kopierer den <xref:System.Xml.XmlEntityReference>noden.</xref:System.Xml.XmlEntityReference> Den nye teksten er ikke inkludert. Hvis måldokumentet har enhet som er definert, verdien er tilordnet. |   | ProcessingInstruction | Overfører verdien for mål og data fra noden importerte. | Overfører verdien for mål og data fra noden importerte. |   | Teksten | Overfører noden, inkludert data. | Overfører noden, inkludert data. |   | SignificantWhitespace | Overfører noden, inkludert rapportdataene. | Overfører noden, inkludert data. |   | Mellomrom | Overfører noden, inkludert data. | Overfører noden, inkludert data. |   | XmlDeclaration | Overfører verdien for mål og data fra noden importerte. | Overfører verdien for mål og data fra noden importerte. |   | Alle andre Nodetyper. | Slike node kan ikke importeres. | Slike node kan ikke importeres. |       * Selv om DocumentType noder kan importeres, kan et dokument bare ha én DocumentType. Hvis dokumentet som har en DocumenType node, må den fjernes før du legger til en ny."
  example:
  - "The following example imports a book node from a second XML document into the original XML document.  \n  \n [!code-vb[Classic WebData XmlDocument.ImportNode Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmldocument_22_1.vb)]\n [!code-cpp[Classic WebData XmlDocument.ImportNode Example#1](~/add/codesnippet/cpp/m-system.xml.xmldocument_22_1.cpp)]\n [!code-cs[Classic WebData XmlDocument.ImportNode Example#1](~/add/codesnippet/csharp/m-system.xml.xmldocument_22_1.cs)]  \n  \n The example uses the file, `books.xml`, as input.  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/m-system.xml.xmldocument_22_2.xml)]"
  syntax:
    content: public virtual System.Xml.XmlNode ImportNode (System.Xml.XmlNode node, bool deep);
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: "Noden blir importert."
    - id: deep
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>til å utføre en dyp Klon; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Xml.XmlNode
      description: "De importerte <xref href=&quot;System.Xml.XmlNode&quot;> </xref>."
  overload: System.Xml.XmlDocument.ImportNode*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Kaller denne metoden for en nodetype som ikke kan importeres."
  platform:
  - net462
- uid: System.Xml.XmlDocument.InnerText
  id: InnerText
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: InnerText
  nameWithType: XmlDocument.InnerText
  fullName: System.Xml.XmlDocument.InnerText
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Oppstår en <xref:System.InvalidOperationException>i alle tilfellene.</xref:System.InvalidOperationException>"
  remarks: "Denne egenskapen er ikke implementert."
  syntax:
    content: public override string InnerText { set; }
    return:
      type: System.String
      description: "Verdien for noden og alle underordnede noder."
  overload: System.Xml.XmlDocument.InnerText*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "I alle tilfeller."
  platform:
  - net462
- uid: System.Xml.XmlDocument.InnerXml
  id: InnerXml
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: InnerXml
  nameWithType: XmlDocument.InnerXml
  fullName: System.Xml.XmlDocument.InnerXml
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Henter eller angir markup som representerer underordnede for den gjeldende noden."
  remarks: "Angi denne egenskapen erstatter underordnede av noden med analysere innholdet i den angitte strengen. Analysering gjøres i gjeldende kontekst i navneområdet.       `InnerXml`fjerner redundant navneområdedeklarasjoner. Som et resultat, mange Klipp ut og Lim inn Øk operasjoner ikke størrelsen på dokumentet med redundant navneområdedeklarasjoner. Vurder følgende XSL-dokumentet: ```   <xsl:stylesheet version=&quot;1.0&quot;          xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;>        <xsl:template match=&quot;stock&quot;>            ...        </xsl:template>       </xsl:stylesheet>   ``` den `InnerXml` på noden stilarket returnerer følgende strengen: ```   <xsl:template match=&quot;stock&quot;          xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;>        ...       </xsl:template>   ``` ser ekstra xmlns:xsl navneområdedeklarasjon som brukes til å beholde node-IDen. Hvis du setter denne interne XML-strengen på nytt, får du tilbake det opprinnelige dokumentet. Med andre ord, `InnerXml` gjenkjenner at navneområdedeklarasjon xmlns:xsl er overflødig, fordi som det overordnede xsl: stylesheet elementet allerede er xmlns:xsl navneområdet delcaration, og derfor fjernes.       Hvis du flytter `InnerXml` virkemåten er litt annerledes fra et dokument med ikke-standard navneområde i et dokument med et standard navneområde. Vurder følgende XML-strengen: ```   <test>         <item>123</item>       </test>   ``` `InnerXml` returnerer en streng som vanlig XML med ingen navneområdedeklarasjoner: ```   <item>123</item>   ``` Hvis du deretter inn denne strengen i et dokument som har et standard navneområde, for eksempel følgende: ```   <test2 xmlns=&quot;urn:1&quot;>       </test>   ``` `InnerXml` analyserer strengen i konteksten, og de nye nodene plukker opp navneområdet urn:&1;.               Resultatet ser slik ut: ```   <test2 xmlns=&quot;urn:1&quot;>         <item>123</item>       </test>   ``` nå når du ber om den `InnerXml` du komme følgende: ```   <item xmlns=&quot;urn:1&quot;>123</item>   ``` Hvis du vil eksplisitt innsatte elementet å beholde faktumet den kom fra et dokument som har ikke navneområde og du må manuelt legge til en xmlns = &quot;&quot; deklareringen og Sett inn Resultatstrengen: ```   <item xmlns=&quot;&quot;>123</item>   ``` resultatet av alt dette er som følger: 1.  Klippe og lime `InnerXml` mellom dokumenter som ikke bruker navneområder er ren og enkel og oppretter ikke &quot;xmlns&quot; redundancy i din strenger.      2.  `InnerXml`kan også brukes til å klipp og Lim inn mellom dokumenter som har mer enn én navneområdet (det vil si XSL stilark).      3.  xmlns:XSL deklareringer automatisk vises i din strenger og forsvinner i node-hierarkier.      4.  I tilfeller der du er glidende `InnerXml` fra et dokument som har ingen standard navneområde i et dokument som har et standard navneområde, trer de nye nodene nye standard navneområde.       Hvis `InnerXml` er angitt med teksten som inneholder enhetsreferanser som ikke er definert i dokumentet, inneholder resulterende treet tom EntityReference noder.       Denne egenskapen er en Microsoft-filtype til dokumentet objektet Model (DOM)."
  syntax:
    content: public override string InnerXml { get; set; }
    return:
      type: System.String
      description: "Markup for underordnede til den gjeldende noden."
  overload: System.Xml.XmlDocument.InnerXml*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "XML-filen angitt når du setter denne egenskapen er ikke riktig formet."
  platform:
  - net462
- uid: System.Xml.XmlDocument.IsReadOnly
  id: IsReadOnly
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: XmlDocument.IsReadOnly
  fullName: System.Xml.XmlDocument.IsReadOnly
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Henter en verdi som angir om den gjeldende noden er skrivebeskyttet."
  remarks: "En skrivebeskyttet node er en der egenskapene attributter eller underordnede ikke kan endres. Du kan fjerne en skrivebeskyttet node fra treet og sett den et annet sted.       Denne egenskapen er en Microsoft-filtype til dokumentet objektet Model (DOM)."
  example:
  - "The following example shows how to use the `IsReadOnly` property.  \n  \n [!code-cs[Classic WebData XmlDocument.IsReadOnly Example#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_7_1.cs)]\n [!code-cpp[Classic WebData XmlDocument.IsReadOnly Example#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_7_1.cpp)]\n [!code-vb[Classic WebData XmlDocument.IsReadOnly Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_7_1.vb)]"
  syntax:
    content: public override bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den gjeldende noden er skrivebeskyttet. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. <xref uid=&quot;langword_csharp_XmlDocument&quot; name=&quot;XmlDocument&quot; href=&quot;&quot;></xref>noder alltid returnere <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlDocument.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.Load(System.IO.Stream)
  id: Load(System.IO.Stream)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: Load(Stream)
  nameWithType: XmlDocument.Load(Stream)
  fullName: System.Xml.XmlDocument.Load(Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Laster inn XML-dokumentet fra den angitte strømmen."
  remarks: "> [!NOTE]> Den `Load` beholdes alltid signifikant mellomrom. Den <xref:System.Xml.XmlDocument.PreserveWhitespace%2A>egenskapen bestemmer om insignifikante mellomrom som mellomrom i elementinnhold, beholdes.</xref:System.Xml.XmlDocument.PreserveWhitespace%2A> Standard `false`; mellomrom i elementinnhold opprettholdes ikke.       Hvis du vil validering skal utføres, kan du opprette en validering <xref:System.Xml.XmlReader>forekomst ved hjelp av den <xref:System.Xml.XmlReaderSettings>klassen og <xref:System.Xml.XmlReader.Create%2A>metode.</xref:System.Xml.XmlReader.Create%2A> </xref:System.Xml.XmlReaderSettings> </xref:System.Xml.XmlReader> Du finner mer informasjon i avsnittet Merknader for den <xref:System.Xml.XmlReader>referansesiden.</xref:System.Xml.XmlReader>       Denne metoden er en Microsoft-filtype til dokumentet objektet Model (DOM).       Denne metoden finner automatisk strengformat for inndata-XML (for eksempel UTF-8 ANSI og så videre). Hvis programmet trenger å vite kodingen som brukes til å lese dataflyten, kan du vurdere å bruke en <xref:System.Xml.XmlTextReader>objekt for å lese dataflyten, og bruk av <xref:System.Xml.XmlTextReader.Encoding%2A?displayProperty=fullName>til å fastslå kodingen.</xref:System.Xml.XmlTextReader.Encoding%2A?displayProperty=fullName> </xref:System.Xml.XmlTextReader> Hvis du vil bruke en <xref:System.Xml.XmlDocument>objektet til å fungere med XML, kan du bruke den <xref:System.Xml.XmlTextReader>objektet for å opprette en.</xref:System.Xml.XmlTextReader> </xref:System.Xml.XmlDocument> Hvis du vil ha mer informasjon, se [lesing XML-dataene ved hjelp av XPathDocument og XmlDocument](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual void Load (System.IO.Stream inStream);
    parameters:
    - id: inStream
      type: System.IO.Stream
      description: "Dataflyten som inneholder XML-dokument lastes inn."
  overload: System.Xml.XmlDocument.Load*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Det er en feil med Last inn eller behandle i XML. I dette tilfellet en <xref:System.IO.FileNotFoundException>oppstår.</xref:System.IO.FileNotFoundException>"
  platform:
  - net462
- uid: System.Xml.XmlDocument.Load(System.IO.TextReader)
  id: Load(System.IO.TextReader)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: Load(TextReader)
  nameWithType: XmlDocument.Load(TextReader)
  fullName: System.Xml.XmlDocument.Load(TextReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Laster inn XML-dokumentet fra den angitte <xref:System.IO.TextReader>.</xref:System.IO.TextReader>"
  remarks: "> [!NOTE]> Den `Load` beholdes alltid signifikant mellomrom. Den <xref:System.Xml.XmlDocument.PreserveWhitespace%2A>egenskapen bestemmer om insignifikante mellomrom som mellomrom i elementinnhold, beholdes.</xref:System.Xml.XmlDocument.PreserveWhitespace%2A> Standard `false`; mellomrom i elementinnhold opprettholdes ikke.       Hvis du vil validering skal utføres, kan du opprette en validering <xref:System.Xml.XmlReader>forekomst ved hjelp av den <xref:System.Xml.XmlReaderSettings>klassen og <xref:System.Xml.XmlReader.Create%2A>metode.</xref:System.Xml.XmlReader.Create%2A> </xref:System.Xml.XmlReaderSettings> </xref:System.Xml.XmlReader> Du finner mer informasjon i avsnittet Merknader for den <xref:System.Xml.XmlReader>referansesiden.</xref:System.Xml.XmlReader>       Denne metoden er en Microsoft-filtype til dokumentet objektet Model (DOM)."
  example:
  - "The following example uses the <xref:System.IO.StringReader> class to load a string of XML data into the `XmlDocument` object.  \n  \n [!code-cs[Classic WebData XmlDocument.CreateElement2 Example#1](~/add/codesnippet/csharp/m-system.xml.xmldocument_8_1.cs)]\n [!code-vb[Classic WebData XmlDocument.CreateElement2 Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmldocument_8_1.vb)]\n [!code-cpp[Classic WebData XmlDocument.CreateElement2 Example#1](~/add/codesnippet/cpp/m-system.xml.xmldocument_8_1.cpp)]"
  syntax:
    content: public virtual void Load (System.IO.TextReader txtReader);
    parameters:
    - id: txtReader
      type: System.IO.TextReader
      description: "Den <xref uid=&quot;langword_csharp_TextReader&quot; name=&quot;TextReader&quot; href=&quot;&quot;> </xref> brukes til å feeden XML-dataene i dokumentet."
  overload: System.Xml.XmlDocument.Load*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Det er en feil med Last inn eller behandle i XML. Dokumentet forblir i dette tilfellet tom."
  platform:
  - net462
- uid: System.Xml.XmlDocument.Load(System.String)
  id: Load(System.String)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: Load(String)
  nameWithType: XmlDocument.Load(String)
  fullName: System.Xml.XmlDocument.Load(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Laster inn XML-dokumentet fra den angitte URL-adressen."
  remarks: "> [!NOTE]> Den `Load` beholdes alltid signifikant mellomrom. Den <xref:System.Xml.XmlDocument.PreserveWhitespace%2A>egenskapen bestemmer om insignifikante mellomrom som mellomrom i elementinnhold, beholdes.</xref:System.Xml.XmlDocument.PreserveWhitespace%2A> Standard `false`; mellomrom i elementinnhold opprettholdes ikke.       Hvis du vil validering skal utføres, kan du opprette en validering <xref:System.Xml.XmlReader>forekomst ved hjelp av den <xref:System.Xml.XmlReaderSettings>klassen og <xref:System.Xml.XmlReader.Create%2A>metode.</xref:System.Xml.XmlReader.Create%2A> </xref:System.Xml.XmlReaderSettings> </xref:System.Xml.XmlReader> Du finner mer informasjon i avsnittet Merknader for den <xref:System.Xml.XmlReader>referansesiden.</xref:System.Xml.XmlReader>       Denne metoden er en Microsoft-filtype til dokumentet objektet Model (DOM)."
  syntax:
    content: public virtual void Load (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "URL-adressen for filen som inneholder XML-dokumentet som lastes inn. URL-adressen kan være en lokal fil eller en HTTP-adresse (webadresse)."
  overload: System.Xml.XmlDocument.Load*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Det er en feil med Last inn eller behandle i XML. I dette tilfellet en <xref:System.IO.FileNotFoundException>oppstår.</xref:System.IO.FileNotFoundException>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>filename</code>er en tom streng, inneholder bare mellomrom eller inneholder én eller flere ugyldige tegn som er angitt av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filename</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angitte banen, filnavnet eller begge være lengre enn den systemdefinerte maksimumslengden. For eksempel på Windows-baserte plattformer baner må være mindre enn 248 tegn, og filnavn må være mindre enn 260 tegn."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angitte banen er ugyldig (for eksempel det er på en lokal stasjon)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil under åpning av filen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>filename</code>angitt en fil som er skrivebeskyttet.       - eller - operasjonen støttes ikke på gjeldende plattform.       - eller - <code>filename</code> angitt en mappe.       - eller - oppkalleren har ikke den nødvendige tillatelsen."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Den angitte filen i <code> filename </code> ble ikke funnet."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>filename</code>har et ugyldig format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke den nødvendige tillatelsen."
  platform:
  - net462
- uid: System.Xml.XmlDocument.Load(System.Xml.XmlReader)
  id: Load(System.Xml.XmlReader)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: Load(XmlReader)
  nameWithType: XmlDocument.Load(XmlReader)
  fullName: System.Xml.XmlDocument.Load(XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Laster inn XML-dokumentet fra den angitte <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]> Den `Load` beholdes alltid signifikant mellomrom. Den <xref:System.Xml.XmlDocument.PreserveWhitespace%2A>egenskapen bestemmer om insignifikante mellomrom som mellomrom i elementinnhold, beholdes.</xref:System.Xml.XmlDocument.PreserveWhitespace%2A> Standard `false`; mellomrom i elementinnhold opprettholdes ikke.       Hvis leseren i den opprinnelige tilstanden (<xref:System.Xml.XmlReader.ReadState%2A> = ReadState.Initial), `Load` bruker hele innholdet i leseren og bygger DOM fra det oppdager.</xref:System.Xml.XmlReader.ReadState%2A>       Hvis leseren er allerede plassert på en node på dybden &quot;n&quot;, laster denne metoden denne noden og alle etterfølgende sideordnede opptil sluttkoden som lukker dybden &quot;n&quot;. Dette har følgende resultater.       Hvis den gjeldende noden og sideordnede ser du følgende: ```   <!--comment--><element1>one</element1><element2>two</element2>   ``` `Load` oppstår det et unntak fordi et dokument ikke kan ha to nivå rotelementer.        Hvis den gjeldende noden og sideordnede se ut som følgende: ```   <!--comment--><?process instruction?><!--comment--></endtag>   ``` `Load` vellykket, men du har en ufullstendig DOM-tre fordi det finnes ingen rotelementer nivå.        Før du lagrer dokumentet, må du legge til et nivå rotelement, ellers <xref:System.Xml.XmlDocument.Save%2A>vil Iverksett et unntak.</xref:System.Xml.XmlDocument.Save%2A>       Hvis leseren er plassert på en bladnode som er ugyldig for root-nivå for et dokument, for eksempel et mellomrom eller attributtnode, leseren fortsetter å lese før den er plassert på en node som kan brukes til roten. Dokumentet starter laster inn på dette tidspunktet.       Hvis du vil validering skal utføres, kan du opprette en validering <xref:System.Xml.XmlReader>forekomst ved hjelp av den <xref:System.Xml.XmlReaderSettings>klassen og <xref:System.Xml.XmlReader.Create%2A>metode.</xref:System.Xml.XmlReader.Create%2A> </xref:System.Xml.XmlReaderSettings> </xref:System.Xml.XmlReader> Du finner mer informasjon i avsnittet Merknader for den <xref:System.Xml.XmlReader>referansesiden.</xref:System.Xml.XmlReader>       Denne metoden er en Microsoft-filtype til dokumentet objektet Model (DOM)."
  example:
  - "The following example loads the last book node of the `books.xml` file into the XML document.  \n  \n [!code-cs[Classic WebData XmlDocument.Load2 Example#1](~/add/codesnippet/csharp/m-system.xml.xmldocument_23_1.cs)]\n [!code-vb[Classic WebData XmlDocument.Load2 Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmldocument_23_1.vb)]\n [!code-cpp[Classic WebData XmlDocument.Load2 Example#1](~/add/codesnippet/cpp/m-system.xml.xmldocument_23_1.cpp)]  \n  \n The example uses the file, `books.xml`, as input.  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/m-system.xml.xmldocument_23_2.xml)]"
  syntax:
    content: public virtual void Load (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Den <xref uid=&quot;langword_csharp_XmlReader&quot; name=&quot;XmlReader&quot; href=&quot;&quot;> </xref> brukes til å feeden XML-dataene i dokumentet."
  overload: System.Xml.XmlDocument.Load*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Det er en feil med Last inn eller behandle i XML. Dokumentet forblir i dette tilfellet tom."
  platform:
  - net462
- uid: System.Xml.XmlDocument.LoadXml(System.String)
  id: LoadXml(System.String)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: LoadXml(String)
  nameWithType: XmlDocument.LoadXml(String)
  fullName: System.Xml.XmlDocument.LoadXml(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Laster inn XML-dokumentet fra den angitte strengen."
  remarks: "Som standard den `LoadXml` metoden vil ikke mellomrom eller betydelige mellomrom.       Denne metoden analyserer DTDer, men er ikke DTD eller skjemaet validering. Hvis du vil validering skal utføres, kan du opprette en validering <xref:System.Xml.XmlReader>forekomst ved hjelp av den <xref:System.Xml.XmlReaderSettings>klassen og <xref:System.Xml.XmlReader.Create%2A>metode.</xref:System.Xml.XmlReader.Create%2A> </xref:System.Xml.XmlReaderSettings> </xref:System.Xml.XmlReader> Du finner mer informasjon i avsnittet Merknader for den <xref:System.Xml.XmlReader>referansesiden.</xref:System.Xml.XmlReader>       Hvis du vil laste inn fra en <xref:System.IO.Stream>, <xref:System.String>, <xref:System.IO.TextReader>, eller <xref:System.Xml.XmlReader>, bruke Versjonsuavhengige innlastingsmetoden i stedet for denne metoden.</xref:System.Xml.XmlReader> </xref:System.IO.TextReader> </xref:System.String> </xref:System.IO.Stream>       Denne metoden er en Microsoft-filtype til dokumentet objektet Model (DOM)."
  example:
  - "The following example loads XML into an `XmlDocument` object and saves it out to a file.  \n  \n [!code-cpp[Classic WebData XmlDocument.LoadXml Example#1](~/add/codesnippet/cpp/m-system.xml.xmldocument_2_1.cpp)]\n [!code-cs[Classic WebData XmlDocument.LoadXml Example#1](~/add/codesnippet/csharp/m-system.xml.xmldocument_2_1.cs)]\n [!code-vb[Classic WebData XmlDocument.LoadXml Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmldocument_2_1.vb)]"
  syntax:
    content: public virtual void LoadXml (string xml);
    parameters:
    - id: xml
      type: System.String
      description: "Streng som inneholder XML-dokument lastes inn."
  overload: System.Xml.XmlDocument.LoadXml*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Det er en feil med Last inn eller behandle i XML. Dokumentet forblir i dette tilfellet tom."
  platform:
  - net462
- uid: System.Xml.XmlDocument.LocalName
  id: LocalName
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: LocalName
  nameWithType: XmlDocument.LocalName
  fullName: System.Xml.XmlDocument.LocalName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Henter den lokale noden."
  remarks: "Lokale returnerte navnet på avhenger av <xref:System.Xml.XmlDocument.NodeType%2A>av noden.</xref:System.Xml.XmlDocument.NodeType%2A> Hvis du vil se en tabell som beskriver det lokale navnet returneres for hver node-typen, kan du se <xref:System.Xml.XmlNode.LocalName%2A>egenskap i <xref:System.Xml.XmlNode>klasse.</xref:System.Xml.XmlNode> </xref:System.Xml.XmlNode.LocalName%2A>"
  syntax:
    content: public override string LocalName { get; }
    return:
      type: System.String
      description: 'For <xref uid=&quot;langword_csharp_XmlDocument&quot; name=&quot;XmlDocument&quot; href=&quot;&quot;> </xref> noder lokale navn er #document.'
  overload: System.Xml.XmlDocument.LocalName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.Name
  id: Name
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: Name
  nameWithType: XmlDocument.Name
  fullName: System.Xml.XmlDocument.Name
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Henter det kvalifiserte navnet til noden."
  remarks: "Det returnerte navnet som er avhengig av <xref:System.Xml.XmlDocument.NodeType%2A>av noden.</xref:System.Xml.XmlDocument.NodeType%2A> Hvis du vil se en tabell som beskriver navnet returneres for hver node-typen, kan du se <xref:System.Xml.XmlNode.Name%2A>egenskap i <xref:System.Xml.XmlNode>klasse.</xref:System.Xml.XmlNode> </xref:System.Xml.XmlNode.Name%2A>"
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: 'For <xref uid=&quot;langword_csharp_XmlDocument&quot; name=&quot;XmlDocument&quot; href=&quot;&quot;> </xref> noder navnet er #document.'
  overload: System.Xml.XmlDocument.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.NameTable
  id: NameTable
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: NameTable
  nameWithType: XmlDocument.NameTable
  fullName: System.Xml.XmlDocument.NameTable
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Henter den <xref:System.Xml.XmlNameTable>som er forbundet med denne implementeringen.</xref:System.Xml.XmlNameTable>"
  remarks: "Hver `XmlDocument` objektet har en <xref:System.Xml.NameTable>objektet.</xref:System.Xml.NameTable> Elementet og attributtet er lagret i den `NameTable` som oppdelt strenger. Dette betyr at selv om et navn som det refereres til i dokumentet flere ganger den lagres bare én gang i den `NameTable`. Hvis dokumentet har flere elementer med navnet &quot;Kunde&quot;, for eksempel `NameTable` returnerer det samme objektet når den mottar en forespørsel om dette navnet. Resultatet er at brukere kan skrive som bruker objektet sammenligninger med disse strenger i stedet for dyr strengsammenligninger.       Hvis du vil ha mer informasjon i oppdelt strenger, kan du se <xref:System.Xml.XmlNameTable>.</xref:System.Xml.XmlNameTable>       Denne metoden er en Microsoft-filtype til dokumentet objektet Model (DOM)."
  syntax:
    content: public System.Xml.XmlNameTable NameTable { get; }
    return:
      type: System.Xml.XmlNameTable
      description: "En <xref uid=&quot;langword_csharp_XmlNameTable&quot; name=&quot;XmlNameTable&quot; href=&quot;&quot;> </xref> slik at du kan få atomized versjon av en streng i dokumentet."
  overload: System.Xml.XmlDocument.NameTable*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.NodeChanged
  id: NodeChanged
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: NodeChanged
  nameWithType: XmlDocument.NodeChanged
  fullName: System.Xml.XmlDocument.NodeChanged
  type: Event
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Forekommer når den <xref:System.Xml.XmlNode.Value*>tilhører dette dokumentet er endret av en node.</xref:System.Xml.XmlNode.Value*>"
  remarks: "Denne hendelsen gjelder bare for noder som har en verdi.       Alle noder som er opprettet av dette dokumentet, enten de har blitt satt inn i dokumentet, eller ikke er inkludert i denne hendelsen."
  syntax:
    content: public event System.Xml.XmlNodeChangedEventHandler NodeChanged;
    return:
      type: System.Xml.XmlNodeChangedEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.NodeChanging
  id: NodeChanging
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: NodeChanging
  nameWithType: XmlDocument.NodeChanging
  fullName: System.Xml.XmlDocument.NodeChanging
  type: Event
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Forekommer når den <xref:System.Xml.XmlNode.Value*>til en node tilhører dette dokumentet er ferd med å bli endret.</xref:System.Xml.XmlNode.Value*>"
  remarks: "Gjør at brukeren har ekstra kontroll, og eventuelt iverksette et unntak hvis du vil stoppe operasjonen. Hvis et unntak i `XmlDocument` returnerer til sin opprinnelige tilstand. Denne hendelsen gjelder bare for noder som har en verdi.       Alle noder som er opprettet av dette dokumentet, enten de har blitt satt inn i dokumentet, eller ikke er inkludert i denne hendelsen."
  syntax:
    content: public event System.Xml.XmlNodeChangedEventHandler NodeChanging;
    return:
      type: System.Xml.XmlNodeChangedEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.NodeInserted
  id: NodeInserted
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: NodeInserted
  nameWithType: XmlDocument.NodeInserted
  fullName: System.Xml.XmlDocument.NodeInserted
  type: Event
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Forekommer når en node som hører til dette dokumentet er satt inn i en annen node."
  remarks: "Alle noder som er opprettet av dette dokumentet, enten de har blitt satt inn i dokumentet, eller ikke er inkludert i denne hendelsen."
  syntax:
    content: public event System.Xml.XmlNodeChangedEventHandler NodeInserted;
    return:
      type: System.Xml.XmlNodeChangedEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.NodeInserting
  id: NodeInserting
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: NodeInserting
  nameWithType: XmlDocument.NodeInserting
  fullName: System.Xml.XmlDocument.NodeInserting
  type: Event
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Forekommer når en node som hører til dette dokumentet skal settes inn i en annen node."
  remarks: "Gjør at brukeren har ekstra kontroll, og eventuelt iverksette et unntak hvis du vil stoppe operasjonen. Hvis et unntak i `XmlDocument` returnerer til sin opprinnelige tilstand.       Alle noder som er opprettet av dette dokumentet, enten de har blitt satt inn i dokumentet, eller ikke er inkludert i denne hendelsen."
  syntax:
    content: public event System.Xml.XmlNodeChangedEventHandler NodeInserting;
    return:
      type: System.Xml.XmlNodeChangedEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.NodeRemoved
  id: NodeRemoved
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: NodeRemoved
  nameWithType: XmlDocument.NodeRemoved
  fullName: System.Xml.XmlDocument.NodeRemoved
  type: Event
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Forekommer når en node som hører til dette dokumentet har blitt fjernet fra overordnet."
  remarks: "Alle noder som er opprettet av dette dokumentet, enten de har blitt satt inn i dokumentet, eller ikke er inkludert i denne hendelsen."
  syntax:
    content: public event System.Xml.XmlNodeChangedEventHandler NodeRemoved;
    return:
      type: System.Xml.XmlNodeChangedEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.NodeRemoving
  id: NodeRemoving
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: NodeRemoving
  nameWithType: XmlDocument.NodeRemoving
  fullName: System.Xml.XmlDocument.NodeRemoving
  type: Event
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Forekommer når en node som hører til dette dokumentet skal fjernes fra dokumentet."
  remarks: "Gjør at brukeren har ekstra kontroll, og eventuelt iverksette et unntak hvis du vil stoppe operasjonen. Hvis et unntak i `XmlDocument` returnerer til sin opprinnelige tilstand.       Alle noder som er opprettet av dette dokumentet, enten de har blitt satt inn i dokumentet, eller ikke er inkludert i denne hendelsen."
  syntax:
    content: public event System.Xml.XmlNodeChangedEventHandler NodeRemoving;
    return:
      type: System.Xml.XmlNodeChangedEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.NodeType
  id: NodeType
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: NodeType
  nameWithType: XmlDocument.NodeType
  fullName: System.Xml.XmlDocument.NodeType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Henter typen for den gjeldende noden."
  syntax:
    content: public override System.Xml.XmlNodeType NodeType { get; }
    return:
      type: System.Xml.XmlNodeType
      description: "Nodetypen. For <xref uid=&quot;langword_csharp_XmlDocument&quot; name=&quot;XmlDocument&quot; href=&quot;&quot;> </xref> noder denne verdien er XmlNodeType.Document."
  overload: System.Xml.XmlDocument.NodeType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.OwnerDocument
  id: OwnerDocument
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: OwnerDocument
  nameWithType: XmlDocument.OwnerDocument
  fullName: System.Xml.XmlDocument.OwnerDocument
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Henter den <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> som den gjeldende noden tilhører."
  syntax:
    content: public override System.Xml.XmlDocument OwnerDocument { get; }
    return:
      type: System.Xml.XmlDocument
      description: "For <xref uid=&quot;langword_csharp_XmlDocument&quot; name=&quot;XmlDocument&quot; href=&quot;&quot;> </xref> noder (<xref:System.Xml.XmlDocument.NodeType*> er lik XmlNodeType.Document), egenskapen returnerer alltid <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlDocument.NodeType*>"
  overload: System.Xml.XmlDocument.OwnerDocument*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.ParentNode
  id: ParentNode
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: ParentNode
  nameWithType: XmlDocument.ParentNode
  fullName: System.Xml.XmlDocument.ParentNode
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Henter den overordnede noden på denne noden (for noder som kan ha overordnede)."
  syntax:
    content: public override System.Xml.XmlNode ParentNode { get; }
    return:
      type: System.Xml.XmlNode
      description: "Returnerer alltid <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlDocument.ParentNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.PreserveWhitespace
  id: PreserveWhitespace
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: PreserveWhitespace
  nameWithType: XmlDocument.PreserveWhitespace
  fullName: System.Xml.XmlDocument.PreserveWhitespace
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Henter eller angir en verdi som angir om du vil beholde mellomrom i elementinnhold."
  remarks: "Denne egenskapen avgjør hvordan mellomrom behandles under innlastingen og lagre prosessen.       Hvis `PreserveWhitespace` er `true` før <xref:System.Xml.XmlDocument.Load%2A>eller <xref:System.Xml.XmlDocument.LoadXml%2A>er kalt, mellomrom noder er beskyttede; Ellers hvis denne egenskapen er `false`betydelige mellomrom opprettholdes, mellomrom er ikke.</xref:System.Xml.XmlDocument.LoadXml%2A> </xref:System.Xml.XmlDocument.Load%2A>       Hvis `PreserveWhitespace` er `true` før <xref:System.Xml.XmlDocument.Save%2A>er kalt, mellomrom i dokumentet er beskyttede i utdataene; Ellers hvis denne egenskapen er `false`, `XmlDocument` automatisk innrykk utdataene.</xref:System.Xml.XmlDocument.Save%2A>       Denne metoden er en Microsoft-filtype til dokumentet objektet Model (DOM)."
  example:
  - "The following example shows how to strip white space from a file.  \n  \n [!code-cs[Classic WebData XmlDocument.PreserveWhitespace Example#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_6_1.cs)]\n [!code-vb[Classic WebData XmlDocument.PreserveWhitespace Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_6_1.vb)]\n [!code-cpp[Classic WebData XmlDocument.PreserveWhitespace Example#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_6_1.cpp)]  \n  \n The example uses the file `book.xml` as input.  \n  \n [!code-xml[Classic WebData XmlDocument.PreserveWhitespace Example#2](~/add/codesnippet/xml/p-system.xml.xmldocument_6_2.xml)]"
  syntax:
    content: public bool PreserveWhitespace { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>å beholde mellomrom; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlDocument.PreserveWhitespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.ReadNode(System.Xml.XmlReader)
  id: ReadNode(System.Xml.XmlReader)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: ReadNode(XmlReader)
  nameWithType: XmlDocument.ReadNode(XmlReader)
  fullName: System.Xml.XmlDocument.ReadNode(XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Oppretter en <xref href=&quot;System.Xml.XmlNode&quot;> </xref> objekt basert på informasjonen i <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> Leseren må plasseres i en node eller -attributtet."
  remarks: "Leser en `XmlNode` fra den angitte leseren og plasserer leseren på den neste noden. Denne metoden, oppretter typen `XmlNode` samsvarer med den <xref:System.Xml.XmlNode.NodeType%2A>på som leseren for øyeblikket er plassert.</xref:System.Xml.XmlNode.NodeType%2A> (Hvis leseren i den opprinnelige tilstanden `ReadNode` flytter leseren til den første noden og fungerer på denne noden.)       Hvis leseren er plassert på begynnelsen av et element `ReadNode` leser alle attributter og alle underordnede noder opptil og inkludert sluttkoden for den gjeldende noden. Den `XmlNode` returnerte inneholder undertreet som representerer alt lese. Leseren er plassert rett etter sluttkoden.       `ReadNode`kan også lese attributter, men den i dette tilfellet flytte ikke leseren til neste attributtet. Dette kan du skrive følgende C#-kode: ```   XmlDocument doc = new XmlDocument();   while (reader.MoveToNextAttribute())   {     XmlNode a = doc.ReadNode(reader);     // Do some more processing.   }   ``` `ReadNode` bruker attributtverdien, noe som betyr etter kall `ReadNode` på et attributt <xref:System.Xml.XmlReader.ReadAttributeValue%2A?displayProperty=fullName>returnerer `false`.</xref:System.Xml.XmlReader.ReadAttributeValue%2A?displayProperty=fullName>       "
  example:
  - "The following example uses `ReadNode` to create a new node and then inserts the new node into the document.  \n  \n [!code-cs[Classic WebData XmlDocument.ReadNode Example#1](~/add/codesnippet/csharp/m-system.xml.xmldocument_21_1.cs)]\n [!code-cpp[Classic WebData XmlDocument.ReadNode Example#1](~/add/codesnippet/cpp/m-system.xml.xmldocument_21_1.cpp)]\n [!code-vb[Classic WebData XmlDocument.ReadNode Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmldocument_21_1.vb)]  \n  \n The example uses the file, `cd.xml`, as input.  \n  \n [!code-xml[Classic WebData XmlDocument.ReadNode Example#2](~/add/codesnippet/xml/m-system.xml.xmldocument_21_2.xml)]"
  syntax:
    content: public virtual System.Xml.XmlNode ReadNode (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "XML-kilden"
    return:
      type: System.Xml.XmlNode
      description: "Den nye <xref uid=&quot;langword_csharp_XmlNode&quot; name=&quot;XmlNode&quot; href=&quot;&quot;> </xref> eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis det finnes ingen flere noder."
  overload: System.Xml.XmlDocument.ReadNode*
  exceptions:
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: "Leseren er plassert på en nodetypen ikke oversetter en gyldig DOM-noden (for eksempel EndElement eller EndEntity)."
  platform:
  - net462
- uid: System.Xml.XmlDocument.Save(System.IO.Stream)
  id: Save(System.IO.Stream)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: Save(Stream)
  nameWithType: XmlDocument.Save(Stream)
  fullName: System.Xml.XmlDocument.Save(Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Lagrer XML-dokumentet på den angitte strømmen."
  remarks: "Mellomrom opprettholdes bare hvis <xref:System.Xml.XmlDocument.PreserveWhitespace%2A>er satt til `true`.</xref:System.Xml.XmlDocument.PreserveWhitespace%2A>       XmlDeclaration for gjeldende `XmlDocument` objektet bestemmer attributtet koding i dokumentet. Verdien for attributtet koding er hentet fra den <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=fullName>egenskapen.</xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=fullName> Hvis den `XmlDocument` har ikke en XmlDeclaration, eller hvis XmlDeclaration ikke har attributtet koding, dokumentet vil ikke ha en enten.       Når dokumentet lagres, genereres xmlns attributter for å beholde node-identiteten (lokalt navn + navneområde-URI) på riktig måte. For eksempel følgende C# kode ```   XmlDocument doc = new XmlDocument();   doc.AppendChild(doc.CreateElement(&quot;item&quot;,&quot;urn:1&quot;));   doc.Save(Console.Out);   ``` genererer attributten xmls `<item xmls=&quot;urn:1&quot;/>`.       Denne metoden er en Microsoft-filtype til dokumentet objektet Model (DOM).       Vær oppmerksom på at bare den <xref:System.Xml.XmlDocument.Save%2A>metoden fremtvinger et korrekt utformet XML-dokument.</xref:System.Xml.XmlDocument.Save%2A> Alle andre `Save` overlastingene garantere bare et velformet fragment."
  syntax:
    content: public virtual void Save (System.IO.Stream outStream);
    parameters:
    - id: outStream
      type: System.IO.Stream
      description: "Dataflyten du vil lagre."
  overload: System.Xml.XmlDocument.Save*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Operasjonen vil ikke føre til en korrekt utformet XML-dokumentet (for eksempel ingen dokumentet elementet eller dupliserte XML deklareringer)."
  platform:
  - net462
- uid: System.Xml.XmlDocument.Save(System.IO.TextWriter)
  id: Save(System.IO.TextWriter)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: Save(TextWriter)
  nameWithType: XmlDocument.Save(TextWriter)
  fullName: System.Xml.XmlDocument.Save(TextWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Lagrer XML-dokumentet på den angitte <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>"
  remarks: "Koding i den `TextWriter` bestemmer kodingen som skrives ut (kodingen for noden XmlDeclaration erstattes med kodingen for den `TextWriter`). Hvis det er ingen kodingen som er angitt i den `TextWriter`, `XmlDocument` lagres uten et koding attributt.       Denne metoden er en Microsoft-filtype til dokumentet objektet Model (DOM).       Vær oppmerksom på at bare den <xref:System.Xml.XmlDocument.Save%2A>metoden fremtvinger et korrekt utformet XML-dokument.</xref:System.Xml.XmlDocument.Save%2A> Alle andre `Save` overlastingene garantere bare et velformet fragment."
  syntax:
    content: public virtual void Save (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "Den <xref uid=&quot;langword_csharp_TextWriter&quot; name=&quot;TextWriter&quot; href=&quot;&quot;> </xref> som du ønsker å lagre."
  overload: System.Xml.XmlDocument.Save*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Operasjonen vil ikke føre til en korrekt utformet XML-dokumentet (for eksempel ingen dokumentet elementet eller dupliserte XML deklareringer)."
  platform:
  - net462
- uid: System.Xml.XmlDocument.Save(System.String)
  id: Save(System.String)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: Save(String)
  nameWithType: XmlDocument.Save(String)
  fullName: System.Xml.XmlDocument.Save(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Lagrer XML-dokumentet til den angitte filen. Hvis den angitte filen finnes, vil denne metoden overskrive den."
  remarks: "Mellomrom beholdes i utdata filen bare hvis <xref:System.Xml.XmlDocument.PreserveWhitespace%2A>er satt til `true`.</xref:System.Xml.XmlDocument.PreserveWhitespace%2A>       XmlDeclaration for gjeldende `XmlDocument` objektet bestemmer attributtet koding i dokumentet. Verdien for attributtet koding er hentet fra den <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=fullName>egenskapen.</xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=fullName> Hvis den `XmlDocument` har ikke en XmlDeclaration, eller hvis XmlDeclaration ikke har attributtet koding, dokumentet vil ikke ha en enten.       Når dokumentet lagres, genereres xmlns attributter for å beholde node-identiteten (lokalt navn + navneområde-URI) på riktig måte. For eksempel følgende C# kode ```   XmlDocument doc = new XmlDocument();   doc.AppendChild(doc.CreateElement(&quot;item&quot;,&quot;urn:1&quot;));   doc.Save(Console.Out);   ``` genererer attributten xmls `<item xmls=&quot;urn:1&quot;/>`.       Denne metoden er en Microsoft-filtype til dokumentet objektet Model (DOM).       Legg merke til at bare metoden lagre fremtvinger et korrekt utformet XML-dokument. Alle andre `Save` overlastingene garantere bare et velformet fragment."
  example:
  - "The following example loads XML into an XmlDocument object, modifies it, and then saves it to a file named data.xml.  \n  \n [!code-cs[Classic WebData XmlDocument.Save Example#1](~/add/codesnippet/csharp/m-system.xml.xmldocument_18_1.cs)]\n [!code-vb[Classic WebData XmlDocument.Save Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmldocument_18_1.vb)]\n [!code-cpp[Classic WebData XmlDocument.Save Example#1](~/add/codesnippet/cpp/m-system.xml.xmldocument_18_1.cpp)]  \n  \n The data.xml file will contain the following XML: `<item><name>wrench</name><price>10.95</price></item>`."
  syntax:
    content: public virtual void Save (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "Plasseringen av filen der du vil lagre dokumentet."
  overload: System.Xml.XmlDocument.Save*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Operasjonen vil ikke føre til en korrekt utformet XML-dokumentet (for eksempel ingen dokumentet elementet eller dupliserte XML deklareringer)."
  platform:
  - net462
- uid: System.Xml.XmlDocument.Save(System.Xml.XmlWriter)
  id: Save(System.Xml.XmlWriter)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: Save(XmlWriter)
  nameWithType: XmlDocument.Save(XmlWriter)
  fullName: System.Xml.XmlDocument.Save(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Lagrer XML-dokumentet på den angitte <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "Mellomrom opprettholdes bare hvis <xref:System.Xml.XmlDocument.PreserveWhitespace%2A>er satt til `true`.</xref:System.Xml.XmlDocument.PreserveWhitespace%2A>       Koding i den `XmlWriter` bestemmer kodingen som skrives ut (kodingen for noden XmlDeclaration erstattes med kodingen for den `XmlWriter`). Hvis det er ingen kodingen som er angitt i den `XmlWriter`, `XmlDocument` lagres uten et koding attributt.       Når dokumentet lagres, genereres xmlns attributter for å beholde node-identiteten (LocalName + NamespaceURI) på riktig måte. For eksempel følgende C# kode ```   XmlDocument doc = new XmlDocument();   doc.AppendChild(doc.CreateElement(&quot;item&quot;,&quot;urn:1&quot;));   doc.Save(Console.Out);   ``` genererer attributten xmls: ```   <item       xmls=&quot;urn:1&quot;/>   ``` denne metoden er en Microsoft-filtype til dokumentet objektet Model (DOM).       Vær oppmerksom på at bare den <xref:System.Xml.XmlDocument.Save%2A>metoden fremtvinger et korrekt utformet XML-dokument.</xref:System.Xml.XmlDocument.Save%2A> Alle andre `Save` overlastingene garantere bare et velformet fragment."
  example:
  - "The following example loads XML into an `XmlDocument` object and saves it out to a file.  \n  \n [!code-cpp[Classic WebData XmlDocument.LoadXml Example#1](~/add/codesnippet/cpp/m-system.xml.xmldocument_5_1.cpp)]\n [!code-cs[Classic WebData XmlDocument.LoadXml Example#1](~/add/codesnippet/csharp/m-system.xml.xmldocument_5_1.cs)]\n [!code-vb[Classic WebData XmlDocument.LoadXml Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmldocument_5_1.vb)]"
  syntax:
    content: public virtual void Save (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "Den <xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref> som du ønsker å lagre."
  overload: System.Xml.XmlDocument.Save*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Operasjonen vil ikke føre til en korrekt utformet XML-dokumentet (for eksempel ingen dokumentet elementet eller dupliserte XML deklareringer)."
  platform:
  - net462
- uid: System.Xml.XmlDocument.SchemaInfo
  id: SchemaInfo
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: SchemaInfo
  nameWithType: XmlDocument.SchemaInfo
  fullName: System.Xml.XmlDocument.SchemaInfo
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Returnerer Post-Schema-validering-Infoset (PSVI) for noden."
  remarks: "PSVI innholdet for denne egenskapen er angitt etter noden har blitt validert.       Denne egenskapen er en Microsoft-filtype til dokumentet objektet Model (DOM)."
  syntax:
    content: public override System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }
    return:
      type: System.Xml.Schema.IXmlSchemaInfo
      description: "Den <xref href=&quot;System.Xml.Schema.IXmlSchemaInfo&quot;> </xref> -objekt som representerer PSVI av noden."
  overload: System.Xml.XmlDocument.SchemaInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.Schemas
  id: Schemas
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: Schemas
  nameWithType: XmlDocument.Schemas
  fullName: System.Xml.XmlDocument.Schemas
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Henter eller angir den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> objektet som er knyttet til dette <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>."
  remarks: "XML-skjemaer i en <xref:System.Xml.Schema.XmlSchemaSet>tilknyttet en <xref:System.Xml.XmlDocument>objektet brukes til kontroll når den <xref:System.Xml.XmlDocument.Validate%2A>metoden for en <xref:System.Xml.XmlDocument>er utført.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument.Validate%2A> </xref:System.Xml.XmlDocument> </xref:System.Xml.Schema.XmlSchemaSet>       Når en <xref:System.Xml.XmlDocument>-objektet er initialisert med XML-data fra en <xref:System.Xml.XmlReader>objektet i <xref:System.Xml.Schema.XmlSchemaSet>objektet er lastet inn fra den <xref:System.Xml.XmlReaderSettings.Schemas%2A>for den <xref:System.Xml.XmlReader>objektet.</xref:System.Xml.XmlReader> </xref:System.Xml.XmlReaderSettings.Schemas%2A> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.XmlReader> </xref:System.Xml.XmlDocument>"
  syntax:
    content: public System.Xml.Schema.XmlSchemaSet Schemas { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaSet
      description: "En <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> objektet som inneholder XML-skjema Definition Language (XSD)-skjemaene som er knyttet til dette <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>; Hvis ikke returneres en tom <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> objektet."
  overload: System.Xml.XmlDocument.Schemas*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler)
  id: Validate(System.Xml.Schema.ValidationEventHandler)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: Validate(ValidationEventHandler)
  nameWithType: XmlDocument.Validate(ValidationEventHandler)
  fullName: System.Xml.XmlDocument.Validate(ValidationEventHandler)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Validerer den <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> mot XML-skjema Definition Language (XSD)-skjemaene som finnes i den <xref:System.Xml.XmlDocument.Schemas*>egenskapen.</xref:System.Xml.XmlDocument.Schemas*>"
  remarks: "Metoden Valider validerer XML-dataene i den <xref:System.Xml.XmlDocument>mot skjemaene i den <xref:System.Xml.XmlDocument.Schemas%2A>egenskapen.</xref:System.Xml.XmlDocument.Schemas%2A> </xref:System.Xml.XmlDocument> Metoden Valider utfører infoset styrkes. Nærmere bestemt etter vellykket validering skjemaet standarder brukes tekstverdier konverteres til atomic verdier etter behov og typeinformasjonen er knyttet til godkjent informasjonselementene. Resultatet er en tidligere ikke-typeangitt XML-undertreet i den <xref:System.Xml.XmlDocument>erstattet med en typeangitt undertreet.</xref:System.Xml.XmlDocument>       Følgende er viktige hensyn å ta når du bruker Valider-metoden.      -Skjema plassering tipsene som `xsi:schemaLocation` eller `xsi:noNamespaceSchemaLocation` ignoreres.      -Innebygde skjemaer ignoreres.      -Hvis skjemavalideringsfeil oppstår under validering av <xref:System.Xml.XmlDocument>delvis er godkjent med noen noder med riktig typeinformasjon og noen uten.</xref:System.Xml.XmlDocument>      -Valideringen inkluderer søk etter begrensninger for unikhet og referanse (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, og `xs:unique`)."
  example:
  - "The following example illustrates use of the Validate method. The example creates an <xref:System.Xml.XmlDocument> that contains an associated XSD schema using the <xref:System.Xml.XmlReaderSettings> and <xref:System.Xml.XmlReader> objects. The example then uses the <xref:System.Xml.XPath.XPathNavigator> class to incorrectly modify the typed value of an element in the XML document generating a schema validation error.  \n  \n [!code-cs[XPathValidation#1](~/add/codesnippet/csharp/m-system.xml.xmldocument_19_1.cs)]\n [!code-cpp[XPathValidation#1](~/add/codesnippet/cpp/m-system.xml.xmldocument_19_1.cpp)]\n [!code-vb[XPathValidation#1](~/add/codesnippet/visualbasic/m-system.xml.xmldocument_19_1.vb)]  \n  \n The example takes the `contosoBooks.xml` and `contosoBooks.xsd` files as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/m-system.xml.xmldocument_19_2.xml)]  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/m-system.xml.xmldocument_19_3.xsd)]"
  syntax:
    content: public void Validate (System.Xml.Schema.ValidationEventHandler validationEventHandler);
    parameters:
    - id: validationEventHandler
      type: System.Xml.Schema.ValidationEventHandler
      description: "Den <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> objektet som mottar informasjon om skjemaet Valideringsadvarsler og feil."
  overload: System.Xml.XmlDocument.Validate*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "Det oppstod en XML-validering hendelse, og ingen <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> objekt ble angitt."
  platform:
  - net462
- uid: System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlNode)
  id: Validate(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlNode)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: Validate(ValidationEventHandler,XmlNode)
  nameWithType: XmlDocument.Validate(ValidationEventHandler,XmlNode)
  fullName: System.Xml.XmlDocument.Validate(ValidationEventHandler,XmlNode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Validerer den <xref href=&quot;System.Xml.XmlNode&quot;> </xref> mot XML-skjema Definition Language (XSD) skjemaene i det angitte objektet i <xref:System.Xml.XmlDocument.Schemas*>egenskapen.</xref:System.Xml.XmlDocument.Schemas*>"
  remarks: "Metoden Valider validerer XML-dataene i den <xref:System.Xml.XmlNode>objektet mot skjemaene i den <xref:System.Xml.XmlDocument.Schemas%2A>egenskapen.</xref:System.Xml.XmlDocument.Schemas%2A> </xref:System.Xml.XmlNode> Metoden Valider utfører infoset styrkes. Nærmere bestemt etter vellykket validering skjemaet standarder brukes tekstverdier konverteres til atomic verdier etter behov og typeinformasjonen er knyttet til godkjent informasjonselementene. Resultatet er en tidligere ikke-typeangitt XML-undertreet i den <xref:System.Xml.XmlDocument>erstattet med en typeangitt undertreet.</xref:System.Xml.XmlDocument>       Følgende er viktige hensyn å ta når du bruker Valider-metoden.      -Skjema plassering tipsene som `xsi:schemaLocation` eller `xsi:noNamespaceSchemaLocation` ignoreres.      -Innebygde skjemaer ignoreres.      -Hvis skjemavalideringsfeil oppstår under validering av <xref:System.Xml.XmlDocument>delvis er godkjent med noen noder med riktig typeinformasjon og noen uten.</xref:System.Xml.XmlDocument>       Hvis noden til å validere rotnoden, valideringen inkluderer søk etter begrensninger for unikhet og referanse (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, og `xs:unique`); ellers begrensninger for unikhet og referanse utelates."
  example:
  - For an example of the Validate method, see the <xref:System.Xml.XmlDocument.Validate%2A> method.
  syntax:
    content: public void Validate (System.Xml.Schema.ValidationEventHandler validationEventHandler, System.Xml.XmlNode nodeToValidate);
    parameters:
    - id: validationEventHandler
      type: System.Xml.Schema.ValidationEventHandler
      description: "Den <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> objektet som mottar informasjon om skjemaet Valideringsadvarsler og feil."
    - id: nodeToValidate
      type: System.Xml.XmlNode
      description: "Den <xref href=&quot;System.Xml.XmlNode&quot;> </xref> objektet er opprettet fra en <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> til å validere."
  overload: System.Xml.XmlDocument.Validate*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <xref href=&quot;System.Xml.XmlNode&quot;> </xref> objektet parameteren ble ikke opprettet fra en <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref href=&quot;System.Xml.XmlNode&quot;> </xref> objekt-parameteren er ikke et element, attributtet, Dokumentfragment eller rotnoden."
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "Det oppstod en XML-validering hendelse, og ingen <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> objekt ble angitt."
  platform:
  - net462
- uid: System.Xml.XmlDocument.WriteContentTo(System.Xml.XmlWriter)
  id: WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlDocument.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlDocument.WriteContentTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Lagrer alle underordnede noder for den <xref uid=&quot;langword_csharp_XmlDocument&quot; name=&quot;XmlDocument&quot; href=&quot;&quot;> </xref> node til den angitte <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "Denne metoden er en Microsoft-filtype til dokumentet objektet Model (DOM). Tilsvarer det Funksjonsmessig den <xref:System.Xml.XmlDocument.InnerXml%2A>egenskapen.</xref:System.Xml.XmlDocument.InnerXml%2A>       Den <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=fullName>egenskapen angir kodingen som skrives ut.</xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=fullName> Hvis den `Encoding` egenskapen har ikke en verdi av `XmlDocument` skrives uten et koding attributt."
  example:
  - "The following example displays the document onscreen.  \n  \n [!code-cs[Classic WebData XmlDocument.WriteContentTo Example#1](~/add/codesnippet/csharp/m-system.xml.xmldocument_0_1.cs)]\n [!code-vb[Classic WebData XmlDocument.WriteContentTo Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmldocument_0_1.vb)]\n [!code-cpp[Classic WebData XmlDocument.WriteContentTo Example#1](~/add/codesnippet/cpp/m-system.xml.xmldocument_0_1.cpp)]"
  syntax:
    content: public override void WriteContentTo (System.Xml.XmlWriter xw);
    parameters:
    - id: xw
      type: System.Xml.XmlWriter
      description: "Den <xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref> som du ønsker å lagre."
  overload: System.Xml.XmlDocument.WriteContentTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: WriteTo(XmlWriter)
  nameWithType: XmlDocument.WriteTo(XmlWriter)
  fullName: System.Xml.XmlDocument.WriteTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Lagrer den <xref uid=&quot;langword_csharp_XmlDocument&quot; name=&quot;XmlDocument&quot; href=&quot;&quot;> </xref> node til den angitte <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "Denne metoden er en Microsoft-filtype til dokumentet objektet Model (DOM). Tilsvarer det Funksjonsmessig den <xref:System.Xml.XmlNode.OuterXml%2A>egenskapen.</xref:System.Xml.XmlNode.OuterXml%2A>       Den <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=fullName>egenskapen angir kodingen som skrives ut.</xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=fullName> Hvis den `Encoding` egenskapen har ikke en verdi av `XmlDocument` skrives uten et koding attributt."
  example:
  - "The following example displays the document onscreen.  \n  \n [!code-cpp[Classic WebData XmlDocument.WriteTo Example#1](~/add/codesnippet/cpp/m-system.xml.xmldocument_6_1.cpp)]\n [!code-vb[Classic WebData XmlDocument.WriteTo Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmldocument_6_1.vb)]\n [!code-cs[Classic WebData XmlDocument.WriteTo Example#1](~/add/codesnippet/csharp/m-system.xml.xmldocument_6_1.cs)]"
  syntax:
    content: public override void WriteTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "Den <xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref> som du ønsker å lagre."
  overload: System.Xml.XmlDocument.WriteTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocument.XmlResolver
  id: XmlResolver
  parent: System.Xml.XmlDocument
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XmlDocument.XmlResolver
  fullName: System.Xml.XmlDocument.XmlResolver
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Angir den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> skal brukes for å løse eksterne ressurser."
  remarks: "Den `XmlResolver` kan brukes til å laste inn DTDer eller Vis enheten refererer til. Ved hjelp av den <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName>-egenskapen, kan du angi legitimasjonen på den `XmlResolver` til å få tilgang til ressurser som er lagret på en sikker nettverksressurs.</xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName>      -Hvis dokumentet ikke ble lastet inn med en <xref:System.Xml.XmlReader>(det vil si hvis det ble lastet inn med en dataflyt, filen, og så videre) i `XmlResolver` på den `XmlDocument` alltid brukes.</xref:System.Xml.XmlReader>      -Hvis dokumentet ble lastet inn med en <xref:System.Xml.XmlTextReader>, Løsningsprogrammet på den `XmlTextReader` brukes til å løse eventuelle DTD-referanser i noden DocumentType.</xref:System.Xml.XmlTextReader> Løsningsprogrammet på den `XmlDocument` brukes til å utvide enhetsreferanser.      -Hvis dokumentet ble lastet inn med en <xref:System.Xml.XmlValidatingReader>, Løsningsprogrammet på den `XmlDocument` aldri brukt.</xref:System.Xml.XmlValidatingReader>      -Hvis dokumentet ble lastet inn med en klasse som utvider `XmlReader` og `XmlReader` kan ikke løse enheter (<xref:System.Xml.XmlReader.CanResolveEntity%2A> returnerer `false`), `XmlResolver` på den `XmlDocument` brukes til å løse eventuelle referanser i noden DocumentType og Vis enhetsreferanser.</xref:System.Xml.XmlReader.CanResolveEntity%2A>      > [!NOTE] > Hvis den `XmlDocument` er lastet inn med en <xref:System.Xml.XmlReader>som har en `XmlResolver` angitt, den `XmlResolver` på den `XmlReader` ikke er bufret av den `XmlDocument` når <xref:System.Xml.XmlDocument.Load%2A>er fullført.</xref:System.Xml.XmlDocument.Load%2A> </xref:System.Xml.XmlReader>       Hvis denne egenskapen ikke er angitt, bestemmer klareringsnivået for applikasjonen i versjon 1.1 av.NET Framework standard virkemåte.       `Fully trusted code:`Dokumentet bruker en standard <xref:System.Xml.XmlUrlResolver>med ingen legitimasjonsbeskrivelse.</xref:System.Xml.XmlUrlResolver> Hvis godkjenning kreves for å få tilgang til en nettverksressurs, kan du bruke den `XmlResolver` til å angi en `XmlResolver` med legitimasjonen som er nødvendig.       `Semi-trusted code:`Den `XmlResolver` er satt til `null`. Eksterne ressurser løses ikke.       For mer informasjon om sikkerhet og `XmlResolver` egenskapen se [løsning eksterne ressurser](~/add/includes/ajax-current-ext-md.md).       Denne egenskapen er en Microsoft-filtype til dokumentet objektet Model (DOM)."
  example:
  - "The following example loads an XML document which includes a reference to a DTD file. The `XmlResolver` property is used to set the credentials necessary to access the network resource.  \n  \n [!code-cpp[XmlDocument.XmlResolver#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_9_1.cpp)]\n [!code-cs[XmlDocument.XmlResolver#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_9_1.cs)]\n [!code-vb[XmlDocument.XmlResolver#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_9_1.vb)]  \n  \n The example uses the following data files as input.  \n  \n `book5.xml`  \n  \n [!code-xml[XmlDocument.XmlResolver#2](~/add/codesnippet/xml/p-system.xml.xmldocument_9_2.xml)]  \n  \n `books.dtd`  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public virtual System.Xml.XmlResolver XmlResolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "The <xref uid=&quot;langword_csharp_XmlResolver&quot; name=&quot;XmlResolver&quot; href=&quot;&quot;></xref> to use.       I versjon 1.1 av.NET Framework-Oppkalleren må være fullstendig klarerte for å angi en <xref uid=&quot;langword_csharp_XmlResolver&quot; name=&quot;XmlResolver&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlDocument.XmlResolver*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Denne egenskapen er satt til <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> og en ekstern DTD eller enheten blir funnet."
  platform:
  - net462
references:
- uid: System.Xml.XmlNode
  isExternal: false
  name: System.Xml.XmlNode
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.NullReferenceException
  isExternal: true
  name: System.NullReferenceException
- uid: System.Xml.Schema.XmlSchemaValidationException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaValidationException
  nameWithType: XmlSchemaValidationException
  fullName: System.Xml.Schema.XmlSchemaValidationException
- uid: System.Xml.XmlDocument.#ctor
  parent: System.Xml.XmlDocument
  isExternal: false
  name: XmlDocument()
  nameWithType: XmlDocument.XmlDocument()
  fullName: System.Xml.XmlDocument.XmlDocument()
- uid: System.Xml.XmlDocument.#ctor(System.Xml.XmlImplementation)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: XmlDocument(XmlImplementation)
  nameWithType: XmlDocument.XmlDocument(XmlImplementation)
  fullName: System.Xml.XmlDocument.XmlDocument(XmlImplementation)
- uid: System.Xml.XmlImplementation
  parent: System.Xml
  isExternal: false
  name: XmlImplementation
  nameWithType: XmlImplementation
  fullName: System.Xml.XmlImplementation
- uid: System.Xml.XmlDocument.#ctor(System.Xml.XmlNameTable)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: XmlDocument(XmlNameTable)
  nameWithType: XmlDocument.XmlDocument(XmlNameTable)
  fullName: System.Xml.XmlDocument.XmlDocument(XmlNameTable)
- uid: System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: true
  name: XmlNameTable
  nameWithType: XmlNameTable
  fullName: System.Xml.XmlNameTable
- uid: System.Xml.XmlDocument.BaseURI
  parent: System.Xml.XmlDocument
  isExternal: false
  name: BaseURI
  nameWithType: XmlDocument.BaseURI
  fullName: System.Xml.XmlDocument.BaseURI
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlDocument.CloneNode(System.Boolean)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CloneNode(Boolean)
  nameWithType: XmlDocument.CloneNode(Boolean)
  fullName: System.Xml.XmlDocument.CloneNode(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlDocument.CreateAttribute(System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateAttribute(String)
  nameWithType: XmlDocument.CreateAttribute(String)
  fullName: System.Xml.XmlDocument.CreateAttribute(String)
- uid: System.Xml.XmlAttribute
  parent: System.Xml
  isExternal: false
  name: XmlAttribute
  nameWithType: XmlAttribute
  fullName: System.Xml.XmlAttribute
- uid: System.Xml.XmlDocument.CreateAttribute(System.String,System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateAttribute(String,String)
  nameWithType: XmlDocument.CreateAttribute(String,String)
  fullName: System.Xml.XmlDocument.CreateAttribute(String,String)
- uid: System.Xml.XmlDocument.CreateAttribute(System.String,System.String,System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateAttribute(String,String,String)
  nameWithType: XmlDocument.CreateAttribute(String,String,String)
  fullName: System.Xml.XmlDocument.CreateAttribute(String,String,String)
- uid: System.Xml.XmlDocument.CreateCDataSection(System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateCDataSection(String)
  nameWithType: XmlDocument.CreateCDataSection(String)
  fullName: System.Xml.XmlDocument.CreateCDataSection(String)
- uid: System.Xml.XmlCDataSection
  parent: System.Xml
  isExternal: false
  name: XmlCDataSection
  nameWithType: XmlCDataSection
  fullName: System.Xml.XmlCDataSection
- uid: System.Xml.XmlDocument.CreateComment(System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateComment(String)
  nameWithType: XmlDocument.CreateComment(String)
  fullName: System.Xml.XmlDocument.CreateComment(String)
- uid: System.Xml.XmlComment
  parent: System.Xml
  isExternal: false
  name: XmlComment
  nameWithType: XmlComment
  fullName: System.Xml.XmlComment
- uid: System.Xml.XmlDocument.CreateDefaultAttribute(System.String,System.String,System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateDefaultAttribute(String,String,String)
  nameWithType: XmlDocument.CreateDefaultAttribute(String,String,String)
  fullName: System.Xml.XmlDocument.CreateDefaultAttribute(String,String,String)
- uid: System.Xml.XmlDocument.CreateDocumentFragment
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateDocumentFragment()
  nameWithType: XmlDocument.CreateDocumentFragment()
  fullName: System.Xml.XmlDocument.CreateDocumentFragment()
- uid: System.Xml.XmlDocumentFragment
  parent: System.Xml
  isExternal: false
  name: XmlDocumentFragment
  nameWithType: XmlDocumentFragment
  fullName: System.Xml.XmlDocumentFragment
- uid: System.Xml.XmlDocument.CreateDocumentType(System.String,System.String,System.String,System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateDocumentType(String,String,String,String)
  nameWithType: XmlDocument.CreateDocumentType(String,String,String,String)
  fullName: System.Xml.XmlDocument.CreateDocumentType(String,String,String,String)
- uid: System.Xml.XmlDocumentType
  parent: System.Xml
  isExternal: false
  name: XmlDocumentType
  nameWithType: XmlDocumentType
  fullName: System.Xml.XmlDocumentType
- uid: System.Xml.XmlDocument.CreateElement(System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateElement(String)
  nameWithType: XmlDocument.CreateElement(String)
  fullName: System.Xml.XmlDocument.CreateElement(String)
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Xml.XmlDocument.CreateElement(System.String,System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateElement(String,String)
  nameWithType: XmlDocument.CreateElement(String,String)
  fullName: System.Xml.XmlDocument.CreateElement(String,String)
- uid: System.Xml.XmlDocument.CreateElement(System.String,System.String,System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateElement(String,String,String)
  nameWithType: XmlDocument.CreateElement(String,String,String)
  fullName: System.Xml.XmlDocument.CreateElement(String,String,String)
- uid: System.Xml.XmlDocument.CreateEntityReference(System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateEntityReference(String)
  nameWithType: XmlDocument.CreateEntityReference(String)
  fullName: System.Xml.XmlDocument.CreateEntityReference(String)
- uid: System.Xml.XmlEntityReference
  parent: System.Xml
  isExternal: false
  name: XmlEntityReference
  nameWithType: XmlEntityReference
  fullName: System.Xml.XmlEntityReference
- uid: System.Xml.XmlDocument.CreateNavigator
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateNavigator()
  nameWithType: XmlDocument.CreateNavigator()
  fullName: System.Xml.XmlDocument.CreateNavigator()
- uid: System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: false
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XmlDocument.CreateNavigator(System.Xml.XmlNode)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateNavigator(XmlNode)
  nameWithType: XmlDocument.CreateNavigator(XmlNode)
  fullName: System.Xml.XmlDocument.CreateNavigator(XmlNode)
- uid: System.Xml.XmlDocument.CreateNode(System.String,System.String,System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateNode(String,String,String)
  nameWithType: XmlDocument.CreateNode(String,String,String)
  fullName: System.Xml.XmlDocument.CreateNode(String,String,String)
- uid: System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateNode(XmlNodeType,String,String)
  nameWithType: XmlDocument.CreateNode(XmlNodeType,String,String)
  fullName: System.Xml.XmlDocument.CreateNode(XmlNodeType,String,String)
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: true
  name: XmlNodeType
  nameWithType: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String,System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateNode(XmlNodeType,String,String,String)
  nameWithType: XmlDocument.CreateNode(XmlNodeType,String,String,String)
  fullName: System.Xml.XmlDocument.CreateNode(XmlNodeType,String,String,String)
- uid: System.Xml.XmlDocument.CreateProcessingInstruction(System.String,System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateProcessingInstruction(String,String)
  nameWithType: XmlDocument.CreateProcessingInstruction(String,String)
  fullName: System.Xml.XmlDocument.CreateProcessingInstruction(String,String)
- uid: System.Xml.XmlProcessingInstruction
  parent: System.Xml
  isExternal: false
  name: XmlProcessingInstruction
  nameWithType: XmlProcessingInstruction
  fullName: System.Xml.XmlProcessingInstruction
- uid: System.Xml.XmlDocument.CreateSignificantWhitespace(System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateSignificantWhitespace(String)
  nameWithType: XmlDocument.CreateSignificantWhitespace(String)
  fullName: System.Xml.XmlDocument.CreateSignificantWhitespace(String)
- uid: System.Xml.XmlSignificantWhitespace
  parent: System.Xml
  isExternal: false
  name: XmlSignificantWhitespace
  nameWithType: XmlSignificantWhitespace
  fullName: System.Xml.XmlSignificantWhitespace
- uid: System.Xml.XmlDocument.CreateTextNode(System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateTextNode(String)
  nameWithType: XmlDocument.CreateTextNode(String)
  fullName: System.Xml.XmlDocument.CreateTextNode(String)
- uid: System.Xml.XmlText
  parent: System.Xml
  isExternal: false
  name: XmlText
  nameWithType: XmlText
  fullName: System.Xml.XmlText
- uid: System.Xml.XmlDocument.CreateWhitespace(System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateWhitespace(String)
  nameWithType: XmlDocument.CreateWhitespace(String)
  fullName: System.Xml.XmlDocument.CreateWhitespace(String)
- uid: System.Xml.XmlWhitespace
  parent: System.Xml
  isExternal: false
  name: XmlWhitespace
  nameWithType: XmlWhitespace
  fullName: System.Xml.XmlWhitespace
- uid: System.Xml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateXmlDeclaration(String,String,String)
  nameWithType: XmlDocument.CreateXmlDeclaration(String,String,String)
  fullName: System.Xml.XmlDocument.CreateXmlDeclaration(String,String,String)
- uid: System.Xml.XmlDeclaration
  parent: System.Xml
  isExternal: false
  name: XmlDeclaration
  nameWithType: XmlDeclaration
  fullName: System.Xml.XmlDeclaration
- uid: System.Xml.XmlDocument.DocumentElement
  parent: System.Xml.XmlDocument
  isExternal: false
  name: DocumentElement
  nameWithType: XmlDocument.DocumentElement
  fullName: System.Xml.XmlDocument.DocumentElement
- uid: System.Xml.XmlDocument.DocumentType
  parent: System.Xml.XmlDocument
  isExternal: false
  name: DocumentType
  nameWithType: XmlDocument.DocumentType
  fullName: System.Xml.XmlDocument.DocumentType
- uid: System.Xml.XmlDocument.GetElementById(System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: GetElementById(String)
  nameWithType: XmlDocument.GetElementById(String)
  fullName: System.Xml.XmlDocument.GetElementById(String)
- uid: System.Xml.XmlDocument.GetElementsByTagName(System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: GetElementsByTagName(String)
  nameWithType: XmlDocument.GetElementsByTagName(String)
  fullName: System.Xml.XmlDocument.GetElementsByTagName(String)
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.Xml.XmlDocument.GetElementsByTagName(System.String,System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: GetElementsByTagName(String,String)
  nameWithType: XmlDocument.GetElementsByTagName(String,String)
  fullName: System.Xml.XmlDocument.GetElementsByTagName(String,String)
- uid: System.Xml.XmlDocument.Implementation
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Implementation
  nameWithType: XmlDocument.Implementation
  fullName: System.Xml.XmlDocument.Implementation
- uid: System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: ImportNode(XmlNode,Boolean)
  nameWithType: XmlDocument.ImportNode(XmlNode,Boolean)
  fullName: System.Xml.XmlDocument.ImportNode(XmlNode,Boolean)
- uid: System.Xml.XmlDocument.InnerText
  parent: System.Xml.XmlDocument
  isExternal: false
  name: InnerText
  nameWithType: XmlDocument.InnerText
  fullName: System.Xml.XmlDocument.InnerText
- uid: System.Xml.XmlDocument.InnerXml
  parent: System.Xml.XmlDocument
  isExternal: false
  name: InnerXml
  nameWithType: XmlDocument.InnerXml
  fullName: System.Xml.XmlDocument.InnerXml
- uid: System.Xml.XmlDocument.IsReadOnly
  parent: System.Xml.XmlDocument
  isExternal: false
  name: IsReadOnly
  nameWithType: XmlDocument.IsReadOnly
  fullName: System.Xml.XmlDocument.IsReadOnly
- uid: System.Xml.XmlDocument.Load(System.IO.Stream)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Load(Stream)
  nameWithType: XmlDocument.Load(Stream)
  fullName: System.Xml.XmlDocument.Load(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.XmlDocument.Load(System.IO.TextReader)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Load(TextReader)
  nameWithType: XmlDocument.Load(TextReader)
  fullName: System.Xml.XmlDocument.Load(TextReader)
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Xml.XmlDocument.Load(System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Load(String)
  nameWithType: XmlDocument.Load(String)
  fullName: System.Xml.XmlDocument.Load(String)
- uid: System.Xml.XmlDocument.Load(System.Xml.XmlReader)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Load(XmlReader)
  nameWithType: XmlDocument.Load(XmlReader)
  fullName: System.Xml.XmlDocument.Load(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.XmlDocument.LoadXml(System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: LoadXml(String)
  nameWithType: XmlDocument.LoadXml(String)
  fullName: System.Xml.XmlDocument.LoadXml(String)
- uid: System.Xml.XmlDocument.LocalName
  parent: System.Xml.XmlDocument
  isExternal: false
  name: LocalName
  nameWithType: XmlDocument.LocalName
  fullName: System.Xml.XmlDocument.LocalName
- uid: System.Xml.XmlDocument.Name
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Name
  nameWithType: XmlDocument.Name
  fullName: System.Xml.XmlDocument.Name
- uid: System.Xml.XmlDocument.NameTable
  parent: System.Xml.XmlDocument
  isExternal: false
  name: NameTable
  nameWithType: XmlDocument.NameTable
  fullName: System.Xml.XmlDocument.NameTable
- uid: System.Xml.XmlDocument.NodeChanged
  parent: System.Xml.XmlDocument
  isExternal: false
  name: NodeChanged
  nameWithType: XmlDocument.NodeChanged
  fullName: System.Xml.XmlDocument.NodeChanged
- uid: System.Xml.XmlNodeChangedEventHandler
  parent: System.Xml
  isExternal: false
  name: XmlNodeChangedEventHandler
  nameWithType: XmlNodeChangedEventHandler
  fullName: System.Xml.XmlNodeChangedEventHandler
- uid: System.Xml.XmlDocument.NodeChanging
  parent: System.Xml.XmlDocument
  isExternal: false
  name: NodeChanging
  nameWithType: XmlDocument.NodeChanging
  fullName: System.Xml.XmlDocument.NodeChanging
- uid: System.Xml.XmlDocument.NodeInserted
  parent: System.Xml.XmlDocument
  isExternal: false
  name: NodeInserted
  nameWithType: XmlDocument.NodeInserted
  fullName: System.Xml.XmlDocument.NodeInserted
- uid: System.Xml.XmlDocument.NodeInserting
  parent: System.Xml.XmlDocument
  isExternal: false
  name: NodeInserting
  nameWithType: XmlDocument.NodeInserting
  fullName: System.Xml.XmlDocument.NodeInserting
- uid: System.Xml.XmlDocument.NodeRemoved
  parent: System.Xml.XmlDocument
  isExternal: false
  name: NodeRemoved
  nameWithType: XmlDocument.NodeRemoved
  fullName: System.Xml.XmlDocument.NodeRemoved
- uid: System.Xml.XmlDocument.NodeRemoving
  parent: System.Xml.XmlDocument
  isExternal: false
  name: NodeRemoving
  nameWithType: XmlDocument.NodeRemoving
  fullName: System.Xml.XmlDocument.NodeRemoving
- uid: System.Xml.XmlDocument.NodeType
  parent: System.Xml.XmlDocument
  isExternal: false
  name: NodeType
  nameWithType: XmlDocument.NodeType
  fullName: System.Xml.XmlDocument.NodeType
- uid: System.Xml.XmlDocument.OwnerDocument
  parent: System.Xml.XmlDocument
  isExternal: false
  name: OwnerDocument
  nameWithType: XmlDocument.OwnerDocument
  fullName: System.Xml.XmlDocument.OwnerDocument
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml.XmlDocument.ParentNode
  parent: System.Xml.XmlDocument
  isExternal: false
  name: ParentNode
  nameWithType: XmlDocument.ParentNode
  fullName: System.Xml.XmlDocument.ParentNode
- uid: System.Xml.XmlDocument.PreserveWhitespace
  parent: System.Xml.XmlDocument
  isExternal: false
  name: PreserveWhitespace
  nameWithType: XmlDocument.PreserveWhitespace
  fullName: System.Xml.XmlDocument.PreserveWhitespace
- uid: System.Xml.XmlDocument.ReadNode(System.Xml.XmlReader)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: ReadNode(XmlReader)
  nameWithType: XmlDocument.ReadNode(XmlReader)
  fullName: System.Xml.XmlDocument.ReadNode(XmlReader)
- uid: System.Xml.XmlDocument.Save(System.IO.Stream)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Save(Stream)
  nameWithType: XmlDocument.Save(Stream)
  fullName: System.Xml.XmlDocument.Save(Stream)
- uid: System.Xml.XmlDocument.Save(System.IO.TextWriter)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Save(TextWriter)
  nameWithType: XmlDocument.Save(TextWriter)
  fullName: System.Xml.XmlDocument.Save(TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Xml.XmlDocument.Save(System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Save(String)
  nameWithType: XmlDocument.Save(String)
  fullName: System.Xml.XmlDocument.Save(String)
- uid: System.Xml.XmlDocument.Save(System.Xml.XmlWriter)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Save(XmlWriter)
  nameWithType: XmlDocument.Save(XmlWriter)
  fullName: System.Xml.XmlDocument.Save(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.XmlDocument.SchemaInfo
  parent: System.Xml.XmlDocument
  isExternal: false
  name: SchemaInfo
  nameWithType: XmlDocument.SchemaInfo
  fullName: System.Xml.XmlDocument.SchemaInfo
- uid: System.Xml.Schema.IXmlSchemaInfo
  parent: System.Xml.Schema
  isExternal: false
  name: IXmlSchemaInfo
  nameWithType: IXmlSchemaInfo
  fullName: System.Xml.Schema.IXmlSchemaInfo
- uid: System.Xml.XmlDocument.Schemas
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Schemas
  nameWithType: XmlDocument.Schemas
  fullName: System.Xml.XmlDocument.Schemas
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Validate(ValidationEventHandler)
  nameWithType: XmlDocument.Validate(ValidationEventHandler)
  fullName: System.Xml.XmlDocument.Validate(ValidationEventHandler)
- uid: System.Xml.Schema.ValidationEventHandler
  parent: System.Xml.Schema
  isExternal: false
  name: ValidationEventHandler
  nameWithType: ValidationEventHandler
  fullName: System.Xml.Schema.ValidationEventHandler
- uid: System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlNode)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Validate(ValidationEventHandler,XmlNode)
  nameWithType: XmlDocument.Validate(ValidationEventHandler,XmlNode)
  fullName: System.Xml.XmlDocument.Validate(ValidationEventHandler,XmlNode)
- uid: System.Xml.XmlDocument.WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlDocument.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlDocument.WriteContentTo(XmlWriter)
- uid: System.Xml.XmlDocument.WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: WriteTo(XmlWriter)
  nameWithType: XmlDocument.WriteTo(XmlWriter)
  fullName: System.Xml.XmlDocument.WriteTo(XmlWriter)
- uid: System.Xml.XmlDocument.XmlResolver
  parent: System.Xml.XmlDocument
  isExternal: false
  name: XmlResolver
  nameWithType: XmlDocument.XmlResolver
  fullName: System.Xml.XmlDocument.XmlResolver
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Xml.XmlDocument.#ctor*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument.XmlDocument
- uid: System.Xml.XmlDocument.BaseURI*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: BaseURI
  nameWithType: XmlDocument.BaseURI
- uid: System.Xml.XmlDocument.CloneNode*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CloneNode
  nameWithType: XmlDocument.CloneNode
- uid: System.Xml.XmlDocument.CreateAttribute*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateAttribute
  nameWithType: XmlDocument.CreateAttribute
- uid: System.Xml.XmlDocument.CreateCDataSection*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateCDataSection
  nameWithType: XmlDocument.CreateCDataSection
- uid: System.Xml.XmlDocument.CreateComment*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateComment
  nameWithType: XmlDocument.CreateComment
- uid: System.Xml.XmlDocument.CreateDefaultAttribute*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateDefaultAttribute
  nameWithType: XmlDocument.CreateDefaultAttribute
- uid: System.Xml.XmlDocument.CreateDocumentFragment*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateDocumentFragment
  nameWithType: XmlDocument.CreateDocumentFragment
- uid: System.Xml.XmlDocument.CreateDocumentType*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateDocumentType
  nameWithType: XmlDocument.CreateDocumentType
- uid: System.Xml.XmlDocument.CreateElement*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateElement
  nameWithType: XmlDocument.CreateElement
- uid: System.Xml.XmlDocument.CreateEntityReference*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateEntityReference
  nameWithType: XmlDocument.CreateEntityReference
- uid: System.Xml.XmlDocument.CreateNavigator*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateNavigator
  nameWithType: XmlDocument.CreateNavigator
- uid: System.Xml.XmlDocument.CreateNode*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateNode
  nameWithType: XmlDocument.CreateNode
- uid: System.Xml.XmlDocument.CreateProcessingInstruction*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateProcessingInstruction
  nameWithType: XmlDocument.CreateProcessingInstruction
- uid: System.Xml.XmlDocument.CreateSignificantWhitespace*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateSignificantWhitespace
  nameWithType: XmlDocument.CreateSignificantWhitespace
- uid: System.Xml.XmlDocument.CreateTextNode*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateTextNode
  nameWithType: XmlDocument.CreateTextNode
- uid: System.Xml.XmlDocument.CreateWhitespace*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateWhitespace
  nameWithType: XmlDocument.CreateWhitespace
- uid: System.Xml.XmlDocument.CreateXmlDeclaration*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateXmlDeclaration
  nameWithType: XmlDocument.CreateXmlDeclaration
- uid: System.Xml.XmlDocument.DocumentElement*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: DocumentElement
  nameWithType: XmlDocument.DocumentElement
- uid: System.Xml.XmlDocument.DocumentType*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: DocumentType
  nameWithType: XmlDocument.DocumentType
- uid: System.Xml.XmlDocument.GetElementById*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: GetElementById
  nameWithType: XmlDocument.GetElementById
- uid: System.Xml.XmlDocument.GetElementsByTagName*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: GetElementsByTagName
  nameWithType: XmlDocument.GetElementsByTagName
- uid: System.Xml.XmlDocument.Implementation*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Implementation
  nameWithType: XmlDocument.Implementation
- uid: System.Xml.XmlDocument.ImportNode*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: ImportNode
  nameWithType: XmlDocument.ImportNode
- uid: System.Xml.XmlDocument.InnerText*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: InnerText
  nameWithType: XmlDocument.InnerText
- uid: System.Xml.XmlDocument.InnerXml*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: InnerXml
  nameWithType: XmlDocument.InnerXml
- uid: System.Xml.XmlDocument.IsReadOnly*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: IsReadOnly
  nameWithType: XmlDocument.IsReadOnly
- uid: System.Xml.XmlDocument.Load*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Load
  nameWithType: XmlDocument.Load
- uid: System.Xml.XmlDocument.LoadXml*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: LoadXml
  nameWithType: XmlDocument.LoadXml
- uid: System.Xml.XmlDocument.LocalName*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: LocalName
  nameWithType: XmlDocument.LocalName
- uid: System.Xml.XmlDocument.Name*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Name
  nameWithType: XmlDocument.Name
- uid: System.Xml.XmlDocument.NameTable*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: NameTable
  nameWithType: XmlDocument.NameTable
- uid: System.Xml.XmlDocument.NodeType*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: NodeType
  nameWithType: XmlDocument.NodeType
- uid: System.Xml.XmlDocument.OwnerDocument*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: OwnerDocument
  nameWithType: XmlDocument.OwnerDocument
- uid: System.Xml.XmlDocument.ParentNode*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: ParentNode
  nameWithType: XmlDocument.ParentNode
- uid: System.Xml.XmlDocument.PreserveWhitespace*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: PreserveWhitespace
  nameWithType: XmlDocument.PreserveWhitespace
- uid: System.Xml.XmlDocument.ReadNode*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: ReadNode
  nameWithType: XmlDocument.ReadNode
- uid: System.Xml.XmlDocument.Save*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Save
  nameWithType: XmlDocument.Save
- uid: System.Xml.XmlDocument.SchemaInfo*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: SchemaInfo
  nameWithType: XmlDocument.SchemaInfo
- uid: System.Xml.XmlDocument.Schemas*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Schemas
  nameWithType: XmlDocument.Schemas
- uid: System.Xml.XmlDocument.Validate*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Validate
  nameWithType: XmlDocument.Validate
- uid: System.Xml.XmlDocument.WriteContentTo*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: WriteContentTo
  nameWithType: XmlDocument.WriteContentTo
- uid: System.Xml.XmlDocument.WriteTo*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: WriteTo
  nameWithType: XmlDocument.WriteTo
- uid: System.Xml.XmlDocument.XmlResolver*
  parent: System.Xml.XmlDocument
  isExternal: false
  name: XmlResolver
  nameWithType: XmlDocument.XmlResolver
