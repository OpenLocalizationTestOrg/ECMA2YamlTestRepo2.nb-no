### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Persistence.PersistenceProvider
  id: PersistenceProvider
  children:
  - System.ServiceModel.Persistence.PersistenceProvider.#ctor(System.Guid)
  - System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)
  - System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)
  - System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)
  - System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.Id
  - System.ServiceModel.Persistence.PersistenceProvider.Load(System.TimeSpan)
  - System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  - System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)
  langs:
  - csharp
  name: PersistenceProvider
  nameWithType: PersistenceProvider
  fullName: System.ServiceModel.Persistence.PersistenceProvider
  type: Class
  summary: "Den abstrakt basisklassen som alle varig tjeneste utholdenhet leverandører er avledet fra."
  remarks: "Brukere kan opprette klasser som er avledet fra denne typen til å opprette varig tjeneste utholdenhet leverandører som bruker egendefinert utholdenhet lagre, for eksempel tredjeparts databaser, filsystemet eller systemer ekstern tilgang. Hvis du vil opprette en system-leverte implementering av denne typen som bruker Microsoft SQL Server som en vedvarende lager, kan du se <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory>.</xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory>      > [!NOTE] > Når utholdenhet leverandøren implementeringer, den er viktig å opprettholde trådens opprinnelige identitet i den nye leverandøren metoder (for eksempel <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A>.</xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A> Ellers kan sikkerhet loopholes opprettes fordi operasjoner vil deretter kjøres under feil identitet."
  example:
  - For an implementation of this type that uses the file system as a persistence store, see the FilePersistenceProviderFactory.cs file in the DurableServiceFactory SDK sample.
  syntax:
    content: >-
      [System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")]

      public abstract class PersistenceProvider : System.ServiceModel.Channels.CommunicationObject
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.#ctor(System.Guid)
  id: '#ctor(System.Guid)'
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: PersistenceProvider(Guid)
  nameWithType: PersistenceProvider.PersistenceProvider(Guid)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.PersistenceProvider(Guid)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Når implementert i en avledet klasse, initialiserer en ny forekomst av den <xref href=&quot;System.ServiceModel.Persistence.PersistenceProvider&quot;> </xref> klasse."
  remarks: ''
  example:
  - "The following code demonstrates how to use the <xref:System.ServiceModel.Persistence.PersistenceProvider> constructor. This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]the DurableServiceFactory SDK sample.  \n  \n [!code-cs[PersistenceProvider#0](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#0)]"
  syntax:
    content: protected PersistenceProvider (Guid id);
    parameters:
    - id: id
      type: System.Guid
      description: "Den unike identifikatoren for tjenesten Tilstandsdataene lagres."
  overload: System.ServiceModel.Persistence.PersistenceProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: PersistenceProvider.BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Representerer begynnelsen av Create fase når implementert i en avledet klasse. Opprett fase oppstår når opprettes først tjenesten forekomsten postene i vedvarende lager."
  remarks: ''
  example:
  - "The following code demonstrates how to implement the BeginCreate method.  \n  \n [!code-cs[PersistenceProvider#14](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#14)]"
  syntax:
    content: public abstract IAsyncResult BeginCreate (object instance, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: "Den faktiske forekomst-tilstanden."
    - id: timeout
      type: System.TimeSpan
      description: "Hvor lang tid før utholdenhet leverandøren avbryter forsøket."
    - id: callback
      type: System.AsyncCallback
      description: "Metoden som skal kalles når operasjonen er fullført."
    - id: state
      type: System.Object
      description: "Et gitt objekt som skiller denne bestemt asynkrone operasjonen av andre operasjoner."
    return:
      type: System.IAsyncResult
      description: "Statusen for BeginCreate asynkrone metodekallet."
  overload: System.ServiceModel.Persistence.PersistenceProvider.BeginCreate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: BeginDelete(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: PersistenceProvider.BeginDelete(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(Object,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Representerer begynnelsen av Delete-fase når implementert i en avledet klasse. Slett fase oppstår når data fra tilstand er slettet permanent fra vedvarende lager."
  remarks: ''
  example:
  - "The following code demonstrates how to implement the `BeginDelete` method. This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]the DurableServiceFactory SDK sample.  \n  \n [!code-cs[PersistenceProvider#6](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#6)]"
  syntax:
    content: public abstract IAsyncResult BeginDelete (object instance, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: "Den faktiske forekomst-tilstanden."
    - id: timeout
      type: System.TimeSpan
      description: "Hvor lang tid før utholdenhet leverandøren avbryter forsøket."
    - id: callback
      type: System.AsyncCallback
      description: "Metoden som skal kalles når operasjonen er fullført."
    - id: state
      type: System.Object
      description: "Et gitt objekt som skiller denne bestemt asynkrone operasjonen av andre operasjoner."
    return:
      type: System.IAsyncResult
      description: "Statusen for BeginDelete asynkrone metodekallet."
  overload: System.ServiceModel.Persistence.PersistenceProvider.BeginDelete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: BeginLoad(TimeSpan,AsyncCallback,Object)
  nameWithType: PersistenceProvider.BeginLoad(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Representerer begynnelsen av Last inn fase når implementert i en avledet klasse. Last inn fase oppstår når dataene er lastet inn i utholdenhet leverandøren fra vedvarende lager."
  remarks: ''
  example:
  - "The following code demonstrates how to implement the `BeginLoad` method. This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]the DurableServiceFactory SDK sample.  \n  \n [!code-cs[PersistenceProvider#7](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#7)]"
  syntax:
    content: public abstract IAsyncResult BeginLoad (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Hvor lang tid før utholdenhet leverandøren avbryter forsøket."
    - id: callback
      type: System.AsyncCallback
      description: "Metoden som skal kalles når operasjonen er fullført."
    - id: state
      type: System.Object
      description: "Et gitt objekt som skiller denne bestemt asynkrone operasjonen av andre operasjoner."
    return:
      type: System.IAsyncResult
      description: "Statusen for BeginLoad asynkrone metodekallet."
  overload: System.ServiceModel.Persistence.PersistenceProvider.BeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  id: BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  nameWithType: PersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Representerer begynnelsen av LoadIfChanged fase når implementert i en avledet klasse. LoadIfChanged fase oppstår når dataene er lastet inn i utholdenhet leverandøren fra vedvarende lager, og Tilstandsdataene i vedvarende lager er endret."
  remarks: ''
  example:
  - "The following code demonstrates how to implement the BeginLoadIfChanged method.  \n  \n [!code-cs[PersistenceProvider#11](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#11)]"
  syntax:
    content: public virtual IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Hvor lang tid før utholdenhet leverandøren avbryter forsøket."
    - id: instanceToken
      type: System.Object
      description: "Token ble returnert av en tidligere <> </> *> eller <> </> *> som representerer den gjeldende tilstanden holdes av oppkalleren."
    - id: callback
      type: System.AsyncCallback
      description: "Metoden som skal kalles når operasjonen er fullført."
    - id: state
      type: System.Object
      description: "Et gitt objekt som skiller denne bestemt asynkrone operasjonen av andre operasjoner."
    return:
      type: System.IAsyncResult
      description: "Statusen for BeginLoadIfChanged asynkrone metodekallet."
  overload: System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: PersistenceProvider.BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Representerer begynnelsen av oppdateringen fase når implementert i en avledet klasse. Oppdateringen fase oppstår når tjenesten dataene oppdateres i vedvarende lager."
  remarks: ''
  example:
  - "The following code demonstrates how to implement the BeginUpdate method.  \n  \n [!code-cs[PersistenceProvider#17](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#17)]"
  syntax:
    content: public abstract IAsyncResult BeginUpdate (object instance, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: "Den faktiske forekomst-tilstanden."
    - id: timeout
      type: System.TimeSpan
      description: "Hvor lang tid før utholdenhet leverandøren avbryter forsøket."
    - id: callback
      type: System.AsyncCallback
      description: "Metoden som skal kalles når operasjonen er fullført."
    - id: state
      type: System.Object
      description: "Et gitt objekt som skiller denne bestemt asynkrone operasjonen av andre operasjoner."
    return:
      type: System.IAsyncResult
      description: "Statusen for BeginUpdate asynkrone metodekallet."
  overload: System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)
  id: Create(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: Create(Object,TimeSpan)
  nameWithType: PersistenceProvider.Create(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.Create(Object,TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Når implementert i en avledet klasse, oppretter du en tjeneste tilstand post i vedvarende lager."
  remarks: ''
  example:
  - "The following code demonstrates how to implement the Create method.  \n  \n [!code-cs[PersistenceProvider#15](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#15)]"
  syntax:
    content: public abstract object Create (object instance, TimeSpan timeout);
    parameters:
    - id: instance
      type: System.Object
      description: "Den faktiske forekomst-tilstanden."
    - id: timeout
      type: System.TimeSpan
      description: "Hvor lang tid før utholdenhet leverandøren avbryter forsøket."
    return:
      type: System.Object
      description: "Forekomsten tokenet tilsvarer tilstanden nettopp lagret. Dette kan sendes til <xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*>å finne ut om tilstand i vedvarende lager er forskjellig fra tilstanden når Opprett ble kalt.</xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*>"
  overload: System.ServiceModel.Persistence.PersistenceProvider.Create*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)
  id: Delete(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: Delete(Object,TimeSpan)
  nameWithType: PersistenceProvider.Delete(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.Delete(Object,TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Når implementert i en avledet klasse, slettes permanent tjenesten statusinformasjon fra vedvarende lager."
  remarks: ''
  example:
  - "The following code demonstrates how to implement the Delete method. This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]the DurableServiceFactory SDK sample.  \n  \n [!code-cs[PersistenceProvider#9](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#9)]"
  syntax:
    content: public abstract void Delete (object instance, TimeSpan timeout);
    parameters:
    - id: instance
      type: System.Object
      description: "Den faktiske forekomst-tilstanden."
    - id: timeout
      type: System.TimeSpan
      description: "Hvor lang tid før utholdenhet leverandøren avbryter forsøket."
  overload: System.ServiceModel.Persistence.PersistenceProvider.Delete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)
  id: EndCreate(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: EndCreate(IAsyncResult)
  nameWithType: PersistenceProvider.EndCreate(IAsyncResult)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.EndCreate(IAsyncResult)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Representerer slutten på Opprett fase når implementert i en avledet klasse. Opprett fase oppstår når opprettes først tjenesten tilstand postene i vedvarende lager."
  remarks: ''
  example:
  - "The following code demonstrates how to implement the EndCreate method.  \n  \n [!code-cs[PersistenceProvider#16](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#16)]"
  syntax:
    content: public abstract object EndCreate (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "En referanse til resultatet av operasjonen."
    return:
      type: System.Object
      description: "Forekomsten tokenet tilsvarer tilstanden nettopp lagret. Dette kan sendes til <xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*>å finne ut om tilstand i vedvarende lager er forskjellig fra tilstanden når Opprett ble kalt.</xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*>"
  overload: System.ServiceModel.Persistence.PersistenceProvider.EndCreate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)
  id: EndDelete(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: EndDelete(IAsyncResult)
  nameWithType: PersistenceProvider.EndDelete(IAsyncResult)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.EndDelete(IAsyncResult)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Representerer slutten av Delete-fase når implementert i en avledet klasse. Slett fase oppstår når dataene slettes permanent fra vedvarende lager."
  remarks: ''
  example:
  - "The following code demonstrates how to implement the EndDelete method. This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file. For more information, see the DurableServiceFactory SDK sample.  \n  \n [!code-cs[PersistenceProvider#5](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#5)]"
  syntax:
    content: public abstract void EndDelete (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "En referanse til resultatet av operasjonen."
  overload: System.ServiceModel.Persistence.PersistenceProvider.EndDelete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)
  id: EndLoad(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: EndLoad(IAsyncResult)
  nameWithType: PersistenceProvider.EndLoad(IAsyncResult)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.EndLoad(IAsyncResult)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Representerer slutten på Last inn fase når implementert i en avledet klasse. Last inn fase oppstår når dataene er lastet inn i utholdenhet leverandøren fra vedvarende lager."
  remarks: ''
  example:
  - "The following code demonstrates how to use the `EndLoad` method. This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]the DurableServiceFactory SDK sample.  \n  \n [!code-cs[PersistenceProvider#1](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#1)]"
  syntax:
    content: public abstract object EndLoad (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "En referanse til resultatet av operasjonen."
    return:
      type: System.Object
      description: "Tilstandsinformasjon for tjenesten."
  overload: System.ServiceModel.Persistence.PersistenceProvider.EndLoad*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)
  id: EndLoadIfChanged(System.IAsyncResult,System.Object@)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: EndLoadIfChanged(IAsyncResult,Object)
  nameWithType: PersistenceProvider.EndLoadIfChanged(IAsyncResult,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(IAsyncResult,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Representerer slutten av LoadIfChanged fase når implementert i en avledet klasse. LoadIfChanged fase oppstår når dataene er lastet inn i utholdenhet leverandøren fra vedvarende lager, og Tilstandsdataene i vedvarende lager er endret."
  remarks: ''
  example:
  - "The following code demonstrates how to implement the EndLoadIfChanged method.  \n  \n [!code-cs[PersistenceProvider#12](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#12)]"
  syntax:
    content: public virtual bool EndLoadIfChanged (IAsyncResult result, out object instance);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "En referanse til resultatet av operasjonen."
    - id: instance
      type: System.Object
      description: "Den faktiske forekomst-tilstanden."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis forekomsten <xref uid=&quot;langword_csharp_out&quot; name=&quot;out&quot; href=&quot;&quot;> </xref> parameter er angitt med den siste kopien fra vedvarende lager; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Hvis tilstanden bufret lokalt allerede er oppdatert."
  overload: System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)
  id: EndUpdate(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: EndUpdate(IAsyncResult)
  nameWithType: PersistenceProvider.EndUpdate(IAsyncResult)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(IAsyncResult)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Representerer slutten av oppdateringen fase. Oppdateringen fase oppstår når tjenesten tilstand poster oppdateres i vedvarende lager."
  remarks: ''
  example:
  - "The following code demonstrates how to implement the EndUpdate method.  \n  \n [!code-cs[PersistenceProvider#19](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#19)]"
  syntax:
    content: public abstract object EndUpdate (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "En referanse til resultatet av operasjonen."
    return:
      type: System.Object
      description: "Forekomsten tokenet tilsvarer tilstanden nettopp lagret. Dette kan sendes til <xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*>å finne ut om tilstand i vedvarende lager er forskjellig fra tilstanden når Opprett ble kalt.</xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*>"
  overload: System.ServiceModel.Persistence.PersistenceProvider.EndUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.Id
  id: Id
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: Id
  nameWithType: PersistenceProvider.Id
  fullName: System.ServiceModel.Persistence.PersistenceProvider.Id
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Representerer den <xref:System.Guid>tilknyttet denne forekomsten.</xref:System.Guid>"
  remarks: ''
  example:
  - "The following code demonstrates how to use the Id property.  \n  \n [!code-cs[PersistenceProvider#10](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#10)]"
  syntax:
    content: public Guid Id { get; }
    return:
      type: System.Guid
      description: "GUIDEN som er tilknyttet denne forekomsten."
  overload: System.ServiceModel.Persistence.PersistenceProvider.Id*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.Load(System.TimeSpan)
  id: Load(System.TimeSpan)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: Load(TimeSpan)
  nameWithType: PersistenceProvider.Load(TimeSpan)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.Load(TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Når implementert i en avledet klasse, laster du informasjon om tjenesten fra vedvarende lager."
  remarks: "Endringer gjort sikkerhetstokenet i Load-metoden, om ikke gjenopprettet, fungere for resten av den meldingsbehandlingen. Dette betyr at den tjenesteoperasjon brukerkode, svar meldingsbanen til dispatcher, i tillegg til eventuelle feil baner, kjøres i endret sikkerhetskonteksten."
  example:
  - "The following code demonstrates how to implement the Load method. This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]the DurableServiceFactory SDK sample.  \n  \n [!code-cs[PersistenceProvider#3](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#3)]"
  syntax:
    content: public abstract object Load (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Hvor lang tid før utholdenhet leverandøren avbryter forsøket."
    return:
      type: System.Object
      description: "Tilstanden lastes inn forekomst."
  overload: System.ServiceModel.Persistence.PersistenceProvider.Load*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  id: LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: LoadIfChanged(TimeSpan,Object,Object)
  nameWithType: PersistenceProvider.LoadIfChanged(TimeSpan,Object,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(TimeSpan,Object,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Når implementert i en avledet klasse, laster du informasjon om tjenesten fra vedvarende lager hvis disse dataene er endret."
  remarks: ''
  example:
  - "The following code demonstrates how to implement the LoadIfChanged method.  \n  \n [!code-cs[PersistenceProvider#13](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#13)]"
  syntax:
    content: public virtual bool LoadIfChanged (TimeSpan timeout, object instanceToken, out object instance);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Hvor lang tid før utholdenhet leverandøren avbryter forsøket."
    - id: instanceToken
      type: System.Object
      description: "Token ble returnert av en tidligere <> </> *> eller <> </> *>, som representerer den gjeldende tilstanden holdes av oppkalleren."
    - id: instance
      type: System.Object
      description: "Den faktiske forekomst-tilstanden."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den <code> instance </code> <xref uid=&quot;langword_csharp_out&quot; name=&quot;out&quot; href=&quot;&quot;> </xref> parameter er angitt med den siste kopien fra vedvarende lager; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Hvis tilstanden bufret lokalt allerede er oppdatert."
  overload: System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)
  id: Update(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: Update(Object,TimeSpan)
  nameWithType: PersistenceProvider.Update(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.Update(Object,TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Når implementert i en avledet klasse, behandle oppdateringer tilstand oppføringene i vedvarende lager."
  remarks: ''
  example:
  - "The following code demonstrates how to implement the Update method.  \n  \n [!code-cs[PersistenceProvider#18](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#18)]"
  syntax:
    content: public abstract object Update (object instance, TimeSpan timeout);
    parameters:
    - id: instance
      type: System.Object
      description: "Den faktiske forekomst-tilstanden."
    - id: timeout
      type: System.TimeSpan
      description: "Hvor lang tid før utholdenhet leverandøren avbryter forsøket."
    return:
      type: System.Object
      description: "Forekomsten tokenet tilsvarer tilstanden nettopp lagret. Dette kan sendes til <xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*>å finne ut om tilstand i vedvarende lager er forskjellig fra tilstanden når Opprett ble kalt.</xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*>"
  overload: System.ServiceModel.Persistence.PersistenceProvider.Update*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: System.ServiceModel.Channels.CommunicationObject
- uid: System.ServiceModel.Persistence.PersistenceProvider.#ctor(System.Guid)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: PersistenceProvider(Guid)
  nameWithType: PersistenceProvider.PersistenceProvider(Guid)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.PersistenceProvider(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: PersistenceProvider.BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(Object,TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: BeginDelete(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: PersistenceProvider.BeginDelete(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(Object,TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: BeginLoad(TimeSpan,AsyncCallback,Object)
  nameWithType: PersistenceProvider.BeginLoad(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  nameWithType: PersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: PersistenceProvider.BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: Create(Object,TimeSpan)
  nameWithType: PersistenceProvider.Create(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.Create(Object,TimeSpan)
- uid: System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: Delete(Object,TimeSpan)
  nameWithType: PersistenceProvider.Delete(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.Delete(Object,TimeSpan)
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: EndCreate(IAsyncResult)
  nameWithType: PersistenceProvider.EndCreate(IAsyncResult)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.EndCreate(IAsyncResult)
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: EndDelete(IAsyncResult)
  nameWithType: PersistenceProvider.EndDelete(IAsyncResult)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.EndDelete(IAsyncResult)
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: EndLoad(IAsyncResult)
  nameWithType: PersistenceProvider.EndLoad(IAsyncResult)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.EndLoad(IAsyncResult)
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: EndLoadIfChanged(IAsyncResult,Object)
  nameWithType: PersistenceProvider.EndLoadIfChanged(IAsyncResult,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(IAsyncResult,Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: EndUpdate(IAsyncResult)
  nameWithType: PersistenceProvider.EndUpdate(IAsyncResult)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(IAsyncResult)
- uid: System.ServiceModel.Persistence.PersistenceProvider.Id
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: Id
  nameWithType: PersistenceProvider.Id
  fullName: System.ServiceModel.Persistence.PersistenceProvider.Id
- uid: System.ServiceModel.Persistence.PersistenceProvider.Load(System.TimeSpan)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: Load(TimeSpan)
  nameWithType: PersistenceProvider.Load(TimeSpan)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.Load(TimeSpan)
- uid: System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: LoadIfChanged(TimeSpan,Object,Object)
  nameWithType: PersistenceProvider.LoadIfChanged(TimeSpan,Object,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(TimeSpan,Object,Object)
- uid: System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: Update(Object,TimeSpan)
  nameWithType: PersistenceProvider.Update(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.Update(Object,TimeSpan)
- uid: System.ServiceModel.Persistence.PersistenceProvider.#ctor*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: PersistenceProvider
  nameWithType: PersistenceProvider.PersistenceProvider
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginCreate*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: BeginCreate
  nameWithType: PersistenceProvider.BeginCreate
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginDelete*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: BeginDelete
  nameWithType: PersistenceProvider.BeginDelete
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginLoad*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: BeginLoad
  nameWithType: PersistenceProvider.BeginLoad
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: BeginLoadIfChanged
  nameWithType: PersistenceProvider.BeginLoadIfChanged
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: BeginUpdate
  nameWithType: PersistenceProvider.BeginUpdate
- uid: System.ServiceModel.Persistence.PersistenceProvider.Create*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: Create
  nameWithType: PersistenceProvider.Create
- uid: System.ServiceModel.Persistence.PersistenceProvider.Delete*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: Delete
  nameWithType: PersistenceProvider.Delete
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndCreate*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: EndCreate
  nameWithType: PersistenceProvider.EndCreate
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndDelete*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: EndDelete
  nameWithType: PersistenceProvider.EndDelete
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndLoad*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: EndLoad
  nameWithType: PersistenceProvider.EndLoad
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: EndLoadIfChanged
  nameWithType: PersistenceProvider.EndLoadIfChanged
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndUpdate*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: EndUpdate
  nameWithType: PersistenceProvider.EndUpdate
- uid: System.ServiceModel.Persistence.PersistenceProvider.Id*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: Id
  nameWithType: PersistenceProvider.Id
- uid: System.ServiceModel.Persistence.PersistenceProvider.Load*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: Load
  nameWithType: PersistenceProvider.Load
- uid: System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: LoadIfChanged
  nameWithType: PersistenceProvider.LoadIfChanged
- uid: System.ServiceModel.Persistence.PersistenceProvider.Update*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: Update
  nameWithType: PersistenceProvider.Update
