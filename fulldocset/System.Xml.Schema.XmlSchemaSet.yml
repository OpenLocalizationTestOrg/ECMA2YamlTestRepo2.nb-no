### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaSet
  id: XmlSchemaSet
  children:
  - System.Xml.Schema.XmlSchemaSet.#ctor
  - System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)
  - System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)
  - System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)
  - System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)
  - System.Xml.Schema.XmlSchemaSet.CompilationSettings
  - System.Xml.Schema.XmlSchemaSet.Compile
  - System.Xml.Schema.XmlSchemaSet.Contains(System.String)
  - System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)
  - System.Xml.Schema.XmlSchemaSet.Count
  - System.Xml.Schema.XmlSchemaSet.GlobalAttributes
  - System.Xml.Schema.XmlSchemaSet.GlobalElements
  - System.Xml.Schema.XmlSchemaSet.GlobalTypes
  - System.Xml.Schema.XmlSchemaSet.IsCompiled
  - System.Xml.Schema.XmlSchemaSet.NameTable
  - System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaSet.Schemas
  - System.Xml.Schema.XmlSchemaSet.Schemas(System.String)
  - System.Xml.Schema.XmlSchemaSet.ValidationEventHandler
  - System.Xml.Schema.XmlSchemaSet.XmlResolver
  langs:
  - csharp
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
  type: Class
  summary: "Inneholder en hurtigbuffer for XML-skjema definition language (XSD) skjemaer."
  remarks: "> [!IMPORTANT]>-Bruker ikke skjemaer fra ukjente eller uklarerte kilder eller plasseringer. Gjør det, vil sikkerheten for koden.   >-XML-skjemaer (inkludert innebygde skjemaer) er arvbart sårbar for tjenestenektangrep; ikke godta vilkårene i uklarerte scenarier.   >-Skjemaet feilmeldinger og unntak kan vise sensitiv informasjon om innholdsmodellen eller URI baner til skjemafilen. Pass på at du ikke vise denne informasjonen til uklarerte brukere.   >-Ekstra sikkerhetshensyn dekkes i delen &quot;Sikkerhetshensyn&quot;.       XmlSchemaSet er en hurtigbuffer eller et bibliotek hvor du kan lagre XML-skjema definition language (XSD) skjemaer. XmlSchemaSet forbedrer ytelsen ved hurtigbufring skjemaer i minnet i stedet for å få tilgang til dem fra en fil eller en URL-adresse. Hvert skjema er identifisert av navneområde-URI og plassering som ble angitt når skjemaet ble lagt til i settet. Du bruker den <xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=fullName>skal bruke til å tilordne XmlSchemaSet objektet en XML-leseren til datavalideringen.</xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=fullName>      ## Sikkerhetshensyn - bruker ikke skjemaer fra ukjente eller uklarerte kilder. Gjør det, vil sikkerheten for koden. Eksterne navneområder eller plasseringer som det refereres til i inkludere, løses import og Definer elementer i et skjema i forhold til basis-URIEN for XML-skjemaet som inkluderer eller importerer dem. Hvis for eksempel, inkludert eller import av skjema basis-URIEN er tom eller `null`, eksterne plasseringer er løst i forhold til gjeldende mappe. Den <xref:System.Xml.XmlUrlResolver>klassen brukes til å løse eksterne skjemaer som standard.</xref:System.Xml.XmlUrlResolver> Hvis du vil deaktivere løsing av Inkluder import, og omdefinere elementer i et skjema, kan du angi den <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=fullName>egenskapen `null`.</xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=fullName>      -XmlSchemaSet klassen bruker den <xref:System.Text.RegularExpressions.Regex?displayProperty=fullName>klassen for å analysere og samsvarer med vanlig uttrykk i et XML-skjema.</xref:System.Text.RegularExpressions.Regex?displayProperty=fullName> Validering av mønsterfasetter med vanlig uttrykk i et XML-skjema kan omfatte større CPU-bruk, og bør unngås i scenarier med høy tilgjengelighet.      -Unntak opphøyd som følge av med klassen XmlSchemaSet, for eksempel den <xref:System.Xml.Schema.XmlSchemaException>klassen kan inneholde sensitiv informasjon som skal vises i uklarerte scenarier.</xref:System.Xml.Schema.XmlSchemaException> For eksempel den <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>for en <xref:System.Xml.Schema.XmlSchemaException>returnerer URI-banen til skjemafilen som forårsaket unntaket.</xref:System.Xml.Schema.XmlSchemaException> </xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> Den <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>egenskapen skal ikke vises i uklarerte scenarier.</xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> Unntak skal behandles riktig slik at denne sensitiv informasjon ikke er eksponert i uklarerte scenarier."
  example:
  - "The following example validates an XML file using schemas stored in the XmlSchemaSet. The namespace in the XML file, `urn:bookstore-schema`, identifies which schema in the XmlSchemaSet to use for validation.  \n  \n [!code-cpp[XmlReader_Validate_SchemaSet#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_0_1.cpp)]\n [!code-cs[XmlReader_Validate_SchemaSet#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_0_1.cs)]\n [!code-vb[XmlReader_Validate_SchemaSet#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_0_1.vb)]  \n  \n## Input  \n The sample uses the following two input files.  \n  \n **booksSchemaFail.xml:**  \n  \n [!code-xml[XmlReader_Validate_SchemaSet#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_0_2.xml)]  \n  \n **books.xsd:**  \n  \n [!code-xml[XmlReader_Validate_SchemaSet#3](~/add/codesnippet/xml/t-system.xml.schema.xmls_0_3.xsd)]  \n  \n## Output  \n Validation Error: The element 'book' in namespace 'urn:bookstore-schema' has invalid child element 'author' in namespace 'urn:bookstore-schema'. Expected 'title' in namespace 'urn:bookstore-schema'.  \n  \n Validation Error: The element 'author' in namespace 'urn:bookstore-schema' has invalid child element 'name' in namespace 'urn:bookstore-schema'. Expected 'first-name' in namespace 'urn:bookstore-schema'."
  syntax:
    content: public class XmlSchemaSet
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: XmlSchemaSet()
  nameWithType: XmlSchemaSet.XmlSchemaSet()
  fullName: System.Xml.Schema.XmlSchemaSet.XmlSchemaSet()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> klasse."
  syntax:
    content: public XmlSchemaSet ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaSet.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)
  id: '#ctor(System.Xml.XmlNameTable)'
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: XmlSchemaSet(XmlNameTable)
  nameWithType: XmlSchemaSet.XmlSchemaSet(XmlNameTable)
  fullName: System.Xml.Schema.XmlSchemaSet.XmlSchemaSet(XmlNameTable)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> klassen med den angitte <xref:System.Xml.XmlNameTable>.</xref:System.Xml.XmlNameTable>"
  syntax:
    content: public XmlSchemaSet (System.Xml.XmlNameTable nameTable);
    parameters:
    - id: nameTable
      type: System.Xml.XmlNameTable
      description: "Den <xref:System.Xml.XmlNameTable>objekt som skal brukes.</xref:System.Xml.XmlNameTable>"
  overload: System.Xml.Schema.XmlSchemaSet.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <xref:System.Xml.XmlNameTable>objekt sendt som en parameter er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlNameTable>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)
  id: Add(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Add(XmlSchema)
  nameWithType: XmlSchemaSet.Add(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Legger til den angitte <xref:System.Xml.Schema.XmlSchema>til den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  remarks: "Hvis det <xref:System.Xml.Schema.XmlSchema>objektet finnes allerede i den <xref:System.Xml.Schema.XmlSchemaSet>, Add-metode gjøre noe.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchema>       Funksjonaliteten til denne metoden er identisk med den <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>metoden.</xref:System.Xml.Schema.XmlSchemaSet.Add%2A>"
  syntax:
    content: public System.Xml.Schema.XmlSchema Add (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "Den <xref:System.Xml.Schema.XmlSchema>objektet til å legge til den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
    return:
      type: System.Xml.Schema.XmlSchema
      description: "En <xref:System.Xml.Schema.XmlSchema>objekt hvis den er gyldig.</xref:System.Xml.Schema.XmlSchema> Hvis det ikke er gyldig, og et <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> er angitt, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> returneres og aktuell validering denne hendelsen oppstår. Ellers en <xref href=&quot;System.Xml.Schema.XmlSchemaException&quot;> </xref> er et."
  overload: System.Xml.Schema.XmlSchemaSet.Add*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Skjemaet er ikke gyldig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <xref:System.Xml.Schema.XmlSchema>objekt sendt som en parameter er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)
  id: Add(System.Xml.Schema.XmlSchemaSet)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Add(XmlSchemaSet)
  nameWithType: XmlSchemaSet.Add(XmlSchemaSet)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Legger til alle XML-skjema definition language (XSD) skjemaene i den angitte <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> til den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Før et skjema kan legges til en <xref:System.Xml.Schema.XmlSchemaSet>, den må være vellykket faktatabell.</xref:System.Xml.Schema.XmlSchemaSet> Forhåndsbehandling utfører følgende grunnleggende oppgaver.      1.  Skjemaet er merket av for strukturell gyldighetsperiode i samsvar med reglene i W3C XML-skjemaet, men skjemaet er ikke fullstendig validert.      2.  Referanser til interne og eksterne skjemakomponenter er løst. Importerte eller inkludert skjemaer som ble hentet er også lagt til i <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Importerte skjemaer legges til som separate <xref:System.Xml.Schema.XmlSchema>objekter, og inkludert skjemaer være en del av den inkluderte <xref:System.Xml.Schema.XmlSchema>.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema>       Hvis den <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>for den <xref:System.Xml.Schema.XmlSchemaSet>til å legge til `true`, alle skjemaer i den <xref:System.Xml.Schema.XmlSchemaSet>å legge til er lagt til i <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> Hvis den <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>for den <xref:System.Xml.Schema.XmlSchemaSet>til å legge til `false`, hver skjemaet lagt til faktatabell før som legges til.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> Hvis noen av skjemaene i den nye <xref:System.Xml.Schema.XmlSchemaSet>kan ikke være faktatabell, ingen XML-skjemaer er lagt til; i stedet en <xref:System.Xml.Schema.XmlSchemaException>forårsakes.</xref:System.Xml.Schema.XmlSchemaException> </xref:System.Xml.Schema.XmlSchemaSet> Følgende to kodeeksempel er derfor ikke like.      ```vb#   &quot; First example   schemaSet.Add(schemaSet1)      &quot; Second example   Dim schema As XmlSchema      For Each schema in schemaSet.Schemas()          schemaSet.Add(schema)      Next   ```      ```c#   // First example   schemaSet.Add(schemaSet1);      // Second example   foreach(XmlSchema schema in schemaSet.Schemas())   {       schemaSet.Add(schema);   }   ```De forrige to kodeeksempler er like. I det første eksemplet, hvis det finnes et ugyldig skjema i `schemaSet1` og <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>er satt til `false`, ingen XML-skjemaer er lagt til i `schemaSet`.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> I eksemplet andre flere XML-skjemaer kan legges til `schemaSet` før et ugyldig skjema oppstår og et unntak."
  example:
  - "The following code example illustrates adding schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then adding the <xref:System.Xml.Schema.XmlSchemaSet> to a new <xref:System.Xml.Schema.XmlSchemaSet> using the Add method.  \n  \n```vb#  \nDim schemaSet1 As XmlSchemaSet = New XmlSchemaSet  \nschemaSet1.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\")  \nschemaSet1.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet1.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\")  \n  \nDim schemaSet2 As XmlSchemaSet = New XmlSchemaSet  \nschemaSet2.Add(schemaSet1)  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet1 = new XmlSchemaSet();  \nschemaSet1.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\");  \nschemaSet1.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet1.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\");  \n  \nXmlSchemaSet schemaSet2 = new XmlSchemaSet();  \nschemaSet2.Add(schemaSet1);  \n```"
  syntax:
    content: public void Add (System.Xml.Schema.XmlSchemaSet schemas);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "Den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> objektet."
  overload: System.Xml.Schema.XmlSchemaSet.Add*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Et XML-skjema i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> er ikke gyldig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> objekt sendt som en parameter er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: XmlSchemaSet.Add(String,String)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Legger til XML-skjema definition language (XSD) skjemaet på URL-adressen til den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Før et skjema kan legges til en <xref:System.Xml.Schema.XmlSchemaSet>, den må være vellykket faktatabell.</xref:System.Xml.Schema.XmlSchemaSet> Forhåndsbehandling utfører følgende grunnleggende oppgaver.      1.  Skjemaet er merket av for strukturell gyldighetsperiode i samsvar med reglene i W3C XML-skjemaet, men skjemaet er ikke fullstendig validert.      2.  Referanser til interne og eksterne skjemakomponenter er løst. Importerte eller inkludert skjemaer som ble hentet er også lagt til i <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Importerte skjemaer legges til som separate <xref:System.Xml.Schema.XmlSchema>objekter, og inkludert skjemaer være en del av den inkluderte <xref:System.Xml.Schema.XmlSchema>.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema>       Følgende er viktige hensyn å ta ved Add-metode.      -Legger til et skjema til den <xref:System.Xml.Schema.XmlSchemaSet>med samme target-navneområde og skjemaet plassering-URL som et XML-skjema allerede finnes i den <xref:System.Xml.Schema.XmlSchemaSet>tilbakestiller opprinnelige skjemaobjekt.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet>      -Når et nytt skjema er lagt til en <xref:System.Xml.Schema.XmlSchemaSet>, <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>-egenskapen til det <xref:System.Xml.Schema.XmlSchemaSet>er satt til `false`.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> </xref:System.Xml.Schema.XmlSchemaSet>      – En hvilken som helst include eller Importer elementer i et XML-skjema behandles når Add-metode kalles. Kan ikke løse inkluderer og Importer elementer fører det til en XML-valideringsadvarsel og hvis ingen <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>er angitt for den <xref:System.Xml.Schema.XmlSchemaSet>objektet disse advarsel vil ikke bli rapportert.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>      -Hvis skjemaet med det samme målnavneområdet som et XML-skjema som allerede finnes i den <xref:System.Xml.Schema.XmlSchemaSet>legges til i <xref:System.Xml.Schema.XmlSchemaSet>, både XML-skjemaer er lagt til.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet>          > [!NOTE] > Denne virkemåten er forskjellig fra det foreldet <xref:System.Xml.Schema.XmlSchemaCollection>objektet.</xref:System.Xml.Schema.XmlSchemaCollection>      -Legg til metoden for den <xref:System.Xml.Schema.XmlSchemaSet>har mulighet til å bruke målnavneområdet definert i et skjema, i stedet for å kreve målnavneområdet angis som en parameter når Add-metode kalles.</xref:System.Xml.Schema.XmlSchemaSet> Angir `null` i den `targetNamespace` -parameteren for metoden Add instruerer den <xref:System.Xml.Schema.XmlSchemaSet>bruker målnavneområdet som er definert i skjemaet, som vist i følgende kodeeksempel.</xref:System.Xml.Schema.XmlSchemaSet>      ```vb#   Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()   schemaSet.Add(Nothing, &quot;books.xsd&quot;)      Dim schema As XmlSchema   For Each schema In schemaSet.Schemas(&quot;http://www.contoso.com/books&quot;)       schema.Write(Console.Out)   Next   ```      ```c#   XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(null, &quot;books.xsd&quot;);      foreach(XmlSchema schema in schemaSet.Schemas(&quot;http://www.contoso.com/books&quot;))   {       schema.Write(Console.Out);   }   ```I kodeeksempel ovenfor, `null` er angitt som den `targetNamespace` Add-metode-parameter. Resultatet av `targetNamespace` definert i books.xml filen brukes. Resultatet av å kalle metoden Legg til i dette tilfellet vil være identiske Hvis http://www.contoso.com/books hadde vært angitt som den `targetNamespace` parameteren.      -W3C XML-skjemaet kan skjemaer målet som skal inkluderes i XML-skjemaer med en målnavneområdet som er definert. I dette tilfellet er skjemaet uten en målnavneområde angitt fremtvinges i målnavneområdet inkluderte skjemaet. Inkludert skjemaet behandles som om det har det målnavneområdet som er definert. På samme måte skjemaer mål kan legges til i <xref:System.Xml.Schema.XmlSchemaSet>og fremtvinges i målnavneområde angitt av Add-metode, som vist i eksemplet.</xref:System.Xml.Schema.XmlSchemaSet>      ```   <xs:schema xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;>       <xs:element name=&quot;A&quot; type=&quot;xs:string&quot; />   </xs:schema>   ```Hvis skjemaet ovenfor legges til i <xref:System.Xml.Schema.XmlSchemaSet>med target-navneområdet http://www.contoso.com/new/targetnamespace (som vises i koden nedenfor), behandles som om målnavneområdet er angitt i skjemaet ble `http://www.contoso.com/new/targetnamespace`.</xref:System.Xml.Schema.XmlSchemaSet>      ```vb#   Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()   schemaSet.Add(&quot;http://www.contoso.com/new/targetnamespace&quot;, &quot;http://www.contoso.com/targetnamespace.xsd&quot;)      Dim schema As XmlSchema      For Each schema in schemaSet.Schemas()          Console.WriteLine(schema.TargetNamespace)         Next   ```      ```c#   XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(&quot;http://www.contoso.com/new/targetnamespace&quot;, &quot;http://www.contoso.com/targetnamespace.xsd&quot;);   foreach(XmlSchema schema in schemaSet.Schemas())   {       Console.WriteLine(schema.TargetNamespace);   }   ```"
  example:
  - "The following code example adds the http://www.contoso.com/books.xsd schema with a target namespace of http://www.contoso.com/books to the <xref:System.Xml.Schema.XmlSchemaSet>.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \n```  \n  \n The example uses the `books.xsd` file as input.  \n  \n [!code-xml[XmlSchemaSetOverall Example#3](~/add/codesnippet/xml/m-system.xml.schema.xmls_3_1.xsd)]"
  syntax:
    content: public System.Xml.Schema.XmlSchema Add (string targetNamespace, string schemaUri);
    parameters:
    - id: targetNamespace
      type: System.String
      description: "Skjemaet `targetNamespace` egenskapen eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> å bruke den `targetNamespace` angitt i skjemaet."
    - id: schemaUri
      type: System.String
      description: "URL-adressen som angir skjemaet til å laste inn."
    return:
      type: System.Xml.Schema.XmlSchema
      description: "En <xref:System.Xml.Schema.XmlSchema>objekt hvis den er gyldig.</xref:System.Xml.Schema.XmlSchema> Hvis det ikke er gyldig, og et <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> er angitt, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> returneres og aktuell validering denne hendelsen oppstår. Ellers en <xref href=&quot;System.Xml.Schema.XmlSchemaException&quot;> </xref> er et."
  overload: System.Xml.Schema.XmlSchemaSet.Add*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Skjemaet er ikke gyldig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "URL-adressen sendes som en parameter <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller <xref:System.String.Empty>.</xref:System.String.Empty>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)
  id: Add(System.String,System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Add(String,XmlReader)
  nameWithType: XmlSchemaSet.Add(String,XmlReader)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(String,XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Legger til i XML-skjema definition language (XSD) skjemaet den <xref:System.Xml.XmlReader>til den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.XmlReader>"
  remarks: "Før et skjema kan legges til en <xref:System.Xml.Schema.XmlSchemaSet>, den må være vellykket faktatabell.</xref:System.Xml.Schema.XmlSchemaSet> Forhåndsbehandling utfører følgende grunnleggende oppgaver.      1.  Skjemaet er merket av for strukturell gyldighetsperiode i samsvar med reglene i W3C XML-skjemaet, men skjemaet er ikke fullstendig validert.      2.  Referanser til interne og eksterne skjemakomponenter er løst. Importerte eller inkludert skjemaer som ble hentet er også lagt til i <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Importerte skjemaer legges til som separate <xref:System.Xml.Schema.XmlSchema>objekter, og inkludert skjemaer være en del av den inkluderte <xref:System.Xml.Schema.XmlSchema>.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema>       Følgende er viktige hensyn å ta ved Add-metode.      -Gjenopprettet skjemaer importeres eller inkludert i XML-skjemaer i <xref:System.Xml.XmlReader>også er lagt til i <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.XmlReader>      -Hvis den <xref:System.Xml.XmlReader>er ikke plassert i rotelementet, en <xref:System.Xml.Schema.XmlSchemaException>et gjeldende element er et element.</xref:System.Xml.Schema.XmlSchemaException> </xref:System.Xml.XmlReader> Hvis gjeldende element er et `xs:schema` element, XML-dokumentet leses i den <xref:System.Xml.Schema.XmlSchemaSet>; ellers en <xref:System.Xml.Schema.XmlSchemaException>et fordi den ikke er gyldig.</xref:System.Xml.Schema.XmlSchemaException> </xref:System.Xml.Schema.XmlSchemaSet>      -Hvis den <xref:System.Xml.XmlReader>er plassert over en sekvens av XML-nodene bare den første noden i sekvensen er lagt til.</xref:System.Xml.XmlReader>      -Hvis skjemaet ble opprettet fra en <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName>metodekall, verdien for den <xref:System.Xml.Schema.XmlSchemaValidationFlags>egenskapen ignoreres, fordi linjebundet skjema behandling ikke gjelder for W3C XML-skjemadokumenter.</xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName>      - <xref:System.Xml.XmlResolver>For den <xref:System.Xml.XmlReader>brukes ikke til å løse referanser til navneområder eller skjemaet plasseringene i inkluderer og importere elementer.</xref:System.Xml.XmlReader> </xref:System.Xml.XmlResolver> I stedet den <xref:System.Xml.XmlResolver>for den <xref:System.Xml.Schema.XmlSchemaSet>brukes.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.XmlResolver>      -Legg til metoden for den <xref:System.Xml.Schema.XmlSchemaSet>har mulighet til å bruke målnavneområdet definert i et skjema, i stedet for å kreve målnavneområdet angis som en parameter når Add-metode kalles.</xref:System.Xml.Schema.XmlSchemaSet> Angir `null` eller <xref:System.String.Empty?displayProperty=fullName>metoden instruerer Legg til det <xref:System.Xml.Schema.XmlSchemaSet>å bruke målnavneområde angitt i skjemaet.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.String.Empty?displayProperty=fullName> Et eksempel på dette problemet, kan du se den <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>metoden.</xref:System.Xml.Schema.XmlSchemaSet.Add%2A>       Gjenværende funksjonaliteten til denne metoden er identisk med den <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>metoden.</xref:System.Xml.Schema.XmlSchemaSet.Add%2A>"
  example:
  - "The following code example adds the books.xsd schema contained in the <xref:System.Xml.XmlTextReader> with a target namespace of http://www.contoso.com/books to the <xref:System.Xml.Schema.XmlSchemaSet>.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(\"http://www.contoso.com/books\", New XmlTextReader(\"books.xsd\")  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/books\", new XmlTextReader(\"books.xsd\");  \n```"
  syntax:
    content: public System.Xml.Schema.XmlSchema Add (string targetNamespace, System.Xml.XmlReader schemaDocument);
    parameters:
    - id: targetNamespace
      type: System.String
      description: "Skjemaet `targetNamespace` egenskapen eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> å bruke den `targetNamespace` angitt i skjemaet."
    - id: schemaDocument
      type: System.Xml.XmlReader
      description: "Den <xref:System.Xml.XmlReader>objektet.</xref:System.Xml.XmlReader>"
    return:
      type: System.Xml.Schema.XmlSchema
      description: "En <xref:System.Xml.Schema.XmlSchema>objekt hvis den er gyldig.</xref:System.Xml.Schema.XmlSchema> Hvis det ikke er gyldig, og et <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> er angitt, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> returneres og aktuell validering denne hendelsen oppstår. Ellers en <xref href=&quot;System.Xml.Schema.XmlSchemaException&quot;> </xref> er et."
  overload: System.Xml.Schema.XmlSchemaSet.Add*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Skjemaet er ikke gyldig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <xref:System.Xml.XmlReader>objekt sendt som en parameter er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlReader>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.CompilationSettings
  id: CompilationSettings
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: CompilationSettings
  nameWithType: XmlSchemaSet.CompilationSettings
  fullName: System.Xml.Schema.XmlSchemaSet.CompilationSettings
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Henter eller angir den <xref href=&quot;System.Xml.Schema.XmlSchemaCompilationSettings&quot;> </xref> for den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "<xref:System.Xml.Schema.XmlSchemaCompilationSettings>Klassen angir unike partikkel Partikkelattributtering (UPA) validering alternativer for <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaCompilationSettings> Du finner mer informasjon om hvordan du aktiverer UPA valideringssjekker den <xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A>egenskapen.</xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A>"
  syntax:
    content: public System.Xml.Schema.XmlSchemaCompilationSettings CompilationSettings { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaCompilationSettings
      description: "The <xref href=&quot;System.Xml.Schema.XmlSchemaCompilationSettings&quot;></xref> for the <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;></xref>. Standarden er en <xref href=&quot;System.Xml.Schema.XmlSchemaCompilationSettings&quot;> </xref> serverforekomsten med den <xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck*>-egenskapen satt til <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck*>"
  overload: System.Xml.Schema.XmlSchemaSet.CompilationSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Compile
  id: Compile
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Compile()
  nameWithType: XmlSchemaSet.Compile()
  fullName: System.Xml.Schema.XmlSchemaSet.Compile()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Kompilerer XML-skjema definition language (XSD) skjemaer legges til i <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> i en logisk skjemaet."
  remarks: "Denne metoden kalles automatisk når validering er nødvendig og <xref:System.Xml.Schema.XmlSchemaSet>er tidligere kompilert – for eksempel, når en <xref:System.Xml.Schema.XmlSchemaSet>brukes som inndata til å opprette en <xref:System.Xml.XmlReader>objekt i den <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A>for en <xref:System.Xml.XmlReaderSettings>objektet.</xref:System.Xml.XmlReaderSettings> </xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> </xref:System.Xml.XmlReader> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> Hvis den <xref:System.Xml.Schema.XmlSchemaSet>er allerede i tilstanden kompilerte denne metoden ikke kompilerer skjemaene.</xref:System.Xml.Schema.XmlSchemaSet> Hvis denne metoden, utfører det <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>er satt til `true`.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>       Skjemaer som er kompilert tidligere av en <xref:System.Xml.Schema.XmlSchemaSet>ikke er kompilert på nytt.</xref:System.Xml.Schema.XmlSchemaSet> Imidlertid skjemaer som ble kompilert med metoden kompilering av den <xref:System.Xml.Schema.XmlSchema>vil kompileres.</xref:System.Xml.Schema.XmlSchema>      > [!NOTE] > Du trenger å kalle <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>metoden hvis du har endret et skjema (eller en av de inkluderer eller importerer) etter å legge den til <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> Den <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>metoden vil sjekk skjemaet for strukturell gyldighetsperiode i samsvar med reglene for W3C XML-skjema.</xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> Det vil imidlertid ikke utføre en fullstendig validering av. Det vil også løse referanser til interne og eksterne skjemakomponenter. Importerte eller inkludert skjemaer som ble hentet er også lagt til i <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Importerte skjemaer legges til som separate <xref:System.Xml.Schema.XmlSchema>objekter under inkludert skjemaer utføres som en del av den inkluderte <xref:System.Xml.Schema.XmlSchema>.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema> Hvis kallet til behandle på nytt er fullført, den <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>egenskapen er satt til false.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>"
  example:
  - "```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet.Compile()  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet.Compile();  \n```"
  syntax:
    content: public void Compile ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaSet.Compile*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Det oppstod en feilen under validering og kompilerer skjemaene i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Contains(System.String)
  id: Contains(System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Contains(String)
  nameWithType: XmlSchemaSet.Contains(String)
  fullName: System.Xml.Schema.XmlSchemaSet.Contains(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Indikerer om et XML-skjema definition language (XSD) skjema med det angitte målnavneområdet URI er i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Skjemaer som indirekte er lagt til i <xref:System.Xml.Schema.XmlSchemaSet>er registrert ved metoden Contains; for eksempel importert XML-skjemaer.</xref:System.Xml.Schema.XmlSchemaSet> Resultatet som importerer et skjema for navneområdet http://www.contoso.com/books Hvis et skjema for navneområdet http://www.contoso.com/retail er lagt til i <xref:System.Xml.Schema.XmlSchemaSet>, kaller Contains med `http://www.contoso.com/books` som en parameter, returneres `true`.</xref:System.Xml.Schema.XmlSchemaSet>"
  syntax:
    content: public bool Contains (string targetNamespace);
    parameters:
    - id: targetNamespace
      type: System.String
      description: "Skjemaet `targetNamespace` egenskapen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis et skjema med navneområdet angitt URI er i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Schema.XmlSchemaSet.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)
  id: Contains(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Contains(XmlSchema)
  nameWithType: XmlSchemaSet.Contains(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Contains(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Angir om den angitte datadefinisjonsspråk for XML-skjema (XSD) <xref:System.Xml.Schema.XmlSchema>objektet er i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  syntax:
    content: public bool Contains (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "Den <xref:System.Xml.Schema.XmlSchema>objektet.</xref:System.Xml.Schema.XmlSchema>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis det <xref:System.Xml.Schema.XmlSchema>objektet er i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  overload: System.Xml.Schema.XmlSchemaSet.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> sendt som en parameter er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)
  id: CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: CopyTo(XmlSchema[],Int32)
  nameWithType: XmlSchemaSet.CopyTo(XmlSchema[],Int32)
  fullName: System.Xml.Schema.XmlSchemaSet.CopyTo(XmlSchema[],Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Kopierer alle de <xref:System.Xml.Schema.XmlSchema>objekter fra den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> til den angitte matrisen, med Start fra den angitte indeksen.</xref:System.Xml.Schema.XmlSchema>"
  remarks: ''
  example:
  - "The following example copies all the <xref:System.Xml.Schema.XmlSchema> objects in the <xref:System.Xml.Schema.XmlSchemaSet> to an array of <xref:System.Xml.Schema.XmlSchema> objects.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\")  \n  \nDim schemas(schemaSet.Count) As XmlSchema  \nschemaSet.CopyTo(schemas, 0)  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\");  \n  \nXmlSchema[] schemas = new XmlSchema[schemaSet.Count];  \nschemaSet.CopyTo(schemas, 0);  \n```"
  syntax:
    content: public void CopyTo (System.Xml.Schema.XmlSchema[] schemas, int index);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchema[]
      description: "Matrisen kopiere objekter til."
    - id: index
      type: System.Int32
      description: "Indeksen i matrisen der kopiering starter."
  overload: System.Xml.Schema.XmlSchemaSet.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Count
  id: Count
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Count
  nameWithType: XmlSchemaSet.Count
  fullName: System.Xml.Schema.XmlSchemaSet.Count
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Henter antall logiske XML-skjemadefinisjon språket (XSD) skjemaer den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Hvis det finnes to skjemaer for navneområdet `http://www.contoso.com` i den <xref:System.Xml.Schema.XmlSchemaSet>, Count-egenskapen returnerer 1 fordi skjemaene behandles som et enkelt logisk skjema validering formålene.</xref:System.Xml.Schema.XmlSchemaSet> Men hvis et skjema for navneområdet `http://www.contoso.com/retail` importert et skjema for den `http://www.contoso.com/books` navneområdet, verdien for egenskapen antall vil være 2."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Antall logiske skjemaer i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  overload: System.Xml.Schema.XmlSchemaSet.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.GlobalAttributes
  id: GlobalAttributes
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: GlobalAttributes
  nameWithType: XmlSchemaSet.GlobalAttributes
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalAttributes
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Henter alle globale attributter i alle i XML-skjemadefinisjon språket (XSD) skjemaer den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  syntax:
    content: public System.Xml.Schema.XmlSchemaObjectTable GlobalAttributes { get; }
    return:
      type: System.Xml.Schema.XmlSchemaObjectTable
      description: "Samling av global attributter."
  overload: System.Xml.Schema.XmlSchemaSet.GlobalAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.GlobalElements
  id: GlobalElements
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: GlobalElements
  nameWithType: XmlSchemaSet.GlobalElements
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalElements
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Henter alle globale elementer i alle i XML-skjemadefinisjon språket (XSD) skjemaer den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  syntax:
    content: public System.Xml.Schema.XmlSchemaObjectTable GlobalElements { get; }
    return:
      type: System.Xml.Schema.XmlSchemaObjectTable
      description: "Samling av global elementer."
  overload: System.Xml.Schema.XmlSchemaSet.GlobalElements*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.GlobalTypes
  id: GlobalTypes
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: GlobalTypes
  nameWithType: XmlSchemaSet.GlobalTypes
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalTypes
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Henter alle de globale enkle og sammensatte typene i alle XML-skjema definisjonen språket (XSD) skjemaer i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Egenskapen GlobalTypes alltid returnerer en type som representerer den `xs:anyType` kompleks type."
  syntax:
    content: public System.Xml.Schema.XmlSchemaObjectTable GlobalTypes { get; }
    return:
      type: System.Xml.Schema.XmlSchemaObjectTable
      description: "Samling av globale enkle og sammensatte typer."
  overload: System.Xml.Schema.XmlSchemaSet.GlobalTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.IsCompiled
  id: IsCompiled
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: IsCompiled
  nameWithType: XmlSchemaSet.IsCompiled
  fullName: System.Xml.Schema.XmlSchemaSet.IsCompiled
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Henter en verdi som angir om XML-skjema definition language (XSD) skjemaene i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> er kompilert."
  remarks: "Egenskapen IsCompiled påvirkes ikke hvis skjemaer redigeres i <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Oppdateringer for individuelle skjemaene i den <xref:System.Xml.Schema.XmlSchemaSet>er ikke registrert.</xref:System.Xml.Schema.XmlSchemaSet> Resultatet IsCompiled-egenskapen kan være `true` selv om en skjemaene inneholdt i <xref:System.Xml.Schema.XmlSchemaSet>er endret, så lenge ingen skjemaer ble lagt til eller fjernet fra <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet>"
  example:
  - For an example of the IsCompiled property, see the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method.
  syntax:
    content: public bool IsCompiled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis skjemaene i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> er kompilert siden forrige gang et XML-skjema ble lagt til eller fjernet fra den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Schema.XmlSchemaSet.IsCompiled*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.NameTable
  id: NameTable
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: NameTable
  nameWithType: XmlSchemaSet.NameTable
  fullName: System.Xml.Schema.XmlSchemaSet.NameTable
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Henter standard <xref:System.Xml.XmlNameTable>brukes av den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> under innlasting av nye XML-skjema definition language (XSD) skjemaene.</xref:System.Xml.XmlNameTable>"
  syntax:
    content: public System.Xml.XmlNameTable NameTable { get; }
    return:
      type: System.Xml.XmlNameTable
      description: "En tabell med oppdelt streng objekter."
  overload: System.Xml.Schema.XmlSchemaSet.NameTable*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)
  id: Remove(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Remove(XmlSchema)
  nameWithType: XmlSchemaSet.Remove(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Remove(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Fjerner det angitte språk (XSD) skjemaet for XML-skjema-definisjonen fra den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Fjerner et skjema fra den <xref:System.Xml.Schema.XmlSchemaSet>angir den <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>egenskapen `false`.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> </xref:System.Xml.Schema.XmlSchemaSet>"
  example:
  - "The following example illustrates adding multiple schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then removing one of the schemas using the Remove method.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\")  \n  \nDim schema As XmlSchema  \n  \nFor Each schema In schemaSet.Schemas()  \n  \n    If schema.TargetNamespace = \"http://www.contoso.com/music\" Then  \n        schemaSet.Remove(schema)  \n    End If  \n  \nNext  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\");  \n  \nforeach (XmlSchema schema in schemaSet.Schemas())  \n{  \n    if (schema.TargetNamespace == \"http://www.contoso.com/music\")  \n    {  \n        schemaSet.Remove(schema);  \n    }  \n}  \n```"
  syntax:
    content: public System.Xml.Schema.XmlSchema Remove (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "Den <xref:System.Xml.Schema.XmlSchema>objektet til å fjerne fra den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
    return:
      type: System.Xml.Schema.XmlSchema
      description: "Den <xref:System.Xml.Schema.XmlSchema>objekt fjernet fra den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis skjemaet ikke ble funnet i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  overload: System.Xml.Schema.XmlSchemaSet.Remove*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Skjemaet er ikke et gyldig skjema."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <xref:System.Xml.Schema.XmlSchema>sendt som en parameter er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)
  id: RemoveRecursive(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: RemoveRecursive(XmlSchema)
  nameWithType: XmlSchemaSet.RemoveRecursive(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.RemoveRecursive(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Fjerner det angitte XML-skjema definition language (XSD) skjemaet og alle skjemaer den importerer fra den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Metoden RemoveRecursive fjerner det angitte skjemaet og alle skjemaer den importerer fra den <xref:System.Xml.Schema.XmlSchemaSet>, så lenge det finnes ingen avhengige skjemaet eller tilhørende importerte skjemaer.</xref:System.Xml.Schema.XmlSchemaSet> Hvis det er avhengige av skjemaet eller tilhørende importerte skjemaer i den <xref:System.Xml.Schema.XmlSchemaSet>, ingenting er fjernet, og returnerer RemoveRecursive `false`.</xref:System.Xml.Schema.XmlSchemaSet> Hvis `false` returneres og en <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>er angitt, sendes en advarsel i hendelsesbehandlingen som beskriver avhengighetene.</xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>       Hvis det angitte skjemaet importerer andre skjemaer og angitte skjemaet fjernet med den <xref:System.Xml.Schema.XmlSchemaSet.Remove%2A>metoden, RemoveRecursive metoden fjerner de importerte XML-skjemaene og tilbakestiller `false`.</xref:System.Xml.Schema.XmlSchemaSet.Remove%2A> For eksempel hvis `parentSchema` importerer `childSchema1` og `childSchema2` fjerner bare følgende kode `parentSchema`, men ikke importeres `childSchema1` og `childSchema2` skjemaer: ```   XmlSchemaSet ss = new XmlSchemaSet();   XmlSchema xs = XmlSchema.Read(XmlReader.Create(&quot;parentSchema.xsd&quot;), null);   ss.Add(xs);   ss.Compile();   ss.Remove(xs);   ss.Compile();   ss.RemoveRecursive(xs);   ss.Compile();   ``` følgende kode, fjernes den `parentSchema` og importerte skjemaer: ```   XmlSchemaSet ss = new XmlSchemaSet();   XmlSchema xs = XmlSchema.Read(XmlReader.Create(&quot;parentSchema.xsd&quot;), null);   ss.Add(xs);   ss.Compile();   ss.RemoveRecursive(xs);   ss.Compile();   ``` for RemoveRecursive metoden har ingen virkning på statusen for den <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>egenskapen.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>"
  example:
  - "The following code example illustrates adding multiple schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then removing one of the schemas and all the schemas it imports using the RemoveRecursive method.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\")  \n  \nDim schema As XmlSchema  \n  \nFor Each schema In schemaSet.Schemas()  \n  \n    If schema.TargetNamespace = \"http://www.contoso.com/music\" Then  \n        schemaSet.RemoveRecursive(schema)  \n    End If  \n  \nNext  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\");  \n  \nforeach (XmlSchema schema in schemaSet.Schemas())  \n{  \n    if (schema.TargetNamespace == \"http://www.contoso.com/music\")  \n    {  \n        schemaSet.RemoveRecursive(schema);  \n    }  \n}  \n```"
  syntax:
    content: public bool RemoveRecursive (System.Xml.Schema.XmlSchema schemaToRemove);
    parameters:
    - id: schemaToRemove
      type: System.Xml.Schema.XmlSchema
      description: "Den <xref:System.Xml.Schema.XmlSchema>objektet til å fjerne fra den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis det <xref:System.Xml.Schema.XmlSchema>objektet og alle Importer ble ble fjernet; ellers, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  overload: System.Xml.Schema.XmlSchemaSet.RemoveRecursive*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <xref:System.Xml.Schema.XmlSchema>sendt som en parameter er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)
  id: Reprocess(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Reprocess(XmlSchema)
  nameWithType: XmlSchemaSet.Reprocess(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Reprocess(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Reprocesses et XML-skjema definition language (XSD) skjema som allerede finnes i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Ny behandling et skjema utfører alle forhåndsbehandling trinnene utføres i et skjema når den <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>-metoden.</xref:System.Xml.Schema.XmlSchemaSet.Add%2A> Hvis kallet til behandle på nytt er fullført, den <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>er satt til `false`.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>       Behandle på nytt-metoden må brukes etter en XML-skjema i den <xref:System.Xml.Schema.XmlSchemaSet>er endret, når den <xref:System.Xml.Schema.XmlSchemaSet>har utført kompilering.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet>      > [!NOTE] > Du vil kalle metoden behandle på nytt Hvis du har endret et skjema (eller en av de inkluderer eller importerer) etter at det ble lagt til <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Metoden behandle på nytt Kontroller skjemaet for strukturell gyldighetsperiode i samsvar med reglene for W3C XML-skjema. Det vil imidlertid ikke utføre en fullstendig validering av. Det vil også løse referanser til interne og eksterne skjemakomponenter. Importerte eller inkludert skjemaer som ble hentet er også lagt til i <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Importerte skjemaer legges til som separate <xref:System.Xml.Schema.XmlSchema>objekter under inkludert skjemaer utføres som en del av den inkluderte <xref:System.Xml.Schema.XmlSchema>.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema> Hvis kallet til behandle på nytt er fullført, den <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>egenskapen er satt til false.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>"
  example:
  - "The following example illustrates reprocessing a schema added to the <xref:System.Xml.Schema.XmlSchemaSet>. After the <xref:System.Xml.Schema.XmlSchemaSet> is compiled using the <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> method, and the schema added to the <xref:System.Xml.Schema.XmlSchemaSet> is modified, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property will be set to `true`, even though a schema in the <xref:System.Xml.Schema.XmlSchemaSet> has been modified. Calling the Reprocess method performs all the preprocessing performed by the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method and sets the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property to `false`.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nDim schema As XmlSchema = schemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet.Compile()  \n  \nDim element As XmlSchemaElement = New XmlSchemaElement()  \nschema.Items.Add(element)  \nelement.Name = \"book\"  \nelement.SchemaTypeName = New XmlQualifiedName(\"string\", \"http://www.w3.org/2001/XMLSchema\")  \n  \nschemaSet.Reprocess(schema)  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nXmlSchema schema = schemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet.Compile();  \n  \nXmlSchemaElement element = new XmlSchemaElement();  \nschema.Items.Add(element);  \nelement.Name = \"book\";  \nelement.SchemaTypeName = new XmlQualifiedName(\"string\", \"http://www.w3.org/2001/XMLSchema\");  \n  \nschemaSet.Reprocess(schema);  \n```"
  syntax:
    content: public System.Xml.Schema.XmlSchema Reprocess (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "Skjemaet til å behandle på nytt."
    return:
      type: System.Xml.Schema.XmlSchema
      description: "En <xref:System.Xml.Schema.XmlSchema>objekt hvis skjemaet er et gyldig skjema.</xref:System.Xml.Schema.XmlSchema> Hvis det ikke er gyldig, og et <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> er angitt, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> returneres og aktuell validering denne hendelsen oppstår. Ellers en <xref href=&quot;System.Xml.Schema.XmlSchemaException&quot;> </xref> er et."
  overload: System.Xml.Schema.XmlSchemaSet.Reprocess*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Skjemaet er ikke gyldig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <xref:System.Xml.Schema.XmlSchema>objekt sendt som en parameter er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <xref:System.Xml.Schema.XmlSchema>objekt sendt som en parameter ikke allerede finnes i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Schemas
  id: Schemas
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Schemas()
  nameWithType: XmlSchemaSet.Schemas()
  fullName: System.Xml.Schema.XmlSchemaSet.Schemas()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Returnerer en samling av alle XML-XML-skjemadefinisjon språket (XSD) skjemaer i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Denne metoden returnerer skjemaer som ble lagt til indirekte til den <xref:System.Xml.Schema.XmlSchemaSet>fordi de er importert.</xref:System.Xml.Schema.XmlSchemaSet>      > [!NOTE] > I XML-skjemaer metoden tilsvarer <xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A>metoden for foreldet <xref:System.Xml.Schema.XmlSchemaCollection>.</xref:System.Xml.Schema.XmlSchemaCollection> </xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A>"
  example:
  - "The following example illustrates how to iterate over all the schemas in the <xref:System.Xml.Schema.XmlSchemaSet>.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \n  \nDim schema As XmlSchema  \n  \nFor Each schema In schemaSet.Schemas()  \n  \n    schema.Write(Console.Out)  \n  \nNext  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \n  \nforeach (XmlSchema schema in schemaSet.Schemas())  \n{  \n    schema.Write(Console.Out);  \n}  \n```"
  syntax:
    content: public System.Collections.ICollection Schemas ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "En <xref:System.Collections.ICollection>objektet som inneholder alle skjemaene som er lagt til i <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Collections.ICollection> Hvis ingen XML-skjemaer er lagt til i <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>, et tomt <xref:System.Collections.ICollection>objekt returneres.</xref:System.Collections.ICollection>"
  overload: System.Xml.Schema.XmlSchemaSet.Schemas*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Schemas(System.String)
  id: Schemas(System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Schemas(String)
  nameWithType: XmlSchemaSet.Schemas(String)
  fullName: System.Xml.Schema.XmlSchemaSet.Schemas(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Returnerer en samling av alle XML-XML-skjemadefinisjon språket (XSD) skjemaer i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> som tilhører angitte navneområdet."
  remarks: "Hvis den `targetNamespace` parameteren er `null` eller <xref:System.String.Empty>, og deretter returneres alle skjemaer.</xref:System.String.Empty>       Denne metoden returnerer skjemaer som ble lagt til indirekte til den <xref:System.Xml.Schema.XmlSchemaSet>fordi de er importert.</xref:System.Xml.Schema.XmlSchemaSet>      > [!NOTE] > I XML-skjemaer metoden tilsvarer <xref:System.Xml.Schema.XmlSchemaCollection.Item%2A>metoden for foreldet <xref:System.Xml.Schema.XmlSchemaCollection>.</xref:System.Xml.Schema.XmlSchemaCollection> </xref:System.Xml.Schema.XmlSchemaCollection.Item%2A>"
  example:
  - "The following example illustrates how to iterate over all the schemas in the http://www.contoso.com/books namespace in the <xref:System.Xml.Schema.XmlSchemaSet>.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \n  \nDim schema As XmlSchema  \n  \nFor Each schema In schemaSet.Schemas(\"http://www.contoso.com/books\")  \n  \n    schema.Write(Console.Out)  \n  \nNext  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \n  \nforeach (XmlSchema schema in schemaSet.Schemas(\"http://www.contoso.com/books\"))  \n{  \n    schema.Write(Console.Out);  \n}  \n```"
  syntax:
    content: public System.Collections.ICollection Schemas (string targetNamespace);
    parameters:
    - id: targetNamespace
      type: System.String
      description: "Skjemaet `targetNamespace` egenskapen."
    return:
      type: System.Collections.ICollection
      description: "En <xref:System.Collections.ICollection>objektet som inneholder alle skjemaene som er lagt til i <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> som tilhører angitte navneområdet.</xref:System.Collections.ICollection> Hvis ingen XML-skjemaer er lagt til i <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>, et tomt <xref:System.Collections.ICollection>objekt returneres.</xref:System.Collections.ICollection>"
  overload: System.Xml.Schema.XmlSchemaSet.Schemas*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.ValidationEventHandler
  id: ValidationEventHandler
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: ValidationEventHandler
  nameWithType: XmlSchemaSet.ValidationEventHandler
  fullName: System.Xml.Schema.XmlSchemaSet.ValidationEventHandler
  type: Event
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Angir en hendelsesbehandling for mottak av informasjon om skjemavalideringsfeil for XML-skjema definition language (XSD)."
  remarks: "Angir en hendelsesbehandling for å motta informasjon om skjemavalideringsfeil når den <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>eller <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A>metoder for den <xref:System.Xml.Schema.XmlSchemaSet>kalles.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> </xref:System.Xml.Schema.XmlSchemaSet.Add%2A>       Hvis en hendelsesbehandling ikke er definert, en <xref:System.Xml.Schema.XmlSchemaException>er et på disse feilene der <xref:System.Xml.Schema.XmlSeverityType>er <xref:System.Xml.Schema.XmlSeverityType>.</xref:System.Xml.Schema.XmlSeverityType> </xref:System.Xml.Schema.XmlSeverityType> </xref:System.Xml.Schema.XmlSchemaException> Unntak er ikke et valideringsfeilene med en <xref:System.Xml.Schema.XmlSeverityType>av <xref:System.Xml.Schema.XmlSeverityType>.</xref:System.Xml.Schema.XmlSeverityType> </xref:System.Xml.Schema.XmlSeverityType>"
  example:
  - "The following code example illustrates adding a ValidationEventHandler to capture errors and warnings when validating an XML document against a schema.  \n  \n [!code-cs[XmlSchemaSetOverall Example#1](~/add/codesnippet/csharp/e-system.xml.schema.xmls_2_1.cs)]\n [!code-cpp[XmlSchemaSetOverall Example#1](~/add/codesnippet/cpp/e-system.xml.schema.xmls_2_1.cpp)]\n [!code-vb[XmlSchemaSetOverall Example#1](~/add/codesnippet/visualbasic/e-system.xml.schema.xmls_2_1.vb)]  \n  \n The example uses the books.xml file as an input.  \n  \n [!code-xml[XmlSchemaSetOverall Example#2](~/add/codesnippet/xml/e-system.xml.schema.xmls_2_2.xml)]  \n  \n The example uses the books.xsd file as an input.  \n  \n [!code-xml[XmlSchemaSetOverall Example#3](~/add/codesnippet/xml/e-system.xml.schema.xmls_2_3.xsd)]"
  syntax:
    content: public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;
    return:
      type: System.Xml.Schema.ValidationEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.XmlResolver
  id: XmlResolver
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XmlSchemaSet.XmlResolver
  fullName: System.Xml.Schema.XmlSchemaSet.XmlResolver
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Angir den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> brukes til å løse navneområder eller plasseringer som det refereres til i inkluderer og Importer elementer i et skjema."
  remarks: "Den <xref:System.Xml.XmlResolver>av en <xref:System.Xml.Schema.XmlSchemaSet>brukes til å løse navneområder eller plasseringer som det refereres til i inkluderer og Importer elementer i et skjema når som helst et skjema er lagt til ved hjelp av <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>eller <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>metoder.</xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> </xref:System.Xml.Schema.XmlSchemaSet.Add%2A> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.XmlResolver>      > [!IMPORTANT] > Eksterne navneområder eller plasseringer som det refereres til i inkludere, import og Definer elementer i et skjema løses i forhold til basis-URIEN for XML-skjemaet som inkluderer eller importerer dem. Hvis for eksempel, inkludert eller import av skjema basis-URIEN er tom eller `null`, eksterne plasseringer er løst i forhold til gjeldende mappe. Den <xref:System.Xml.XmlUrlResolver>klassen brukes til å løse eksterne skjemaer som standard.</xref:System.Xml.XmlUrlResolver> Hvis du vil deaktivere løsing av include import og Definer elementer i et skjema egenskapen XmlResolver til `null`."
  syntax:
    content: public System.Xml.XmlResolver XmlResolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> brukes til å løse navneområder eller plasseringer som det refereres til i inkluderer og Importer elementer i et skjema."
  overload: System.Xml.Schema.XmlSchemaSet.XmlResolver*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xml.Schema.XmlSchemaException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaException
  nameWithType: XmlSchemaException
  fullName: System.Xml.Schema.XmlSchemaException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.Schema.XmlSchemaSet.#ctor
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: XmlSchemaSet()
  nameWithType: XmlSchemaSet.XmlSchemaSet()
  fullName: System.Xml.Schema.XmlSchemaSet.XmlSchemaSet()
- uid: System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: XmlSchemaSet(XmlNameTable)
  nameWithType: XmlSchemaSet.XmlSchemaSet(XmlNameTable)
  fullName: System.Xml.Schema.XmlSchemaSet.XmlSchemaSet(XmlNameTable)
- uid: System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: true
  name: XmlNameTable
  nameWithType: XmlNameTable
  fullName: System.Xml.XmlNameTable
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Add(XmlSchema)
  nameWithType: XmlSchemaSet.Add(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(XmlSchema)
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Add(XmlSchemaSet)
  nameWithType: XmlSchemaSet.Add(XmlSchemaSet)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(XmlSchemaSet)
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Add(String,String)
  nameWithType: XmlSchemaSet.Add(String,String)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Add(String,XmlReader)
  nameWithType: XmlSchemaSet.Add(String,XmlReader)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(String,XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Schema.XmlSchemaSet.CompilationSettings
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: CompilationSettings
  nameWithType: XmlSchemaSet.CompilationSettings
  fullName: System.Xml.Schema.XmlSchemaSet.CompilationSettings
- uid: System.Xml.Schema.XmlSchemaCompilationSettings
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaCompilationSettings
  nameWithType: XmlSchemaCompilationSettings
  fullName: System.Xml.Schema.XmlSchemaCompilationSettings
- uid: System.Xml.Schema.XmlSchemaSet.Compile
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Compile()
  nameWithType: XmlSchemaSet.Compile()
  fullName: System.Xml.Schema.XmlSchemaSet.Compile()
- uid: System.Xml.Schema.XmlSchemaSet.Contains(System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Contains(String)
  nameWithType: XmlSchemaSet.Contains(String)
  fullName: System.Xml.Schema.XmlSchemaSet.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Contains(XmlSchema)
  nameWithType: XmlSchemaSet.Contains(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Contains(XmlSchema)
- uid: System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: CopyTo(XmlSchema[],Int32)
  nameWithType: XmlSchemaSet.CopyTo(XmlSchema[],Int32)
  fullName: System.Xml.Schema.XmlSchemaSet.CopyTo(XmlSchema[],Int32)
- uid: System.Xml.Schema.XmlSchema[]
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema[]
  spec.csharp:
  - uid: System.Xml.Schema.XmlSchema
    name: XmlSchema
    nameWithType: XmlSchema
    fullName: XmlSchema[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.Schema.XmlSchemaSet.Count
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Count
  nameWithType: XmlSchemaSet.Count
  fullName: System.Xml.Schema.XmlSchemaSet.Count
- uid: System.Xml.Schema.XmlSchemaSet.GlobalAttributes
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalAttributes
  nameWithType: XmlSchemaSet.GlobalAttributes
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalAttributes
- uid: System.Xml.Schema.XmlSchemaObjectTable
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaObjectTable
  nameWithType: XmlSchemaObjectTable
  fullName: System.Xml.Schema.XmlSchemaObjectTable
- uid: System.Xml.Schema.XmlSchemaSet.GlobalElements
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalElements
  nameWithType: XmlSchemaSet.GlobalElements
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalElements
- uid: System.Xml.Schema.XmlSchemaSet.GlobalTypes
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalTypes
  nameWithType: XmlSchemaSet.GlobalTypes
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalTypes
- uid: System.Xml.Schema.XmlSchemaSet.IsCompiled
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: IsCompiled
  nameWithType: XmlSchemaSet.IsCompiled
  fullName: System.Xml.Schema.XmlSchemaSet.IsCompiled
- uid: System.Xml.Schema.XmlSchemaSet.NameTable
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: NameTable
  nameWithType: XmlSchemaSet.NameTable
  fullName: System.Xml.Schema.XmlSchemaSet.NameTable
- uid: System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Remove(XmlSchema)
  nameWithType: XmlSchemaSet.Remove(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Remove(XmlSchema)
- uid: System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: RemoveRecursive(XmlSchema)
  nameWithType: XmlSchemaSet.RemoveRecursive(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.RemoveRecursive(XmlSchema)
- uid: System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Reprocess(XmlSchema)
  nameWithType: XmlSchemaSet.Reprocess(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Reprocess(XmlSchema)
- uid: System.Xml.Schema.XmlSchemaSet.Schemas
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Schemas()
  nameWithType: XmlSchemaSet.Schemas()
  fullName: System.Xml.Schema.XmlSchemaSet.Schemas()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Xml.Schema.XmlSchemaSet.Schemas(System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Schemas(String)
  nameWithType: XmlSchemaSet.Schemas(String)
  fullName: System.Xml.Schema.XmlSchemaSet.Schemas(String)
- uid: System.Xml.Schema.XmlSchemaSet.ValidationEventHandler
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: ValidationEventHandler
  nameWithType: XmlSchemaSet.ValidationEventHandler
  fullName: System.Xml.Schema.XmlSchemaSet.ValidationEventHandler
- uid: System.Xml.Schema.ValidationEventHandler
  parent: System.Xml.Schema
  isExternal: false
  name: ValidationEventHandler
  nameWithType: ValidationEventHandler
  fullName: System.Xml.Schema.ValidationEventHandler
- uid: System.Xml.Schema.XmlSchemaSet.XmlResolver
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: XmlResolver
  nameWithType: XmlSchemaSet.XmlResolver
  fullName: System.Xml.Schema.XmlSchemaSet.XmlResolver
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Xml.Schema.XmlSchemaSet.#ctor*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet.XmlSchemaSet
- uid: System.Xml.Schema.XmlSchemaSet.Add*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Add
  nameWithType: XmlSchemaSet.Add
- uid: System.Xml.Schema.XmlSchemaSet.CompilationSettings*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: CompilationSettings
  nameWithType: XmlSchemaSet.CompilationSettings
- uid: System.Xml.Schema.XmlSchemaSet.Compile*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Compile
  nameWithType: XmlSchemaSet.Compile
- uid: System.Xml.Schema.XmlSchemaSet.Contains*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Contains
  nameWithType: XmlSchemaSet.Contains
- uid: System.Xml.Schema.XmlSchemaSet.CopyTo*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: CopyTo
  nameWithType: XmlSchemaSet.CopyTo
- uid: System.Xml.Schema.XmlSchemaSet.Count*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Count
  nameWithType: XmlSchemaSet.Count
- uid: System.Xml.Schema.XmlSchemaSet.GlobalAttributes*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalAttributes
  nameWithType: XmlSchemaSet.GlobalAttributes
- uid: System.Xml.Schema.XmlSchemaSet.GlobalElements*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalElements
  nameWithType: XmlSchemaSet.GlobalElements
- uid: System.Xml.Schema.XmlSchemaSet.GlobalTypes*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalTypes
  nameWithType: XmlSchemaSet.GlobalTypes
- uid: System.Xml.Schema.XmlSchemaSet.IsCompiled*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: IsCompiled
  nameWithType: XmlSchemaSet.IsCompiled
- uid: System.Xml.Schema.XmlSchemaSet.NameTable*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: NameTable
  nameWithType: XmlSchemaSet.NameTable
- uid: System.Xml.Schema.XmlSchemaSet.Remove*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Remove
  nameWithType: XmlSchemaSet.Remove
- uid: System.Xml.Schema.XmlSchemaSet.RemoveRecursive*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: RemoveRecursive
  nameWithType: XmlSchemaSet.RemoveRecursive
- uid: System.Xml.Schema.XmlSchemaSet.Reprocess*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Reprocess
  nameWithType: XmlSchemaSet.Reprocess
- uid: System.Xml.Schema.XmlSchemaSet.Schemas*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Schemas
  nameWithType: XmlSchemaSet.Schemas
- uid: System.Xml.Schema.XmlSchemaSet.XmlResolver*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: XmlResolver
  nameWithType: XmlSchemaSet.XmlResolver
