### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.EncryptedType
  id: EncryptedType
  children:
  - System.Security.Cryptography.Xml.EncryptedType.#ctor
  - System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)
  - System.Security.Cryptography.Xml.EncryptedType.CipherData
  - System.Security.Cryptography.Xml.EncryptedType.Encoding
  - System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod
  - System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties
  - System.Security.Cryptography.Xml.EncryptedType.GetXml
  - System.Security.Cryptography.Xml.EncryptedType.Id
  - System.Security.Cryptography.Xml.EncryptedType.KeyInfo
  - System.Security.Cryptography.Xml.EncryptedType.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.EncryptedType.MimeType
  - System.Security.Cryptography.Xml.EncryptedType.Type
  langs:
  - csharp
  name: EncryptedType
  nameWithType: EncryptedType
  fullName: System.Security.Cryptography.Xml.EncryptedType
  type: Class
  summary: "Representerer abstrakt basisklasse som klassene <xref href=&quot;System.Security.Cryptography.Xml.EncryptedData&quot;> </xref> og <xref href=&quot;System.Security.Cryptography.Xml.EncryptedKey&quot;> </xref> avledet."
  remarks: "Klassen EncryptedType representerer abstrakt basisklasse som klassene <xref:System.Security.Cryptography.Xml.EncryptedData>og <xref:System.Security.Cryptography.Xml.EncryptedKey>avledet.</xref:System.Security.Cryptography.Xml.EncryptedKey> </xref:System.Security.Cryptography.Xml.EncryptedData> Disse to klasser som inneholder den faktiske krypterte data eller nøkkelinformasjon i XML-kryptering. For å overholde XML-krypteringsstandarder, bør du bruke disse to avledede klasser.       Hvis du vil ha mer informasjon om XML-krypteringsstandarder, kan du se http://www.w3.org/TR/xmlenc-core/."
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the EncryptedType class.  \n  \n [!code-cs[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/csharp/t-system.security.crypto_24_1.cs)]\n [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/visualbasic/t-system.security.crypto_24_1.vb)]"
  syntax:
    content: public abstract class EncryptedType
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: EncryptedType()
  nameWithType: EncryptedType.EncryptedType()
  fullName: System.Security.Cryptography.Xml.EncryptedType.EncryptedType()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;> </xref> klasse."
  remarks: "Denne konstruktøren oppretter en ny forekomst av <xref:System.Security.Cryptography.Xml.EncryptedType>klassen.</xref:System.Security.Cryptography.Xml.EncryptedType> Denne klassen representerer abstrakt basisklasse som klassene <xref:System.Security.Cryptography.Xml.EncryptedData>og <xref:System.Security.Cryptography.Xml.EncryptedKey>avledet.</xref:System.Security.Cryptography.Xml.EncryptedKey> </xref:System.Security.Cryptography.Xml.EncryptedData> For å overholde XML-krypteringsstandarder, bør du bruke to avledede klasser. Hvis du vil ha mer informasjon om XML-krypteringsstandarder, kan du se http://www.w3.org/TR/xmlenc-core/."
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.  \n  \n [!code-cs[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/csharp/m-system.security.crypto_3_1.cs)]\n [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/visualbasic/m-system.security.crypto_3_1.vb)]"
  syntax:
    content: protected EncryptedType ();
    parameters: []
  overload: System.Security.Cryptography.Xml.EncryptedType.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)
  id: AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: AddProperty(EncryptionProperty)
  nameWithType: EncryptedType.AddProperty(EncryptionProperty)
  fullName: System.Security.Cryptography.Xml.EncryptedType.AddProperty(EncryptionProperty)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Legger til en <xref uid=&quot;langword_csharp_&lt;EncryptionProperty&gt;&quot; name=&quot;&lt;EncryptionProperty&gt;&quot; href=&quot;&quot;> </xref> underelement til den <xref uid=&quot;langword_csharp_&lt;EncryptedProperties&gt;&quot; name=&quot;&lt;EncryptedProperties&gt;&quot; href=&quot;&quot;> </xref> elementet i gjeldende <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;> </xref> objektet i XML-kryptering."
  remarks: "Denne metoden kan brukes til å legge til `<EncryptionProperty>` underordnede elementer til den `<EncryptedProperties>` elementet. Den `<EncryptedProperties>` elementet gir ekstra informasjon om den `<EncryptedType>` elementet."
  syntax:
    content: public void AddProperty (System.Security.Cryptography.Xml.EncryptionProperty ep);
    parameters:
    - id: ep
      type: System.Security.Cryptography.Xml.EncryptionProperty
      description: "En <xref href=&quot;System.Security.Cryptography.Xml.EncryptionProperty&quot;> </xref> objektet."
  overload: System.Security.Cryptography.Xml.EncryptedType.AddProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.CipherData
  id: CipherData
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: CipherData
  nameWithType: EncryptedType.CipherData
  fullName: System.Security.Cryptography.Xml.EncryptedType.CipherData
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Henter eller angir den <xref href=&quot;System.Security.Cryptography.Xml.CipherData&quot;> </xref> verdien for en forekomst av en <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;> </xref> klasse."
  remarks: "Den `<CipherData>` elementet er et nødvendig element i XML-kryptering som inneholder de krypterte dataene. Det må inneholde den krypterte oktett sekvensen som base64-kodede teksten i den <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>-egenskapen, eller oppgi en referanse til en ekstern plassering som inneholder den krypterte oktett rekkefølge ved hjelp av den <xref:System.Security.Cryptography.Xml.CipherData.CipherReference%2A>egenskapen.</xref:System.Security.Cryptography.Xml.CipherData.CipherReference%2A> </xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>       Hvis du vil ha mer informasjon om dette elementet, kan du se <xref:System.Security.Cryptography.Xml.CipherData>.</xref:System.Security.Cryptography.Xml.CipherData>"
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.  \n  \n [!code-cs[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/csharp/p-system.security.crypto_62_1.cs)]\n [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/visualbasic/p-system.security.crypto_62_1.vb)]"
  syntax:
    content: public virtual System.Security.Cryptography.Xml.CipherData CipherData { get; set; }
    return:
      type: System.Security.Cryptography.Xml.CipherData
      description: "A <xref href=&quot;System.Security.Cryptography.Xml.CipherData&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.EncryptedType.CipherData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Egenskapen CipherData skulle <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.Encoding
  id: Encoding
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: Encoding
  nameWithType: EncryptedType.Encoding
  fullName: System.Security.Cryptography.Xml.EncryptedType.Encoding
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Henter eller angir den <xref uid=&quot;langword_csharp_Encoding&quot; name=&quot;Encoding&quot; href=&quot;&quot;> </xref> for en <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;> </xref> forekomst i XML-kryptering."
  remarks: "Denne egenskapen beskriver kodingen for de krypterte dataene. For eksempel hvis de krypterte dataene er en base64-kodede PNG, kan kodingen angis som &quot;http://www.w3.org/2000/09/xmldsig#base64&quot;."
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class. This sample then displays various properties of the <xref:System.Security.Cryptography.Xml.EncryptedData> class to the console.  \n  \n [!code-vb[Cryptography.XML.EncryptedData#1](~/add/codesnippet/visualbasic/p-system.security.crypto_118_1.vb)]\n [!code-cs[Cryptography.XML.EncryptedData#1](~/add/codesnippet/csharp/p-system.security.crypto_118_1.cs)]"
  syntax:
    content: public virtual string Encoding { get; set; }
    return:
      type: System.String
      description: "En streng som beskriver kodingen for de krypterte dataene."
  overload: System.Security.Cryptography.Xml.EncryptedType.Encoding*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod
  id: EncryptionMethod
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: EncryptionMethod
  nameWithType: EncryptedType.EncryptionMethod
  fullName: System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Henter eller angir den <xref uid=&quot;langword_csharp_&lt;EncryptionMethod&gt;&quot; name=&quot;&lt;EncryptionMethod&gt;&quot; href=&quot;&quot;> </xref> elementet for XML-kryptering."
  remarks: "Den `<EncryptionMethod>` er et valgfritt element som beskriver krypteringsalgoritmen som ble brukt til de krypterte dataene. Hvis elementet ikke finnes, krypteringsalgoritmen må være kjent av mottakeren eller dekryptering mislykkes."
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.  \n  \n [!code-cs[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/csharp/p-system.security.crypto_36_1.cs)]\n [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/visualbasic/p-system.security.crypto_36_1.vb)]"
  syntax:
    content: public virtual System.Security.Cryptography.Xml.EncryptionMethod EncryptionMethod { get; set; }
    return:
      type: System.Security.Cryptography.Xml.EncryptionMethod
      description: "En <xref href=&quot;System.Security.Cryptography.Xml.EncryptionMethod&quot;> </xref> objektet som representerer den <xref uid=&quot;langword_csharp_&lt;EncryptionMethod&gt;&quot; name=&quot;&lt;EncryptionMethod&gt;&quot; href=&quot;&quot;> </xref> elementet."
  overload: System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties
  id: EncryptionProperties
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: EncryptionProperties
  nameWithType: EncryptedType.EncryptionProperties
  fullName: System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Henter eller angir den <xref uid=&quot;langword_csharp_&lt;EncryptionProperties&gt;&quot; name=&quot;&lt;EncryptionProperties&gt;&quot; href=&quot;&quot;> </xref> element i XML-kryptering."
  remarks: "Den `<EncryptionProperties>` elementet kan inneholde mer informasjon om oppretting av den <xref:System.Security.Cryptography.Xml.EncryptedType>forekomsten, for eksempel en dato- og tidsstempel eller serienummeret for kryptografisk maskinvare som brukes under kryptering.</xref:System.Security.Cryptography.Xml.EncryptedType>"
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class. This sample then displays various properties of the <xref:System.Security.Cryptography.Xml.EncryptedData> class to the console.  \n  \n [!code-vb[Cryptography.XML.EncryptedData#1](~/add/codesnippet/visualbasic/p-system.security.crypto_42_1.vb)]\n [!code-cs[Cryptography.XML.EncryptedData#1](~/add/codesnippet/csharp/p-system.security.crypto_42_1.cs)]"
  syntax:
    content: public virtual System.Security.Cryptography.Xml.EncryptionPropertyCollection EncryptionProperties { get; }
    return:
      type: System.Security.Cryptography.Xml.EncryptionPropertyCollection
      description: "En <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> objektet."
  overload: System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: GetXml()
  nameWithType: EncryptedType.GetXml()
  fullName: System.Security.Cryptography.Xml.EncryptedType.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Returnerer XML-representasjon av den <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;> </xref> objektet."
  remarks: "Bruk denne metoden til å sende den `<EncryptedType>` element i XML."
  syntax:
    content: public abstract System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "En <xref href=&quot;System.Xml.XmlElement&quot;> </xref> objektet som representerer den <xref uid=&quot;langword_csharp_&lt;EncryptedType&gt;&quot; name=&quot;&lt;EncryptedType&gt;&quot; href=&quot;&quot;> </xref> element i XML-kryptering."
  overload: System.Security.Cryptography.Xml.EncryptedType.GetXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.Id
  id: Id
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: Id
  nameWithType: EncryptedType.Id
  fullName: System.Security.Cryptography.Xml.EncryptedType.Id
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Henter eller angir den <xref uid=&quot;langword_csharp_Id&quot; name=&quot;Id&quot; href=&quot;&quot;> </xref> for en <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;> </xref> forekomst i XML-kryptering."
  remarks: "Den `Id` valgfrie attributtet for den `<EncryptedType>` element som inneholder en standard metode for å tilordne en streng-IDen til et element i et XML-dokument."
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class. This sample then displays various properties of the <xref:System.Security.Cryptography.Xml.EncryptedData> class to the console.  \n  \n [!code-vb[Cryptography.XML.EncryptedData#1](~/add/codesnippet/visualbasic/p-system.security.crypto_111_1.vb)]\n [!code-cs[Cryptography.XML.EncryptedData#1](~/add/codesnippet/csharp/p-system.security.crypto_111_1.cs)]"
  syntax:
    content: public virtual string Id { get; set; }
    return:
      type: System.String
      description: "En streng med de <xref uid=&quot;langword_csharp_Id&quot; name=&quot;Id&quot; href=&quot;&quot;> </xref> for den <xref uid=&quot;langword_csharp_&lt;EncryptedType&gt;&quot; name=&quot;&lt;EncryptedType&gt;&quot; href=&quot;&quot;> </xref> elementet."
  overload: System.Security.Cryptography.Xml.EncryptedType.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.KeyInfo
  id: KeyInfo
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: KeyInfo
  nameWithType: EncryptedType.KeyInfo
  fullName: System.Security.Cryptography.Xml.EncryptedType.KeyInfo
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Henter for sett av <xref uid=&quot;langword_csharp_&lt;KeyInfo&gt;&quot; name=&quot;&lt;KeyInfo&gt;&quot; href=&quot;&quot;> </xref> element i XML-kryptering."
  remarks: "Den `<KeyInfo>` elementet er et valgfritt element som inneholder informasjon om nøkkelen som brukes til å kryptere dataene."
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class. This sample then displays various properties of the <xref:System.Security.Cryptography.Xml.EncryptedData> class to the console.  \n  \n [!code-vb[Cryptography.XML.EncryptedData#1](~/add/codesnippet/visualbasic/p-system.security.crypto_79_1.vb)]\n [!code-cs[Cryptography.XML.EncryptedData#1](~/add/codesnippet/csharp/p-system.security.crypto_79_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }
    return:
      type: System.Security.Cryptography.Xml.KeyInfo
      description: "A <xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.EncryptedType.KeyInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: EncryptedType.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.EncryptedType.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Laster inn XML-informasjon i den <xref uid=&quot;langword_csharp_&lt;EncryptedType&gt;&quot; name=&quot;&lt;EncryptedType&gt;&quot; href=&quot;&quot;> </xref> element i XML-kryptering."
  remarks: "Bruk denne metoden til å laste inn en eksisterende XML-elementet i den <xref:System.Security.Cryptography.Xml.EncryptedType>objektet.</xref:System.Security.Cryptography.Xml.EncryptedType>"
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.  \n  \n [!code-cs[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/csharp/m-system.security.crypto_43_1.cs)]\n [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/visualbasic/m-system.security.crypto_43_1.vb)]"
  syntax:
    content: public abstract void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "En <xref href=&quot;System.Xml.XmlElement&quot;> </xref> -objekt som representerer en XML-elementet skal brukes i den <xref uid=&quot;langword_csharp_&lt;EncryptedType&gt;&quot; name=&quot;&lt;EncryptedType&gt;&quot; href=&quot;&quot;> </xref> elementet."
  overload: System.Security.Cryptography.Xml.EncryptedType.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> provided is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.MimeType
  id: MimeType
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: MimeType
  nameWithType: EncryptedType.MimeType
  fullName: System.Security.Cryptography.Xml.EncryptedType.MimeType
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Henter eller angir den <xref uid=&quot;langword_csharp_MimeType&quot; name=&quot;MimeType&quot; href=&quot;&quot;> </xref> for en <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;> </xref> forekomst i XML-kryptering."
  remarks: 'The `MimeType` attribute is an optional attribute that describes the media type of the encrypted data. The value of this attribute is a string with values defined by [RFC 2045: Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies](http://www.ietf.org/rfc/rfc2045.txt). For example, if the data that is encrypted is a base64-encoded PNG, the `Encoding` attribute would be ''http://www.w3.org/2000/09/xmldsig#base64'' and the `MimeType` would be ''image/png''. This attribute is optional and no validation of the `MimeType` information is required. The attribute does not indicate that the encryption application must do any additional processing. Note that this information may not be necessary if it is already bound to the identifier in the `Type` attribute.'
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class. This sample then displays various properties of the <xref:System.Security.Cryptography.Xml.EncryptedData> class to the console.  \n  \n [!code-vb[Cryptography.XML.EncryptedData#1](~/add/codesnippet/visualbasic/p-system.security.crypto_19_1.vb)]\n [!code-cs[Cryptography.XML.EncryptedData#1](~/add/codesnippet/csharp/p-system.security.crypto_19_1.cs)]"
  syntax:
    content: public virtual string MimeType { get; set; }
    return:
      type: System.String
      description: "En streng som beskriver medietypen for de krypterte dataene."
  overload: System.Security.Cryptography.Xml.EncryptedType.MimeType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.Type
  id: Type
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: Type
  nameWithType: EncryptedType.Type
  fullName: System.Security.Cryptography.Xml.EncryptedType.Type
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Henter eller angir den <xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref> for en <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;> </xref> forekomst i XML-kryptering."
  remarks: 'The `Type` attribute is an optional attribute that identifies type information about the text form of the encrypted content. While optional, this is an important attribute and is used in mandatory processing described in [Processing Rules: Decryption](http://www.w3.org/TR/xmlenc-core/) (section 4.2) of the XML Encryption Syntax and Processing specification (http://www.w3.org/TR/xmlenc-core/). If the `<EncryptedData>` element contains data of type `''element''` or element `''content''`, and replaces that data in an XML document, it is strongly recommended that the `Type` attribute be provided. Without this information, the application attempting to decrypt the information will be unable to automatically restore the XML document to its original text form.'
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.  \n  \n [!code-cs[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/csharp/p-system.security.crypto_47_1.cs)]\n [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/visualbasic/p-system.security.crypto_47_1.vb)]"
  syntax:
    content: public virtual string Type { get; set; }
    return:
      type: System.String
      description: "En streng som beskriver tekstform til krypterte data."
  overload: System.Security.Cryptography.Xml.EncryptedType.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.Xml.EncryptedType.#ctor
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: EncryptedType()
  nameWithType: EncryptedType.EncryptedType()
  fullName: System.Security.Cryptography.Xml.EncryptedType.EncryptedType()
- uid: System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: AddProperty(EncryptionProperty)
  nameWithType: EncryptedType.AddProperty(EncryptionProperty)
  fullName: System.Security.Cryptography.Xml.EncryptedType.AddProperty(EncryptionProperty)
- uid: System.Security.Cryptography.Xml.EncryptionProperty
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: EncryptionProperty
  nameWithType: EncryptionProperty
  fullName: System.Security.Cryptography.Xml.EncryptionProperty
- uid: System.Security.Cryptography.Xml.EncryptedType.CipherData
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: CipherData
  nameWithType: EncryptedType.CipherData
  fullName: System.Security.Cryptography.Xml.EncryptedType.CipherData
- uid: System.Security.Cryptography.Xml.CipherData
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: CipherData
  nameWithType: CipherData
  fullName: System.Security.Cryptography.Xml.CipherData
- uid: System.Security.Cryptography.Xml.EncryptedType.Encoding
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: Encoding
  nameWithType: EncryptedType.Encoding
  fullName: System.Security.Cryptography.Xml.EncryptedType.Encoding
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: EncryptionMethod
  nameWithType: EncryptedType.EncryptionMethod
  fullName: System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod
- uid: System.Security.Cryptography.Xml.EncryptionMethod
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: EncryptionMethod
  nameWithType: EncryptionMethod
  fullName: System.Security.Cryptography.Xml.EncryptionMethod
- uid: System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: EncryptionProperties
  nameWithType: EncryptedType.EncryptionProperties
  fullName: System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: EncryptionPropertyCollection
  nameWithType: EncryptionPropertyCollection
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection
- uid: System.Security.Cryptography.Xml.EncryptedType.GetXml
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: GetXml()
  nameWithType: EncryptedType.GetXml()
  fullName: System.Security.Cryptography.Xml.EncryptedType.GetXml()
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.EncryptedType.Id
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: Id
  nameWithType: EncryptedType.Id
  fullName: System.Security.Cryptography.Xml.EncryptedType.Id
- uid: System.Security.Cryptography.Xml.EncryptedType.KeyInfo
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: KeyInfo
  nameWithType: EncryptedType.KeyInfo
  fullName: System.Security.Cryptography.Xml.EncryptedType.KeyInfo
- uid: System.Security.Cryptography.Xml.KeyInfo
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: KeyInfo
  nameWithType: KeyInfo
  fullName: System.Security.Cryptography.Xml.KeyInfo
- uid: System.Security.Cryptography.Xml.EncryptedType.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: EncryptedType.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.EncryptedType.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.EncryptedType.MimeType
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: MimeType
  nameWithType: EncryptedType.MimeType
  fullName: System.Security.Cryptography.Xml.EncryptedType.MimeType
- uid: System.Security.Cryptography.Xml.EncryptedType.Type
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: Type
  nameWithType: EncryptedType.Type
  fullName: System.Security.Cryptography.Xml.EncryptedType.Type
- uid: System.Security.Cryptography.Xml.EncryptedType.#ctor*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: EncryptedType
  nameWithType: EncryptedType.EncryptedType
- uid: System.Security.Cryptography.Xml.EncryptedType.AddProperty*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: AddProperty
  nameWithType: EncryptedType.AddProperty
- uid: System.Security.Cryptography.Xml.EncryptedType.CipherData*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: CipherData
  nameWithType: EncryptedType.CipherData
- uid: System.Security.Cryptography.Xml.EncryptedType.Encoding*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: Encoding
  nameWithType: EncryptedType.Encoding
- uid: System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: EncryptionMethod
  nameWithType: EncryptedType.EncryptionMethod
- uid: System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: EncryptionProperties
  nameWithType: EncryptedType.EncryptionProperties
- uid: System.Security.Cryptography.Xml.EncryptedType.GetXml*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: GetXml
  nameWithType: EncryptedType.GetXml
- uid: System.Security.Cryptography.Xml.EncryptedType.Id*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: Id
  nameWithType: EncryptedType.Id
- uid: System.Security.Cryptography.Xml.EncryptedType.KeyInfo*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: KeyInfo
  nameWithType: EncryptedType.KeyInfo
- uid: System.Security.Cryptography.Xml.EncryptedType.LoadXml*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: LoadXml
  nameWithType: EncryptedType.LoadXml
- uid: System.Security.Cryptography.Xml.EncryptedType.MimeType*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: MimeType
  nameWithType: EncryptedType.MimeType
- uid: System.Security.Cryptography.Xml.EncryptedType.Type*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: Type
  nameWithType: EncryptedType.Type
