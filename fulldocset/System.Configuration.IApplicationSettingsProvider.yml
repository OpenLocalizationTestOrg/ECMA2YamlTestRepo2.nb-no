### YamlMime:ManagedReference
items:
- uid: System.Configuration.IApplicationSettingsProvider
  id: IApplicationSettingsProvider
  children:
  - System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  - System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  - System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  langs:
  - csharp
  name: IApplicationSettingsProvider
  nameWithType: IApplicationSettingsProvider
  fullName: System.Configuration.IApplicationSettingsProvider
  type: Interface
  summary: "Definerer utvidede funksjoner for klientbaserte leverandører av innstillinger."
  remarks: "Programmet innstillinger arkitekturen gjør det mulig å mekanisme egendefinerte lagring for programinnstillinger ved å opprette en leverandør av egendefinerte innstillinger, som er en klasse som er avledet fra <xref:System.Configuration.SettingsProvider>.</xref:System.Configuration.SettingsProvider> Slik klasse inneholder basisfunksjonalitet for lagring og henting av egenskaper. Du kan imidlertid legge til flere standard funksjoner ved å implementere grensesnittet IApplicationSettingsProvider i leverandøren egendefinerte innstillinger. Dette grensesnittet inneholder tre metoder som primært Aktiver innstillinger leverandøren mer effektivt referansen programmet versjon endringer. Vanligvis innstillinger leverandøren lagrer programinnstillinger for ulike versjoner av en applikasjon for å forutse følgende omstendigheter:-Side-ved-side kjøring av forskjellige versjoner av en applikasjon.      -Beholder programinnstillinger når man oppgraderer en applikasjon.      -Tilbakestilling applikasjonsinnstillingene til standardverdiene for den for øyeblikket brukes versjonen.       Den <xref:System.Configuration.LocalFileSettingsProvider>klassen implementerer grensesnittet IApplicationSettingsProvider.</xref:System.Configuration.LocalFileSettingsProvider> Det samme settet med metoder som IApplicationSettingsProvider inneholder finnes også i den <xref:System.Configuration.ApplicationSettingsBase>klassen aktivering opprettingen av en forhåndsdefinert kommunikasjonskanal mellom wrapperen et program som innstillinger og innstillinger leverandørene.</xref:System.Configuration.ApplicationSettingsBase>      > [!NOTE] > Dette grensesnittet er valgfrie. Hvis en leverandør implementerer dette grensesnittet, mislykkes innstillinger-infrastruktur uten varsling hvis den prøver å få tilgang til noen av metodene som er definert i dette grensesnittet."
  syntax:
    content: public interface IApplicationSettingsProvider
  implements: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  id: GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Returnerer verdien for egenskapen angitte innstillingene for den forrige versjonen av samme program."
  remarks: "Du kan bruke metoden GetPreviousVersion sammen med den <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A>metode for å overføre programinnstillinger under eller etter installasjon av en ny versjon av en applikasjon.</xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A>"
  syntax:
    content: public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "En <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> som beskriver gjeldende programmet."
    - id: property
      type: System.Configuration.SettingsProperty
      description: "Den <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> skal returneres."
    return:
      type: System.Configuration.SettingsPropertyValue
      description: "En <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref> som den sist ble angitt i den forrige versjonen av programmet og inneholder verdien for den angitte egenskapsinnstillingen eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis innstillingen ikke blir funnet."
  overload: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  id: Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: Reset(SettingsContext)
  nameWithType: IApplicationSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.IApplicationSettingsProvider.Reset(SettingsContext)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Tilbakestiller applikasjonsinnstillingene knyttet til den angitte applikasjonen til standardverdiene."
  remarks: "Metoden tilbakestilling initialiserer lagrede verdiene i den angitte applikasjon innstillinger gruppen. I motsetning <xref:System.Configuration.DefaultSettingValueAttribute>leverer en standardverdi for en enkelt innstillinger egenskap under initialisering av egenskap, hvis den har ingen verdi er lagret.</xref:System.Configuration.DefaultSettingValueAttribute>       Innstillinger for leverandøren bestemmer rimelig standardverdien er for den angitte gruppen applikasjonsinnstillingene. For eksempel implementering i <xref:System.Configuration.LocalFileSettingsProvider>tilbakestiller område bruker innstillingene til de delte verdiene i den `application.exe.config` filen; derimot den forlater de Programdefinert-innstillingene.</xref:System.Configuration.LocalFileSettingsProvider>"
  syntax:
    content: public void Reset (System.Configuration.SettingsContext context);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "En <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> som beskriver gjeldende programmet."
  overload: System.Configuration.IApplicationSettingsProvider.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  id: Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Angir til leverandøren av at programmet er oppgradert. Dette gir leverandøren mulighet til å oppgradere lagrede innstillingene etter behov."
  remarks: ".NET Framework muliggjør side-ved-side installasjon og kjøring av forskjellige versjoner av samme program. Programmet innstillinger leverandøren lagrer applikasjonsinnstillingene for hver versjon av en applikasjon for å sikre isolasjon. Du kan likevel migrere innstillinger fra den forrige versjonen av en applikasjon med den gjeldende. For å gi denne overføringen funksjonalitet, bruker du metoden oppgradering, implementert i en klasse som er avledet fra <xref:System.Configuration.SettingsProvider>.</xref:System.Configuration.SettingsProvider>       Du kan bruke metoden oppgradering sammen med den <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A>metode for å overføre programinnstillinger under eller etter installasjon av en ny versjon av en applikasjon.</xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A>       Denne metoden skal undertrykkes for hver applikasjonsinnstilling med den <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>er installert, eller for hele innstillinger wrapper klassen, som er avledet fra <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase> </xref:System.Configuration.NoSettingsVersionUpgradeAttribute>"
  syntax:
    content: public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "En <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> som beskriver gjeldende programmet."
    - id: properties
      type: System.Configuration.SettingsPropertyCollection
      description: "En <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref> som inneholder innstillinger for egenskapsgruppe som inneholder verdiene som skal hentes."
  overload: System.Configuration.IApplicationSettingsProvider.Upgrade*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
- uid: System.Configuration.SettingsPropertyValue
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValue
  nameWithType: SettingsPropertyValue
  fullName: System.Configuration.SettingsPropertyValue
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.SettingsProperty
  parent: System.Configuration
  isExternal: false
  name: SettingsProperty
  nameWithType: SettingsProperty
  fullName: System.Configuration.SettingsProperty
- uid: System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Reset(SettingsContext)
  nameWithType: IApplicationSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.IApplicationSettingsProvider.Reset(SettingsContext)
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: GetPreviousVersion
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion
- uid: System.Configuration.IApplicationSettingsProvider.Reset*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Reset
  nameWithType: IApplicationSettingsProvider.Reset
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Upgrade
  nameWithType: IApplicationSettingsProvider.Upgrade
