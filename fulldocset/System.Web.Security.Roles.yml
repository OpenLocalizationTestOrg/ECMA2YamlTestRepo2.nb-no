### YamlMime:ManagedReference
items:
- uid: System.Web.Security.Roles
  id: Roles
  children:
  - System.Web.Security.Roles.AddUsersToRole(System.String[],System.String)
  - System.Web.Security.Roles.AddUsersToRoles(System.String[],System.String[])
  - System.Web.Security.Roles.AddUserToRole(System.String,System.String)
  - System.Web.Security.Roles.AddUserToRoles(System.String,System.String[])
  - System.Web.Security.Roles.ApplicationName
  - System.Web.Security.Roles.CacheRolesInCookie
  - System.Web.Security.Roles.CookieName
  - System.Web.Security.Roles.CookiePath
  - System.Web.Security.Roles.CookieProtectionValue
  - System.Web.Security.Roles.CookieRequireSSL
  - System.Web.Security.Roles.CookieSlidingExpiration
  - System.Web.Security.Roles.CookieTimeout
  - System.Web.Security.Roles.CreatePersistentCookie
  - System.Web.Security.Roles.CreateRole(System.String)
  - System.Web.Security.Roles.DeleteCookie
  - System.Web.Security.Roles.DeleteRole(System.String)
  - System.Web.Security.Roles.DeleteRole(System.String,System.Boolean)
  - System.Web.Security.Roles.Domain
  - System.Web.Security.Roles.Enabled
  - System.Web.Security.Roles.FindUsersInRole(System.String,System.String)
  - System.Web.Security.Roles.GetAllRoles
  - System.Web.Security.Roles.GetRolesForUser
  - System.Web.Security.Roles.GetRolesForUser(System.String)
  - System.Web.Security.Roles.GetUsersInRole(System.String)
  - System.Web.Security.Roles.IsUserInRole(System.String)
  - System.Web.Security.Roles.IsUserInRole(System.String,System.String)
  - System.Web.Security.Roles.MaxCachedResults
  - System.Web.Security.Roles.Provider
  - System.Web.Security.Roles.Providers
  - System.Web.Security.Roles.RemoveUserFromRole(System.String,System.String)
  - System.Web.Security.Roles.RemoveUserFromRoles(System.String,System.String[])
  - System.Web.Security.Roles.RemoveUsersFromRole(System.String[],System.String)
  - System.Web.Security.Roles.RemoveUsersFromRoles(System.String[],System.String[])
  - System.Web.Security.Roles.RoleExists(System.String)
  langs:
  - csharp
  name: Roles
  nameWithType: Roles
  fullName: System.Web.Security.Roles
  type: Class
  summary: "Administrerer bruker medlemskap i roller for godkjenning kontroll i en ASP.NET-programmet. Denne klassen kan ikke arves."
  remarks: "ASP.NET rollebehandling kan du administrere godkjenning for programmet basert på grupper av brukere, referert til som roller. Ved å tilordne brukere til roller, kan du kontrollere tilgang til forskjellige deler eller funksjoner på webprogrammet basert på rollen i stedet for og i tillegg til å angi godkjenning basert på brukernavn. For eksempel kan en ansatt-programmet har roller som ledere, ansatte, ledere og så videre, der annen tilgang er angitt for hver rolle.       Brukere kan tilhøre flere roller. For eksempel hvis området er et diskusjonsforum, kanskje noen brukere både medlemmer og sensuransvarlige-rollen. Du kan definere hver rolle til å ha forskjellige tillatelser på området, og en bruker som har begge rollene har begge sett med rettigheter.       Hvis du vil aktivere rollebehandling for ASP.NET-programmet, kan du bruke elementet i den `system.web` delen i Web.config-filen for programmet, som vist i eksemplet nedenfor.      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=&quot;Data Source=localhost;Initial Catalog=aspnetdb;Integrated Security=SSPI;&quot; />     </connectionStrings>        <system.web>       <authentication mode=&quot;Forms&quot; >         <forms loginUrl=&quot;login.aspx&quot;         name=&quot;.ASPXFORMSAUTH&quot; />       </authentication>        <roleManager defaultProvider=&quot;SqlProvider&quot;        enabled=&quot;true&quot;       cacheRolesInCookie=&quot;true&quot;       cookieName=&quot;.ASPROLES&quot;       cookieTimeout=&quot;30&quot;       cookiePath=&quot;/&quot;       cookieRequireSSL=&quot;false&quot;       cookieSlidingExpiration=&quot;true&quot;       cookieProtection=&quot;All&quot; >       <providers>         <add           name=&quot;SqlProvider&quot;           type=&quot;System.Web.Security.SqlRoleProvider&quot;           connectionStringName=&quot;SqlServices&quot;           applicationName=&quot;SampleApplication&quot; />         </providers>       </roleManager>     </system.web>   </configuration>   ```Du kan angi godkjenningsregler i konfigurasjonsfilen for webprogrammet eller programmatisk i koden. For eksempel delen nedenfor fra en Web.config-filen krever at brukere å logge på (ved å nekte anonyme brukere), og deretter kan du bare brukere i Administratorer-brukerrollen skal ha tilgang.      ```   <authorization>     <deny users=&quot;?&quot; />     <allow roles=&quot;Administrators&quot; />     <deny users=&quot;*&quot; />   </authorization>   ```Hvis du bruker den `authorization` -delen i programmets Web.config-filen til å angi godkjenning basert på roller, brukere av programmet må oppgi en godkjent brukeridentitet. Du kan godkjenne brukere ved hjelp av Windows eller skjemaer godkjenning. Anonyme brukere kan ikke tilordnes til en rolle. Roller som kan brukes uavhengig av, eller i forbindelse med ASP.NET <xref:System.Web.Security.Membership>klasser.</xref:System.Web.Security.Membership>       For å bekrefte Rollemedlemskap programmatisk, kan du bruke klassen roller eller <xref:System.Web.UI.Page.User%2A?displayProperty=fullName>egenskapen med den <xref:System.Web.Security.Roles.IsUserInRole%2A>metode, eller du kan bruke den <xref:System.Web.UI.Page.User%2A?displayProperty=fullName>egenskapen med den <xref:System.Security.Principal.IPrincipal.IsInRole%2A?displayProperty=fullName>metoden.</xref:System.Security.Principal.IPrincipal.IsInRole%2A?displayProperty=fullName> </xref:System.Web.UI.Page.User%2A?displayProperty=fullName> </xref:System.Web.Security.Roles.IsUserInRole%2A> </xref:System.Web.UI.Page.User%2A?displayProperty=fullName> Eksempelkode som kontrollerer programmatisk Rollemedlemskap, i avsnittet eksempel i dette emnet.       Klassen roller kan du opprette og slette roller og du kan legge til brukere i eller fjerne brukere fra roller.      > [!NOTE] > Hvis du har konfigurert programmet for å bruke den <xref:System.Web.Security.WindowsTokenRoleProvider>klasse, du kan ikke endre roller eller rollemedlemskap.</xref:System.Web.Security.WindowsTokenRoleProvider> Den <xref:System.Web.Security.WindowsTokenRoleProvider>classverifies medlemskap i Windows-sikkerhet grupper bare.</xref:System.Web.Security.WindowsTokenRoleProvider> I så fall må du bruke kontobehandling for Windows-bruker i stedet for ASP.NET-roller til å opprette og slette grupper og administrere medlemskap i gruppen.       Du kan lagre informasjon om i flere datakilder.      -Du kan bruke den <xref:System.Web.Security.WindowsTokenRoleProvider>klassen for å hente informasjon om basert på medlemskap i Windows-grupper.</xref:System.Web.Security.WindowsTokenRoleProvider>      -Du kan lagre rolleinformasjon i SQL Server-database ved hjelp av <xref:System.Web.Security.SqlRoleProvider>klasse.</xref:System.Web.Security.SqlRoleProvider>      -Hvis du har eksisterende rolleinformasjon eller vil lagre informasjon om i og hente informasjon om fra andre datakilder enn Windows, en autorisasjonslageret eller SQL Server, kan du implementere en egendefinert rolleleverandør ved å opprette en klassen som arver <xref:System.Web.Security.RoleProvider>abstrakt klasse.</xref:System.Web.Security.RoleProvider> Hvis du vil ha mer informasjon, se [implementere en rolleleverandør](~/add/includes/ajax-current-ext-md.md).       Hvis brukerens leser godtar informasjonskapsler, kan du lagre rolleinformasjon for denne brukeren i en informasjonskapsel på datamaskinen. På hver sideforespørsel leser ASP.NET rollen informasjonen for denne brukeren fra informasjonskapselen. Dette kan forbedre ytelsen ved å redusere kommunikasjon kreves med datakilden for å hente informasjon om. Hvis role-informasjon for en bruker er for lang til å lagre i en informasjonskapsel, ASP.NET lagrer sist brukte rollen informasjonen i informasjonskapselen, og slår deretter opp ekstra informasjon om i datakilden som kreves. Hvis brukerens nettleseren støtter ikke informasjonskapsler eller informasjonskapsler er deaktivert, er ikke informasjon om bufret i en informasjonskapsel.       Du kan forbedre påliteligheten til role-navn som er bufret i en informasjonskapsel ved å angi en <xref:System.Web.Security.Roles.CookieProtectionValue%2A>egenskapen når du konfigurerer ASP.NET roller.</xref:System.Web.Security.Roles.CookieProtectionValue%2A> Standard <xref:System.Web.Security.Roles.CookieProtectionValue%2A>er `All`, som krypterer role-navn på informasjonskapselen og kontrollerer at innholdet for informasjonskapsel (cookie) ikke er endret.</xref:System.Web.Security.Roles.CookieProtectionValue%2A>"
  example:
  - "The following example shows the Web.config file for an application configured to use both ASP.NET membership and ASP.NET roles and to use the <xref:System.Web.Security.SqlRoleProvider> to store membership and role information in a SQL Server database. Users are authenticated with forms authentication and only users in the Administrators role are allowed access to the application.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"SqlServices\" connectionString=\"Data Source=localhost;Initial Catalog=aspnetdb;Integrated Security=SSPI;\" />  \n  </connectionStrings>  \n  \n  <system.web>  \n    <authentication mode=\"Forms\" >  \n      <forms loginUrl=\"login.aspx\"  \n      name=\".ASPXFORMSAUTH\" />  \n    </authentication>  \n  \n    <authorization>  \n      <deny users=\"?\" />  \n      <allow roles=\"Administrators\" />  \n      <deny users=\"*\" />  \n    </authorization>  \n  \n    <membership defaultProvider=\"AspNetSqlProvider\" userIsOnlineTimeWindow=\"15\">  \n    </membership>  \n  \n    <roleManager defaultProvider=\"SqlProvider\"   \n      enabled=\"true\"  \n      cacheRolesInCookie=\"true\"  \n      cookieName=\".ASPROLES\"  \n      cookieTimeout=\"30\"  \n      cookiePath=\"/\"  \n      cookieRequireSSL=\"true\"  \n      cookieSlidingExpiration=\"true\"  \n      cookieProtection=\"All\" >  \n  \n      <providers>  \n        <clear />  \n        <add  \n          name=\"SqlProvider\"  \n          type=\"System.Web.Security.SqlRoleProvider\"  \n          connectionStringName=\"SqlServices\"  \n          applicationName=\"SampleApplication\" />  \n        </providers>  \n  \n    </roleManager>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following code example programmatically checks whether the logged-on user is in the Administrators role before allowing the user to view other users' roles.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public static class Roles
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.Roles.AddUsersToRole(System.String[],System.String)
  id: AddUsersToRole(System.String[],System.String)
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: AddUsersToRole(String[],String)
  nameWithType: Roles.AddUsersToRole(String[],String)
  fullName: System.Web.Security.Roles.AddUsersToRole(String[],String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Legger de angitte brukerne til den angitte rollen."
  remarks: "Metoden AddUsersToRole kaller standard rolleleverandør for å knytte til de angitte brukerne med den angitte rollen i datakilden.       Hvis programmet bruker den <xref:System.Web.Security.SqlRoleProvider>class, databaseoppdateringer som er utført under kall til den <xref:System.Web.Security.SqlRoleProvider.AddUsersToRoles%2A>metoden utføres i en transaksjon.</xref:System.Web.Security.SqlRoleProvider.AddUsersToRoles%2A> </xref:System.Web.Security.SqlRoleProvider> Hvis en feil, for eksempel et brukernavn som allerede er i en bestemt rolle transaksjonen er rullet tilbake, og ingen oppdateringer, utføres.      > [!NOTE] > Brukernavn og role-navn kan ikke inneholde komma."
  example:
  - "The following code example adds one or more users to a role or removes a user from a role based on user input. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.Roles>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/csharp/m-system.web.security.ro_7_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/visualbasic/m-system.web.security.ro_7_1.aspx)]"
  syntax:
    content: public static void AddUsersToRole (string[] usernames, string roleName);
    parameters:
    - id: usernames
      type: System.String[]
      description: "En strengmatrise for brukernavn å legge til den angitte rollen."
    - id: roleName
      type: System.String
      description: "Rollen for å legge til de angitte brukernavnene."
  overload: System.Web.Security.Roles.AddUsersToRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - ett av elementene i <code>usernames</code> er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>er en tom streng eller inneholder et komma (,).       - eller - ett av elementene i <code>usernames</code> er en tom streng eller inneholder et komma (,).       - eller - <code>usernames</code> inneholder et duplisert element."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Rollebehandling er ikke aktivert."
  platform:
  - net462
- uid: System.Web.Security.Roles.AddUsersToRoles(System.String[],System.String[])
  id: AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: AddUsersToRoles(String[],String[])
  nameWithType: Roles.AddUsersToRoles(String[],String[])
  fullName: System.Web.Security.Roles.AddUsersToRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Legger de angitte brukerne til de angitte rollene."
  remarks: "Metoden AddUsersToRoles kaller standard rolleleverandør for å knytte til de angitte brukerne til de angitte rollene i datakilden.       Hvis programmet bruker den <xref:System.Web.Security.SqlRoleProvider>class, databaseoppdateringer som er utført under kall til den <xref:System.Web.Security.SqlRoleProvider.AddUsersToRoles%2A>metoden utføres i en transaksjon.</xref:System.Web.Security.SqlRoleProvider.AddUsersToRoles%2A> </xref:System.Web.Security.SqlRoleProvider> Hvis en feil, for eksempel et brukernavn som allerede er i en bestemt rolle transaksjonen er rullet tilbake, og ingen oppdateringer, utføres.      > [!NOTE] > Brukernavn og role-navn kan ikke inneholde komma."
  example:
  - "The following code example adds one or more users to one or more roles. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.Roles>.  \n  \n [!code-vb[System.Web.Security.Roles#1](~/add/codesnippet/visualbasic/m-system.web.security.ro_21_1.aspx)]\n [!code-cs[System.Web.Security.Roles#1](~/add/codesnippet/csharp/m-system.web.security.ro_21_1.aspx)]"
  syntax:
    content: public static void AddUsersToRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "En strengmatrise for brukernavn å legge til de angitte rollene."
    - id: roleNames
      type: System.String[]
      description: "En strengmatrise av role-navn for å legge til de angitte brukernavnene."
  overload: System.Web.Security.Roles.AddUsersToRoles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One of the roles in <code>roleNames</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       One of the users in <code>usernames</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Én av rollene i <code> roleNames </code> er en tom streng eller inneholder et komma (,).       - eller - en for brukere i <code> usernames </code> er en tom streng eller inneholder et komma (,).       - eller - <code> roleNames </code> inneholder et duplisert element.       - eller - <code> usernames </code> inneholder et duplisert element."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Rollebehandling er ikke aktivert."
  platform:
  - net462
- uid: System.Web.Security.Roles.AddUserToRole(System.String,System.String)
  id: AddUserToRole(System.String,System.String)
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: AddUserToRole(String,String)
  nameWithType: Roles.AddUserToRole(String,String)
  fullName: System.Web.Security.Roles.AddUserToRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Legger til brukeren som er angitt i den angitte rollen."
  remarks: "Metoden AddUserToRole kaller standard rolleleverandør for å knytte brukeren som er angitt til den angitte rollen i datakilden.      > [!NOTE] > Brukernavn og role-navn kan ikke inneholde komma."
  example:
  - "The following code example adds a user to a role. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.Roles>.  \n  \n [!code-cs[System.Web.Security.Roles#2](~/add/codesnippet/csharp/m-system.web.security.ro_19_1.aspx)]\n [!code-vb[System.Web.Security.Roles#2](~/add/codesnippet/visualbasic/m-system.web.security.ro_19_1.aspx)]"
  syntax:
    content: public static void AddUserToRole (string username, string roleName);
    parameters:
    - id: username
      type: System.String
      description: "Brukernavnet for å legge til den angitte rollen."
    - id: roleName
      type: System.String
      description: "Rollen for å legge til det angitte brukernavnet til."
  overload: System.Web.Security.Roles.AddUserToRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>username</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>er en tom streng eller inneholder et komma (,).       - eller - <code>username</code> er en tom streng eller inneholder et komma (,)."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Rollebehandling er ikke aktivert.       - eller - bruker allerede er tilordnet til den angitte rollen."
  platform:
  - net462
- uid: System.Web.Security.Roles.AddUserToRoles(System.String,System.String[])
  id: AddUserToRoles(System.String,System.String[])
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: AddUserToRoles(String,String[])
  nameWithType: Roles.AddUserToRoles(String,String[])
  fullName: System.Web.Security.Roles.AddUserToRoles(String,String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Legger til brukeren som er angitt i de angitte rollene."
  remarks: "Metoden AddUserToRoles kaller standard rolleleverandør for å knytte brukeren som er angitt til de angitte rollene i datakilden.       Hvis programmet bruker den <xref:System.Web.Security.SqlRoleProvider>klasse, databaseoppdateringer som er utført under kall til metoden AddUserToRoles utføres i en transaksjon.</xref:System.Web.Security.SqlRoleProvider> Hvis en feil, for eksempel et brukernavn som allerede er i en bestemt rolle transaksjonen er rullet tilbake, og ingen oppdateringer, utføres.      > [!NOTE] > Brukernavn og role-navn kan ikke inneholde komma."
  example:
  - "The following code example adds a user to one or more roles. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.Roles>.  \n  \n [!code-vb[System.Web.Security.Roles#3](~/add/codesnippet/visualbasic/m-system.web.security.ro_20_1.aspx)]\n [!code-cs[System.Web.Security.Roles#3](~/add/codesnippet/csharp/m-system.web.security.ro_20_1.aspx)]"
  syntax:
    content: public static void AddUserToRoles (string username, string[] roleNames);
    parameters:
    - id: username
      type: System.String
      description: "Brukernavnet for å legge til de angitte rollene."
    - id: roleNames
      type: System.String[]
      description: "En strengmatrise av å legge til det angitte brukernavnet til."
  overload: System.Web.Security.Roles.AddUserToRoles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One of the roles in <code>roleNames</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>username</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Én av rollene i <code> roleNames </code> er en tom streng eller inneholder et komma (,).       - eller - <code> username </code> er en tom streng eller inneholder et komma (,).       - eller - <code> roleNames </code> inneholder et duplisert element."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Rollebehandling er ikke aktivert."
  platform:
  - net462
- uid: System.Web.Security.Roles.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: ApplicationName
  nameWithType: Roles.ApplicationName
  fullName: System.Web.Security.Roles.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter eller angir navnet på programmet til å lagre og hente informasjon om for."
  remarks: "Egenskapen ApplicationName brukes av den <xref:System.Web.Security.Roles>klassen for å knytte brukere og roller med ulike applikasjoner.</xref:System.Web.Security.Roles> Dette aktiverer flere programmer å bruke den samme datakilden til å lagre informasjon om rollen bruker og uten å kjøre i konflikter mellom dupliserte brukernavn eller dupliserte role-navn. Flere ASP.NET-applikasjoner kan bruke den samme datakilden ved å angi samme verdi i egenskapen ApplicationName. Du kan angi egenskapen ApplicationName programmatisk, eller du kan angi den deklarativt i konfigurasjonsfilen for webprogrammet ved hjelp av `applicationName` attributtet.       Hvis webprogrammet bruker den <xref:System.Web.Security.SqlRoleProvider>klassen og en verdi ikke er angitt for den `applicationName` attributtet i konfigurasjonsfilen, den <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=fullName>egenskapsverdien for gjeldende <xref:System.Web.HttpContext.Request%2A?displayProperty=fullName>egenskapen brukes.</xref:System.Web.HttpContext.Request%2A?displayProperty=fullName> </xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=fullName> </xref:System.Web.Security.SqlRoleProvider>      > [!CAUTION] > Fordi en enkelt rollen leverandøren Standardforekomst brukes for alle forespørsler som ble behandlet av en <xref:System.Web.HttpApplication>objektet, du kan ha flere forespørsler kjøres samtidig, og forsøk på å angi egenskapsverdien ApplicationName.</xref:System.Web.HttpApplication> Egenskapen ApplicationName er ikke klarert for flere skriver tråd, og endre egenskapsverdien ApplicationName kan føre til uventede resultater for flere brukere med en applikasjon. Du bør ikke skrive kode slik at brukerne kan angi egenskapen ApplicationName hvis nødvendig. Et eksempel på et program der angivelse av ApplicationName-egenskapen kan være nødvendig med er et administrative program som administrerer rollen data for flere applikasjoner. Et slikt program må være et program for én bruker og ikke et webprogram."
  example:
  - "The following example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application uses a <xref:System.Web.Security.SqlRoleProvider> instance and sets the `applicationName` attribute to `MyApplication`.  \n  \n```  \n<roleManager defaultProvider=\"SqlProvider\"   \n  enabled=\"true\"  \n  cacheRolesInCookie=\"true\"  \n  cookieName=\".ASPROLES\"  \n  cookieTimeout=\"30\"  \n  cookiePath=\"/\"  \n  cookieRequireSSL=\"false\"  \n  cookieSlidingExpiration=\"true\"  \n  cookieProtection=\"All\" >  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlRoleProvider\"  \n      connectionStringName=\"SqlServices\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</roleManager>  \n```"
  syntax:
    content: public static string ApplicationName { get; set; }
    return:
      type: System.String
      description: "Navnet på programmet til å lagre og hente informasjon om for."
  overload: System.Web.Security.Roles.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Roles.CacheRolesInCookie
  id: CacheRolesInCookie
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: CacheRolesInCookie
  nameWithType: Roles.CacheRolesInCookie
  fullName: System.Web.Security.Roles.CacheRolesInCookie
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en verdi som angir om den gjeldende brukerroller bufres i en informasjonskapsel."
  remarks: "Når egenskapen CacheRolesInCookie er satt til `true` i Web.config-filen rolleinformasjon for hver bruker som er lagret i en informasjonskapsel. Når rollebehandling kontrollerer om brukeren finnes i en bestemt rolle, kontrolleres roller informasjonskapselen før rolleleverandør kalles for å se på listen roller i datakilden. Informasjonskapselen oppdateres dynamisk for å hurtigbufre nylig godkjent role-navn.       Du kan forbedre påliteligheten til role-navn som er bufret i en informasjonskapsel ved å angi en <xref:System.Web.Security.Roles.CookieProtectionValue%2A>egenskapen når du konfigurerer ASP.NET roller.</xref:System.Web.Security.Roles.CookieProtectionValue%2A> Standard <xref:System.Web.Security.Roles.CookieProtectionValue%2A>er `All`, som krypterer role-navn på informasjonskapselen og kontrollerer at innholdet for informasjonskapsel (cookie) ikke er endret.</xref:System.Web.Security.Roles.CookieProtectionValue%2A>      > [!NOTE] > Fordi role-navn kan hurtigbufres bortsett fra datakilden, er det mulig at endringene skal rollebehandling i datakilden ikke gjenspeiles i hurtigbufret verdiene. Brukeren må i så fall lukke og og åpner webleseren for å fjerne bufrede informasjonskapsel verdien på nytt."
  example:
  - "The following example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application uses a <xref:System.Web.Security.SqlRoleProvider> instance and sets the `cacheRolesInCookie` attribute to `true`.  \n  \n```  \n<roleManager defaultProvider=\"SqlProvider\"   \n  enabled=\"true\"  \n  cacheRolesInCookie=\"true\"  \n  cookieName=\".ASPROLES\"  \n  cookieTimeout=\"30\"  \n  cookiePath=\"/\"  \n  cookieRequireSSL=\"false\"  \n  cookieSlidingExpiration=\"true\"  \n  cookieProtection=\"All\" >  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlRoleProvider\"  \n      connectionStringName=\"SqlServices\"  \n      applicationName=\"MyApplication\" />  \n   </providers>  \n</roleManager>  \n```"
  syntax:
    content: public static bool CacheRolesInCookie { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den gjeldende brukerroller bufres i en informasjonskapsel. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Roles.CacheRolesInCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Roles.CookieName
  id: CookieName
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: CookieName
  nameWithType: Roles.CookieName
  fullName: System.Web.Security.Roles.CookieName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter navnet på informasjonskapselen der rollenavn bufres."
  remarks: "Du kan angi navnet på informasjonskapselen der roller bufres for programmet ved å angi den `cookieName` attributt i Web.config-filen for ASP.NET-programmet. Dette er nyttig når du vil bruke til å identifisere en informasjonskapsel for programmet, eller når en informasjonskapsel deles på tvers av flere programmer, for eksempel en informasjonskapsel for domenet."
  example:
  - "The following example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application uses a <xref:System.Web.Security.SqlRoleProvider> instance and sets the `cookieName` attribute to .ASPROLES.  \n  \n```  \n<roleManager defaultProvider=\"SqlProvider\"   \n  enabled=\"true\"  \n  cacheRolesInCookie=\"true\"  \n  cookieName=\".ASPROLES\"  \n  cookieTimeout=\"30\"  \n  cookiePath=\"/\"  \n  cookieRequireSSL=\"false\"  \n  cookieSlidingExpiration=\"true\"  \n  cookieProtection=\"All\" >  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlRoleProvider\"  \n      connectionStringName=\"SqlServices\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</roleManager>  \n```"
  syntax:
    content: public static string CookieName { get; }
    return:
      type: System.String
      description: "Navn på informasjonskapselen der rollenavn bufres. Som standard brukes. ASPXROLES."
  overload: System.Web.Security.Roles.CookieName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Roles.CookiePath
  id: CookiePath
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: CookiePath
  nameWithType: Roles.CookiePath
  fullName: System.Web.Security.Roles.CookiePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter banen for bufrede rollen navn på informasjonskapselen."
  remarks: "Du kan angi banen til informasjonskapselen der roller bufres for programmet ved å angi den `cookiePath` attributt i Web.config-filen for ASP.NET-programmet. Hvis du vil ha mer informasjon om baner, kan du se <xref:System.Web.HttpCookie.Path%2A>.</xref:System.Web.HttpCookie.Path%2A>"
  example:
  - "The following example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application uses a <xref:System.Web.Security.SqlRoleProvider> instance and sets the `cookiePath` attribute to /MyApplication.  \n  \n```  \n<roleManager defaultProvider=\"SqlProvider\"   \n  enabled=\"true\"  \n  cacheRolesInCookie=\"true\"  \n  cookieName=\".ASPROLES\"  \n  cookieTimeout=\"30\"  \n  cookiePath=\"/MyApplication\"  \n  cookieRequireSSL=\"false\"  \n  cookieSlidingExpiration=\"true\"  \n  cookieProtection=\"All\" >  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlRoleProvider\"  \n      connectionStringName=\"SqlServices\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</roleManager>  \n```"
  syntax:
    content: public static string CookiePath { get; }
    return:
      type: System.String
      description: "Banen til informasjonskapselen der rollenavn bufres. Standard /."
  overload: System.Web.Security.Roles.CookiePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Roles.CookieProtectionValue
  id: CookieProtectionValue
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: CookieProtectionValue
  nameWithType: Roles.CookieProtectionValue
  fullName: System.Web.Security.Roles.CookieProtectionValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en verdi som angir hvordan role-navn som er bufret i en informasjonskapsel er beskyttet."
  remarks: "Du kan angi beskyttelsen informasjonskapselen der roller bufres for programmet ved å angi den `cookieProtection` attributt i Web.config-filen for ASP.NET-programmet. Den `cookieProtection` attributt tar en <xref:System.Web.Security.CookieProtection>nummereringsverdi som angir om kryptert role-navn, validert, begge eller ingen.</xref:System.Web.Security.CookieProtection>"
  example:
  - "The following example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application uses a <xref:System.Web.Security.SqlRoleProvider> instance and sets `cookieProtection` attribute to `Encrypted`.  \n  \n```  \n<roleManager defaultProvider=\"SqlProvider\"   \n  enabled=\"true\"  \n  cacheRolesInCookie=\"true\"  \n  cookieName=\".ASPROLES\"  \n  cookieTimeout=\"30\"  \n  cookiePath=\"/MyApplication\"  \n  cookieRequireSSL=\"false\"  \n  cookieSlidingExpiration=\"true\"  \n  cookieProtection=\"Encrypted\" >  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlRoleProvider\"  \n      connectionStringName=\"SqlServices\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</roleManager>  \n```"
  syntax:
    content: public static System.Web.Security.CookieProtection CookieProtectionValue { get; }
    return:
      type: System.Web.Security.CookieProtection
      description: "Én av de <xref href=&quot;System.Web.Security.CookieProtection&quot;> </xref> nummereringsverdier som angir hvordan role-navn som er bufret i en informasjonskapsel er beskyttet. Standard <xref uid=&quot;langword_csharp_All&quot; name=&quot;All&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Roles.CookieProtectionValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Roles.CookieRequireSSL
  id: CookieRequireSSL
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: CookieRequireSSL
  nameWithType: Roles.CookieRequireSSL
  fullName: System.Web.Security.Roles.CookieRequireSSL
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en verdi som angir om rollen navn på informasjonskapselen krever SSL for å kunne returneres til serveren."
  remarks: "Du kan angi om SSL (Secure Sockets Layer) kreves for å returnere rollen navn på informasjonskapselen til serveren i programmets ved å angi den `cookieRequireSSL` attributt i Web.config-filen for ASP.NET-programmet. Hvis du vil ha mer informasjon, kan du se <xref:System.Web.HttpCookie.Secure%2A>.</xref:System.Web.HttpCookie.Secure%2A>"
  example:
  - "The following example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application uses a <xref:System.Web.Security.SqlRoleProvider> instance and sets `cookieRequireSSL` to `true`.  \n  \n```  \n<roleManager defaultProvider=\"SqlProvider\"   \n  enabled=\"true\"  \n  cacheRolesInCookie=\"true\"  \n  cookieName=\".ASPROLES\"  \n  cookieTimeout=\"30\"  \n  cookiePath=\"/MyApplication\"  \n  cookieRequireSSL=\"true\"  \n  cookieSlidingExpiration=\"true\"  \n  cookieProtection=\"Encrypted\" >  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlRoleProvider\"  \n      connectionStringName=\"SqlServices\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</roleManager>  \n```"
  syntax:
    content: public static bool CookieRequireSSL { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis SSL kreves for å returnere rollen navn på informasjonskapselen til serveren. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Roles.CookieRequireSSL*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Roles.CookieSlidingExpiration
  id: CookieSlidingExpiration
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: CookieSlidingExpiration
  nameWithType: Roles.CookieSlidingExpiration
  fullName: System.Web.Security.Roles.CookieSlidingExpiration
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Angir om rollen navn på informasjonskapselen utløpsdatoen og klokkeslettet blir tilbakestilt regelmessig."
  remarks: "Du kan angi om rollen navngir informasjonskapsel utløpsdato og tid vil bli tilbakestilt med hvert svar ved hjelp av den `cookieSlidingExpiration` attributt i Web.config-filen for ASP.NET-programmet. Hvis `true`, utløp for informasjonskaps settes i utgangspunktet til gjeldende dato og klokkeslett pluss <xref:System.Web.Security.Roles.CookieTimeout%2A>i minutter.</xref:System.Web.Security.Roles.CookieTimeout%2A> Når brukeren fortsetter å bruke aktivt ASP.NET-programmet, utløpsdatoen og klokkeslettet informasjonskapselen vil oppdateres automatisk hvis det er mindre enn halvparten av de <xref:System.Web.Security.Roles.CookieTimeout%2A>gjenværende.</xref:System.Web.Security.Roles.CookieTimeout%2A> Hvis du vil ha mer informasjon, se den <xref:System.Web.HttpCookie.Expires%2A>egenskapen.</xref:System.Web.HttpCookie.Expires%2A>"
  example:
  - "The following example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application uses a <xref:System.Web.Security.SqlRoleProvider> instance and sets the CookieSlidingExpiration property to `false`.  \n  \n```  \n<roleManager defaultProvider=\"SqlProvider\"   \n  enabled=\"true\"  \n  cacheRolesInCookie=\"true\"  \n  cookieName=\".ASPROLES\"  \n  cookieTimeout=\"30\"  \n  cookiePath=\"/MyApplication\"  \n  cookieRequireSSL=\"true\"  \n  cookieSlidingExpiration=\"false\"  \n  cookieProtection=\"Encrypted\" >  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlRoleProvider\"  \n      connectionStringName=\"SqlServices\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</roleManager>  \n```"
  syntax:
    content: public static bool CookieSlidingExpiration { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis rollen navn på informasjonskapselen utløpsdatoen og klokkeslettet tilbakestilles regelmessig; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Roles.CookieSlidingExpiration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Roles.CookieTimeout
  id: CookieTimeout
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: CookieTimeout
  nameWithType: Roles.CookieTimeout
  fullName: System.Web.Security.Roles.CookieTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter antall minutter før roller informasjonskapselen utløper."
  remarks: "Egenskapen CookieTimeout brukes når den <xref:System.Web.Security.Roles.CookieSlidingExpiration%2A>egenskapen `true` og angir de--levetid i minutter roller informasjonskapselen.</xref:System.Web.Security.Roles.CookieSlidingExpiration%2A> Slik angir du CookieTimeout-verdi, kan du legge til den `cookieTimeout` attributt til elementet i Web.config-filen for ASP.NET-programmet, og angi en heltallsverdi.       Hvis <xref:System.Web.Security.Roles.CookieSlidingExpiration%2A>er `false`, ignoreres denne egenskapen.</xref:System.Web.Security.Roles.CookieSlidingExpiration%2A>"
  example:
  - "The following example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application uses a <xref:System.Web.Security.SqlRoleProvider> instance and sets the CookieTimeout property to 30 minutes.  \n  \n```  \n<roleManager defaultProvider=\"SqlProvider\"   \n  enabled=\"true\"  \n  cacheRolesInCookie=\"true\"  \n  cookieName=\".ASPROLES\"  \n  cookieTimeout=\"30\"  \n  cookiePath=\"/MyApplication\"  \n  cookieRequireSSL=\"true\"  \n  cookieSlidingExpiration=\"true\"  \n  cookieProtection=\"Encrypted\" >  \n  <providers>  \n  <add  \n    name=\"SqlProvider\"  \n    type=\"System.Web.Security.SqlRoleProvider\"  \n    connectionStringName=\"SqlServices\"  \n    applicationName=\"MyApplication\" />  \n  </providers>  \n</roleManager>  \n```"
  syntax:
    content: public static int CookieTimeout { get; }
    return:
      type: System.Int32
      description: "Et heltall som angir antall minutter før roller informasjonskapselen utløper. Standardverdien er 30 minutter."
  overload: System.Web.Security.Roles.CookieTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Roles.CreatePersistentCookie
  id: CreatePersistentCookie
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: CreatePersistentCookie
  nameWithType: Roles.CreatePersistentCookie
  fullName: System.Web.Security.Roles.CreatePersistentCookie
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en verdi som angir om role-navn på informasjonskapselen er basert på økten eller fast."
  remarks: "Egenskapsverdien CreatePersistentCookie er angitt i konfigurasjonen for en ASP.NET applikasjon bruker den `createPersistentCookie` for konfigurasjonselementet.       Når `false`role-navn på informasjonskapselen er en informasjonskapsel for økten, som er informasjonskapselen er tapt når leseren er lukket. Når `true`, role-navn på informasjonskapselen er en fast informasjonskapsel som er tilgjengelig på tvers av flere nettleseren-økter. Fast informasjonskapsel utløpsdatoen og klokkeslettet er satt til gjeldende dato og klokkeslett pluss <xref:System.Web.Security.Roles.CookieTimeout%2A>verdien i minutter.</xref:System.Web.Security.Roles.CookieTimeout%2A>"
  syntax:
    content: public static bool CreatePersistentCookie { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis role-navn på informasjonskapselen er en fast informasjonskapsel. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Roles.CreatePersistentCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Roles.CreateRole(System.String)
  id: CreateRole(System.String)
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: CreateRole(String)
  nameWithType: Roles.CreateRole(String)
  fullName: System.Web.Security.Roles.CreateRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Legger til en ny rolle til datakilden."
  remarks: "Metoden CreateRole legger til et rollenavn til datakilden. CreateRole kall av <xref:System.Web.Security.RoleProvider.CreateRole%2A>-metoden til standard rolleleverandør å legge til den angitte rollen til datakilden.</xref:System.Web.Security.RoleProvider.CreateRole%2A>      > [!NOTE] > Role-navn kan ikke inneholde komma."
  example:
  - "The following code example creates a new role in the data source. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.Roles>.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/csharp/m-system.web.security.ro_12_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.ro_12_1.aspx)]"
  syntax:
    content: public static void CreateRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Navnet på rollen til å opprette."
  overload: System.Web.Security.Roles.CreateRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>er en tom streng.       - eller - <code>roleName</code> inneholder et komma."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Rollebehandling er ikke aktivert."
  platform:
  - net462
- uid: System.Web.Security.Roles.DeleteCookie
  id: DeleteCookie
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: DeleteCookie()
  nameWithType: Roles.DeleteCookie()
  fullName: System.Web.Security.Roles.DeleteCookie()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Sletter informasjonskapselen der rollenavn bufres."
  remarks: "Metoden DeleteCookie fjerner innholdet på informasjonskapselen som brukes til å hurtigbufferen role-navn. Hvis du vil ha mer informasjon om hurtigbufring role-navn, kan du se <xref:System.Web.Security.Roles.CacheRolesInCookie%2A>.</xref:System.Web.Security.Roles.CacheRolesInCookie%2A>"
  example:
  - "The following code example calls the DeleteCookie method to clear any cached role names when a user logs in. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.Roles>.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Roles#5](~/add/codesnippet/visualbasic/m-system.web.security.ro_1_1.aspx)]\n [!code-cs[System.Web.Security.Roles#5](~/add/codesnippet/csharp/m-system.web.security.ro_1_1.aspx)]"
  syntax:
    content: public static void DeleteCookie ();
    parameters: []
  overload: System.Web.Security.Roles.DeleteCookie*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Rollebehandling er ikke aktivert."
  platform:
  - net462
- uid: System.Web.Security.Roles.DeleteRole(System.String)
  id: DeleteRole(System.String)
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: DeleteRole(String)
  nameWithType: Roles.DeleteRole(String)
  fullName: System.Web.Security.Roles.DeleteRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Fjerner en rolle fra datakilden."
  remarks: "Metoden DeleteRole fjerner rollenavn fra datakilden. DeleteRole kall av <xref:System.Web.Security.RoleProvider.DeleteRole%2A>-metoden til standard rolleleverandør du fjerner den angitte rollen fra datakilden.</xref:System.Web.Security.RoleProvider.DeleteRole%2A>       Hvis rollen identifisert av den `roleName` parameteren har ett eller flere medlemmer, og vil bli utløst et unntak og rollen slettes ikke."
  example:
  - "The following code example deletes a role from the data source. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.Roles>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#2](~/add/codesnippet/csharp/m-system.web.security.ro_9_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#2](~/add/codesnippet/visualbasic/m-system.web.security.ro_9_1.aspx)]"
  syntax:
    content: public static bool DeleteRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Navnet på rollen til å slette."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <code> roleName </code> ble slettet fra datakilden; ellers, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Roles.DeleteRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>er en tom streng eller inneholder et komma (,)."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>roleName</code>har én eller flere medlemmer.       - eller - rollebehandling er ikke aktivert."
  platform:
  - net462
- uid: System.Web.Security.Roles.DeleteRole(System.String,System.Boolean)
  id: DeleteRole(System.String,System.Boolean)
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: DeleteRole(String,Boolean)
  nameWithType: Roles.DeleteRole(String,Boolean)
  fullName: System.Web.Security.Roles.DeleteRole(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Fjerner en rolle fra datakilden."
  remarks: "Metoden DeleteRole fjerner rollenavn fra datakilden. DeleteRole kall av <xref:System.Web.Security.RoleProvider.DeleteRole%2A>-metoden til standard rolleleverandør du fjerner den angitte rollen fra datakilden.</xref:System.Web.Security.RoleProvider.DeleteRole%2A>       Hvis `throwOnPopulatedRole` er `true`deretter vil det bli utløst et unntak og rollen ikke slettes hvis rollen identifisert av den `roleName` parameteren har ett eller flere medlemmer. Hvis `throwOnPopulatedRole` er `false`, og deretter rollen slettes om den er tom eller ikke."
  example:
  - "The following code example deletes a role from the data source. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.Roles>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#2](~/add/codesnippet/csharp/m-system.web.security.ro_0_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#2](~/add/codesnippet/visualbasic/m-system.web.security.ro_0_1.aspx)]"
  syntax:
    content: public static bool DeleteRole (string roleName, bool throwOnPopulatedRole);
    parameters:
    - id: roleName
      type: System.String
      description: "Navnet på rollen til å slette."
    - id: throwOnPopulatedRole
      type: System.Boolean
      description: "Hvis <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, oppstår det et unntak hvis `roleName` har én eller flere medlemmer."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <code> roleName </code> ble slettet fra datakilden; ellers; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Security.Roles.DeleteRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>er en tom streng."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>roleName</code>har én eller flere medlemmer, og <code>throwOnPopulatedRole</code> er <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.       - eller - rollebehandling er ikke aktivert."
  platform:
  - net462
- uid: System.Web.Security.Roles.Domain
  id: Domain
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: Domain
  nameWithType: Roles.Domain
  fullName: System.Web.Security.Roles.Domain
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter verdien for domenet role-navn på informasjonskapselen."
  remarks: "Egenskapsverdien domene er angitt i konfigurasjonen for en ASP.NET applikasjon bruker den `domain` for konfigurasjonselementet.       Hvis ingen verdi er angitt i konfigurasjonen for domain-attributtet, returnerer egenskapen domene `null` og role-navn på informasjonskapselen domenet som standard virkemåte for den <xref:System.Web.HttpCookie><xref:System.Web.HttpCookie.Domain%2A>egenskapen.</xref:System.Web.HttpCookie.Domain%2A></xref:System.Web.HttpCookie>"
  syntax:
    content: public static string Domain { get; }
    return:
      type: System.String
      description: "Den <xref:System.Web.HttpCookie.Domain*>rollen navn på informasjonskapselen.</xref:System.Web.HttpCookie.Domain*>"
  overload: System.Web.Security.Roles.Domain*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Roles.Enabled
  id: Enabled
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: Enabled
  nameWithType: Roles.Enabled
  fullName: System.Web.Security.Roles.Enabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter eller angir en verdi som angir om rollebehandling er aktivert for gjeldende webprogram."
  remarks: ''
  example:
  - "The following example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application uses a <xref:System.Web.Security.SqlRoleProvider> instance and sets the `enabled` attribute to `true`.  \n  \n```  \n<roleManager defaultProvider=\"SqlProvider\"   \n  enabled=\"true\"  \n  cacheRolesInCookie=\"true\"  \n  cookieName=\".ASPROLES\"  \n  cookieTimeout=\"30\"  \n  cookiePath=\"/\"  \n  cookieRequireSSL=\"false\"  \n  cookieSlidingExpiration=\"true\"  \n  cookieProtection=\"All\" >  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlRoleProvider\"  \n      connectionStringName=\"SqlServices\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</roleManager>  \n```"
  syntax:
    content: public static bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis rollebehandling er aktivert. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Roles.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Roles.FindUsersInRole(System.String,System.String)
  id: FindUsersInRole(System.String,System.String)
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: FindUsersInRole(String,String)
  nameWithType: Roles.FindUsersInRole(String,String)
  fullName: System.Web.Security.Roles.FindUsersInRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en liste over brukere i en bestemt rolle der brukernavnet inneholder det angitte brukernavnet samsvarer."
  remarks: "FindUsersInRole returnerer en liste over brukere i en rolle der brukernavnet inneholder en samsvarende i den angitte `usernameToMatch` for den konfigurerte `applicationName`. For eksempel hvis den `usernameToMatch` parameteren er satt til &quot;bruker&quot;, og deretter brukere &quot;bruker1&quot;, &quot;user2&quot;, &quot;bruker&3;,&quot; og så videre returneres. Brukere returneres alfabetisk etter brukernavn.       Den <xref:System.Web.Security.SqlRoleProvider>utfører søket ved hjelp av en LIKE-setningsdel mot den `usernameToMatch` parameteren.</xref:System.Web.Security.SqlRoleProvider> Jokertegn som støttes av SQL Server i som setningsdeler kan brukes i den `usernameToMatch` parameterverdi."
  example:
  - "The following code example uses the FindUsersInRole method to display role membership based on user input. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.Roles>.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.Roles#11](~/add/codesnippet/csharp/m-system.web.security.ro_16_1.aspx)]\n [!code-vb[System.Web.Security.Roles#11](~/add/codesnippet/visualbasic/m-system.web.security.ro_16_1.aspx)]"
  syntax:
    content: public static string[] FindUsersInRole (string roleName, string usernameToMatch);
    parameters:
    - id: roleName
      type: System.String
      description: "Rollen til å søke i."
    - id: usernameToMatch
      type: System.String
      description: "Brukernavnet for å søke etter."
    return:
      type: System.String[]
      description: "En strengmatrise som inneholder navnene på alle brukere som har brukernavn som samsvarer med <code> usernameToMatch </code> og som er medlemmer av den angitte rollen."
  overload: System.Web.Security.Roles.FindUsersInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic).       -or-       <code>usernameToMatch</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>er en tom streng eller inneholder et komma (,).       - eller - <code>usernameToMatch</code> er en tom streng."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Rollebehandling er ikke aktivert."
  platform:
  - net462
- uid: System.Web.Security.Roles.GetAllRoles
  id: GetAllRoles
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: GetAllRoles()
  nameWithType: Roles.GetAllRoles()
  fullName: System.Web.Security.Roles.GetAllRoles()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en liste over alle roller for applikasjonen."
  remarks: "Metodekall GetAllRoles i <xref:System.Web.Security.RoleProvider.GetAllRoles%2A?displayProperty=fullName>-metoden til standard rolleleverandør å hente en liste over alle roller fra datakilden for et program.</xref:System.Web.Security.RoleProvider.GetAllRoles%2A?displayProperty=fullName> Bare roller for applikasjonen som er angitt i den <xref:System.Web.Security.Roles.ApplicationName%2A>egenskapen hentes.</xref:System.Web.Security.Roles.ApplicationName%2A>"
  example:
  - "The following code example uses the GetAllRoles method to get the list of roles for an application and bind the results to a <xref:System.Web.UI.WebControls.GridView?displayProperty=fullName> control. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.Roles>.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/csharp/m-system.web.security.ro_18_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.ro_18_1.aspx)]"
  syntax:
    content: public static string[] GetAllRoles ();
    parameters: []
    return:
      type: System.String[]
      description: "En strengmatrise som inneholder navnene på alle roller som er lagret i datakilden for programmet."
  overload: System.Web.Security.Roles.GetAllRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Rollebehandling er ikke aktivert."
  platform:
  - net462
- uid: System.Web.Security.Roles.GetRolesForUser
  id: GetRolesForUser
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: GetRolesForUser()
  nameWithType: Roles.GetRolesForUser()
  fullName: System.Web.Security.Roles.GetRolesForUser()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en liste over roller som brukeren er logget på."
  remarks: "Metoden GetRolesForUser kaller <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A?displayProperty=fullName>-metoden til standard rolleleverandør til å hente fra datakilden roller at brukeren er logget på, er.</xref:System.Web.Security.RoleProvider.GetRolesForUser%2A?displayProperty=fullName> Brukeren er logget på som er identifisert av den <xref:System.Web.HttpContext.User%2A?displayProperty=fullName>for gjeldende <xref:System.Web.HttpContext?displayProperty=fullName>, eller ved <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>for ikke-HTTP vert miljøer.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Web.HttpContext?displayProperty=fullName> </xref:System.Web.HttpContext.User%2A?displayProperty=fullName> Hvis ingen bruker er logget på, vil bli utløst et unntak. Bare roller for applikasjonen som er angitt i den <xref:System.Web.Security.Roles.ApplicationName%2A>egenskapen hentes.</xref:System.Web.Security.Roles.ApplicationName%2A>       Hvis <xref:System.Web.Security.Roles.CacheRolesInCookie%2A>er `true`, og deretter resultatene av metoden GetRolesForUser kan returneres fra hurtigbufferen for rollen i stedet for den angitte rolleleverandør.</xref:System.Web.Security.Roles.CacheRolesInCookie%2A>"
  example:
  - "The following code example uses the GetRolesForUser method to retrieve a list of roles for a specified user and bind the returned roles to a <xref:System.Web.UI.WebControls.GridView?displayProperty=fullName> control. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.Roles>.  \n  \n [!code-vb[System.Web.Security.Roles#4](~/add/codesnippet/visualbasic/m-system.web.security.ro_14_1.aspx)]\n [!code-cs[System.Web.Security.Roles#4](~/add/codesnippet/csharp/m-system.web.security.ro_14_1.aspx)]"
  syntax:
    content: public static string[] GetRolesForUser ();
    parameters: []
    return:
      type: System.String[]
      description: "En strengmatrise som inneholder navnene på alle roller som brukeren er logget på."
  overload: System.Web.Security.Roles.GetRolesForUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Det er ingen gjeldende påloggede brukeren."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Rollebehandling er ikke aktivert."
  platform:
  - net462
- uid: System.Web.Security.Roles.GetRolesForUser(System.String)
  id: GetRolesForUser(System.String)
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: GetRolesForUser(String)
  nameWithType: Roles.GetRolesForUser(String)
  fullName: System.Web.Security.Roles.GetRolesForUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en liste over roller som en bruker."
  remarks: "Metoden GetRolesForUser kaller <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A?displayProperty=fullName>-metoden til standard rolleleverandør til å hente fra datakilden roller brukeren er.</xref:System.Web.Security.RoleProvider.GetRolesForUser%2A?displayProperty=fullName> Bare roller for applikasjonen som er angitt i den <xref:System.Web.Security.Roles.ApplicationName%2A>egenskapen hentes.</xref:System.Web.Security.Roles.ApplicationName%2A>       Hvis `username` er lik gjeldende påloggede brukeren og <xref:System.Web.Security.Roles.CacheRolesInCookie%2A>er `true`, resultatene av GetRolesForUser metoden kan returneres fra rollen bufre i stedet for den angitte <xref:System.Web.Security.Roles.Provider%2A>.</xref:System.Web.Security.Roles.Provider%2A> </xref:System.Web.Security.Roles.CacheRolesInCookie%2A>"
  example:
  - "The following code example uses the <xref:System.Web.Security.Roles.GetRolesForUser%2A> method to retrieve a list of roles for a specified user and bind the returned roles to a <xref:System.Web.UI.WebControls.GridView?displayProperty=fullName> control. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.Roles>.  \n  \n [!code-vb[System.Web.Security.Roles#4](~/add/codesnippet/visualbasic/m-system.web.security.ro_15_1.aspx)]\n [!code-cs[System.Web.Security.Roles#4](~/add/codesnippet/csharp/m-system.web.security.ro_15_1.aspx)]"
  syntax:
    content: public static string[] GetRolesForUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "Returnerer en liste over roller for brukeren."
    return:
      type: System.String[]
      description: "En strengmatrise som inneholder navnene på alle roller som brukeren som er angitt."
  overload: System.Web.Security.Roles.GetRolesForUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>inneholder et komma (,)."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Rollebehandling er ikke aktivert."
  platform:
  - net462
- uid: System.Web.Security.Roles.GetUsersInRole(System.String)
  id: GetUsersInRole(System.String)
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: GetUsersInRole(String)
  nameWithType: Roles.GetUsersInRole(String)
  fullName: System.Web.Security.Roles.GetUsersInRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en liste over brukere i den angitte rollen."
  remarks: "Metodekall GetUsersInRole i <xref:System.Web.Security.RoleProvider.GetUsersInRole%2A>-metoden til standard rolleleverandør ikke hente brukernavn som er knyttet til en rolle fra datakilden.</xref:System.Web.Security.RoleProvider.GetUsersInRole%2A> Bare roller for applikasjonen som er angitt i den <xref:System.Web.Security.Roles.ApplicationName%2A>egenskapen hentes.</xref:System.Web.Security.Roles.ApplicationName%2A>"
  example:
  - "The following code example uses the GetUsersInRole method to get a list of the users in a particular role and binds the results to a <xref:System.Web.UI.WebControls.GridView> control. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.Roles>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/csharp/m-system.web.security.ro_10_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/visualbasic/m-system.web.security.ro_10_1.aspx)]"
  syntax:
    content: public static string[] GetUsersInRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Rollen for å hente listen over brukere."
    return:
      type: System.String[]
      description: "En strengmatrise som inneholder navnene på alle brukere som er medlemmer av den angitte rollen."
  overload: System.Web.Security.Roles.GetUsersInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>er en tom streng eller inneholder et komma (,)."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Rollebehandling er ikke aktivert."
  platform:
  - net462
- uid: System.Web.Security.Roles.IsUserInRole(System.String)
  id: IsUserInRole(System.String)
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: IsUserInRole(String)
  nameWithType: Roles.IsUserInRole(String)
  fullName: System.Web.Security.Roles.IsUserInRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en verdi som angir om brukeren som er logget på, er i den angitte rollen. API skal bare kalles i konteksten for en tråd for ASP.NET-forespørselen, og den er sikker i dette brukstilfellet sanctioned."
  remarks: "Metodekall IsUserInRole i <xref:System.Web.Security.RoleProvider.IsUserInRole%2A?displayProperty=fullName>-metoden til standard rolleleverandør å finne ut om brukeren som er logget på, er knyttet til en rolle fra datakilden for applikasjonen som er angitt i den <xref:System.Web.Security.Roles.ApplicationName%2A>egenskapen.</xref:System.Web.Security.Roles.ApplicationName%2A> </xref:System.Web.Security.RoleProvider.IsUserInRole%2A?displayProperty=fullName> Brukeren er logget på som er identifisert av den <xref:System.Web.HttpContext.User%2A?displayProperty=fullName>for gjeldende <xref:System.Web.HttpContext?displayProperty=fullName>, eller ved <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>for ikke-HTTP vert miljøer.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Web.HttpContext?displayProperty=fullName> </xref:System.Web.HttpContext.User%2A?displayProperty=fullName> Hvis ingen bruker er logget på, vil bli utløst et unntak. Bare roller for applikasjonen som er angitt i den <xref:System.Web.Security.Roles.ApplicationName%2A>egenskapen hentes.</xref:System.Web.Security.Roles.ApplicationName%2A>       Hvis <xref:System.Web.Security.Roles.CacheRolesInCookie%2A>er `true`, deretter `roleName` kan sjekkes mot hurtigbufferen roller i stedet for den angitte rolleleverandør.</xref:System.Web.Security.Roles.CacheRolesInCookie%2A>"
  example:
  - "The following code example programmatically checks whether the currently logged-on user is in the Administrators role before allowing the user to view roles settings for the application. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.Roles>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#4](~/add/codesnippet/csharp/m-system.web.security.ro_2_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#4](~/add/codesnippet/visualbasic/m-system.web.security.ro_2_1.aspx)]"
  syntax:
    content: public static bool IsUserInRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Navnet på rollen til å søke i."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis brukeren er logget på den angitte rollen; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Roles.IsUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - det er ingen gjeldende påloggede brukeren."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>er en tom streng eller inneholder et komma (,)."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Rollebehandling er ikke aktivert."
  platform:
  - net462
- uid: System.Web.Security.Roles.IsUserInRole(System.String,System.String)
  id: IsUserInRole(System.String,System.String)
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: IsUserInRole(String,String)
  nameWithType: Roles.IsUserInRole(String,String)
  fullName: System.Web.Security.Roles.IsUserInRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en verdi som angir om den angitte brukeren er i den angitte rollen. API skal bare kalles i konteksten for en tråd for ASP.NET-forespørselen, og den er sikker i dette brukstilfellet sanctioned."
  remarks: "Metodekall IsUserInRole i <xref:System.Web.Security.RoleProvider.IsUserInRole%2A>-metoden til standard rolleleverandør å finne ut om et brukernavn er knyttet til en rolle fra datakilden for applikasjonen som er angitt i den <xref:System.Web.Security.Roles.ApplicationName%2A>egenskapen.</xref:System.Web.Security.Roles.ApplicationName%2A> </xref:System.Web.Security.RoleProvider.IsUserInRole%2A>       Hvis `username` er lik gjeldende påloggede brukeren og <xref:System.Web.Security.Roles.CacheRolesInCookie%2A>egenskapsverdi `true`, `roleName` kan sjekkes mot hurtigbufferen rolle i stedet for den angitte <xref:System.Web.Security.Roles.Provider%2A>.</xref:System.Web.Security.Roles.Provider%2A> </xref:System.Web.Security.Roles.CacheRolesInCookie%2A>"
  example:
  - "The following code example programmatically checks whether a user is in the Administrators role before allowing the user to view roles settings for the application. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.Roles>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#4](~/add/codesnippet/csharp/m-system.web.security.ro_11_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#4](~/add/codesnippet/visualbasic/m-system.web.security.ro_11_1.aspx)]"
  syntax:
    content: public static bool IsUserInRole (string username, string roleName);
    parameters:
    - id: username
      type: System.String
      description: "Navnet på brukeren til å søke etter."
    - id: roleName
      type: System.String
      description: "Navnet på rollen til å søke i."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis brukeren som er angitt i den angitte rollen; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Roles.IsUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>username</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>er en tom streng eller inneholder et komma (,).       - eller - <code>username</code> inneholder et komma (,)."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Rollebehandling er ikke aktivert."
  platform:
  - net462
- uid: System.Web.Security.Roles.MaxCachedResults
  id: MaxCachedResults
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: MaxCachedResults
  nameWithType: Roles.MaxCachedResults
  fullName: System.Web.Security.Roles.MaxCachedResults
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter maksimalt antall role-navn som skal hurtigbufres for en bruker."
  remarks: "Egenskapen MaxCachedResults angis ved hjelp av den `maxCachedResults` konfigurasjonsattributtet. Verdien for den `maxCachedResults` konfigurasjonsattributtet må settes til et heltall større enn null."
  example:
  - "The following example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application uses a <xref:System.Web.Security.SqlRoleProvider> instance and sets the `maxCachedResults` attribute to 10.  \n  \n```  \n<roleManager  \n  enabled=\"true\"  \n  cacheRolesInCookie=\"true\"  \n  cookieName=\".ASPROLES\"  \n  cookieTimeout=\"30\"  \n  cookiePath=\"/\"  \n  cookieRequireSSL=\"false\"  \n  cookieSlidingExpiration=\"true\"  \n  cookieProtection=\"All\"   \n  maxCachedResults=\"10\" />  \n```"
  syntax:
    content: public static int MaxCachedResults { get; }
    return:
      type: System.Int32
      description: "Maksimalt antall role-navn som skal hurtigbufres for en bruker. Standarden er 25."
  overload: System.Web.Security.Roles.MaxCachedResults*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Roles.Provider
  id: Provider
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: Provider
  nameWithType: Roles.Provider
  fullName: System.Web.Security.Roles.Provider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter rollen standardleverandøren for programmet."
  remarks: "Egenskapen kan du direkte referere til standard rolleleverandør for en applikasjon. Dette brukes vanligvis til å få tilgang til egendefinerte medlemmer av rolleleverandør som ikke er en del av <xref:System.Web.Security.RoleProvider>abstrakt klasse.</xref:System.Web.Security.RoleProvider>       For eksempel den <xref:System.Web.Security.WindowsTokenRoleProvider>klassen inkluderer overbelastning av den <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A>metoden som gjør det mulig å finne ut om en bruker på en vanlig Windows-rolle ved hjelp av en <xref:System.Security.Principal.WindowsBuiltInRole>opplistingsverdien.</xref:System.Security.Principal.WindowsBuiltInRole> </xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A> </xref:System.Web.Security.WindowsTokenRoleProvider> En referanse til det <xref:System.Web.Security.WindowsTokenRoleProvider>klasse for et program kan oppnås ved å bruke egenskapen og kan brukes som en <xref:System.Web.Security.WindowsTokenRoleProvider>for å se den <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A>overbelaste.</xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A> </xref:System.Web.Security.WindowsTokenRoleProvider> </xref:System.Web.Security.WindowsTokenRoleProvider>       Hvis flere rolleleverandører er konfigurert for et program, du har tilgang til annen rolleleverandører som bruker den <xref:System.Web.Security.Roles.Providers%2A>samlingen.</xref:System.Web.Security.Roles.Providers%2A>"
  example:
  - "The following code example casts the default role provider as a <xref:System.Web.Security.WindowsTokenRoleProvider> and checks whether the currently logged-on user is in the Administrators role before allowing the user to view roles settings for the application. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.WindowsTokenRoleProvider>.  \n  \n [!code-cs[System.Web.Security.WindowsTokenRoleProvider#2](~/add/codesnippet/csharp/p-system.web.security.ro_0_1.aspx)]\n [!code-vb[System.Web.Security.WindowsTokenRoleProvider#2](~/add/codesnippet/visualbasic/p-system.web.security.ro_0_1.aspx)]"
  syntax:
    content: public static System.Web.Security.RoleProvider Provider { get; }
    return:
      type: System.Web.Security.RoleProvider
      description: "Standard-rolleleverandør for programmet, som vises som en klassen som arver <xref:System.Web.Security.RoleProvider>abstrakt klasse.</xref:System.Web.Security.RoleProvider>"
  overload: System.Web.Security.Roles.Provider*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Rollebehandling er ikke aktivert."
  platform:
  - net462
- uid: System.Web.Security.Roles.Providers
  id: Providers
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: Providers
  nameWithType: Roles.Providers
  fullName: System.Web.Security.Roles.Providers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en samling av rollen leverandørene for ASP.NET-programmet."
  remarks: "Egenskapen leverandører refererer til alle role-leverandører som er aktivert for en applikasjon, inkludert noen leverandører legges til i Web.config-filen. Du kan kontrollere hvilke rollen leverandører er tilgjengelige for en applikasjon ved hjelp av den `providers` element i delen i Web.config-filen for programmet.       Eksemplet nedenfor viser en inndeling som fjerner alle eksisterende leverandører (for eksempel de som er angitt i Machine.config-filen) og legger til en <xref:System.Web.Security.SqlRoleProvider>forekomsten som rolleleverandør for applikasjonen.</xref:System.Web.Security.SqlRoleProvider>      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=&quot;Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>        <system.web>       <roleManager defaultProvider=&quot;SqlProvider&quot;          enabled=&quot;true&quot;         cacheRolesInCookie=&quot;true&quot;         cookieName=&quot;.ASPROLES&quot;         cookieTimeout=&quot;30&quot;         cookiePath=&quot;/&quot;         cookieRequireSSL=&quot;false&quot;         cookieSlidingExpiration=&quot;true&quot;         cookieProtection=&quot;Encrypted&quot;>            <providers>           <clear/>           <add             name=&quot;SqlProvider&quot;             type=&quot;System.Web.Security.SqlRoleProvider&quot;             connectionStringName=&quot;SqlServices&quot;             applicationName=&quot;MyApplication&quot; />            </providers>          </roleManager>     </system.web>   </configuration>   ```Du kan få en forespørselsparameter av sterk type referanse til en leverandør fra samlingen av indeksering av rolleleverandør etter navn og endring som ønsket type.       Du kan få en referanse til standardleverandøren for en applikasjon som bruker den <xref:System.Web.Security.Roles.Provider%2A>egenskapen.</xref:System.Web.Security.Roles.Provider%2A>"
  example:
  - "The following code example lists the providers enabled for an application and their respective types.  \n  \n [!code-cs[System.Web.Security.Roles#7](~/add/codesnippet/csharp/p-system.web.security.ro_4_1.aspx)]\n [!code-vb[System.Web.Security.Roles#7](~/add/codesnippet/visualbasic/p-system.web.security.ro_4_1.aspx)]"
  syntax:
    content: public static System.Web.Security.RoleProviderCollection Providers { get; }
    return:
      type: System.Web.Security.RoleProviderCollection
      description: "En <xref href=&quot;System.Web.Security.RoleProviderCollection&quot;> </xref> som inneholder rolleleverandører som er konfigurert for ASP.NET-programmet."
  overload: System.Web.Security.Roles.Providers*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Rollebehandling er ikke aktivert."
  platform:
  - net462
- uid: System.Web.Security.Roles.RemoveUserFromRole(System.String,System.String)
  id: RemoveUserFromRole(System.String,System.String)
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: RemoveUserFromRole(String,String)
  nameWithType: Roles.RemoveUserFromRole(String,String)
  fullName: System.Web.Security.Roles.RemoveUserFromRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Fjerner den angitte brukeren fra den angitte rollen."
  remarks: "Metoden RemoveUserFromRole kaller standard rolleleverandør Hvis du vil fjerne den angitte brukeren fra den angitte rollen i datakilden."
  example:
  - "The following code example removes a user from a role. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.Roles>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/csharp/m-system.web.security.ro_5_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/visualbasic/m-system.web.security.ro_5_1.aspx)]"
  syntax:
    content: public static void RemoveUserFromRole (string username, string roleName);
    parameters:
    - id: username
      type: System.String
      description: "Brukeren til å fjerne fra den angitte rollen."
    - id: roleName
      type: System.String
      description: "Rollen du vil fjerne den angitte brukeren fra."
  overload: System.Web.Security.Roles.RemoveUserFromRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>username</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>en tom streng eller inneholder et komma (,) <code>username</code> er en tom streng eller inneholder et komma (,)."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Rollebehandling er ikke aktivert."
  platform:
  - net462
- uid: System.Web.Security.Roles.RemoveUserFromRoles(System.String,System.String[])
  id: RemoveUserFromRoles(System.String,System.String[])
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: RemoveUserFromRoles(String,String[])
  nameWithType: Roles.RemoveUserFromRoles(String,String[])
  fullName: System.Web.Security.Roles.RemoveUserFromRoles(String,String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Fjerner den angitte brukeren fra de angitte rollene."
  remarks: "Metoden RemoveUserFromRoles kaller standard rolleleverandør Hvis du vil fjerne den angitte brukeren fra de angitte rollene i datakilden.       Hvis programmet er konfigurert til å bruke den <xref:System.Web.Security.SqlRoleProvider>klasse, databaseoppdateringer som er utført under kall til metoden RemoveUserFromRoles utføres i en transaksjon.</xref:System.Web.Security.SqlRoleProvider> Hvis en feil, for eksempel et brukernavn som ikke er i en bestemt rolle transaksjonen er rullet tilbake, og ingen oppdateringer, utføres."
  example:
  - "The following code example uses the RemoveUserFromRoles method to remove a user from one or more roles. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.Roles>.  \n  \n [!code-vb[System.Web.Security.Roles#10](~/add/codesnippet/visualbasic/m-system.web.security.ro_17_1.aspx)]\n [!code-cs[System.Web.Security.Roles#10](~/add/codesnippet/csharp/m-system.web.security.ro_17_1.aspx)]"
  syntax:
    content: public static void RemoveUserFromRoles (string username, string[] roleNames);
    parameters:
    - id: username
      type: System.String
      description: "Brukeren til å fjerne fra de angitte rollene."
    - id: roleNames
      type: System.String[]
      description: "En strengmatrise av role-navn du fjerner den angitte brukeren fra."
  overload: System.Web.Security.Roles.RemoveUserFromRoles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One of the roles in <code>roleNames</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>username</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Én av rollene i <code> roleNames </code> er en tom streng eller inneholder et komma (,).       - eller - <code> username </code> er en tom streng eller inneholder et komma (,).       - eller - <code> roleNames </code> inneholder et duplisert element."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Rollebehandling er ikke aktivert."
  platform:
  - net462
- uid: System.Web.Security.Roles.RemoveUsersFromRole(System.String[],System.String)
  id: RemoveUsersFromRole(System.String[],System.String)
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: RemoveUsersFromRole(String[],String)
  nameWithType: Roles.RemoveUsersFromRole(String[],String)
  fullName: System.Web.Security.Roles.RemoveUsersFromRole(String[],String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Fjerner de angitte brukerne fra den angitte rollen."
  remarks: "Metoden RemoveUsersFromRole kaller standard rolleleverandør for å fjerne de angitte brukerne fra den angitte rollen i datakilden.       Hvis programmet bruker den <xref:System.Web.Security.SqlRoleProvider>class, databaseoppdateringer som er utført under kall til den <xref:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles%2A>metoden utføres i en transaksjon.</xref:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles%2A> </xref:System.Web.Security.SqlRoleProvider> Hvis en feil, for eksempel et brukernavn som ikke er i en bestemt rolle transaksjonen er rullet tilbake, og ingen oppdateringer, utføres."
  example:
  - "The following code example uses the RemoveUsersFromRole method to remove one or more users from a role. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.Roles>.  \n  \n [!code-cs[System.Web.Security.Roles#9](~/add/codesnippet/csharp/m-system.web.security.ro_13_1.aspx)]\n [!code-vb[System.Web.Security.Roles#9](~/add/codesnippet/visualbasic/m-system.web.security.ro_13_1.aspx)]"
  syntax:
    content: public static void RemoveUsersFromRole (string[] usernames, string roleName);
    parameters:
    - id: usernames
      type: System.String[]
      description: "En strengmatrise for brukernavn fjerne fra de angitte rollene."
    - id: roleName
      type: System.String
      description: "Navnet på rollen til å fjerne de angitte brukerne fra."
  overload: System.Web.Security.Roles.RemoveUsersFromRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - en for brukeren navngir i <code>usernames</code> er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>er en tom streng eller inneholder et komma (,).       - eller - en for brukeren navngir i <code>usernames</code> er en tom streng eller inneholder et komma (,).       - eller - <code>usernames</code> inneholder et duplisert element."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Rollebehandling er ikke aktivert."
  platform:
  - net462
- uid: System.Web.Security.Roles.RemoveUsersFromRoles(System.String[],System.String[])
  id: RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: Roles.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.Security.Roles.RemoveUsersFromRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Fjerner de angitte brukernavnene fra de angitte rollene."
  remarks: "Metoden RemoveUsersFromRoles kaller standard rolleleverandør for å fjerne de angitte brukerne fra de angitte rollene i datakilden.       Hvis programmet bruker den <xref:System.Web.Security.SqlRoleProvider>class, databaseoppdateringer som er utført under kall til den <xref:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles%2A>metoden utføres i en transaksjon.</xref:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles%2A> </xref:System.Web.Security.SqlRoleProvider> Hvis en feil, for eksempel et brukernavn som ikke er i en bestemt rolle transaksjonen er rullet tilbake, og ingen oppdateringer, utføres."
  example:
  - "The following code example uses the RemoveUsersFromRoles method to remove one or more users from one or more roles based on user input. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.Roles>.  \n  \n [!code-cs[System.Web.Security.Roles#8](~/add/codesnippet/csharp/6dafcb6b-2398-4825-9291-_1.aspx)]\n [!code-vb[System.Web.Security.Roles#8](~/add/codesnippet/visualbasic/6dafcb6b-2398-4825-9291-_1.aspx)]"
  syntax:
    content: public static void RemoveUsersFromRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "En strengmatrise for brukernavn fjerne fra de angitte rollene."
    - id: roleNames
      type: System.String[]
      description: "En strengmatrise av role-navn til å fjerne de angitte brukerne fra."
  overload: System.Web.Security.Roles.RemoveUsersFromRoles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Én av rollene som er angitt i <code> roleNames </code> er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - eller - av brukere som er angitt i <code> usernames </code> er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Én av rollene som er angitt i <code> roleNames </code> er en tom streng eller inneholder et komma (,).       - eller - av brukere som er angitt i <code> usernames </code> er en tom streng eller inneholder et komma (,).       - eller - <code> roleNames </code> inneholder et duplisert element.       - eller - <code> usernames </code> inneholder et duplisert element."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Rollebehandling er ikke aktivert."
  platform:
  - net462
- uid: System.Web.Security.Roles.RoleExists(System.String)
  id: RoleExists(System.String)
  parent: System.Web.Security.Roles
  langs:
  - csharp
  name: RoleExists(String)
  nameWithType: Roles.RoleExists(String)
  fullName: System.Web.Security.Roles.RoleExists(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en verdi som angir om det angitte rollenavnet finnes allerede i rollen datakilden."
  remarks: "Metodekall RoleExists den `RoleExists` -metoden til standard rolleleverandør å avgjøre om det finnes et rollenavn i datakilden for applikasjonen som er angitt i den <xref:System.Web.Security.Roles.ApplicationName%2A>egenskapen.</xref:System.Web.Security.Roles.ApplicationName%2A>"
  example:
  - "The following code example uses the RoleExists method to determine whether a role name already exists before creating the role. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.Roles>.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/csharp/m-system.web.security.ro_4_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.ro_4_1.aspx)]"
  syntax:
    content: public static bool RoleExists (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Navnet på rollen til å søke etter i datakilden."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis rollenavnet finnes allerede i datakilden. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Roles.RoleExists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>er en tom streng eller inneholder et komma (,)."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Rollebehandling er ikke aktivert."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.Web.Security.Roles.AddUsersToRole(System.String[],System.String)
  parent: System.Web.Security.Roles
  isExternal: false
  name: AddUsersToRole(String[],String)
  nameWithType: Roles.AddUsersToRole(String[],String)
  fullName: System.Web.Security.Roles.AddUsersToRole(String[],String)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.Roles.AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.Security.Roles
  isExternal: false
  name: AddUsersToRoles(String[],String[])
  nameWithType: Roles.AddUsersToRoles(String[],String[])
  fullName: System.Web.Security.Roles.AddUsersToRoles(String[],String[])
- uid: System.Web.Security.Roles.AddUserToRole(System.String,System.String)
  parent: System.Web.Security.Roles
  isExternal: false
  name: AddUserToRole(String,String)
  nameWithType: Roles.AddUserToRole(String,String)
  fullName: System.Web.Security.Roles.AddUserToRole(String,String)
- uid: System.Web.Security.Roles.AddUserToRoles(System.String,System.String[])
  parent: System.Web.Security.Roles
  isExternal: false
  name: AddUserToRoles(String,String[])
  nameWithType: Roles.AddUserToRoles(String,String[])
  fullName: System.Web.Security.Roles.AddUserToRoles(String,String[])
- uid: System.Web.Security.Roles.ApplicationName
  parent: System.Web.Security.Roles
  isExternal: false
  name: ApplicationName
  nameWithType: Roles.ApplicationName
  fullName: System.Web.Security.Roles.ApplicationName
- uid: System.Web.Security.Roles.CacheRolesInCookie
  parent: System.Web.Security.Roles
  isExternal: false
  name: CacheRolesInCookie
  nameWithType: Roles.CacheRolesInCookie
  fullName: System.Web.Security.Roles.CacheRolesInCookie
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.Roles.CookieName
  parent: System.Web.Security.Roles
  isExternal: false
  name: CookieName
  nameWithType: Roles.CookieName
  fullName: System.Web.Security.Roles.CookieName
- uid: System.Web.Security.Roles.CookiePath
  parent: System.Web.Security.Roles
  isExternal: false
  name: CookiePath
  nameWithType: Roles.CookiePath
  fullName: System.Web.Security.Roles.CookiePath
- uid: System.Web.Security.Roles.CookieProtectionValue
  parent: System.Web.Security.Roles
  isExternal: false
  name: CookieProtectionValue
  nameWithType: Roles.CookieProtectionValue
  fullName: System.Web.Security.Roles.CookieProtectionValue
- uid: System.Web.Security.CookieProtection
  parent: System.Web.Security
  isExternal: false
  name: CookieProtection
  nameWithType: CookieProtection
  fullName: System.Web.Security.CookieProtection
- uid: System.Web.Security.Roles.CookieRequireSSL
  parent: System.Web.Security.Roles
  isExternal: false
  name: CookieRequireSSL
  nameWithType: Roles.CookieRequireSSL
  fullName: System.Web.Security.Roles.CookieRequireSSL
- uid: System.Web.Security.Roles.CookieSlidingExpiration
  parent: System.Web.Security.Roles
  isExternal: false
  name: CookieSlidingExpiration
  nameWithType: Roles.CookieSlidingExpiration
  fullName: System.Web.Security.Roles.CookieSlidingExpiration
- uid: System.Web.Security.Roles.CookieTimeout
  parent: System.Web.Security.Roles
  isExternal: false
  name: CookieTimeout
  nameWithType: Roles.CookieTimeout
  fullName: System.Web.Security.Roles.CookieTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Security.Roles.CreatePersistentCookie
  parent: System.Web.Security.Roles
  isExternal: false
  name: CreatePersistentCookie
  nameWithType: Roles.CreatePersistentCookie
  fullName: System.Web.Security.Roles.CreatePersistentCookie
- uid: System.Web.Security.Roles.CreateRole(System.String)
  parent: System.Web.Security.Roles
  isExternal: false
  name: CreateRole(String)
  nameWithType: Roles.CreateRole(String)
  fullName: System.Web.Security.Roles.CreateRole(String)
- uid: System.Web.Security.Roles.DeleteCookie
  parent: System.Web.Security.Roles
  isExternal: false
  name: DeleteCookie()
  nameWithType: Roles.DeleteCookie()
  fullName: System.Web.Security.Roles.DeleteCookie()
- uid: System.Web.Security.Roles.DeleteRole(System.String)
  parent: System.Web.Security.Roles
  isExternal: false
  name: DeleteRole(String)
  nameWithType: Roles.DeleteRole(String)
  fullName: System.Web.Security.Roles.DeleteRole(String)
- uid: System.Web.Security.Roles.DeleteRole(System.String,System.Boolean)
  parent: System.Web.Security.Roles
  isExternal: false
  name: DeleteRole(String,Boolean)
  nameWithType: Roles.DeleteRole(String,Boolean)
  fullName: System.Web.Security.Roles.DeleteRole(String,Boolean)
- uid: System.Web.Security.Roles.Domain
  parent: System.Web.Security.Roles
  isExternal: false
  name: Domain
  nameWithType: Roles.Domain
  fullName: System.Web.Security.Roles.Domain
- uid: System.Web.Security.Roles.Enabled
  parent: System.Web.Security.Roles
  isExternal: false
  name: Enabled
  nameWithType: Roles.Enabled
  fullName: System.Web.Security.Roles.Enabled
- uid: System.Web.Security.Roles.FindUsersInRole(System.String,System.String)
  parent: System.Web.Security.Roles
  isExternal: false
  name: FindUsersInRole(String,String)
  nameWithType: Roles.FindUsersInRole(String,String)
  fullName: System.Web.Security.Roles.FindUsersInRole(String,String)
- uid: System.Web.Security.Roles.GetAllRoles
  parent: System.Web.Security.Roles
  isExternal: false
  name: GetAllRoles()
  nameWithType: Roles.GetAllRoles()
  fullName: System.Web.Security.Roles.GetAllRoles()
- uid: System.Web.Security.Roles.GetRolesForUser
  parent: System.Web.Security.Roles
  isExternal: false
  name: GetRolesForUser()
  nameWithType: Roles.GetRolesForUser()
  fullName: System.Web.Security.Roles.GetRolesForUser()
- uid: System.Web.Security.Roles.GetRolesForUser(System.String)
  parent: System.Web.Security.Roles
  isExternal: false
  name: GetRolesForUser(String)
  nameWithType: Roles.GetRolesForUser(String)
  fullName: System.Web.Security.Roles.GetRolesForUser(String)
- uid: System.Web.Security.Roles.GetUsersInRole(System.String)
  parent: System.Web.Security.Roles
  isExternal: false
  name: GetUsersInRole(String)
  nameWithType: Roles.GetUsersInRole(String)
  fullName: System.Web.Security.Roles.GetUsersInRole(String)
- uid: System.Web.Security.Roles.IsUserInRole(System.String)
  parent: System.Web.Security.Roles
  isExternal: false
  name: IsUserInRole(String)
  nameWithType: Roles.IsUserInRole(String)
  fullName: System.Web.Security.Roles.IsUserInRole(String)
- uid: System.Web.Security.Roles.IsUserInRole(System.String,System.String)
  parent: System.Web.Security.Roles
  isExternal: false
  name: IsUserInRole(String,String)
  nameWithType: Roles.IsUserInRole(String,String)
  fullName: System.Web.Security.Roles.IsUserInRole(String,String)
- uid: System.Web.Security.Roles.MaxCachedResults
  parent: System.Web.Security.Roles
  isExternal: false
  name: MaxCachedResults
  nameWithType: Roles.MaxCachedResults
  fullName: System.Web.Security.Roles.MaxCachedResults
- uid: System.Web.Security.Roles.Provider
  parent: System.Web.Security.Roles
  isExternal: false
  name: Provider
  nameWithType: Roles.Provider
  fullName: System.Web.Security.Roles.Provider
- uid: System.Web.Security.RoleProvider
  parent: System.Web.Security
  isExternal: true
  name: RoleProvider
  nameWithType: RoleProvider
  fullName: System.Web.Security.RoleProvider
- uid: System.Web.Security.Roles.Providers
  parent: System.Web.Security.Roles
  isExternal: false
  name: Providers
  nameWithType: Roles.Providers
  fullName: System.Web.Security.Roles.Providers
- uid: System.Web.Security.RoleProviderCollection
  parent: System.Web.Security
  isExternal: false
  name: RoleProviderCollection
  nameWithType: RoleProviderCollection
  fullName: System.Web.Security.RoleProviderCollection
- uid: System.Web.Security.Roles.RemoveUserFromRole(System.String,System.String)
  parent: System.Web.Security.Roles
  isExternal: false
  name: RemoveUserFromRole(String,String)
  nameWithType: Roles.RemoveUserFromRole(String,String)
  fullName: System.Web.Security.Roles.RemoveUserFromRole(String,String)
- uid: System.Web.Security.Roles.RemoveUserFromRoles(System.String,System.String[])
  parent: System.Web.Security.Roles
  isExternal: false
  name: RemoveUserFromRoles(String,String[])
  nameWithType: Roles.RemoveUserFromRoles(String,String[])
  fullName: System.Web.Security.Roles.RemoveUserFromRoles(String,String[])
- uid: System.Web.Security.Roles.RemoveUsersFromRole(System.String[],System.String)
  parent: System.Web.Security.Roles
  isExternal: false
  name: RemoveUsersFromRole(String[],String)
  nameWithType: Roles.RemoveUsersFromRole(String[],String)
  fullName: System.Web.Security.Roles.RemoveUsersFromRole(String[],String)
- uid: System.Web.Security.Roles.RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.Security.Roles
  isExternal: false
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: Roles.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.Security.Roles.RemoveUsersFromRoles(String[],String[])
- uid: System.Web.Security.Roles.RoleExists(System.String)
  parent: System.Web.Security.Roles
  isExternal: false
  name: RoleExists(String)
  nameWithType: Roles.RoleExists(String)
  fullName: System.Web.Security.Roles.RoleExists(String)
- uid: System.Web.Security.Roles.AddUsersToRole*
  parent: System.Web.Security.Roles
  isExternal: false
  name: AddUsersToRole
  nameWithType: Roles.AddUsersToRole
- uid: System.Web.Security.Roles.AddUsersToRoles*
  parent: System.Web.Security.Roles
  isExternal: false
  name: AddUsersToRoles
  nameWithType: Roles.AddUsersToRoles
- uid: System.Web.Security.Roles.AddUserToRole*
  parent: System.Web.Security.Roles
  isExternal: false
  name: AddUserToRole
  nameWithType: Roles.AddUserToRole
- uid: System.Web.Security.Roles.AddUserToRoles*
  parent: System.Web.Security.Roles
  isExternal: false
  name: AddUserToRoles
  nameWithType: Roles.AddUserToRoles
- uid: System.Web.Security.Roles.ApplicationName*
  parent: System.Web.Security.Roles
  isExternal: false
  name: ApplicationName
  nameWithType: Roles.ApplicationName
- uid: System.Web.Security.Roles.CacheRolesInCookie*
  parent: System.Web.Security.Roles
  isExternal: false
  name: CacheRolesInCookie
  nameWithType: Roles.CacheRolesInCookie
- uid: System.Web.Security.Roles.CookieName*
  parent: System.Web.Security.Roles
  isExternal: false
  name: CookieName
  nameWithType: Roles.CookieName
- uid: System.Web.Security.Roles.CookiePath*
  parent: System.Web.Security.Roles
  isExternal: false
  name: CookiePath
  nameWithType: Roles.CookiePath
- uid: System.Web.Security.Roles.CookieProtectionValue*
  parent: System.Web.Security.Roles
  isExternal: false
  name: CookieProtectionValue
  nameWithType: Roles.CookieProtectionValue
- uid: System.Web.Security.Roles.CookieRequireSSL*
  parent: System.Web.Security.Roles
  isExternal: false
  name: CookieRequireSSL
  nameWithType: Roles.CookieRequireSSL
- uid: System.Web.Security.Roles.CookieSlidingExpiration*
  parent: System.Web.Security.Roles
  isExternal: false
  name: CookieSlidingExpiration
  nameWithType: Roles.CookieSlidingExpiration
- uid: System.Web.Security.Roles.CookieTimeout*
  parent: System.Web.Security.Roles
  isExternal: false
  name: CookieTimeout
  nameWithType: Roles.CookieTimeout
- uid: System.Web.Security.Roles.CreatePersistentCookie*
  parent: System.Web.Security.Roles
  isExternal: false
  name: CreatePersistentCookie
  nameWithType: Roles.CreatePersistentCookie
- uid: System.Web.Security.Roles.CreateRole*
  parent: System.Web.Security.Roles
  isExternal: false
  name: CreateRole
  nameWithType: Roles.CreateRole
- uid: System.Web.Security.Roles.DeleteCookie*
  parent: System.Web.Security.Roles
  isExternal: false
  name: DeleteCookie
  nameWithType: Roles.DeleteCookie
- uid: System.Web.Security.Roles.DeleteRole*
  parent: System.Web.Security.Roles
  isExternal: false
  name: DeleteRole
  nameWithType: Roles.DeleteRole
- uid: System.Web.Security.Roles.Domain*
  parent: System.Web.Security.Roles
  isExternal: false
  name: Domain
  nameWithType: Roles.Domain
- uid: System.Web.Security.Roles.Enabled*
  parent: System.Web.Security.Roles
  isExternal: false
  name: Enabled
  nameWithType: Roles.Enabled
- uid: System.Web.Security.Roles.FindUsersInRole*
  parent: System.Web.Security.Roles
  isExternal: false
  name: FindUsersInRole
  nameWithType: Roles.FindUsersInRole
- uid: System.Web.Security.Roles.GetAllRoles*
  parent: System.Web.Security.Roles
  isExternal: false
  name: GetAllRoles
  nameWithType: Roles.GetAllRoles
- uid: System.Web.Security.Roles.GetRolesForUser*
  parent: System.Web.Security.Roles
  isExternal: false
  name: GetRolesForUser
  nameWithType: Roles.GetRolesForUser
- uid: System.Web.Security.Roles.GetUsersInRole*
  parent: System.Web.Security.Roles
  isExternal: false
  name: GetUsersInRole
  nameWithType: Roles.GetUsersInRole
- uid: System.Web.Security.Roles.IsUserInRole*
  parent: System.Web.Security.Roles
  isExternal: false
  name: IsUserInRole
  nameWithType: Roles.IsUserInRole
- uid: System.Web.Security.Roles.MaxCachedResults*
  parent: System.Web.Security.Roles
  isExternal: false
  name: MaxCachedResults
  nameWithType: Roles.MaxCachedResults
- uid: System.Web.Security.Roles.Provider*
  parent: System.Web.Security.Roles
  isExternal: false
  name: Provider
  nameWithType: Roles.Provider
- uid: System.Web.Security.Roles.Providers*
  parent: System.Web.Security.Roles
  isExternal: false
  name: Providers
  nameWithType: Roles.Providers
- uid: System.Web.Security.Roles.RemoveUserFromRole*
  parent: System.Web.Security.Roles
  isExternal: false
  name: RemoveUserFromRole
  nameWithType: Roles.RemoveUserFromRole
- uid: System.Web.Security.Roles.RemoveUserFromRoles*
  parent: System.Web.Security.Roles
  isExternal: false
  name: RemoveUserFromRoles
  nameWithType: Roles.RemoveUserFromRoles
- uid: System.Web.Security.Roles.RemoveUsersFromRole*
  parent: System.Web.Security.Roles
  isExternal: false
  name: RemoveUsersFromRole
  nameWithType: Roles.RemoveUsersFromRole
- uid: System.Web.Security.Roles.RemoveUsersFromRoles*
  parent: System.Web.Security.Roles
  isExternal: false
  name: RemoveUsersFromRoles
  nameWithType: Roles.RemoveUsersFromRoles
- uid: System.Web.Security.Roles.RoleExists*
  parent: System.Web.Security.Roles
  isExternal: false
  name: RoleExists
  nameWithType: Roles.RoleExists
