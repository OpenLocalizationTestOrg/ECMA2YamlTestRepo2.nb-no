### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.LicFileLicenseProvider
  id: LicFileLicenseProvider
  children:
  - System.ComponentModel.LicFileLicenseProvider.#ctor
  - System.ComponentModel.LicFileLicenseProvider.GetKey(System.Type)
  - System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)
  - System.ComponentModel.LicFileLicenseProvider.IsKeyValid(System.String,System.Type)
  langs:
  - csharp
  name: LicFileLicenseProvider
  nameWithType: LicFileLicenseProvider
  fullName: System.ComponentModel.LicFileLicenseProvider
  type: Class
  summary: "Gir en implementering av en <xref href=&quot;System.ComponentModel.LicenseProvider&quot;> </xref>. Leverandøren fungerer på samme måte i standard lisensprotokollen Microsoft .NET Framework-modellen."
  remarks: "LicFileLicenseProvider tilbyr <xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A>og <xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A>metoder.</xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A> </xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A> Den <xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A>metoden fastslår om den <xref:System.ComponentModel.License.LicenseKey%2A>hentet av den <xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A>metoden er gyldig.</xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A> </xref:System.ComponentModel.License.LicenseKey%2A> </xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A> Når du arver fra denne klassen, du kan overstyre den <xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A>metode for å angi din egen validering logic.</xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A>       Bruker tekstfiler lisensen denne klassen finnes for å gi lignende lisensprotokollen funksjoner som COM lisensiering.       Du finner mer informasjon om lisensiering [slik: lisens komponenter og kontroller](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a licensed control using the <xref:System.ComponentModel.LicenseManager.Validate%2A> method. It uses LicFileLicenseProvider for the license manager.  \n  \n [!code-cs[Classic LicenseManager Example#1](~/add/codesnippet/csharp/t-system.componentmodel._155_1.cs)]\n [!code-vb[Classic LicenseManager Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._155_1.vb)]\n [!code-cpp[Classic LicenseManager Example#1](~/add/codesnippet/cpp/t-system.componentmodel._155_1.cpp)]"
  syntax:
    content: 'public class LicFileLicenseProvider : System.ComponentModel.LicenseProvider'
  inheritance:
  - System.Object
  - System.ComponentModel.LicenseProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.LicFileLicenseProvider.#ctor
  id: '#ctor'
  parent: System.ComponentModel.LicFileLicenseProvider
  langs:
  - csharp
  name: LicFileLicenseProvider()
  nameWithType: LicFileLicenseProvider.LicFileLicenseProvider()
  fullName: System.ComponentModel.LicFileLicenseProvider.LicFileLicenseProvider()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.ComponentModel.LicFileLicenseProvider&quot;> </xref> klasse."
  syntax:
    content: public LicFileLicenseProvider ();
    parameters: []
  overload: System.ComponentModel.LicFileLicenseProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicFileLicenseProvider.GetKey(System.Type)
  id: GetKey(System.Type)
  parent: System.ComponentModel.LicFileLicenseProvider
  langs:
  - csharp
  name: GetKey(Type)
  nameWithType: LicFileLicenseProvider.GetKey(Type)
  fullName: System.ComponentModel.LicFileLicenseProvider.GetKey(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerer en nøkkel for den angitte typen."
  syntax:
    content: protected virtual string GetKey (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Objekttypen til å returnere nøkkelen."
    return:
      type: System.String
      description: "En bekreftelse som den <code> type </code> parameteren er lisensiert."
  overload: System.ComponentModel.LicFileLicenseProvider.GetKey*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)
  id: GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)
  parent: System.ComponentModel.LicFileLicenseProvider
  langs:
  - csharp
  name: GetLicense(LicenseContext,Type,Object,Boolean)
  nameWithType: LicFileLicenseProvider.GetLicense(LicenseContext,Type,Object,Boolean)
  fullName: System.ComponentModel.LicFileLicenseProvider.GetLicense(LicenseContext,Type,Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerer en lisens for forekomsten av komponenten hvis det er tilgjengelig."
  remarks: "Under utformingen metoden GetLicense ser etter en lisensfil navnet `myClassName.LIC`, der `myClassName` er den <xref:System.Type.FullName%2A>av komponenten til å opprette.</xref:System.Type.FullName%2A> Denne filen må være i samme mappe som DLL-fil som inneholder komponenten.       Neste denne metoden kontrollerer den første linjen i lisensfilen mot en nøkkel som er angitt i den <xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A>metoden.</xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A> Hvis nøkkelen er gyldig, brukes denne linjen som <xref:System.ComponentModel.License.LicenseKey%2A>.</xref:System.ComponentModel.License.LicenseKey%2A>"
  syntax:
    content: public override System.ComponentModel.License GetLicense (System.ComponentModel.LicenseContext context, Type type, object instance, bool allowExceptions);
    parameters:
    - id: context
      type: System.ComponentModel.LicenseContext
      description: "En <xref href=&quot;System.ComponentModel.LicenseContext&quot;> </xref> som angir hvor du kan bruke lisensierte objektet."
    - id: type
      type: System.Type
      description: "En <xref:System.Type>som representerer komponent ber om den <xref href=&quot;System.ComponentModel.License&quot;> </xref>.</xref:System.Type>"
    - id: instance
      type: System.Object
      description: "Et objekt som ber om den <xref href=&quot;System.ComponentModel.License&quot;> </xref>."
    - id: allowExceptions
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis en <xref href=&quot;System.ComponentModel.LicenseException&quot;> </xref> skal bli utløst når en komponent ikke kan få en lisens; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.License
      description: "A valid <xref href=&quot;System.ComponentModel.License&quot;></xref>. Hvis denne metoden ikke finner en gyldig <xref href=&quot;System.ComponentModel.License&quot;> </xref> eller en gyldig <code> context </code> parameteren returneres <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.LicFileLicenseProvider.GetLicense*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicFileLicenseProvider.IsKeyValid(System.String,System.Type)
  id: IsKeyValid(System.String,System.Type)
  parent: System.ComponentModel.LicFileLicenseProvider
  langs:
  - csharp
  name: IsKeyValid(String,Type)
  nameWithType: LicFileLicenseProvider.IsKeyValid(String,Type)
  fullName: System.ComponentModel.LicFileLicenseProvider.IsKeyValid(String,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Bestemmer om nøkkelen som den <xref:System.ComponentModel.LicFileLicenseProvider.GetLicense*>metoden henter er gyldig for den angitte typen.</xref:System.ComponentModel.LicFileLicenseProvider.GetLicense*>"
  remarks: 'Denne metoden kontrollerer nøkkelen mot uttrykket: &quot; `myClassName is a licensed component.` &quot;, der `myClassName` er den <xref:System.Type.FullName%2A>av komponenten du vil opprette.</xref:System.Type.FullName%2A>'
  syntax:
    content: protected virtual bool IsKeyValid (string key, Type type);
    parameters:
    - id: key
      type: System.String
      description: "Den <xref:System.ComponentModel.License.LicenseKey*>å kontrollere.</xref:System.ComponentModel.License.LicenseKey*>"
    - id: type
      type: System.Type
      description: "En <xref:System.Type>som representerer komponent ber om den <xref href=&quot;System.ComponentModel.License&quot;> </xref>.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis nøkkelen er en gyldig <xref:System.ComponentModel.License.LicenseKey*>for den angitte typen; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.License.LicenseKey*>"
  overload: System.ComponentModel.LicFileLicenseProvider.IsKeyValid*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.LicenseProvider
  isExternal: false
  name: System.ComponentModel.LicenseProvider
- uid: System.ComponentModel.LicFileLicenseProvider.#ctor
  parent: System.ComponentModel.LicFileLicenseProvider
  isExternal: false
  name: LicFileLicenseProvider()
  nameWithType: LicFileLicenseProvider.LicFileLicenseProvider()
  fullName: System.ComponentModel.LicFileLicenseProvider.LicFileLicenseProvider()
- uid: System.ComponentModel.LicFileLicenseProvider.GetKey(System.Type)
  parent: System.ComponentModel.LicFileLicenseProvider
  isExternal: false
  name: GetKey(Type)
  nameWithType: LicFileLicenseProvider.GetKey(Type)
  fullName: System.ComponentModel.LicFileLicenseProvider.GetKey(Type)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)
  parent: System.ComponentModel.LicFileLicenseProvider
  isExternal: false
  name: GetLicense(LicenseContext,Type,Object,Boolean)
  nameWithType: LicFileLicenseProvider.GetLicense(LicenseContext,Type,Object,Boolean)
  fullName: System.ComponentModel.LicFileLicenseProvider.GetLicense(LicenseContext,Type,Object,Boolean)
- uid: System.ComponentModel.License
  parent: System.ComponentModel
  isExternal: false
  name: License
  nameWithType: License
  fullName: System.ComponentModel.License
- uid: System.ComponentModel.LicenseContext
  parent: System.ComponentModel
  isExternal: false
  name: LicenseContext
  nameWithType: LicenseContext
  fullName: System.ComponentModel.LicenseContext
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.LicFileLicenseProvider.IsKeyValid(System.String,System.Type)
  parent: System.ComponentModel.LicFileLicenseProvider
  isExternal: false
  name: IsKeyValid(String,Type)
  nameWithType: LicFileLicenseProvider.IsKeyValid(String,Type)
  fullName: System.ComponentModel.LicFileLicenseProvider.IsKeyValid(String,Type)
- uid: System.ComponentModel.LicFileLicenseProvider.#ctor*
  parent: System.ComponentModel.LicFileLicenseProvider
  isExternal: false
  name: LicFileLicenseProvider
  nameWithType: LicFileLicenseProvider.LicFileLicenseProvider
- uid: System.ComponentModel.LicFileLicenseProvider.GetKey*
  parent: System.ComponentModel.LicFileLicenseProvider
  isExternal: false
  name: GetKey
  nameWithType: LicFileLicenseProvider.GetKey
- uid: System.ComponentModel.LicFileLicenseProvider.GetLicense*
  parent: System.ComponentModel.LicFileLicenseProvider
  isExternal: false
  name: GetLicense
  nameWithType: LicFileLicenseProvider.GetLicense
- uid: System.ComponentModel.LicFileLicenseProvider.IsKeyValid*
  parent: System.ComponentModel.LicFileLicenseProvider
  isExternal: false
  name: IsKeyValid
  nameWithType: LicFileLicenseProvider.IsKeyValid
