### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ViewStateException
  id: ViewStateException
  children:
  - System.Web.UI.ViewStateException.#ctor
  - System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.UI.ViewStateException.IsConnected
  - System.Web.UI.ViewStateException.Message
  - System.Web.UI.ViewStateException.Path
  - System.Web.UI.ViewStateException.PersistedState
  - System.Web.UI.ViewStateException.Referer
  - System.Web.UI.ViewStateException.RemoteAddress
  - System.Web.UI.ViewStateException.RemotePort
  - System.Web.UI.ViewStateException.UserAgent
  langs:
  - csharp
  name: ViewStateException
  nameWithType: ViewStateException
  fullName: System.Web.UI.ViewStateException
  type: Class
  summary: "Representerer unntak forårsakes når visningsstatusen ikke kan laste inn eller validert. Denne klassen kan arves."
  remarks: "Hvis det oppstår et unntak når siden lastes inn visningsstatus informasjonen, siden oppretter et ViewStateException-objekt, og sender den som et indre unntak i en <xref:System.Web.HttpException>unntak.</xref:System.Web.HttpException> Den <xref:System.Web.HttpException>unntaket er på nytt thrown som skal behandles av programmet.</xref:System.Web.HttpException>       Klassen ViewStateException inneholder informasjon om unntak i den <xref:System.Web.UI.ViewStateException.Message%2A>egenskapen.</xref:System.Web.UI.ViewStateException.Message%2A> Hvis forespørselen har tilgang til den <xref:System.Web.HttpRequest.ServerVariables%2A>egenskapen vil <xref:System.Web.UI.ViewStateException.Message%2A>egenskapen inneholder verdier som er returnert fra den <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, og <xref:System.Web.UI.ViewStateException.Path%2A>Egenskaper; ellers den <xref:System.Web.UI.ViewStateException.Message%2A>egenskapen inneholder en generisk visningsstatus feilmelding.</xref:System.Web.UI.ViewStateException.Message%2A> </xref:System.Web.UI.ViewStateException.Path%2A> </xref:System.Web.UI.ViewStateException.Referer%2A> </xref:System.Web.UI.ViewStateException.PersistedState%2A> </xref:System.Web.UI.ViewStateException.UserAgent%2A> </xref:System.Web.UI.ViewStateException.RemotePort%2A> </xref:System.Web.UI.ViewStateException.RemoteAddress%2A> </xref:System.Web.UI.ViewStateException.Message%2A> </xref:System.Web.HttpRequest.ServerVariables%2A>       Et visningsstatus unntak kan være et resultat av en valideringsfeil for melding godkjenning koder (MAC). Hvis attributtet siden `enableViewStateMac` er satt til `true`, visningsstatus kodes med en MAC-identifikator. Når visningsstatusen informasjonen posteres tilbake til serveren, bekrefter siden kodingen for å sikre at den ikke er endret av brukeren. Hvis siden ikke kan validere MAC-koding på visningsstatus informasjonen, vil den throw en <xref:System.Web.HttpException>unntak med ViewStateException-objektet som et indre unntak.</xref:System.Web.HttpException>       MAC validering skal lykkes, må visningsstatus informasjonen behandle med samme nøkkel når den er sendt og mottatt. Maskinnøkkelen på hver server i webfarmen, må være satt til en vanlig nøkkel."
  example:
  - "The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings. The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a ViewStateException object as an inner exception. The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the ViewStateException object.  \n  \n [!code-cs[System.Web.UI.ViewStateException#2](~/add/codesnippet/csharp/t-system.web.ui.viewstat_0_1.cs)]\n [!code-vb[System.Web.UI.ViewStateException#2](~/add/codesnippet/visualbasic/t-system.web.ui.viewstat_0_1.vb)]"
  syntax:
    content: 'public sealed class ViewStateException : Exception'
  inheritance:
  - System.Exception
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.#ctor
  id: '#ctor'
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: ViewStateException()
  nameWithType: ViewStateException.ViewStateException()
  fullName: System.Web.UI.ViewStateException.ViewStateException()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.UI.ViewStateException&quot;> </xref> klasse."
  syntax:
    content: public ViewStateException ();
    parameters: []
  overload: System.Web.UI.ViewStateException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ViewStateException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.UI.ViewStateException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.UI.ViewStateException&quot;> </xref> klasse serialiserte dataene."
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Objektet som har datatypen serialiserte objektet."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Kontekstavhengig informasjon om kilden eller målet."
  overload: System.Web.UI.ViewStateException.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.IsConnected
  id: IsConnected
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: IsConnected
  nameWithType: ViewStateException.IsConnected
  fullName: System.Web.UI.ViewStateException.IsConnected
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Henter en verdi som angir om klienten er koblet til serveren."
  remarks: "Denne egenskapen returnerer samme verdi som kaller den <xref:System.Web.HttpResponse.IsClientConnected%2A>egenskapen.</xref:System.Web.HttpResponse.IsClientConnected%2A>"
  example:
  - "The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings. The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception. The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.  \n  \n [!code-cs[System.Web.UI.ViewStateException#2](~/add/codesnippet/csharp/p-system.web.ui.viewstat_0_1.cs)]\n [!code-vb[System.Web.UI.ViewStateException#2](~/add/codesnippet/visualbasic/p-system.web.ui.viewstat_0_1.vb)]"
  syntax:
    content: public bool IsConnected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis klienten fremdeles er tilkoblet til serveren. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ViewStateException.IsConnected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.Message
  id: Message
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: Message
  nameWithType: ViewStateException.Message
  fullName: System.Web.UI.ViewStateException.Message
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Henter feilsøking informasjon om HTTP-forespørselen resulterte i en visningsstatus unntak."
  remarks: "Hvis forespørselen ikke har tilgang til serveren variablene, returnerer egenskapen en generisk visningsstatus feilmelding. Hvis forespørselen har tilgang til servervariabler, meldingsegenskapen inneholder verdier som er returnert fra den <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, og <xref:System.Web.UI.ViewStateException.Path%2A>Egenskaper.</xref:System.Web.UI.ViewStateException.Path%2A> </xref:System.Web.UI.ViewStateException.Referer%2A> </xref:System.Web.UI.ViewStateException.PersistedState%2A> </xref:System.Web.UI.ViewStateException.UserAgent%2A> </xref:System.Web.UI.ViewStateException.RemotePort%2A> </xref:System.Web.UI.ViewStateException.RemoteAddress%2A>"
  syntax:
    content: public override string Message { get; }
    return:
      type: System.String
      description: "En <xref:System.String>som inneholder formatert meldingen med informasjon om unntaket.</xref:System.String>"
  overload: System.Web.UI.ViewStateException.Message*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.Path
  id: Path
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: Path
  nameWithType: ViewStateException.Path
  fullName: System.Web.UI.ViewStateException.Path
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Henter banen til HTTP-forespørselen resulterte i en visningsstatus unntak."
  remarks: "Denne egenskapen returnerer samme verdi som den `PATH_INFO` variabelen i den <xref:System.Web.HttpRequest.ServerVariables%2A>egenskapen.</xref:System.Web.HttpRequest.ServerVariables%2A> Returnerer delen av banen etter vertsnavnet. For eksempel vil banen returnere /virdir/page.html i URL-http://www.contoso.com/virdir/page.html."
  example:
  - "The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings. The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception. The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.  \n  \n [!code-cs[System.Web.UI.ViewStateException#2](~/add/codesnippet/csharp/p-system.web.ui.viewstat_2_1.cs)]\n [!code-vb[System.Web.UI.ViewStateException#2](~/add/codesnippet/visualbasic/p-system.web.ui.viewstat_2_1.vb)]"
  syntax:
    content: public string Path { get; }
    return:
      type: System.String
      description: "En <xref:System.String>som inneholder banen fra forespørselen.</xref:System.String>"
  overload: System.Web.UI.ViewStateException.Path*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.PersistedState
  id: PersistedState
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: PersistedState
  nameWithType: ViewStateException.PersistedState
  fullName: System.Web.UI.ViewStateException.PersistedState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Henter innholdet i visningsstatusen strengen som, når lest forårsaket visningsstatus unntak."
  syntax:
    content: public string PersistedState { get; }
    return:
      type: System.String
      description: "En <xref:System.String>som inneholder visningsstatusen verdier som forårsaket unntaket visningsstatus.</xref:System.String>"
  overload: System.Web.UI.ViewStateException.PersistedState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.Referer
  id: Referer
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: Referer
  nameWithType: ViewStateException.Referer
  fullName: System.Web.UI.ViewStateException.Referer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Henter URL-adressen til siden som er koblet til siden der visningsstatus unntaket oppstod."
  remarks: "Denne egenskapen returnerer samme verdi som den `HTTP_REFERER` variabelen i den <xref:System.Web.HttpRequest.ServerVariables%2A>egenskapen.</xref:System.Web.HttpRequest.ServerVariables%2A> Verdien er en tom streng (&quot;&quot;) Hvis ingen tidligere forespørsel som er koblet til siden."
  example:
  - "The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings. The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception. The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.  \n  \n [!code-cs[System.Web.UI.ViewStateException#2](~/add/codesnippet/csharp/p-system.web.ui.viewstat_3_1.cs)]\n [!code-vb[System.Web.UI.ViewStateException#2](~/add/codesnippet/visualbasic/p-system.web.ui.viewstat_3_1.vb)]"
  syntax:
    content: public string Referer { get; }
    return:
      type: System.String
      description: "En <xref:System.String>som inneholder HTTP-Referanseområde.</xref:System.String>"
  overload: System.Web.UI.ViewStateException.Referer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.RemoteAddress
  id: RemoteAddress
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: RemoteAddress
  nameWithType: ViewStateException.RemoteAddress
  fullName: System.Web.UI.ViewStateException.RemoteAddress
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Henter IP-adresse for HTTP-forespørselen resulterte i en visningsstatus unntak."
  remarks: "Denne egenskapen returnerer samme verdi som den `REMOTE_ADDR` variabelen i den <xref:System.Web.HttpRequest.ServerVariables%2A>egenskapen.</xref:System.Web.HttpRequest.ServerVariables%2A>"
  syntax:
    content: public string RemoteAddress { get; }
    return:
      type: System.String
      description: "En <xref:System.String>som inneholder eksterne IP-adressen til klienten.</xref:System.String>"
  overload: System.Web.UI.ViewStateException.RemoteAddress*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.RemotePort
  id: RemotePort
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: RemotePort
  nameWithType: ViewStateException.RemotePort
  fullName: System.Web.UI.ViewStateException.RemotePort
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Henter portnummeret for HTTP-forespørselen resulterte i en visningsstatus unntak."
  remarks: "Denne egenskapen returnerer samme verdi som den `REMOTE_PORT` variabelen i den <xref:System.Web.HttpRequest.ServerVariables%2A>egenskapen.</xref:System.Web.HttpRequest.ServerVariables%2A>"
  syntax:
    content: public string RemotePort { get; }
    return:
      type: System.String
      description: "En <xref:System.String>som inneholder eksterne portnummeret.</xref:System.String>"
  overload: System.Web.UI.ViewStateException.RemotePort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.UserAgent
  id: UserAgent
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: UserAgent
  nameWithType: ViewStateException.UserAgent
  fullName: System.Web.UI.ViewStateException.UserAgent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Henter nettlesertype for HTTP-forespørselen resulterte i en visningsstatus unntak."
  remarks: "Denne egenskapen returnerer samme verdi som den `HTTP_USER_AGENT` variabelen i den <xref:System.Web.HttpRequest.ServerVariables%2A>egenskapen.</xref:System.Web.HttpRequest.ServerVariables%2A>"
  example:
  - "The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings. The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception. The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.  \n  \n [!code-cs[System.Web.UI.ViewStateException#2](~/add/codesnippet/csharp/p-system.web.ui.viewstat_1_1.cs)]\n [!code-vb[System.Web.UI.ViewStateException#2](~/add/codesnippet/visualbasic/p-system.web.ui.viewstat_1_1.vb)]"
  syntax:
    content: public string UserAgent { get; }
    return:
      type: System.String
      description: "En <xref:System.String>som inneholder brukeragenten, som vanligvis er nettlesertype.</xref:System.String>"
  overload: System.Web.UI.ViewStateException.UserAgent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Exception
  isExternal: false
  name: System.Exception
- uid: System.Web.UI.ViewStateException.#ctor
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: ViewStateException()
  nameWithType: ViewStateException.ViewStateException()
  fullName: System.Web.UI.ViewStateException.ViewStateException()
- uid: System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ViewStateException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.UI.ViewStateException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Web.UI.ViewStateException.IsConnected
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: IsConnected
  nameWithType: ViewStateException.IsConnected
  fullName: System.Web.UI.ViewStateException.IsConnected
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ViewStateException.Message
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: Message
  nameWithType: ViewStateException.Message
  fullName: System.Web.UI.ViewStateException.Message
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ViewStateException.Path
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: Path
  nameWithType: ViewStateException.Path
  fullName: System.Web.UI.ViewStateException.Path
- uid: System.Web.UI.ViewStateException.PersistedState
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: PersistedState
  nameWithType: ViewStateException.PersistedState
  fullName: System.Web.UI.ViewStateException.PersistedState
- uid: System.Web.UI.ViewStateException.Referer
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: Referer
  nameWithType: ViewStateException.Referer
  fullName: System.Web.UI.ViewStateException.Referer
- uid: System.Web.UI.ViewStateException.RemoteAddress
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: RemoteAddress
  nameWithType: ViewStateException.RemoteAddress
  fullName: System.Web.UI.ViewStateException.RemoteAddress
- uid: System.Web.UI.ViewStateException.RemotePort
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: RemotePort
  nameWithType: ViewStateException.RemotePort
  fullName: System.Web.UI.ViewStateException.RemotePort
- uid: System.Web.UI.ViewStateException.UserAgent
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: UserAgent
  nameWithType: ViewStateException.UserAgent
  fullName: System.Web.UI.ViewStateException.UserAgent
- uid: System.Web.UI.ViewStateException.#ctor*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: ViewStateException
  nameWithType: ViewStateException.ViewStateException
- uid: System.Web.UI.ViewStateException.GetObjectData*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: GetObjectData
  nameWithType: ViewStateException.GetObjectData
- uid: System.Web.UI.ViewStateException.IsConnected*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: IsConnected
  nameWithType: ViewStateException.IsConnected
- uid: System.Web.UI.ViewStateException.Message*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: Message
  nameWithType: ViewStateException.Message
- uid: System.Web.UI.ViewStateException.Path*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: Path
  nameWithType: ViewStateException.Path
- uid: System.Web.UI.ViewStateException.PersistedState*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: PersistedState
  nameWithType: ViewStateException.PersistedState
- uid: System.Web.UI.ViewStateException.Referer*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: Referer
  nameWithType: ViewStateException.Referer
- uid: System.Web.UI.ViewStateException.RemoteAddress*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: RemoteAddress
  nameWithType: ViewStateException.RemoteAddress
- uid: System.Web.UI.ViewStateException.RemotePort*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: RemotePort
  nameWithType: ViewStateException.RemotePort
- uid: System.Web.UI.ViewStateException.UserAgent*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: UserAgent
  nameWithType: ViewStateException.UserAgent
