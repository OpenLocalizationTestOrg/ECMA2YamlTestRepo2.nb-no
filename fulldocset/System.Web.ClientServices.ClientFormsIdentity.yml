### YamlMime:ManagedReference
items:
- uid: System.Web.ClientServices.ClientFormsIdentity
  id: ClientFormsIdentity
  children:
  - System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)
  - System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
  - System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
  - System.Web.ClientServices.ClientFormsIdentity.Dispose
  - System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)
  - System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
  - System.Web.ClientServices.ClientFormsIdentity.Name
  - System.Web.ClientServices.ClientFormsIdentity.Provider
  - System.Web.ClientServices.ClientFormsIdentity.RevalidateUser
  langs:
  - csharp
  name: ClientFormsIdentity
  nameWithType: ClientFormsIdentity
  fullName: System.Web.ClientServices.ClientFormsIdentity
  type: Class
  summary: "Representerer en brukeridentiteten som er godkjent for klienten applikasjonsinnstillinger ved hjelp av skjemagodkjenning."
  remarks: "Klienten programmet services-funksjonen bruker denne klassen som representerer en godkjent bruker. Når du konfigurerer programmet for å bruke tjenester og -skjemaer klientgodkjenning på programmet, kan du godkjenne en bruker ved å kalle den `static` <xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=fullName>metode.</xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=fullName> Etter godkjenning, kan du hente en referanse til gjeldende ClientFormsIdentity forekomst via den <xref:System.Security.Principal.IPrincipal.Identity%2A>for den <xref:System.Security.Principal.IPrincipal>hentes med den `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>egenskapen.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Security.Principal.IPrincipal> </xref:System.Security.Principal.IPrincipal.Identity%2A> Hvis du vil ha mer informasjon, se [klienten programtjenester](~/add/includes/ajax-current-ext-md.md).       Vil du vanligvis tilgang til et ClientFormsIdentity-objekt som en <xref:System.Security.Principal.IIdentity>referanse til unngå direkte avhengig av denne klassen.</xref:System.Security.Principal.IIdentity> Du kan fastslå om en bruker er godkjent ved å kontrollere de <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName>for identiteten.</xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName> Brukeren kan imidlertid godkjennes for Windows, men ikke for klienten programtjenester. Hvis du vil finne ut om brukeren er godkjent for klienten applikasjonsinnstillinger, må du også bekrefte at den <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>egenskapsverdien er &quot;ClientForms&quot;.</xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>       Du må bruke en eksplisitt referanse for ClientFormsIdentity for å kalle den <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A>metode, som ikke er definert av den <xref:System.Security.Principal.IIdentity>grensesnittet.</xref:System.Security.Principal.IIdentity> </xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A>"
  example:
  - "The following example code demonstrates how to use this class to silently revalidate a user when the application leaves the offline state. In this example, a <xref:System.Windows.Forms.CheckBox.CheckedChanged> event handler updates the offline status to match the check box value. If the user sets the application to the online state, the event handler attempts to revalidate the user by calling the <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method. However, if the authentication server is unavailable, the event handler returns the application to the offline state.  \n  \n> [!NOTE]\n>  The <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method is for convenience only. Because it does not have a return value, it cannot indicate whether revalidation has failed. Revalidation can fail, for example, if the user credentials have changed on the server. In this case, you might want to include code that explicitly validates users after a service call fails. For more information, see the Accessing Web Settings section in [Walkthrough: Using Client Application Services](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ClientApplicationServices#315](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#315)]\n [!code-cs[ClientApplicationServices#315](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#315)]"
  syntax:
    content: 'public class ClientFormsIdentity : IDisposable, System.Security.Principal.IIdentity'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.Security.Principal.IIdentity
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)
  id: '#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)'
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  nameWithType: ClientFormsIdentity.ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  fullName: System.Web.ClientServices.ClientFormsIdentity.ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.ClientServices.ClientFormsIdentity&quot;> </xref> klasse."
  syntax:
    content: public ClientFormsIdentity (string name, string password, System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, System.Net.CookieContainer authenticationCookies);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på den godkjente brukeren."
    - id: password
      type: System.String
      description: "Passordet for den godkjente brukeren."
    - id: provider
      type: System.Web.Security.MembershipProvider
      description: "Leverandøren av medlemskapet brukes til å godkjenne brukeren."
    - id: authenticationType
      type: System.String
      description: "Type godkjenning som er brukt."
    - id: isAuthenticated
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis brukeren er godkjent; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: authenticationCookies
      type: System.Net.CookieContainer
      description: "Informasjonskapslene hentet fra godkjenningstjenesten."
  overload: System.Web.ClientServices.ClientFormsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
  id: AuthenticationCookies
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: AuthenticationCookies
  nameWithType: ClientFormsIdentity.AuthenticationCookies
  fullName: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Henter en samling av informasjonskapsler hentet fra godkjenningstjenesten."
  remarks: "Denne egenskapen er ikke ment for bruk i programkoden. Du kan ikke endre informasjonskapsler hentes med denne egenskapen hverandre, og de inneholder ingen nyttig informasjon."
  syntax:
    content: public System.Net.CookieContainer AuthenticationCookies { get; }
    return:
      type: System.Net.CookieContainer
      description: "Informasjonskapslene hentet fra godkjenningstjenesten."
  overload: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
  id: AuthenticationType
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: AuthenticationType
  nameWithType: ClientFormsIdentity.AuthenticationType
  fullName: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Henter godkjenningstypen som brukes til å godkjenne brukeren."
  remarks: "Vil du vanligvis tilgang til et <xref:System.Web.ClientServices.ClientFormsIdentity>objekt som en <xref:System.Security.Principal.IIdentity>referanse til unngå direkte avhengig av denne klassen.</xref:System.Security.Principal.IIdentity> </xref:System.Web.ClientServices.ClientFormsIdentity> Du kan fastslå om en bruker er godkjent ved å kontrollere de <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName>for identiteten.</xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName> Brukeren kan imidlertid godkjennes for Windows, men ikke for klienten programtjenester. Hvis du vil finne ut om brukeren er godkjent for klienten applikasjonsinnstillinger, må du også bekrefte at den <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>egenskapsverdien er &quot;ClientForms&quot;.</xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> Hvis du vil ha mer informasjon, se den <xref:System.Web.ClientServices.ClientFormsIdentity>klassen oversikt.</xref:System.Web.ClientServices.ClientFormsIdentity>"
  example:
  - "The following example code demonstrates how to use this property through an <xref:System.Security.Principal.IIdentity> reference to determine whether a user is currently authenticated for client application services. This example assumes that the application is in the default configuration where users are not required to log in again when the authentication cookie expires. Otherwise, the <xref:System.Net.WebException> might indicate that the user login has expired. For more information, see [How to: Configure Client Application Services](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ClientApplicationServices#312](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#312)]\n [!code-cs[ClientApplicationServices#312](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#312)]"
  syntax:
    content: public string AuthenticationType { get; }
    return:
      type: System.String
      description: "Typen for godkjenning som brukes til å godkjenne brukeren."
  overload: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose
  id: Dispose
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: Dispose()
  nameWithType: ClientFormsIdentity.Dispose()
  fullName: System.Web.ClientServices.ClientFormsIdentity.Dispose()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Frigir alle ressursene som brukes av den <xref href=&quot;System.Web.ClientServices.ClientFormsIdentity&quot;> </xref>."
  remarks: "Kall avhending når du er ferdig med <xref:System.Web.ClientServices.ClientFormsIdentity>.</xref:System.Web.ClientServices.ClientFormsIdentity> Fjerningsmetoden forlater den <xref:System.Web.ClientServices.ClientFormsIdentity>i en ubrukelig tilstand.</xref:System.Web.ClientServices.ClientFormsIdentity> Etter å avhending, må du frigi alle referanser til den <xref:System.Web.ClientServices.ClientFormsIdentity>Slik saneringsoppsamlingen kan gjenvinne minnet som den <xref:System.Web.ClientServices.ClientFormsIdentity>ble tar opp.</xref:System.Web.ClientServices.ClientFormsIdentity> </xref:System.Web.ClientServices.ClientFormsIdentity> Hvis du vil ha mer informasjon, se [Rydder opp uforvaltede ressurser](~/add/includes/ajax-current-ext-md.md) og [implementere metoden fjerne](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Alltid kall fjerne før du slipper siste referanse til <xref:System.Web.ClientServices.ClientFormsIdentity>.</xref:System.Web.ClientServices.ClientFormsIdentity> Ellers ressurser den bruker vil ikke bli frigjort før saneringsoppsamling kall av <xref:System.Web.ClientServices.ClientFormsIdentity>objektets `Finalize` metode.</xref:System.Web.ClientServices.ClientFormsIdentity>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.ClientServices.ClientFormsIdentity.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ClientFormsIdentity.Dispose(Boolean)
  fullName: System.Web.ClientServices.ClientFormsIdentity.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Frigir uforvaltede ressursene som brukes av den <xref href=&quot;System.Web.ClientServices.ClientFormsIdentity&quot;> </xref> og eventuelt frigir administrerte ressurser."
  remarks: "Denne metoden kalles av offentlig `Dispose()` metoden og <xref:System.Object.Finalize%2A>metode.</xref:System.Object.Finalize%2A> `Dispose()`Aktiverer den beskyttede `Dispose(Boolean)` metoden med den `disposing` parameteren satt til `true`. <xref:System.Object.Finalize%2A>aktiverer `Dispose` med `disposing` satt til `false`.</xref:System.Object.Finalize%2A>       Når den `disposing` -parameteren er SANN, denne metoden Frigjør alle ressurser holdes av administrerte objekter som denne <xref:System.Web.ClientServices.ClientFormsIdentity>referanser.</xref:System.Web.ClientServices.ClientFormsIdentity> Denne metoden starter den `Dispose()` metode for hver referert objekt."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Frigi ressurser både administrerte og uforvaltede; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> frigi bare uforvaltede ressurser."
  overload: System.Web.ClientServices.ClientFormsIdentity.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
  id: IsAuthenticated
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: ClientFormsIdentity.IsAuthenticated
  fullName: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Henter en verdi som angir om brukeren er godkjent."
  remarks: "Vil du vanligvis tilgang til et <xref:System.Web.ClientServices.ClientFormsIdentity>objekt som en <xref:System.Security.Principal.IIdentity>referanse til unngå direkte avhengig av denne klassen.</xref:System.Security.Principal.IIdentity> </xref:System.Web.ClientServices.ClientFormsIdentity> Du kan fastslå om en bruker er godkjent ved å kontrollere de <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName>for identiteten.</xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName> Brukeren kan imidlertid godkjennes for Windows, men ikke for klienten programtjenester. Hvis du vil finne ut om brukeren er godkjent for klienten applikasjonsinnstillinger, må du også bekrefte at den <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>egenskapsverdien er &quot;ClientForms&quot;.</xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> Hvis du vil ha mer informasjon, se den <xref:System.Web.ClientServices.ClientFormsIdentity>klassen oversikt.</xref:System.Web.ClientServices.ClientFormsIdentity>"
  example:
  - "The following example code demonstrates how to use this property through an <xref:System.Security.Principal.IIdentity> reference to determine whether a user is currently authenticated for client application services. This example assumes that the application is in the default configuration where users are not required to log in again when the authentication cookie expires. Otherwise, the <xref:System.Net.WebException> might indicate that the user login has expired. For more information, see [How to: Configure Client Application Services](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ClientApplicationServices#312](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#312)]\n [!code-cs[ClientApplicationServices#312](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#312)]"
  syntax:
    content: public bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis brukeren er godkjent; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.Name
  id: Name
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: Name
  nameWithType: ClientFormsIdentity.Name
  fullName: System.Web.ClientServices.ClientFormsIdentity.Name
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Henter navnet på brukeren."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Navnet på brukeren."
  overload: System.Web.ClientServices.ClientFormsIdentity.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.Provider
  id: Provider
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: Provider
  nameWithType: ClientFormsIdentity.Provider
  fullName: System.Web.ClientServices.ClientFormsIdentity.Provider
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Henter Medlemskapsleverandøren som brukes til å godkjenne brukeren."
  syntax:
    content: public System.Web.Security.MembershipProvider Provider { get; }
    return:
      type: System.Web.Security.MembershipProvider
      description: "Leverandøren av medlemskapet som brukes til å godkjenne brukeren."
  overload: System.Web.ClientServices.ClientFormsIdentity.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser
  id: RevalidateUser
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: RevalidateUser()
  nameWithType: ClientFormsIdentity.RevalidateUser()
  fullName: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Stille godkjenner brukeren ved å bruke bufret påloggingsinformasjon."
  remarks: "Når du bruker skjemagodkjenning ikke validere den gjeldende brukeren, i <xref:System.Web.ClientServices.ClientFormsIdentity>klassen lagrer brukerlegitimasjonen så lenge programmet kjører.</xref:System.Web.ClientServices.ClientFormsIdentity> Brukeren er godkjent bare til godkjenning informasjonskapselen utløper. Når informasjonskapselen utløper, må brukeren valideres for å få tilgang til eksterne roller eller webtjenester innstillinger. Du kan bruke den **avanserte innstillinger for tjenester** for å konfigurere programmet for å automatisk Valider på nytt for brukeren, som beskrevet i [slik: Konfigurer klienten programtjenester](~/add/includes/ajax-current-ext-md.md). Men hvis du konfigurerer programmet for å overholde utløp for informasjonskaps, du kan programmatisk Valider på nytt brukeren ved å kalle metoden RevalidateUser. Denne metoden er også nyttig når bytte fra frakoblet modus til tilkoblet modus, fordi programmet er avsluttet ned mens frakoblet.      > [!NOTE] > For RevalidateUser metoden er bare som helst. Fordi den ikke har en returverdi, kan det tyde om ny validering mislyktes. Ny validering av kan for eksempel mislykkes hvis brukerlegitimasjonen er endret på serveren. I dette tilfellet bør du ta med kode validerer brukere eksplisitt etter et service-kall mislykkes. For mer informasjon, se tilgang til webinnstillinger i [gjennomgang: ved hjelp av klienten programtjenester](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example code demonstrates how to use this method to silently revalidate a user when the application leaves the offline state. In this example, a <xref:System.Windows.Forms.CheckBox.CheckedChanged> event handler updates the offline status to match the check box value. If the user sets the application to the online state, the event handler attempts to revalidate the user. However, if the authentication server is unavailable, the event handler returns the application to the offline state.  \n  \n [!code-vb[ClientApplicationServices#315](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#315)]\n [!code-cs[ClientApplicationServices#315](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#315)]"
  syntax:
    content: public void RevalidateUser ();
    parameters: []
  overload: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  nameWithType: ClientFormsIdentity.ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  fullName: System.Web.ClientServices.ClientFormsIdentity.ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.MembershipProvider
  parent: System.Web.Security
  isExternal: true
  name: MembershipProvider
  nameWithType: MembershipProvider
  fullName: System.Web.Security.MembershipProvider
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.CookieContainer
  parent: System.Net
  isExternal: true
  name: CookieContainer
  nameWithType: CookieContainer
  fullName: System.Net.CookieContainer
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: AuthenticationCookies
  nameWithType: ClientFormsIdentity.AuthenticationCookies
  fullName: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: AuthenticationType
  nameWithType: ClientFormsIdentity.AuthenticationType
  fullName: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Dispose()
  nameWithType: ClientFormsIdentity.Dispose()
  fullName: System.Web.ClientServices.ClientFormsIdentity.Dispose()
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ClientFormsIdentity.Dispose(Boolean)
  fullName: System.Web.ClientServices.ClientFormsIdentity.Dispose(Boolean)
- uid: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: IsAuthenticated
  nameWithType: ClientFormsIdentity.IsAuthenticated
  fullName: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
- uid: System.Web.ClientServices.ClientFormsIdentity.Name
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Name
  nameWithType: ClientFormsIdentity.Name
  fullName: System.Web.ClientServices.ClientFormsIdentity.Name
- uid: System.Web.ClientServices.ClientFormsIdentity.Provider
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Provider
  nameWithType: ClientFormsIdentity.Provider
  fullName: System.Web.ClientServices.ClientFormsIdentity.Provider
- uid: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: RevalidateUser()
  nameWithType: ClientFormsIdentity.RevalidateUser()
  fullName: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser()
- uid: System.Web.ClientServices.ClientFormsIdentity.#ctor*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: ClientFormsIdentity
  nameWithType: ClientFormsIdentity.ClientFormsIdentity
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: AuthenticationCookies
  nameWithType: ClientFormsIdentity.AuthenticationCookies
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: AuthenticationType
  nameWithType: ClientFormsIdentity.AuthenticationType
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Dispose
  nameWithType: ClientFormsIdentity.Dispose
- uid: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: IsAuthenticated
  nameWithType: ClientFormsIdentity.IsAuthenticated
- uid: System.Web.ClientServices.ClientFormsIdentity.Name*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Name
  nameWithType: ClientFormsIdentity.Name
- uid: System.Web.ClientServices.ClientFormsIdentity.Provider*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Provider
  nameWithType: ClientFormsIdentity.Provider
- uid: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: RevalidateUser
  nameWithType: ClientFormsIdentity.RevalidateUser
