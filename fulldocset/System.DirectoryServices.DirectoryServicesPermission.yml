### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.DirectoryServicesPermission
  id: DirectoryServicesPermission
  children:
  - System.DirectoryServices.DirectoryServicesPermission.#ctor
  - System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionEntry[])
  - System.DirectoryServices.DirectoryServicesPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)
  - System.DirectoryServices.DirectoryServicesPermission.PermissionEntries
  langs:
  - csharp
  name: DirectoryServicesPermission
  nameWithType: DirectoryServicesPermission
  fullName: System.DirectoryServices.DirectoryServicesPermission
  type: Class
  summary: "Klassen DirectoryServicesPermission gjør at du kode sikkerhetstillatelser for <xref href=&quot;System.DirectoryServices&quot;> </xref>."
  syntax:
    content: 'public sealed class DirectoryServicesPermission : System.Security.Permissions.ResourcePermissionBase'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  - System.Security.Permissions.ResourcePermissionBase
  implements: []
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  - System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)
  - System.Security.Permissions.ResourcePermissionBase.Any
  - System.Security.Permissions.ResourcePermissionBase.Clear
  - System.Security.Permissions.ResourcePermissionBase.Copy
  - System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries
  - System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)
  - System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.ResourcePermissionBase.IsUnrestricted
  - System.Security.Permissions.ResourcePermissionBase.Local
  - System.Security.Permissions.ResourcePermissionBase.PermissionAccessType
  - System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)
  - System.Security.Permissions.ResourcePermissionBase.TagNames
  - System.Security.Permissions.ResourcePermissionBase.ToXml
  - System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryServicesPermission.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.DirectoryServicesPermission
  langs:
  - csharp
  name: DirectoryServicesPermission()
  nameWithType: DirectoryServicesPermission.DirectoryServicesPermission()
  fullName: System.DirectoryServices.DirectoryServicesPermission.DirectoryServicesPermission()
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.DirectoryServices.DirectoryServicesPermission&quot;> </xref> klasse."
  syntax:
    content: public DirectoryServicesPermission ();
    parameters: []
  overload: System.DirectoryServices.DirectoryServicesPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionEntry[])
  id: '#ctor(System.DirectoryServices.DirectoryServicesPermissionEntry[])'
  parent: System.DirectoryServices.DirectoryServicesPermission
  langs:
  - csharp
  name: DirectoryServicesPermission(DirectoryServicesPermissionEntry[])
  nameWithType: DirectoryServicesPermission.DirectoryServicesPermission(DirectoryServicesPermissionEntry[])
  fullName: System.DirectoryServices.DirectoryServicesPermission.DirectoryServicesPermission(DirectoryServicesPermissionEntry[])
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.DirectoryServices.DirectoryServicesPermission&quot;> </xref> klassen med de angitte tillatelsen tilgang nivå oppføringene."
  syntax:
    content: public DirectoryServicesPermission (System.DirectoryServices.DirectoryServicesPermissionEntry[] permissionAccessEntries);
    parameters:
    - id: permissionAccessEntries
      type: System.DirectoryServices.DirectoryServicesPermissionEntry[]
      description: "En matrise av <xref href=&quot;System.DirectoryServices.DirectoryServicesPermissionEntry&quot;> </xref> objekter. Den <xref:System.DirectoryServices.DirectoryServicesPermission.PermissionEntries*>egenskapen er satt til denne verdien.</xref:System.DirectoryServices.DirectoryServicesPermission.PermissionEntries*>"
  overload: System.DirectoryServices.DirectoryServicesPermission.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den angitte verdien for den <code> permissionAccessEntries </code> parameteren er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryServicesPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.DirectoryServices.DirectoryServicesPermission
  langs:
  - csharp
  name: DirectoryServicesPermission(PermissionState)
  nameWithType: DirectoryServicesPermission.DirectoryServicesPermission(PermissionState)
  fullName: System.DirectoryServices.DirectoryServicesPermission.DirectoryServicesPermission(PermissionState)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.DirectoryServices.DirectoryServicesPermission&quot;> </xref> klassen med den angitte tillatelse-tilstanden."
  syntax:
    content: public DirectoryServicesPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Én av de <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> verdier."
  overload: System.DirectoryServices.DirectoryServicesPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> State </code> parameteren er ikke en gyldig verdi for <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)
  id: '#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)'
  parent: System.DirectoryServices.DirectoryServicesPermission
  langs:
  - csharp
  name: DirectoryServicesPermission(DirectoryServicesPermissionAccess,String)
  nameWithType: DirectoryServicesPermission.DirectoryServicesPermission(DirectoryServicesPermissionAccess,String)
  fullName: System.DirectoryServices.DirectoryServicesPermission.DirectoryServicesPermission(DirectoryServicesPermissionAccess,String)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.DirectoryServices.DirectoryServicesPermission&quot;> </xref> klassen med de angitte tilgangsnivåene og banen til en Active Directory Domain Services-node."
  syntax:
    content: public DirectoryServicesPermission (System.DirectoryServices.DirectoryServicesPermissionAccess permissionAccess, string path);
    parameters:
    - id: permissionAccess
      type: System.DirectoryServices.DirectoryServicesPermissionAccess
      description: "Én av de <xref href=&quot;System.DirectoryServices.DirectoryServicesPermissionAccess&quot;> </xref> verdier."
    - id: path
      type: System.String
      description: "Banen til Active Directory Domain Services-objektet kalles ADsPath tillatelsene gjelder."
  overload: System.DirectoryServices.DirectoryServicesPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryServicesPermission.PermissionEntries
  id: PermissionEntries
  parent: System.DirectoryServices.DirectoryServicesPermission
  langs:
  - csharp
  name: PermissionEntries
  nameWithType: DirectoryServicesPermission.PermissionEntries
  fullName: System.DirectoryServices.DirectoryServicesPermission.PermissionEntries
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Henter tillatelsesoppføringer-samlingen for denne tillatelsen."
  syntax:
    content: public System.DirectoryServices.DirectoryServicesPermissionEntryCollection PermissionEntries { get; }
    return:
      type: System.DirectoryServices.DirectoryServicesPermissionEntryCollection
      description: "En <xref href=&quot;System.DirectoryServices.DirectoryServicesPermissionEntryCollection&quot;> </xref> objekt som inneholder tillatelsesoppføringer for å få denne tillatelsen."
  overload: System.DirectoryServices.DirectoryServicesPermission.PermissionEntries*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: System.Security.Permissions.ResourcePermissionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.DirectoryServices.DirectoryServicesPermission.#ctor
  parent: System.DirectoryServices.DirectoryServicesPermission
  isExternal: false
  name: DirectoryServicesPermission()
  nameWithType: DirectoryServicesPermission.DirectoryServicesPermission()
  fullName: System.DirectoryServices.DirectoryServicesPermission.DirectoryServicesPermission()
- uid: System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionEntry[])
  parent: System.DirectoryServices.DirectoryServicesPermission
  isExternal: false
  name: DirectoryServicesPermission(DirectoryServicesPermissionEntry[])
  nameWithType: DirectoryServicesPermission.DirectoryServicesPermission(DirectoryServicesPermissionEntry[])
  fullName: System.DirectoryServices.DirectoryServicesPermission.DirectoryServicesPermission(DirectoryServicesPermissionEntry[])
- uid: System.DirectoryServices.DirectoryServicesPermissionEntry[]
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryServicesPermissionEntry
  nameWithType: DirectoryServicesPermissionEntry
  fullName: System.DirectoryServices.DirectoryServicesPermissionEntry[]
  spec.csharp:
  - uid: System.DirectoryServices.DirectoryServicesPermissionEntry
    name: DirectoryServicesPermissionEntry
    nameWithType: DirectoryServicesPermissionEntry
    fullName: DirectoryServicesPermissionEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.DirectoryServicesPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.DirectoryServices.DirectoryServicesPermission
  isExternal: false
  name: DirectoryServicesPermission(PermissionState)
  nameWithType: DirectoryServicesPermission.DirectoryServicesPermission(PermissionState)
  fullName: System.DirectoryServices.DirectoryServicesPermission.DirectoryServicesPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)
  parent: System.DirectoryServices.DirectoryServicesPermission
  isExternal: false
  name: DirectoryServicesPermission(DirectoryServicesPermissionAccess,String)
  nameWithType: DirectoryServicesPermission.DirectoryServicesPermission(DirectoryServicesPermissionAccess,String)
  fullName: System.DirectoryServices.DirectoryServicesPermission.DirectoryServicesPermission(DirectoryServicesPermissionAccess,String)
- uid: System.DirectoryServices.DirectoryServicesPermissionAccess
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryServicesPermissionAccess
  nameWithType: DirectoryServicesPermissionAccess
  fullName: System.DirectoryServices.DirectoryServicesPermissionAccess
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.DirectoryServicesPermission.PermissionEntries
  parent: System.DirectoryServices.DirectoryServicesPermission
  isExternal: false
  name: PermissionEntries
  nameWithType: DirectoryServicesPermission.PermissionEntries
  fullName: System.DirectoryServices.DirectoryServicesPermission.PermissionEntries
- uid: System.DirectoryServices.DirectoryServicesPermissionEntryCollection
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryServicesPermissionEntryCollection
  nameWithType: DirectoryServicesPermissionEntryCollection
  fullName: System.DirectoryServices.DirectoryServicesPermissionEntryCollection
- uid: System.DirectoryServices.DirectoryServicesPermission.#ctor*
  parent: System.DirectoryServices.DirectoryServicesPermission
  isExternal: false
  name: DirectoryServicesPermission
  nameWithType: DirectoryServicesPermission.DirectoryServicesPermission
- uid: System.DirectoryServices.DirectoryServicesPermission.PermissionEntries*
  parent: System.DirectoryServices.DirectoryServicesPermission
  isExternal: false
  name: PermissionEntries
  nameWithType: DirectoryServicesPermission.PermissionEntries
