### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Eventing.Reader.EventLogException
  id: EventLogException
  children:
  - System.Diagnostics.Eventing.Reader.EventLogException.#ctor
  - System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Int32)
  - System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String)
  - System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String,System.Exception)
  - System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Diagnostics.Eventing.Reader.EventLogException.Message
  langs:
  - csharp
  name: EventLogException
  nameWithType: EventLogException
  fullName: System.Diagnostics.Eventing.Reader.EventLogException
  type: Class
  summary: "Representerer basisklasse for alle unntak som er et når det oppstår en feil under lesing hendelsesloggen relatert informasjon."
  syntax:
    content: 'public class EventLogException : Exception'
  inheritance:
  - System.Exception
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor
  id: '#ctor'
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  langs:
  - csharp
  name: EventLogException()
  nameWithType: EventLogException.EventLogException()
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogException&quot;> </xref> klasse."
  syntax:
    content: public EventLogException ();
    parameters: []
  overload: System.Diagnostics.Eventing.Reader.EventLogException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  langs:
  - csharp
  name: EventLogException(Int32)
  nameWithType: EventLogException.EventLogException(Int32)
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException(Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogException&quot;> </xref> klassen med feilkoden for unntaket."
  syntax:
    content: protected EventLogException (int errorCode);
    parameters:
    - id: errorCode
      type: System.Int32
      description: "Feilkoden for feilen som oppstod under lesing eller konfigurere hendelsesloggen relatert informasjon. Hvis du vil ha mer informasjon og en liste over hendelsesloggen se relaterte feilkoder http://go.microsoft.com/fwlink/?LinkId=82629."
  overload: System.Diagnostics.Eventing.Reader.EventLogException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  langs:
  - csharp
  name: EventLogException(String)
  nameWithType: EventLogException.EventLogException(String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogException&quot;> </xref> klassen ved å angi feilmeldingen som beskriver gjeldende unntaket."
  syntax:
    content: public EventLogException (string message);
    parameters:
    - id: message
      type: System.String
      description: "Feilmeldingen som beskriver gjeldende unntaket."
  overload: System.Diagnostics.Eventing.Reader.EventLogException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  langs:
  - csharp
  name: EventLogException(SerializationInfo,StreamingContext)
  nameWithType: EventLogException.EventLogException(SerializationInfo,StreamingContext)
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogException&quot;> </xref> klasse serialiserte dataene."
  syntax:
    content: protected EventLogException (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "Den <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objekt som har serialiserte objektdata om som oppstod et unntak."
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: "Den <xref:System.Runtime.Serialization.StreamingContext>objekt som inneholder kontekstavhengig informasjon om kilden eller målet.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Diagnostics.Eventing.Reader.EventLogException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  langs:
  - csharp
  name: EventLogException(String,Exception)
  nameWithType: EventLogException.EventLogException(String,Exception)
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException(String,Exception)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogException&quot;> </xref> klassen med et feil meldings- og indre unntak."
  syntax:
    content: public EventLogException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "Feilmeldingen som beskriver gjeldende unntaket."
    - id: innerException
      type: System.Exception
      description: "Unntak-forekomsten som førte til den gjeldende unntaket."
  overload: System.Diagnostics.Eventing.Reader.EventLogException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: EventLogException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Angir SerializationInfo-objektet med informasjon om unntaket."
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Den <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objekt som har serialiserte objektdata om et unntak."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Den <xref:System.Runtime.Serialization.StreamingContext>objekt som inneholder kontekstavhengig informasjon om kilden eller målet.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogException.Message
  id: Message
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  langs:
  - csharp
  name: Message
  nameWithType: EventLogException.Message
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.Message
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Henter feilmeldingen som beskriver gjeldende unntaket."
  syntax:
    content: public override string Message { get; }
    return:
      type: System.String
      description: "Returnerer en streng som inneholder feilmeldingen som beskriver gjeldende unntaket."
  overload: System.Diagnostics.Eventing.Reader.EventLogException.Message*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Exception
  isExternal: false
  name: System.Exception
- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  isExternal: false
  name: EventLogException()
  nameWithType: EventLogException.EventLogException()
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException()
- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Int32)
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  isExternal: false
  name: EventLogException(Int32)
  nameWithType: EventLogException.EventLogException(Int32)
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String)
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  isExternal: false
  name: EventLogException(String)
  nameWithType: EventLogException.EventLogException(String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  isExternal: false
  name: EventLogException(SerializationInfo,StreamingContext)
  nameWithType: EventLogException.EventLogException(SerializationInfo,StreamingContext)
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String,System.Exception)
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  isExternal: false
  name: EventLogException(String,Exception)
  nameWithType: EventLogException.EventLogException(String,Exception)
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException(String,Exception)
- uid: System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: EventLogException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Diagnostics.Eventing.Reader.EventLogException.Message
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  isExternal: false
  name: Message
  nameWithType: EventLogException.Message
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.Message
- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor*
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  isExternal: false
  name: EventLogException
  nameWithType: EventLogException.EventLogException
- uid: System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData*
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  isExternal: false
  name: GetObjectData
  nameWithType: EventLogException.GetObjectData
- uid: System.Diagnostics.Eventing.Reader.EventLogException.Message*
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  isExternal: false
  name: Message
  nameWithType: EventLogException.Message
