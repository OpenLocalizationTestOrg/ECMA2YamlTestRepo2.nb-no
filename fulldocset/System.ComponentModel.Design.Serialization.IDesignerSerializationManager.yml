### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  id: IDesignerSerializationManager
  children:
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)
  langs:
  - csharp
  name: IDesignerSerializationManager
  nameWithType: IDesignerSerializationManager
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  type: Interface
  summary: "Gir et grensesnitt som kan administrere utformingen serialisering."
  remarks: "En designer kan benytte IDesignerSerializationManager får tilgang til tjenester nyttig for å behandle utformingen serialisering prosesser. En klasse som implementerer designer serialisering manager kan for eksempel bruke dette grensesnittet for å opprette objekter slå opp typer, identifisere objekter og tilpasse serialisering av bestemte typer."
  example:
  - "The following example illustrates how to use IDesignerSerializationManager to serialize and deserialize Code DOM statements.  \n  \n [!code-cs[IDesignerSerializationManagerSample#1](~/add/codesnippet/csharp/t-system.componentmodel._71_1.cs)]\n [!code-cpp[IDesignerSerializationManagerSample#1](~/add/codesnippet/cpp/t-system.componentmodel._71_1.cpp)]\n [!code-vb[IDesignerSerializationManagerSample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._71_1.vb)]"
  syntax:
    content: 'public interface IDesignerSerializationManager : IServiceProvider'
  implements:
  - System.IServiceProvider
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  id: AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  langs:
  - csharp
  name: AddSerializationProvider(IDesignerSerializationProvider)
  nameWithType: IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Legger til den angitte serialisering leverandøren transportbehandling for serialisering."
  remarks: "Denne metoden legger til en egendefinert serialisering leverandør transportbehandling for serialisering. Serialisering leverandører kan angi egendefinerte serializers for en bestemt type objekt eller et sett med objekttyper. Under serialisering, hver egendefinerte serialisering-leverandør er bedt om å returnere en serialisering for en bestemt datatype hvis den har en. Serialisering manager bruker egendefinert serialiseringen angitt av denne metoden før du bruker standard serialiseringen for en bestemt type."
  syntax:
    content: public void AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);
    parameters:
    - id: provider
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider
      description: "Serialisering leverandøren å legge til."
  overload: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  id: Context
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  langs:
  - csharp
  name: Context
  nameWithType: IDesignerSerializationManager.Context
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Henter et område med stakk kodebasert, brukerdefinerte lagring som brukes til kommunikasjon mellom serializers."
  remarks: "Dette lagringsområdet inneholder formidling av konteksten objektinformasjon til serializers. Informasjon om sikkerhetskontekst som om objekter som er i serialisert kan lagres og tilgjengelig via <xref:System.ComponentModel.Design.Serialization.ContextStack>.</xref:System.ComponentModel.Design.Serialization.ContextStack>"
  syntax:
    content: public System.ComponentModel.Design.Serialization.ContextStack Context { get; }
    return:
      type: System.ComponentModel.Design.Serialization.ContextStack
      description: "En <xref href=&quot;System.ComponentModel.Design.Serialization.ContextStack&quot;> </xref> som lagrer data."
  overload: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  id: CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  langs:
  - csharp
  name: CreateInstance(Type,ICollection,String,Boolean)
  nameWithType: IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Oppretter en forekomst av den angitte typen og legger det til en samling av navngitte forekomster."
  remarks: "Objekter som Implementer <xref:System.ComponentModel.IComponent>er lagt til i beholderen utformingen hvis den `addToContainer` parameteren er `true`.</xref:System.ComponentModel.IComponent>"
  syntax:
    content: public object CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);
    parameters:
    - id: type
      type: System.Type
      description: "Datatypen til å opprette."
    - id: arguments
      type: System.Collections.ICollection
      description: "Argumenter som skal sendes til konstruktøren for denne typen."
    - id: name
      type: System.String
      description: "Navnet på objektet. Dette navnet kan brukes til å få tilgang til objektet senere via <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*>.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*> Hvis <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> er passert, objektet fortsatt er opprettet, men kan ikke brukes med navn."
    - id: addToContainer
      type: System.Boolean
      description: "Hvis <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, dette objektet legges til i beholderen utformingen. Objektet må implementere <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> for dette skal fungere."
    return:
      type: System.Object
      description: "Forekomsten av nyopprettede objektet."
  overload: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)
  id: GetInstance(System.String)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  langs:
  - csharp
  name: GetInstance(String)
  nameWithType: IDesignerSerializationManager.GetInstance(String)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Henter en forekomst av en opprettet objektet i det angitte navnet eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis objektet ikke finnes."
  remarks: "Navnet på objektet som skal hentes må er angitt i et tidligere kall til <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>"
  syntax:
    content: public object GetInstance (string name);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på objektet som skal hentes."
    return:
      type: System.Object
      description: "En forekomst av objektet med det angitte navnet eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis ingen objekter med dette navnet finnes."
  overload: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)
  id: GetName(System.Object)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  langs:
  - csharp
  name: GetName(Object)
  nameWithType: IDesignerSerializationManager.GetName(Object)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Henter navnet på det angitte objektet, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis objektet har ikke noe navn."
  syntax:
    content: public string GetName (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Objektet som skal hentes navnet for."
    return:
      type: System.String
      description: "Navnet på objektet, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis objektet er uten navn."
  overload: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)
  id: GetSerializer(System.Type,System.Type)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  langs:
  - csharp
  name: GetSerializer(Type,Type)
  nameWithType: IDesignerSerializationManager.GetSerializer(Type,Type)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Henter en serialisering av den forespurte typen for den angitte objekttypen."
  syntax:
    content: public object GetSerializer (Type objectType, Type serializerType);
    parameters:
    - id: objectType
      type: System.Type
      description: "Typen for objektet som skal få serialisering for."
    - id: serializerType
      type: System.Type
      description: "Hva slags serialiseringen til å hente."
    return:
      type: System.Object
      description: "En forekomst av den forespurte serialiseringen eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis ingen passende Serialiserer kan blir funnet."
  overload: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)
  id: GetType(System.String)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  langs:
  - csharp
  name: GetType(String)
  nameWithType: IDesignerSerializationManager.GetType(String)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Henter en type for det angitte navnet."
  syntax:
    content: public Type GetType (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "Det fullstendig kvalifiserte navnet av type lastes inn."
    return:
      type: System.Type
      description: "En forekomst av typen, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis typen ikke kan lastes inn."
  overload: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  id: Properties
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  langs:
  - csharp
  name: Properties
  nameWithType: IDesignerSerializationManager.Properties
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Angir egendefinerte egenskaper som kan serialiseres med tilgjengelige serializers."
  remarks: "Denne egenskapen kan inneholde en tom samling. En serialisering skal aldri antar at det finnes egenskaper eksempel. En utledede klassen eller implementeringen av <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>definerer settet med egenskaper som vises her.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection Properties { get; }
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "En <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> som inneholder egenskapene som skal serialiseres."
  overload: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  id: RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  langs:
  - csharp
  name: RemoveSerializationProvider(IDesignerSerializationProvider)
  nameWithType: IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Fjerner en egendefinert serialisering leverandør fra transportbehandling for serialisering."
  syntax:
    content: public void RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);
    parameters:
    - id: provider
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider
      description: "Leverandøren fjerne. Dette objektet må ha blitt lagt til i <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider*>.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider*>"
  overload: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)
  id: ReportError(System.Object)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  langs:
  - csharp
  name: ReportError(Object)
  nameWithType: IDesignerSerializationManager.ReportError(Object)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Rapporter en feil under serialisering."
  remarks: "Hvis transportbehandling for serialisering støtter logging flere feil i implementeringen av ReportError, kan det lagre feil informasjon objekt for en fremtidig der alle feilene som oppstod kan vise samtidig. Hvis denne metoden lagrer flere feil, fortsette serialisering etter et kall til denne metoden. Hvis denne metoden ikke støtter flere feil-logging, må denne metoden Iverksett et unntak, som avbryter serialisering.      > [!NOTE] > Transportbehandling for serialisering bør aldri iverksette et unntak for feil som oppstod under serialiseringen. Det må bare Iverksett et unntak under deserialisering. Ellers skal blir forvirret fordi lagre dokumentet brukere ikke feile."
  syntax:
    content: public void ReportError (object errorInformation);
    parameters:
    - id: errorInformation
      type: System.Object
      description: "Feil til rapporten. Denne informasjon-objekt kan være av en objekttype. Hvis det er et unntak, meldingen av unntaket ut og rapportert til brukeren. Hvis det er en annen type <xref:System.Object.ToString*>kalles for å vise informasjonen for brukeren.</xref:System.Object.ToString*>"
  overload: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName
  id: ResolveName
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  langs:
  - csharp
  name: ResolveName
  nameWithType: IDesignerSerializationManager.ResolveName
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Forekommer når <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName*>Finner ikke det angitte navnet i transportbehandling serialisering navnet på tabellen.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName*>"
  remarks: "Denne hendelsen inneholder en metode for serialisering å opprette et objekt ved behov, slik at serialiseringen ikke må oppretting av objektet av avhengighet. Representanten for denne hendelsen er fjernet rett etter serialisering eller deserialisering er fullført."
  syntax:
    content: public event System.ComponentModel.Design.Serialization.ResolveNameEventHandler ResolveName;
    return:
      type: System.ComponentModel.Design.Serialization.ResolveNameEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete
  id: SerializationComplete
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  langs:
  - csharp
  name: SerializationComplete
  nameWithType: IDesignerSerializationManager.SerializationComplete
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Forekommer når serialisering er fullført."
  remarks: "Denne hendelsen oppstår når serialisering / deserialisering er fullført.       Vanligvis serialisering kode skrives utdata fra serialiseringsdataene og vanligvis krever ikke tilstand-kontroll og behandling. Hvis det er nødvendig for å beholde dataene i hele serialisering, kan data angitt og tilgang til en serialisering, som kan lytte til SerializationComplete hendelsen, og Fjern dataene etter serialisering. Gjenoppretting tilstanden riktig etter serialisering kan skyldes viktige serializers kan brukes på nytt under serialisering og overflødige tilstandsdata eller åpne flyter kanskje ikke riktig.       For eksempel hvis en serialisering må ikke skrive til en annen fil, for eksempel en ressursfil er det effektivt å utforme serialiseringen å lukke filen når du er ferdig. Serialisering av en vanligvis krever flere serializers. Ressursfilen vil åpne og lukket mange ganger. I stedet kan ressursfilen lukkes på slutten av serialisering av et objekt som lyttet til SerializationComplete-hendelsen."
  syntax:
    content: public event EventHandler SerializationComplete;
    return:
      type: System.EventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)
  id: SetName(System.Object,System.String)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  langs:
  - csharp
  name: SetName(Object,String)
  nameWithType: IDesignerSerializationManager.SetName(Object,String)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Angir navnet på det eksisterende objektet som er angitt."
  remarks: "Denne metoden er nyttig når det kreves for å opprette og navngi en forekomst av et objekt uten å bruke <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> Et unntak hvis du prøver å endre navn på et eksisterende objekt, eller hvis du prøver å gi et nytt objekt et navn som er allerede i bruk."
  syntax:
    content: public void SetName (object instance, string name);
    parameters:
    - id: instance
      type: System.Object
      description: "Forekomsten av objektet til navn."
    - id: name
      type: System.String
      description: "Navnet som skal gi forekomsten."
  overload: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: AddSerializationProvider(IDesignerSerializationProvider)
  nameWithType: IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: IDesignerSerializationProvider
  nameWithType: IDesignerSerializationProvider
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: Context
  nameWithType: IDesignerSerializationManager.Context
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
- uid: System.ComponentModel.Design.Serialization.ContextStack
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: ContextStack
  nameWithType: ContextStack
  fullName: System.ComponentModel.Design.Serialization.ContextStack
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: CreateInstance(Type,ICollection,String,Boolean)
  nameWithType: IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: GetInstance(String)
  nameWithType: IDesignerSerializationManager.GetInstance(String)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: GetName(Object)
  nameWithType: IDesignerSerializationManager.GetName(Object)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: GetSerializer(Type,Type)
  nameWithType: IDesignerSerializationManager.GetSerializer(Type,Type)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: GetType(String)
  nameWithType: IDesignerSerializationManager.GetType(String)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: Properties
  nameWithType: IDesignerSerializationManager.Properties
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: RemoveSerializationProvider(IDesignerSerializationProvider)
  nameWithType: IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: ReportError(Object)
  nameWithType: IDesignerSerializationManager.ReportError(Object)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: ResolveName
  nameWithType: IDesignerSerializationManager.ResolveName
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName
- uid: System.ComponentModel.Design.Serialization.ResolveNameEventHandler
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: ResolveNameEventHandler
  nameWithType: ResolveNameEventHandler
  fullName: System.ComponentModel.Design.Serialization.ResolveNameEventHandler
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: SerializationComplete
  nameWithType: IDesignerSerializationManager.SerializationComplete
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: SetName(Object,String)
  nameWithType: IDesignerSerializationManager.SetName(Object,String)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider*
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: AddSerializationProvider
  nameWithType: IDesignerSerializationManager.AddSerializationProvider
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context*
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: Context
  nameWithType: IDesignerSerializationManager.Context
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance*
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: CreateInstance
  nameWithType: IDesignerSerializationManager.CreateInstance
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: GetInstance
  nameWithType: IDesignerSerializationManager.GetInstance
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName*
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: GetName
  nameWithType: IDesignerSerializationManager.GetName
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer*
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: GetSerializer
  nameWithType: IDesignerSerializationManager.GetSerializer
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType*
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: GetType
  nameWithType: IDesignerSerializationManager.GetType
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: Properties
  nameWithType: IDesignerSerializationManager.Properties
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider*
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: RemoveSerializationProvider
  nameWithType: IDesignerSerializationManager.RemoveSerializationProvider
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError*
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: ReportError
  nameWithType: IDesignerSerializationManager.ReportError
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName*
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: SetName
  nameWithType: IDesignerSerializationManager.SetName
