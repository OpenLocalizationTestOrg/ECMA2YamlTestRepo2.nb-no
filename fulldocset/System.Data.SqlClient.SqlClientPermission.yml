### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlClientPermission
  id: SqlClientPermission
  children:
  - System.Data.SqlClient.SqlClientPermission.#ctor
  - System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  - System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  - System.Data.SqlClient.SqlClientPermission.Copy
  langs:
  - csharp
  name: SqlClientPermission
  nameWithType: SqlClientPermission
  fullName: System.Data.SqlClient.SqlClientPermission
  type: Class
  summary: "Aktiverer .NET Framework-dataleverandør for SQL Server for å sikre at en bruker har et sikkerhetsnivå tilstrekkelige til å få tilgang til en datakilde."
  remarks: "Den <xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A>egenskapen overstyrer den <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>egenskapen.</xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> </xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A> Derfor Hvis du angir <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>til `false`, må du også angi <xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A>til `false` å hindre en bruker i å gjøre en tilkobling med et tomt passord.</xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A> </xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>      > [!NOTE] > Når du bruker kode sikkerhetstillatelser for tilgang til ADO.NET, riktig mønsteret er å starte med mest restriktive tilfellet (ingen tillatelser i det hele tatt) og deretter legge til bestemte rettigheter som kreves for bestemt oppgaven koden må utføre. Det motsatte mønsteret med alle tillatelser Start og nekter en bestemt tillatelse er ikke sikker, fordi det finnes flere måter å uttrykkes samme tilkoblingsstreng. Hvis du starter med alle tillatelser, og prøv å nekte bruk av tilkoblingsstrengen for eksempel &quot;server = someserver&quot;, vil fortsatt tillatt strengen &quot;server=someserver.mycompany.com&quot;. Ved å starte alltid ved å gi noen tillatelser i det hele tatt, kan du redusere mulighetene for at det er hull i tillatelsene."
  syntax:
    content: 'public sealed class SqlClientPermission : System.Data.Common.DBDataPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  - System.Data.Common.DBDataPermission
  implements: []
  inheritedMembers:
  - System.Data.Common.DBDataPermission.AllowBlankPassword
  - System.Data.Common.DBDataPermission.Clear
  - System.Data.Common.DBDataPermission.CreateInstance
  - System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)
  - System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)
  - System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)
  - System.Data.Common.DBDataPermission.IsUnrestricted
  - System.Data.Common.DBDataPermission.ToXml
  - System.Data.Common.DBDataPermission.Union(System.Security.IPermission)
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: SqlClientPermission()
  nameWithType: SqlClientPermission.SqlClientPermission()
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> klasse."
  syntax:
    content: public SqlClientPermission ();
    parameters: []
  overload: System.Data.SqlClient.SqlClientPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: SqlClientPermission(PermissionState)
  nameWithType: SqlClientPermission.SqlClientPermission(PermissionState)
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission(PermissionState)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> klasse."
  syntax:
    content: public SqlClientPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Én av de <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> verdier."
  overload: System.Data.SqlClient.SqlClientPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  id: '#ctor(System.Security.Permissions.PermissionState,System.Boolean)'
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: SqlClientPermission(PermissionState,Boolean)
  nameWithType: SqlClientPermission.SqlClientPermission(PermissionState,Boolean)
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission(PermissionState,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> klasse."
  remarks: "Den <xref:System.Security.Permissions.PermissionState>opplisting overstyrer den <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>egenskapen.</xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> </xref:System.Security.Permissions.PermissionState> Derfor Hvis du angir <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>til `false`, må du også angi <xref:System.Security.Permissions.PermissionState>til `None` å hindre en bruker i å gjøre en tilkobling med et tomt passord.</xref:System.Security.Permissions.PermissionState> </xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> Et eksempel demonstrerer hvordan du bruker krav for sikkerhet, kan du se [kodetilgangssikkerhet og ADO.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public SqlClientPermission (System.Security.Permissions.PermissionState state, bool allowBlankPassword);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Én av de <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> verdier."
    - id: allowBlankPassword
      type: System.Boolean
      description: "Angir om et tomt passord er tillatt."
  overload: System.Data.SqlClient.SqlClientPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  id: Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: Add(String,String,KeyRestrictionBehavior)
  nameWithType: SqlClientPermission.Add(String,String,KeyRestrictionBehavior)
  fullName: System.Data.SqlClient.SqlClientPermission.Add(String,String,KeyRestrictionBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Legger til en ny tilkoblingsstreng og et sett med begrenset nøkkelord til den <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> objektet."
  remarks: "Bruk denne metoden til å konfigurere tilkoblingsstrenger som tillates av et bestemt tillatelse-objekt. For eksempel bruke følgende kodefragmentet Hvis du vil tillate bare en typespesifikk tilkoblingsstreng og ikke noe annet: `permission.Add(&quot;server=MyServer; database=MyDatabase; Integrated Security=true&quot;, &quot;&quot;, KeyRestrictionBehavior.AllowOnly)` følgende eksempel tillater tilkoblingsstrenger som bruker en database, men bare på serveren minserver, med en bruker og passord kombinasjon og som inneholder ingen andre nøkkelord for tilkoblingsstreng: `permission.Add(&quot;server=MyServer;&quot;, &quot;database=; user id=; password=;&quot;, KeyRestrictionBehavior.AllowOnly)` eksemplet bruker samme scenario som ovenfor, men gjør det mulig for en failover-partner som kan brukes ved å koble til servere konfigurert for speiling : `permission.Add(&quot;server=MyServer; failover partner=MyMirrorServer&quot;, &quot;database=; user id=; password=;&quot;, KeyRestrictionBehavior.AllowOnly)`       >  [!NOTE] > Når du bruker kode sikkerhetstillatelser for tilgang til ADO.NET, riktig mønsteret er å starte med mest restriktive tilfellet (ingen tillatelser i det hele tatt) og deretter legge til bestemte rettigheter som kreves for bestemt oppgaven koden må utføre. Det motsatte mønsteret med alle tillatelser Start og forsøk deretter å avslå en bestemt tillatelse er ikke sikker, fordi det finnes flere måter å uttrykkes samme tilkoblingsstreng. Hvis du starter med alle tillatelser, og prøv å nekte bruk av tilkoblingsstrengen for eksempel &quot;server = someserver&quot;, vil fortsatt tillatt strengen &quot;server=someserver.mycompany.com&quot;. Ved å starte alltid ved å gi noen tillatelser i det hele tatt, kan du redusere mulighetene for at det er hull i tillatelsene."
  syntax:
    content: public override void Add (string connectionString, string restrictions, System.Data.KeyRestrictionBehavior behavior);
    parameters:
    - id: connectionString
      type: System.String
      description: "Tilkoblingsstrengen."
    - id: restrictions
      type: System.String
      description: "Key-begrensninger."
    - id: behavior
      type: System.Data.KeyRestrictionBehavior
      description: "Én av de <xref href=&quot;System.Data.KeyRestrictionBehavior&quot;> </xref> opplistingene."
  overload: System.Data.SqlClient.SqlClientPermission.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.Copy
  id: Copy
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: SqlClientPermission.Copy()
  fullName: System.Data.SqlClient.SqlClientPermission.Copy()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Returns the <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;></xref> as an <xref href=&quot;System.Security.IPermission&quot;></xref>."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "En kopi av det gjeldende tillatelse-objektet."
  overload: System.Data.SqlClient.SqlClientPermission.Copy*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DBDataPermission
  isExternal: false
  name: System.Data.Common.DBDataPermission
- uid: System.Data.SqlClient.SqlClientPermission.#ctor
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: SqlClientPermission()
  nameWithType: SqlClientPermission.SqlClientPermission()
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission()
- uid: System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: SqlClientPermission(PermissionState)
  nameWithType: SqlClientPermission.SqlClientPermission(PermissionState)
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: SqlClientPermission(PermissionState,Boolean)
  nameWithType: SqlClientPermission.SqlClientPermission(PermissionState,Boolean)
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission(PermissionState,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: Add(String,String,KeyRestrictionBehavior)
  nameWithType: SqlClientPermission.Add(String,String,KeyRestrictionBehavior)
  fullName: System.Data.SqlClient.SqlClientPermission.Add(String,String,KeyRestrictionBehavior)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.KeyRestrictionBehavior
  parent: System.Data
  isExternal: false
  name: KeyRestrictionBehavior
  nameWithType: KeyRestrictionBehavior
  fullName: System.Data.KeyRestrictionBehavior
- uid: System.Data.SqlClient.SqlClientPermission.Copy
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: Copy()
  nameWithType: SqlClientPermission.Copy()
  fullName: System.Data.SqlClient.SqlClientPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Data.SqlClient.SqlClientPermission.#ctor*
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: SqlClientPermission
  nameWithType: SqlClientPermission.SqlClientPermission
- uid: System.Data.SqlClient.SqlClientPermission.Add*
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: Add
  nameWithType: SqlClientPermission.Add
- uid: System.Data.SqlClient.SqlClientPermission.Copy*
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: Copy
  nameWithType: SqlClientPermission.Copy
