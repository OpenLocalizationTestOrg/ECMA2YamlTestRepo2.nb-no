### YamlMime:ManagedReference
items:
- uid: System.Web.Security.WindowsTokenRoleProvider
  id: WindowsTokenRoleProvider
  children:
  - System.Web.Security.WindowsTokenRoleProvider.#ctor
  - System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(System.String[],System.String[])
  - System.Web.Security.WindowsTokenRoleProvider.ApplicationName
  - System.Web.Security.WindowsTokenRoleProvider.CreateRole(System.String)
  - System.Web.Security.WindowsTokenRoleProvider.DeleteRole(System.String,System.Boolean)
  - System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(System.String,System.String)
  - System.Web.Security.WindowsTokenRoleProvider.GetAllRoles
  - System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(System.String)
  - System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(System.String)
  - System.Web.Security.WindowsTokenRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)
  - System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.String)
  - System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  - System.Web.Security.WindowsTokenRoleProvider.RoleExists(System.String)
  langs:
  - csharp
  name: WindowsTokenRoleProvider
  nameWithType: WindowsTokenRoleProvider
  fullName: System.Web.Security.WindowsTokenRoleProvider
  type: Class
  summary: "Henter informasjon om for en ASP.NET-programmet fra Windows-gruppemedlemskap."
  remarks: "Klassen WindowsTokenRoleProvider er en skrivebeskyttet-medlemskap i rollen leverandør som henter informasjon om for en Windows-bruker basert på Windows-sikkerhetsgrupper. Det er mest nyttige med ASP.NET-programmer som bruker Windows-godkjenningsmodus der anonym godkjenning deaktivert i IIS-godkjenningsinnstillingene. Du kan konfigurere ASP.NET-programmer for å gi eller avslå tilgang basert på en brukers medlemskap i en bestemt Windows-gruppen.       Du kan ikke bruke klassen WindowsTokenRoleProvider til å opprette, slette roller eller endre medlemskapet i en rolle som er basert på Windows-gruppemedlemskap. Denne funksjonaliteten administreres av Windows-operativsystemet. Klassen WindowsTokenRoleProvider støtter bare <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A>og <xref:System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser%2A>metoder for <xref:System.Web.Security.RoleProvider>abstrakt klasse.</xref:System.Web.Security.RoleProvider> </xref:System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser%2A> </xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A>"
  example:
  - "The following example shows the Web.config file for an ASP.NET application. It specifies that the application uses both Windows authentication and the WindowsTokenRoleProvider class to retrieve role information for Windows users. The  element specifies that only users in the BUILTIN\\Administrators group are allowed access to the application.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <authentication mode=\"Windows\" />  \n  \n    <authorization>  \n      <allow roles=\"BUILTIN\\Administrators\" />  \n        <deny users=\"*\" />  \n      </authorization>  \n  \n    <roleManager defaultProvider=\"WindowsProvider\"   \n      enabled=\"true\"  \n      cacheRolesInCookie=\"false\">  \n      <providers>  \n        <add  \n          name=\"WindowsProvider\"  \n          type=\"System.Web.Security.WindowsTokenRoleProvider\" />  \n      </providers>  \n    </roleManager>  \n  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: 'public class WindowsTokenRoleProvider : System.Web.Security.RoleProvider'
  inheritance:
  - System.Web.Security.RoleProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.#ctor
  id: '#ctor'
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: WindowsTokenRoleProvider()
  nameWithType: WindowsTokenRoleProvider.WindowsTokenRoleProvider()
  fullName: System.Web.Security.WindowsTokenRoleProvider.WindowsTokenRoleProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Oppretter en forekomst av den <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> klasse."
  remarks: "Konstruktøren WindowsTokenRoleProvider kalles av ASP.NET til å opprette en forekomst av den <xref:System.Web.Security.WindowsTokenRoleProvider>klasse som er angitt i konfigurasjonen for applikasjonen.</xref:System.Web.Security.WindowsTokenRoleProvider> Denne konstruktøren skal ikke brukes fra koden."
  syntax:
    content: public WindowsTokenRoleProvider ();
    parameters: []
  overload: System.Web.Security.WindowsTokenRoleProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(System.String[],System.String[])
  id: AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: AddUsersToRoles(String[],String[])
  nameWithType: WindowsTokenRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Denne metoden støttes ikke av leverandøren for Windows-token rollen."
  remarks: "Denne metoden støttes ikke av <xref:System.Web.Security.WindowsTokenRoleProvider>klasse og oppstår alltid <xref:System.Configuration.Provider.ProviderException>.</xref:System.Configuration.Provider.ProviderException> </xref:System.Web.Security.WindowsTokenRoleProvider>"
  syntax:
    content: public override void AddUsersToRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "En strengmatrise for brukernavn som skal legges til de angitte rollene."
    - id: roleNames
      type: System.String[]
      description: "En strengmatrise av role-navn for å legge til de angitte brukernavnene."
  overload: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "En Ustøttet metode ble kalt."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: WindowsTokenRoleProvider.ApplicationName
  fullName: System.Web.Security.WindowsTokenRoleProvider.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter eller angir navnet på programmet."
  remarks: "I motsetning til andre rolleleverandører som den <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Security.WindowsTokenRoleProvider>klassen ikke knytte informasjon om til et program.</xref:System.Web.Security.WindowsTokenRoleProvider> </xref:System.Web.Security.SqlRoleProvider> I stedet, rolle-informasjonen hentes fra Windows-grupper på den lokale datamaskinen. Flere programmer på samme server som bruker den <xref:System.Web.Security.WindowsTokenRoleProvider>klassen alltid deler samme role-informasjon.</xref:System.Web.Security.WindowsTokenRoleProvider> Selv om den `applicationName` kan konfigureres i filen Web.config for applikasjonen, ApplicationName egenskapen ikke brukes til å hente informasjon om."
  example:
  - "The following example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.WindowsTokenRoleProvider> instance and sets the ApplicationName property to `MyApplication`.  \n  \n```  \n<roleManager defaultProvider=\"WindowsProvider\"   \n  enabled=\"true\"  \n  cacheRolesInCookie=\"false\">  \n  <providers>  \n    <add  \n      name=\"WindowsProvider\"  \n      type=\"System.Web.Security.WindowsTokenRoleProvider\"   \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</roleManager>  \n```"
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: "Navnet på programmet."
  overload: System.Web.Security.WindowsTokenRoleProvider.ApplicationName*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Et forsøk på å angi egenskapen ApplicationName oppkalleren som ikke har <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> ASP.NET vert tillatelse."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Forsøkte å angi ApplicationName til en streng som er lengre enn 256 tegn."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.CreateRole(System.String)
  id: CreateRole(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: CreateRole(String)
  nameWithType: WindowsTokenRoleProvider.CreateRole(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.CreateRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Denne metoden støttes ikke av leverandøren for Windows-token rollen."
  remarks: "Denne metoden støttes ikke av <xref:System.Web.Security.WindowsTokenRoleProvider>klasse og oppstår alltid <xref:System.Configuration.Provider.ProviderException>.</xref:System.Configuration.Provider.ProviderException> </xref:System.Web.Security.WindowsTokenRoleProvider>"
  syntax:
    content: public override void CreateRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Navnet på rollen til å opprette."
  overload: System.Web.Security.WindowsTokenRoleProvider.CreateRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "En Ustøttet metode ble kalt."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.DeleteRole(System.String,System.Boolean)
  id: DeleteRole(System.String,System.Boolean)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: DeleteRole(String,Boolean)
  nameWithType: WindowsTokenRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.Security.WindowsTokenRoleProvider.DeleteRole(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Denne metoden støttes ikke av leverandøren for Windows-token rollen."
  syntax:
    content: public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);
    parameters:
    - id: roleName
      type: System.String
      description: "Navnet på rollen til å slette."
    - id: throwOnPopulatedRole
      type: System.Boolean
      description: "Hvis <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, vil bli utløst et unntak på et forsøk på å slette en rolle som inneholder ett eller flere medlemmer."
    return:
      type: System.Boolean
      description: "Ingen. Metoden støttes ikke av den <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> klassen og alltid kaster en <xref href=&quot;System.Configuration.Provider.ProviderException&quot;> </xref>."
  overload: System.Web.Security.WindowsTokenRoleProvider.DeleteRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "En Ustøttet metode ble kalt."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(System.String,System.String)
  id: FindUsersInRole(System.String,System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: FindUsersInRole(String,String)
  nameWithType: WindowsTokenRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Denne metoden støttes ikke av leverandøren for Windows-token rollen."
  syntax:
    content: public override string[] FindUsersInRole (string roleName, string usernameToMatch);
    parameters:
    - id: roleName
      type: System.String
      description: "Rollen til å søke i."
    - id: usernameToMatch
      type: System.String
      description: "Brukernavnet for å finne i rollen."
    return:
      type: System.String[]
      description: "Ingen. Metoden støttes ikke av den <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> klassen og alltid kaster en <xref href=&quot;System.Configuration.Provider.ProviderException&quot;> </xref>."
  overload: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "En Ustøttet metode ble kalt."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles
  id: GetAllRoles
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: GetAllRoles()
  nameWithType: WindowsTokenRoleProvider.GetAllRoles()
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Denne metoden støttes ikke av leverandøren for Windows-token rollen."
  syntax:
    content: public override string[] GetAllRoles ();
    parameters: []
    return:
      type: System.String[]
      description: "Ingen. Metoden støttes ikke av den <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> klassen og alltid kaster en <xref href=&quot;System.Configuration.Provider.ProviderException&quot;> </xref>."
  overload: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "En Ustøttet metode ble kalt."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(System.String)
  id: GetRolesForUser(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: GetRolesForUser(String)
  nameWithType: WindowsTokenRoleProvider.GetRolesForUser(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en liste med Windows-grupper som en bruker."
  remarks: "Denne metoden kalles av <xref:System.Web.Security.Roles>klassen for å hente fra Windows-operativsystemet en liste med Windows-grupper den angitte brukeren er.</xref:System.Web.Security.Roles> Metoden GetRolesForUser kan kalles bare for brukeren er logget på som er identifisert av servervariabelen LOGON_USER. Hvis verdien angitt i den `username` parameteren er navnet på brukeren er logget på en <xref:System.Configuration.Provider.ProviderException?displayProperty=fullName>forårsakes.</xref:System.Configuration.Provider.ProviderException?displayProperty=fullName>       For mer informasjon en ASP.NET og Windows-godkjenning, kan du se [ASP.NET godkjenning](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example uses the GetRolesForUser method to retrieve a list of roles for a specified user and binds the list of roles to a <xref:System.Web.UI.WebControls.GridView> control. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.WindowsTokenRoleProvider>.  \n  \n [!code-vb[System.Web.Security.WindowsTokenRoleProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.wi_1.aspx)]\n [!code-cs[System.Web.Security.WindowsTokenRoleProvider#1](~/add/codesnippet/csharp/m-system.web.security.wi_1.aspx)]"
  syntax:
    content: public override string[] GetRolesForUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "Brukeren til å returnere listen over Windows-grupper for i formatet DOMENE\\brukernavn."
    return:
      type: System.String[]
      description: "En strengmatrise som inneholder navnene på alle Windows-grupper som brukeren som er angitt."
  overload: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "I øyeblikket kjøres brukeren har ikke en godkjent <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> knyttet til &lt;xref:System.Web.UI.Page.User%2A?displayProperty=fullName&gt;. Ikke-HTTP-scenarioer i øyeblikket kjøres brukeren har ikke en godkjent <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> knyttet til &lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;.       - eller - <code> username </code> samsvarer ikke med den <xref:System.Security.Principal.WindowsIdentity.Name*>for gjeldende <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref>.</xref:System.Security.Principal.WindowsIdentity.Name*>       - eller - det oppstod en feil under henting av brukerens informasjon om Windows."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Klareringsnivået er mindre enn <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(System.String)
  id: GetUsersInRole(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: GetUsersInRole(String)
  nameWithType: WindowsTokenRoleProvider.GetUsersInRole(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Denne metoden støttes ikke av leverandøren for Windows-token rollen."
  syntax:
    content: public override string[] GetUsersInRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Navnet på rollen til å hente listen over brukere om."
    return:
      type: System.String[]
      description: "Ingen. Metoden støttes ikke av den <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> klassen og alltid kaster en <xref href=&quot;System.Configuration.Provider.ProviderException&quot;> </xref>."
  overload: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "En Ustøttet metode ble kalt."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: WindowsTokenRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.WindowsTokenRoleProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Initialiserer Windows-token-rolleleverandør med egenskapsverdier som er angitt i konfigurasjonsfilen for ASP.NET-programmet. Denne metoden skal ikke brukes direkte fra koden."
  remarks: "Initialiserer i initialiseringsmetoden den <xref:System.Web.Security.WindowsTokenRoleProvider>klasse egenskapsverdiene som er angitt i konfigurasjonsfilen for ASP.NET-programmet (Web.config) og skal ikke brukes direkte fra koden.</xref:System.Web.Security.WindowsTokenRoleProvider>"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på den <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> forekomsten ikke."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "En <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> konstruktør som inneholder navn og verdier i konfigurasjonen av alternativer for den <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> klasse."
  overload: System.Web.Security.WindowsTokenRoleProvider.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>config</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Den <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref> attributtet i konfigurasjonen er lengre enn 256 tegn.       - eller - programmets konfigurasjonsfil for denne <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> -forekomsten inneholder et ukjent attributt."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)
  id: IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: IsUserInRole(String,WindowsBuiltInRole)
  nameWithType: WindowsTokenRoleProvider.IsUserInRole(String,WindowsBuiltInRole)
  fullName: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(String,WindowsBuiltInRole)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en verdi som angir om den angitte brukeren er i den angitte, innebygde Windows-rollen."
  remarks: "Metoden IsUserInRole gjør det mulig å kontrollere om det er en bruker på en vanlig Windows rollene beskrevet av det <xref:System.Security.Principal.WindowsBuiltInRole>opplisting.</xref:System.Security.Principal.WindowsBuiltInRole> Denne metoden er nyttig for programmer som er lokalisert til flere språk. Denne overlasten for metoden IsUserInRole er ikke en del av den <xref:System.Web.Security.RoleProvider>basisklasse og kan bare åpnes av endring av den <xref:System.Web.Security.Roles.Provider%2A>for den <xref:System.Web.Security.Roles>klasse som den <xref:System.Web.Security.WindowsTokenRoleProvider>type.</xref:System.Web.Security.WindowsTokenRoleProvider> </xref:System.Web.Security.Roles> </xref:System.Web.Security.Roles.Provider%2A> </xref:System.Web.Security.RoleProvider>       Du kan kalle metoden IsUserInRole bare for brukeren er logget på som er identifisert av servervariabelen LOGON_USER. Hvis verdien angitt i den `username` parameteren er navnet på brukeren er logget på en <xref:System.Web.HttpException>forårsakes.</xref:System.Web.HttpException>       IsUserInRole-metoden kan bare kalles for den gjeldende pålogget brukeren identifisert av servervariabelen LOGON_USER. Gjeldende påloggede brukeren må være en Windows-godkjent bruker. Du finner mer informasjon om ASP.NET og Windows-godkjenning i [ASP.NET godkjenning](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example programmatically checks whether the currently logged-on user is in the Administrators role before allowing the user to view roles information for the application. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.WindowsTokenRoleProvider>.  \n  \n [!code-cs[System.Web.Security.WindowsTokenRoleProvider#2](~/add/codesnippet/csharp/f88a5130-a7a7-46a8-84f9-_1.aspx)]\n [!code-vb[System.Web.Security.WindowsTokenRoleProvider#2](~/add/codesnippet/visualbasic/f88a5130-a7a7-46a8-84f9-_1.aspx)]"
  syntax:
    content: public bool IsUserInRole (string username, System.Security.Principal.WindowsBuiltInRole role);
    parameters:
    - id: username
      type: System.String
      description: "Brukernavnet for å søke etter i formatet DOMENE\\brukernavn."
    - id: role
      type: System.Security.Principal.WindowsBuiltInRole
      description: "Windows-rolle til å søke i."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis brukeren som er angitt i den angitte Windows-rollen; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "I øyeblikket kjøres brukeren har ikke en godkjent <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> knyttet til &lt;xref:System.Web.UI.Page.User%2A?displayProperty=fullName&gt;. Ikke-HTTP-scenarioer i øyeblikket kjøres brukeren har ikke en godkjent <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> knyttet til &lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;.       - eller - <code> username </code> samsvarer ikke med den <xref:System.Security.Principal.WindowsIdentity.Name*>for gjeldende <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref>.</xref:System.Security.Principal.WindowsIdentity.Name*>"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.String)
  id: IsUserInRole(System.String,System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: IsUserInRole(String,String)
  nameWithType: WindowsTokenRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Henter en verdi som angir om den angitte brukeren er i den angitte Windows-gruppen."
  remarks: "Metoden IsUserInRole kalles av den <xref:System.Web.Security.Roles>klassen og <xref:System.Security.Principal.IPrincipal.IsInRole%2A>-metoden for den <xref:System.Web.UI.Page.User%2A>til å fastslå om en bruker er i en Windows-gruppen.</xref:System.Web.UI.Page.User%2A> </xref:System.Security.Principal.IPrincipal.IsInRole%2A> </xref:System.Web.Security.Roles> Du kan kalle metoden IsUserInRole bare for brukeren er logget på som er identifisert av servervariabelen LOGON_USER. Den gjeldende påloggede brukeren må være en Windows-godkjent bruker. Du finner mer informasjon om ASP.NET og Windows-godkjenning i [ASP.NET godkjenning](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example programmatically checks whether the currently logged-on user is in the Administrators role before allowing the user to view roles information for the application. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.WindowsTokenRoleProvider>.  \n  \n [!code-vb[System.Web.Security.WindowsTokenRoleProvider#1](~/add/codesnippet/visualbasic/e3ad81d7-d695-40b8-8e62-_1.aspx)]\n [!code-cs[System.Web.Security.WindowsTokenRoleProvider#1](~/add/codesnippet/csharp/e3ad81d7-d695-40b8-8e62-_1.aspx)]"
  syntax:
    content: public override bool IsUserInRole (string username, string roleName);
    parameters:
    - id: username
      type: System.String
      description: "Brukernavnet for å søke etter i formatet DOMENE\\brukernavn."
    - id: roleName
      type: System.String
      description: "Windows-gruppen til å søke i formatet DOMAIN\\rolename."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis det angitte brukernavnet er i den angitte Windows-gruppen; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>roleName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "I øyeblikket kjøres brukeren har ikke en godkjent <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> knyttet til &lt;xref:System.Web.UI.Page.User%2A?displayProperty=fullName&gt;. Ikke-HTTP-scenarioer i øyeblikket kjøres brukeren har ikke en godkjent <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> knyttet til &lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;.       - eller - <code> username </code> samsvarer ikke med den <xref:System.Security.Principal.WindowsIdentity.Name*>for gjeldende <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref>.</xref:System.Security.Principal.WindowsIdentity.Name*>       - eller - det oppstod en feil under henting av brukerens informasjon om Windows."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  id: RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: WindowsTokenRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Denne metoden støttes ikke av leverandøren for Windows-token rollen."
  remarks: "Denne metoden støttes ikke av <xref:System.Web.Security.WindowsTokenRoleProvider>klasse og oppstår alltid <xref:System.Configuration.Provider.ProviderException>.</xref:System.Configuration.Provider.ProviderException> </xref:System.Web.Security.WindowsTokenRoleProvider>"
  syntax:
    content: public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "En strengmatrise for brukernavn som skal legges til de angitte rollene."
    - id: roleNames
      type: System.String[]
      description: "En strengmatrise av role-navn for å legge til de angitte brukernavnene."
  overload: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "En Ustøttet metode ble kalt."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.RoleExists(System.String)
  id: RoleExists(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: RoleExists(String)
  nameWithType: WindowsTokenRoleProvider.RoleExists(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.RoleExists(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Denne metoden støttes ikke av leverandøren for Windows-token rollen."
  syntax:
    content: public override bool RoleExists (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Navnet på rollen til å søke etter i datakilden."
    return:
      type: System.Boolean
      description: "Ingen. Metoden støttes ikke av den <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> klassen og alltid kaster en <xref href=&quot;System.Configuration.Provider.ProviderException&quot;> </xref>."
  overload: System.Web.Security.WindowsTokenRoleProvider.RoleExists*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "En Ustøttet metode ble kalt."
  platform:
  - net462
references:
- uid: System.Web.Security.RoleProvider
  isExternal: false
  name: System.Web.Security.RoleProvider
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Security.WindowsTokenRoleProvider.#ctor
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: WindowsTokenRoleProvider()
  nameWithType: WindowsTokenRoleProvider.WindowsTokenRoleProvider()
  fullName: System.Web.Security.WindowsTokenRoleProvider.WindowsTokenRoleProvider()
- uid: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: AddUsersToRoles(String[],String[])
  nameWithType: WindowsTokenRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(String[],String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Security.WindowsTokenRoleProvider.ApplicationName
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: WindowsTokenRoleProvider.ApplicationName
  fullName: System.Web.Security.WindowsTokenRoleProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.WindowsTokenRoleProvider.CreateRole(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: CreateRole(String)
  nameWithType: WindowsTokenRoleProvider.CreateRole(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.CreateRole(String)
- uid: System.Web.Security.WindowsTokenRoleProvider.DeleteRole(System.String,System.Boolean)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: DeleteRole(String,Boolean)
  nameWithType: WindowsTokenRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.Security.WindowsTokenRoleProvider.DeleteRole(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(System.String,System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: FindUsersInRole(String,String)
  nameWithType: WindowsTokenRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(String,String)
- uid: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetAllRoles()
  nameWithType: WindowsTokenRoleProvider.GetAllRoles()
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles()
- uid: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetRolesForUser(String)
  nameWithType: WindowsTokenRoleProvider.GetRolesForUser(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(String)
- uid: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetUsersInRole(String)
  nameWithType: WindowsTokenRoleProvider.GetUsersInRole(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(String)
- uid: System.Web.Security.WindowsTokenRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: WindowsTokenRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.WindowsTokenRoleProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: IsUserInRole(String,WindowsBuiltInRole)
  nameWithType: WindowsTokenRoleProvider.IsUserInRole(String,WindowsBuiltInRole)
  fullName: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(String,WindowsBuiltInRole)
- uid: System.Security.Principal.WindowsBuiltInRole
  parent: System.Security.Principal
  isExternal: false
  name: WindowsBuiltInRole
  nameWithType: WindowsBuiltInRole
  fullName: System.Security.Principal.WindowsBuiltInRole
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: IsUserInRole(String,String)
  nameWithType: WindowsTokenRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(String,String)
- uid: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: WindowsTokenRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(String[],String[])
- uid: System.Web.Security.WindowsTokenRoleProvider.RoleExists(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: RoleExists(String)
  nameWithType: WindowsTokenRoleProvider.RoleExists(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.RoleExists(String)
- uid: System.Web.Security.WindowsTokenRoleProvider.#ctor*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: WindowsTokenRoleProvider
  nameWithType: WindowsTokenRoleProvider.WindowsTokenRoleProvider
- uid: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: AddUsersToRoles
  nameWithType: WindowsTokenRoleProvider.AddUsersToRoles
- uid: System.Web.Security.WindowsTokenRoleProvider.ApplicationName*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: WindowsTokenRoleProvider.ApplicationName
- uid: System.Web.Security.WindowsTokenRoleProvider.CreateRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: CreateRole
  nameWithType: WindowsTokenRoleProvider.CreateRole
- uid: System.Web.Security.WindowsTokenRoleProvider.DeleteRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: DeleteRole
  nameWithType: WindowsTokenRoleProvider.DeleteRole
- uid: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: FindUsersInRole
  nameWithType: WindowsTokenRoleProvider.FindUsersInRole
- uid: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetAllRoles
  nameWithType: WindowsTokenRoleProvider.GetAllRoles
- uid: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetRolesForUser
  nameWithType: WindowsTokenRoleProvider.GetRolesForUser
- uid: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetUsersInRole
  nameWithType: WindowsTokenRoleProvider.GetUsersInRole
- uid: System.Web.Security.WindowsTokenRoleProvider.Initialize*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: Initialize
  nameWithType: WindowsTokenRoleProvider.Initialize
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: IsUserInRole
  nameWithType: WindowsTokenRoleProvider.IsUserInRole
- uid: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles
  nameWithType: WindowsTokenRoleProvider.RemoveUsersFromRoles
- uid: System.Web.Security.WindowsTokenRoleProvider.RoleExists*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: RoleExists
  nameWithType: WindowsTokenRoleProvider.RoleExists
