### YamlMime:ManagedReference
items:
- uid: System.MarshalByRefObject
  id: MarshalByRefObject
  children:
  - System.MarshalByRefObject.#ctor
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  langs:
  - csharp
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
  type: Class
  summary: "Aktiverer tilgang til objekter i programmet domene grensene i programmer som støtter ekstern kommunikasjon."
  remarks: "En programdomenet er en partisjon i en prosess for operativsystemet der ett eller flere programmer ligge. Objekter i samme programdomenet kommunisere direkte. Objekter i forskjellige programdomener kommunisere av transport kopier av objekter på tvers av programmet domenegrenser eller via en proxy til exchange meldinger.       MarshalByRefObject er basisklasse for objekter som kommuniserer på tvers av programmet domenegrenser ved å utveksle meldinger ved hjelp av en proxy. Objekter som ikke arver fra MarshalByRefObject er implisitt formidling av verdien. Når et eksternt program refererer til en formidling av verdiobjektet, sendes en kopi av objektet i applikasjonen domene grensene.       MarshalByRefObject objekter er tilgjengelig direkte fra grensene for lokale programdomenet. Første gang en applikasjon i en ekstern programdomenet har tilgang til en MarshalByRefObject er proxy sendt til det eksterne programmet. Etterfølgende kall på proxyen føres tilbake til objektet som ligger i det lokale programdomenet.       Typer må arve fra MarshalByRefObject når den brukes på tvers av programmet domenegrenser, og tilstanden for objektet må ikke kopieres fordi medlemmene av objektet ikke kan brukes utenfor programdomenet der de ble opprettet.       Når du utledet et objekt av MarshalByRefObject for bruk på tvers av programmet domenegrenser, du kan ikke overstyre alle medlemmene, og heller ikke må du kaller metodene direkte. Kjøretiden gjenkjenner at klasser som er avledet fra MarshalByRefObject skal formidles på tvers av appen domenegrenser."
  example:
  - "This section contains two code examples. The first code example shows how to create an instance of a class in another application domain. The second code example shows a simple class that can be used for remoting.  \n  \n **Example 1**  \n  \n The following code example shows the simplest way to execute code in another application domain. The example defines a class named `Worker` that inherits MarshalByRefObject, with a method that displays the name of the application domain in which it is executing. The example creates instances of `Worker` in the default application domain and in a new application domain.  \n  \n> [!NOTE]\n>  The assembly that contains `Worker` must be loaded into both application domains, but it could load other assemblies that would exist only in the new application domain.  \n  \n [!code-cpp[CreateInstanceAndUnwrap2#1](~/add/codesnippet/cpp/t-system.marshalbyrefobj_1.cpp)]\n [!code-cs[CreateInstanceAndUnwrap2#1](~/add/codesnippet/csharp/t-system.marshalbyrefobj_1.cs)]\n [!code-vb[CreateInstanceAndUnwrap2#1](~/add/codesnippet/visualbasic/t-system.marshalbyrefobj_1.vb)]  \n  \n **Example 2**  \n  \n The following example demonstrates a class derived from MarshalByRefObject that is used later in remoting.  \n  \n [!code-cpp[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/cpp/t-system.marshalbyrefobj_2.cpp)]\n [!code-cs[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/csharp/t-system.marshalbyrefobj_2.cs)]\n [!code-vb[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/visualbasic/t-system.marshalbyrefobj_2.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class MarshalByRefObject
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.MarshalByRefObject.#ctor
  id: '#ctor'
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: MarshalByRefObject()
  nameWithType: MarshalByRefObject.MarshalByRefObject()
  fullName: System.MarshalByRefObject.MarshalByRefObject()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.MarshalByRefObject&quot;> </xref> klasse."
  syntax:
    content: protected MarshalByRefObject ();
    parameters: []
  overload: System.MarshalByRefObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  id: CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: System.MarshalByRefObject.CreateObjRef(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Oppretter et objekt som inneholder alle aktuelle informasjonen som kreves for å generere en proxy som brukes til å kommunisere med et eksternt objekt."
  remarks: "TheCreateObjRef-metoden med eksterne objektmetoder for oppretting, for eksempel <xref:System.AppDomain.CreateInstance%2A?displayProperty=fullName>og <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=fullName>.</xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=fullName> </xref:System.AppDomain.CreateInstance%2A?displayProperty=fullName> I de fleste tilfeller er det ikke nødvendig å overstyre denne metoden."
  syntax:
    content: public virtual System.Runtime.Remoting.ObjRef CreateObjRef (Type requestedType);
    parameters:
    - id: requestedType
      type: System.Type
      description: "Den <xref:System.Type>for objektet som den nye <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> skal referere.</xref:System.Type>"
    return:
      type: System.Runtime.Remoting.ObjRef
      description: "Informasjonen som kreves for å generere en proxy."
  overload: System.MarshalByRefObject.CreateObjRef*
  exceptions:
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: "Denne forekomsten er ikke et gyldig ekstern kommunikasjon-objekt."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Umiddelbar oppkalleren har ikke tillatelse for infrastruktur."
  platform:
  - net462
- uid: System.MarshalByRefObject.GetLifetimeService
  id: GetLifetimeService
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter gjeldende levetid-tjenesteobjektet som styrer levetid-policyen for denne forekomsten."
  remarks: "For mer informasjon om levetid tjenester, kan du se <xref:System.Runtime.Remoting.Lifetime.LifetimeServices>klasse.</xref:System.Runtime.Remoting.Lifetime.LifetimeServices>"
  syntax:
    content: public object GetLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Et objekt av typen <xref href=&quot;System.Runtime.Remoting.Lifetime.ILease&quot;> </xref> brukes til å kontrollere levetid-policyen for denne forekomsten."
  overload: System.MarshalByRefObject.GetLifetimeService*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Umiddelbar oppkalleren har ikke tillatelse for infrastruktur."
  platform:
  - net462
- uid: System.MarshalByRefObject.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter en levetid Webtjenesteobjektet for å styre levetid-policyen for denne forekomsten."
  remarks: "For mer informasjon om levetid tjenester, kan du se <xref:System.Runtime.Remoting.Lifetime.LifetimeServices>klasse.</xref:System.Runtime.Remoting.Lifetime.LifetimeServices>"
  example:
  - "The following code example demonstrates creating a lease.  \n  \n [!code-cpp[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/add/codesnippet/cpp/m-system.marshalbyrefobj_1.cpp)]\n [!code-vb[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/add/codesnippet/visualbasic/m-system.marshalbyrefobj_1.vb)]\n [!code-cs[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/add/codesnippet/csharp/m-system.marshalbyrefobj_1.cs)]"
  syntax:
    content: public virtual object InitializeLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Et objekt av typen <xref href=&quot;System.Runtime.Remoting.Lifetime.ILease&quot;> </xref> brukes til å kontrollere levetid-policyen for denne forekomsten. Dette er gjeldende levetiden Webtjenesteobjektet for denne forekomsten hvis den finnes. Hvis ikke, en ny levetid-tjenesteobjektet initialisert med verdien for den &lt;xref:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime%2A?displayProperty=fullName&gt; egenskapen."
  overload: System.MarshalByRefObject.InitializeLifetimeService*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Umiddelbar oppkalleren har ikke tillatelse for infrastruktur."
  platform:
  - net462
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  id: MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Oppretter en lite kopi av gjeldende <xref href=&quot;System.MarshalByRefObject&quot;> </xref> objektet."
  remarks: "Metoden MemberwiseClone oppretter en lite kopi ved å opprette en ny <xref:System.MarshalByRefObject>objekt, og kopiering av ikke-statisk felt for gjeldende <xref:System.MarshalByRefObject>objektet til det nye objektet.</xref:System.MarshalByRefObject> </xref:System.MarshalByRefObject> Hvis et felt er en verditype, utføres en bit for bit kopi av feltet. Hvis et felt er en referansetype, referansen overført, men det refererte objektet er ikke; Derfor refererer det opprinnelige objektet og tilhørende klone til det samme objektet.       Eksempel: en <xref:System.MarshalByRefObject>objektet kalles X som refererer til objekter A og B. objektet B i sin tur refererer til objektet C. Oppretter en lite kopi av X nytt objekt X2 som refererer også objekter A og B. I motsetning en dyp kopi av X oppretter et nytt objekt X2 som refererer til de nye objektene A2 og B2 som kopier av A og B. B2 i sin tur refererer til det nye objektet C2, som er en kopi C. Bruk en klasse som implementerer den <xref:System.ICloneable>grensesnittet til å utføre en dyp eller lite kopi av et objekt.</xref:System.ICloneable> </xref:System.MarshalByRefObject>       Identiteten til en <xref:System.MarshalByRefObject>objekt er angitt som ekstern server-objektet som er målet for en ekstern klient-kall.</xref:System.MarshalByRefObject> Som standard memberwise Klon av en <xref:System.MarshalByRefObject>objektet har samme identitet som det opprinnelige objektet, som vanligvis ikke er riktig virkemåten for kloning for serverside objekter som er formidlet på tvers av en ekstern kommunikasjon kantlinje til klientsiden.</xref:System.MarshalByRefObject> Angi `false`, som passer vanligvis, slette identiteten til klone og føre til en ny ID som skal tilordnes når klone formidlet på tvers av en ekstern kommunikasjon grense eller `true` kan forårsake klone å beholde identiteten til opprinnelige <xref:System.MarshalByRefObject>objektet.</xref:System.MarshalByRefObject> Metoden MemberwiseClone skal brukes av utviklere implementering av ekstern server-objekter."
  syntax:
    content: protected MarshalByRefObject MemberwiseClone (bool cloneIdentity);
    parameters:
    - id: cloneIdentity
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>slette gjeldende <xref href=&quot;System.MarshalByRefObject&quot;> </xref> objektets identitet, noe som fører til at objektet som skal tilordnes en ny ID når den er formidlet på tvers av en ekstern kommunikasjon grense. Verdien <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> er vanligvis riktig. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>kopiere gjeldende <xref href=&quot;System.MarshalByRefObject&quot;> </xref> objekt-IDen til klone, noe som fører til ekstern klientkall til rutet til ekstern server-objekt."
    return:
      type: System.MarshalByRefObject
      description: "En lite kopi av gjeldende <xref href=&quot;System.MarshalByRefObject&quot;> </xref> objektet."
  overload: System.MarshalByRefObject.MemberwiseClone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Remoting.RemotingException
  parent: System.Runtime.Remoting
  isExternal: false
  name: RemotingException
  nameWithType: RemotingException
  fullName: System.Runtime.Remoting.RemotingException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.MarshalByRefObject.#ctor
  parent: System.MarshalByRefObject
  isExternal: false
  name: MarshalByRefObject()
  nameWithType: MarshalByRefObject.MarshalByRefObject()
  fullName: System.MarshalByRefObject.MarshalByRefObject()
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  isExternal: false
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: System.MarshalByRefObject.CreateObjRef(Type)
- uid: System.Runtime.Remoting.ObjRef
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjRef
  nameWithType: ObjRef
  fullName: System.Runtime.Remoting.ObjRef
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
- uid: System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: false
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(Boolean)
- uid: System.MarshalByRefObject
  parent: System
  isExternal: false
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.MarshalByRefObject.#ctor*
  parent: System.MarshalByRefObject
  isExternal: false
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject.MarshalByRefObject
- uid: System.MarshalByRefObject.CreateObjRef*
  parent: System.MarshalByRefObject
  isExternal: false
  name: CreateObjRef
  nameWithType: MarshalByRefObject.CreateObjRef
- uid: System.MarshalByRefObject.GetLifetimeService*
  parent: System.MarshalByRefObject
  isExternal: false
  name: GetLifetimeService
  nameWithType: MarshalByRefObject.GetLifetimeService
- uid: System.MarshalByRefObject.InitializeLifetimeService*
  parent: System.MarshalByRefObject
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: MarshalByRefObject.InitializeLifetimeService
- uid: System.MarshalByRefObject.MemberwiseClone*
  parent: System.MarshalByRefObject
  isExternal: false
  name: MemberwiseClone
  nameWithType: MarshalByRefObject.MemberwiseClone
