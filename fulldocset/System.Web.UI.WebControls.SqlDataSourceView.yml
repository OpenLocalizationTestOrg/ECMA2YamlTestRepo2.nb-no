### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.SqlDataSourceView
  id: SqlDataSourceView
  children:
  - System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)
  - System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  - System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  - System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  - System.Web.UI.WebControls.SqlDataSourceView.CanPage
  - System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  - System.Web.UI.WebControls.SqlDataSourceView.CanSort
  - System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  - System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  - System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  - System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Deleted
  - System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  - System.Web.UI.WebControls.SqlDataSourceView.Deleting
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  - System.Web.UI.WebControls.SqlDataSourceView.Filtering
  - System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  - System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  - System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Inserted
  - System.Web.UI.WebControls.SqlDataSourceView.Inserting
  - System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  - System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  - System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  - System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  - System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  - System.Web.UI.WebControls.SqlDataSourceView.SaveViewState
  - System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  - System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Selected
  - System.Web.UI.WebControls.SqlDataSourceView.Selecting
  - System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  - System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.SqlDataSourceView.TrackViewState
  - System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  - System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Updated
  - System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  - System.Web.UI.WebControls.SqlDataSourceView.Updating
  langs:
  - csharp
  name: SqlDataSourceView
  nameWithType: SqlDataSourceView
  fullName: System.Web.UI.WebControls.SqlDataSourceView
  type: Class
  summary: "Støtter den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontrollere og gir et grensesnitt for databundet kontroller til å utføre SQL dataoperasjoner mot relasjonsdatabaser."
  remarks: "Klassen SqlDataSourceView skal primært brukes av databundet kontroller, og ikke som et programmerbare objekt i koden.       Kontroller for ASP.NET-kilden inneholder én eller flere lister med data, representert av visningen dataobjekter for datakilden. Klassen SqlDataSourceView utvider den <xref:System.Web.UI.DataSourceView>klasse, definerer mulighetene for den <xref:System.Web.UI.WebControls.SqlDataSource>kontrollen som den er knyttet til og implementerer grunnleggende data funksjonaliteten for kontrollen som datakilde.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.DataSourceView> SqlDataSourceView klassen implementerer data funksjonaliteten for den <xref:System.Web.UI.WebControls.SqlDataSource>kontrollere, inkludert de <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>, og <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>operasjoner, sortering, filtrering og administrere innstillinger beholdes i visningen tilstand.</xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.SqlDataSource>       Selv om SqlDataSourceView-objektet ikke er direkte eksponert til siden utviklere av den <xref:System.Web.UI.WebControls.SqlDataSource>kontroll, mange av egenskapene er.</xref:System.Web.UI.WebControls.SqlDataSource> Vanligste operasjonen som utfører en datakildevisning er henting av data fra den underliggende databasen ved hjelp av den <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>metoden henter en <xref:System.Collections.IEnumerable>samling dataelementer.</xref:System.Collections.IEnumerable> </xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> SqlDataSourceView klassen implementerer henting av data fra relasjonsdatabaser med SQL-spørringer. SQL-spørringer kan parametriseres for større fleksibilitet og sikkerhet. Følgende data henting metoder, egenskaper og hendelser implementert av SqlDataSourceView og eksponert direkte ved den <xref:System.Web.UI.WebControls.SqlDataSource>kontrollen siden utviklere og andre brukere: - <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>egenskapen - den <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>egenskapen - den <xref:System.Web.UI.WebControls.SqlDataSource.Selecting>hendelse – den <xref:System.Web.UI.WebControls.SqlDataSource.Selected>hendelsen for SqlDataSourceView objektet støtter oppdaterer dataene i en relasjonsdatabase ved hjelp av SQL-kommandoer.</xref:System.Web.UI.WebControls.SqlDataSource.Selected> </xref:System.Web.UI.WebControls.SqlDataSource.Selecting> </xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource> SQL-kommandoer kan parametriseres for større fleksibilitet og sikkerhet. Databundet kontroller, for eksempel den <xref:System.Web.UI.WebControls.GridView>og <xref:System.Web.UI.WebControls.DetailsView>, kan konfigureres for å utføre oppdateringer automatisk med SqlDataSourceView, mens andre kontroller kan.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Følgende oppdateringsmetoder, egenskaper og hendelser implementert av SqlDataSourceView og eksponert direkte ved den <xref:System.Web.UI.WebControls.SqlDataSource>kontrollen siden utviklere og andre brukere: - <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>egenskapen - den <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>egenskapen - den <xref:System.Web.UI.WebControls.SqlDataSource.Updating>hendelse – den <xref:System.Web.UI.WebControls.SqlDataSource.Updated>hendelser i SqlDataSourceView støtter innsetting av nye rader med data i en relasjonsdatabase.</xref:System.Web.UI.WebControls.SqlDataSource.Updated> </xref:System.Web.UI.WebControls.SqlDataSource.Updating> </xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource> SQL-kommandoer som er angitt i den <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>egenskapen kan parametriseres for større fleksibilitet og sikkerhet.</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> Databundet kontroller, for eksempel den <xref:System.Web.UI.WebControls.GridView>og <xref:System.Web.UI.WebControls.DetailsView>, kan konfigureres for å utføre innsettinger automatisk med SqlDataSourceView, mens andre kontroller kan.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Følgende Sett inn metoder, egenskaper og hendelser implementeres av SqlDataSourceView og eksponert direkte ved den <xref:System.Web.UI.WebControls.SqlDataSource>kontrollen siden utviklere og andre brukere: - <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>egenskapen - den <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>egenskapen - den <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>hendelse – den <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>hendelsen for SqlDataSourceView objektet også støtter sletting av data fra en relasjonsdatabase.</xref:System.Web.UI.WebControls.SqlDataSource.Inserted> </xref:System.Web.UI.WebControls.SqlDataSource.Inserting> </xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource> Som med andre kommandoer SQL kommandoer som er angitt i den <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>egenskapen kan parametriseres for større fleksibilitet og sikkerhet.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> Databundet kontroller, for eksempel den <xref:System.Web.UI.WebControls.GridView>og <xref:System.Web.UI.WebControls.DetailsView>, kan konfigureres for å utføre sletter automatisk med SqlDataSourceView, mens andre kontroller kan.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Følgende Slett metoder, egenskaper og hendelser implementeres av SqlDataSourceView og eksponert direkte ved den <xref:System.Web.UI.WebControls.SqlDataSource>kontrollen siden utviklere og andre brukere: - <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>egenskapen - den <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>egenskapen - den <xref:System.Web.UI.WebControls.SqlDataSource.Deleting>hendelse – den <xref:System.Web.UI.WebControls.SqlDataSource.Deleted>hendelsen datahenting er mer kraftig når setningsdelen som brukes til å filtrere dataene under henting av data er dynamiske.</xref:System.Web.UI.WebControls.SqlDataSource.Deleted> </xref:System.Web.UI.WebControls.SqlDataSource.Deleting> </xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource> Med andre ord, en SQL-spørring med statiske der setningsdelen ikke er som fleksibel og kraftige som en SQL-spørring der verdiene i WHERE-setningsdelen er bundet til verdier som kan endres, for eksempel verdiene som vises i på en side for Web-skjemaer. I stedet for å bygge en SQL-spørring og angivelse av <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>egenskapen for hver lasting av side, kan du bruke den <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>og <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>egenskapene som skal bruke dynamisk filtrering til datahenting.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> Disse egenskapene er implementert av SqlDataSourceView og eksponert direkte i den <xref:System.Web.UI.WebControls.SqlDataSource>kontrollen databundet kontroller og andre brukere.</xref:System.Web.UI.WebControls.SqlDataSource>       Du kan også sortere dataene som du hente med den <xref:System.Web.UI.WebControls.SqlDataSource>kontrollen ved å legge til en ORDER BY-setningsdel som fører til at databasen og utføre sortering for deg når du henter data eller ved sortering dataene i minnet når det er hentet.</xref:System.Web.UI.WebControls.SqlDataSource> Du kan angi en sortering uttrykk til SqlDataSourceView ved å angi den <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>for den <xref:System.Web.UI.DataSourceSelectArguments>objekt som er sendt til den <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>metoden.</xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> </xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> Syntaksen for den <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>egenskapen er identisk med syntaksen for en <xref:System.Data.DataView.Sort%2A?displayProperty=fullName>egenskapen.</xref:System.Data.DataView.Sort%2A?displayProperty=fullName> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> Hvis du bruker en lagret prosedyre til å hente data, kan du også bruke den <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>til å angi en parameter som brukes til sortering av resultatene av en lagret prosedyrekallet.</xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>       Når flere brukere kan endre databasen samtidig, er det muligheten for samtidighet konflikt. Den <xref:System.Web.UI.WebControls.SqlDataSource>kontrollen har kontroller samtidighet via den <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=fullName>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=fullName> </xref:System.Web.UI.WebControls.SqlDataSource> Funksjonaliteten er implementert i den <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=fullName>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=fullName>       SqlDataSourceView implementerer som mange andre Web-serverkontroller den <xref:System.Web.UI.IStateManager>grensesnittet og bruker vise status for å spore tilstanden på tvers av siden forespørsler.</xref:System.Web.UI.IStateManager> Implementeringer av den <xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A>og egenskapen og <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>, og <xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A>finnes metoder for å aktivere sporing av Vis status for kontrollen.</xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A> Hvis du vil ha mer informasjon, se [ASP.NET oversikt over tilstand](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public class SqlDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  - System.Web.UI.DataSourceView
  implements:
  - System.Web.UI.IStateManager
  inheritedMembers:
  - System.Web.UI.DataSourceView.CanExecute(System.String)
  - System.Web.UI.DataSourceView.DataSourceViewChanged
  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Events
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Name
  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)
  id: '#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)'
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SqlDataSourceView(SqlDataSource,String,HttpContext)
  nameWithType: SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> klassen innstillingen angitt <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontrollen som eieren av den gjeldende visningen."
  remarks: "Konstruktøren SqlDataSourceView kalles av den <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A>metode til å returnere en ny forekomst av en datakildevisning med angitt `name` parameteren.</xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> Den <xref:System.Web.UI.WebControls.SqlDataSource>kontrollen er knyttet til bare én <xref:System.Web.UI.WebControls.SqlDataSourceView>objektet når som helst og alltid navngir visningen `Table`, selv om denne naming begrensningen er pålagt av <xref:System.Web.UI.WebControls.SqlDataSource>kontrollen, ikke operatoren <xref:System.Web.UI.WebControls.SqlDataSourceView>.</xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSource> Du kan overstyre den <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A>metoden støtter visninger med en annen navnekonvensjonen.</xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A>       Den <xref:System.Web.HttpContext>objekt som er sendt av den `context` parameteren brukes av datakildevisningen tilgang parameteren objekter, slik som den <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>og <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A>Egenskaper.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> </xref:System.Web.HttpContext>"
  syntax:
    content: public SqlDataSourceView (System.Web.UI.WebControls.SqlDataSource owner, string name, System.Web.HttpContext context);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.SqlDataSource
      description: "Datakildekontrollen som den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> er knyttet til."
    - id: name
      type: System.String
      description: "Et unikt navn for datakildevisningen innenfor området kontrollens datakilden som eier den."
    - id: context
      type: System.Web.HttpContext
      description: "Gjeldende <xref href=&quot;System.Web.HttpContext&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  id: CancelSelectOnNullParameter
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSourceView.CancelSelectOnNullParameter
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir en verdi som angir om en operasjon for henting av data er avbrutt når en parameter som er i den <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*>samlingen evalueres til <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*>"
  remarks: "Verdien for den <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A>egenskapen lagres i visningsstatusen.</xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A>"
  syntax:
    content: public bool CancelSelectOnNullParameter { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, hvis en operasjon for henting av data blir avbrutt når en parameter som finnes i den <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*>samlingen ble evaluert til <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*> Standard <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  id: CanDelete
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanDelete
  nameWithType: SqlDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter en verdi som angir om den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objektet som er knyttet til gjeldende <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontrollen støtter sletteoperasjonen."
  remarks: "Returnerer CanDelete `true` hvis den <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>-egenskap er satt.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> En sletting kan fortsatt mislykkes hvis alle dataegenskapene ikke er angitt eller er ikke riktig angitt."
  syntax:
    content: public override bool CanDelete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, hvis operasjonen støttes. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  id: CanInsert
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanInsert
  nameWithType: SqlDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter en verdi som angir om den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objektet som er knyttet til gjeldende <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontrollen støtter insert-operasjonen."
  remarks: "Returnerer CanInsert `true` hvis den <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>-egenskap er satt.</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> En insert-operasjon kan fortsatt mislykkes hvis alle dataegenskapene ikke er angitt eller er ikke riktig angitt."
  syntax:
    content: public override bool CanInsert { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, hvis operasjonen støttes. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanPage
  id: CanPage
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanPage
  nameWithType: SqlDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter en verdi som angir om den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objektet som er knyttet til gjeldende <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontrollen støtter Bla for de hentede dataene."
  remarks: "Den <xref:System.Web.UI.WebControls.SqlDataSourceView>objektet støtter ikke bla.</xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: public override bool CanPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>i alle tilfeller."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  id: CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanRetrieveTotalRowCount
  nameWithType: SqlDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter en verdi som angir om den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objektet som er knyttet til gjeldende <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontrollen støtter henting av antall datarader, i tillegg til settet med data."
  remarks: "Den <xref:System.Web.UI.WebControls.SqlDataSourceView>objektet støtter ikke hente radantall.</xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: public override bool CanRetrieveTotalRowCount { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>i alle tilfeller."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanSort
  id: CanSort
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanSort
  nameWithType: SqlDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanSort
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter en verdi som angir om den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objektet som er knyttet til gjeldende <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontrollen støtter en sorterte visning på de hentede dataene."
  remarks: "Returnerer CanSort `true`, hvis gjeldende <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>er satt til den <xref:System.Web.UI.WebControls.SqlDataSourceMode>verdi og <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>-egenskap er satt.</xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>"
  syntax:
    content: public override bool CanSort { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, hvis sortering støttes. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanSort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  id: CanUpdate
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanUpdate
  nameWithType: SqlDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter en verdi som angir om den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objektet som er knyttet til gjeldende <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontrollen støtter oppdateringen."
  remarks: "Returnerer CanUpdate `true` hvis den <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>-egenskap er satt.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> En sletting kan fortsatt mislykkes hvis alle dataegenskapene ikke er angitt eller er ikke riktig angitt."
  syntax:
    content: public override bool CanUpdate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, hvis operasjonen støttes. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  id: ConflictDetection
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ConflictDetection
  nameWithType: SqlDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir verdi som angir hvordan <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontrollen utfører oppdateringer og sletter når dataene i en rad i den underliggende databasen endringer i tidsrommet for operasjonen."
  remarks: "Egenskapen ConflictDetection bestemmer om parametere for gammel og ny verdier brukes på den `Update` metoden. For eksempel hvis kommandoen som er angitt av den <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>returnerer en <xref:System.Data.DataSet>objekt med kolonnene `Name` og `Number`, og ConflictDetection-egenskap er satt til den <xref:System.Web.UI.ConflictOptions>verdien parametere er opprettet for `Name` og `Number` for oppdateringen.</xref:System.Web.UI.ConflictOptions> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> Hvis egenskapen ConflictDetection er satt til den <xref:System.Web.UI.ConflictOptions>verdien parametere er opprettet for `Name`, `Number`, `original_Name`, og `original_Number`.</xref:System.Web.UI.ConflictOptions> (Det nøyaktige navnet på parameterne for de opprinnelige verdiene er avhengig av <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>.)</xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> Deretter den <xref:System.Web.UI.WebControls.SqlDataSourceView>objektet bestemmer om metoden som er angitt i den <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>egenskapen har parametere som tilsvarer.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView>       Samtidighetskontroll benyttes datalager bruke til å kontrollere hvordan data lese og endret i butikken når flere klienter tilgang til og manipulering av de samme dataene. En klient leser data og viser til en bruker, mens en annen klient leser de samme dataene, og viser til en annen bruker. Hvis begge brukerne oppdatere dataene og sende den til datalageret, kan et uventet resultat oppstå, fordi begge klientene kan oppdatere ulike verdier for de samme dataene. Dette anses som en konflikt. Ved å sette egenskapen ConflictDetection til den <xref:System.Web.UI.ConflictOptions>verdien oppdateringen kan deretter sammenligne gammel og ny verdier til den opprinnelige datakilden til å oppdage konflikter og behandle dem som er påkrevd.</xref:System.Web.UI.ConflictOptions>       Verdien for ConflictDetection er lagret i visningen tilstand."
  syntax:
    content: public System.Web.UI.ConflictOptions ConflictDetection { get; set; }
    return:
      type: System.Web.UI.ConflictOptions
      description: "Én av de <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> verdier. Standard er det <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> verdi."
  overload: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den valgte verdien er ikke én av de <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> verdier."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Delete(IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Delete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Utfører en delete operasjonen ved hjelp av <> </> *> SQL streng, parametere som er angitt i den <> </> *> samlingen og verdiene i den angitte <code> keys </code> og <code> oldValues </code> samlinger."
  remarks: "Slett metodekall den <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A>metoden sending av `keys` og `oldValues` parametere.</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A>"
  syntax:
    content: public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>for objekt- eller nøkkelverdier for den <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*>operasjonen til å slette.</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*> </xref:System.Collections.IDictionary>"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>som inneholder radverdiene evalueres bare hvis det <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*>er satt til den <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> verdi.</xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> </xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "En verdi som representerer antall rader som ble slettet fra den underliggende databasen."
  overload: System.Web.UI.WebControls.SqlDataSourceView.Delete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> property is set to the <xref href=\"System.Web.UI.ConflictOptions\"></xref> value and no <code>oldValues</code> parameters are passed."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete*>egenskapen <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  id: DeleteCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: SqlDataSourceView.DeleteCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir SQL-strengen som den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> bruker til å slette data fra den underliggende databasen."
  remarks: "Fordi annen databaseprodukter bruker annen varianter SQL, syntaksen til SQL-strengen er avhengig av den gjeldende ADO.NET leverandøren som brukes, som er identifisert av den <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>       Hvis SQL-strengen er parametriserte spørringer eller kommandoen, avhengig plassholder for parameteren også ADO.NET-leverandøren som brukes. For eksempel hvis leverandøren av <xref:System.Data.SqlClient?displayProperty=fullName>, som er standardleverandøren for den <xref:System.Web.UI.WebControls.SqlDataSource>klassen plassholderen for parameteren er `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Men hvis leverandøren er satt til den <xref:System.Data.Odbc?displayProperty=fullName>eller <xref:System.Data.OleDb?displayProperty=fullName>, plassholderen for parameteren `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Hvis du vil ha mer informasjon om parametriserte SQL-forespørsler og kommandoer, se [ved hjelp av parametere med SqlDataSource kontrollen](~/add/includes/ajax-current-ext-md.md).       DeleteCommand kan være en SQL-streng eller navnet på en lagret prosedyre, hvis den underliggende databasen støtter lagrede prosedyrer.       Verdien for DeleteCommand egenskapen er lagret i visningen tilstand."
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database Orders table. Data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.GridView> renders a **Delete** button automatically when the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true` and automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> collection and calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method when the **Delete** button is clicked. Finally, because this example deletes data, an event handler is added to attempt to back up the database to disk before the delete operation is performed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_947_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_947_1.aspx)]"
  syntax:
    content: public string DeleteCommand { get; set; }
    return:
      type: System.String
      description: "En SQL-streng som den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> bruker til å slette data."
  overload: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  id: DeleteCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: DeleteCommandType
  nameWithType: SqlDataSourceView.DeleteCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir en verdi som angir om teksten i den <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>egenskapen er en SQL-setning eller navnet på en lagret prosedyre.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>"
  remarks: "Verdien for DeleteCommandType er lagret i visningen tilstand."
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "Én av de <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> verdier. Standard er det <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> verdi."
  overload: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den valgte verdien er ikke én av de <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> verdier."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleted
  id: Deleted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Deleted
  nameWithType: SqlDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Forekommer når en sletting er fullført."
  remarks: "Behandle Deleted-hendelsen for å undersøke verdiene i utdataparametere etter en delete-operasjonen er fullført. Output-parameterne er tilgjengelig fra den <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>objektet som er forbundet med hendelsen.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Du finner mer informasjon om behandling av hendelser [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  id: DeleteParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: DeleteParameters
  nameWithType: SqlDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter parameters-samlingen som inneholder parametere som brukes av den <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>"
  remarks: "Hvis den <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>egenskapen inneholder en parametriserte SQL-spørring, DeleteParameters-samlingen inneholder noen <xref:System.Web.UI.WebControls.Parameter>objekter som samsvarer med parameteren-plassholdere i SQL-streng.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>       Parameternavn kan bli påvirket av den <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>egenskapen; spesielt hvis navnet identifiserer en primærnøkkel, for eksempel en nøkkel som er angitt med den `DataKeyNames` -egenskapen for en databundet kontroll eller i delete og oppdatere scenarioer der den <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>er satt til den <xref:System.Web.UI.ConflictOptions>verdi og et sett med `oldValues` er sendt til den tilsvarende datametoden.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> I dette tilfellet Formatstrengen som brukes på alle parameternavn i den `oldValues` samling.       Rekkefølgen av parameterne i samlingen DeleteParameters kan være viktige avhengig ADO.NET-leverandør. Den <xref:System.Data.OleDb?displayProperty=fullName>og <xref:System.Data.Odbc?displayProperty=fullName>Leverandører knytte parameterne i samlingen i henhold til order parameterne vises i parametriserte SQL-spørringen.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> Den <xref:System.Data.SqlClient?displayProperty=fullName>provider som standard ADO.NET-leverandør for den <xref:System.Web.UI.WebControls.SqlDataSource>kontrollere, knytter parameterne i samlingen av samsvarer med navnet på parameteren med plassholder i SQL-spørringen.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Hvis du vil ha mer informasjon om parametriserte SQL-forespørsler og kommandoer, se [ved hjelp av parametere med SqlDataSource kontrollen](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database. Initially, data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.DropDownList> control. You must explicitly declare the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> property and call the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method when using data-bound controls, such as the <xref:System.Web.UI.WebControls.DropDownList> (unlike controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, which automatically populate the parameters and call the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method on a data source control). In this example, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is delegated to the private <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> event handler, which explicitly calls the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method of the <xref:System.Web.UI.WebControls.SqlDataSource> control.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1005_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1005_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "En <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> som inneholder parametere som brukes av den <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleting
  id: Deleting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Deleting
  nameWithType: SqlDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Forekommer før en sletting."
  remarks: "Behandle sletting-hendelsen for å utføre initialisering av flere operasjoner som er spesifikke for programmet, for å validere verdiene i parametere, eller endre parameteren verdier før den <xref:System.Web.UI.WebControls.SqlDataSource>kontrollen utfører sletteoperasjonen.</xref:System.Web.UI.WebControls.SqlDataSource>       Tilkoblingen til den underliggende datakilden, er ikke ennå åpen når hendelsen behandlingsprogrammet representanten kalles. Derfor du kan ikke avbryte den <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>operasjonen ved å kalle den <xref:System.Data.Common.DbCommand.Cancel%2A>-metoden på den <xref:System.Data.Common.DbCommand>objekt som brukes av den <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>objektet.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommand.Cancel%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> Du kan imidlertid avbryte operasjonen ved å angi den <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>for den <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>til `true`.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Du finner mer informasjon om behandling av hendelser [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event that is raised before a delete operation occurs. Because this example deletes data from the Northwind database, an <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> handler is added to attempt to back up the database to disk before the delete operation is performed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_97_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_97_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Utfører en delete operasjonen ved hjelp av <> </> *> SQL streng, parametere som er angitt i den <> </> *> samlingen og verdiene i den angitte <code> keys </code> og <code> oldValues </code> samlinger."
  remarks: "Den <xref:System.Web.UI.WebControls.SqlDataSourceView>klassen implementerer arvet <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>metode for å slette data fra en database.</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView> Siden utviklere og databundet kontrollen forfattere kall ikke metoden ExecuteDelete direkte. Bruk i stedet offentlig åpne <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>metode.</xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>       Verdiene i den `keys` samlingen evalueres og sammen med verdier som finnes i den <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>samlingen.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> Hvis den <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>er satt til den <xref:System.Web.UI.ConflictOptions>verdi, verdiene i den `oldValues` samlingen er formatert med den <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>egenskapen og er også sammen.</xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>       Før sletteoperasjonen utføres, den <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>metoden kalles for å øke den <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting>hendelsen.</xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> Du kan håndtere denne hendelsen til å undersøke verdier for parameterne, og til å utføre forhåndsbehandling før en sletting.       Til å utføre en sletting den <xref:System.Web.UI.WebControls.SqlDataSourceView>objekt delversjoner en <xref:System.Data.Common.DbCommand>objektet ved hjelp av <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>tekst, og eventuelle tilhørende <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>Egenskaper og deretter kjører den <xref:System.Data.Common.DbCommand>objektet mot den underliggende databasen.</xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView> Når sletteoperasjonen er fullført, den <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A>metoden kalles for å øke den <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted>hendelsen.</xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> Du kan håndtere denne hendelsen til å undersøke eventuelle returverdier og feilkoder og til å utføre noen etterbehandling."
  syntax:
    content: protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>for objekt- eller nøkkelverdier for ExecuteDelete operasjonen til å slette.</xref:System.Collections.IDictionary>"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>som inneholder radverdiene evalueres bare hvis det <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*>er satt til den <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> verdi.</xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> </xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "En verdi som representerer antall rader som ble slettet fra den underliggende databasen."
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> property is set to the <xref href=\"System.Web.UI.ConflictOptions\"></xref> value and no <code>oldValues</code> parameters are passed."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current user does not have the correct permissions to access to the database.  \n  \n \\- or -  \n  \n The instance of the control is an <xref href=\"System.Web.UI.WebControls.AccessDataSource\"></xref> control and access is denied to the path specified for the <xref:System.Web.UI.WebControls.AccessDataSource.DataFile*> property."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n A design-time relative path was not mapped correctly by the designer before using an instance of the <xref href=\"System.Web.UI.WebControls.AccessDataSource\"></xref> control."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  id: ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteInsert(IDictionary)
  nameWithType: SqlDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Utfører et insert operasjonen ved hjelp av den <> </> *> SQL streng, parametere som er angitt i den <> </> *> samlingen og verdiene i den angitte <code> values </code> samling."
  remarks: "Den <xref:System.Web.UI.WebControls.SqlDataSourceView>klassen implementerer arvet <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>metode for å sette inn data i en database.</xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView> Siden utviklere og databundet kontrollen forfattere kall ikke metoden ExecuteInsert direkte. Bruk i stedet offentlig åpne <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>metode.</xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>       Før insert-operasjonen utføres, den <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>metoden kalles for å øke den <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting>hendelsen.</xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> Du kan håndtere denne hendelsen til å undersøke verdier for parameterne, og til å utføre forhåndsbehandling før insert.       Til å utføre en insert-operasjonen den <xref:System.Web.UI.WebControls.SqlDataSourceView>objekt delversjoner en <xref:System.Data.Common.DbCommand>objektet ved hjelp av <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>tekst, og eventuelle tilhørende <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A>Egenskaper og deretter utfører den <xref:System.Data.Common.DbCommand>objektet mot den underliggende databasen.</xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView> Når innsetting er fullført, den <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>metoden kalles for å øke den <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted>hendelsen.</xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> Du kan håndtere denne hendelsen til å undersøke eventuelle returverdier og feilkoder og til å utføre noen etterbehandling."
  syntax:
    content: protected override int ExecuteInsert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>over verdier som brukes med den <> </> *> til å utføre databaseoperasjonen insert.</xref:System.Collections.IDictionary> Hvis det er ingen parametere som er knyttet til spørringen eller den <> </> *> egenskapen er ikke en parametriserte SQL-spørring, sendes <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "En verdi som Representer antall rader som er satt inn i den underliggende databasen."
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kan ikke opprette en tilkobling til den underliggende datakilden."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Gjeldende bruker har ikke tillatelse til å få tilgang til databasen."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*>egenskapen <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter data fra den underliggende databasen ved hjelp av den <> </> *> SQL-streng og eventuelle parametere som er i den <> </> *> samling."
  remarks: "Den <xref:System.Web.UI.WebControls.SqlDataSourceView>klassen implementerer metoden arvede UtførValg for å hente data fra en database.</xref:System.Web.UI.WebControls.SqlDataSourceView> Siden utviklere og databundet kontrollen forfattere kall ikke metoden UtførValg direkte. Bruk i stedet offentlig åpne <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>metode.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>       Før datahenting utføres, den <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A>metoden kalles for å øke den <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting>hendelsen.</xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> Du kan håndtere denne hendelsen til å undersøke verdier for parameterne, og til å utføre noen forhåndsbehandling før data som hentes.       Til å utføre operasjonen i <xref:System.Web.UI.WebControls.SqlDataSourceView>objekt delversjoner en <xref:System.Data.Common.DbCommand>objektet ved hjelp av <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>tekst, og eventuelle tilhørende <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>, og utfører mot den underliggende databasen.</xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView> Når operasjonen er fullført, den <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A>metoden kalles for å øke den <xref:System.Web.UI.WebControls.SqlDataSource.Selected>hendelsen.</xref:System.Web.UI.WebControls.SqlDataSource.Selected> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> Du kan håndtere denne hendelsen for å se alle returverdier, feilkoder, og utføre noen etterbehandling.       Metoden UtførValg returnerer en <xref:System.Data.DataView>objekt hvis den <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>er satt til <xref:System.Web.UI.WebControls.SqlDataSourceMode>, eller <xref:System.Data.IDataReader>objekt hvis <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>er satt til <xref:System.Web.UI.WebControls.SqlDataSourceMode>.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Data.IDataReader> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Data.DataView> Lukk den <xref:System.Data.IDataReader>objekt når du er ferdig lesing av data.</xref:System.Data.IDataReader>       Hvis den <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>er satt til <xref:System.Web.UI.WebControls.SqlDataSourceMode>og hurtigbufring er aktivert, <xref:System.Web.UI.WebControls.SqlDataSourceView>henter data fra og lagrer data i bufferen under Dataoperasjonen.</xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> Bufferen er opprettet, forkastet eller oppdateres basert på hurtigbufring virkemåten som angis av kombinasjonen av den <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>og <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>Egenskaper.</xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> </xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>      > [!IMPORTANT] > Når du bruker klientrepresentasjon under Windows-godkjenning, data hurtigbufres når den første brukeren har tilgang til dataene. Hvis en annen bruker ber om de samme dataene, hente dataene fra hurtigbufferen. Dataene er ikke hentet ved å velge et annet kall til databasen for å bekrefte brukerens tilgang til dataene. Hvis du forventer at flere brukere tilgang til dataene, og du vil bruke hver gang dataene for å verifisere av databasens sikkerhetskonfigurasjoner, Bruk ikke hurtigbufring.       Hvis den <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>er satt til <xref:System.Web.UI.WebControls.SqlDataSourceMode>og en <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>er angitt, evalueres det sammen med en angitt <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>og resulterende filteret brukes i listen over data under henting av Dataoperasjonen.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>"
  syntax:
    content: protected override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "En <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> objektet som ble brukt til å be om operasjoner i data utenfor grunnleggende datahenting."
    return:
      type: System.Collections.IEnumerable
      description: "En <xref:System.Collections.IEnumerable>liste over datarader.</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <code>arguments</code> passed to the ExecuteSelect method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.  \n  \n \\- or -  \n  \n Caching is enabled but the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode*> property of the data source is not set to <xref href=\"System.Web.UI.WebControls.SqlDataSourceMode\"></xref>.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName*> property is set but <xref:System.Data.SqlClient.SqlCommand.CommandType*> is not set to <xref href=\"System.Data.CommandType\"></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The data source cannot create a database connection.  \n  \n \\- or -  \n  \n Caching is enabled but the internal cache and command types do not match."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Utfører et oppdateringen operasjonen ved hjelp av den <> </> *> SQL streng, parametere i den <> </> *> samlingen og verdiene i den angitte <code> keys </code>, <code> values </code>, og <code> oldValues </code> samlinger."
  remarks: "Den <xref:System.Web.UI.WebControls.SqlDataSourceView>klassen implementerer metoden arvede ExecuteUpdate for å oppdatere dataene i en database.</xref:System.Web.UI.WebControls.SqlDataSourceView> Siden utviklere og databundet kontrollen forfattere kall ikke metoden ExecuteUpdate direkte. Bruk i stedet offentlig åpne <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>metode.</xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>       Verdiene i den `keys` og `values` samlinger evalueres og sammen med verdier som inneholder den <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>samlingen.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> Hvis den <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>er satt til <xref:System.Web.UI.ConflictOptions>, verdiene i den `oldValues` samlingen er formatert med den <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>og også sammen.</xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>       Før oppdateringen utføres, den <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>metoden kalles for å øke den <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating>hendelsen.</xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> Du kan håndtere denne hendelsen for å undersøke verdier for parameterne og utføre forhåndsbehandling før en oppdatering.       Til å utføre operasjonen den <xref:System.Web.UI.WebControls.SqlDataSourceView>bygger en <xref:System.Data.Common.DbCommand>objektet ved hjelp av <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>tekst, og eventuelle tilhørende <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>Egenskaper og deretter kjører den <xref:System.Data.Common.DbCommand>objektet mot den underliggende databasen.</xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView> Når operasjonen er fullført, den <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A>metoden kalles for å øke den <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated>hendelsen.</xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> Du kan håndtere denne hendelsen til å undersøke eventuelle returverdier og feilkoder og til å utføre noen etterbehandling."
  syntax:
    content: protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>av primærnøkler skal brukes med den <> </> *> til å utføre databaseoperasjonen oppdateringen.</xref:System.Collections.IDictionary> Hvis det er ingen nøkler som er knyttet til spørringen, eller hvis den <> </> *> egenskapen er ikke en parametriserte SQL-spørring, sendes <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: values
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>av verdiene som skal brukes med den <> </> *> til å utføre databaseoperasjonen oppdateringen.</xref:System.Collections.IDictionary> Hvis det er ingen parametere som er knyttet til spørringen eller den <> </> *> er ikke en parametriserte SQL-spørring, sendes <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>som representerer de opprinnelige verdiene i databasen.</xref:System.Collections.IDictionary> Hvis det er ingen parametere som er knyttet til spørringen eller den <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>egenskapen er ikke en parametriserte SQL-spørring, sendes <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>"
    return:
      type: System.Int32
      description: "En verdi som representerer antall rader oppdatert i den underliggende databasen."
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> property is set to the <xref href=\"System.Web.UI.ConflictOptions\"></xref> value and no <code>oldValues</code> parameters are passed."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Gjeldende bruker har ikke tillatelse til å få tilgang til databasen."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*>egenskapen <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  id: FilterExpression
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: FilterExpression
  nameWithType: SqlDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir et filtrering uttrykk som brukes når den <xref:System.Web.UI.WebControls.SqlDataSourceView.Select*>-metoden.</xref:System.Web.UI.WebControls.SqlDataSourceView.Select*>"
  remarks: "Syntaksen som brukes for egenskapen FilterExpression er format streng – stil syntaksen. Du kan inkludere parametere i egenskapen FilterExpression. Hvis typen for parameteren streng eller et tegn, må parameteren enkelt stå i anførselstegn. Anførselstegn er ikke nødvendig, hvis parameteren er en numerisk type.       Den <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>samlingen inneholder parameterne som evalueres for plassholdere som finnes i den <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>       Den <xref:System.Web.UI.WebControls.SqlDataSource>kontrollen støtter filtrere data bare når i `DataSet` modus.</xref:System.Web.UI.WebControls.SqlDataSource>       Verdien for FilterExpression egenskapen er lagret i visningen tilstand.      > [!IMPORTANT] > Bør du validere en parameterverdi for filter som du mottar fra klienten. Kjøretiden ganske enkelt inn parameterverdien i filteruttrykket og gjelder den til den <xref:System.Data.DataView>objektet som er returnert av den <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metoden.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> Hvis du bruker den <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>egenskapen som et sikkerhetstiltak å begrense antall elementer som returneres, må du validere parameterverdiene før filtreringen forekommer.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>"
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties. The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control is applied any time the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data. In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection. In this example, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control. Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the <xref:System.Web.UI.WebControls.DropDownList> selection causes the page to post to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1180_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1180_1.aspx)]"
  syntax:
    content: public string FilterExpression { get; set; }
    return:
      type: System.String
      description: "En streng som representerer et filtrering uttrykk som brukes når data som hentes ved hjelp av den <xref:System.Web.UI.WebControls.SqlDataSource.Select*>metoden.</xref:System.Web.UI.WebControls.SqlDataSource.Select*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Egenskapen FilterExpression ble angitt når den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> er i den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceMode&quot;> </xref> modus."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Filtering
  id: Filtering
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Filtering
  nameWithType: SqlDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Filtering
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Forekommer før en filteroperasjon."
  remarks: "Behandle filtrering-hendelsen for å utføre validering operasjoner i parameteren filterverdier før den <xref:System.Web.UI.WebControls.SqlDataSourceView>objektet utfører en filteroperasjon.</xref:System.Web.UI.WebControls.SqlDataSourceView> Du kan avbryte den <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>metoden ved å angi den <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>for den <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs>objekt `true`.</xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> Hendelsen oppstår bare hvis det <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>-egenskap er satt.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>      > [!IMPORTANT] > Bør du validere en parameterverdi for filter som du mottar fra klienten. Kjøretiden ganske enkelt inn parameterverdien i filteruttrykket og gjelder den til den <xref:System.Data.DataView>objektet som er returnert av den <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metoden.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> Hvis du bruker den <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>egenskapen som et sikkerhetstiltak å begrense antall elementer som returneres, må du validere parameterverdiene før filtreringen forekommer.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>       Du finner mer informasjon om behandling av hendelser [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  id: FilterParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: FilterParameters
  nameWithType: SqlDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter en samling med parametere som er knyttet til noen plassholdere for parameteren i den <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*>streng.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*>"
  remarks: "Parameterne i samlingen FilterParameters er knyttet til parametere som er angitt i den <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> Plassholdere for parameteren som er angitt i den <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>evalueres etter rekkefølge og samsvarer med parameteren-objekter i samlingen FilterParameters når den <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>-metoden.</xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>      > [!IMPORTANT] > Bør du validere en parameterverdi for filter som du mottar fra klienten. Kjøretiden ganske enkelt inn parameterverdien i filteruttrykket og gjelder den til den <xref:System.Data.DataView>objektet som er returnert av den <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metoden.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> Hvis du bruker den <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>egenskapen som et sikkerhetstiltak å begrense antall elementer som returneres, må du validere parameterverdiene før filtreringen forekommer.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>"
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties. The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control is applied any time the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data. In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection. In addition, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control. Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the <xref:System.Web.UI.WebControls.DropDownList> selection causes the page to post information back to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_165_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_165_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "En <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> som inneholder et sett med parametere som er knyttet til noen plassholdere for parameter funnet i den <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)
  id: Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Insert(IDictionary)
  nameWithType: SqlDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Insert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Utfører et insert operasjonen ved hjelp av den <> </> *> SQL streng, parametere som er angitt i den <> </> *> samlingen og verdiene i den angitte <code> values </code> samling."
  remarks: "Insert metodekall den <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A>metoden sending av `values` parameteren.</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A>"
  syntax:
    content: public int Insert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>av parametere for den <> </> *> egenskap som skal brukes til å utføre databaseoperasjonen insert.</xref:System.Collections.IDictionary> Hvis det er ingen parametere som er knyttet til spørringen eller den <> </> *> er ikke en parametriserte SQL-spørring, sendes <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "En verdi som Representer antall rader som er satt inn i den underliggende databasen."
  overload: System.Web.UI.WebControls.SqlDataSourceView.Insert*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kan ikke opprette en tilkobling til den underliggende datakilden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*>egenskapen <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  id: InsertCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: InsertCommand
  nameWithType: SqlDataSourceView.InsertCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir SQL-strengen som den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objektet bruker til å sette inn data i den underliggende databasen."
  remarks: "Fordi annen databaseprodukter bruker annen varianter SQL, syntaksen til SQL-strengen er avhengig av den gjeldende ADO.NET leverandøren som brukes, som er identifisert av den <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Hvis SQL-strengen er parametriserte spørringer eller kommandoen, avhengig plassholder for parameteren også ADO.NET-leverandøren som brukes. For eksempel hvis leverandøren av <xref:System.Data.SqlClient?displayProperty=fullName>, som er standardleverandøren for den <xref:System.Web.UI.WebControls.SqlDataSource>klassen plassholderen for parameteren er `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Men hvis leverandøren er satt til den <xref:System.Data.Odbc?displayProperty=fullName>eller <xref:System.Data.OleDb?displayProperty=fullName>, plassholderen for parameteren `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Hvis du vil ha mer informasjon om parametriserte SQL-forespørsler og kommandoer, se [ved hjelp av parametere med SqlDataSource kontrollen](~/add/includes/ajax-current-ext-md.md).       Egenskapen InsertCommand kan være en SQL-streng eller navnet på en lagret prosedyre, hvis datakilden støtter lagrede prosedyrer.       Verdien for InsertCommand egenskapen er lagret i visningen tilstand."
  example:
  - "This section contains two code examples. The first code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control. The second code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control. The current data in the table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control. You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button. When the **Insert** button is clicked, the specified values are inserted into the database and the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1299_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1299_1.aspx)]  \n  \n The following code example demonstrates how to retrieve data from SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1299_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1299_2.aspx)]"
  syntax:
    content: public string InsertCommand { get; set; }
    return:
      type: System.String
      description: "En SQL-streng som den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> bruker til å sette inn data."
  overload: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  id: InsertCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: InsertCommandType
  nameWithType: SqlDataSourceView.InsertCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir en verdi som angir om teksten i den <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>egenskapen er en SQL-setning eller navnet på en lagret prosedyre.</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>"
  remarks: "Verdien for InsertCommandType er lagret i visningen tilstand."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n The <xref:System.Web.UI.WebControls.GridView> control displays a set of data and the <xref:System.Web.UI.WebControls.DetailsView> control displays the details for a particular row. If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. The stored procedure name is set in the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property and is identified as a stored procedure by setting the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType> value.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_733_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_733_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "Én av de <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> verdier. Verdien er den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> verdi."
  overload: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den valgte verdien er ikke én av de <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> verdier."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserted
  id: Inserted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Inserted
  nameWithType: SqlDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Forekommer når en insert-operasjonen er fullført."
  remarks: "Behandle Inserted-hendelsen for å undersøke verdiene i utdataparametere etter en insert-operasjonen er fullført. Output-parameterne er tilgjengelig fra den <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>objektet som er forbundet med hendelsen.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Du finner mer informasjon om behandling av hendelser [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control. The example also uses a <xref:System.Web.UI.WebControls.DetailsView> control to display details of the selected row in the <xref:System.Web.UI.WebControls.GridView>, and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView>. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface that is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_39_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_39_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserting
  id: Inserting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Inserting
  nameWithType: SqlDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Forekommer før en insert-operasjonen."
  remarks: "Behandle sette inn-hendelsen for å utføre initialisering av flere operasjoner som er spesifikke for programmet, for å validere verdiene i parametere, eller endre parameteren verdier før den <xref:System.Web.UI.WebControls.SqlDataSource>kontrollen utfører innsettingsoperasjonen.</xref:System.Web.UI.WebControls.SqlDataSource>       Tilkoblingen til den underliggende datakilden, er ikke ennå åpen når hendelsen behandlingsprogrammet representanten kalles. Derfor du kan ikke avbryte databaseoperasjonen ved å kalle den <xref:System.Data.Common.DbCommand.Cancel%2A>-metoden på den <xref:System.Data.Common.DbCommand>objekt som brukes av den <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>objektet.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommand.Cancel%2A> Du kan imidlertid avbryte databaseoperasjonen ved å angi den <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>for den <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>til `true`.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Du finner mer informasjon om behandling av hendelser [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control. The example also uses a <xref:System.Web.UI.WebControls.DetailsView> control to display details of the selected row in the <xref:System.Web.UI.WebControls.GridView>, and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object, and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_104_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_104_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  id: InsertParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: InsertParameters
  nameWithType: SqlDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter parameters-samlingen som inneholder parametere som brukes av den <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>"
  remarks: "Hvis den <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>egenskapen inneholder en parametriserte SQL-spørring, InsertParameters-samlingen inneholder noen <xref:System.Web.UI.WebControls.Parameter>objekter som samsvarer med parameteren-plassholdere i SQL-streng.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>       Rekkefølgen av parameterne i samlingen InsertParameters kan være viktige avhengig ADO.NET-leverandør. Den <xref:System.Data.OleDb?displayProperty=fullName>og <xref:System.Data.Odbc?displayProperty=fullName>Leverandører knytte parameterne i samlingen i henhold til rekkefølgen parameterne vises i parametriserte SQL-spørringen.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> Den <xref:System.Data.SqlClient?displayProperty=fullName>provider som standard ADO.NET-leverandør for den <xref:System.Web.UI.WebControls.SqlDataSource>kontrollere, knytter parameterne i samlingen av samsvarer med navnet på parameteren med et alias for plassholderen i SQL-spørringen.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Hvis du vil ha mer informasjon om parametriserte SQL-forespørsler og kommandoer, se [ved hjelp av parametere med SqlDataSource kontrollen](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page. The current data in the table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control. You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button. When the **Insert** button is clicked, the specified values are inserted into the database and the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_530_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_530_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "En <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> som inneholder parametere som brukes av den <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  id: IsTrackingViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: IsTrackingViewState
  nameWithType: SqlDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter en verdi som angir om den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objektet er lagrer endringer i visningsstatusen."
  syntax:
    content: protected bool IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, hvis datakildevisningen er merket for å lagre tilstanden; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: SqlDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gjenoppretter tidligere lagret visningsstatusen for datakildevisningen."
  remarks: "Denne metoden brukes hovedsakelig av den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] infrastruktur og skal ikke brukes direkte fra koden.  Kontrollutviklere kan imidlertid overstyre denne metoden hvis du vil angi hvordan en egendefinert serverkontroll gjenoppretter visningstilstanden. Hvis du vil ha mer informasjon, se [ASP.NET oversikt over tilstand](~/add/includes/ajax-current-ext-md.md).       Metoden LoadViewState gjenoppretter visningsstatus informasjon for den <xref:System.Web.UI.WebControls.SqlDataSourceView>objektet fra en tidligere sideforespørsel som er lagret av den <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>metoden.</xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: protected virtual void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Et objekt som representerer den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> tilstand for å gjenopprette."
  overload: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  id: OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir en formatstreng å bruke navnene på alle parameterne som sendes til den <> </> *> eller <> </> *> metoden."
  remarks: "OldValuesParameterFormatString Formatstrengen som brukes på primærnøkler, for eksempel de som er identifisert av den `DataKeyNames` egenskapen kontrollens databundet eller slette og oppdatere scenarioer der den <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>er satt til den <xref:System.Web.UI.ConflictOptions>verdi og et sett med `oldValues` er sendt til den tilsvarende datametoden.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> I dette tilfellet Formatstrengen som brukes på alle parameternavn i den `oldValues` samling. For mer informasjon, kan du se <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=fullName>.</xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=fullName>       Verdien for OldValuesParameterFormatString er lagret i visningen tilstand."
  syntax:
    content: public string OldValuesParameterFormatString { get; set; }
    return:
      type: System.String
      description: "En streng som representerer en formatstreng brukes navnene på alle <code> oldValues </code> parametere sendt til den <> </> *> eller <> </> *> metoder. Standarden er &quot;{0}&quot;."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnDeleted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hever den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Deleted&quot;> </xref> hendelsen etter den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontrollen er fullført en sletting."
  remarks: "Opprettet en hendelse aktiverer hendelsesbehandlingen via en representant. Hvis du vil ha mer informasjon, se [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnDeleted kan også avledede klasser behandle hendelsen uten å knytte representant. Dette er den foretrukne metoden for behandling av hendelsen i en avledet klasse."
  syntax:
    content: protected virtual void OnDeleted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;> </xref> som inneholder hendelsesdataene."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  id: OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnDeleting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hever den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Deleting&quot;> </xref> hendelsen før den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontrollen prøver en sletting."
  remarks: "Opprettet en hendelse aktiverer hendelsesbehandlingen via en representant. Hvis du vil ha mer informasjon, se [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnDeleting kan også avledede klasser behandle hendelsen uten å knytte representant. Dette er den foretrukne metoden for behandling av hendelsen i en avledet klasse."
  example:
  - "The following code example demonstrates how to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event, which is raised before a <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operation occurs. Because this example deletes data from the Northwind database, an OnDeleting handler is added to attempt to back up the database to disk before the delete is performed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/visualbasic/359c75a9-ee0e-4d55-bdc1-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/csharp/359c75a9-ee0e-4d55-bdc1-_1.aspx)]"
  syntax:
    content: protected virtual void OnDeleting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&quot;> </xref> som inneholder hendelsesdataene."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  id: OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnFiltering(SqlDataSourceFilteringEventArgs)
  nameWithType: SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hever den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Filtering&quot;> </xref> hendelsen før den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontrollen filtrerer resultatene av en select-operasjonen."
  remarks: "Opprettet en hendelse aktiverer hendelsesbehandlingen via en representant. Hvis du vil ha mer informasjon, se [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnFiltering kan også avledede klasser behandle hendelsen uten å knytte representant. Dette er den foretrukne metoden for behandling av hendelsen i en avledet klasse."
  syntax:
    content: protected virtual void OnFiltering (System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs&quot;> </xref> som inneholder hendelsesdataene."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnInserted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hever den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Inserted&quot;> </xref> hendelsen etter den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontrollen er fullført en insert-operasjonen."
  remarks: "Opprettet en hendelse aktiverer hendelsesbehandlingen via en representant. Hvis du vil ha mer informasjon, se [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnInserted kan også avledede klasser behandle hendelsen uten å knytte representant. Dette er den foretrukne metoden for behandling av hendelsen i en avledet klasse."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the OnInserted event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/81209d4c-52a2-4147-b8d8-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/81209d4c-52a2-4147-b8d8-_1.aspx)]"
  syntax:
    content: protected virtual void OnInserted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;> </xref> som inneholder hendelsesdataene."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnInserted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  id: OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnInserting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hever den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Inserting&quot;> </xref> hendelsen før den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontrollen prøver en insert-operasjonen."
  remarks: "Opprettet en hendelse aktiverer hendelsesbehandlingen via en representant. Hvis du vil ha mer informasjon, se [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnInserting kan også avledede klasser behandle hendelsen uten å knytte representant. Dette er den foretrukne metoden for behandling av hendelsen i en avledet klasse."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the OnInserting event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/ff2f58f9-1a94-4cce-ae83-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/ff2f58f9-1a94-4cce-ae83-_1.aspx)]"
  syntax:
    content: protected virtual void OnInserting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&quot;> </xref> som inneholder hendelsesdataene."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnInserting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnSelected(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hever den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Selected&quot;> </xref> hendelsen etter den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontrollen er fullført en operasjon for henting av data."
  remarks: "Opprettet en hendelse aktiverer hendelsesbehandlingen via en representant. Hvis du vil ha mer informasjon, se [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnSelected kan også avledede klasser behandle hendelsen uten å knytte representant. Dette er den foretrukne metoden for behandling av hendelsen i en avledet klasse."
  syntax:
    content: protected virtual void OnSelected (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;> </xref> som inneholder hendelsesdataene."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnSelected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  id: OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnSelecting(SqlDataSourceSelectingEventArgs)
  nameWithType: SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hever den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Selecting&quot;> </xref> hendelsen før den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontrollen prøver en operasjon for henting av data."
  remarks: "Opprettet en hendelse aktiverer hendelsesbehandlingen via en representant. Hvis du vil ha mer informasjon, se [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnSelecting kan også avledede klasser behandle hendelsen uten å knytte representant. Dette er den foretrukne metoden for behandling av hendelsen i en avledet klasse."
  syntax:
    content: protected virtual void OnSelecting (System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs&quot;> </xref> som inneholder hendelsesdataene."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnUpdated(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hever den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Updated&quot;> </xref> hendelsen etter den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontrollen er fullført en oppdateringsoperasjon."
  remarks: "Opprettet en hendelse aktiverer hendelsesbehandlingen via en representant. Hvis du vil ha mer informasjon, se [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnUpdate kan også avledede klasser behandle hendelsen uten å knytte representant. Dette er den foretrukne metoden for behandling av hendelsen i en avledet klasse."
  example:
  - "The following code example demonstrates how to display and update data retrieved from an ODBC database in a <xref:System.Web.UI.WebControls.GridView> control. After a record is successfully updated, the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event is handled by an event handler to perform a post-processing step where an e-mail message notification is sent.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/visualbasic/9236d411-d01f-4dc8-b1eb-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/csharp/9236d411-d01f-4dc8-b1eb-_1.aspx)]"
  syntax:
    content: protected virtual void OnUpdated (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;> </xref> som inneholder hendelsesdataene."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  id: OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnUpdating(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hever den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Updating&quot;> </xref> hendelsen før den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontrollen prøver en oppdateringsoperasjon."
  remarks: "Opprettet en hendelse aktiverer hendelsesbehandlingen via en representant. Hvis du vil ha mer informasjon, se [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnUpdating kan også avledede klasser behandle hendelsen uten å knytte representant. Dette er den foretrukne metoden for behandling av hendelsen i en avledet klasse."
  example:
  - "The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control. The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/visualbasic/29c8c16e-94d1-48d3-be46-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/csharp/29c8c16e-94d1-48d3-be46-_1.aspx)]"
  syntax:
    content: protected virtual void OnUpdating (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&quot;> </xref> som inneholder hendelsesdataene."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  id: ParameterPrefix
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ParameterPrefix
  nameWithType: SqlDataSourceView.ParameterPrefix
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter strengen som skal brukes som prefiks for en parameter-plassholder i en parametriserte SQL-spørring."
  remarks: "SQL-spørringer og kommandoer kan parametriseres, ved at de inneholder plassholdere for verdier som er bundet til spørringen ved kjøretid. Avhengig av ADO.NET-leverandør som er angitt for den <xref:System.Web.UI.WebControls.SqlDataSource>kontrollen, som er identifisert av den <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>egenskapen parameterne evalueres etter alias eller deres sortering i den <xref:System.Web.UI.WebControls.ParameterCollection>objektet.</xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> </xref:System.Web.UI.WebControls.SqlDataSource>       Hvis den <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>er ikke angitt eller er satt til den <xref:System.Data.SqlClient?displayProperty=fullName>Parametere evalueres etter alias og egenskapen ParameterPrefix brukes til å legge til parameteren prefiks til den <xref:System.Web.UI.WebControls.Parameter.Name%2A>for hver <xref:System.Web.UI.WebControls.Parameter>objekt i en <xref:System.Web.UI.WebControls.ParameterCollection>under henting av data eller filmanipuleringsoperasjon data.</xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.Parameter.Name%2A> </xref:System.Data.SqlClient?displayProperty=fullName> </xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Hvis den <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>er satt til den <xref:System.Data.OleDb?displayProperty=fullName>eller <xref:System.Data.Odbc?displayProperty=fullName>, parameterne evalueres etter rekkefølgen og ParameterPrefix og <xref:System.Web.UI.WebControls.Parameter.Name%2A>ignoreres.</xref:System.Web.UI.WebControls.Parameter.Name%2A> </xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>       Hvis du utvider den <xref:System.Web.UI.WebControls.SqlDataSourceView>klasse, du kan overstyre ParameterPrefix-egenskapen for å angi et prefiks enn den `&quot;@&quot;` streng, hvis nødvendig.</xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: protected virtual string ParameterPrefix { get; }
    return:
      type: System.String
      description: "Den &quot;@&quot; streng."
  overload: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  id: RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  nameWithType: SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Sammenligner funksjonene som er forespurt for en <> </> *> operasjonen mot de visningen støtter og er kalles av den <> </> *> metoden."
  remarks: "Metoden RaiseUnsupportedCapabilityError brukes av datakildevisningen for å undersøke hver funksjonene som kreves av en databundet kontroll som representeres av den <xref:System.Web.UI.DataSourceSelectArguments>objekt som er sendt til den <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>metoden, og for å sammenligne disse funksjonene til funksjonene som støttes av datakildevisningen.</xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> </xref:System.Web.UI.DataSourceSelectArguments> For funksjoner som er representert av den <xref:System.Web.UI.DataSourceSelectArguments>objekt og støttes ikke av datakildevisningen, en <xref:System.NotSupportedException>Unntak oppstår.</xref:System.NotSupportedException> </xref:System.Web.UI.DataSourceSelectArguments>"
  syntax:
    content: protected override void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);
    parameters:
    - id: capability
      type: System.Web.UI.DataSourceCapabilities
      description: "Én av de <xref href=&quot;System.Web.UI.DataSourceCapabilities&quot;> </xref> verdier sammenlignes med funksjoner som støtter visningen."
  overload: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Datakilden har ikke den valgte <code> capability </code> aktivert."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: SqlDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lagrer endringene visningsstatusen for den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> kontrollen siden siden ble posteres tilbake til serveren."
  remarks: "Metoden SaveViewState brukes hovedsakelig av kontrollutviklere.       Visningsstatusen er summen av verdiene i egenskapene for en serverkontroll. Disse verdiene plasseres automatisk i <xref:System.Web.UI.Control.ViewState%2A>egenskapen for serverkontroll, som er en forekomst av <xref:System.Web.UI.StateBag>klassen.</xref:System.Web.UI.StateBag> </xref:System.Web.UI.Control.ViewState%2A> Den <xref:System.Web.UI.Control.ViewState%2A>verdi i serverkontroll deretter er beholdt i en strengobjektet når lagringen tilstand fase av server kontrollen levetid.</xref:System.Web.UI.Control.ViewState%2A>       Når visningsstatusen lagres, string-objektet som ble fast når lagringen tilstand fase av levetid server kontrollen returneres til klienten som en variabel som er lagret i HTML `Hidden` elementet. Når du skriver egendefinerte serverkontroller, du kan forbedre effektiviteten av overstyrer metoden SaveViewState og endring av `ViewState` -egenskapen for serverkontrollen. Hvis du vil ha mer informasjon, se [ASP.NET oversikt over tilstand](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "Objektet som inneholder endringer i den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> vise tilstand; ellers, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, hvis det er ingen visningsstatusen som er knyttet til objektet."
  overload: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  id: Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Select(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Select(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter data fra den underliggende databasen ved hjelp av den <> </> *> SQL-streng og eventuelle parametere som er i den <> </> *> samling."
  remarks: "Velg metodekall den <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>metoden sending av `selectArgs` parameteren.</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>       Den <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>metoden returnerer en <xref:System.Data.DataView>objektet, hvis den <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>er satt til den <xref:System.Web.UI.WebControls.SqlDataSourceMode>verdien eller returnerer en <xref:System.Data.IDataReader>objektet, hvis den <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>er satt til den <xref:System.Web.UI.WebControls.SqlDataSourceMode>verdi.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Data.IDataReader> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Data.DataView> </xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> Lukk den <xref:System.Data.IDataReader>objekt når du er ferdig lesing av data.</xref:System.Data.IDataReader>"
  syntax:
    content: public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "En <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> brukes til forespørselen operasjoner i data utenfor grunnleggende datahenting."
    return:
      type: System.Collections.IEnumerable
      description: "En <xref:System.Collections.IEnumerable>liste over datarader.</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.Select*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <code> selectArgs </code> sendt til Velg metoden angi at datakilden må utføre noen ekstra arbeid under henting av data for å aktivere Bla eller sortering ved hjelp av de hentede dataene, men datakildekontrollen støtter ikke den forespurte funksjonen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kan ikke opprette en tilkobling til den underliggende datakilden."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  id: SelectCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SelectCommand
  nameWithType: SqlDataSourceView.SelectCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir SQL-strengen som den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objektet bruker til å hente data fra den underliggende databasen."
  remarks: "Fordi annen databaseprodukter bruker annen varianter SQL, syntaksen til SQL-strengen er avhengig av den gjeldende ADO.NET leverandøren som brukes, som er identifisert av den <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Hvis SQL-strengen er parametriserte spørringer eller kommandoen, avhengig plassholder for parameteren også ADO.NET-leverandøren som brukes. For eksempel hvis leverandøren av <xref:System.Data.SqlClient?displayProperty=fullName>, som er standardleverandøren for den <xref:System.Web.UI.WebControls.SqlDataSource>klassen plassholderen for parameteren er `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Men hvis leverandøren er satt til den <xref:System.Data.Odbc?displayProperty=fullName>eller <xref:System.Data.OleDb?displayProperty=fullName>, plassholderen for parameteren `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Hvis du vil ha mer informasjon om parametriserte SQL-forespørsler og kommandoer, se [ved hjelp av parametere med SqlDataSource kontrollen](~/add/includes/ajax-current-ext-md.md).       Egenskapen SelectCommand kan være en SQL-streng eller navnet på en lagret prosedyre, hvis datakilden støtter lagrede prosedyrer.      > [!IMPORTANT] > Det er sikrere å bruke en lagret prosedyre enn en SQL-setning for egenskapen SelectCommand.       Verdien for SelectCommand er lagret i visningen tilstand."
  example:
  - "This section contains two code examples. The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to a basic SQL query to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control. The second code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList>.  \n  \n The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to a basic SQL query to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control. The <xref:System.Web.UI.WebControls.Button> and <xref:System.Web.UI.WebControls.TextBox> controls are provided as a simple interface to update the address for the selected user in the <xref:System.Web.UI.WebControls.DropDownList>.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_519_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_519_1.aspx)]  \n  \n The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control. The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property can be an SQL query or the name of a stored procedure, if the data source supports stored procedures.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_519_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_519_2.aspx)]"
  syntax:
    content: public string SelectCommand { get; set; }
    return:
      type: System.String
      description: "En SQL-streng som den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> bruker til å hente data."
  overload: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  id: SelectCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SelectCommandType
  nameWithType: SqlDataSourceView.SelectCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir en verdi som angir om teksten i den <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>egenskapen er en SQL-spørring eller navnet på en lagret prosedyre.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>"
  remarks: "Verdien for SelectCommandType er lagret i visningen tilstand."
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure and the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType> value to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList>.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_934_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_934_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "Én av de <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> verdier. Standard er det <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> verdi."
  overload: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den valgte verdien er ikke én av de <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> verdier."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selected
  id: Selected
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Selected
  nameWithType: SqlDataSourceView.Selected
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Forekommer når en operasjon for henting av data er fullført."
  remarks: "Behandle valgte-hendelsen for å undersøke verdiene i utdataparametere når en operasjon for henting av data er fullført. Output-parameterne er tilgjengelig fra den <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>objektet som er forbundet med hendelsen.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Du finner mer informasjon om behandling av hendelser [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selecting
  id: Selecting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Selecting
  nameWithType: SqlDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Forekommer før en operasjon for henting av data."
  remarks: "Behandle Hvis du velger-hendelsen for å utføre initialisering av flere operasjoner som er spesifikke for programmet, for å validere verdiene i parametere, eller endre parameteren verdier før den <xref:System.Web.UI.WebControls.SqlDataSource>kontrollen utfører henting Dataoperasjonen.</xref:System.Web.UI.WebControls.SqlDataSource>       Du finner mer informasjon om behandling av hendelser [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  id: SelectParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SelectParameters
  nameWithType: SqlDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter parameters-samlingen som inneholder parametere som brukes av den <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>"
  remarks: "Hvis den <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>egenskapen inneholder en parametriserte SQL-spørring, SelectParameters-samlingen inneholder noen <xref:System.Web.UI.WebControls.Parameter>objekter som samsvarer med parameteren-plassholdere i SQL-streng.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>       Rekkefølgen av parameterne i samlingen SelectParameters kan være viktige avhengig ADO.NET-leverandør. Den <xref:System.Data.OleDb?displayProperty=fullName>og <xref:System.Data.Odbc?displayProperty=fullName>Leverandører knytte parameterne i samlingen i henhold til rekkefølgen parameterne vises i parametriserte SQL-spørringen.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> Den <xref:System.Data.SqlClient?displayProperty=fullName>provider som standard ADO.NET-leverandør for den <xref:System.Web.UI.WebControls.SqlDataSource>kontrollere, knytter parameterne i samlingen av samsvarer med navnet på parameteren med et alias for plassholderen i SQL-spørringen.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Hvis du vil ha mer informasjon om parametriserte SQL-forespørsler og kommandoer, se [ved hjelp av parametere med SqlDataSource kontrollen](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server by setting the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property to an SQL query. The SQL query is parameterized and the placeholder in the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property is matched to the <xref:System.Web.UI.WebControls.ControlParameter> object that is added to the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection. In this way, the <xref:System.Web.UI.WebControls.DropDownList> control, to which the <xref:System.Web.UI.WebControls.ControlParameter> is bound, acts as a filter for what is displayed in the <xref:System.Web.UI.WebControls.ListBox> control.  \n  \n> [!NOTE]\n>  Because the parameter is used in a WHERE clause, the use of the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> property in this code example is functionally equivalent to using both the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_723_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_723_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "En <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> som inneholder parametere som brukes av den <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  id: SortParameterName
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SortParameterName
  nameWithType: SqlDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir navnet på en lagret prosedyre parameter som brukes til å sortere de hentede dataene når datahenting utføres ved hjelp av en lagret prosedyre."
  remarks: "Egenskapen SortParameterName evalueres bare når SQL kommando som finnes i den <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>egenskapen er navnet på en lagret prosedyre.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> Hvis SortParameterName-egenskapen er angitt, vil den i dette tilfellet inneholder navnet på en parameter som brukes til å sortere resultatene av den lagrede prosedyren.       Hvis den <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>angitt, er det foran egenskapen SortParameterName.</xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>       Verdien for SortParameterName er lagret i visningen tilstand."
  syntax:
    content: public string SortParameterName { get; set; }
    return:
      type: System.String
      description: "Navnet på en lagret prosedyre parameter brukes til å sortere de hentede dataene når datahenting utføres ved hjelp av en lagret prosedyre."
  overload: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hvis du vil ha en beskrivelse for dette medlemmet kan du se <xref:System.Web.UI.IStateManager.IsTrackingViewState*>.</xref:System.Web.UI.IStateManager.IsTrackingViewState*>"
  remarks: "Dette medlemmet er implementering eksplisitt grensesnitt medlem. Den kan brukes bare når den <xref:System.Web.UI.WebControls.SqlDataSourceView>forekomsten endres til den <xref:System.Web.UI.IStateManager>grensesnittet.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, hvis datakildevisningen er merket for å lagre tilstanden; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "En beskrivelse for dette medlemmet under &lt;xref:System.Web.UI.IStateManager.LoadViewState%28System.Object%29?displayProperty=fullName&gt;."
  remarks: "Dette medlemmet er implementering eksplisitt grensesnitt medlem. Den kan brukes bare når den <xref:System.Web.UI.WebControls.SqlDataSourceView>forekomsten endres til den <xref:System.Web.UI.IStateManager>grensesnittet.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: void IStateManager.LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Et objekt som representerer den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> tilstand for å gjenopprette."
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "En beskrivelse for dette medlemmet under <xref href=&quot;System.Web.UI.IStateManager.SaveViewState&quot;> </xref>."
  remarks: "Dette medlemmet er implementering eksplisitt grensesnitt medlem. Den kan brukes bare når den <xref:System.Web.UI.WebControls.SqlDataSourceView>forekomsten endres til den <xref:System.Web.UI.IStateManager>grensesnittet.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "Objektet som inneholder endringer i den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> vise tilstand; ellers, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, hvis det er ingen visningsstatusen som er knyttet til objektet."
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hvis du vil ha en beskrivelse for dette medlemmet kan du se <xref:System.Web.UI.IStateManager.TrackViewState*>.</xref:System.Web.UI.IStateManager.TrackViewState*>"
  remarks: "Dette medlemmet er implementering eksplisitt grensesnitt medlem. Den kan brukes bare når den <xref:System.Web.UI.WebControls.SqlDataSourceView>forekomsten endres til den <xref:System.Web.UI.IStateManager>grensesnittet.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: SqlDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gjør den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objekt for å spore endringer i visningsstatusen slik at endringene kan lagres i det <xref href=&quot;System.Web.UI.StateBag&quot;> </xref> objektet for kontroll og faste på tvers av forespørsler for samme side."
  syntax:
    content: protected virtual void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Utfører et oppdateringen operasjonen ved hjelp av den <> </> *> SQL streng, parametere i den <> </> *> samlingen og verdiene i den angitte <code> keys </code>, <code> values </code>, og <code> oldValues </code> samlinger."
  remarks: "Oppdateringen metodekall den <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A>metoden sending av `keys`, `values`, og `oldValues` parametere.</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> Hvis du vil ha mer informasjon, kan du se <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=fullName>.</xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked. The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is set with a parameterized SQL statement and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection. When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the Update method explicitly.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/0d500e90-6fd2-4112-8e56-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/0d500e90-6fd2-4112-8e56-_1.aspx)]"
  syntax:
    content: public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>av primærnøkler skal brukes med den <> </> *> til å utføre databaseoperasjonen oppdateringen.</xref:System.Collections.IDictionary> Hvis det er ingen nøkler som er knyttet til spørringen, eller hvis den <> </> *> er ikke en parametriserte SQL-spørring, sendes <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: values
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>av verdiene som skal brukes med den <> </> *> til å utføre databaseoperasjonen oppdateringen.</xref:System.Collections.IDictionary> Hvis det er ingen parametere som er knyttet til spørringen eller den <> </> *> er ikke en parametriserte SQL-spørring, sendes <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>som representerer de opprinnelige verdiene i databasen.</xref:System.Collections.IDictionary> Hvis det er ingen parametere som er knyttet til spørringen eller den <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>er ikke en parametriserte SQL-spørring, sendes <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>"
    return:
      type: System.Int32
      description: "En verdi som representerer antall rader oppdatert i den underliggende databasen."
  overload: System.Web.UI.WebControls.SqlDataSourceView.Update*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kan ikke opprette en tilkobling til den underliggende datakilden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*>egenskapen <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  id: UpdateCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: SqlDataSourceView.UpdateCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir SQL-strengen som den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objektet bruker til å oppdatere dataene i den underliggende databasen."
  remarks: "Fordi annen databaseprodukter bruker annen varianter SQL, syntaksen til SQL-strengen er avhengig av den gjeldende ADO.NET leverandøren som brukes, som er identifisert av den <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Hvis SQL-strengen er parametriserte spørringer eller kommandoen, avhengig plassholder for parameteren også ADO.NET-leverandøren som brukes. For eksempel hvis leverandøren av <xref:System.Data.SqlClient?displayProperty=fullName>, som er standardleverandøren for den <xref:System.Web.UI.WebControls.SqlDataSource>klassen plassholderen for parameteren er `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Men hvis leverandøren er satt til den <xref:System.Data.Odbc?displayProperty=fullName>eller <xref:System.Data.OleDb?displayProperty=fullName>, plassholderen for parameteren `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Hvis du vil ha mer informasjon om parametriserte SQL-forespørsler og kommandoer, se [ved hjelp av parametere med SqlDataSource kontrollen](~/add/includes/ajax-current-ext-md.md).       Egenskapen UpdateCommand kan være en SQL-streng eller navnet på en lagret prosedyre, hvis datakilden støtter lagrede prosedyrer.       Verdien for UpdateCommand egenskapen er lagret i visningen tilstand."
  example:
  - "This section contains two code examples. The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a Microsoft SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control. The second code example demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.GridView> control automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection, inferring the parameters from the <xref:System.Web.UI.WebControls.BoundField> objects, and calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> method when the **Update** link on the editable <xref:System.Web.UI.WebControls.GridView> control is selected. This example also includes some post-processing—after a record is updated, an e-mail message notification is sent.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1335_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1335_1.aspx)]  \n  \n The following code example, which is functionally identical to the preceding code example, demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is set to the ADO.NET provider for ODBC, the <xref:System.Data.Odbc?displayProperty=fullName>, and the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property is set to the name of an ODBC data source name (DSN).  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1335_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1335_2.aspx)]"
  syntax:
    content: public string UpdateCommand { get; set; }
    return:
      type: System.String
      description: "En SQL-streng som den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> bruker til å oppdatere dataene."
  overload: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  id: UpdateCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: UpdateCommandType
  nameWithType: SqlDataSourceView.UpdateCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir en verdi som angir om teksten i den <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>egenskapen er en SQL-setning eller navnet på en lagret prosedyre.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>"
  remarks: "Verdien for UpdateCommandType er lagret i visningen tilstand."
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "Én av de <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> verdier. Standard er det <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> verdi."
  overload: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den valgte verdien er ikke én av de <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> verdier."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updated
  id: Updated
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Updated
  nameWithType: SqlDataSourceView.Updated
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Forekommer når en oppdateringen er fullført."
  remarks: "Behandle hendelsen oppdatert for å undersøke verdiene i utdataparametere når en oppdateringen er fullført. Output-parameterne er tilgjengelig fra den <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>objektet som er forbundet med hendelsen.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Du finner mer informasjon om behandling av hendelser [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to display and update data that is retrieved from an ODBC database in a <xref:System.Web.UI.WebControls.GridView> control. After a record is successfully updated, the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event is handled by an event handler to perform a post-processing step where an e-mail message notification is sent.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_139_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_139_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  id: UpdateParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: UpdateParameters
  nameWithType: SqlDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter parameters-samlingen som inneholder parametere som brukes av den <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>"
  remarks: "Hvis den <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>egenskapen inneholder en parametriserte SQL-spørring, UpdateParameters-samlingen inneholder noen <xref:System.Web.UI.WebControls.Parameter>objekter som samsvarer med parameteren-plassholdere i SQL-streng.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>       Parameternavn kan bli påvirket av den <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>egenskap; spesielt hvis navnet identifiserer en primærnøkkel, for eksempel en nøkkel som er angitt med den `DataKeyNames` egenskapen eller Slett i og oppdatere scenarioer der den <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>er satt til den <xref:System.Web.UI.ConflictOptions>verdi og et sett med `oldValues` er sendt til den tilsvarende datametoden.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> </xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> I dette tilfellet Formatstrengen som brukes på alle parameternavn i den `oldValues` samling.       Rekkefølgen av parameterne i samlingen UpdateParameters kan være viktige avhengig ADO.NET-leverandør. Den <xref:System.Data.OleDb?displayProperty=fullName>og <xref:System.Data.Odbc?displayProperty=fullName>Leverandører knytte parameterne i samlingen i henhold til rekkefølgen parameterne vises i parametriserte SQL-spørringen.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> Den <xref:System.Data.SqlClient?displayProperty=fullName>provider som standard ADO.NET-leverandør for den <xref:System.Web.UI.WebControls.SqlDataSource>kontrollere, knytter parameterne i samlingen av samsvarer med navnet på parameteren med et alias for plassholderen i SQL-spørringen.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Hvis du vil ha mer informasjon om parametriserte SQL-forespørsler og kommandoer, se [ved hjelp av parametere med SqlDataSource kontrollen](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked. The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is set with a parameterized SQL statement, and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection. When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method explicitly.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1249_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1249_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "En <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> som inneholder parametere som brukes av den <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updating
  id: Updating
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Updating
  nameWithType: SqlDataSourceView.Updating
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Forekommer før en oppdateringsoperasjon."
  remarks: "Behandle oppdatering-hendelsen for å utføre initialisering av flere operasjoner som er spesifikke for programmet, for å validere verdiene i parametere, eller endre parameteren verdier før den <xref:System.Web.UI.WebControls.SqlDataSource>kontrollen utfører oppdateringen.</xref:System.Web.UI.WebControls.SqlDataSource>       Tilkoblingen til den underliggende datakilden, er ikke ennå åpen når hendelsen behandlingsprogrammet representanten kalles. Derfor du kan ikke avbryte operasjonen ved å kalle den <xref:System.Data.Common.DbCommand.Cancel%2A>-metoden på den <xref:System.Data.Common.DbCommand>objekt som brukes av den <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>objektet.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommand.Cancel%2A> Du kan imidlertid avbryte databaseoperasjonen ved å angi den <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>for den <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>til `true`.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Du finner mer informasjon om behandling av hendelser [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control. The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_45_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_45_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataSourceView
  isExternal: false
  name: System.Web.UI.DataSourceView
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SqlDataSourceView(SqlDataSource,String,HttpContext)
  nameWithType: SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)
- uid: System.Web.UI.WebControls.SqlDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSource
  nameWithType: SqlDataSource
  fullName: System.Web.UI.WebControls.SqlDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSourceView.CancelSelectOnNullParameter
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: SqlDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanDelete
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: SqlDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanPage
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: SqlDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanPage
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: SqlDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanSort
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: SqlDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanSort
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: SqlDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: SqlDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
- uid: System.Web.UI.ConflictOptions
  parent: System.Web.UI
  isExternal: false
  name: ConflictOptions
  nameWithType: ConflictOptions
  fullName: System.Web.UI.ConflictOptions
- uid: System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Delete(IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Delete(IDictionary,IDictionary)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommand
  nameWithType: SqlDataSourceView.DeleteCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommandType
  nameWithType: SqlDataSourceView.DeleteCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceCommandType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceCommandType
  nameWithType: SqlDataSourceCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Deleted
  nameWithType: SqlDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleted
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceStatusEventHandler
  nameWithType: SqlDataSourceStatusEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: SqlDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.ParameterCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParameterCollection
  nameWithType: ParameterCollection
  fullName: System.Web.UI.WebControls.ParameterCollection
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Deleting
  nameWithType: SqlDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleting
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceCommandEventHandler
  nameWithType: SqlDataSourceCommandEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteInsert(IDictionary)
  nameWithType: SqlDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: SqlDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.SqlDataSourceView.Filtering
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Filtering
  nameWithType: SqlDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Filtering
- uid: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceFilteringEventHandler
  nameWithType: SqlDataSourceFilteringEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: SqlDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Insert(IDictionary)
  nameWithType: SqlDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Insert(IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommand
  nameWithType: SqlDataSourceView.InsertCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommandType
  nameWithType: SqlDataSourceView.InsertCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Inserted
  nameWithType: SqlDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserted
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Inserting
  nameWithType: SqlDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserting
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: SqlDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: SqlDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: SqlDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceStatusEventArgs
  nameWithType: SqlDataSourceStatusEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceCommandEventArgs
  nameWithType: SqlDataSourceCommandEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnFiltering(SqlDataSourceFilteringEventArgs)
  nameWithType: SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceFilteringEventArgs
  nameWithType: SqlDataSourceFilteringEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelected(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelecting(SqlDataSourceSelectingEventArgs)
  nameWithType: SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceSelectingEventArgs
  nameWithType: SqlDataSourceSelectingEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdated(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdating(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ParameterPrefix
  nameWithType: SqlDataSourceView.ParameterPrefix
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
- uid: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  nameWithType: SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
- uid: System.Web.UI.DataSourceCapabilities
  parent: System.Web.UI
  isExternal: false
  name: DataSourceCapabilities
  nameWithType: DataSourceCapabilities
  fullName: System.Web.UI.DataSourceCapabilities
- uid: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SaveViewState()
  nameWithType: SqlDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Select(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Select(DataSourceSelectArguments)
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommand
  nameWithType: SqlDataSourceView.SelectCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommandType
  nameWithType: SqlDataSourceView.SelectCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selected
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Selected
  nameWithType: SqlDataSourceView.Selected
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selected
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selecting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Selecting
  nameWithType: SqlDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selecting
- uid: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceSelectingEventHandler
  nameWithType: SqlDataSourceSelectingEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: SqlDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: SqlDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: TrackViewState()
  nameWithType: SqlDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommand
  nameWithType: SqlDataSourceView.UpdateCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommandType
  nameWithType: SqlDataSourceView.UpdateCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updated
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Updated
  nameWithType: SqlDataSourceView.Updated
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updated
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: SqlDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updating
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Updating
  nameWithType: SqlDataSourceView.Updating
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updating
- uid: System.Web.UI.WebControls.SqlDataSourceView.#ctor*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SqlDataSourceView
  nameWithType: SqlDataSourceView.SqlDataSourceView
- uid: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSourceView.CancelSelectOnNullParameter
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanDelete*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: SqlDataSourceView.CanDelete
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanInsert*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: SqlDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanPage*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: SqlDataSourceView.CanPage
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: SqlDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanSort*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: SqlDataSourceView.CanSort
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: SqlDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: SqlDataSourceView.ConflictDetection
- uid: System.Web.UI.WebControls.SqlDataSourceView.Delete*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Delete
  nameWithType: SqlDataSourceView.Delete
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommand
  nameWithType: SqlDataSourceView.DeleteCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommandType
  nameWithType: SqlDataSourceView.DeleteCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: SqlDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteDelete
  nameWithType: SqlDataSourceView.ExecuteDelete
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteInsert
  nameWithType: SqlDataSourceView.ExecuteInsert
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteSelect
  nameWithType: SqlDataSourceView.ExecuteSelect
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteUpdate
  nameWithType: SqlDataSourceView.ExecuteUpdate
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: SqlDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: SqlDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.Insert*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Insert
  nameWithType: SqlDataSourceView.Insert
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommand
  nameWithType: SqlDataSourceView.InsertCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommandType
  nameWithType: SqlDataSourceView.InsertCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: SqlDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: SqlDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: LoadViewState
  nameWithType: SqlDataSourceView.LoadViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleted
  nameWithType: SqlDataSourceView.OnDeleted
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleting
  nameWithType: SqlDataSourceView.OnDeleting
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnFiltering
  nameWithType: SqlDataSourceView.OnFiltering
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserted*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserted
  nameWithType: SqlDataSourceView.OnInserted
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserting*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserting
  nameWithType: SqlDataSourceView.OnInserting
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelected*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelected
  nameWithType: SqlDataSourceView.OnSelected
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelecting
  nameWithType: SqlDataSourceView.OnSelecting
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdated
  nameWithType: SqlDataSourceView.OnUpdated
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdating
  nameWithType: SqlDataSourceView.OnUpdating
- uid: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ParameterPrefix
  nameWithType: SqlDataSourceView.ParameterPrefix
- uid: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: RaiseUnsupportedCapabilityError
  nameWithType: SqlDataSourceView.RaiseUnsupportedCapabilityError
- uid: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SaveViewState
  nameWithType: SqlDataSourceView.SaveViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.Select*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Select
  nameWithType: SqlDataSourceView.Select
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommand
  nameWithType: SqlDataSourceView.SelectCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommandType
  nameWithType: SqlDataSourceView.SelectCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: SqlDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: SqlDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: TrackViewState
  nameWithType: SqlDataSourceView.TrackViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.Update*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Update
  nameWithType: SqlDataSourceView.Update
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommand
  nameWithType: SqlDataSourceView.UpdateCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommandType
  nameWithType: SqlDataSourceView.UpdateCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: SqlDataSourceView.UpdateParameters
