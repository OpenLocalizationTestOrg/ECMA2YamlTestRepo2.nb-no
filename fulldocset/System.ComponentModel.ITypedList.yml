### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ITypedList
  id: ITypedList
  children:
  - System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  - System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])
  langs:
  - csharp
  name: ITypedList
  nameWithType: ITypedList
  fullName: System.ComponentModel.ITypedList
  type: Interface
  summary: "Inneholder funksjoner for å oppdage skjemaet for en kan bindes liste, der egenskapene som er tilgjengelige for bindingen er forskjellige fra offentlig egenskapene for objektet som skal bindes til."
  remarks: "Bruk dette grensesnittet Hvis for eksempel du bruker en <xref:System.Data.DataView>objektet som representerer en `customer` tabellen du vil skal bindes til egenskapene den `customer` objekt som <xref:System.Data.DataView>representerer ikke egenskapene for <xref:System.Data.DataView>.</xref:System.Data.DataView> </xref:System.Data.DataView> </xref:System.Data.DataView>       Dette grensesnittet kreves ikke for utforming støtte på en kan bindes liste.       Binding til data kan forekomme ved kjøretid eller i en designer, men det finnes regler for begge. Ved kjøretid, kan du binde til data i noen av følgende:- <xref:System.Array>-Implementer av <xref:System.Collections.IList>, forutsatt implementer har en forespørselsparameter av sterk type <xref:System.Collections.IList.Item%2A>egenskapen (det vil si den <xref:System.Type>er noe annet enn <xref:System.Object>).</xref:System.Object> </xref:System.Type> </xref:System.Collections.IList.Item%2A> </xref:System.Collections.IList> </xref:System.Array> Du kan gjøre dette ved å gjøre standard implementering av <xref:System.Collections.IList.Item%2A>private.</xref:System.Collections.IList.Item%2A> Hvis du vil opprette en <xref:System.Collections.IList>som følger med reglene i en forespørselsparameter av sterk type samling, du må avledes fra <xref:System.Collections.CollectionBase>.</xref:System.Collections.CollectionBase> </xref:System.Collections.IList>      -Implementer av ITypedList.       I utviklerprogrammet, kan du starte bindingen til <xref:System.ComponentModel.Component>objekter ved å følge samme regler.</xref:System.ComponentModel.Component>       Hvis du vil ha mer informasjon om binding til en datakilde, kan du se <xref:System.Windows.Forms.Binding?displayProperty=fullName>klasse.</xref:System.Windows.Forms.Binding?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to implement the ITypedList interface. A generic type named `SortableBindingList` derives from the <xref:System.ComponentModel.BindingList%601> class and implements the ITypedList interface. For a full code listing, see [How to: Implement the ITypedList Interface](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.ComponentModel.ITypedList#1](~/add/codesnippet/csharp/t-system.componentmodel._167_1.cs)]\n [!code-vb[System.ComponentModel.ITypedList#1](~/add/codesnippet/visualbasic/t-system.componentmodel._167_1.vb)]"
  syntax:
    content: public interface ITypedList
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  id: GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.ComponentModel.ITypedList
  langs:
  - csharp
  name: GetItemProperties(PropertyDescriptor[])
  nameWithType: ITypedList.GetItemProperties(PropertyDescriptor[])
  fullName: System.ComponentModel.ITypedList.GetItemProperties(PropertyDescriptor[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerer den <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> som representerer egenskapene på hvert element som brukes til å binde data."
  remarks: "Hvis den `listAccessors` -parameteren er ikke `null`, vanligvis inneholder en beskrivelse for egenskapen som identifiserer en liste over beholdere som skal hente for objektet som implementerer <xref:System.ComponentModel.ITypedList>.</xref:System.ComponentModel.ITypedList> For eksempel en <xref:System.Data.DataSet>som inneholder to tabeller, `myCustomers` og `myOrders`, med en relasjon mellom tabellene kalles `myCustOrders`.</xref:System.Data.DataSet> Hvis du oppretter en <xref:System.Data.DataView>objektet til å vise `myCustomers`, kaller metoden GetItemProperties med `null` returnerer egenskapen beskrivelser for kolonnene i `myCustomers`.</xref:System.Data.DataView> Resultatet en returnerte egenskapen beskrivelser er en beskrivelse for egenskapen for `myCustOrders`, bare som kaller metoden GetItemProperties med en liste aksessor matrise som inneholder egenskapen beskrivelser for `myCustOrders` skal returnere egenskapen beskrivelser for `myOrders`."
  example:
  - "The following code example demonstrates how to implement the GetItemProperties method. For a full code listing, see [How to: Implement the ITypedList Interface](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.ComponentModel.ITypedList#3](~/add/codesnippet/csharp/3b46cd55-3314-419e-a8e7-_1.cs)]\n [!code-vb[System.ComponentModel.ITypedList#3](~/add/codesnippet/visualbasic/3b46cd55-3314-419e-a8e7-_1.vb)]"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "En matrise av <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> objekter skal finnes i samlingen som kan bindes. Dette kan være <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Den <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> som representerer egenskapene på hvert element som brukes til å binde data."
  overload: System.ComponentModel.ITypedList.GetItemProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])
  id: GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.ComponentModel.ITypedList
  langs:
  - csharp
  name: GetListName(PropertyDescriptor[])
  nameWithType: ITypedList.GetListName(PropertyDescriptor[])
  fullName: System.ComponentModel.ITypedList.GetListName(PropertyDescriptor[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerer navnet på listen."
  remarks: "Denne metoden brukes bare i utformingen framework og av den gamle <xref:System.Windows.Forms.DataGrid>kontroll.</xref:System.Windows.Forms.DataGrid>"
  example:
  - "The following code example demonstrates how to implement the GetListName method. For a full code listing, see [How to: Implement the ITypedList Interface](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.ComponentModel.ITypedList#4](~/add/codesnippet/csharp/a1408425-c386-40d6-a339-_1.cs)]\n [!code-vb[System.ComponentModel.ITypedList#4](~/add/codesnippet/visualbasic/a1408425-c386-40d6-a339-_1.vb)]"
  syntax:
    content: public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "En matrise av <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> objekter, navnet på returneres. Dette kan være <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Navnet på listen."
  overload: System.ComponentModel.ITypedList.GetListName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.ComponentModel.ITypedList
  isExternal: false
  name: GetItemProperties(PropertyDescriptor[])
  nameWithType: ITypedList.GetItemProperties(PropertyDescriptor[])
  fullName: System.ComponentModel.ITypedList.GetItemProperties(PropertyDescriptor[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.PropertyDescriptor[]
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor[]
  spec.csharp:
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: PropertyDescriptor[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.ComponentModel.ITypedList
  isExternal: false
  name: GetListName(PropertyDescriptor[])
  nameWithType: ITypedList.GetListName(PropertyDescriptor[])
  fullName: System.ComponentModel.ITypedList.GetListName(PropertyDescriptor[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.ITypedList.GetItemProperties*
  parent: System.ComponentModel.ITypedList
  isExternal: false
  name: GetItemProperties
  nameWithType: ITypedList.GetItemProperties
- uid: System.ComponentModel.ITypedList.GetListName*
  parent: System.ComponentModel.ITypedList
  isExternal: false
  name: GetListName
  nameWithType: ITypedList.GetListName
