### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.PeerNameResolver
  id: PeerNameResolver
  children:
  - System.Net.PeerToPeer.PeerNameResolver.#ctor
  - System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)
  - System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)
  - System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)
  - System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)
  - System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)
  - System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted
  - System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged
  langs:
  - csharp
  name: PeerNameResolver
  nameWithType: PeerNameResolver
  fullName: System.Net.PeerToPeer.PeerNameResolver
  type: Class
  summary: "Angir verdiene som løse en <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> til en <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> ved hjelp av PNRP Namespace leverandøren API-protokollen."
  remarks: "En <xref:System.Net.PeerToPeer.PeerNameRecord>som inneholder all informasjon for den <xref:System.Net.PeerToPeer.PeerName>som er publisert i den <xref:System.Net.PeerToPeer.Cloud>eller cloud(s) ble spørres under prosessen Løs.</xref:System.Net.PeerToPeer.Cloud> </xref:System.Net.PeerToPeer.PeerName> </xref:System.Net.PeerToPeer.PeerNameRecord>"
  syntax:
    content: public class PeerNameResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.#ctor
  id: '#ctor'
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: PeerNameResolver()
  nameWithType: PeerNameResolver.PeerNameResolver()
  fullName: System.Net.PeerToPeer.PeerNameResolver.PeerNameResolver()
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Initialiserer en ny standardforekomst av den <xref href=&quot;System.Net.PeerToPeer.PeerNameResolver&quot;> </xref> klasse."
  remarks: "Når du har løst er en <xref:System.Net.PeerToPeer.PeerName>, <xref:System.Net.PeerToPeer.PeerNameRecord>inneholder all informasjon for den angitte <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A>som er publisert i cloud(s) ble spørres under den <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>operasjonen.</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> </xref:System.Net.PeerToPeer.PeerNameRecord> </xref:System.Net.PeerToPeer.PeerName>"
  syntax:
    content: public PeerNameResolver ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)
  id: OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: OnResolveCompleted(ResolveCompletedEventArgs)
  nameWithType: PeerNameResolver.OnResolveCompleted(ResolveCompletedEventArgs)
  fullName: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(ResolveCompletedEventArgs)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Returnerer peer oppløsning data etter den <xref href=&quot;System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&quot;> </xref> hendelsen skjer."
  remarks: "Denne metoden er en asynkron tilbakeringing som brukes til å behandle peer name oppløsning data når node oppløsning er fullført.       Avledede typer kan overstyre denne metoden for å utføre flere aktiviteter når den <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>denne hendelsen oppstår av node Løsningsprogrammet objektet.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: protected void OnResolveCompleted (System.Net.PeerToPeer.ResolveCompletedEventArgs e);
    parameters:
    - id: e
      type: System.Net.PeerToPeer.ResolveCompletedEventArgs
      description: "Den <xref href=&quot;System.Net.PeerToPeer.ResolveCompletedEventArgs&quot;> </xref> objekt som inneholder data som returneres av den <xref href=&quot;System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&quot;> </xref> hendelsen."
  overload: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)
  id: OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: OnResolveProgressChanged(ResolveProgressChangedEventArgs)
  nameWithType: PeerNameResolver.OnResolveProgressChanged(ResolveProgressChangedEventArgs)
  fullName: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(ResolveProgressChangedEventArgs)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Returnerer peer oppløsning pågår data når den <xref href=&quot;System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&quot;> </xref> hendelsen skjer."
  remarks: "Denne metoden er en asynkron tilbakeringing som brukes til å behandle node oppløsning data etter har blitt forespurt node oppløsning pågår.       Avledede typer kan overstyre denne metoden for å utføre flere aktiviteter når den <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>inntreffer.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>"
  syntax:
    content: protected void OnResolveProgressChanged (System.Net.PeerToPeer.ResolveProgressChangedEventArgs e);
    parameters:
    - id: e
      type: System.Net.PeerToPeer.ResolveProgressChangedEventArgs
      description: "<xref href=&quot;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&quot;></xref>objektet som inneholder node pågår informasjon om returnert av den <xref href=&quot;System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&quot;> </xref> hendelsen."
  overload: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)
  id: Resolve(System.Net.PeerToPeer.PeerName)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: Resolve(PeerName)
  nameWithType: PeerNameResolver.Resolve(PeerName)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Løser angitt <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> i alle skyer kall motparten er kjent."
  remarks: "Denne metoden knytter et nodenavn til skyer. Alle skyer bli bedt om for <xref:System.Net.PeerToPeer.PeerName>.</xref:System.Net.PeerToPeer.PeerName> Hvis nodenavn ikke kan løses eller `null`, en <xref:System.Net.PeerToPeer.PeerToPeerException>forårsakes.</xref:System.Net.PeerToPeer.PeerToPeerException>       For usikker nodenavn navnet kan være registrert (og tilknyttet annet endepunkt) av forskjellige motpartene i samme skyen.       Kaller <xref:System.Net.PeerToPeer.PeerNameResolver>metoden er lik <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>metode for hver peer name post i <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</xref:System.Net.PeerToPeer.PeerNameRecordCollection> </xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameResolver> Legg merke til at bruker Løs-metoden i en enkelt node navnepost ikke opphever løsning flere nodenavn.       For hver <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>metoden, er det en tilsvarende <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>metode.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>  Deres parameterlister er identiske, bortsett fra at metoden ResolveAsync inkluderer en systemtoken for asynkrone hendelseshåndtering.       Hvis den <xref:System.Net.PeerToPeer.Cloud>parameteren er ikke angitt, metoden bruker den <xref:System.Net.PeerToPeer.Cloud.Available>snarvei til å fylle i skyen parametere.</xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.Cloud>       Den <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>hendelse kan oppstå hvis Løs-operasjonen er fullført med feil eller er avbrutt.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  example:
  - "The following code example illustrates how to resolve a <xref:System.Net.PeerToPeer.PeerName> published in any <xref:System.Net.PeerToPeer.Cloud>.  \n  \n [!code-cs[NCLPNRPPeerNameResolver#1](~/add/codesnippet/csharp/m-system.net.peertopeer._2_1.cs)]"
  syntax:
    content: public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "Den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> å løse."
    return:
      type: System.Net.PeerToPeer.PeerNameRecordCollection
      description: "En <xref href=&quot;System.Net.PeerToPeer.PeerNameRecordCollection&quot;> </xref> som inneholder alle peer name poster (representert som <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> objekter) som er forbundet med det angitte nodenavnet. For usikker nodenavn samme <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> kan registreres av ulike brukere i samme <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>, og som er forbundet med ulike endepunkt."
  overload: System.Net.PeerToPeer.PeerNameResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>peerName</code> parameter is set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "Angitt nodenavn kan ikke løses."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)
  id: Resolve(System.Net.PeerToPeer.PeerName,System.Int32)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: Resolve(PeerName,Int32)
  nameWithType: PeerNameResolver.Resolve(PeerName,Int32)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Int32)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Løser angitte nodenavn i alle skyer kjent kall motparten, returnerer ingen flere enn det angitte antallet <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> objekter."
  remarks: "Denne metoden knytter et nodenavn til skyer. Alle skyer bli bedt om for nodenavn. Node-navnet for usikker nodenavn kan registreres av ulike brukere i samme <xref:System.Net.PeerToPeer.Cloud>, og som er forbundet med ulike endepunkt.</xref:System.Net.PeerToPeer.Cloud> Hvis den <xref:System.Net.PeerToPeer.PeerName>kan ikke løse (for eksempel nodenavn er ikke er publisert) en <xref:System.Net.PeerToPeer.PeerToPeerException>forårsakes.</xref:System.Net.PeerToPeer.PeerToPeerException> </xref:System.Net.PeerToPeer.PeerName>       For hver <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>metoden, er det en tilsvarende <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>metode.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>  Deres parameterlister er identiske, bortsett fra at metoden ResolveAsync inkluderer en systemtoken for asynkrone hendelseshåndtering.       Den <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>hendelse kan oppstå hvis Løs-operasjonen er fullført med feil eller er avbrutt.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, int maxRecords);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "Den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> å løse."
    - id: maxRecords
      type: System.Int32
      description: "Maksimalt antall <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> skal hente fra alle <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> objekter for den angitte `peerName`."
    return:
      type: System.Net.PeerToPeer.PeerNameRecordCollection
      description: "En <xref href=&quot;System.Net.PeerToPeer.PeerNameRecordCollection&quot;> </xref> størrelse er mindre enn eller lik <code> maxRecords </code> oppføringer. Denne samlingen inneholder peer name poster knyttet til den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> som ble løst."
  overload: System.Net.PeerToPeer.PeerNameResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>peerName</code> parameter is set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den <code> maxRecords </code> parameteren er mindre enn eller lik null."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "Kan ikke løse det angitte nodenavnet."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)
  id: Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: Resolve(PeerName,Cloud)
  nameWithType: PeerNameResolver.Resolve(PeerName,Cloud)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Cloud)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Løser angitt <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>i det angitte <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>.</xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>"
  remarks: "Hvis den <xref:System.Net.PeerToPeer.PeerName>kan ikke løse (det vil si at nodenavn ikke er publisert) en <xref:System.Net.PeerToPeer.PeerToPeerException>forårsakes.</xref:System.Net.PeerToPeer.PeerToPeerException> </xref:System.Net.PeerToPeer.PeerName>       For usikker nodenavn navnet kan være registrert (og tilknyttet annet endepunkt) av forskjellige motpartene i samme skyen.       For hver <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>metoden, er det en tilsvarende <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>metode.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>  Deres parameterlister er identiske, bortsett fra at metoden ResolveAsync inkluderer en systemtoken for asynkrone hendelseshåndtering.       Hvis den <xref:System.Net.PeerToPeer.Cloud>parameteren er `null`, <xref:System.Net.PeerToPeer.PeerNameResolver>bruker den <xref:System.Net.PeerToPeer.Cloud.Available>snarvei å fylle ut den <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, og <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.PeerNameResolver> </xref:System.Net.PeerToPeer.Cloud>       Den <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>hendelse kan oppstå hvis Løs-operasjonen er fullført med feil eller er avbrutt.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "Den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> å løse."
    - id: cloud
      type: System.Net.PeerToPeer.Cloud
      description: "Den <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> der du vil løse nodenavn."
    return:
      type: System.Net.PeerToPeer.PeerNameRecordCollection
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerNameRecordCollection&quot;></xref>som inneholder alle peer name poster (representert som <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> objekter) som er forbundet med det angitte nodenavnet. For usikker nodenavn samme <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> kan registreres av ulike brukere i samme <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>, og som er forbundet med ulike endepunkt."
  overload: System.Net.PeerToPeer.PeerNameResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>peerName</code> parameter is set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "Kan ikke løse det angitte nodenavnet."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)
  id: Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: Resolve(PeerName,Cloud,Int32)
  nameWithType: PeerNameResolver.Resolve(PeerName,Cloud,Int32)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Cloud,Int32)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Løser angitt <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>i det angitte <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>, returnerer ingen flere enn det angitte antallet <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> objekter.</xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>"
  remarks: "For usikker nodenavn navnet kan være registrert (og tilknyttet annet endepunkt) av forskjellige motpartene i samme skyen. Hvis nodenavn kan ikke løses en <xref:System.Net.PeerToPeer.PeerToPeerException>forårsakes.</xref:System.Net.PeerToPeer.PeerToPeerException>       For hver <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>metoden, er det en tilsvarende <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>metode.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>  Deres parameterlister er identiske, bortsett fra at metoden ResolveAsync inkluderer en systemtoken for asynkrone hendelseshåndtering.       Hvis den <xref:System.Net.PeerToPeer.Cloud>parameteren er `null`, <xref:System.Net.PeerToPeer.PeerNameResolver>bruker den <xref:System.Net.PeerToPeer.Cloud.Available>snarvei å fylle ut den <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, og <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.PeerNameResolver> </xref:System.Net.PeerToPeer.Cloud>       Den <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>hendelse kan oppstå hvis Løs-operasjonen er fullført med feil eller er avbrutt.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "Den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> å løse."
    - id: cloud
      type: System.Net.PeerToPeer.Cloud
      description: "Den <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> som du skal løse den `peerName`."
    - id: maxRecords
      type: System.Int32
      description: "Det maksimale antallet node navnet post som skal hente fra angitte skyen for den angitte `peerName`."
    return:
      type: System.Net.PeerToPeer.PeerNameRecordCollection
      description: "En <xref href=&quot;System.Net.PeerToPeer.PeerNameRecordCollection&quot;> </xref> størrelse er mindre enn eller lik <code> maxRecords </code> oppføringer. Denne samlingen inneholder peer name poster knyttet til den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> som ble løst."
  overload: System.Net.PeerToPeer.PeerNameResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>peerName</code> parameter is set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den <code> maxRecords </code> parameteren er mindre enn eller lik null."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "Kan ikke løse det angitte nodenavnet."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)
  id: ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveAsync(PeerName,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Starter en asynkron node navnet oppløsning operasjon for den angitte <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>i alle skyer kall motparten er kjent.</xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>"
  remarks: "Denne metoden knytter asynkront et nodenavn til skyer. Alle skyer bli bedt om for <xref:System.Net.PeerToPeer.PeerName>.</xref:System.Net.PeerToPeer.PeerName> Den opphøyer den <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>som kaller tilbake til den <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>metoden.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Eller den opphøyer den <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>som kaller tilbake til den <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>metoden.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>       Hvis nodenavn kan ikke løses en <xref:System.Net.PeerToPeer.PeerToPeerException>forårsakes.</xref:System.Net.PeerToPeer.PeerToPeerException>       For usikker nodenavn navnet kan være registrert (og tilknyttet annet endepunkt) av forskjellige motpartene i samme skyen.       Kaller <xref:System.Net.PeerToPeer.PeerNameResolver>metoden er lik <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>metode for hver peer name post i <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</xref:System.Net.PeerToPeer.PeerNameRecordCollection> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> </xref:System.Net.PeerToPeer.PeerNameResolver> Legg merke til at bruker Løs-metoden i en enkelt node navnepost ikke opphever løsning flere nodenavn.       For hver <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>metoden, er det en tilsvarende <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>metode.</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>  Deres parameterlister er identiske, bortsett fra at metoden ResolveAsync inkluderer en systemtoken for asynkrone hendelseshåndtering, og metoden Løs er ment for synkron behandling.       Alle asynkrone referanser til løsningsprogrammet-objektet er koordinert med en unik identifikator-token. Dette `userState` token eller melding identifikator tillater et operativsystem for å levere en melding til én enkelt mottak prosess når meldingen er plassert i meldingskøen.       Den <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>hendelse kan oppstå hvis Løs-operasjonen er fullført med feil eller er avbrutt.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, object userState);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "Den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> å løse."
    - id: userState
      type: System.Object
      description: "En brukerdefinert objekt som inneholder statusinformasjon om peer name oppløsning operasjonen."
  overload: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En eller begge av den <code> peerName </code> og <code> userState </code> parametere er satt til <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)
  id: ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveAsync(PeerName,Int32,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Int32,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Int32,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Starter en asynkron node navnet oppløsning operasjon for den angitte <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> i alle skyer kjent kall node, returnerer ingen flere <code> maxRecords </code> etter nodenavn."
  remarks: "Denne metoden knytter asynkront et nodenavn til skyer. Alle skyer bli bedt om for <xref:System.Net.PeerToPeer.PeerName>.</xref:System.Net.PeerToPeer.PeerName> For usikker nodenavn navnet kan være registrert (og tilknyttet annet endepunkt) av forskjellige motpartene i samme skyen. Hvis nodenavn ikke kan løses eller `null`, en <xref:System.Net.PeerToPeer.PeerToPeerException>forårsakes.</xref:System.Net.PeerToPeer.PeerToPeerException>       Denne metoden opphøyer den <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>som kaller tilbake til den <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>metoden.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Eller den opphøyer den <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>som kaller tilbake til den <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>metoden.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>       For hver <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>metoden, er det en tilsvarende <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>metode.</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>  Deres parameterlister er identiske, bortsett fra at metoden ResolveAsync inkluderer en systemtoken for asynkrone hendelseshåndtering, og metoden Løs er ment for synkron behandling.       Alle asynkrone referanser til løsningsprogrammet-objektet er koordinert med en unik identifikator token <xref:System.Object>.</xref:System.Object> Dette `userState` token eller melding identifikator tillater et operativsystem for å levere en melding til én enkelt mottak prosess når meldingen er plassert i meldingskøen.       Den <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>hendelse kan oppstå hvis Løs-operasjonen er fullført med feil eller er avbrutt.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, int maxRecords, object userState);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "Den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> å løse."
    - id: maxRecords
      type: System.Int32
      description: "Maksimalt antall oppføringer som kan hente for nodenavn."
    - id: userState
      type: System.Object
      description: "Et brukerdefinert objekt som inneholder informasjon om Løs-operasjonen."
  overload: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En eller begge av den <code> peerName </code> og <code> userState </code> parametere er satt til <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den <code> maxRecords </code> parameteren er mindre enn eller lik null."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)
  id: ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveAsync(PeerName,Cloud,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Cloud,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Cloud,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Starter en asynkron node navnet oppløsning operasjon for den angitte <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> i det angitte <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>."
  remarks: "Denne metoden opphøyer den <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>som kaller tilbake til den <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>metoden.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Eller den opphøyer den <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>som kaller tilbake til den <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>metoden.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>       For usikker nodenavn navnet kan være registrert (og tilknyttet annet endepunkt) av forskjellige motpartene i samme skyen.       Hvis den <xref:System.Net.PeerToPeer.Cloud>parameteren er `null`, navnet løses ved hjelp av den <xref:System.Net.PeerToPeer.Cloud.Available>snarvei som initialiserer standardverdier for den <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, og <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>Egenskaper.</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.Cloud>       For hver <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>metoden, er det en tilsvarende <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>metode.</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>  Deres parameterlister er identiske, bortsett fra at metoden ResolveAsync inkluderer en systemtoken for asynkrone hendelseshåndtering, og metoden Løs er ment for synkron behandling.       Alle asynkrone referanser til løsningsprogrammet-objektet er koordinert med en unik identifikator-token. Dette `userState` token eller melding identifikator tillater et operativsystem for å levere en melding til én enkelt mottak prosess når meldingen er plassert i meldingskøen.       Den <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>hendelse kan oppstå hvis Løs-operasjonen er fullført med feil eller er avbrutt.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, object userState);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "Den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> å løse."
    - id: cloud
      type: System.Net.PeerToPeer.Cloud
      description: "Den <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> som du skal løse den `peerName`."
    - id: userState
      type: System.Object
      description: "En brukerdefinert <xref:System.Object>som inneholder informasjon om peer name oppløsning operasjonen.</xref:System.Object>"
  overload: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En eller begge av den <code> peerName </code> og <code> userState </code> parametere er satt til <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)
  id: ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveAsync(PeerName,Cloud,Int32,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Cloud,Int32,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Cloud,Int32,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Starter en asynkron node navnet oppløsning operasjon for den angitte <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> i det angitte <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>.  Operasjonen oppløsning løse Nei over <code> maxRecords </code> etter det angitte nodenavnet."
  remarks: "For usikker nodenavn navnet kan være registrert (og tilknyttet annet endepunkt) av forskjellige motpartene i samme skyen.       Denne metoden opphøyer den <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>som kaller tilbake til den <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>metoden.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Eller den opphøyer den <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>som kaller tilbake til den <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>metoden.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>       Hvis den <xref:System.Net.PeerToPeer.Cloud>parameteren er `null`, navnet løses ved hjelp av den <xref:System.Net.PeerToPeer.Cloud.Available>snarvei som initialiserer standardverdier for den <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, og <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>Egenskaper.</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.Cloud>       For hver <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>metoden, er det en tilsvarende <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>metode.</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>  Deres parameterlister er identiske, bortsett fra at metoden ResolveAsync inkluderer en systemtoken for asynkrone hendelseshåndtering, og metoden Løs er ment for synkron behandling.       Alle asynkrone referanser til node Løsningsprogrammet objektet er koordinert med en unik identifikator token <xref:System.Object>.</xref:System.Object> Dette `userState` token eller melding identifikator tillater et operativsystem for å levere en melding til én enkelt mottak prosess når meldingen er plassert i meldingskøen.       Den <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>hendelse kan oppstå hvis Løs-operasjonen er fullført med feil eller er avbrutt.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords, object userState);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "Den `peerName` å løse."
    - id: cloud
      type: System.Net.PeerToPeer.Cloud
      description: "Den `cloud` der du vil løse `peerName`."
    - id: maxRecords
      type: System.Int32
      description: "Maksimalt antall oppføringer som kan hente fra `cloud` for `peerName`."
    - id: userState
      type: System.Object
      description: "Et brukerdefinert objekt som inneholder informasjon om peer name oppløsning operasjonen."
  overload: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En eller begge av den <code> peerName </code> og <code> userState </code> parametere er satt til <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Én eller flere angitte parametere er ugyldig."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "Fullføring av denne operasjonen krever minst én hendelsesbehandlingen."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den <code> maxRecords </code> parameteren er mindre enn eller lik null."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)
  id: ResolveAsyncCancel(System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveAsyncCancel(Object)
  nameWithType: PeerNameResolver.ResolveAsyncCancel(Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Avbryter angitte asynkrone node navnet oppløsning forespørselen."
  remarks: "Kaller denne metoden garanterer systemet ikke vil prøve å få flere poster for den angitte <xref:System.Net.PeerToPeer.PeerName>.</xref:System.Net.PeerToPeer.PeerName>  Hvis denne metoden kalles når en asynkron node navnet oppløsning operasjon er utestående, den fungerer som en &quot;Ingen operasjon&quot; (Nei OP).       Den `userState` objekt må angis fordi den brukes til å finne et bestemt asynkrone kall når flere kall pågår. Oppkalleren angitt objektet er unik for hver peer name oppløsning forespørsel.       Denne metoden tilbakestiller umiddelbart, men operasjonen kan eller kan ikke avbryte umiddelbart. Argumentene hendelsen ble returnert av den <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>hendelsen inneholder et felt som kan bli forespurt av klienter til å bestemme om avbryte oppstod.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>       Kaller denne metoden sikrer at hendelsen ResolveCompleted signaliseres så snart som mulig med argumentet hendelsen <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A>satt til `true`.</xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A>"
  syntax:
    content: public void ResolveAsyncCancel (object userState);
    parameters:
    - id: userState
      type: System.Object
      description: "Objektet som er angitt i <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*>metoden-forekomst som startet operasjonen Løs.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*>"
  overload: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <code> userState </code> parametere kan ikke være <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted
  id: ResolveCompleted
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveCompleted
  nameWithType: PeerNameResolver.ResolveCompleted
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Hendelsen ResolveCompleted angis når en node navnet oppløsning forespørsel om en bestemt <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>er fullført.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  remarks: "Den <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>hendelsen vil være opp én gang for hvert endepunkt som er funnet, og denne hendelsen vil oppstå når når alle endepunkt er funnet.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>       Denne hendelsen vil også oppstå hvis den <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>operasjonen er fullført med feil eller er avbrutt.</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>"
  syntax:
    content: public event EventHandler<System.Net.PeerToPeer.ResolveCompletedEventArgs> ResolveCompleted;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.ResolveCompletedEventArgs}
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged
  id: ResolveProgressChanged
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveProgressChanged
  nameWithType: PeerNameResolver.ResolveProgressChanged
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Denne hendelsen signalisert når en <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> -objekt funnet i svaret på en <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*>operasjonen for en bestemt <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*>"
  remarks: "Hvis flere <xref:System.Net.PeerToPeer.PeerName>objekter finnes i cloud(s) som spørres, denne hendelsen er angis én gang for hver <xref:System.Net.PeerToPeer.PeerNameRecord>funnet.</xref:System.Net.PeerToPeer.PeerNameRecord> </xref:System.Net.PeerToPeer.PeerName>"
  syntax:
    content: public event EventHandler<System.Net.PeerToPeer.ResolveProgressChangedEventArgs> ResolveProgressChanged;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.ResolveProgressChangedEventArgs}
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.PeerToPeer.PeerToPeerException
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerToPeerException
  nameWithType: PeerToPeerException
  fullName: System.Net.PeerToPeer.PeerToPeerException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.PeerToPeer.PeerNameResolver.#ctor
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: PeerNameResolver()
  nameWithType: PeerNameResolver.PeerNameResolver()
  fullName: System.Net.PeerToPeer.PeerNameResolver.PeerNameResolver()
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: OnResolveCompleted(ResolveCompletedEventArgs)
  nameWithType: PeerNameResolver.OnResolveCompleted(ResolveCompletedEventArgs)
  fullName: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(ResolveCompletedEventArgs)
- uid: System.Net.PeerToPeer.ResolveCompletedEventArgs
  parent: System.Net.PeerToPeer
  isExternal: false
  name: ResolveCompletedEventArgs
  nameWithType: ResolveCompletedEventArgs
  fullName: System.Net.PeerToPeer.ResolveCompletedEventArgs
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: OnResolveProgressChanged(ResolveProgressChangedEventArgs)
  nameWithType: PeerNameResolver.OnResolveProgressChanged(ResolveProgressChangedEventArgs)
  fullName: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(ResolveProgressChangedEventArgs)
- uid: System.Net.PeerToPeer.ResolveProgressChangedEventArgs
  parent: System.Net.PeerToPeer
  isExternal: false
  name: ResolveProgressChangedEventArgs
  nameWithType: ResolveProgressChangedEventArgs
  fullName: System.Net.PeerToPeer.ResolveProgressChangedEventArgs
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: Resolve(PeerName)
  nameWithType: PeerNameResolver.Resolve(PeerName)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName)
- uid: System.Net.PeerToPeer.PeerNameRecordCollection
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerNameRecordCollection
  nameWithType: PeerNameRecordCollection
  fullName: System.Net.PeerToPeer.PeerNameRecordCollection
- uid: System.Net.PeerToPeer.PeerName
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerName
  nameWithType: PeerName
  fullName: System.Net.PeerToPeer.PeerName
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: Resolve(PeerName,Int32)
  nameWithType: PeerNameResolver.Resolve(PeerName,Int32)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: Resolve(PeerName,Cloud)
  nameWithType: PeerNameResolver.Resolve(PeerName,Cloud)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Cloud)
- uid: System.Net.PeerToPeer.Cloud
  parent: System.Net.PeerToPeer
  isExternal: false
  name: Cloud
  nameWithType: Cloud
  fullName: System.Net.PeerToPeer.Cloud
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: Resolve(PeerName,Cloud,Int32)
  nameWithType: PeerNameResolver.Resolve(PeerName,Cloud,Int32)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Cloud,Int32)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsync(PeerName,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Object)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsync(PeerName,Int32,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Int32,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Int32,Object)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsync(PeerName,Cloud,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Cloud,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Cloud,Object)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsync(PeerName,Cloud,Int32,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Cloud,Int32,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Cloud,Int32,Object)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsyncCancel(Object)
  nameWithType: PeerNameResolver.ResolveAsyncCancel(Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(Object)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveCompleted
  nameWithType: PeerNameResolver.ResolveCompleted
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted
- uid: System.EventHandler{System.Net.PeerToPeer.ResolveCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ResolveCompletedEventArgs>
  nameWithType: EventHandler<ResolveCompletedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.ResolveCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.ResolveCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.ResolveCompletedEventArgs
    name: ResolveCompletedEventArgs
    nameWithType: ResolveCompletedEventArgs
    fullName: ResolveCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveProgressChanged
  nameWithType: PeerNameResolver.ResolveProgressChanged
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged
- uid: System.EventHandler{System.Net.PeerToPeer.ResolveProgressChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ResolveProgressChangedEventArgs>
  nameWithType: EventHandler<ResolveProgressChangedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.ResolveProgressChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.ResolveProgressChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.ResolveProgressChangedEventArgs
    name: ResolveProgressChangedEventArgs
    nameWithType: ResolveProgressChangedEventArgs
    fullName: ResolveProgressChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.PeerNameResolver.#ctor*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: PeerNameResolver
  nameWithType: PeerNameResolver.PeerNameResolver
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: OnResolveCompleted
  nameWithType: PeerNameResolver.OnResolveCompleted
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: OnResolveProgressChanged
  nameWithType: PeerNameResolver.OnResolveProgressChanged
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: Resolve
  nameWithType: PeerNameResolver.Resolve
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsync
  nameWithType: PeerNameResolver.ResolveAsync
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsyncCancel
  nameWithType: PeerNameResolver.ResolveAsyncCancel
