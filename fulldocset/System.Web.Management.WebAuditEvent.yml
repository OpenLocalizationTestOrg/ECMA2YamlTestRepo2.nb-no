### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebAuditEvent
  id: WebAuditEvent
  children:
  - System.Web.Management.WebAuditEvent.#ctor(System.String,System.Object,System.Int32)
  - System.Web.Management.WebAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  - System.Web.Management.WebAuditEvent.RequestInformation
  langs:
  - csharp
  name: WebAuditEvent
  nameWithType: WebAuditEvent
  fullName: System.Web.Management.WebAuditEvent
  type: Class
  summary: "Fungerer som basisklasse for alle ASP.NET-helseovervåking overvåkingshendelser."
  remarks: "ASP.NET helseovervåking gjør det mulig for produksjon og operasjoner for å behandle distribuert webprogrammer. Den <xref:System.Web.Management>navneområdet inneholder health-hendelsestypene ansvarlig for pakke-tilstandsstatusen programdata og leverandøren-typer som er ansvarlig for å behandle disse dataene.</xref:System.Web.Management> Det inneholder støttet typer som hjelper under behandling av hendelser for tilstanden.       Klassen WebAuditEvent er basisklasse ASP.NET-helseovervåking-hendelse klasser som er avledet fra som. Overvåkingshendelser generere informasjon om sikkerhetsrelaterte operasjoner i et webprogram, og angi en vellykket og mislykket hendelse for hver overvåkede operasjon.       Helseovervåking systemet kan overvåke både vellykkede og mislykkede hendelser, noe som betyr at et program kan overvåkes for både normal og betingelse. Som standard registreres bare overvåkingshendelser feil.       Følgende operasjoner overvåkes av ASP.NET, og kan generere overvåkingshendelser for vellykket eller mislykket-helseovervåking:-påloggingsforsøk gjort av brukere av en ASP.NET-programmet. Hvis du vil ha mer informasjon om denne kontroll, se <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>og <xref:System.Web.Management.WebSuccessAuditEvent>.</xref:System.Web.Management.WebSuccessAuditEvent> </xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>      -Det kan sikkerhetsrelaterte hendelser, for eksempel mislykkede godkjenninger, forsøk på tilgang til ressursen og andre sikkerhetsrelaterte hendelser. Loggen for disse hendelsene kan være nyttig når undersøker en inntrenging eller skade på programmet. Ingen støtte for overvåking er angitt til godkjenning mislyktes for anonyme brukere som standard. Hendelsen kontrollerer for mer informasjon om feilen, kan du se <xref:System.Web.Management.WebAuthenticationFailureAuditEvent>og <xref:System.Web.Management.WebFailureAuditEvent>.</xref:System.Web.Management.WebFailureAuditEvent> </xref:System.Web.Management.WebAuthenticationFailureAuditEvent>      -Egendefinerte hendelser utløst av en ASP.NET-programmet. Du kan overvåke egendefinerte hendelser ved å utvide funksjonaliteten i klassen WebAuditEvent og avledede klasser > [!NOTE] > i de fleste tilfeller vil du ikke kunne bruke ASP.NET-helseovervåking typene som implementert, og du vil kontrollere helseovervåking systemet ved å angi verdiene i den `healthMonitoring` konfigurasjonsdelen. Du kan også utledet fra typen helseovervåking til å opprette dine egne egendefinerte hendelser og leverandører. Et eksempel på avledet fra klassen WebAuditEvent, kan du se eksemplet angitt i dette emnet."
  example:
  - "The following code example shows how to derive from the WebAuditEvent class to create a custom audit event.  \n  \n [!code-cs[System.Web.Management.WebAuditEvent#1](~/add/codesnippet/csharp/t-system.web.management._1_1.cs)]\n [!code-vb[System.Web.Management.WebAuditEvent#1](~/add/codesnippet/visualbasic/t-system.web.management._1_1.vb)]  \n  \n The following is an excerpt of the configuration file that enables ASP.NET to use the event.  \n  \n```  \n<healthMonitoring   \n  enabled=\"true\"  \n  heartBeatInterval=\"0\">   \n  \n  <providers>  \n    <add name=\"EventLogProvider\"   \n      type=\"System.Web.Management.EventLogWebEventProvider,  \n      System.Web,Version=2.0.3600.0,Culture=neutral,  \n      PublicKeyToken=b03f5f7f11d50a3a\"/>  \n  </providers>  \n  \n  <eventMappings>  \n    <add  name=\"SampleWebAuditEvent\"   \n      type=\"SamplesAspNet.SampleWebAuditEvent,  \n      webauditevent,Version=1.0.1663.31140,   \n      Culture=neutral,   \n      PublicKeyToken=0d1fa0f69d94de96,   \n      processorArchitecture=MSIL\"/>  \n  </eventMappings>  \n  \n  <rules>  \n    <add name=\"Custom Audit Default\"  \n      eventName=\"SampleWebAuditEvent\"  \n      provider=\"EventLogProvider\"  \n      profile=\"Default\"/>    \n  </rules>  \n  \n</healthMonitoring>  \n```"
  syntax:
    content: 'public class WebAuditEvent : System.Web.Management.WebManagementEvent'
  inheritance:
  - System.Object
  - System.Web.Management.WebBaseEvent
  - System.Web.Management.WebManagementEvent
  implements: []
  inheritedMembers:
  - System.Web.Management.WebBaseEvent.ApplicationInformation
  - System.Web.Management.WebBaseEvent.EventCode
  - System.Web.Management.WebBaseEvent.EventDetailCode
  - System.Web.Management.WebBaseEvent.EventID
  - System.Web.Management.WebBaseEvent.EventOccurrence
  - System.Web.Management.WebBaseEvent.EventSequence
  - System.Web.Management.WebBaseEvent.EventSource
  - System.Web.Management.WebBaseEvent.EventTime
  - System.Web.Management.WebBaseEvent.EventTimeUtc
  - System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)
  - System.Web.Management.WebBaseEvent.IncrementPerfCounters
  - System.Web.Management.WebBaseEvent.Message
  - System.Web.Management.WebBaseEvent.Raise
  - System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)
  - System.Web.Management.WebBaseEvent.ToString
  - System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)
  - System.Web.Management.WebManagementEvent.ProcessInformation
  platform:
  - net462
- uid: System.Web.Management.WebAuditEvent.#ctor(System.String,System.Object,System.Int32)
  id: '#ctor(System.String,System.Object,System.Int32)'
  parent: System.Web.Management.WebAuditEvent
  langs:
  - csharp
  name: WebAuditEvent(String,Object,Int32)
  nameWithType: WebAuditEvent.WebAuditEvent(String,Object,Int32)
  fullName: System.Web.Management.WebAuditEvent.WebAuditEvent(String,Object,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.Management.WebAuditEvent&quot;> </xref> klasse ved hjelp av parameterne."
  remarks: "Denne konstruktøren brukes internt av ASP.NET helseovervåking systemet. Du vil aldri bruke den til å starte et <xref:System.Web.Management.WebAuditEvent>objekt, men du kan ringe denne konstruktøren ved implementering av dine egne Hendelsestype som arver fra denne klassen.</xref:System.Web.Management.WebAuditEvent>"
  example:
  - "The following code example shows how to call this constructor. This code example is part of a larger example provided for the <xref:System.Web.Management.WebAuditEvent> class.  \n  \n [!code-cs[System.Web.Management.WebAuditEvent#2](~/add/codesnippet/csharp/52e543aa-2080-4fab-ac1a-_1.cs)]\n [!code-vb[System.Web.Management.WebAuditEvent#2](~/add/codesnippet/visualbasic/52e543aa-2080-4fab-ac1a-_1.vb)]"
  syntax:
    content: protected WebAuditEvent (string message, object eventSource, int eventCode);
    parameters:
    - id: message
      type: System.String
      description: "Hendelsesbeskrivelse av."
    - id: eventSource
      type: System.Object
      description: "Objektet som er kilde for hendelsen."
    - id: eventCode
      type: System.Int32
      description: "Koden for hendelsen. Når du har implementert en egendefinert hendelse, hendelsen-koden må være større enn <xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>."
  overload: System.Web.Management.WebAuditEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Object,System.Int32,System.Int32)'
  parent: System.Web.Management.WebAuditEvent
  langs:
  - csharp
  name: WebAuditEvent(String,Object,Int32,Int32)
  nameWithType: WebAuditEvent.WebAuditEvent(String,Object,Int32,Int32)
  fullName: System.Web.Management.WebAuditEvent.WebAuditEvent(String,Object,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.Management.WebAuditEvent&quot;> </xref> klasse Hendelsesparametere."
  remarks: "Denne konstruktøren brukes internt av ASP.NET helseovervåking systemet. Du vil aldri bruke den til å starte et <xref:System.Web.Management.WebAuditEvent>objekt, men du kan ringe denne konstruktøren ved implementering av dine egne Hendelsestype som arver fra denne klassen.</xref:System.Web.Management.WebAuditEvent>"
  example:
  - "The following code example shows how to call this constructor. This code example is part of a larger example provided for the <xref:System.Web.Management.WebAuditEvent> class.  \n  \n [!code-cs[System.Web.Management.WebAuditEvent#3](~/add/codesnippet/csharp/2ea9ddd5-d72f-4e91-92b6-_1.cs)]\n [!code-vb[System.Web.Management.WebAuditEvent#3](~/add/codesnippet/visualbasic/2ea9ddd5-d72f-4e91-92b6-_1.vb)]"
  syntax:
    content: protected WebAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);
    parameters:
    - id: message
      type: System.String
      description: "Hendelsesbeskrivelse av."
    - id: eventSource
      type: System.Object
      description: "Objektet som er kilde for hendelsen."
    - id: eventCode
      type: System.Int32
      description: "Koden for hendelsen. Når du har implementert en egendefinert hendelse, hendelsen-koden må være større enn <xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>."
    - id: eventDetailCode
      type: System.Int32
      description: "Den <xref href=&quot;System.Web.Management.WebEventCodes&quot;> </xref> verdi som angir detaljert identifikatoren for hendelsen."
  overload: System.Web.Management.WebAuditEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebAuditEvent.RequestInformation
  id: RequestInformation
  parent: System.Web.Management.WebAuditEvent
  langs:
  - csharp
  name: RequestInformation
  nameWithType: WebAuditEvent.RequestInformation
  fullName: System.Web.Management.WebAuditEvent.RequestInformation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Få informasjon som er tilknyttet Web-forespørselen."
  remarks: "Bruk informasjonen fra egenskapen RequestInformation å få hjelp med oppdagelse av årsaker til en feil."
  example:
  - "The following code example shows how to obtain request information through the <xref:System.Web.Management.WebRequestInformation> property.  \n  \n [!code-cs[System.Web.Management.WebAuditEvent#5](~/add/codesnippet/csharp/p-system.web.management._14_1.cs)]\n [!code-vb[System.Web.Management.WebAuditEvent#5](~/add/codesnippet/visualbasic/p-system.web.management._14_1.vb)]"
  syntax:
    content: public System.Web.Management.WebRequestInformation RequestInformation { get; }
    return:
      type: System.Web.Management.WebRequestInformation
      description: "En <xref href=&quot;System.Web.Management.WebRequestInformation&quot;> </xref> som inneholder informasjon som er tilknyttet Web-forespørselen."
  overload: System.Web.Management.WebAuditEvent.RequestInformation*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebManagementEvent
  isExternal: false
  name: System.Web.Management.WebManagementEvent
- uid: System.Web.Management.WebAuditEvent.#ctor(System.String,System.Object,System.Int32)
  parent: System.Web.Management.WebAuditEvent
  isExternal: false
  name: WebAuditEvent(String,Object,Int32)
  nameWithType: WebAuditEvent.WebAuditEvent(String,Object,Int32)
  fullName: System.Web.Management.WebAuditEvent.WebAuditEvent(String,Object,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Management.WebAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  parent: System.Web.Management.WebAuditEvent
  isExternal: false
  name: WebAuditEvent(String,Object,Int32,Int32)
  nameWithType: WebAuditEvent.WebAuditEvent(String,Object,Int32,Int32)
  fullName: System.Web.Management.WebAuditEvent.WebAuditEvent(String,Object,Int32,Int32)
- uid: System.Web.Management.WebAuditEvent.RequestInformation
  parent: System.Web.Management.WebAuditEvent
  isExternal: false
  name: RequestInformation
  nameWithType: WebAuditEvent.RequestInformation
  fullName: System.Web.Management.WebAuditEvent.RequestInformation
- uid: System.Web.Management.WebRequestInformation
  parent: System.Web.Management
  isExternal: false
  name: WebRequestInformation
  nameWithType: WebRequestInformation
  fullName: System.Web.Management.WebRequestInformation
- uid: System.Web.Management.WebAuditEvent.#ctor*
  parent: System.Web.Management.WebAuditEvent
  isExternal: false
  name: WebAuditEvent
  nameWithType: WebAuditEvent.WebAuditEvent
- uid: System.Web.Management.WebAuditEvent.RequestInformation*
  parent: System.Web.Management.WebAuditEvent
  isExternal: false
  name: RequestInformation
  nameWithType: WebAuditEvent.RequestInformation
