### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.RegistryPermission
  id: RegistryPermission
  children:
  - System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.String)
  - System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  - System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  - System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  - System.Security.Permissions.RegistryPermission.Copy
  - System.Security.Permissions.RegistryPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)
  - System.Security.Permissions.RegistryPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.RegistryPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.RegistryPermission.IsUnrestricted
  - System.Security.Permissions.RegistryPermission.SetPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  - System.Security.Permissions.RegistryPermission.ToXml
  - System.Security.Permissions.RegistryPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: RegistryPermission
  nameWithType: RegistryPermission
  fullName: System.Security.Permissions.RegistryPermission
  type: Class
  summary: "Kontrollerer muligheten til å få tilgang til variabler i registret. Denne klassen kan ikke arves."
  remarks: "RegistryPermission beskriver beskyttede operasjoner i registret variabler. Skal ikke lagret registret variabler minne steder der kode uten RegistryPermission har tilgang til dem. Hvis registret-objektet er sendt til et uklarert oppringer kan være misbruk.       Tilgangstyper tillatte registret er definert av <xref:System.Security.Permissions.RegistryPermissionAccess>.</xref:System.Security.Permissions.RegistryPermissionAccess> Hvis mer enn én type tilgang ønskes, kan de sammen med bitvis OR-operasjon som vist i kodeeksempel som følger.       Registernøkkelen tillatelsen er definert i form kanoniske absolutte baner. sjekker må alltid gjøres med kanoniske banenavn. Nøkkelen tilgang antyder tilgang til alle verdiene i den og alle variabler under den.      > [!NOTE] > I versjoner av .NET Framework før den [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], du kan bruke den <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName>metode for å hindre utilsiktet tilgang til systemressurser av klarert kode.</xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName> <xref:System.Security.CodeAccessPermission.Deny%2A>nå er foreldet, og tilgang til ressurser bestemmes nå utelukkende av gitt tillatelse angis for en samling.</xref:System.Security.CodeAccessPermission.Deny%2A> For å begrense tilgang til filer, må du kjøre delvis klarert kode i en sandkassen, og tilordne tillatelser bare for ressurser som koden har tilgang til. Du finner informasjon om hvordan du kjører en applikasjon i en sandkassen [slik: kjøre delvis klarert kode i en sandkassen](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class RegistryPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: RegistryPermission(PermissionState)
  nameWithType: RegistryPermission.RegistryPermission(PermissionState)
  fullName: System.Security.Permissions.RegistryPermission.RegistryPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Permissions.RegistryPermission&quot;> </xref> klasse helt begrenset eller ubegrenset tilgang som er angitt."
  remarks: "Oppretter en fullstendig begrenset (`None`) eller `Unrestricted` tilgang til variabler i registret."
  example:
  - "The following code example shows the use of the RegistryPermission constructor.  \n  \n [!code-vb[System.Security.Permissions.RegistryPermission#7](~/add/codesnippet/visualbasic/85dea953-f2a8-49bc-b863-_1.vb)]\n [!code-cs[System.Security.Permissions.RegistryPermission#7](~/add/codesnippet/csharp/85dea953-f2a8-49bc-b863-_1.cs)]"
  syntax:
    content: public RegistryPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Én av de <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> verdier."
  overload: System.Security.Permissions.RegistryPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> state </code> parameteren er ikke en gyldig verdi for <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.String)
  id: '#ctor(System.Security.Permissions.RegistryPermissionAccess,System.String)'
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: RegistryPermission(RegistryPermissionAccess,String)
  nameWithType: RegistryPermission.RegistryPermission(RegistryPermissionAccess,String)
  fullName: System.Security.Permissions.RegistryPermission.RegistryPermission(RegistryPermissionAccess,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Permissions.RegistryPermission&quot;> </xref> klassen med den angitte tilgangen til de angitte registret variablene."
  remarks: "Denne konstruktøren tillater bare én av de <xref:System.Security.Permissions.RegistryPermissionAccess>verdiene som skal angis.</xref:System.Security.Permissions.RegistryPermissionAccess> Denne tilgangen gjelder for alle oppført registret variabler. Bruk <xref:System.Security.Permissions.RegistryPermission.AddPathList%2A>å definere mer kompliserte tillatelser.</xref:System.Security.Permissions.RegistryPermission.AddPathList%2A>"
  example:
  - "The following code example shows the use of the RegistryPermission constructor.  \n  \n [!code-vb[System.Security.Permissions.RegistryPermission#10](~/add/codesnippet/visualbasic/a1e0cfb2-93bc-4e55-9235-_1.vb)]\n [!code-cs[System.Security.Permissions.RegistryPermission#10](~/add/codesnippet/csharp/a1e0cfb2-93bc-4e55-9235-_1.cs)]"
  syntax:
    content: public RegistryPermission (System.Security.Permissions.RegistryPermissionAccess access, string pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.RegistryPermissionAccess
      description: "Én av de <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref> verdier."
    - id: pathList
      type: System.String
      description: "En liste over registret variabler (semikolon kommadelte) som brukeren tilgang."
  overload: System.Security.Permissions.RegistryPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> access </code> parameteren er ikke en gyldig verdi for <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>.       - eller - <code> pathList </code> parameteren er ikke en gyldig streng."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  id: '#ctor(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)'
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: RegistryPermission(RegistryPermissionAccess,AccessControlActions,String)
  nameWithType: RegistryPermission.RegistryPermission(RegistryPermissionAccess,AccessControlActions,String)
  fullName: System.Security.Permissions.RegistryPermission.RegistryPermission(RegistryPermissionAccess,AccessControlActions,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Permissions.RegistryPermission&quot;> </xref> klassen med den angitte tilgangen til de angitte registret variablene og angitte tilgangsrettigheter til informasjonen i registeret kontrollen."
  remarks: "Denne konstruktøren tillater bare én av de <xref:System.Security.Permissions.RegistryPermissionAccess>verdiene som skal angis.</xref:System.Security.Permissions.RegistryPermissionAccess> Denne tilgangen gjelder for alle oppført registret variabler. Bruk <xref:System.Security.Permissions.RegistryPermission.AddPathList%2A>å definere mer kompliserte tillatelser.</xref:System.Security.Permissions.RegistryPermission.AddPathList%2A>       Den `control` parameteren angir om tilgangskontroll listen (ACL) for registernøkler som er angitt av `pathList` kan endres, vises, eller er ikke tilgjengelig.      > [!IMPORTANT] > En tilgangskontrolliste (ACL) som beskriver personer eller grupper som har, eller har ikke tilgangsrettigheter, med bestemte handlinger på de angitte registernøklene.  Muligheten til å endre eller vise en tilgangskontrolliste (ACL) er en viktig tillatelse, og bør gis forsiktig."
  syntax:
    content: public RegistryPermission (System.Security.Permissions.RegistryPermissionAccess access, System.Security.AccessControl.AccessControlActions control, string pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.RegistryPermissionAccess
      description: "Én av de <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref> verdier."
    - id: control
      type: System.Security.AccessControl.AccessControlActions
      description: "En bitvis kombinasjon av det <xref href=&quot;System.Security.AccessControl.AccessControlActions&quot;> </xref> verdier."
    - id: pathList
      type: System.String
      description: "En liste over registret variabler (semikolon kommadelte) som brukeren tilgang."
  overload: System.Security.Permissions.RegistryPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> access </code> parameteren er ikke en gyldig verdi for <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>.       - eller - <code> pathList </code> parameteren er ikke en gyldig streng."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  id: AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: AddPathList(RegistryPermissionAccess,String)
  nameWithType: RegistryPermission.AddPathList(RegistryPermissionAccess,String)
  fullName: System.Security.Permissions.RegistryPermission.AddPathList(RegistryPermissionAccess,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Legger til tilgang for de angitte registret variablene i den eksisterende tilstanden til tillatelsen."
  remarks: "Bruk denne metoden til å endre tilgang til variabler i registeret ved å legge til statusen for det gjeldende tillatelse-objektet."
  example:
  - "The following code example shows the use of the AddPathList method.  \n  \n [!code-vb[System.Security.Permissions.RegistryPermission#9](~/add/codesnippet/visualbasic/4576855b-6757-4ec9-971b-_1.vb)]\n [!code-cs[System.Security.Permissions.RegistryPermission#9](~/add/codesnippet/csharp/4576855b-6757-4ec9-971b-_1.cs)]"
  syntax:
    content: public void AddPathList (System.Security.Permissions.RegistryPermissionAccess access, string pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.RegistryPermissionAccess
      description: "Én av de <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref> verdier."
    - id: pathList
      type: System.String
      description: "En liste over registret variabler (semikolon kommadelte)."
  overload: System.Security.Permissions.RegistryPermission.AddPathList*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> access </code> parameteren er ikke en gyldig verdi for <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>.       - eller - <code> pathList </code> parameteren er ikke en gyldig streng."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  id: AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: AddPathList(RegistryPermissionAccess,AccessControlActions,String)
  nameWithType: RegistryPermission.AddPathList(RegistryPermissionAccess,AccessControlActions,String)
  fullName: System.Security.Permissions.RegistryPermission.AddPathList(RegistryPermissionAccess,AccessControlActions,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Legger til tilgang for de angitte registret variablene i den eksisterende tilstanden til tillatelsen, angi registret tilgangstillatelse og access control handlinger."
  remarks: "Bruk denne metoden til å endre tilgang til variabler i registeret ved å legge til settet med banene statusen for det gjeldende tillatelse-objektet. Denne overlasten lar deg angi tilgang kontrollen hva som skal som tilgangstillatelse registret.       Den `control` parameteren angir om tilgangskontroll listen (ACL) for registernøkler som er angitt av `pathList` kan endres, vises, eller er ikke tilgjengelig.      > [!IMPORTANT] > En tilgangskontrolliste (ACL) som beskriver personer eller grupper som har, eller har ikke tilgangsrettigheter, med bestemte handlinger på de angitte registernøklene.  Muligheten til å endre eller vise en tilgangskontrolliste (ACL) er en viktig tillatelse, og bør gis forsiktig."
  syntax:
    content: public void AddPathList (System.Security.Permissions.RegistryPermissionAccess access, System.Security.AccessControl.AccessControlActions control, string pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.RegistryPermissionAccess
      description: "Én av de <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref> verdier."
    - id: control
      type: System.Security.AccessControl.AccessControlActions
      description: "Én av de <xref href=&quot;System.Security.AccessControl.AccessControlActions&quot;> </xref> verdier."
    - id: pathList
      type: System.String
      description: "En liste over registret variabler (atskilt med semikolon)."
  overload: System.Security.Permissions.RegistryPermission.AddPathList*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> access </code> parameteren er ikke en gyldig verdi for <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>.       - eller - <code> pathList </code> parameteren er ikke en gyldig streng."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.Copy
  id: Copy
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: RegistryPermission.Copy()
  fullName: System.Security.Permissions.RegistryPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Oppretter og returnerer en identisk kopi av gjeldende tillatelse."
  remarks: "En kopi av en tillatelse representerer samme tilgang til ressurser som den opprinnelige tillatelsen."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "En kopi av gjeldende tillatelse."
  overload: System.Security.Permissions.RegistryPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: RegistryPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.RegistryPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Rekonstruerer en tillatelse med en angitt tilstand fra en XML-koding."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "XML-koding til å bruke Bygg opp tillatelsen."
  overload: System.Security.Permissions.RegistryPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> esd </code> -parameteren er ikke et gyldig tillatelse-element.       - eller - <code> esd </code> versjonsnummeret for parameteren er ikke gyldig."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)
  id: GetPathList(System.Security.Permissions.RegistryPermissionAccess)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: GetPathList(RegistryPermissionAccess)
  nameWithType: RegistryPermission.GetPathList(RegistryPermissionAccess)
  fullName: System.Security.Permissions.RegistryPermission.GetPathList(RegistryPermissionAccess)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Henter baner for alle registret variabler med det angitte <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>."
  remarks: "Bruk denne metoden til å hente tilstanden for gjeldende tillatelse. Du må kalle denne metoden separat for hver type tilgang.      > [!NOTE] > Den `access` parameteren er begrenset til verdiene i <xref:System.Security.Permissions.RegistryPermissionAccess>, som representerer én tilgangstyper registret variable.</xref:System.Security.Permissions.RegistryPermissionAccess> Verdiene er <xref:System.Security.Permissions.RegistryPermissionAccess>, <xref:System.Security.Permissions.RegistryPermissionAccess>, og <xref:System.Security.Permissions.RegistryPermissionAccess>.</xref:System.Security.Permissions.RegistryPermissionAccess> </xref:System.Security.Permissions.RegistryPermissionAccess> </xref:System.Security.Permissions.RegistryPermissionAccess> Verdiene som er godkjent til `access` , inkluderer ikke <xref:System.Security.Permissions.RegistryPermissionAccess>og <xref:System.Security.Permissions.RegistryPermissionAccess>, som representerer ikke enkelt tilgangstyper registret variable.</xref:System.Security.Permissions.RegistryPermissionAccess> </xref:System.Security.Permissions.RegistryPermissionAccess>"
  example:
  - "The following code example shows the use of the GetPathList method.  \n  \n [!code-vb[System.Security.Permissions.RegistryPermission#9](~/add/codesnippet/visualbasic/2854e98a-b1b4-43c0-ac49-_1.vb)]\n [!code-cs[System.Security.Permissions.RegistryPermission#9](~/add/codesnippet/csharp/2854e98a-b1b4-43c0-ac49-_1.cs)]"
  syntax:
    content: public string GetPathList (System.Security.Permissions.RegistryPermissionAccess access);
    parameters:
    - id: access
      type: System.Security.Permissions.RegistryPermissionAccess
      description: "Én av de <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref> verdier som representerer en enkel type registret variabelen tilgang."
    return:
      type: System.String
      description: "En liste over variabler registret (semikolon kommadelte) med angitt <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>."
  overload: System.Security.Permissions.RegistryPermission.GetPathList*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>access</code>er ikke en gyldig verdi for <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>.       - eller - <code>access</code> er <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>, som representerer flere tilgangstypen registret variabelen, eller <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>, som representerer alle typer registret variabelen tilgang."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: RegistryPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.RegistryPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Oppretter og returnerer en tillatelse som er i skjæringspunktet mellom den gjeldende tillatelsene og angitt."
  remarks: "Skjæringspunktet mellom to tillatelsene er en tillatelse som beskriver operasjoner begge beskriver felles. En forespørsel som sender begge opprinnelige tillatelser vil sende skjæringspunktet."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Tillatelse til å intersect med gjeldende tillatelse. Det må være av samme type som gjeldende tillatelse."
    return:
      type: System.Security.IPermission
      description: "En ny tillatelse som representerer skjæringspunktet for den gjeldende tillatelsene og angitt. Denne nye tillatelsen er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis skjæringspunktet er tom."
  overload: System.Security.Permissions.RegistryPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> target </code> -parameteren er ikke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> og er ikke av samme type som gjeldende tillatelse."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: RegistryPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.RegistryPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Avgjør om gjeldende tillatelsen er et delsett av den angitte tillatelsen."
  remarks: "Gjeldende tillatelsen er et delsett av den angitte tillatelsen hvis gjeldende tillatelsen angir et sett med operasjoner som helt finnes i den angitte tillatelsen. For eksempel en tillatelse som representerer tilgang til C:\\example.txt er et delsett for en tillatelse som representerer tilgang til C:\\\\. Hvis denne metoden returnerer `true`, gjeldende tillatelsen representerer ingen flere tilgang til beskyttet ressurs enn den angitte tillatelsen."
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Tillatelse som skal testes for delsett-relasjonen. Denne tillatelsen må være av samme type som gjeldende tillatelse."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den gjeldende tillatelsen er et delsett av den angitte tillatelsen. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.RegistryPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> target </code> -parameteren er ikke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> og er ikke av samme type som gjeldende tillatelse."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: RegistryPermission.IsUnrestricted()
  fullName: System.Security.Permissions.RegistryPermission.IsUnrestricted()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Returnerer en verdi som angir om den gjeldende tillatelsen er ubegrenset."
  remarks: "En ubegrenset tilgang representerer tilgang til alle ressurser som er beskyttet av tillatelsen."
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den gjeldende tillatelsen er ubegrenset; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.RegistryPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.SetPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  id: SetPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: SetPathList(RegistryPermissionAccess,String)
  nameWithType: RegistryPermission.SetPathList(RegistryPermissionAccess,String)
  fullName: System.Security.Permissions.RegistryPermission.SetPathList(RegistryPermissionAccess,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Angir nye tilgang for den angitte registret variabelnavn til eksisterende systemtilstand tillatelsen."
  remarks: "Tilstanden for den gjeldende tillatelsen overskrives."
  example:
  - "The following code example shows the use of the SetPathList method.  \n  \n [!code-vb[System.Security.Permissions.RegistryPermission#9](~/add/codesnippet/visualbasic/8dc9769e-4e08-4ebe-9109-_1.vb)]\n [!code-cs[System.Security.Permissions.RegistryPermission#9](~/add/codesnippet/csharp/8dc9769e-4e08-4ebe-9109-_1.cs)]"
  syntax:
    content: public void SetPathList (System.Security.Permissions.RegistryPermissionAccess access, string pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.RegistryPermissionAccess
      description: "Én av de <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref> verdier."
    - id: pathList
      type: System.String
      description: "En liste over registret variabler (semikolon kommadelte)."
  overload: System.Security.Permissions.RegistryPermission.SetPathList*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> access </code> parameteren er ikke en gyldig verdi for <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>.       - eller - <code> pathList </code> parameteren er ikke en gyldig streng."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: RegistryPermission.ToXml()
  fullName: System.Security.Permissions.RegistryPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Oppretter en XML-koding av tillatelsen og den gjeldende tilstanden."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "XML-koding for tillatelse, inkludert tilstandsinformasjon."
  overload: System.Security.Permissions.RegistryPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: RegistryPermission.Union(IPermission)
  fullName: System.Security.Permissions.RegistryPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Oppretter en tillatelse som Unionen av de gjeldende tillatelsene og angitt."
  remarks: "Resultatet av et kall til Union er en tillatelse som representerer alle operasjoner som er representert av både den gjeldende tillatelsene og angitt. En forespørsel som sender enten tillatelse sender sine union."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission other);
    parameters:
    - id: other
      type: System.Security.IPermission
      description: "Tillatelse til å kombineres med gjeldende tillatelse. Det må være av samme type som gjeldende tillatelse."
    return:
      type: System.Security.IPermission
      description: "En ny tillatelse som representerer Unionen av de gjeldende tillatelsene og angitt."
  overload: System.Security.Permissions.RegistryPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> other </code> -parameteren er ikke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> og er ikke av samme type som gjeldende tillatelse."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: RegistryPermission(PermissionState)
  nameWithType: RegistryPermission.RegistryPermission(PermissionState)
  fullName: System.Security.Permissions.RegistryPermission.RegistryPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.String)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: RegistryPermission(RegistryPermissionAccess,String)
  nameWithType: RegistryPermission.RegistryPermission(RegistryPermissionAccess,String)
  fullName: System.Security.Permissions.RegistryPermission.RegistryPermission(RegistryPermissionAccess,String)
- uid: System.Security.Permissions.RegistryPermissionAccess
  parent: System.Security.Permissions
  isExternal: false
  name: RegistryPermissionAccess
  nameWithType: RegistryPermissionAccess
  fullName: System.Security.Permissions.RegistryPermissionAccess
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: RegistryPermission(RegistryPermissionAccess,AccessControlActions,String)
  nameWithType: RegistryPermission.RegistryPermission(RegistryPermissionAccess,AccessControlActions,String)
  fullName: System.Security.Permissions.RegistryPermission.RegistryPermission(RegistryPermissionAccess,AccessControlActions,String)
- uid: System.Security.AccessControl.AccessControlActions
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlActions
  nameWithType: AccessControlActions
  fullName: System.Security.AccessControl.AccessControlActions
- uid: System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: AddPathList(RegistryPermissionAccess,String)
  nameWithType: RegistryPermission.AddPathList(RegistryPermissionAccess,String)
  fullName: System.Security.Permissions.RegistryPermission.AddPathList(RegistryPermissionAccess,String)
- uid: System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: AddPathList(RegistryPermissionAccess,AccessControlActions,String)
  nameWithType: RegistryPermission.AddPathList(RegistryPermissionAccess,AccessControlActions,String)
  fullName: System.Security.Permissions.RegistryPermission.AddPathList(RegistryPermissionAccess,AccessControlActions,String)
- uid: System.Security.Permissions.RegistryPermission.Copy
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: Copy()
  nameWithType: RegistryPermission.Copy()
  fullName: System.Security.Permissions.RegistryPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.RegistryPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: RegistryPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.RegistryPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: GetPathList(RegistryPermissionAccess)
  nameWithType: RegistryPermission.GetPathList(RegistryPermissionAccess)
  fullName: System.Security.Permissions.RegistryPermission.GetPathList(RegistryPermissionAccess)
- uid: System.Security.Permissions.RegistryPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: RegistryPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.RegistryPermission.Intersect(IPermission)
- uid: System.Security.Permissions.RegistryPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: RegistryPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.RegistryPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.RegistryPermission.IsUnrestricted
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: RegistryPermission.IsUnrestricted()
  fullName: System.Security.Permissions.RegistryPermission.IsUnrestricted()
- uid: System.Security.Permissions.RegistryPermission.SetPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: SetPathList(RegistryPermissionAccess,String)
  nameWithType: RegistryPermission.SetPathList(RegistryPermissionAccess,String)
  fullName: System.Security.Permissions.RegistryPermission.SetPathList(RegistryPermissionAccess,String)
- uid: System.Security.Permissions.RegistryPermission.ToXml
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: ToXml()
  nameWithType: RegistryPermission.ToXml()
  fullName: System.Security.Permissions.RegistryPermission.ToXml()
- uid: System.Security.Permissions.RegistryPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: RegistryPermission.Union(IPermission)
  fullName: System.Security.Permissions.RegistryPermission.Union(IPermission)
- uid: System.Security.Permissions.RegistryPermission.#ctor*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: RegistryPermission
  nameWithType: RegistryPermission.RegistryPermission
- uid: System.Security.Permissions.RegistryPermission.AddPathList*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: AddPathList
  nameWithType: RegistryPermission.AddPathList
- uid: System.Security.Permissions.RegistryPermission.Copy*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: Copy
  nameWithType: RegistryPermission.Copy
- uid: System.Security.Permissions.RegistryPermission.FromXml*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: FromXml
  nameWithType: RegistryPermission.FromXml
- uid: System.Security.Permissions.RegistryPermission.GetPathList*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: GetPathList
  nameWithType: RegistryPermission.GetPathList
- uid: System.Security.Permissions.RegistryPermission.Intersect*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: Intersect
  nameWithType: RegistryPermission.Intersect
- uid: System.Security.Permissions.RegistryPermission.IsSubsetOf*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: RegistryPermission.IsSubsetOf
- uid: System.Security.Permissions.RegistryPermission.IsUnrestricted*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: RegistryPermission.IsUnrestricted
- uid: System.Security.Permissions.RegistryPermission.SetPathList*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: SetPathList
  nameWithType: RegistryPermission.SetPathList
- uid: System.Security.Permissions.RegistryPermission.ToXml*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: ToXml
  nameWithType: RegistryPermission.ToXml
- uid: System.Security.Permissions.RegistryPermission.Union*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: Union
  nameWithType: RegistryPermission.Union
