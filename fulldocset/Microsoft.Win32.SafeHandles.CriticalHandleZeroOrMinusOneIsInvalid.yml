### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid
  id: CriticalHandleZeroOrMinusOneIsInvalid
  children:
  - Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.#ctor
  - Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid
  langs:
  - csharp
  name: CriticalHandleZeroOrMinusOneIsInvalid
  nameWithType: CriticalHandleZeroOrMinusOneIsInvalid
  fullName: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid
  type: Class
  summary: "Inneholder en basisklasse for Win32 Kritisk referanse implementeringer der verdien 0 eller -1 angir en ugyldig referanse."
  remarks: "Denne klassen er avledet fra <xref:System.Runtime.InteropServices.CriticalHandle?displayProperty=fullName>klassen.</xref:System.Runtime.InteropServices.CriticalHandle?displayProperty=fullName> Den beskriver formatet til en ugyldig referanse. For eksempel bruke noen håndtak -1 som en ugyldig referanse-verdi, mens andre bruker 0. Flere avledningene av denne klassen (for eksempel filen eller registret referanser) kan specialize dette videre.       Bruk CriticalHandleZeroOrMinusOneIsInvalid klassen når du må utføre en ubehandlet ressurs som ikke har en eksisterende forvaltede wrapperen.       Denne typen implementerer den <xref:System.IDisposable>grensesnittet.</xref:System.IDisposable> Når du er ferdig ved hjelp av typen, må du fjerne den direkte eller indirekte. Hvis du vil fjerne av typen direkte, kan du kalle den <xref:System.IDisposable.Dispose%2A>metoden i en `try` / `catch` block.</xref:System.IDisposable.Dispose%2A> Hvis du vil fjerne den indirekte, bruke et språk som `using` (i C#) eller `Using` (i Visual Basic). For mer informasjon, se &quot;Ved hjelp av et objekt som implementerer IDisposable&quot; i den <xref:System.IDisposable>grensesnittet emnet.</xref:System.IDisposable>      > [!NOTE] > Se den <xref:System.Runtime.InteropServices.CriticalHandle>klasse for viktig informasjon om kritisk referanse sikkerhet og tråd sikkerhetsnivået.</xref:System.Runtime.InteropServices.CriticalHandle>"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public abstract class CriticalHandleZeroOrMinusOneIsInvalid : System.Runtime.InteropServices.CriticalHandle
  inheritance:
  - System.Runtime.InteropServices.CriticalHandle
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.#ctor
  id: '#ctor'
  parent: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid
  langs:
  - csharp
  name: CriticalHandleZeroOrMinusOneIsInvalid()
  nameWithType: CriticalHandleZeroOrMinusOneIsInvalid.CriticalHandleZeroOrMinusOneIsInvalid()
  fullName: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.CriticalHandleZeroOrMinusOneIsInvalid()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32.SafeHandles
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid&quot;> </xref> klasse."
  syntax:
    content: protected CriticalHandleZeroOrMinusOneIsInvalid ();
    parameters: []
  overload: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid
  id: IsInvalid
  parent: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid
  langs:
  - csharp
  name: IsInvalid
  nameWithType: CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid
  fullName: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid
  type: Property
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32.SafeHandles
  summary: "Henter en verdi som angir om referansen er ugyldig."
  remarks: "Common language runtime bruker denne egenskapen til å fastslå om kritiske finalization er nødvendig."
  syntax:
    content: public override bool IsInvalid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis referansen ikke er gyldig. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.CriticalHandle
  isExternal: false
  name: System.Runtime.InteropServices.CriticalHandle
- uid: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.#ctor
  parent: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid
  isExternal: false
  name: CriticalHandleZeroOrMinusOneIsInvalid()
  nameWithType: CriticalHandleZeroOrMinusOneIsInvalid.CriticalHandleZeroOrMinusOneIsInvalid()
  fullName: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.CriticalHandleZeroOrMinusOneIsInvalid()
- uid: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid
  parent: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid
  isExternal: false
  name: IsInvalid
  nameWithType: CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid
  fullName: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.#ctor*
  parent: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid
  isExternal: false
  name: CriticalHandleZeroOrMinusOneIsInvalid
  nameWithType: CriticalHandleZeroOrMinusOneIsInvalid.CriticalHandleZeroOrMinusOneIsInvalid
- uid: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid*
  parent: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid
  isExternal: false
  name: IsInvalid
  nameWithType: CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid
