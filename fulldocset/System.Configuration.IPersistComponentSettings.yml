### YamlMime:ManagedReference
items:
- uid: System.Configuration.IPersistComponentSettings
  id: IPersistComponentSettings
  children:
  - System.Configuration.IPersistComponentSettings.LoadComponentSettings
  - System.Configuration.IPersistComponentSettings.ResetComponentSettings
  - System.Configuration.IPersistComponentSettings.SaveComponentSettings
  - System.Configuration.IPersistComponentSettings.SaveSettings
  - System.Configuration.IPersistComponentSettings.SettingsKey
  langs:
  - csharp
  name: IPersistComponentSettings
  nameWithType: IPersistComponentSettings
  fullName: System.Configuration.IPersistComponentSettings
  type: Interface
  summary: "Definerer standard funksjonalitet for kontroller eller biblioteker som lagrer og hente applikasjonsinnstillingene."
  remarks: "Vanligvis kan du legge til innstillingene programstøtte et program ved å opprette en wrapperklasse, som er avledet fra <xref:System.Configuration.ApplicationSettingsBase>, og legg deretter spesielle egenskaper til denne klassen.</xref:System.Configuration.ApplicationSettingsBase> Imidlertid denne tilnærmingen ikke tilstrekkelig omfatter programinnstillinger for en kontroll slik at beholderen skjermet fra detaljene. Grensesnittet IPersistComponentSettings gir en applikasjon med et standard grensesnitt for kommunikasjon programmet innstillinger tilstand endringsforespørsler til en kontroll, komponenten eller biblioteket modul. Utformingen verktøy er også avhengig av dette grensesnittet for å administrere kontroller og komponenter på riktig måte."
  syntax:
    content: public interface IPersistComponentSettings
  implements: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.LoadComponentSettings
  id: LoadComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: LoadComponentSettings()
  nameWithType: IPersistComponentSettings.LoadComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.LoadComponentSettings()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Leser kontrollens programinnstillinger i tilsvarende egenskapene og oppdateres kontrollens tilstand."
  remarks: "Generelt metoden LoadComponentSettings utfører to viktige operasjoner:-den forårsaker hver programmet innstillinger-forekomst som kontrollen for å oppdatere verdier for egenskapene programmet innstillinger vanligvis ved å kalle inneholder deres <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>metoder.</xref:System.Configuration.ApplicationSettingsBase.Reload%2A>      -Etter behov oppdateres de generelle egenskapene som er avhengige av innstillingene lastes inn på nytt egenskaper. Hvis innstillingene klassen finnes for eksempel en `location` innstillinger egenskapen LoadComponentSettings bør kontrollere at kontrollens <xref:System.Windows.Forms.Control.Location%2A>egenskapen er oppdatert for å gjenspeile denne innstillingen lastes inn på nytt.</xref:System.Windows.Forms.Control.Location%2A>"
  syntax:
    content: public void LoadComponentSettings ();
    parameters: []
  overload: System.Configuration.IPersistComponentSettings.LoadComponentSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.ResetComponentSettings
  id: ResetComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: ResetComponentSettings()
  nameWithType: IPersistComponentSettings.ResetComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.ResetComponentSettings()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Tilbakestiller innstillinger for kontrollens programmet til standardverdiene."
  remarks: "Kaller vanligvis implementeringen av metoden ResetComponentSettings i <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>-metoden på hver forekomst av en applikasjon klasse den inneholder.</xref:System.Configuration.ApplicationSettingsBase.Reset%2A>"
  syntax:
    content: public void ResetComponentSettings ();
    parameters: []
  overload: System.Configuration.IPersistComponentSettings.ResetComponentSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.SaveComponentSettings
  id: SaveComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: SaveComponentSettings()
  nameWithType: IPersistComponentSettings.SaveComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.SaveComponentSettings()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Vedvarer kontrollens innstillinger for programmet."
  remarks: "Metoden SaveComponentSettings skriver verdiene i innstillinger for kontrollens programmet til tilknyttede datalageret. Data store og serialisering metode metoden bruker bestemmes av innstillingene for leverandøren knyttet til hver klasse via <xref:System.Configuration.SettingsProviderAttribute>.</xref:System.Configuration.SettingsProviderAttribute> Du kan overstyre valget av innstillingene for leverandøren ved hjelp av den <xref:System.Configuration.ISettingsProviderService>grensesnittet.</xref:System.Configuration.ISettingsProviderService>      > [!NOTE] > Hvis den <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>egenskapen `true`, kontrollen bør kalle SaveComponentSettings i sin egen <xref:System.Windows.Forms.Control.Dispose%2A>metoden slik at konfigurasjonsdataene for kontrollens blir automatisk lagret før programmet avsluttes.</xref:System.Windows.Forms.Control.Dispose%2A> </xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>"
  syntax:
    content: public void SaveComponentSettings ();
    parameters: []
  overload: System.Configuration.IPersistComponentSettings.SaveComponentSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.SaveSettings
  id: SaveSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: SaveSettings
  nameWithType: IPersistComponentSettings.SaveSettings
  fullName: System.Configuration.IPersistComponentSettings.SaveSettings
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Henter eller angir en verdi som angir om kontrollen skal gjøre egenskapene for applikasjonen innstillinger automatisk."
  remarks: "Kontroll inneholder konfigurasjonsdata, vil den vanligvis beholde disse dataene som svar på et eksplisitt kall til den <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A>metoden eller noen ganger implisitt når kontrollens <xref:System.Windows.Forms.Control.Dispose%2A>metode startes.</xref:System.Windows.Forms.Control.Dispose%2A> </xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> Egenskapen SaveSettings bestemmer om en kontroll vedvarer konfigurasjonsdataene automatisk når det er fjernet.       Standardverdien for SaveSettings avhenger av implementeringen av kontrollen. Dokumentasjonen for kontrollen skal angi om den bruker programinnstillinger, hvilke data som skal opprettholdes, og standardverdien for egenskapen SaveSettings er."
  example:
  - "The following code example shows the proper way for a control to check the value of the SaveSettings property before it attempts to automatically persist its configuration data.  \n  \n `protected override void Dispose( bool disposing ) {`  \n  \n `if(disposing) {`  \n  \n `try {`  \n  \n `if (SaveSettings) {`  \n  \n `SaveComponentSettings();`  \n  \n `}`  \n  \n `}`  \n  \n `finally {`  \n  \n `//...`  \n  \n `}`  \n  \n `}`"
  syntax:
    content: public bool SaveSettings { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om kontrollen skal automatisk beholde tilstanden; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.IPersistComponentSettings.SaveSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.SettingsKey
  id: SettingsKey
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: SettingsKey
  nameWithType: IPersistComponentSettings.SettingsKey
  fullName: System.Configuration.IPersistComponentSettings.SettingsKey
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Henter eller angir verdien for nøkkelen programmet innstillingene for den gjeldende forekomsten av kontrollen."
  remarks: "Bruk SettingsKey-egenskapen for å oppheve tvetydigheten grupper av egenskapene for applikasjonen innstillinger når det finnes flere forekomster av samme wrapperklasse. For eksempel hvis en kontroll inneholder en som er tilknyttet wrapperklasse, å sette flere forekomster av denne kontrollen i samme applikasjon, vanligvis fører flere forekomster av klassen wrapper. Det kreves en nøkkel for innstillinger når konfigurasjonsdataene er forskjellig på per forekomst basis; for eksempel plasseringen av dynamisk plassert kontroller.       Følgende generelle regler gjelder for bruk av SettingsKey:-en kontroll som noen klasse kan inneholde null eller flere programmet innstillinger klasser, som er avledet fra <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase> Klasse for hver inneholder sin egen <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName>egenskapen som bidrar til å oppheve tvetydigheten flere forekomster av denne klassen.</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName>      – En kontroll skal skille per forekomst data og delte dataene i forskjellige innstillinger klasser.      -For en kontroll med konfigurasjonsdata noen per forekomst av `get` aksessor for egenskapen SettingsKey skal som standard til den <xref:System.Windows.Forms.Control.Name%2A>kontrollens.</xref:System.Windows.Forms.Control.Name%2A> Navnet på kontrollen vil være unike i en applikasjon i de fleste tilfeller. Hvis kontrollen inneholder bare delte konfigurasjonsdata, `get` skal som standard `null`.      - `set` Aksessor for denne egenskapen skal brukes til å skille mellom innstillinger klasser som inneholder per forekomsten og delte konfigurasjonsdata. For hver klasse som inneholder per forekomst data `set` bør bare direkte <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName>for innstillinger for klassen.</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName> For innstillinger klasser som inneholder felles data `set` skal utføre noe for at klasse."
  syntax:
    content: public string SettingsKey { get; set; }
    return:
      type: System.String
      description: "En <xref:System.String>som inneholder nøkkelen innstillingene for den gjeldende forekomsten kontrollens.</xref:System.String>"
  overload: System.Configuration.IPersistComponentSettings.SettingsKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.IPersistComponentSettings.LoadComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: LoadComponentSettings()
  nameWithType: IPersistComponentSettings.LoadComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.LoadComponentSettings()
- uid: System.Configuration.IPersistComponentSettings.ResetComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: ResetComponentSettings()
  nameWithType: IPersistComponentSettings.ResetComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.ResetComponentSettings()
- uid: System.Configuration.IPersistComponentSettings.SaveComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveComponentSettings()
  nameWithType: IPersistComponentSettings.SaveComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.SaveComponentSettings()
- uid: System.Configuration.IPersistComponentSettings.SaveSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveSettings
  nameWithType: IPersistComponentSettings.SaveSettings
  fullName: System.Configuration.IPersistComponentSettings.SaveSettings
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.IPersistComponentSettings.SettingsKey
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SettingsKey
  nameWithType: IPersistComponentSettings.SettingsKey
  fullName: System.Configuration.IPersistComponentSettings.SettingsKey
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.IPersistComponentSettings.LoadComponentSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: LoadComponentSettings
  nameWithType: IPersistComponentSettings.LoadComponentSettings
- uid: System.Configuration.IPersistComponentSettings.ResetComponentSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: ResetComponentSettings
  nameWithType: IPersistComponentSettings.ResetComponentSettings
- uid: System.Configuration.IPersistComponentSettings.SaveComponentSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveComponentSettings
  nameWithType: IPersistComponentSettings.SaveComponentSettings
- uid: System.Configuration.IPersistComponentSettings.SaveSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveSettings
  nameWithType: IPersistComponentSettings.SaveSettings
- uid: System.Configuration.IPersistComponentSettings.SettingsKey*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SettingsKey
  nameWithType: IPersistComponentSettings.SettingsKey
