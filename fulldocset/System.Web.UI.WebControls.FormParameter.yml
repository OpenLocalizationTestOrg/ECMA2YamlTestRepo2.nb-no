### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormParameter
  id: FormParameter
  children:
  - System.Web.UI.WebControls.FormParameter.#ctor
  - System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)
  - System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)
  - System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.Data.DbType,System.String)
  - System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)
  - System.Web.UI.WebControls.FormParameter.Clone
  - System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)
  - System.Web.UI.WebControls.FormParameter.FormField
  - System.Web.UI.WebControls.FormParameter.ValidateInput
  langs:
  - csharp
  name: FormParameter
  nameWithType: FormParameter
  fullName: System.Web.UI.WebControls.FormParameter
  type: Class
  summary: "Binding verdien for en HTTP-forespørsel <xref:System.Web.HttpRequest.Form*>felt til et objekt for parameteren.</xref:System.Web.HttpRequest.Form*>"
  remarks: "Du kan bruke klassen FormParameter for å binde verdien til en variabel formatet i den <xref:System.Web.HttpRequest.Form%2A>samling til en parameter som er brukt parametriserte spørringer eller kommandoen.</xref:System.Web.HttpRequest.Form%2A> Kontroller binder data til parameteren kan Iverksett et unntak hvis en FormParameter er angitt, men ingen tilsvarende skjema-variabelen er sendt. De kan også vise ingen data hvis skjemaet variabelen er passert uten tilsvarende verdi. Angi den <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>å unngå slike tilfeller der det er mulig.</xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>       Klassen FormParameter gir <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>egenskapen som identifiserer navnet på formen-variabelen skal bindes til, i tillegg til dem arvet fra <xref:System.Web.UI.WebControls.Parameter>klasse.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.FormParameter.FormField%2A>      > [!IMPORTANT] > For FormParameter validerer ikke verdien som ble sendt av skjemaelement slik; den bruker raw verdien. I de fleste tilfeller kan valideres verdien for FormParameter før den brukes av en datakilde-kontroll ved å behandle en hendelse som den `Selecting`, `Updating`, `Inserting`, eller `Deleting` hendelsen vises av datakildekontrollen du bruker. Hvis verdien for parameteren ikke bestod valideringstester, kan du si Dataoperasjonen ved å angi den <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>for den tilknyttede <xref:System.ComponentModel.CancelEventArgs>klasse til `true`.</xref:System.ComponentModel.CancelEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>"
  example:
  - "The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple ASP.NET Web page. The current data in the data table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control. You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls and clicking the button. When the button is clicked, the specified values are inserted into the database, and the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_143_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_143_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("FormField")]

      public class FormParameter : System.Web.UI.WebControls.Parameter
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.Parameter
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.Parameter.ConvertDbTypeToTypeCode(System.Data.DbType)
  - System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull
  - System.Web.UI.WebControls.Parameter.ConvertTypeCodeToDbType(System.TypeCode)
  - System.Web.UI.WebControls.Parameter.DbType
  - System.Web.UI.WebControls.Parameter.DefaultValue
  - System.Web.UI.WebControls.Parameter.Direction
  - System.Web.UI.WebControls.Parameter.GetDatabaseType
  - System.Web.UI.WebControls.Parameter.IsTrackingViewState
  - System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)
  - System.Web.UI.WebControls.Parameter.Name
  - System.Web.UI.WebControls.Parameter.OnParameterChanged
  - System.Web.UI.WebControls.Parameter.SaveViewState
  - System.Web.UI.WebControls.Parameter.SetDirty
  - System.Web.UI.WebControls.Parameter.Size
  - System.Web.UI.WebControls.Parameter.System#ICloneable#Clone
  - System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.Parameter.ToString
  - System.Web.UI.WebControls.Parameter.TrackViewState
  - System.Web.UI.WebControls.Parameter.Type
  - System.Web.UI.WebControls.Parameter.ViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: FormParameter()
  nameWithType: FormParameter.FormParameter()
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initialiserer en ny uten navn forekomst av den <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> klasse."
  remarks: "En <xref:System.Web.UI.WebControls.FormParameter>objektet er opprettet med FormParameter konstruktøren er initialisert med standardverdier for alle egenskaper.</xref:System.Web.UI.WebControls.FormParameter> <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>Initialiseres til <xref:System.String.Empty?displayProperty=fullName>.</xref:System.String.Empty?displayProperty=fullName> </xref:System.Web.UI.WebControls.FormParameter.FormField%2A> I tillegg av <xref:System.Web.UI.WebControls.Parameter.Name%2A>egenskapen initialiseres til <xref:System.String.Empty?displayProperty=fullName>, <xref:System.Web.UI.WebControls.Parameter.Type%2A>egenskapen initialiseres til <xref:System.TypeCode?displayProperty=fullName>, <xref:System.Web.UI.WebControls.Parameter.Direction%2A>egenskapen initialiseres til <xref:System.Data.ParameterDirection>, og <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>initialiseres egenskapen til null (`Nothing` i Visual Basic).</xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> </xref:System.Data.ParameterDirection> </xref:System.Web.UI.WebControls.Parameter.Direction%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.Web.UI.WebControls.Parameter.Type%2A> </xref:System.String.Empty?displayProperty=fullName> </xref:System.Web.UI.WebControls.Parameter.Name%2A>"
  example:
  - "> [!IMPORTANT]\n>  The <xref:System.Web.UI.WebControls.FormParameter> does not validate the value passed by the form element in any way; it uses the raw value. In most cases, you can validate the value of the <xref:System.Web.UI.WebControls.FormParameter> before it is used by a data source control by handling an event, such as the `Selecting`, `Updating`, `Inserting`, or `Deleting` event exposed by the data source control you are using. If the value of the parameter does not pass your validation tests, you can cancel the data operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the associated <xref:System.ComponentModel.CancelEventArgs> class to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.FormParameter_1#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_75_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.FormParameter_1#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_75_1.aspx)]"
  syntax:
    content: public FormParameter ();
    parameters: []
  overload: System.Web.UI.WebControls.FormParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)
  id: '#ctor(System.Web.UI.WebControls.FormParameter)'
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: FormParameter(FormParameter)
  nameWithType: FormParameter.FormParameter(FormParameter)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(FormParameter)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> klassen med verdier til den angitte av forekomsten av <code> original </code> parameteren."
  remarks: "Konstruktøren FormParameter er en `protected` kopi konstruktøren brukes til å kopiere en <xref:System.Web.UI.WebControls.FormParameter>forekomsten.</xref:System.Web.UI.WebControls.FormParameter> Verdiene i den <xref:System.Web.UI.WebControls.FormParameter>, inkludert <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>, <xref:System.Web.UI.WebControls.Parameter.Name%2A>, og <xref:System.Web.UI.WebControls.Parameter.Type%2A>er overført til den nye forekomsten.</xref:System.Web.UI.WebControls.Parameter.Type%2A> </xref:System.Web.UI.WebControls.Parameter.Name%2A> </xref:System.Web.UI.WebControls.FormParameter.FormField%2A> </xref:System.Web.UI.WebControls.FormParameter>"
  syntax:
    content: protected FormParameter (System.Web.UI.WebControls.FormParameter original);
    parameters:
    - id: original
      type: System.Web.UI.WebControls.FormParameter
      description: "En <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> -forekomst som gjeldende forekomst er initialisert fra."
  overload: System.Web.UI.WebControls.FormParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: FormParameter(String,String)
  nameWithType: FormParameter.FormParameter(String,String)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initialiserer et nytt navngitt forekomst av den <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> class, ved hjelp av den angitte strengen til å identifisere hvilke variabelen feltet skal bindes til."
  remarks: "En <xref:System.Web.UI.WebControls.FormParameter>objektet er opprettet med FormParameter konstruktøren er initialisert med det angitte parameternavnet og streng som identifiserer formen variabelen parameteren bindes til.</xref:System.Web.UI.WebControls.FormParameter> Den <xref:System.Web.UI.WebControls.Parameter.Type%2A>og <xref:System.Web.UI.WebControls.Parameter.Direction%2A>Egenskaper er initialisert med standardverdier.</xref:System.Web.UI.WebControls.Parameter.Direction%2A> </xref:System.Web.UI.WebControls.Parameter.Type%2A>"
  example:
  - "> [!IMPORTANT]\n>  The <xref:System.Web.UI.WebControls.FormParameter> does not validate the value passed by the form element in any way; it uses the raw value. In most cases, you can validate the value of the <xref:System.Web.UI.WebControls.FormParameter> before it is used by a data source control by handling an event, such as the `Selecting`, `Updating`, `Inserting`, or `Deleting` event exposed by the data source control you are using. If the value of the parameter does not pass your validation tests, you can cancel the data operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the associated <xref:System.ComponentModel.CancelEventArgs> class to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.FormParameter_2#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_211_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.FormParameter_2#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_211_1.aspx)]"
  syntax:
    content: public FormParameter (string name, string formField);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på parameteren."
    - id: formField
      type: System.String
      description: "Navnet på formen variabelen parameter-objektet er bundet til. Standard er <xref:System.String>.</xref:System.String>"
  overload: System.Web.UI.WebControls.FormParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.Data.DbType,System.String)
  id: '#ctor(System.String,System.Data.DbType,System.String)'
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: FormParameter(String,DbType,String)
  nameWithType: FormParameter.FormParameter(String,DbType,String)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(String,DbType,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> class, ved hjelp av den angitte strengen til å identifisere hvilke variabelen feltet skal bindes til."
  syntax:
    content: public FormParameter (string name, System.Data.DbType dbType, string formField);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på parameteren."
    - id: dbType
      type: System.Data.DbType
      description: "Databasetypen for parameteren."
    - id: formField
      type: System.String
      description: "Navnet på formen variabelen parameter-objektet er bundet til."
  overload: System.Web.UI.WebControls.FormParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)
  id: '#ctor(System.String,System.TypeCode,System.String)'
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: FormParameter(String,TypeCode,String)
  nameWithType: FormParameter.FormParameter(String,TypeCode,String)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(String,TypeCode,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initialiserer et nytt navn og forespørselsparameter av sterk type forekomst av den <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> class, ved hjelp av den angitte strengen til å identifisere hvilke skjemaet variabelen skal bindes til."
  remarks: "En <xref:System.Web.UI.WebControls.FormParameter>objektet er opprettet med FormParameter konstruktøren er initialisert med det angitte parameternavnet <xref:System.Web.UI.WebControls.Parameter.Type%2A>, og strengen som identifiserer formen variabelen parameteren bindes til.</xref:System.Web.UI.WebControls.Parameter.Type%2A> </xref:System.Web.UI.WebControls.FormParameter> Bare den <xref:System.Web.UI.WebControls.Parameter.Direction%2A>og <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A>Egenskaper er initialisert med standardverdier.</xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> </xref:System.Web.UI.WebControls.Parameter.Direction%2A>"
  example:
  - "> [!IMPORTANT]\n>  The <xref:System.Web.UI.WebControls.FormParameter> does not validate the value passed by the form element in any way; it uses the raw value. In most cases, you can validate the value of the <xref:System.Web.UI.WebControls.FormParameter> before it is used by a data source control by handling an event, such as the `Selecting`, `Updating`, `Inserting`, or `Deleting` event exposed by the data source control you are using. If the value of the parameter does not pass your validation tests, you can cancel the data operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the associated <xref:System.ComponentModel.CancelEventArgs> class to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.FormParameter_3#1](~/add/codesnippet/csharp/8907b4db-f03b-4c6d-87a9-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.FormParameter_3#1](~/add/codesnippet/visualbasic/8907b4db-f03b-4c6d-87a9-_1.aspx)]"
  syntax:
    content: public FormParameter (string name, TypeCode type, string formField);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på parameteren."
    - id: type
      type: System.TypeCode
      description: "Typen som representerer for parameteren. Standard er <xref:System.TypeCode>.</xref:System.TypeCode>"
    - id: formField
      type: System.String
      description: "Navnet på formen variabelen parameter-objektet er bundet til. Standard er <xref:System.String>.</xref:System.String>"
  overload: System.Web.UI.WebControls.FormParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.Clone
  id: Clone
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: Clone()
  nameWithType: FormParameter.Clone()
  fullName: System.Web.UI.WebControls.FormParameter.Clone()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Returnerer et duplikat av gjeldende <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> forekomsten."
  remarks: "Metodekall klone den <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>kopi konstruktøren for å initialisere en ny forekomst av den <xref:System.Web.UI.WebControls.FormParameter>klassen med verdier til den gjeldende forekomsten.</xref:System.Web.UI.WebControls.FormParameter> </xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>"
  syntax:
    content: protected override System.Web.UI.WebControls.Parameter Clone ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Parameter
      description: "En <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> som er nøyaktig lik gjeldende."
  overload: System.Web.UI.WebControls.FormParameter.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)
  id: Evaluate(System.Web.HttpContext,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: Evaluate(HttpContext,Control)
  nameWithType: FormParameter.Evaluate(HttpContext,Control)
  fullName: System.Web.UI.WebControls.FormParameter.Evaluate(HttpContext,Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Oppdateringer, og returnerer verdien for den <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> objektet."
  remarks: "Den <xref:System.Web.UI.WebControls.FormParameter>prøver å binde til variabelen skjemaet hver gang Evaluate-metoden.</xref:System.Web.UI.WebControls.FormParameter>       Den `context` parameteren brukes av Evaluate-metoden til å hente verdien for det angitte feltet fra forespørselen. Den `control` parameteren ignoreres."
  syntax:
    content: protected override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Gjeldende <xref href=&quot;System.Web.HttpContext&quot;> </xref> for forespørselen."
    - id: control
      type: System.Web.UI.Control
      description: "En <xref href=&quot;System.Web.UI.Control&quot;> </xref> som er knyttet til siden der den <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> brukes."
    return:
      type: System.Object
      description: "Et objekt som representerer oppdatert verdien for parameteren. Hvis konteksten eller forespørselen er null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic), metoden Evaluate returnerer null."
  overload: System.Web.UI.WebControls.FormParameter.Evaluate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.FormField
  id: FormField
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: FormField
  nameWithType: FormParameter.FormField
  fullName: System.Web.UI.WebControls.FormParameter.FormField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir navnet på formen variabelen parameteren bindes til."
  remarks: "FormField identifiserer et navn/verdi-par som er sendt av <xref:System.Web.HttpRequest.Form%2A>samlingen.</xref:System.Web.HttpRequest.Form%2A> Når egenskapen FormField identifiserer navnet på paret den <xref:System.Web.UI.WebControls.FormParameter>binding til tilsvarende verdi på kjøretidspunktet.</xref:System.Web.UI.WebControls.FormParameter> Hvis det forventede formatet strengvariabel navn/verdi-paret ikke er sendt til ASP.NET Web-siden i samlingen av <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>metoden binding parameteren med verdien for den <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>egenskapen, hvis det er angitt.</xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> </xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> Hvis den <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>er ikke angitt, den <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>metoden ikke binde parameteren til en verdi.</xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> </xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>"
  example:
  - "The following code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control and a <xref:System.Web.UI.WebControls.FormParameter> to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results.  \n  \n The code example consists of a <xref:System.Web.UI.WebControls.TextBox>, a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.ObjectDataSource> control, and a submit button. By default, the <xref:System.Web.UI.WebControls.TextBox> is populated with the name of one of the Northwind Traders employees. The <xref:System.Web.UI.WebControls.GridView> displays information about the employee identified by the name in the <xref:System.Web.UI.WebControls.TextBox>. To retrieve data on another employee, enter the full name of the employee in the <xref:System.Web.UI.WebControls.TextBox> and click the button.  \n  \n The <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property specifies an expression used to filter the data retrieved by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>. This property uses parameter placeholders that are evaluated to the parameters contained in the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> collection. In this example, the parameter placeholder is a <xref:System.Web.UI.WebControls.FormParameter> bound to the value of the <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_952_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_952_1.aspx)]  \n  \n The following code example shows the middle-tier business object that the previous code example uses. This example consists of two basic classes: The `EmployeeLogic` class encapsulates business logic, and the `NorthwindEmployee` class is a model class that contains only the basic functionality required to load and persist data from the data tier. For simplicity, the `EmployeeLogic` class creates a static set of data, rather than retrieving the data from a data tier. It is also helpful for this example, because the sample relies on the user to provide the full name of a Northwind Traders employee to demonstrate filtering. For a complete working example, you must compile and use these classes with the ASP.NET code examples provided.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Web.UI.WebControls.FormParameter> does not validate the value passed by the form element in any way; it uses the raw value. In most cases, you can validate the value of the <xref:System.Web.UI.WebControls.FormParameter> before it is used by a data source control by handling an event, such as the `Selecting`, `Updating`, `Inserting`, or `Deleting` event exposed by the data source control you are using. If the value of the parameter does not pass your validation tests, you can cancel the data operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the associated <xref:System.ComponentModel.CancelEventArgs> class to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_952_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_952_2.vb)]"
  syntax:
    content: public string FormField { get; set; }
    return:
      type: System.String
      description: "En streng som identifiserer variabelen skjema som binder parameteren."
  overload: System.Web.UI.WebControls.FormParameter.FormField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.ValidateInput
  id: ValidateInput
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: ValidateInput
  nameWithType: FormParameter.ValidateInput
  fullName: System.Web.UI.WebControls.FormParameter.ValidateInput
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir en verdi som angir om klienten inndata i parameteren valideres."
  syntax:
    content: public bool ValidateInput { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis klienten inndataene valideres; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormParameter.ValidateInput*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Parameter
  isExternal: false
  name: System.Web.UI.WebControls.Parameter
- uid: System.Web.UI.WebControls.FormParameter.#ctor
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormParameter()
  nameWithType: FormParameter.FormParameter()
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter()
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormParameter(FormParameter)
  nameWithType: FormParameter.FormParameter(FormParameter)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(FormParameter)
- uid: System.Web.UI.WebControls.FormParameter
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormParameter
  nameWithType: FormParameter
  fullName: System.Web.UI.WebControls.FormParameter
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormParameter(String,String)
  nameWithType: FormParameter.FormParameter(String,String)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.Data.DbType,System.String)
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormParameter(String,DbType,String)
  nameWithType: FormParameter.FormParameter(String,DbType,String)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(String,DbType,String)
- uid: System.Data.DbType
  parent: System.Data
  isExternal: false
  name: DbType
  nameWithType: DbType
  fullName: System.Data.DbType
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormParameter(String,TypeCode,String)
  nameWithType: FormParameter.FormParameter(String,TypeCode,String)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(String,TypeCode,String)
- uid: System.TypeCode
  parent: System
  isExternal: true
  name: TypeCode
  nameWithType: TypeCode
  fullName: System.TypeCode
- uid: System.Web.UI.WebControls.FormParameter.Clone
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: Clone()
  nameWithType: FormParameter.Clone()
  fullName: System.Web.UI.WebControls.FormParameter.Clone()
- uid: System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: Evaluate(HttpContext,Control)
  nameWithType: FormParameter.Evaluate(HttpContext,Control)
  fullName: System.Web.UI.WebControls.FormParameter.Evaluate(HttpContext,Control)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.FormParameter.FormField
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormField
  nameWithType: FormParameter.FormField
  fullName: System.Web.UI.WebControls.FormParameter.FormField
- uid: System.Web.UI.WebControls.FormParameter.ValidateInput
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: ValidateInput
  nameWithType: FormParameter.ValidateInput
  fullName: System.Web.UI.WebControls.FormParameter.ValidateInput
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.FormParameter.#ctor*
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormParameter
  nameWithType: FormParameter.FormParameter
- uid: System.Web.UI.WebControls.FormParameter.Clone*
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: Clone
  nameWithType: FormParameter.Clone
- uid: System.Web.UI.WebControls.FormParameter.Evaluate*
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: Evaluate
  nameWithType: FormParameter.Evaluate
- uid: System.Web.UI.WebControls.FormParameter.FormField*
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormField
  nameWithType: FormParameter.FormField
- uid: System.Web.UI.WebControls.FormParameter.ValidateInput*
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: ValidateInput
  nameWithType: FormParameter.ValidateInput
