### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  id: LinqDataSourceStatusEventArgs
  children:
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount
  langs:
  - csharp
  name: LinqDataSourceStatusEventArgs
  nameWithType: LinqDataSourceStatusEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  type: Class
  summary: "Provides data for the <xref href=&quot;System.Web.UI.WebControls.LinqDataSource.ContextCreated&quot;></xref>, <xref href=&quot;System.Web.UI.WebControls.LinqDataSource.Deleted&quot;></xref>, <xref href=&quot;System.Web.UI.WebControls.LinqDataSource.Inserted&quot;></xref>, <xref href=&quot;System.Web.UI.WebControls.LinqDataSource.Selected&quot;></xref>, and <xref href=&quot;System.Web.UI.WebControls.LinqDataSource.Updated&quot;></xref> events."
  remarks: "Klassen LinqDataSourceStatusEventArgs gjør det mulig å undersøke resultatene av dataoperasjoner som er utført av en <xref:System.Web.UI.WebControls.LinqDataSource>kontroll.</xref:System.Web.UI.WebControls.LinqDataSource> En LinqDataSourceStatusEventArgs-objekt som er sendt til hendelsesbehandling for den <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, og <xref:System.Web.UI.WebControls.LinqDataSource.Updated>hendelser i den <xref:System.Web.UI.WebControls.LinqDataSource>kontroll.</xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.Updated> </xref:System.Web.UI.WebControls.LinqDataSource.Selected> </xref:System.Web.UI.WebControls.LinqDataSource.Inserted> </xref:System.Web.UI.WebControls.LinqDataSource.Deleted> </xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>       Hvis Dataoperasjonen er fullført, resulterende dataobjektet lagres i det <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>egenskapen og <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>egenskapen `null`.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> </xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> Hvis mislyktes Dataoperasjonen unntak oppstod under Dataoperasjonen lagres i det <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>egenskapen og <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>egenskapen `null`.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> </xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> Hvis du håndtert unntak som er representert av den <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>, sette den <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>egenskapen `true` slik at ikke det vil bli utløst unntaket.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> </xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>       Du hente antall dataposter som er returnert fra en spørring til den <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A>egenskapen.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A>"
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event. In the event handler, if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is `null`, the product ID is retrieved from the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property. The product ID is a primary key for the table and is set by the database, therefore the value is not known until the insert operation has finished. The exception message is logged if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is not equal to `null`. The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property is then set to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_259_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_259_1.aspx)]"
  syntax:
    content: 'public class LinqDataSourceStatusEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)
  id: '#ctor(System.Exception)'
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: LinqDataSourceStatusEventArgs(Exception)
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Exception)
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Exception)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&quot;> </xref> klassen ved hjelp av et unntak som oppstod som følge av Dataoperasjonen."
  remarks: "Denne konstruktøren brukes når det et unntak under Dataoperasjonen. Den <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>automatisk settes til `null`.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>"
  syntax:
    content: public LinqDataSourceStatusEventArgs (Exception exception);
    parameters:
    - id: exception
      type: System.Exception
      description: "Feil som oppstod under Dataoperasjonen."
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: LinqDataSourceStatusEventArgs(Object)
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&quot;> </xref> klassen ved hjelp av et objekt som inneholder data fra Dataoperasjonen."
  remarks: "Denne konstruktøren brukes når Dataoperasjonen er fullført uten feil. Den `result` parameteren inneholder et objekt som representerer resultatet av Dataoperasjonen. Den <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>automatisk settes til `null`.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>"
  syntax:
    content: public LinqDataSourceStatusEventArgs (object result);
    parameters:
    - id: result
      type: System.Object
      description: "Et objekt som inneholder data som er resultatet av en operasjon for dataene."
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)
  id: '#ctor(System.Object,System.Int32)'
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: LinqDataSourceStatusEventArgs(Object,Int32)
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object,Int32)
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object,Int32)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&quot;> </xref> klassen med et objekt som inneholder data fra Dataoperasjonen og hvor mange rader som returneres."
  syntax:
    content: public LinqDataSourceStatusEventArgs (object result, int totalRowCount);
    parameters:
    - id: result
      type: System.Object
      description: "Et objekt som inneholder data som er resultatet av en operasjon for dataene."
    - id: totalRowCount
      type: System.Int32
      description: "Antall rader som ble returnert fra en operasjon for henting av data."
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: LinqDataSourceStatusEventArgs.Exception
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Henter unntak oppstod under Dataoperasjonen."
  remarks: "Hvis det oppstår et unntak under Dataoperasjonen, lagret unntaket i egenskapen unntak. Du kan opprette hendelsesbehandling for den <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, og <xref:System.Web.UI.WebControls.LinqDataSource.Updated>hendelser og hente unntaket, eventuelt via egenskapen unntak.</xref:System.Web.UI.WebControls.LinqDataSource.Updated> </xref:System.Web.UI.WebControls.LinqDataSource.Selected> </xref:System.Web.UI.WebControls.LinqDataSource.Inserted> </xref:System.Web.UI.WebControls.LinqDataSource.Deleted> </xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>"
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event. In the event handler, if the Exception property is `null`, the product ID is retrieved from the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property. The product ID is a primary key for the table and is set by the database, so the value is not known until the insert operation has finished. The exception message is logged if the Exception property is not equal to `null`. The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property is then set to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_503_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_503_1.aspx)]"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "En <xref:System.Exception>objektet som representerer unntaket, hvis det oppstod en feilen; ellers <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Exception>"
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: LinqDataSourceStatusEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir en verdi som angir om unntaket ble håndtert, og at den ikke må være et nytt."
  remarks: "Du kan opprette hendelsesbehandling for den <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, og <xref:System.Web.UI.WebControls.LinqDataSource.Updated>hendelser å undersøke unntak som oppstod under disse operasjonene.</xref:System.Web.UI.WebControls.LinqDataSource.Updated> </xref:System.Web.UI.WebControls.LinqDataSource.Selected> </xref:System.Web.UI.WebControls.LinqDataSource.Inserted> </xref:System.Web.UI.WebControls.LinqDataSource.Deleted> </xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated> Hvis du unntaket og ikke vil bli utløst på nytt, angi ExceptionHandled egenskapen `true`. Hvis du ikke angi egenskapen ExceptionHandled `true`, unntaket vil bli overført til neste hendelsesbehandlingen i kallstakken."
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event. In the event handler, if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is `null`, the product ID is retrieved from the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property. The product ID is a primary key for the table and is set by the database, therefore the value is not known until the insert operation has finished. The exception message is logged if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is not equal to `null`. The ExceptionHandled property is then set to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_702_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_702_1.aspx)]"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis unntaket ble håndtert; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result
  id: Result
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: Result
  nameWithType: LinqDataSourceStatusEventArgs.Result
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Henter objektet som representerer resultatet av en operasjon for dataene."
  remarks: "Du kan bruke egenskapen resultatet for å undersøke verdier som er returnert fra en Dataoperasjonen. Du kan hente utdataparametere fra en Dataoperasjonen eller endre verdiene som er returnert fra en spørring.       Data som er lagret i egenskapen resultatet er avhengig av hva slags Dataoperasjonen som er utført. Når du sletter data, egenskapen resultatet inneholder et objekt av typen som er angitt i den <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>egenskap med de opprinnelige verdiene som ble slettet fra datakilden.</xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> Når du setter inn eller oppdatere data, egenskapen resultatet inneholder et objekt av typen som er angitt i den <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>egenskapen med de nye verdiene som er lagret i datakilden.</xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> Når du velger data, inneholder egenskapen resultatet resultatene av spørringen.       Hvis den valgte spørringen omfatter gruppering dataene, eller velge et delsett av egenskaper fra typen som er angitt i den <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>egenskapen egenskapen resultatet inneholder et objekt av typen dynamisk opprettet.</xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> Ellers egenskapen resultatet inneholder et objekt av typen som er angitt i den <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>egenskapen.</xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>"
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event. In the event handler, if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is `null`, the product ID is retrieved from the object in the Result property. The product ID is a primary key for the table and is set by the database, therefore the value is not known until the insert operation has finished. The exception message is logged if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is not equal to `null`. The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property is then set to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_302_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_302_1.aspx)]"
  syntax:
    content: public object Result { get; }
    return:
      type: System.Object
      description: "Et objekt som inneholder data fra Dataoperasjonen."
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount
  id: TotalRowCount
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: TotalRowCount
  nameWithType: LinqDataSourceStatusEventArgs.TotalRowCount
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Henter antall rader i et datasett fra en operasjon for henting av data."
  remarks: "Du kan bruke egenskapen TotalRowCount ikke hente antall poster i datasettet under en operasjon for henting av data. Vanligvis kan du hente denne egenskapen når du viser sider med data, og at du vil vise antall poster.       Når dataene er i sidevekslet, kan verdien for egenskapen TotalRowCount være forskjellig fra faktisk antall rader som returneres av spørringen. Dette er fordi spørringen returnerer hvor mange rader som kreves for denne siden for dataene.       Egenskapen TotalRowCount inneholder antall poster fra en spørring når den brukes i en hendelsesbehandling for den <xref:System.Web.UI.WebControls.LinqDataSource.Selected>hendelsen.</xref:System.Web.UI.WebControls.LinqDataSource.Selected> Når egenskapen åpnes fra en hendelsesbehandling for den <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, eller <xref:System.Web.UI.WebControls.LinqDataSource.Updated>hendelsen egenskapen TotalRowCount inneholder -1.</xref:System.Web.UI.WebControls.LinqDataSource.Updated> </xref:System.Web.UI.WebControls.LinqDataSource.Inserted> </xref:System.Web.UI.WebControls.LinqDataSource.Deleted> </xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>       Verdien for egenskapen TotalRowCount avhenger av den <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>for den <xref:System.Web.UI.WebControls.LinqDataSource>kontroll, og den `AllowPaging` databundet kontrollen.</xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> Tabellen nedenfor viser mulige verdier for egenskapen TotalRowCount.      | Autoside-egenskapen for LinqDataSource kontrollen | AllowPaging-egenskapen for databundet kontrollen | TotalRowCount egenskapen | Resultatet |   |-------------------------------------------------|-------------------------------------------------|----------------------------|-------------|   | `true`|`true`| Antall oppføringer for en spørring. | Data automatisk sidevekslet. |   | `false`|`false`| Antall oppføringer for en spørring. | Data er ikke sidevekslet. |   | `true`|`false`|-1| Data er ikke sidevekslet. |   | `false`|`true`| Verdien for at du tilordnet egenskapen <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A>i behandlingsprogram for hendelsen <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>. | Data er sidevekslet i henhold til verdiene du angav da du tilpasset Bla. |</xref:System.Web.UI.WebControls.LinqDataSource.Selecting> </xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A>"
  example:
  - "The following example shows a Web page with a <xref:System.Web.UI.WebControls.LinqDataSource> control, a <xref:System.Web.UI.WebControls.GridView> control, and a <xref:System.Web.UI.WebControls.Literal> control. The <xref:System.Web.UI.WebControls.LinqDataSource> control defines an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_60_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_60_1.aspx)]  \n  \n The following example shows the code for the event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event. The value of the TotalRowCount property is assigned to the <xref:System.Web.UI.WebControls.Literal> control.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_60_2.vb)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_60_2.cs)]"
  syntax:
    content: public int TotalRowCount { get; }
    return:
      type: System.Int32
      description: "Totalt antall rader i et datasett fra data henting av operasjonen. -1 hvis den <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&quot;> </xref> objektet ble opprettet under en operasjon for endring av data; -1 Hvis du har aktivert tilpasset Bla ved å angi <> </> *> til <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> og ved å angi <> </> *> til <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: LinqDataSourceStatusEventArgs(Exception)
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Exception)
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: LinqDataSourceStatusEventArgs(Object)
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: LinqDataSourceStatusEventArgs(Object,Int32)
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object,Int32)
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: Exception
  nameWithType: LinqDataSourceStatusEventArgs.Exception
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: LinqDataSourceStatusEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: Result
  nameWithType: LinqDataSourceStatusEventArgs.Result
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: TotalRowCount
  nameWithType: LinqDataSourceStatusEventArgs.TotalRowCount
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor*
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: LinqDataSourceStatusEventArgs
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception*
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: Exception
  nameWithType: LinqDataSourceStatusEventArgs.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: LinqDataSourceStatusEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result*
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: Result
  nameWithType: LinqDataSourceStatusEventArgs.Result
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount*
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: TotalRowCount
  nameWithType: LinqDataSourceStatusEventArgs.TotalRowCount
