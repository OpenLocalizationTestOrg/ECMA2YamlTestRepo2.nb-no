### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.HttpSessionState
  id: HttpSessionState
  children:
  - System.Web.SessionState.HttpSessionState.Abandon
  - System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)
  - System.Web.SessionState.HttpSessionState.Clear
  - System.Web.SessionState.HttpSessionState.CodePage
  - System.Web.SessionState.HttpSessionState.Contents
  - System.Web.SessionState.HttpSessionState.CookieMode
  - System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)
  - System.Web.SessionState.HttpSessionState.Count
  - System.Web.SessionState.HttpSessionState.GetEnumerator
  - System.Web.SessionState.HttpSessionState.IsCookieless
  - System.Web.SessionState.HttpSessionState.IsNewSession
  - System.Web.SessionState.HttpSessionState.IsReadOnly
  - System.Web.SessionState.HttpSessionState.IsSynchronized
  - System.Web.SessionState.HttpSessionState.Item(System.Int32)
  - System.Web.SessionState.HttpSessionState.Item(System.String)
  - System.Web.SessionState.HttpSessionState.Keys
  - System.Web.SessionState.HttpSessionState.LCID
  - System.Web.SessionState.HttpSessionState.Mode
  - System.Web.SessionState.HttpSessionState.Remove(System.String)
  - System.Web.SessionState.HttpSessionState.RemoveAll
  - System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)
  - System.Web.SessionState.HttpSessionState.SessionID
  - System.Web.SessionState.HttpSessionState.StaticObjects
  - System.Web.SessionState.HttpSessionState.SyncRoot
  - System.Web.SessionState.HttpSessionState.Timeout
  langs:
  - csharp
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
  type: Class
  summary: "Gir tilgang til status for økten verdier i tillegg til økten på radnivå innstillinger og levetid management metoder."
  remarks: "ASP.NET gir status for økten management slik at du kan lagre informasjon som er forbundet med en økt som unik nettleseren på tvers av flere forespørsler. Du kan lagre en samling av verdiene som det refereres til av et nøkkelnavn eller numerisk indeks. Tilgang til økten verdiene og funksjonalitet finnes ved hjelp av HttpSessionState-klassen som er tilgjengelig via den <xref:System.Web.HttpContext.Session%2A>for gjeldende <xref:System.Web.HttpContext>, eller <xref:System.Web.UI.Page.Session%2A>egenskapen for <xref:System.Web.UI.Page>.</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.Session%2A> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.Session%2A>       Økten data er knyttet til en bestemt leser-økt ved hjelp av en unik identifikator. Som standard denne identifikatoren som er lagret i ikke utløper økten informasjonskapsler i nettleseren, men du kan også konfigurere programmet til å lagre øktidentifikatoren i URL-adressen ved å angi den `cookieless` attributt til `true` eller <xref:System.Web.HttpCookieMode>i elementet i konfigurasjonen av programmet.</xref:System.Web.HttpCookieMode> Du kan ha ASP.NET fastslå om informasjonskapsler støttes av nettleseren ved å angi en verdi for <xref:System.Web.HttpCookieMode>for den `cookieless` attributtet.</xref:System.Web.HttpCookieMode> Du kan også få ASP.NET fastslå om informasjonskapsler er aktivert for nettleseren ved å angi en verdi for <xref:System.Web.HttpCookieMode>for den `cookieless` attributtet.</xref:System.Web.HttpCookieMode> Hvis informasjonskapsler støttes når <xref:System.Web.HttpCookieMode>er angitt, eller aktivert når <xref:System.Web.HttpCookieMode>er angitt, og deretter økten identifikatoren er lagret i en informasjonskapsel; ellers øktidentifikatoren lagres i URL-adressen.</xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode>       Økter er startet under den første forespørselen og økten verdier vil beholde, så lenge en ny forespørsel av nettleseren før antall minutter angitt i <xref:System.Web.SessionState.HttpSessionState.Timeout%2A>egenskapen pass.</xref:System.Web.SessionState.HttpSessionState.Timeout%2A> Når en ny økt starter, økten <xref:System.Web.SessionState.SessionStateModule.Start>denne hendelsen oppstår.</xref:System.Web.SessionState.SessionStateModule.Start> Du kan bruke denne hendelsen til å utføre flere arbeid ved starten av en økt, for eksempel sette standard økten verdier. Når en økt blir tidsavbrutt, den <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>-metoden eller ASP.NET-programmet avsluttes, økten <xref:System.Web.SessionState.SessionStateModule.End>denne hendelsen oppstår.</xref:System.Web.SessionState.SessionStateModule.End> </xref:System.Web.SessionState.HttpSessionState.Abandon%2A> Du kan bruke denne hendelsen til å utføre nødvendige opprydding. Den <xref:System.Web.SessionState.SessionStateModule.End>hendelsen skjer bare når økttilstanden `mode` er satt til <xref:System.Web.SessionState.SessionStateMode>.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateModule.End>       Hvis du vil forbedre ytelsen, økter som bruker informasjonskapsler ikke fordeler økten lagring til dataene faktisk er lagret i det <xref:System.Web.UI.Page.Session%2A>objektet.</xref:System.Web.UI.Page.Session%2A> Hvis du vil ha mer informasjon, se den <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>egenskapen.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>       Status for økten opprettholdes ikke grensene for ASP.NET-programmet. Hvis en nettleser går til et annet program, er ikke informasjonen om den tilgjengelige for den nye applikasjonen.       Økten verdier lagres i minnet på nettserveren, som standard. Du kan også lagre økten verdier i en SQL Server-database, en ASP.NET tilstand server eller en egendefinert server. Dette gjør mulig å beholde økten verdiene i tilfeller der prosessen for ASP.NET eller IIS eller ASP.NET-programmet starter på nytt og gjøre økten verdier tilgjengelige på tvers av alle serverne i webfarmen. Dette er konfigurert ved å angi den `mode` attributt til en gyldig <xref:System.Web.SessionState.SessionStateMode>verdien i elementet i konfigurasjonen av programmet.</xref:System.Web.SessionState.SessionStateMode> Hvis du vil ha mer informasjon, se [status for økten modi](~/add/includes/ajax-current-ext-md.md).       Alternativer til økttilstanden inkluderer programtilstanden (se egenskapen <xref:System.Web.HttpApplication.Application%2A>) og hurtigbufferen for ASP.NET (se navneområdet <xref:System.Web.Caching>), som lagre variabler skal ha tilgang til alle brukere av en ASP.NET-programmet og ASP.NET-profil (se navneområdet <xref:System.Web.Profile>), som vedvarer brukerverdiene i et datalager uten utløper dem ved hjelp av et tidsavbrudd; ASP.NET <xref:System.Web.UI.WebControls?displayProperty=fullName>, som beholde kontrollverdiene i <xref:System.Web.UI.Control.ViewState%2A>; <xref:System.Web.HttpResponse.Cookies%2A>; <xref:System.Web.HttpRequest.QueryString%2A>egenskapen; og på et HTML-skjema som er tilgjengelige fra HTTP `POST` ved hjelp av den <xref:System.Web.HttpRequest.Form%2A>samlingen.</xref:System.Web.HttpRequest.Form%2A> </xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.HttpResponse.Cookies%2A> </xref:System.Web.UI.Control.ViewState%2A> </xref:System.Web.UI.WebControls?displayProperty=fullName> </xref:System.Web.Profile> </xref:System.Web.Caching> </xref:System.Web.HttpApplication.Application%2A> For mer informasjon om forskjellen mellom økttilstanden og andre alternativer for tilstand-management, kan du se [ASP.NET tilstand Management anbefalinger](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example sets and retrieves values from session state.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[HttpSessionState#30](~/add/codesnippet/csharp/t-system.web.sessionstat_5_1.aspx)]\n [!code-vb[HttpSessionState#30](~/add/codesnippet/visualbasic/t-system.web.sessionstat_5_1.aspx)]"
  syntax:
    content: 'public sealed class HttpSessionState : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Abandon
  id: Abandon
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Abandon()
  nameWithType: HttpSessionState.Abandon()
  fullName: System.Web.SessionState.HttpSessionState.Abandon()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Avbryter denne økten."
  remarks: "Når Abandon-metoden kalles, gjeldende økt er ikke lenger gyldig, og en ny økt kan startes. Forkaste årsaker i <xref:System.Web.SessionState.SessionStateModule.End>-hendelse.</xref:System.Web.SessionState.SessionStateModule.End> En ny <xref:System.Web.SessionState.SessionStateModule.Start>hendelsen vil opp ved neste forespørsel.</xref:System.Web.SessionState.SessionStateModule.Start>       Økt-IDer for ble ignorert eller utløpt økter er resirkulert som standard. Det vil si hvis en forespørsel som inneholder øktidentifikatoren for en økt utløpt eller ble ignorert, er en ny økt startet med samme identifikator i økten. Du kan deaktivere dette ved å angi `regenerateExpiredSessionId` for konfigurasjonselementet til `true`. Hvis du vil ha mer informasjon, se [økten identifikatorer](~/add/includes/ajax-current-ext-md.md).       Den <xref:System.Web.SessionState.SessionStateModule.End>hendelsen støttes bare når <xref:System.Web.SessionState.HttpSessionState.Mode%2A>egenskapen settes til <xref:System.Web.SessionState.SessionStateMode>.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A> </xref:System.Web.SessionState.SessionStateModule.End>"
  syntax:
    content: public void Abandon ();
    parameters: []
  overload: System.Web.SessionState.HttpSessionState.Abandon*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Add(String,Object)
  nameWithType: HttpSessionState.Add(String,Object)
  fullName: System.Web.SessionState.HttpSessionState.Add(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Legger til et nytt element i samlingen status for økten."
  remarks: "Hvis den `name` parameteren refererer til en eksisterende økt tilstand element, er det eksisterende elementet overskrives med angitt `value`."
  example:
  - "The following example shows how to store values in session state by using the Add method. It also shows how to remove values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Remove%2A> method. A <xref:System.Web.UI.WebControls.Repeater> control is used to display the contents session state on the Web page. The <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> method is used to iterate through the session-state collection and populate the <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[HttpSessionState#13](~/add/codesnippet/csharp/m-system.web.sessionstat_16_1.aspx)]\n [!code-vb[HttpSessionState#13](~/add/codesnippet/visualbasic/m-system.web.sessionstat_16_1.aspx)]"
  syntax:
    content: public void Add (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på elementet til å legge til samlingen status for økten."
    - id: value
      type: System.Object
      description: "Verdien for elementet til å legge til samlingen status for økten."
  overload: System.Web.SessionState.HttpSessionState.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Clear
  id: Clear
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Clear()
  nameWithType: HttpSessionState.Clear()
  fullName: System.Web.SessionState.HttpSessionState.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Fjerner alle nøkler og verdier fra samlingen status for økten."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.SessionState.HttpSessionState.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.CodePage
  id: CodePage
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: CodePage
  nameWithType: HttpSessionState.CodePage
  fullName: System.Web.SessionState.HttpSessionState.CodePage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Henter eller angir tegnsett identifikatoren for den gjeldende økten."
  remarks: "Et tegnsett (tegntabell) brukes til å tolke flere tegnsett data, fastsetting tegnverdi, og derfor sorteringsrekkefølge. Tegntabellen innstillingene gjelder bare for flere tegnsett data, ikke til Unicode tegn.       Dette <xref:System.Web.SessionState.IHttpSessionState.CodePage%2A>egenskapen er angitt for kompatibilitet med tidligere versjoner av ASP bare.</xref:System.Web.SessionState.IHttpSessionState.CodePage%2A> Hvis du ikke trenger å beholde bakoverkompatibilitet med ASP-sider, kan du bruke den <xref:System.Web.HttpResponse.ContentEncoding%2A>egenskapen i stedet.</xref:System.Web.HttpResponse.ContentEncoding%2A>"
  syntax:
    content: public int CodePage { get; set; }
    return:
      type: System.Int32
      description: "Tegnsett identifikatoren for den gjeldende økten."
  overload: System.Web.SessionState.HttpSessionState.CodePage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Contents
  id: Contents
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Contents
  nameWithType: HttpSessionState.Contents
  fullName: System.Web.SessionState.HttpSessionState.Contents
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Henter en referanse til det gjeldende status for økt-objektet."
  remarks: "Egenskapen innholdet er angitt for kompatibilitet med tidligere versjoner av ASP."
  example:
  - "The following code example lists the item names and values in the Contents property.  \n  \n [!code-cs[HttpSessionState#9](~/add/codesnippet/csharp/p-system.web.sessionstat_8_1.aspx)]\n [!code-vb[HttpSessionState#9](~/add/codesnippet/visualbasic/p-system.web.sessionstat_8_1.aspx)]"
  syntax:
    content: public System.Web.SessionState.HttpSessionState Contents { get; }
    return:
      type: System.Web.SessionState.HttpSessionState
      description: "Gjeldende <xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.Contents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.CookieMode
  id: CookieMode
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: CookieMode
  nameWithType: HttpSessionState.CookieMode
  fullName: System.Web.SessionState.HttpSessionState.CookieMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Henter en verdi som angir om programmet er konfigurert for uten informasjonskapsel økter."
  remarks: "Når <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>er `true`, egenskapen CookieMode returnerer <xref:System.Web.HttpCookieMode>, og hvis egenskapen CookieMode <xref:System.Web.HttpCookieMode>.</xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode> </xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>"
  example:
  - "The following code example sets the `cookieless` session attribute to `true` in the Web.config file. For this sample application configuration, the CookieMode property would return <xref:System.Web.HttpCookieMode>.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"InProc\"  \n      cookieless=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public System.Web.HttpCookieMode CookieMode { get; }
    return:
      type: System.Web.HttpCookieMode
      description: "Én av de <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref> verdier som angir om programmet er konfigurert for uten informasjonskapsel økter. Standard <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.CookieMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: HttpSessionState.CopyTo(Array,Int32)
  fullName: System.Web.SessionState.HttpSessionState.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Kopierer samlingen av status for økten verdier til en endimensjonal matrise som starter på den angitte indeksen i matrisen."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Den <xref:System.Array>som mottar økt-verdier.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Den nullbaserte indeksen i `array` fra som kopiering starter."
  overload: System.Web.SessionState.HttpSessionState.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Count
  id: Count
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Count
  nameWithType: HttpSessionState.Count
  fullName: System.Web.SessionState.HttpSessionState.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Henter antallet elementer i samlingen status for økten."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Antall elementer i samlingen."
  overload: System.Web.SessionState.HttpSessionState.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.GetEnumerator
  id: GetEnumerator
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: HttpSessionState.GetEnumerator()
  fullName: System.Web.SessionState.HttpSessionState.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Returnerer en opplisting som kan brukes til å lese alle av status for økten variabelnavn i den gjeldende økten."
  remarks: ''
  example:
  - "The following example shows how to store values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Add%2A> method. It also shows how to remove values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Remove%2A> method. A <xref:System.Web.UI.WebControls.Repeater> control is used to display the contents of session state on the Web page. The GetEnumerator method is used to iterate through the session-state collection and populate the <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n [!code-cs[HttpSessionState#13](~/add/codesnippet/csharp/m-system.web.sessionstat_14_1.aspx)]\n [!code-vb[HttpSessionState#13](~/add/codesnippet/visualbasic/m-system.web.sessionstat_14_1.aspx)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "En <xref:System.Collections.IEnumerator>som kan gå gjennom variabelnavn i samlingen status for økten.</xref:System.Collections.IEnumerator>"
  overload: System.Web.SessionState.HttpSessionState.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsCookieless
  id: IsCookieless
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsCookieless
  nameWithType: HttpSessionState.IsCookieless
  fullName: System.Web.SessionState.HttpSessionState.IsCookieless
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Henter en verdi som angir om økt-IDen er innebygd i URL-adressen eller lagret i en HTTP-informasjonskapsel."
  remarks: "ASP.NET økter er en unik identifikator med hver nettleser. Som standard er den unike identifikatoren for en økt som er lagret i ikke utløper økten informasjonskapsler i nettleseren. Du kan angi at økten identifikatorer ikke lagres i en informasjonskapsel ved å angi den `cookieless` attributt til `true` i konfigurasjonselementet.      > [!NOTE] > For å forbedre sikkerheten for programmet, må programmet Tillat brukere å logge av, slik at den må kalle den <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>metoden.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> Dette reduserer muligheten for en uønsket datakilde ved hjelp av den unike IDen i URL-adressen til å hente private data som er lagret i økten for en bruker.       ASP.NET opprettholder uten informasjonskapsel økttilstanden ved automatisk å sette inn en unik økt-ID i sidens URL-adresse. For eksempel følgende URL-adressen er endret av ASP.NET inkludere unik økt-ID lit3py55t21z5v55vlm25s55: ```   http://www.example.com/(S(4danlfat035muve4g0mvgfrr))/orderform.aspx   ``` ASP.NET endrer koblingene som finnes i alle forespurte sidene ved å bygge en økt-ID-verdi i koblinger like før sending av hver side til nettleseren. Status for økten beholdes så lenge brukeren følger banen til koblingene området formidler. Hvis brukeragenten skriver en URL-adresse på nytt, vil imidlertid forekomsten av status for økten gå tapt.       Økt-IDen er innebygd i URL-adressen etter skråstrek som følger programnavnet og før noen gjenværende fil eller mappe identifikator. Dette gjør det mulig for ASP.NET for å løse programnavnet før som involverer den <xref:System.Web.SessionState.SessionStateModule>i forespørselen.</xref:System.Web.SessionState.SessionStateModule>       Økten identifikatorer brukes i uten informasjonskapsel økter er resirkulert som standard. Det vil si hvis en forespørsel med en økt-ID som er utløpt, startes en ny økt ved hjelp av økt-IDen som er angitt i forespørselen. Dette kan medføre uønsket deling av data for økten når en kobling som inneholder en uten informasjonskapsel økt-ID er delt med flere lesere kanskje via en søkemotoren eller et annet program. Du kan redusere muligheten for økten data som deles av flere klienter ved å deaktivere resirkulering av økten identifikatorer. Hvis du vil gjøre dette, kan du angi den `regenerateExpiredSessionId` for konfigurasjonselementet til `true`. Dette vil føre til en ny økt-ID som genereres når uten informasjonskapsel økten forespørsler med en utløpt økt-ID. Merk at hvis forespørsel med utløpt økt-IDen bruker HTTP `POST` metoden og postede data vil gå tapt når `regenerateExpiredSessionId` er `true`, som utfører en omadressering forsikre deg om at nettleseren har ny økt-ID i URL-adressen for ASP.NET.      > [!NOTE] > Da innstillingen den `regenerateExpiredSessionId` attributt til `true` reduseres muligheten for uønsket deler av økten data, den beskytter ikke mot en uønsket kilde å få tilgang til økten på en annen bruker ved henting av <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>verdien og inkludert i forespørsler til serveren.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Hvis du lagrer private eller sensitiv informasjon i økten, anbefales det at du bruker SSL til å kryptere en kommunikasjon mellom nettleseren og serveren som inkluderer <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>"
  example:
  - "The following code example sets the `cookieless` session attribute to true in the Web.config file.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"InProc\"  \n      cookieless=\"true\"  \n      regenerateExpiredSessionId=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public bool IsCookieless { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis økten er innebygd i URL-adresse. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.IsCookieless*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsNewSession
  id: IsNewSession
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsNewSession
  nameWithType: HttpSessionState.IsNewSession
  fullName: System.Web.SessionState.HttpSessionState.IsNewSession
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Henter en verdi som angir om økten ble opprettet med gjeldende forespørsel."
  syntax:
    content: public bool IsNewSession { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis økten ble opprettet med den gjeldende forespørselen; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.IsNewSession*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsReadOnly
  id: IsReadOnly
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: HttpSessionState.IsReadOnly
  fullName: System.Web.SessionState.HttpSessionState.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Henter en verdi som angir om økten er skrivebeskyttet."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis økten er skrivebeskyttet. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsSynchronized
  id: IsSynchronized
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: HttpSessionState.IsSynchronized
  fullName: System.Web.SessionState.HttpSessionState.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Henter en verdi som angir om tilgang til samlingen av status for økten verdier er synkronisert (tråden trygt)."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis tilgang til samlingen er synkronisert (tråden trygt); Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: HttpSessionState.Item(Int32)
  fullName: System.Web.SessionState.HttpSessionState.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Henter eller angir en verdi for økten etter numerisk indeks."
  syntax:
    content: public object this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Den numeriske indeksen for økt-verdien."
    return:
      type: System.Object
      description: "Status for økten-verdien som er lagret i den angitte indeksen eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis elementet ikke finnes."
  overload: System.Web.SessionState.HttpSessionState.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Item(System.String)
  id: Item(System.String)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Item(String)
  nameWithType: HttpSessionState.Item(String)
  fullName: System.Web.SessionState.HttpSessionState.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Henter eller angir en økt verdi etter navn."
  syntax:
    content: public object this[string name] { get; set; }
    parameters:
    - id: name
      type: System.String
      description: "Nøkkelnavn for økt-verdien."
    return:
      type: System.Object
      description: "Status for økten verdien med det angitte navnet eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis elementet ikke finnes."
  overload: System.Web.SessionState.HttpSessionState.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Keys
  id: Keys
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Keys
  nameWithType: HttpSessionState.Keys
  fullName: System.Web.SessionState.HttpSessionState.Keys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Henter en samling av nøkler for alle verdier som er lagret i samlingen status for økten."
  syntax:
    content: public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }
    return:
      type: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
      description: "Den <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>som inneholder alle øktnøklene.</xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>"
  overload: System.Web.SessionState.HttpSessionState.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.LCID
  id: LCID
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: LCID
  nameWithType: HttpSessionState.LCID
  fullName: System.Web.SessionState.HttpSessionState.LCID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Henter eller angir IDen for nasjonal innstilling (LCID) for den gjeldende økten."
  remarks: "LCID-egenskapen er angitt for kompatibilitet med tidligere versjoner av ASP bare. Hvis du ikke trenger å beholde bakoverkompatibilitet med ASP-sider, kan du bruke den <xref:System.Globalization.CultureInfo.LCID%2A>egenskapen i stedet.</xref:System.Globalization.CultureInfo.LCID%2A>       ASP.NET lagres ikke IDen for nasjonal innstilling i status for økten. LCID egenskapen får tilgang til den <xref:System.Globalization.CultureInfo.LCID%2A>til å hente og angi identifikatoren.</xref:System.Globalization.CultureInfo.LCID%2A>"
  syntax:
    content: public int LCID { get; set; }
    return:
      type: System.Int32
      description: "En <xref:System.Globalization.CultureInfo>-forekomst som angir kulturen for gjeldende økt.</xref:System.Globalization.CultureInfo>"
  overload: System.Web.SessionState.HttpSessionState.LCID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Mode
  id: Mode
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Mode
  nameWithType: HttpSessionState.Mode
  fullName: System.Web.SessionState.HttpSessionState.Mode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Henter gjeldende status for økten-modus."
  remarks: "For informasjon om hvordan du konfigurerer serveren for <xref:System.Web.SessionState.SessionStateMode>eller <xref:System.Web.SessionState.SessionStateMode>Status for økten lagring, se [ASP.NET økten tilstand oversikt over](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateMode>"
  example:
  - "The following code example sets the `mode` session attribute to <xref:System.Web.SessionState.SessionStateMode> in the Web.config file. For SQL Server session mode, the `sqlConnectionString` attribute is also required.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"SQLServer\"  \n      sqlConnectionString=\"Data Source=localhost;Integrated Security=SSPI\"  \n      cookieless=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public System.Web.SessionState.SessionStateMode Mode { get; }
    return:
      type: System.Web.SessionState.SessionStateMode
      description: "Én av de <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> verdier."
  overload: System.Web.SessionState.HttpSessionState.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Remove(System.String)
  id: Remove(System.String)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Remove(String)
  nameWithType: HttpSessionState.Remove(String)
  fullName: System.Web.SessionState.HttpSessionState.Remove(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Sletter et element fra samlingen status for økten."
  remarks: "Hvis den økttilstanden samlingen ikke inneholder et element med den angitte `name`, samlingen forblir uendret. Ingen unntak."
  example:
  - "The following example shows how to store values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Add%2A> method. It also shows how to remove values in session state by using the Remove method. A <xref:System.Web.UI.WebControls.Repeater> control is used to display the contents of session state on the Web page. The <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> method is used to iterate through the session-state collection and populate the <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n [!code-cs[HttpSessionState#13](~/add/codesnippet/csharp/m-system.web.sessionstat_6_1.aspx)]\n [!code-vb[HttpSessionState#13](~/add/codesnippet/visualbasic/m-system.web.sessionstat_6_1.aspx)]"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på elementet du vil slette fra samlingen status for økten."
  overload: System.Web.SessionState.HttpSessionState.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.RemoveAll
  id: RemoveAll
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: RemoveAll()
  nameWithType: HttpSessionState.RemoveAll()
  fullName: System.Web.SessionState.HttpSessionState.RemoveAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Fjerner alle nøkler og verdier fra samlingen status for økten."
  remarks: "RemoveAll utfører samme funksjon som <xref:System.Web.SessionState.HttpSessionState.Clear%2A>.</xref:System.Web.SessionState.HttpSessionState.Clear%2A>"
  syntax:
    content: public void RemoveAll ();
    parameters: []
  overload: System.Web.SessionState.HttpSessionState.RemoveAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: HttpSessionState.RemoveAt(Int32)
  fullName: System.Web.SessionState.HttpSessionState.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Sletter et element i en angitt indeks fra samlingen status for økten."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Indeksen for elementet som skal fjernes fra samlingen status for økten."
  overload: System.Web.SessionState.HttpSessionState.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n \\- or -  \n  \n <code>index</code> is equal to or greater than <xref:System.Web.SessionState.HttpSessionState.Count*>."
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.SessionID
  id: SessionID
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: SessionID
  nameWithType: HttpSessionState.SessionID
  fullName: System.Web.SessionState.HttpSessionState.SessionID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Henter den unike identifikatoren for økten."
  remarks: "SessionID-egenskapen brukes til å identifisere en nettleser med økten data på serveren. SessionID-verdien er tilfeldig generert av ASP.NET og lagres i ikke utløper økten informasjonskapsler i nettleseren. Verdien for økt-ID sendes deretter i en informasjonskapsel med hver forespørsel til ASP.NET-programmet.       Hvis du vil deaktivere bruken av informasjonskapsler i ASP.NET-programmet og fremdeles bruke økttilstanden, kan du konfigurere programmet til å lagre øktidentifikatoren i URL-adresse i stedet for en informasjonskapsel ved å angi den `cookieless` for konfigurasjonselementet til `true`, eller til <xref:System.Web.HttpCookieMode>, i filen Web.config for applikasjonen.</xref:System.Web.HttpCookieMode> Du kan ha ASP.NET fastslå om informasjonskapsler støttes av nettleseren ved å angi en verdi for <xref:System.Web.HttpCookieMode>for den `cookieless` attributtet.</xref:System.Web.HttpCookieMode> Du kan også få ASP.NET fastslå om informasjonskapsler er aktivert for nettleseren ved å angi en verdi for <xref:System.Web.HttpCookieMode>for den `cookieless` attributtet.</xref:System.Web.HttpCookieMode> Hvis informasjonskapsler støttes når <xref:System.Web.HttpCookieMode>er angitt, eller aktivert når <xref:System.Web.HttpCookieMode>er angitt, og deretter økten identifikatoren er lagret i en informasjonskapsel; ellers øktidentifikatoren lagres i URL-adressen.</xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode> Hvis du vil ha mer informasjon, se den <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>egenskapen.</xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>       SessionID sendes mellom serveren og leseren i ren tekst i en informasjonskapsel eller i URL-adressen. Resultatet kan en uønsket kilde få tilgang til økten på en annen bruker ved henting av verdien for økt-ID og inkludere det i forespørsler til serveren. Hvis du lagrer private eller sensitiv informasjon i økten, anbefales det at du bruker SSL til å kryptere en kommunikasjon mellom nettleseren og serveren som inkluderer SessionID.       Når du bruker informasjonskapsel kodebasert økttilstanden, ASP.NET tildeler ikke lagring for økten data før den <xref:System.Web.UI.Page.Session%2A>objektet brukes.</xref:System.Web.UI.Page.Session%2A> Resultatet generert en ny økt-ID for hver sideforespørsel før session-objektet er tilgjengelig. Hvis programmet krever en statisk økt-ID for hele økten, kan du enten Implementer den `Session_Start` -metoden i programmets Global.asax filen og lagre data i det <xref:System.Web.UI.Page.Session%2A>objekt for å løse økt-ID, eller du kan bruke kode et annet sted i programmets til å lagre eksplisitt data i det <xref:System.Web.UI.Page.Session%2A>objektet.</xref:System.Web.UI.Page.Session%2A> </xref:System.Web.UI.Page.Session%2A>       Hvis programmet bruker uten informasjonskapsel økttilstanden, genereres på første sidevisningen økt-IDen, og opprettholdes for hele økten."
  example:
  - "The following code example shows a Web.config file that configures session state to use cookieless session identifiers. For more information, see the <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> property.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      cookieless=\"true\"  \n      regenerateExpiredSessionId=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public string SessionID { get; }
    return:
      type: System.String
      description: "Unik økt-IDen."
  overload: System.Web.SessionState.HttpSessionState.SessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.StaticObjects
  id: StaticObjects
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: StaticObjects
  nameWithType: HttpSessionState.StaticObjects
  fullName: System.Web.SessionState.HttpSessionState.StaticObjects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Henter en samling objekter som er deklarert med <xref uid=&quot;langword_csharp_&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; name=&quot;&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; href=&quot;&quot;> </xref> koder i ASP.NET-programmet filen Global.asax."
  remarks: "Hvis ikke støtter et objekt på en side serialisering og <xref:System.Web.SessionState.HttpSessionState.Mode%2A>er utenfor prosessen (<xref:System.Web.SessionState.SessionStateMode> eller <xref:System.Web.SessionState.SessionStateMode>), objektet vil ikke bli opprettet, og vil ikke bli lagt til i denne samlingen.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A>       StaticObjects-egenskapen er angitt for kompatibilitet med tidligere versjoner av ASP."
  example:
  - "The following code example lists the `id` and object type of the objects in the StaticObjects collection.  \n  \n [!code-cs[HttpSessionState#10](~/add/codesnippet/csharp/p-system.web.sessionstat_9_1.aspx)]\n [!code-vb[HttpSessionState#10](~/add/codesnippet/visualbasic/p-system.web.sessionstat_9_1.aspx)]"
  syntax:
    content: public System.Web.HttpStaticObjectsCollection StaticObjects { get; }
    return:
      type: System.Web.HttpStaticObjectsCollection
      description: "En <xref href=&quot;System.Web.HttpStaticObjectsCollection&quot;> </xref> som inneholder objekter som er deklarert i filen Global.asax."
  overload: System.Web.SessionState.HttpSessionState.StaticObjects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.SyncRoot
  id: SyncRoot
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: SyncRoot
  nameWithType: HttpSessionState.SyncRoot
  fullName: System.Web.SessionState.HttpSessionState.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Henter et objekt som kan brukes til å synkronisere tilgang til samlingen av status for økten verdier."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Et objekt som kan brukes til å synkronisere tilgang til samlingen."
  overload: System.Web.SessionState.HttpSessionState.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Timeout
  id: Timeout
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Timeout
  nameWithType: HttpSessionState.Timeout
  fullName: System.Web.SessionState.HttpSessionState.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Henter eller angir hvor lang tid, i minutter, tillatt mellom forespørsler før leverandøren status for økten avsluttes økten."
  remarks: "Timeout-egenskapen kan angis i Web.config-filen for en applikasjon som bruker den `timeout` for konfigurasjonselementet, eller du kan angi egenskapen tidsavbruddsverdien direkte ved hjelp av programmet kode.       Kan ikke angis Timeout-egenskapen til en verdi som er større enn 525,600 minutter (1 år). Standardverdien er 20 minutter."
  example:
  - "The following code example sets the `timeout` session attribute to 30 minutes in the Web.config file.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"InProc\"  \n      cookieless=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public int Timeout { get; set; }
    return:
      type: System.Int32
      description: "Tidsavbruddsperioden i minutter."
  overload: System.Web.SessionState.HttpSessionState.Timeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.SessionState.HttpSessionState.Abandon
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Abandon()
  nameWithType: HttpSessionState.Abandon()
  fullName: System.Web.SessionState.HttpSessionState.Abandon()
- uid: System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Add(String,Object)
  nameWithType: HttpSessionState.Add(String,Object)
  fullName: System.Web.SessionState.HttpSessionState.Add(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.SessionState.HttpSessionState.Clear
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Clear()
  nameWithType: HttpSessionState.Clear()
  fullName: System.Web.SessionState.HttpSessionState.Clear()
- uid: System.Web.SessionState.HttpSessionState.CodePage
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CodePage
  nameWithType: HttpSessionState.CodePage
  fullName: System.Web.SessionState.HttpSessionState.CodePage
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SessionState.HttpSessionState.Contents
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Contents
  nameWithType: HttpSessionState.Contents
  fullName: System.Web.SessionState.HttpSessionState.Contents
- uid: System.Web.SessionState.HttpSessionState
  parent: System.Web.SessionState
  isExternal: false
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
- uid: System.Web.SessionState.HttpSessionState.CookieMode
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CookieMode
  nameWithType: HttpSessionState.CookieMode
  fullName: System.Web.SessionState.HttpSessionState.CookieMode
- uid: System.Web.HttpCookieMode
  parent: System.Web
  isExternal: false
  name: HttpCookieMode
  nameWithType: HttpCookieMode
  fullName: System.Web.HttpCookieMode
- uid: System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: HttpSessionState.CopyTo(Array,Int32)
  fullName: System.Web.SessionState.HttpSessionState.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.SessionState.HttpSessionState.Count
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Count
  nameWithType: HttpSessionState.Count
  fullName: System.Web.SessionState.HttpSessionState.Count
- uid: System.Web.SessionState.HttpSessionState.GetEnumerator
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: GetEnumerator()
  nameWithType: HttpSessionState.GetEnumerator()
  fullName: System.Web.SessionState.HttpSessionState.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.SessionState.HttpSessionState.IsCookieless
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsCookieless
  nameWithType: HttpSessionState.IsCookieless
  fullName: System.Web.SessionState.HttpSessionState.IsCookieless
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SessionState.HttpSessionState.IsNewSession
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsNewSession
  nameWithType: HttpSessionState.IsNewSession
  fullName: System.Web.SessionState.HttpSessionState.IsNewSession
- uid: System.Web.SessionState.HttpSessionState.IsReadOnly
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpSessionState.IsReadOnly
  fullName: System.Web.SessionState.HttpSessionState.IsReadOnly
- uid: System.Web.SessionState.HttpSessionState.IsSynchronized
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpSessionState.IsSynchronized
  fullName: System.Web.SessionState.HttpSessionState.IsSynchronized
- uid: System.Web.SessionState.HttpSessionState.Item(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Item(Int32)
  nameWithType: HttpSessionState.Item(Int32)
  fullName: System.Web.SessionState.HttpSessionState.Item(Int32)
- uid: System.Web.SessionState.HttpSessionState.Item(System.String)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Item(String)
  nameWithType: HttpSessionState.Item(String)
  fullName: System.Web.SessionState.HttpSessionState.Item(String)
- uid: System.Web.SessionState.HttpSessionState.Keys
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Keys
  nameWithType: HttpSessionState.Keys
  fullName: System.Web.SessionState.HttpSessionState.Keys
- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameObjectCollectionBase+KeysCollection
  nameWithType: NameObjectCollectionBase+KeysCollection
  fullName: System.Collections.Specialized.NameObjectCollectionBase+KeysCollection
- uid: System.Web.SessionState.HttpSessionState.LCID
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: LCID
  nameWithType: HttpSessionState.LCID
  fullName: System.Web.SessionState.HttpSessionState.LCID
- uid: System.Web.SessionState.HttpSessionState.Mode
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Mode
  nameWithType: HttpSessionState.Mode
  fullName: System.Web.SessionState.HttpSessionState.Mode
- uid: System.Web.SessionState.SessionStateMode
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateMode
  nameWithType: SessionStateMode
  fullName: System.Web.SessionState.SessionStateMode
- uid: System.Web.SessionState.HttpSessionState.Remove(System.String)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Remove(String)
  nameWithType: HttpSessionState.Remove(String)
  fullName: System.Web.SessionState.HttpSessionState.Remove(String)
- uid: System.Web.SessionState.HttpSessionState.RemoveAll
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAll()
  nameWithType: HttpSessionState.RemoveAll()
  fullName: System.Web.SessionState.HttpSessionState.RemoveAll()
- uid: System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: HttpSessionState.RemoveAt(Int32)
  fullName: System.Web.SessionState.HttpSessionState.RemoveAt(Int32)
- uid: System.Web.SessionState.HttpSessionState.SessionID
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SessionID
  nameWithType: HttpSessionState.SessionID
  fullName: System.Web.SessionState.HttpSessionState.SessionID
- uid: System.Web.SessionState.HttpSessionState.StaticObjects
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: StaticObjects
  nameWithType: HttpSessionState.StaticObjects
  fullName: System.Web.SessionState.HttpSessionState.StaticObjects
- uid: System.Web.HttpStaticObjectsCollection
  parent: System.Web
  isExternal: false
  name: HttpStaticObjectsCollection
  nameWithType: HttpStaticObjectsCollection
  fullName: System.Web.HttpStaticObjectsCollection
- uid: System.Web.SessionState.HttpSessionState.SyncRoot
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SyncRoot
  nameWithType: HttpSessionState.SyncRoot
  fullName: System.Web.SessionState.HttpSessionState.SyncRoot
- uid: System.Web.SessionState.HttpSessionState.Timeout
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Timeout
  nameWithType: HttpSessionState.Timeout
  fullName: System.Web.SessionState.HttpSessionState.Timeout
- uid: System.Web.SessionState.HttpSessionState.Abandon*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Abandon
  nameWithType: HttpSessionState.Abandon
- uid: System.Web.SessionState.HttpSessionState.Add*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Add
  nameWithType: HttpSessionState.Add
- uid: System.Web.SessionState.HttpSessionState.Clear*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Clear
  nameWithType: HttpSessionState.Clear
- uid: System.Web.SessionState.HttpSessionState.CodePage*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CodePage
  nameWithType: HttpSessionState.CodePage
- uid: System.Web.SessionState.HttpSessionState.Contents*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Contents
  nameWithType: HttpSessionState.Contents
- uid: System.Web.SessionState.HttpSessionState.CookieMode*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CookieMode
  nameWithType: HttpSessionState.CookieMode
- uid: System.Web.SessionState.HttpSessionState.CopyTo*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CopyTo
  nameWithType: HttpSessionState.CopyTo
- uid: System.Web.SessionState.HttpSessionState.Count*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Count
  nameWithType: HttpSessionState.Count
- uid: System.Web.SessionState.HttpSessionState.GetEnumerator*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: GetEnumerator
  nameWithType: HttpSessionState.GetEnumerator
- uid: System.Web.SessionState.HttpSessionState.IsCookieless*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsCookieless
  nameWithType: HttpSessionState.IsCookieless
- uid: System.Web.SessionState.HttpSessionState.IsNewSession*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsNewSession
  nameWithType: HttpSessionState.IsNewSession
- uid: System.Web.SessionState.HttpSessionState.IsReadOnly*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpSessionState.IsReadOnly
- uid: System.Web.SessionState.HttpSessionState.IsSynchronized*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpSessionState.IsSynchronized
- uid: System.Web.SessionState.HttpSessionState.Item*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Item
  nameWithType: HttpSessionState.Item
- uid: System.Web.SessionState.HttpSessionState.Keys*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Keys
  nameWithType: HttpSessionState.Keys
- uid: System.Web.SessionState.HttpSessionState.LCID*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: LCID
  nameWithType: HttpSessionState.LCID
- uid: System.Web.SessionState.HttpSessionState.Mode*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Mode
  nameWithType: HttpSessionState.Mode
- uid: System.Web.SessionState.HttpSessionState.Remove*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Remove
  nameWithType: HttpSessionState.Remove
- uid: System.Web.SessionState.HttpSessionState.RemoveAll*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAll
  nameWithType: HttpSessionState.RemoveAll
- uid: System.Web.SessionState.HttpSessionState.RemoveAt*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAt
  nameWithType: HttpSessionState.RemoveAt
- uid: System.Web.SessionState.HttpSessionState.SessionID*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SessionID
  nameWithType: HttpSessionState.SessionID
- uid: System.Web.SessionState.HttpSessionState.StaticObjects*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: StaticObjects
  nameWithType: HttpSessionState.StaticObjects
- uid: System.Web.SessionState.HttpSessionState.SyncRoot*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SyncRoot
  nameWithType: HttpSessionState.SyncRoot
- uid: System.Web.SessionState.HttpSessionState.Timeout*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Timeout
  nameWithType: HttpSessionState.Timeout
