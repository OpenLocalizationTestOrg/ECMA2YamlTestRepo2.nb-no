### YamlMime:ManagedReference
items:
- uid: System.Net.WebProxy
  id: WebProxy
  children:
  - System.Net.WebProxy.#ctor
  - System.Net.WebProxy.#ctor(System.String)
  - System.Net.WebProxy.#ctor(System.Uri)
  - System.Net.WebProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.WebProxy.#ctor(System.String,System.Boolean)
  - System.Net.WebProxy.#ctor(System.String,System.Int32)
  - System.Net.WebProxy.#ctor(System.Uri,System.Boolean)
  - System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])
  - System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[])
  - System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)
  - System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)
  - System.Net.WebProxy.Address
  - System.Net.WebProxy.BypassArrayList
  - System.Net.WebProxy.BypassList
  - System.Net.WebProxy.BypassProxyOnLocal
  - System.Net.WebProxy.Credentials
  - System.Net.WebProxy.GetDefaultProxy
  - System.Net.WebProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.WebProxy.GetProxy(System.Uri)
  - System.Net.WebProxy.IsBypassed(System.Uri)
  - System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.WebProxy.UseDefaultCredentials
  langs:
  - csharp
  name: WebProxy
  nameWithType: WebProxy
  fullName: System.Net.WebProxy
  type: Class
  summary: "Inneholder innstillinger for HTTP-proxy for <xref:System.Net.WebRequest>klassen.</xref:System.Net.WebRequest>"
  remarks: "Klassen WebProxy inneholder proxyinnstillinger som <xref:System.Net.WebRequest>forekomster Bruk til å fastslå om en Web-proxy brukes til å sende forespørsler.</xref:System.Net.WebRequest> Globale Web proxy-innstillinger som kan angis i maskinen og programmet konfigurasjonsfiler og programmer kan bruke forekomster av klassen WebProxy tilpasse Web-proxy-bruk. Klassen WebProxy er base implementering av den <xref:System.Net.IWebProxy>grensesnittet.</xref:System.Net.IWebProxy>       Du kan bruke følgende metoder for å få forekomster av proxy-klassen: - <xref:System.Net.WebProxy.%23ctor%2A>konstruktør.</xref:System.Net.WebProxy.%23ctor%2A>      - <xref:System.Net.WebProxy.GetDefaultProxy%2A>Metode.</xref:System.Net.WebProxy.GetDefaultProxy%2A>      - <xref:System.Net.GlobalProxySelection.Select%2A>Metode.</xref:System.Net.GlobalProxySelection.Select%2A>       Disse metodene hver oppgi en WebProxy-forekomst som du kan tilpasse; forskjellen mellom dem er hvordan forekomsten er initialisert før det returneres til programmet. Den <xref:System.Net.WebProxy.%23ctor%2A>konstruktøren returnerer en forekomst av klassen WebProxy med den <xref:System.Net.WebProxy.Address%2A>-egenskapen satt til `null`.</xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy.%23ctor%2A> Når en forespørsel om en WebProxy-forekomst i denne tilstanden, brukes ingen proxy til å sende forespørselen.       Den <xref:System.Net.WebProxy.GetDefaultProxy%2A>metoden returnerer en forekomst av klassen WebProxy med den <xref:System.Net.WebProxy.Address%2A>, <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>, og <xref:System.Net.WebProxy.BypassList%2A>satt til verdiene som brukes av Internet Explorer 5.5 og nyere.</xref:System.Net.WebProxy.BypassList%2A> </xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy.GetDefaultProxy%2A>       Den <xref:System.Net.GlobalProxySelection.Select%2A>metoden returnerer en forekomst av klassen WebProxy med den egenskaper som er angitt i henhold til en kombinasjon av innstillingene for Internet Explorer og konfigurasjon flis.</xref:System.Net.GlobalProxySelection.Select%2A>       Klassen WebProxy støtter automatisk gjenkjenning og utførelse av proxy-konfigurasjonsskript. Denne funksjonen er også kjent som Web Proxy Auto-Discovery (WPAD). Når du bruker automatisk proxy-konfigurasjonen, må et konfigurasjonsskript, vanligvis kalt Wpad.dat, finnes, ned, kompilert, og Kjør. Hvis disse operasjonene lykkes, returnerer skriptet proxyer som kan brukes for en forespørsel."
  example:
  - "The following code example assigns a WebProxy instance to a <xref:System.Net.WebRequest> instance. The <xref:System.Net.WebRequest> instance uses the proxy to connect to external Internet resources. (For an example that demonstrates using the WPAD feature, see the documentation for the <xref:System.Net.IWebProxyScript> class.)  \n  \n [!code-cpp[Classic WebProxy Example#1](~/add/codesnippet/cpp/t-system.net.webproxy_1.cpp)]\n [!code-vb[Classic WebProxy Example#1](~/add/codesnippet/visualbasic/t-system.net.webproxy_1.vb)]\n [!code-cs[Classic WebProxy Example#1](~/add/codesnippet/csharp/t-system.net.webproxy_1.cs)]"
  syntax:
    content: 'public class WebProxy : System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor
  id: '#ctor'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy()
  nameWithType: WebProxy.WebProxy()
  fullName: System.Net.WebProxy.WebProxy()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Initialiserer en tom forekomst av den <xref href=&quot;System.Net.WebProxy&quot;> </xref> klasse."
  remarks: "Standardkonstruktøren initialiserer en tom forekomst av den <xref:System.Net.WebProxy>klasse med den <xref:System.Net.WebProxy.Address%2A>-egenskapen satt til `null`.</xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>       Når den <xref:System.Net.WebProxy.Address%2A>egenskapen `null`, <xref:System.Net.WebProxy.IsBypassed%2A>metoden returnerer `true` og <xref:System.Net.WebProxy.GetProxy%2A>metoden returnerer mål-adresse.</xref:System.Net.WebProxy.GetProxy%2A> </xref:System.Net.WebProxy.IsBypassed%2A> </xref:System.Net.WebProxy.Address%2A>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#1](~/add/codesnippet/cpp/m-system.net.webproxy.sh_3_1.cpp)]\n [!code-cs[NCLWebProxy#1](~/add/codesnippet/csharp/m-system.net.webproxy.sh_3_1.cs)]"
  syntax:
    content: public WebProxy ();
    parameters: []
  overload: System.Net.WebProxy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(String)
  nameWithType: WebProxy.WebProxy(String)
  fullName: System.Net.WebProxy.WebProxy(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Net.WebProxy&quot;> </xref> klassen med den angitte URIEN."
  remarks: "Den <xref:System.Net.WebProxy>forekomsten er initialisert med den <xref:System.Net.WebProxy.Address%2A>-egenskapen satt til en <xref:System.Uri>forekomsten som inneholder `Address`.</xref:System.Uri> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#6](~/add/codesnippet/cpp/m-system.net.webproxy.sh_1_1.cpp)]\n [!code-cs[NCLWebProxy#6](~/add/codesnippet/csharp/m-system.net.webproxy.sh_1_1.cs)]"
  syntax:
    content: public WebProxy (string Address);
    parameters:
    - id: Address
      type: System.String
      description: "URIEN for proxy-serveren."
  overload: System.Net.WebProxy.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>Address</code> er en ugyldig URI."
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(Uri)
  nameWithType: WebProxy.WebProxy(Uri)
  fullName: System.Net.WebProxy.WebProxy(Uri)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Net.WebProxy&quot;> </xref> klassen fra den angitte <xref:System.Uri>forekomsten.</xref:System.Uri>"
  remarks: "Den <xref:System.Net.WebProxy>forekomsten er initialisert med den <xref:System.Net.WebProxy.Address%2A>-egenskapen satt til den `Address` parameteren.</xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#2](~/add/codesnippet/cpp/m-system.net.webproxy.sh_0_1.cpp)]\n [!code-cs[NCLWebProxy#2](~/add/codesnippet/csharp/m-system.net.webproxy.sh_0_1.cs)]"
  syntax:
    content: public WebProxy (Uri Address);
    parameters:
    - id: Address
      type: System.Uri
      description: "En <xref:System.Uri>forekomsten som inneholder adressen til proxy-serveren.</xref:System.Uri>"
  overload: System.Net.WebProxy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(SerializationInfo,StreamingContext)
  nameWithType: WebProxy.WebProxy(SerializationInfo,StreamingContext)
  fullName: System.Net.WebProxy.WebProxy(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Initialiserer en forekomst av den <xref href=&quot;System.Net.WebProxy&quot;> </xref> klasse ved hjelp av tidligere serialiserte innhold."
  remarks: "Denne metoden kalles av systemet ikke deserialisere en <xref:System.Net.WebProxy>forekomst; programmer vil ikke kall det.</xref:System.Net.WebProxy>"
  syntax:
    content: protected WebProxy (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "Serialiseringsdataene."
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: "Konteksten for de serialiserte dataene."
  overload: System.Net.WebProxy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(String,Boolean)
  nameWithType: WebProxy.WebProxy(String,Boolean)
  fullName: System.Net.WebProxy.WebProxy(String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Net.WebProxy&quot;> </xref> klasse med den angitte URIEN og omgå innstillingen."
  remarks: "Den <xref:System.Net.WebProxy>forekomsten er initialisert med den <xref:System.Net.WebProxy.Address%2A>-egenskapen satt til en <xref:System.Uri>forekomsten som inneholder `Address` og <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>-egenskapen satt til `BypassOnLocal`.</xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Uri> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#7](~/add/codesnippet/cpp/m-system.net.webproxy.sh_4_1.cpp)]\n [!code-cs[NCLWebProxy#7](~/add/codesnippet/csharp/m-system.net.webproxy.sh_4_1.cs)]"
  syntax:
    content: public WebProxy (string Address, bool BypassOnLocal);
    parameters:
    - id: Address
      type: System.String
      description: "URIEN for proxy-serveren."
    - id: BypassOnLocal
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>omgå proxy for lokale adresser; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.WebProxy.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>Address</code> er en ugyldig URI."
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(String,Int32)
  nameWithType: WebProxy.WebProxy(String,Int32)
  fullName: System.Net.WebProxy.WebProxy(String,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Net.WebProxy&quot;> </xref> klassen med angitt vert og portnummeret."
  remarks: 'Den <xref:System.Net.WebProxy>forekomsten er initialisert med den <xref:System.Net.WebProxy.Address%2A>-egenskapen satt til en <xref:System.Uri>forekomst av formatet http:// `Host` : `Port`.</xref:System.Uri> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>'
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#5](~/add/codesnippet/cpp/m-system.net.webproxy.sh_6_1.cpp)]\n [!code-cs[NCLWebProxy#5](~/add/codesnippet/csharp/m-system.net.webproxy.sh_6_1.cs)]"
  syntax:
    content: public WebProxy (string Host, int Port);
    parameters:
    - id: Host
      type: System.String
      description: "Navnet på proxy-vert."
    - id: Port
      type: System.Int32
      description: "Portnummeret på `Host` skal brukes."
  overload: System.Net.WebProxy.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "URIEN utformet ved å kombinere <code> Host </code> og <code> Port </code> er ikke en gyldig URI."
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.Uri,System.Boolean)
  id: '#ctor(System.Uri,System.Boolean)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(Uri,Boolean)
  nameWithType: WebProxy.WebProxy(Uri,Boolean)
  fullName: System.Net.WebProxy.WebProxy(Uri,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Net.WebProxy&quot;> </xref> klasse med den <xref:System.Uri>serverforekomsten og omgå innstillingen.</xref:System.Uri>"
  remarks: "Den <xref:System.Net.WebProxy>forekomsten er initialisert med den <xref:System.Net.WebProxy.Address%2A>-egenskapen satt til `Address` og med den <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>-egenskapen satt til `BypassOnLocal`.</xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#3](~/add/codesnippet/cpp/m-system.net.webproxy.sh_7_1.cpp)]\n [!code-cs[NCLWebProxy#3](~/add/codesnippet/csharp/m-system.net.webproxy.sh_7_1.cs)]"
  syntax:
    content: public WebProxy (Uri Address, bool BypassOnLocal);
    parameters:
    - id: Address
      type: System.Uri
      description: "En <xref:System.Uri>forekomsten som inneholder adressen til proxy-serveren.</xref:System.Uri>"
    - id: BypassOnLocal
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>omgå proxy for lokale adresser; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.WebProxy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])
  id: '#ctor(System.String,System.Boolean,System.String[])'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(String,Boolean,String[])
  nameWithType: WebProxy.WebProxy(String,Boolean,String[])
  fullName: System.Net.WebProxy.WebProxy(String,Boolean,String[])
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Net.WebProxy&quot;> </xref> klassen med den angitte URIEN omgå innstillingen og liste over URIer å omgå."
  remarks: "Den <xref:System.Net.WebProxy>forekomsten er initialisert med den <xref:System.Net.WebProxy.Address%2A>-egenskapen satt til en <xref:System.Uri>forekomsten som inneholder `Address`, <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>-egenskapen satt til `BypassOnLocal`, og <xref:System.Net.WebProxy.BypassList%2A>-egenskapen satt til `BypassList`.</xref:System.Net.WebProxy.BypassList%2A> </xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Uri> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#8](~/add/codesnippet/cpp/m-system.net.webproxy.sh_2_1.cpp)]\n [!code-cs[NCLWebProxy#8](~/add/codesnippet/csharp/m-system.net.webproxy.sh_2_1.cs)]"
  syntax:
    content: public WebProxy (string Address, bool BypassOnLocal, string[] BypassList);
    parameters:
    - id: Address
      type: System.String
      description: "URIEN for proxy-serveren."
    - id: BypassOnLocal
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>omgå proxy for lokale adresser; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: BypassList
      type: System.String[]
      description: "En matrise med RegEx strenger som inneholder URIer serverne til å hoppe over."
  overload: System.Net.WebProxy.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>Address</code> er en ugyldig URI."
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[])
  id: '#ctor(System.Uri,System.Boolean,System.String[])'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(Uri,Boolean,String[])
  nameWithType: WebProxy.WebProxy(Uri,Boolean,String[])
  fullName: System.Net.WebProxy.WebProxy(Uri,Boolean,String[])
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Net.WebProxy&quot;> </xref> klassen med den angitte <xref:System.Uri>forekomsten, omgå innstillingen og liste over URIer å omgå.</xref:System.Uri>"
  remarks: "Den <xref:System.Net.WebProxy>forekomsten er initialisert med den <xref:System.Net.WebProxy.Address%2A>-egenskapen satt til `Address`, <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>-egenskapen satt til `BypassOnLocal`, og <xref:System.Net.WebProxy.BypassList%2A>-egenskapen satt til `BypassList`.</xref:System.Net.WebProxy.BypassList%2A> </xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#4](~/add/codesnippet/cpp/m-system.net.webproxy.sh_5_1.cpp)]\n [!code-cs[NCLWebProxy#4](~/add/codesnippet/csharp/m-system.net.webproxy.sh_5_1.cs)]"
  syntax:
    content: public WebProxy (Uri Address, bool BypassOnLocal, string[] BypassList);
    parameters:
    - id: Address
      type: System.Uri
      description: "En <xref:System.Uri>forekomsten som inneholder adressen til proxy-serveren.</xref:System.Uri>"
    - id: BypassOnLocal
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>omgå proxy for lokale adresser; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: BypassList
      type: System.String[]
      description: "En matrise av RegEx strenger som inneholder URIer serverne til å hoppe over."
  overload: System.Net.WebProxy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)
  id: '#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(String,Boolean,String[],ICredentials)
  nameWithType: WebProxy.WebProxy(String,Boolean,String[],ICredentials)
  fullName: System.Net.WebProxy.WebProxy(String,Boolean,String[],ICredentials)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Net.WebProxy&quot;> </xref> klasse med den angitte URIEN, omgå innstillingen liste over URIer å omgå, og legitimasjonen."
  remarks: "Den <xref:System.Net.WebProxy>forekomsten er initialisert med den <xref:System.Net.WebProxy.Address%2A>-egenskapen satt til en <xref:System.Uri>forekomsten som inneholder `Address`, <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>-egenskapen satt til `BypassOnLocal`, <xref:System.Net.WebProxy.BypassList%2A>-egenskapen satt til `BypassList`, og <xref:System.Net.WebProxy.Credentials%2A>-egenskapen satt til `Credentials`.</xref:System.Net.WebProxy.Credentials%2A> </xref:System.Net.WebProxy.BypassList%2A> </xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Uri> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#9](~/add/codesnippet/cpp/25929c39-89a2-4ac3-bf8d-_1.cpp)]\n [!code-cs[NCLWebProxy#9](~/add/codesnippet/csharp/25929c39-89a2-4ac3-bf8d-_1.cs)]"
  syntax:
    content: public WebProxy (string Address, bool BypassOnLocal, string[] BypassList, System.Net.ICredentials Credentials);
    parameters:
    - id: Address
      type: System.String
      description: "URIEN for proxy-serveren."
    - id: BypassOnLocal
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>omgå proxy for lokale adresser; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: BypassList
      type: System.String[]
      description: "En matrise av RegEx strenger som inneholder URIer serverne til å hoppe over."
    - id: Credentials
      type: System.Net.ICredentials
      description: "En <xref:System.Net.ICredentials>forekomsten å sende den til proxy-server for godkjenning.</xref:System.Net.ICredentials>"
  overload: System.Net.WebProxy.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>Address</code> er en ugyldig URI."
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)
  id: '#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(Uri,Boolean,String[],ICredentials)
  nameWithType: WebProxy.WebProxy(Uri,Boolean,String[],ICredentials)
  fullName: System.Net.WebProxy.WebProxy(Uri,Boolean,String[],ICredentials)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Net.WebProxy&quot;> </xref> klassen med den angitte <xref:System.Uri>serverforekomsten, omgå innstillingen liste over URIer å omgå, og legitimasjonen.</xref:System.Uri>"
  remarks: "Den <xref:System.Net.WebProxy>forekomsten er initialisert med den <xref:System.Net.WebProxy.Address%2A>-egenskapen satt til `Address`, <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>-egenskapen satt til `BypassOnLocal`, <xref:System.Net.WebProxy.BypassList%2A>-egenskapen satt til `BypassList`, og <xref:System.Net.WebProxy.Credentials%2A>-egenskapen satt til `Credentials`.</xref:System.Net.WebProxy.Credentials%2A> </xref:System.Net.WebProxy.BypassList%2A> </xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#13](~/add/codesnippet/cpp/35b6ace3-e60e-4d11-a417-_1.cpp)]\n [!code-cs[NCLWebProxy#13](~/add/codesnippet/csharp/35b6ace3-e60e-4d11-a417-_1.cs)]"
  syntax:
    content: public WebProxy (Uri Address, bool BypassOnLocal, string[] BypassList, System.Net.ICredentials Credentials);
    parameters:
    - id: Address
      type: System.Uri
      description: "En <xref:System.Uri>forekomsten som inneholder adressen til proxy-serveren.</xref:System.Uri>"
    - id: BypassOnLocal
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>omgå proxy for lokale adresser; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: BypassList
      type: System.String[]
      description: "En matrise av RegEx strenger som inneholder URIer serverne til å hoppe over."
    - id: Credentials
      type: System.Net.ICredentials
      description: "En <xref:System.Net.ICredentials>forekomsten å sende den til proxy-server for godkjenning.</xref:System.Net.ICredentials>"
  overload: System.Net.WebProxy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.Address
  id: Address
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: Address
  nameWithType: WebProxy.Address
  fullName: System.Net.WebProxy.Address
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir adressen til proxy-serveren."
  remarks: "Egenskapen for postadressen inneholder adressen til proxy-serveren. Når automatisk proxy-gjenkjenning er ikke aktivert, og ingen skript for automatisk konfigurasjon er angitt, egenskapen Address og <xref:System.Net.WebProxy.BypassList%2A>fastslå proxyen brukes for en forespørsel.</xref:System.Net.WebProxy.BypassList%2A>       Når egenskapen Address er `null`, forespørsler omgå proxy og koble direkte til målet verten."
  example:
  - "The following code example displays the properties of a <xref:System.Net.WebProxy> object, including its Address.  \n  \n [!code-cs[NCLAutoProxy#1](~/add/codesnippet/csharp/p-system.net.webproxy.ad_1.cs)]\n [!code-cpp[NCLAutoProxy#1](~/add/codesnippet/cpp/p-system.net.webproxy.ad_1.cpp)]"
  syntax:
    content: public Uri Address { get; set; }
    return:
      type: System.Uri
      description: "En <xref:System.Uri>forekomsten som inneholder adressen til proxy-serveren.</xref:System.Uri>"
  overload: System.Net.WebProxy.Address*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.BypassArrayList
  id: BypassArrayList
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: BypassArrayList
  nameWithType: WebProxy.BypassArrayList
  fullName: System.Net.WebProxy.BypassArrayList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter en liste over adresser som ikke bruker proxy-server."
  remarks: "Den <xref:System.Net.WebProxy.BypassList%2A>er en matrise liste over RegEx strenger som beskriver URIer som en <xref:System.Net.WebRequest>forekomsten har tilgang til direkte i stedet for via proxy-server.</xref:System.Net.WebRequest> </xref:System.Net.WebProxy.BypassList%2A>"
  syntax:
    content: public System.Collections.ArrayList BypassArrayList { get; }
    return:
      type: System.Collections.ArrayList
      description: "En <xref href=&quot;System.Collections.ArrayList&quot;> </xref> som inneholder en liste over <xref:System.Net.WebProxy.BypassList*>matriser som representerer URIer som ikke bruk proxy-server ved tilgang til.</xref:System.Net.WebProxy.BypassList*>"
  overload: System.Net.WebProxy.BypassArrayList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.BypassList
  id: BypassList
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: BypassList
  nameWithType: WebProxy.BypassList
  fullName: System.Net.WebProxy.BypassList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir en matrise av adresser som ikke bruker proxy-server."
  remarks: "Egenskapen BypassList inneholder en matrise med vanlige uttrykk som beskriver URIer som en <xref:System.Net.WebRequest>forekomsten har tilgang til direkte i stedet for via proxy-server.</xref:System.Net.WebRequest>"
  example:
  - "The following code example displays the properties of a <xref:System.Net.WebProxy> object, including its BypassList property.  \n  \n [!code-cs[NCLAutoProxy#1](~/add/codesnippet/csharp/p-system.net.webproxy.by_0_1.cs)]\n [!code-cpp[NCLAutoProxy#1](~/add/codesnippet/cpp/p-system.net.webproxy.by_0_1.cpp)]"
  syntax:
    content: public string[] BypassList { get; set; }
    return:
      type: System.String[]
      description: "En matrise som inneholder en liste over vanlig uttrykk som beskriver URIer som ikke bruk proxy-server ved tilgang til."
  overload: System.Net.WebProxy.BypassList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.BypassProxyOnLocal
  id: BypassProxyOnLocal
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: BypassProxyOnLocal
  nameWithType: WebProxy.BypassProxyOnLocal
  fullName: System.Net.WebProxy.BypassProxyOnLocal
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir en verdi som angir om å omgå proxy-serveren for lokale adresser."
  remarks: "Innstillingen for egenskapen BypassProxyOnLocal bestemmer om <xref:System.Net.WebRequest>forekomster bruk proxy-server ved tilgang til lokale Internett-ressurser.</xref:System.Net.WebRequest>       Hvis BypassProxyOnLocal `true`, forespørsler til lokale Internett-ressurser ikke bruk proxy-serveren. Lokale forespørsler identifiseres av manglende et punktum (.) i URI, som i http://webserver/, eller få tilgang til den lokale serveren, inkludert http://localhost, http://loopback eller http://127.0.0.1. Når BypassProxyOnLocal er `false`, alle Internett-forespørsler utføres via proxy-server.      > [!NOTE] > Forespørsler til en lokal vert med en URI som inneholder et punktum bruke proxyen. For å unngå å bruke en proxy i disse tilfellene må du opprette en oppføring for vert i <xref:System.Net.WebProxy.BypassList%2A>.</xref:System.Net.WebProxy.BypassList%2A>"
  example:
  - "The following code example demonstrates calling a constructor that sets this property and getting the value of this property.  \n  \n [!code-cpp[NCLWebProxy#7](~/add/codesnippet/cpp/p-system.net.webproxy.by_1_1.cpp)]\n [!code-cs[NCLWebProxy#7](~/add/codesnippet/csharp/p-system.net.webproxy.by_1_1.cs)]"
  syntax:
    content: public bool BypassProxyOnLocal { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>omgå proxy-serveren for lokale adresser; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardverdien er <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.WebProxy.BypassProxyOnLocal*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.Credentials
  id: Credentials
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: Credentials
  nameWithType: WebProxy.Credentials
  fullName: System.Net.WebProxy.Credentials
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir legitimasjon for å sende den til proxy-server for godkjenning."
  remarks: "Egenskapen legitimasjonen inneholder godkjenningsinformasjonen sende til proxy-serveren som svar på en statuskode HTTP 407 (proxy-godkjenning). I de fleste tilfeller av klienten, bør du bruke den <xref:System.Net.CredentialCache.DefaultCredentials%2A>, som er legitimasjonen til brukeren som er logget på.</xref:System.Net.CredentialCache.DefaultCredentials%2A> Hvis du vil gjøre dette, kan du angi den <xref:System.Net.WebProxy.UseDefaultCredentials%2A>egenskapen `true` i stedet for å angi denne egenskapen.</xref:System.Net.WebProxy.UseDefaultCredentials%2A>      > [!NOTE] > Hvis du angi legitimasjonen egenskapen legitimasjon enn den <xref:System.Net.CredentialCache.DefaultCredentials%2A>, aktiveres i <xref:System.Net.WebProxy.UseDefaultCredentials%2A>egenskapen `true` forårsaker en <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Net.WebProxy.UseDefaultCredentials%2A> </xref:System.Net.CredentialCache.DefaultCredentials%2A> Du kan unngå dette ved å angi egenskapen legitimasjon `null` før du konfigurerer den <xref:System.Net.WebProxy.UseDefaultCredentials%2A>egenskapen `true`.</xref:System.Net.WebProxy.UseDefaultCredentials%2A> På samme måte kan du angi denne egenskapen til en verdi når <xref:System.Net.WebProxy.UseDefaultCredentials%2A>er `true`.</xref:System.Net.WebProxy.UseDefaultCredentials%2A>"
  syntax:
    content: public System.Net.ICredentials Credentials { get; set; }
    return:
      type: System.Net.ICredentials
      description: "En <xref:System.Net.ICredentials>forekomsten som inneholder legitimasjonen som skal sendes til proxy-server for godkjenning.</xref:System.Net.ICredentials>"
  overload: System.Net.WebProxy.Credentials*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Du forsøkte å angi denne egenskapen når den <xref:System.Net.WebProxy.UseDefaultCredentials*>-egenskap er satt til <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Net.WebProxy.UseDefaultCredentials*>"
  platform:
  - net462
- uid: System.Net.WebProxy.GetDefaultProxy
  id: GetDefaultProxy
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: GetDefaultProxy()
  nameWithType: WebProxy.GetDefaultProxy()
  fullName: System.Net.WebProxy.GetDefaultProxy()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Leser nondynamic proxy-innstillingene for Internet Explorer."
  remarks: "Metoden GetDefaultProxy leser nondynamic proxyinnstillinger som er lagret av Internet Explorer 5.5 og nyere og oppretter en <xref:System.Net.WebProxy>forekomst med disse innstillingene.</xref:System.Net.WebProxy>       Metoden GetDefaultProxy henter ikke opp dynamiske innstillinger som er generert fra skript kjøre av Internet Explorer, automatisk konfigurasjon oppføringer eller DHCP eller DNS-oppslag.       Programmer skal bruke den <xref:System.Net.WebRequest.DefaultWebProxy%2A?displayProperty=fullName>egenskapen og <xref:System.Net.WebRequest.GetSystemWebProxy%2A?displayProperty=fullName>metoden i stedet for metoden GetDefaultProxy.</xref:System.Net.WebRequest.GetSystemWebProxy%2A?displayProperty=fullName> </xref:System.Net.WebRequest.DefaultWebProxy%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cpp[NCLWebProxy#11](~/add/codesnippet/cpp/m-system.net.webproxy.ge_0_1.cpp)]\n [!code-cs[NCLWebProxy#11](~/add/codesnippet/csharp/m-system.net.webproxy.ge_0_1.cs)]"
  syntax:
    content: public static System.Net.WebProxy GetDefaultProxy ();
    parameters: []
    return:
      type: System.Net.WebProxy
      description: "En <xref href=&quot;System.Net.WebProxy&quot;> </xref> forekomsten som inneholder nondynamic proxyinnstillinger fra Internet Explorer 5.5 og nyere."
  overload: System.Net.WebProxy.GetDefaultProxy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: WebProxy.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.WebProxy.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Fyller ut en <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> med data som kreves for å serialisere målobjektet."
  remarks: "Alle objekter som er inkludert i den <xref:System.Runtime.Serialization.SerializationInfo>automatisk sporet og serialiseres med formateringen.</xref:System.Runtime.Serialization.SerializationInfo>"
  syntax:
    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "Den <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> til å fylle ut med data."
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: "En <xref:System.Runtime.Serialization.StreamingContext>som angir målet for denne serialisering.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Net.WebProxy.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.GetProxy(System.Uri)
  id: GetProxy(System.Uri)
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: GetProxy(Uri)
  nameWithType: WebProxy.GetProxy(Uri)
  fullName: System.Net.WebProxy.GetProxy(Uri)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Returnerer proxy URIEN for en forespørsel."
  remarks: "Metoden GetProxy returnerer URI den <xref:System.Net.WebRequest>forekomsten bruker for å få tilgang til Internett-ressursen.</xref:System.Net.WebRequest>       GetProxy sammenligner `destination` med innholdet i <xref:System.Net.WebProxy.BypassList%2A>ved hjelp av den <xref:System.Net.WebProxy.IsBypassed%2A>metoden.</xref:System.Net.WebProxy.IsBypassed%2A> </xref:System.Net.WebProxy.BypassList%2A> Hvis <xref:System.Net.WebProxy.IsBypassed%2A>returnerer `true`, GetProxy returnerer `destination` og <xref:System.Net.WebRequest>forekomsten ikke bruk proxy-server.</xref:System.Net.WebRequest> </xref:System.Net.WebProxy.IsBypassed%2A>       Hvis `destination` er ikke i <xref:System.Net.WebProxy.BypassList%2A>, <xref:System.Net.WebRequest>forekomsten bruker proxy-serveren og <xref:System.Net.WebProxy.Address%2A>egenskapen returneres.</xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebRequest> </xref:System.Net.WebProxy.BypassList%2A>"
  example:
  - "The following code example creates a <xref:System.Net.WebProxy> object and calls this method to get the proxy that is selected for a resource.  \n  \n [!code-cs[NCLAutoProxy#2](~/add/codesnippet/csharp/m-system.net.webproxy.ge_1_1.cs)]\n [!code-cpp[NCLAutoProxy#2](~/add/codesnippet/cpp/m-system.net.webproxy.ge_1_1.cpp)]"
  syntax:
    content: public Uri GetProxy (Uri destination);
    parameters:
    - id: destination
      type: System.Uri
      description: "Den <xref:System.Uri>forekomst av den forespurte ressursen på Internett.</xref:System.Uri>"
    return:
      type: System.Uri
      description: "Den <xref:System.Uri>forekomst av Internett-ressursen, hvis ressursen ligger på omgåelseslisten; ellers den <xref:System.Uri>forekomst av proxyen.</xref:System.Uri> </xref:System.Uri>"
  overload: System.Net.WebProxy.GetProxy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destination</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebProxy.IsBypassed(System.Uri)
  id: IsBypassed(System.Uri)
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: IsBypassed(Uri)
  nameWithType: WebProxy.IsBypassed(Uri)
  fullName: System.Net.WebProxy.IsBypassed(Uri)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Angir om du vil bruke proxy-serveren for den angitte verten."
  remarks: "Metoden IsBypassed brukes til å bestemme om å omgå proxy-server ved tilgang til en Internett-ressursen.       Den <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>og <xref:System.Net.WebProxy.BypassList%2A>egenskapene kontroll returverdien for metoden IsBypassed.</xref:System.Net.WebProxy.BypassList%2A> </xref:System.Net.WebProxy.BypassProxyOnLocal%2A>       Returnerer IsBypassed `true` under noen av følgende: – Hvis <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>er `true` og `host` er en lokal URI.</xref:System.Net.WebProxy.BypassProxyOnLocal%2A> Lokale forespørsler identifiseres av manglende et punktum (.) i URI, som i &quot;http://webserver/&quot;.      -Hvis `host` samsvarer med et vanlig uttrykk i <xref:System.Net.WebProxy.BypassList%2A>.</xref:System.Net.WebProxy.BypassList%2A>      -   If <xref:System.Net.WebProxy.Address%2A> is `null`.</xref:System.Net.WebProxy.Address%2A>       Alle andre betingelser returnere `false`."
  example:
  - "The following code example creates a <xref:System.Net.WebProxy> object and calls this method to check whether the bypass list is properly set.  \n  \n [!code-cpp[NCLWebProxy#12](~/add/codesnippet/cpp/m-system.net.webproxy.is_1.cpp)]\n [!code-cs[NCLWebProxy#12](~/add/codesnippet/csharp/m-system.net.webproxy.is_1.cs)]"
  syntax:
    content: public bool IsBypassed (Uri host);
    parameters:
    - id: host
      type: System.Uri
      description: "Den <xref:System.Uri>forekomsten for å kontrollere proxy-bruk.</xref:System.Uri>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis proxy-serveren ikke skal brukes <code> host </code>; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.WebProxy.IsBypassed*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>host</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: WebProxy.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.WebProxy.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Oppretter serialiseringsdataene og sammenheng som brukes av systemet til å serialisere en <xref href=&quot;System.Net.WebProxy&quot;> </xref> objektet."
  remarks: "Systemet kaller denne metoden for å serialisere et objekt. programmer kall ikke den direkte."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "Den <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objektet til å fylle ut med data."
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: "En <xref:System.Runtime.Serialization.StreamingContext>-strukturen som angir målet for denne serialisering.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: UseDefaultCredentials
  nameWithType: WebProxy.UseDefaultCredentials
  fullName: System.Net.WebProxy.UseDefaultCredentials
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter eller angir en <xref:System.Boolean>verdi som kontrollerer om den <xref:System.Net.CredentialCache.DefaultCredentials*>sendes med forespørsler.</xref:System.Net.CredentialCache.DefaultCredentials*> </xref:System.Boolean>"
  remarks: "Sett denne egenskapen til `true` når forespørsler utført av dette <xref:System.Net.WebProxy>objektet skal, hvis forespurt av serveren, godkjennes med legitimasjonen til brukeren som er logget på.</xref:System.Net.WebProxy> Dette er ønsket virkemåte i de fleste tilfeller for klientprogrammer. For midterste skalaenhet programmer, for eksempel ASP.NET-applikasjoner i stedet for å bruke denne egenskapen vil vanligvis angis av <xref:System.Net.WebProxy.Credentials%2A>egenskapen legitimasjonen for klienten på vegne av forespørsel.</xref:System.Net.WebProxy.Credentials%2A>       Tabellen nedenfor viser resultatet av UseDefaultCredentials-verdien, basert på verdien for den <xref:System.Net.WebProxy.Credentials%2A>egenskapen.</xref:System.Net.WebProxy.Credentials%2A>      | verdien for <xref:System.Net.WebProxy.Credentials%2A>| Verdien for UseDefaultCredentials | Effekt |   |----------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|   | <xref:System.Net.CredentialCache.DefaultCredentials%2A>| `true`| Ingen virkning. |   | <xref:System.Net.CredentialCache.DefaultCredentials%2A>| `false`| <xref:System.Net.WebProxy.Credentials%2A>er satt til `null`. |   | `null`|`true`|<xref:System.Net.WebProxy.Credentials%2A> is set to <xref:System.Net.CredentialCache.DefaultCredentials%2A>.|   | En annen verdi enn <xref:System.Net.CredentialCache.DefaultCredentials%2A>eller `null` | `true` eller `false`| Angi UseDefaultCredentials oppstår det et unntak. |       Hvis UseDefaultCredentials `false`, kan du endre den <xref:System.Net.WebProxy.Credentials%2A>egenskapen ingen legitimasjon.</xref:System.Net.WebProxy.Credentials%2A> </xref:System.Net.CredentialCache.DefaultCredentials%2A> </xref:System.Net.CredentialCache.DefaultCredentials%2A> </xref:System.Net.WebProxy.Credentials%2A> </xref:System.Net.WebProxy.Credentials%2A> </xref:System.Net.CredentialCache.DefaultCredentials%2A> </xref:System.Net.CredentialCache.DefaultCredentials%2A> </xref:System.Net.WebProxy.Credentials%2A> Hvis UseDefaultCredentials `true`, endring av <xref:System.Net.WebProxy.Credentials%2A>egenskapen fra <xref:System.Net.CredentialCache.DefaultCredentials%2A>(verdien som er angitt når egenskapen UseDefaultCredentials er satt til `true`) vil Iverksett et unntak.</xref:System.Net.CredentialCache.DefaultCredentials%2A> </xref:System.Net.WebProxy.Credentials%2A>"
  syntax:
    content: public bool UseDefaultCredentials { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis du er i bruk av standardlegitimasjon. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardverdien er <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.WebProxy.UseDefaultCredentials*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Du forsøkte å angi denne egenskapen når den <xref:System.Net.WebProxy.Credentials*>egenskapen inneholder legitimasjon enn standardlegitimasjon.</xref:System.Net.WebProxy.Credentials*> For mer informasjon, kan du se kommentarer."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.WebProxy.#ctor
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy()
  nameWithType: WebProxy.WebProxy()
  fullName: System.Net.WebProxy.WebProxy()
- uid: System.Net.WebProxy.#ctor(System.String)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(String)
  nameWithType: WebProxy.WebProxy(String)
  fullName: System.Net.WebProxy.WebProxy(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.WebProxy.#ctor(System.Uri)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(Uri)
  nameWithType: WebProxy.WebProxy(Uri)
  fullName: System.Net.WebProxy.WebProxy(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.WebProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(SerializationInfo,StreamingContext)
  nameWithType: WebProxy.WebProxy(SerializationInfo,StreamingContext)
  fullName: System.Net.WebProxy.WebProxy(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Net.WebProxy.#ctor(System.String,System.Boolean)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(String,Boolean)
  nameWithType: WebProxy.WebProxy(String,Boolean)
  fullName: System.Net.WebProxy.WebProxy(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.WebProxy.#ctor(System.String,System.Int32)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(String,Int32)
  nameWithType: WebProxy.WebProxy(String,Int32)
  fullName: System.Net.WebProxy.WebProxy(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.WebProxy.#ctor(System.Uri,System.Boolean)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(Uri,Boolean)
  nameWithType: WebProxy.WebProxy(Uri,Boolean)
  fullName: System.Net.WebProxy.WebProxy(Uri,Boolean)
- uid: System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(String,Boolean,String[])
  nameWithType: WebProxy.WebProxy(String,Boolean,String[])
  fullName: System.Net.WebProxy.WebProxy(String,Boolean,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[])
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(Uri,Boolean,String[])
  nameWithType: WebProxy.WebProxy(Uri,Boolean,String[])
  fullName: System.Net.WebProxy.WebProxy(Uri,Boolean,String[])
- uid: System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(String,Boolean,String[],ICredentials)
  nameWithType: WebProxy.WebProxy(String,Boolean,String[],ICredentials)
  fullName: System.Net.WebProxy.WebProxy(String,Boolean,String[],ICredentials)
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(Uri,Boolean,String[],ICredentials)
  nameWithType: WebProxy.WebProxy(Uri,Boolean,String[],ICredentials)
  fullName: System.Net.WebProxy.WebProxy(Uri,Boolean,String[],ICredentials)
- uid: System.Net.WebProxy.Address
  parent: System.Net.WebProxy
  isExternal: false
  name: Address
  nameWithType: WebProxy.Address
  fullName: System.Net.WebProxy.Address
- uid: System.Net.WebProxy.BypassArrayList
  parent: System.Net.WebProxy
  isExternal: false
  name: BypassArrayList
  nameWithType: WebProxy.BypassArrayList
  fullName: System.Net.WebProxy.BypassArrayList
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Net.WebProxy.BypassList
  parent: System.Net.WebProxy
  isExternal: false
  name: BypassList
  nameWithType: WebProxy.BypassList
  fullName: System.Net.WebProxy.BypassList
- uid: System.Net.WebProxy.BypassProxyOnLocal
  parent: System.Net.WebProxy
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WebProxy.BypassProxyOnLocal
  fullName: System.Net.WebProxy.BypassProxyOnLocal
- uid: System.Net.WebProxy.Credentials
  parent: System.Net.WebProxy
  isExternal: false
  name: Credentials
  nameWithType: WebProxy.Credentials
  fullName: System.Net.WebProxy.Credentials
- uid: System.Net.WebProxy.GetDefaultProxy
  parent: System.Net.WebProxy
  isExternal: false
  name: GetDefaultProxy()
  nameWithType: WebProxy.GetDefaultProxy()
  fullName: System.Net.WebProxy.GetDefaultProxy()
- uid: System.Net.WebProxy
  parent: System.Net
  isExternal: false
  name: WebProxy
  nameWithType: WebProxy
  fullName: System.Net.WebProxy
- uid: System.Net.WebProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.WebProxy
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: WebProxy.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.WebProxy.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.WebProxy.GetProxy(System.Uri)
  parent: System.Net.WebProxy
  isExternal: false
  name: GetProxy(Uri)
  nameWithType: WebProxy.GetProxy(Uri)
  fullName: System.Net.WebProxy.GetProxy(Uri)
- uid: System.Net.WebProxy.IsBypassed(System.Uri)
  parent: System.Net.WebProxy
  isExternal: false
  name: IsBypassed(Uri)
  nameWithType: WebProxy.IsBypassed(Uri)
  fullName: System.Net.WebProxy.IsBypassed(Uri)
- uid: System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.WebProxy
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: WebProxy.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.WebProxy.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.WebProxy.UseDefaultCredentials
  parent: System.Net.WebProxy
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: WebProxy.UseDefaultCredentials
  fullName: System.Net.WebProxy.UseDefaultCredentials
- uid: System.Net.WebProxy.#ctor*
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy
  nameWithType: WebProxy.WebProxy
- uid: System.Net.WebProxy.Address*
  parent: System.Net.WebProxy
  isExternal: false
  name: Address
  nameWithType: WebProxy.Address
- uid: System.Net.WebProxy.BypassArrayList*
  parent: System.Net.WebProxy
  isExternal: false
  name: BypassArrayList
  nameWithType: WebProxy.BypassArrayList
- uid: System.Net.WebProxy.BypassList*
  parent: System.Net.WebProxy
  isExternal: false
  name: BypassList
  nameWithType: WebProxy.BypassList
- uid: System.Net.WebProxy.BypassProxyOnLocal*
  parent: System.Net.WebProxy
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WebProxy.BypassProxyOnLocal
- uid: System.Net.WebProxy.Credentials*
  parent: System.Net.WebProxy
  isExternal: false
  name: Credentials
  nameWithType: WebProxy.Credentials
- uid: System.Net.WebProxy.GetDefaultProxy*
  parent: System.Net.WebProxy
  isExternal: false
  name: GetDefaultProxy
  nameWithType: WebProxy.GetDefaultProxy
- uid: System.Net.WebProxy.GetObjectData*
  parent: System.Net.WebProxy
  isExternal: false
  name: GetObjectData
  nameWithType: WebProxy.GetObjectData
- uid: System.Net.WebProxy.GetProxy*
  parent: System.Net.WebProxy
  isExternal: false
  name: GetProxy
  nameWithType: WebProxy.GetProxy
- uid: System.Net.WebProxy.IsBypassed*
  parent: System.Net.WebProxy
  isExternal: false
  name: IsBypassed
  nameWithType: WebProxy.IsBypassed
- uid: System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Net.WebProxy
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: WebProxy.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Net.WebProxy.UseDefaultCredentials*
  parent: System.Net.WebProxy
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: WebProxy.UseDefaultCredentials
