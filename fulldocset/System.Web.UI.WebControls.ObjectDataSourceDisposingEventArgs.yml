### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  id: ObjectDataSourceDisposingEventArgs
  children:
  - System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor(System.Object)
  - System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance
  langs:
  - csharp
  name: ObjectDataSourceDisposingEventArgs
  nameWithType: ObjectDataSourceDisposingEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  type: Class
  summary: "Gir dataene for den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&quot;> </xref> hendelse av den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> kontrollen."
  remarks: "Klassen ObjectDataSourceDisposingEventArgs brukes i den <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A>metode for å gi tilgang til business objektforekomsten etter noen dataoperasjoner som bruker den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen og business objektet er utført, men før virksomheten objekt er ødelagt.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> Business-objektet er tilgjengelig via den <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A>egenskapen.</xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A> Ved å legge til en representant til å håndtere <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>hendelsen du har tilgang til noen offentlig åpne medlemmer for business-objektet til å utføre noen arbeid eller fjerne. du</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>       Den <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A>metoden kalles ikke av den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollere hvis metoden som utfører dataoperasjoner er en `static` metode.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> Ingen business objektforekomsten opprettes når metoden er statisk.       Den <xref:System.Web.UI.WebControls.ObjectDataSource>kontrollen viser mange hendelser som kan håndtere, for å fungere med det underliggende objektet business på ulike tidspunkter i livssyklusen.</xref:System.Web.UI.WebControls.ObjectDataSource> Tabellen nedenfor viser hendelser og det tilknyttede <xref:System.EventArgs>klasser og hendelsen behandlingsprogrammet representanter.</xref:System.EventArgs>      | Hendelsen | EventArgs kan | EventHandler |   |-----------|---------------|------------------|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating><br /><br /> Skjer umiddelbart før forekomsten av business-objektet er opprettet. | <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs><br /><br /> Skjer umiddelbart etter at forekomsten av business-objektet er opprettet. | <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Selecting></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs><br /><br /> Forekommer før data som hentes. | <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleting></xref:System.Web.UI.WebControls.ObjectDataSource.Updating></xref:System.Web.UI.WebControls.ObjectDataSource.Inserting></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs><br /><br /> Forekommer før en insert-, update eller delete-operasjonen utføres. | <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Selected></xref:System.Web.UI.WebControls.ObjectDataSource.Selected></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs><br /><br /> Inntreffer etter at dataene er hentet. | <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted></xref:System.Web.UI.WebControls.ObjectDataSource.Updated></xref:System.Web.UI.WebControls.ObjectDataSource.Inserted></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs><br /><br /> Inntreffer etter insert-, update eller delete-operasjonen er fullført. | <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs><br /><br /> Forekommer før en business-objekt er ødelagt. | ObjectDataSourceDisposingEventArgs | <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|</xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information. The second code example provides the example middle-tier business object that the first code example uses.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information. You might work with a business object that is very expensive (in terms of time or resources) to create for every data operation that your Web page performs. One way to work with an expensive object might be to create an instance of it once, and then cache it for subsequent operations instead of creating and destroying it for every data operation. This example demonstrates this pattern. You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> event to check the cache for an object first, and then create an instance, only if one is not already cached. Then, handle the  <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event to cache the business object for future use, instead of destroying it. In this example, the <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=fullName> property of the ObjectDataSourceDisposingEventArgs object is set to `true`, to direct the <xref:System.Web.UI.WebControls.ObjectDataSource> to not call the <xref:System.IDisposable.Dispose%2A> method on the instance.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_16#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_349_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_349_1.aspx)]  \n  \n The following code example provides an example middle-tier business object that the preceding code example uses. The code example consists of a basic business object, defined by the `EmployeeLogic` class, which is a class that maintains state and encapsulates business logic. For a complete working example, you must compile this code as a library, and then use these classes from an ASP page.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_16#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_349_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_349_2.vb)]"
  syntax:
    content: 'public class ObjectDataSourceDisposingEventArgs : System.ComponentModel.CancelEventArgs'
  inheritance:
  - System.ComponentModel.CancelEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  langs:
  - csharp
  name: ObjectDataSourceDisposingEventArgs(Object)
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectDataSourceDisposingEventArgs(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectDataSourceDisposingEventArgs(Object)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs&quot;> </xref> klasse ved hjelp av det angitte objektet."
  syntax:
    content: public ObjectDataSourceDisposingEventArgs (object objectInstance);
    parameters:
    - id: objectInstance
      type: System.Object
      description: "Business-objektet som den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> samhandler for å utføre dataoperasjoner."
  overload: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance
  id: ObjectInstance
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  langs:
  - csharp
  name: ObjectInstance
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter et objekt som representerer business-objekt som den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> kontrollen utfører av data."
  remarks: "Hvis metodene for operasjonen (<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>, og <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>) er Forekomstmetoder, en forekomst av et objekt opprettes før metoden blir utført.</xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Du kan forhindre at business-objektet som opprettes for hvert kall ved å lagre objektet i egenskapen ObjectInstance i den <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>hendelsesbehandlingen.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> I etterfølgende <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>hendelser, kan du hente det business-objektet fra den <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>egenskapen.</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information. You might work with a business object that is very expensive (in terms of time or resources) to create for every data operation that your Web page performs. One way to work with an expensive object might be to create an instance of it once, and then cache it for subsequent operations instead of creating and destroying it for every data operation. This example demonstrates this pattern. You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> event to check the cache for an object first, and then create an instance, only if one is not already cached. Then, handle the  <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event to cache the business object for future use, instead of destroying it. In this example, the <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=fullName> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> class is set to `true`, to direct the <xref:System.Web.UI.WebControls.ObjectDataSource> to not call <xref:System.IDisposable.Dispose%2A> on the instance.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_16#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_252_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_252_1.aspx)]"
  syntax:
    content: public object ObjectInstance { get; }
    return:
      type: System.Object
      description: "Business-objektet i <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> bruker dataoperasjoner; ellers <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, hvis <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> er sendt til den <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.CancelEventArgs
  isExternal: false
  name: System.ComponentModel.CancelEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  isExternal: false
  name: ObjectDataSourceDisposingEventArgs(Object)
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectDataSourceDisposingEventArgs(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectDataSourceDisposingEventArgs(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor*
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  isExternal: false
  name: ObjectDataSourceDisposingEventArgs
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectDataSourceDisposingEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance*
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectInstance
