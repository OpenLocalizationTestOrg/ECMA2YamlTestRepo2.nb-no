### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  id: DesignerSerializationManager
  children:
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes
  langs:
  - csharp
  name: DesignerSerializationManager
  nameWithType: DesignerSerializationManager
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  type: Class
  summary: "Gir en implementering av den <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> grensesnitt."
  remarks: "Den <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>grensesnittet er utformet for å være en uavhengig av formatet grensesnitt til et objekt som kontrollerer serialisering.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> Det i hovedsak gir kontekst og tjenester til serializers som utfører faktisk Deserialiseringen. <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>hjelper deg med deserialisering prosessen med å holde oversikt over objekter.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> Dette er av samme metode til den <xref:System.ComponentModel.Design.IDesignerHost>grensesnitt: utviklere angi faktisk brukergrensesnittet (UI), og <xref:System.ComponentModel.Design.IDesignerHost>gir feste som tillater annen utviklere å samarbeide.</xref:System.ComponentModel.Design.IDesignerHost> </xref:System.ComponentModel.Design.IDesignerHost>       DesignerSerializationManager klassen implementerer <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> Det er utformet for å gi en generell type deserialisering som ligner kjøretid serializers som <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>       Klassen DesignerSerializationManager oppnår tre mål:-objektet er enkle, ferdige som kan brukes til å deserialisere en rekke formater.      -Det er generisk og ikke bundet til en bestemt format. Det kan brukes like for CodeDOM deserialisering som markup deserialisering.      -Det er omfattende og støtter forskjellige serialisering metodene som er brukt i kopiere og lime inn, og angre/gjør om scenarier.       Utformingen serialisering har følgende forskjeller fra kjøretid objektet serialisering:-objektet utfører serialisering er vanligvis egen fra kjøretid-objekt, slik at utformingen logic kan fjernes fra en komponent.      Skjema-serialisering antar objektet opprettes fullstendig initialisert, og deretter endres via egenskapen og metoden anrop under deserialisering.      -Egenskaper for et objekt som har verdier som ikke er angitt for objektet (egenskapene inneholder standardverdiene) er ikke serialiseres. Deserialisering-dataflyten har derimot hull.      -Utheving er plassert i kvaliteten på innholdet i dataflyten serialisering, i stedet for fullstendig serialisering av et objekt. Dette betyr at hvis det er ingen definerte måte å serialisere et objekt, objektet kan hoppes over i stedet for et unntak. Motoren for serialisering kan tilby heuristikk her for å avgjøre hvilke feil kan ignoreres, og som er uopprettelig.      -Serialisering dataflyten kan ha flere data enn kreves for deserialisering. Kilden kode serialisering, for eksempel har brukerkode blandet med koden kreves ikke deserialisere en. Denne brukerkode må ignoreres på deserialisering og beholdes på serialisering.       På grunn av disse forskjeller gjelder en annen serialisering modell utformingen serialisering. Denne modellen bruker et eget serialisereren objekt for hver datatype som serialiseres. Hver serialisereren gir det lavt bidraget til problemet som en helhet. Disse serializers er alle koordinert gjennom en felles overordnet for serialisering. Transportbehandling for serialisering er ansvarlig for å vedlikeholde tilstand mellom disse ulike serializers. Vurder følgende klassen som et eksempel: [!code-cs [System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/add/codesnippet/csharp/t-system.componentmodel._7_1.cs)][!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/add/codesnippet/visualbasic/t-system.componentmodel._7_1.vb) ] en forekomst av denne klassen vil benytte tre forskjellige serializers: én for `SampleObject`, én for strenger og en annen for heltall.   Serialisering for `SampleObject` kalles roten serialiseringen fordi `SampleObject` er roten for serialiseringsdiagrammet. Du kan opprette mer komplekse objektet diagrammer samt. Eksempel: Hva skjer hvis `SampleObject` ble endret som følger: [!code-cs [System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/add/codesnippet/csharp/t-system.componentmodel._7_2.cs)][!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/add/codesnippet/visualbasic/t-system.componentmodel._7_2.vb) ] Dette tillater at `SampleObject` har et barn som er en annen forekomst av seg selv.   Følgende kode fyller ut objektet diagrammet: [!code-cs [System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/add/codesnippet/csharp/t-system.componentmodel._7_3.cs)][!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/add/codesnippet/visualbasic/t-system.componentmodel._7_3.vb) ] når `root` serialiseres, vil det være fire serializers brukes: ett rotelement serialisering, én serialisering for underordnet `SampleObject`, én serialisering for `int`, og én serialisering for `string`.   Serializers bufres basert på typen, slik at det er ingen grunn til å opprette en serialisering for hver forekomst av `SampleObject`.       Klassen DesignerSerializationManager er basert på ideen for en serialiseringsøkt. En økt opprettholder tilstand som kan åpnes av forskjellige serializers. Når en økt som er fjernet, vil denne statusen er ødelagt. Dette bidrar til å sikre at serializers forblir stor grad uten status, og bidrar til å rydde opp serializers som er skadet. Tabellen nedenfor beskriver hvordan tilstand håndteres i og blant økter.      ## Global tilstand problemet eies av serialisering manager-objektet, men er uavhengig av den gjeldende økten for serialisering.      | Objektet | Bruk |   |------------|-----------|   | Serialisering leverandører | Objekter kan legge til seg selv som egendefinert serialisering leverandører. Disse leverandørene brukes til å finne serializers, de outlive en serialiseringsøkt. |      ## Økten eies av tilstanden denne tilstanden eies av en økt og ødelegges når en økt som er ødelagt. Derfor vil tilgang til alle egenskaper og metoder som vil endre denne tilstanden Iverksett et unntak hvis serialisering manager ikke er i en aktiv økt.      | Objektet | Bruk |   |------------|-----------|   | <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName>hendelsen | Den <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName>hendelsen er knyttet av serialisering å angi ytterligere løsing av navn.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> </xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> Alle behandlingsprogrammer, kobles fra denne hendelse når en økten avsluttes. |   | <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete>hendelsen | Den <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete>hendelsen starter like før en økt som er fjernet.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> </xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> Da alle behandlingsprogrammer, kobles fra denne hendelsen. |   | På navnetabellen | Transportbehandling for serialisering opprettholder en tabell som tilordner mellom objekter og navnene. Serializers kan gi objektnavn for enkel identifikasjon. På navnetabellen fjernes når økten avsluttes. |   | Serialiserer hurtigbufferen | Transportbehandling for serialisering opprettholder en buffer med den har blitt bedt om å oppgi serializers. Denne hurtigbufferen tømmes når økten avsluttes. Offentlig <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A>-metoden kan bare kalles når som helst, men verdien hurtigbufres bare hvis det kalles fra en økt. |   | Kontekststakk | Transportbehandling for serialisering opprettholder et objekt som kalles stakken konteksten, som du har tilgang til med den <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A>egenskapen.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> Serializers kan bruke denne bunken til å lagre tilleggsinformasjon som er tilgjengelig for andre serializers. Serialiserer som er serialisering av en egenskapsverdi kan for eksempel push egenskapsnavnet i serialisering stakken før du spør verdien til å serialisere. Denne bunken fjernes når økten avsluttes. |   | Feillisten | Transportbehandling for serialisering opprettholder en liste over feil som oppstod under serialiseringen. Denne listen som er tilgjengelig via den <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A>egenskap, fjernes når økten avsluttes.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> Tilgang til den <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A>egenskapen mellom økter, fører det et unntak. |</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A>"
  syntax:
    content: 'public class DesignerSerializationManager : IServiceProvider, System.ComponentModel.Design.Serialization.IDesignerSerializationManager'
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: DesignerSerializationManager()
  nameWithType: DesignerSerializationManager.DesignerSerializationManager()
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.DesignerSerializationManager()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot;> </xref> klasse."
  remarks: "Denne konstruktøren angir den <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A>og <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A>egenskapene som skal `true`.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A>"
  syntax:
    content: public DesignerSerializationManager ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: DesignerSerializationManager(IServiceProvider)
  nameWithType: DesignerSerializationManager.DesignerSerializationManager(IServiceProvider)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.DesignerSerializationManager(IServiceProvider)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot;> </xref> klassen med den angitte leverandøren."
  remarks: "Hvis en serialisereren ber om tjenestene som ikke oppfyller transportbehandling for serialisering, standard implementering videresende forespørsler til det `provider` parameteren.       Denne konstruktøren angir den <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A>og <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A>egenskapene som skal `true`.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A>"
  syntax:
    content: public DesignerSerializationManager (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "An <xref:System.IServiceProvider>.</xref:System.IServiceProvider>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>provider</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container
  id: Container
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: Container
  nameWithType: DesignerSerializationManager.Container
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Henter eller angir til i beholderen for denne serialisering manager."
  remarks: "Hvis det finnes en beholder, blir alle komponentene som er opprettet av transportbehandling for serialisering lagt til i beholderen. Standard implementering av denne egenskapen søkes tjenesteleverandøren for en <xref:System.ComponentModel.Design.IDesignerHost>og bruker beholderen som er angitt av designer verten, må det finnes.</xref:System.ComponentModel.Design.IDesignerHost> Hvis ikke, denne egenskapen skal returnere `null` og ingen komponenter vil bli lagt til en beholder."
  syntax:
    content: public System.ComponentModel.IContainer Container { get; set; }
    return:
      type: System.ComponentModel.IContainer
      description: "Den <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> som legger transportbehandling for serialisering komponenter."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Serialisering manager har en aktiv serialiseringsøkt."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  id: CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: CreateInstance(Type,ICollection,String,Boolean)
  nameWithType: DesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Oppretter en forekomst av en type."
  remarks: "Denne metoden kalles av serializers når de prøver å opprette en forekomst av en type. Standard implementering oppretter en ny forekomst av typen, eller den kan returnere en eksisterende forekomst avhengig av verdiene i den <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A>og <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A>Egenskaper.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> Den <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>metoden bruker gjenspeiling til å opprette forekomster og til å utføre noen generisk <xref:System.IConvertible>transformeringer parameterne til å finne en samsvarende konstruktør.</xref:System.IConvertible> </xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>"
  syntax:
    content: protected virtual object CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);
    parameters:
    - id: type
      type: System.Type
      description: "Typen til å opprette en forekomst av."
    - id: arguments
      type: System.Collections.ICollection
      description: "Parameterne for den Typekonstruktøren. Dette kan være <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en tom samling for å aktivere Standardkonstruktøren."
    - id: name
      type: System.String
      description: "Et navn for å gi objektet. Hvis <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, objektet vil ikke få et navn med mindre objektet blir lagt til en beholder og beholderen gir objektet et navn."
    - id: addToContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>legge til objektet i beholderen Hvis objektet som implementerer <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref>; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "En ny forekomst av typen som er angitt av <code> type </code>."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*
  exceptions:
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "<code>type</code>har ikke en konstruktør som bruker parametere i <code>arguments</code>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession
  id: CreateSession
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: CreateSession()
  nameWithType: DesignerSerializationManager.CreateSession()
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Oppretter en ny serialiseringsøkt."
  remarks: "Dataene i transportbehandling for serialisering er midlertidig og bare bor levetid for en serialiseringsøkt. Når en økt som er fjernet, serialisering anses å være fullført, og denne midlertidig tilstand er fjernet. Dette gjør at én forekomst av en serialisering manager som skal brukes til å serialisere flere objektet trær. Noen tilstand, inkludert tjenesteleverandøren og en egendefinert serialisering leverandører som ble lagt til transportbehandling for serialisering span økter."
  syntax:
    content: public IDisposable CreateSession ();
    parameters: []
    return:
      type: System.IDisposable
      description: "En <xref:System.IDisposable>som representerer en ny serialiseringsøkt.</xref:System.IDisposable>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Transportbehandling for serialisering er allerede i en økt. Denne versjonen av <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot;> </xref> støtter ikke samtidige økter."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors
  id: Errors
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: Errors
  nameWithType: DesignerSerializationManager.Errors
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Henter listen over feil som oppstod under serialisering eller deserialisering."
  remarks: "Du kan bare lese listen over feil under serialisering økter er aktive."
  syntax:
    content: public System.Collections.IList Errors { get; }
    return:
      type: System.Collections.IList
      description: "Listen over feil som oppstod under serialisering eller deserialisering."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Denne egenskapen er tilgjengelig utenfor en serialiseringsøkt."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)
  id: GetRuntimeType(System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: GetRuntimeType(String)
  nameWithType: DesignerSerializationManager.GetRuntimeType(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Henter typen som tilsvarer navnet på angitte typen."
  syntax:
    content: public Type GetRuntimeType (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "Navnet på typen å hente."
    return:
      type: System.Type
      description: "Den angitte typen."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)
  id: GetSerializer(System.Type,System.Type)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: GetSerializer(Type,Type)
  nameWithType: DesignerSerializationManager.GetSerializer(Type,Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(Type,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Henter serialiseringen for det angitte objektet."
  remarks: "Du kan be om hva slags serialisering du ønsker. Denne metoden returnerer `null` Hvis det er ingen serialisering av den forespurte typen for den angitte objekttypen."
  syntax:
    content: public object GetSerializer (Type objectType, Type serializerType);
    parameters:
    - id: objectType
      type: System.Type
      description: "Objekttypen som skal hente serialiseringen."
    - id: serializerType
      type: System.Type
      description: "Typen for serialisering til å hente."
    return:
      type: System.Object
      description: "Serialisering for <code> objectType </code>, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, hvis ikke funnet."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>objectType</code>or <code>serializerType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: DesignerSerializationManager.GetService(Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Henter den forespurte tjenesten."
  remarks: "Metoden GetService gir tilgang til den underliggende beholder eller -leverandør som er angitt i konstruktøren."
  syntax:
    content: protected virtual object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Hva slags service for å hente."
    return:
      type: System.Object
      description: "Den forespurte tjenesten eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis tjenesten kan ikke løses."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)
  id: GetType(System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: GetType(String)
  nameWithType: DesignerSerializationManager.GetType(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Henter den forespurte typen."
  remarks: "Den <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A>metoden søkes tjenesteleverandøren for en <xref:System.ComponentModel.Design.ITypeResolutionService>og, hvis tilgjengelig, vil den delegere til denne tjenesten å løse typen.</xref:System.ComponentModel.Design.ITypeResolutionService> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> Hvis en <xref:System.ComponentModel.Design.ITypeResolutionService>er ikke tilgjengelig <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A>kaller den <xref:System.Object.GetType%2A?displayProperty=fullName>metoden.</xref:System.Object.GetType%2A?displayProperty=fullName> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> </xref:System.ComponentModel.Design.ITypeResolutionService>"
  syntax:
    content: protected virtual Type GetType (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "Navnet på typen til å hente."
    return:
      type: System.Type
      description: "Den forespurte typen eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis typen kan ikke løses."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)
  id: OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: OnResolveName(ResolveNameEventArgs)
  nameWithType: DesignerSerializationManager.OnResolveName(ResolveNameEventArgs)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(ResolveNameEventArgs)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Hever den <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&quot;> </xref> hendelsen."
  remarks: "Opprettet en hendelse aktiverer hendelsesbehandlingen via en representant. Hvis du vil ha mer informasjon, se [NIB: opprettet en hendelse](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Metoden OnResolveName kan også avledede klasser behandle hendelsen uten å knytte representant. Dette er den foretrukne metoden for behandling av hendelsen i en avledet klasse."
  syntax:
    content: protected virtual void OnResolveName (System.ComponentModel.Design.Serialization.ResolveNameEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.Design.Serialization.ResolveNameEventArgs
      description: "En <xref href=&quot;System.ComponentModel.Design.Serialization.ResolveNameEventArgs&quot;> </xref> som inneholder hendelsesdataene."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)
  id: OnSessionCreated(System.EventArgs)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: OnSessionCreated(EventArgs)
  nameWithType: DesignerSerializationManager.OnSessionCreated(EventArgs)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(EventArgs)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Hever den <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated&quot;> </xref> hendelsen."
  remarks: "Opprettet en hendelse aktiverer hendelsesbehandlingen via en representant. Hvis du vil ha mer informasjon, se [NIB: opprettet en hendelse](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Metoden OnSessionCreated kan også avledede klasser behandle hendelsen uten å knytte representant. Dette er den foretrukne metoden for behandling av hendelsen i en avledet klasse."
  syntax:
    content: protected virtual void OnSessionCreated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "En <xref:System.EventArgs>som inneholder Hendelsesdata.</xref:System.EventArgs>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)
  id: OnSessionDisposed(System.EventArgs)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: OnSessionDisposed(EventArgs)
  nameWithType: DesignerSerializationManager.OnSessionDisposed(EventArgs)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(EventArgs)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Hever den <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed&quot;> </xref> hendelsen."
  remarks: "Opprettet en hendelse aktiverer hendelsesbehandlingen via en representant. Hvis du vil ha mer informasjon, se [NIB: opprettet en hendelse](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Metoden OnSessionDisposed kan også avledede klasser behandle hendelsen uten å knytte representant. Dette er den foretrukne metoden for behandling av hendelsen i en avledet klasse."
  syntax:
    content: protected virtual void OnSessionDisposed (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "En <xref:System.EventArgs>som inneholder Hendelsesdata.</xref:System.EventArgs>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames
  id: PreserveNames
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: PreserveNames
  nameWithType: DesignerSerializationManager.PreserveNames
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Henter eller angir en verdi som angir om den <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>metoden skal se etter det angitte navnet i beholderen.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>"
  remarks: "Egenskapen PreserveNames angir virkemåten til den <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>metoden.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Hvis `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>vil sende det angitte komponentnavnet.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Hvis `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>skal se etter det angitte navnet i beholderen.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Hvis navnet ikke finnes i beholderen, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>bruker det angitte navnet.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Hvis navnet finnes i beholderen, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>vil sende en null-verdi som navnet på en komponent når du legger til i beholderen, og dermed gir et nytt navn.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Denne andre variasjonen er nyttig for å implementere et serialisering som dupliserer alltid objekter, i stedet for forutsatt at disse objektene ikke finnes. Lim inn bruker ofte denne typen serialisering.       Når du ikke er i en serialiseringsøkt med, kan du bare endre denne egenskapen."
  syntax:
    content: public bool PreserveNames { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <> </> *> vil sende det angitte komponentnavnet; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Hvis <> </> *> skal se etter det angitte navnet i beholderen. Standard <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Denne egenskapen ble endret fra i en serialiseringsøkt."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider
  id: PropertyProvider
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: PropertyProvider
  nameWithType: DesignerSerializationManager.PropertyProvider
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Henter objektet som skal brukes til å angi egenskapene til transportbehandling serialisering <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*>egenskapen.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*>"
  remarks: "Egenskapen PropertyProvider kan gi transportbehandling for serialisering av et sett med egenskaper for serialisering serializers kan bruke til å lede virkemåten.       Denne offentlige objektegenskaper skal kontrollert og omsluttet av nye egenskapen beskrivelser som har en målobjektet for transportbehandling for serialisering."
  syntax:
    content: public object PropertyProvider { get; set; }
    return:
      type: System.Object
      description: "Objektet som skal brukes til å angi egenskapene til transportbehandling serialisering <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*>egenskapen.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances
  id: RecycleInstances
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: RecycleInstances
  nameWithType: DesignerSerializationManager.RecycleInstances
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Henter eller angir et flagg som indikerer om <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>alltid oppretter en ny forekomst av en type.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>"
  remarks: "Hvis egenskapen RecycleInstances `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>metoden alltid oppretter en ny forekomst av en type.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Hvis RecycleInstances `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>søkes først navnetabellen og beholder for et objekt med samme navn.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Hvis slikt objekt finnes og er av samme type <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>tilbakestiller den eksisterende forekomsten.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Denne andre variasjonen er nyttig for å implementere serialisereren som gjelder for serialisering tilstand i en eksisterende settet med objekter i stedet for å alltid å opprette et nytt tre. Den **Angre** kommandoen ofte bruker denne typen serialisering.       I tilfeller der egenskapen RecycleInstances er `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A>egenskapen endrer videre virkemåten for <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>avhengig av typene for de to objektene.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A>"
  syntax:
    content: public bool RecycleInstances { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <> </> *> tilbakestiller den eksisterende forekomsten; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Hvis <> </> *> oppretter en ny forekomst av en type. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Serialisering manager har en aktiv serialiseringsøkt."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated
  id: SessionCreated
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: SessionCreated
  nameWithType: DesignerSerializationManager.SessionCreated
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Forekommer når en økt som er opprettet."
  syntax:
    content: public event EventHandler SessionCreated;
    return:
      type: System.EventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed
  id: SessionDisposed
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: SessionDisposed
  nameWithType: DesignerSerializationManager.SessionDisposed
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Forekommer når en økt som er fjernet."
  syntax:
    content: public event EventHandler SessionDisposed;
    return:
      type: System.EventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Legger til en egendefinert serialisering leverandør transportbehandling for serialisering."
  remarks: "Når den <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A>metoden brukes til å be om en serialisering-leverandør, transportbehandling for serialisering spørringer egendefinerte serialisering leverandørene først før ser i den typen metadata for riktig serialiseringen.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A>"
  syntax:
    content: void IDesignerSerializationManager.AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);
    parameters:
    - id: provider
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider
      description: "Serialisering leverandøren å legge til."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Henter konteksten stakken for denne økten serialisering."
  remarks: "En konteksten bunke gir et brukerdefinert lagringsområde, implementert som en bunke. Dette lagringsområdet er nyttig for å gi kommunikasjon på tvers av serializers, som er en vanligvis hierarkisk prosess for serialisering."
  syntax:
    content: System.ComponentModel.Design.Serialization.ContextStack System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context { get; }
    return:
      type: System.ComponentModel.Design.Serialization.ContextStack
      description: "En <xref href=&quot;System.ComponentModel.Design.Serialization.ContextStack&quot;> </xref> som lagrer data."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Denne egenskapen er tilgjengelig utenfor en serialiseringsøkt."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Implementerer den <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance*>metoden.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance*>"
  syntax:
    content: object IDesignerSerializationManager.CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);
    parameters:
    - id: type
      type: System.Type
      description: "Datatypen til å opprette."
    - id: arguments
      type: System.Collections.ICollection
      description: "Argumenter som skal sendes til konstruktøren for denne typen."
    - id: name
      type: System.String
      description: "Navnet på objektet. Dette navnet kan brukes til å få tilgang til objektet senere via <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*>.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*> Hvis <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> er passert, objektet fortsatt er opprettet, men kan ikke brukes med navn."
    - id: addToContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>legge til dette objektet i beholderen utformingen. Objektet må implementere <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> for dette skal fungere."
    return:
      type: System.Object
      description: "Forekomsten av nyopprettede objektet."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Henter en forekomst av en opprettet objektet i det angitte navnet."
  syntax:
    content: object IDesignerSerializationManager.GetInstance (string name);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på objektet som skal hentes."
    return:
      type: System.Object
      description: "En forekomst av objektet med det angitte navnet eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis ingen objekter med dette navnet finnes."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Denne egenskapen er tilgjengelig utenfor en serialiseringsøkt."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Henter et navn for det angitte objektet."
  remarks: "Hvis IDesignerSerializationManager.GetName-metoden ikke kan finne et tilsvarende navn for den `value` parameteren den opphøyer den <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName>hendelse før den returnerer `null`.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName>"
  syntax:
    content: string IDesignerSerializationManager.GetName (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Objektet som skal hente navnet."
    return:
      type: System.String
      description: "Navnet på objektet, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis objektet er uten navn."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Denne egenskapen er tilgjengelig utenfor en serialiseringsøkt."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Henter en serialisering av den forespurte typen for den angitte objekttypen."
  syntax:
    content: object IDesignerSerializationManager.GetSerializer (Type objectType, Type serializerType);
    parameters:
    - id: objectType
      type: System.Type
      description: "Typen for objektet som skal få serialisering for."
    - id: serializerType
      type: System.Type
      description: "Hva slags serialiseringen til å hente."
    return:
      type: System.Object
      description: "En forekomst av den forespurte serialiseringen eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis ingen passende Serialiserer kan blir funnet."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Henter en type for det angitte navnet."
  syntax:
    content: Type IDesignerSerializationManager.GetType (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "Det fullstendig kvalifiserte navnet av type lastes inn."
    return:
      type: System.Type
      description: "En forekomst av typen, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis typen ikke kan lastes inn."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Denne egenskapen er tilgjengelig utenfor en serialiseringsøkt."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Implementerer den <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*>egenskapen.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*>"
  syntax:
    content: System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties { get; }
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "En <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> som inneholder egenskapene som skal serialiseres."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Fjerner en tidligere tillagt serialisering-leverandør."
  remarks: "Metoden IDesignerSerializationManager.RemoveSerializationProvider fjerner en egendefinert serialisering leverandør som tidligere ble lagt til av et kall til den <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A>metoden.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A>"
  syntax:
    content: void IDesignerSerializationManager.RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);
    parameters:
    - id: provider
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider
      description: "Den <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationProvider&quot;> </xref> fjerne."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Brukes til å rapportere en feil kan gjennopprettes i serialisering."
  remarks: "Serializers kan skrives til å håndtere ugjenopprettbar feil webområdet ved å kalle metoden IDesignerSerializationManager.ReportError med informasjon om feilen. Transportbehandling for serialisering støtter reporting en liste over feil når den er fullført, eller den kan Iverksett et unntak fra denne metoden avbryte serialisering prosessen. Serialiseringen skal fortsette etter kall til denne funksjonen.       IDesignerSerializationManager.ReportError legger til den `errorInformation` parameter i <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A>samlingen.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> Hvis `errorInformation` er `null`, ingen handling ble utført."
  syntax:
    content: void IDesignerSerializationManager.ReportError (object errorInformation);
    parameters:
    - id: errorInformation
      type: System.Object
      description: "Et objekt som inneholder informasjon om feilen, vanligvis av typen <xref:System.String>eller <xref:System.Exception>.</xref:System.Exception> </xref:System.String>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Denne egenskapen er tilgjengelig utenfor en serialiseringsøkt."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Angir navnet på det angitte objektet."
  remarks: "Metoden IDesignerSerializationManager.SetName kan ikke angi navnet på et eksisterende objekt. Dette aktiverer oppretting av en forekomst av objektet via et kall til den <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A>metoden unngå overhead for den <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>metoden.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A>"
  syntax:
    content: void IDesignerSerializationManager.SetName (object instance, string name);
    parameters:
    - id: instance
      type: System.Object
      description: "Objektet til å angi navnet."
    - id: name
      type: System.String
      description: "En <xref:System.String>brukes som navnet på objektet.</xref:System.String>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En eller begge parameterne er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Objektet som er angitt i forekomsten allerede har et navn, eller <code> name </code> er allerede brukt av en annen navngitt objekt."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Denne egenskapen er tilgjengelig utenfor en serialiseringsøkt."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)
  id: System#IServiceProvider#GetService(System.Type)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.IServiceProvider.GetService(Type)
  nameWithType: DesignerSerializationManager.System.IServiceProvider.GetService(Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.IServiceProvider.GetService(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "En beskrivelse for dette medlemmet, kan du se den <xref:System.IServiceProvider.GetService*>metoden.</xref:System.IServiceProvider.GetService*>"
  remarks: "Dette medlemmet er implementering eksplisitt grensesnitt medlem. Den kan brukes bare når den <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager>forekomsten endres til en <xref:System.IServiceProvider>grensesnittet.</xref:System.IServiceProvider> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager>"
  syntax:
    content: object IServiceProvider.GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Et objekt som angir objekttypen tjenesten å hente."
    return:
      type: System.Object
      description: "Et serviceobjekt av typen <code> serviceType </code>.       - eller - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis det er ingen service-objekter av typen <code> serviceType </code>."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes
  id: ValidateRecycledTypes
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: ValidateRecycledTypes
  nameWithType: DesignerSerializationManager.ValidateRecycledTypes
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Henter eller angir et flagg som angir om den <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>metoden bekrefter at samsvarende navn refererer til samme type.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>"
  remarks: "Egenskapen ValidateRecycledTypes endrer av den <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>metoden når den <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A>egenskapen `true`, som beskrevet i følgende tabell.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>      | `RecycleInstances`|`ValidateRecycledTypes`| Virkemåte for `CreateInstance`|   |------------------------|-----------------------------|----------------------------------|   | `false`|`true` or `false`| Opprett en ny forekomst av den angitte typen alltid |   | `true`|`false`| Hvis en forekomst av samsvarende finnes det returneres, uavhengig av filtypen. |   | `true`|`true`| Hvis en samsvarende forekomst blir funnet, returneres bare hvis filtypen er den samme som er angitt i metodekallet. |       ValidateRecycledTypes er nyttige ved oppdeling én objekttypen til en annen hvis de har lignende egenskaper, men har ingen felles overordnet eller grensesnitt."
  syntax:
    content: public bool ValidateRecycledTypes { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>bekrefter typer; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Hvis ikke.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*> Standard <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Serialisering manager har en aktiv serialiseringsøkt."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: DesignerSerializationManager()
  nameWithType: DesignerSerializationManager.DesignerSerializationManager()
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.DesignerSerializationManager()
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: DesignerSerializationManager(IServiceProvider)
  nameWithType: DesignerSerializationManager.DesignerSerializationManager(IServiceProvider)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.DesignerSerializationManager(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: Container
  nameWithType: DesignerSerializationManager.Container
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: CreateInstance(Type,ICollection,String,Boolean)
  nameWithType: DesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: CreateSession()
  nameWithType: DesignerSerializationManager.CreateSession()
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession()
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: Errors
  nameWithType: DesignerSerializationManager.Errors
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetRuntimeType(String)
  nameWithType: DesignerSerializationManager.GetRuntimeType(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(String)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetSerializer(Type,Type)
  nameWithType: DesignerSerializationManager.GetSerializer(Type,Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(Type,Type)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetService(Type)
  nameWithType: DesignerSerializationManager.GetService(Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(Type)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetType(String)
  nameWithType: DesignerSerializationManager.GetType(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(String)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: OnResolveName(ResolveNameEventArgs)
  nameWithType: DesignerSerializationManager.OnResolveName(ResolveNameEventArgs)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(ResolveNameEventArgs)
- uid: System.ComponentModel.Design.Serialization.ResolveNameEventArgs
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: ResolveNameEventArgs
  nameWithType: ResolveNameEventArgs
  fullName: System.ComponentModel.Design.Serialization.ResolveNameEventArgs
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: OnSessionCreated(EventArgs)
  nameWithType: DesignerSerializationManager.OnSessionCreated(EventArgs)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: OnSessionDisposed(EventArgs)
  nameWithType: DesignerSerializationManager.OnSessionDisposed(EventArgs)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(EventArgs)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: PreserveNames
  nameWithType: DesignerSerializationManager.PreserveNames
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: PropertyProvider
  nameWithType: DesignerSerializationManager.PropertyProvider
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: RecycleInstances
  nameWithType: DesignerSerializationManager.RecycleInstances
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: SessionCreated
  nameWithType: DesignerSerializationManager.SessionCreated
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: SessionDisposed
  nameWithType: DesignerSerializationManager.SessionDisposed
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: IDesignerSerializationProvider
  nameWithType: IDesignerSerializationProvider
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
- uid: System.ComponentModel.Design.Serialization.ContextStack
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: ContextStack
  nameWithType: ContextStack
  fullName: System.ComponentModel.Design.Serialization.ContextStack
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.IServiceProvider.GetService(Type)
  nameWithType: DesignerSerializationManager.System.IServiceProvider.GetService(Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.IServiceProvider.GetService(Type)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: ValidateRecycledTypes
  nameWithType: DesignerSerializationManager.ValidateRecycledTypes
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: DesignerSerializationManager
  nameWithType: DesignerSerializationManager.DesignerSerializationManager
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: Container
  nameWithType: DesignerSerializationManager.Container
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: CreateInstance
  nameWithType: DesignerSerializationManager.CreateInstance
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: CreateSession
  nameWithType: DesignerSerializationManager.CreateSession
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: Errors
  nameWithType: DesignerSerializationManager.Errors
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetRuntimeType
  nameWithType: DesignerSerializationManager.GetRuntimeType
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetSerializer
  nameWithType: DesignerSerializationManager.GetSerializer
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetService
  nameWithType: DesignerSerializationManager.GetService
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetType
  nameWithType: DesignerSerializationManager.GetType
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: OnResolveName
  nameWithType: DesignerSerializationManager.OnResolveName
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: OnSessionCreated
  nameWithType: DesignerSerializationManager.OnSessionCreated
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: OnSessionDisposed
  nameWithType: DesignerSerializationManager.OnSessionDisposed
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: PreserveNames
  nameWithType: DesignerSerializationManager.PreserveNames
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: PropertyProvider
  nameWithType: DesignerSerializationManager.PropertyProvider
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: RecycleInstances
  nameWithType: DesignerSerializationManager.RecycleInstances
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.IServiceProvider.GetService
  nameWithType: DesignerSerializationManager.System.IServiceProvider.GetService
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: ValidateRecycledTypes
  nameWithType: DesignerSerializationManager.ValidateRecycledTypes
