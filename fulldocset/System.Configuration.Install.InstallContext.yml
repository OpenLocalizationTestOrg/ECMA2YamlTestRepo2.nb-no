### YamlMime:ManagedReference
items:
- uid: System.Configuration.Install.InstallContext
  id: InstallContext
  children:
  - System.Configuration.Install.InstallContext.#ctor
  - System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])
  - System.Configuration.Install.InstallContext.IsParameterTrue(System.String)
  - System.Configuration.Install.InstallContext.LogMessage(System.String)
  - System.Configuration.Install.InstallContext.Parameters
  - System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])
  langs:
  - csharp
  name: InstallContext
  nameWithType: InstallContext
  fullName: System.Configuration.Install.InstallContext
  type: Class
  summary: "Inneholder informasjon om den gjeldende installasjonen."
  remarks: "Vanligvis er en InstallContext opprettet av en installasjon kjørbare, for eksempel InstallUtil.exe som installerer samlinger. Installasjonsprogrammet aktiverer InstallContext-konstruktøren, sendes loggfilen standardbanen og kommandolinjeverktøyet parametere.       Før du kaller den <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, eller <xref:System.Configuration.Install.Installer.Uninstall%2A>metoder, installasjonsprogrammet angir den <xref:System.Configuration.Install.Installer.Context%2A>for en <xref:System.Configuration.Install.Installer>til forekomsten av InstallContext.</xref:System.Configuration.Install.Installer> </xref:System.Configuration.Install.Installer.Context%2A> </xref:System.Configuration.Install.Installer.Uninstall%2A> </xref:System.Configuration.Install.Installer.Rollback%2A> </xref:System.Configuration.Install.Installer.Commit%2A> </xref:System.Configuration.Install.Installer.Install%2A> Før du kaller disse metodene, en <xref:System.Configuration.Install.Installer>som inneholder en installasjonsprogrammet-samlingen i den <xref:System.Configuration.Install.Installer.Installers%2A>egenskapen angir de <xref:System.Configuration.Install.Installer.Context%2A>for hver inneholder installer.</xref:System.Configuration.Install.Installer.Context%2A> </xref:System.Configuration.Install.Installer.Installers%2A> </xref:System.Configuration.Install.Installer>       Den <xref:System.Configuration.Install.InstallContext.Parameters%2A>egenskapen inneholder en analysert versjon av kommandolinjen som er angitt for å kjøre den kjørbare installasjonsfilen.</xref:System.Configuration.Install.InstallContext.Parameters%2A> Egenskapen inneholder informasjon for eksempel banen til en loggfil om du vil vise logginformasjon på konsollen og om du vil vise et brukergrensesnitt under installasjonen. Kall av <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>metode for å finne ut om en kommandolinjeparameteren er `true`.</xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>       Bruk av <xref:System.Configuration.Install.InstallContext.LogMessage%2A>metode for å skrive statusmeldinger til loggfilen for installasjon og console.</xref:System.Configuration.Install.InstallContext.LogMessage%2A>"
  example:
  - "The following example demonstrates the <xref:System.Configuration.Install.InstallContext.%23ctor%2A> constructors, the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property and the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> and <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> methods of the InstallContext class.  \n  \n When the <xref:System.Configuration.Install.Installer.Install%2A> method of the installer is called, it checks for parameters from the command line. Depending on that, it displays the progress messages onto the console and also saves it to the specified log file.  \n  \n When the program is invoked without any arguments, an empty InstallContext is created. When \"/LogFile\" and \"/LogtoConsole\" are specified, the InstallContext is created by passing the respective arguments to <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.  \n  \n [!code-cs[InstallContext_InstallContext#1](~/add/codesnippet/csharp/t-system.configuration.i_10_1.cs)]\n [!code-cpp[InstallContext_InstallContext#1](~/add/codesnippet/cpp/t-system.configuration.i_10_1.cpp)]\n [!code-vb[InstallContext_InstallContext#1](~/add/codesnippet/visualbasic/t-system.configuration.i_10_1.vb)]"
  syntax:
    content: public class InstallContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.Install.InstallContext.#ctor
  id: '#ctor'
  parent: System.Configuration.Install.InstallContext
  langs:
  - csharp
  name: InstallContext()
  nameWithType: InstallContext.InstallContext()
  fullName: System.Configuration.Install.InstallContext.InstallContext()
  type: Constructor
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Configuration.Install.InstallContext&quot;> </xref> klasse."
  remarks: "Denne overlasten opprette ikke en loggfil for å installere."
  example:
  - "> [!NOTE]\n>  This example shows how to use one of the overloaded versions of the <xref:System.Configuration.Install.InstallContext> constructor. For other examples that might be available, see the individual overload topics.  \n  \n When the program is invoked without any arguments, an empty <xref:System.Configuration.Install.InstallContext> is created.  \n  \n [!code-cs[InstallContext_InstallContext#2](~/add/codesnippet/csharp/m-system.configuration.i_10_1.cs)]\n [!code-cpp[InstallContext_InstallContext#2](~/add/codesnippet/cpp/m-system.configuration.i_10_1.cpp)]\n [!code-vb[InstallContext_InstallContext#2](~/add/codesnippet/visualbasic/m-system.configuration.i_10_1.vb)]"
  syntax:
    content: public InstallContext ();
    parameters: []
  overload: System.Configuration.Install.InstallContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])
  id: '#ctor(System.String,System.String[])'
  parent: System.Configuration.Install.InstallContext
  langs:
  - csharp
  name: InstallContext(String,String[])
  nameWithType: InstallContext.InstallContext(String,String[])
  fullName: System.Configuration.Install.InstallContext.InstallContext(String,String[])
  type: Constructor
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Configuration.Install.InstallContext&quot;> </xref> klasse og oppretter en loggfil for å installere."
  remarks: "Hvis installasjonen bruker [Installutil.exe (Installer verktøyet)](~/add/includes/ajax-current-ext-md.md), denne konstruktøren oppretter en loggfil på den angitte banen og analyserer en rekke kommandolinjeverktøyet parametere i den <xref:System.Configuration.Install.InstallContext.Parameters%2A>egenskapen.</xref:System.Configuration.Install.InstallContext.Parameters%2A> Hvis en loggfil bane er angitt i kommandolinjen parametere, brukes den til å opprette filen. Hvis argumentet loggen filen ikke er angitt i kommandolinjen, verdien for den `logFilePath` parameteren brukes. Hvis du vil skjule oppretting av en loggfil, sendes det &quot;/ logfile =&quot; kommandolinjeparameteren."
  example:
  - "This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.  \n  \n When \"/LogFile\" and \"/LogtoConsole\" are specified, the <xref:System.Configuration.Install.InstallContext> is created by passing the respective arguments to <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.  \n  \n [!code-cs[InstallContext_InstallContext#3](~/add/codesnippet/csharp/542763dc-b606-44ec-b9bd-_1.cs)]\n [!code-cpp[InstallContext_InstallContext#3](~/add/codesnippet/cpp/542763dc-b606-44ec-b9bd-_1.cpp)]\n [!code-vb[InstallContext_InstallContext#3](~/add/codesnippet/visualbasic/542763dc-b606-44ec-b9bd-_1.vb)]"
  syntax:
    content: public InstallContext (string logFilePath, string[] commandLine);
    parameters:
    - id: logFilePath
      type: System.String
      description: "Banen til loggfilen for denne installasjonen, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis ingen loggfil skal opprettes."
    - id: commandLine
      type: System.String[]
      description: "Kommandolinjeverktøyet parameterne angitt når du kjører installasjonsprogrammet, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis ingen er angitt."
  overload: System.Configuration.Install.InstallContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Install.InstallContext.IsParameterTrue(System.String)
  id: IsParameterTrue(System.String)
  parent: System.Configuration.Install.InstallContext
  langs:
  - csharp
  name: IsParameterTrue(String)
  nameWithType: InstallContext.IsParameterTrue(String)
  fullName: System.Configuration.Install.InstallContext.IsParameterTrue(String)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "Bestemmer om den angitte kommandolinjeparameteren <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  remarks: "Denne metoden har tilgang til den <xref:System.Configuration.Install.InstallContext.Parameters%2A>egenskapen som inneholder en analysert versjon av parameterne til å finne ut om den angitte parameteren er `true`.</xref:System.Configuration.Install.InstallContext.Parameters%2A>"
  example:
  - "This example is an excerpt of the sample in the class overview of the <xref:System.Configuration.Install.InstallContext> class.  \n  \n It uses the IsParameterTrue method to find out if the `LogtoConsole` parameter has been set. If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.  \n  \n [!code-cs[InstallContext_InstallContext#4](~/add/codesnippet/csharp/m-system.configuration.i_5_1.cs)]\n [!code-cpp[InstallContext_InstallContext#4](~/add/codesnippet/cpp/m-system.configuration.i_5_1.cpp)]\n [!code-vb[InstallContext_InstallContext#4](~/add/codesnippet/visualbasic/m-system.configuration.i_5_1.vb)]"
  syntax:
    content: public bool IsParameterTrue (string paramName);
    parameters:
    - id: paramName
      type: System.String
      description: "Navnet på kommandolinjeparameteren å se."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den angitte parameteren er satt til &quot;Ja&quot;, &quot;true&quot;, &quot;1&quot; eller en tom streng (&quot;&quot;); Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.Install.InstallContext.IsParameterTrue*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Install.InstallContext.LogMessage(System.String)
  id: LogMessage(System.String)
  parent: System.Configuration.Install.InstallContext
  langs:
  - csharp
  name: LogMessage(String)
  nameWithType: InstallContext.LogMessage(String)
  fullName: System.Configuration.Install.InstallContext.LogMessage(String)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "Skriver en melding til konsollen og loggfilen for å installere."
  remarks: "En installasjonsprogrammet kan kalle denne metoden for å skrive pågår eller andre statusinformasjon til loggfilen. Hvis kommandolinjeverktøyet parameterne angir at et brukergrensesnitt skal vises, må installasjonsprogrammet Vis meldingsboksene eller utføre spørringer i tillegg til å kalle metoden LogMessage. Tekst som er skrevet til loggfilen vil ikke være synlige av brukeren med mindre InstallUtil.exe brukes til å kjøre installasjonen og &quot;/ LogToConsole = true&quot; er angitt i kommandolinjen."
  example:
  - "This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.  \n  \n It uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set. If `yes`, it will then use the LogMessage method to write status messages to the installation log file and the console.  \n  \n [!code-cs[InstallContext_InstallContext#4](~/add/codesnippet/csharp/m-system.configuration.i_7_1.cs)]\n [!code-cpp[InstallContext_InstallContext#4](~/add/codesnippet/cpp/m-system.configuration.i_7_1.cpp)]\n [!code-vb[InstallContext_InstallContext#4](~/add/codesnippet/visualbasic/m-system.configuration.i_7_1.vb)]"
  syntax:
    content: public void LogMessage (string message);
    parameters:
    - id: message
      type: System.String
      description: "Meldingen for å skrive."
  overload: System.Configuration.Install.InstallContext.LogMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Install.InstallContext.Parameters
  id: Parameters
  parent: System.Configuration.Install.InstallContext
  langs:
  - csharp
  name: Parameters
  nameWithType: InstallContext.Parameters
  fullName: System.Configuration.Install.InstallContext.Parameters
  type: Property
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "Henter kommandolinjeverktøyet parameterne som ble angitt da InstallUtil.exe ble kjørt."
  remarks: "Når en ny <xref:System.Configuration.Install.InstallContext>er opprettet, kommandolinjen parametere er analyseres til egenskapen Parameters.</xref:System.Configuration.Install.InstallContext> Både av nøkler og verdier for parameterne er strenger."
  example:
  - "This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.  \n  \n The sample retrieves the Parameters property to see if any command line argument has been entered by the user. It also uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set. If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.  \n  \n [!code-cs[InstallContext_InstallContext#6](~/add/codesnippet/csharp/p-system.configuration.i_10_1.cs)]\n [!code-cpp[InstallContext_InstallContext#6](~/add/codesnippet/cpp/p-system.configuration.i_10_1.cpp)]\n [!code-vb[InstallContext_InstallContext#6](~/add/codesnippet/visualbasic/p-system.configuration.i_10_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringDictionary Parameters { get; }
    return:
      type: System.Collections.Specialized.StringDictionary
      description: "En <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> som representerer kommandolinjeverktøyet parameterne som ble angitt under installasjonen kjørbare ble kjørt."
  overload: System.Configuration.Install.InstallContext.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])
  id: ParseCommandLine(System.String[])
  parent: System.Configuration.Install.InstallContext
  langs:
  - csharp
  name: ParseCommandLine(String[])
  nameWithType: InstallContext.ParseCommandLine(String[])
  fullName: System.Configuration.Install.InstallContext.ParseCommandLine(String[])
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "Analyserer kommandolinjeverktøyet i en ordliste for streng."
  syntax:
    content: protected static System.Collections.Specialized.StringDictionary ParseCommandLine (string[] args);
    parameters:
    - id: args
      type: System.String[]
      description: "En matrise som inneholder kommandolinjeverktøyet parametere."
    return:
      type: System.Collections.Specialized.StringDictionary
      description: "En <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> som inneholder analysere kommandolinjeverktøyet parametere."
  overload: System.Configuration.Install.InstallContext.ParseCommandLine*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.Install.InstallContext.#ctor
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: InstallContext()
  nameWithType: InstallContext.InstallContext()
  fullName: System.Configuration.Install.InstallContext.InstallContext()
- uid: System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: InstallContext(String,String[])
  nameWithType: InstallContext.InstallContext(String,String[])
  fullName: System.Configuration.Install.InstallContext.InstallContext(String,String[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Configuration.Install.InstallContext.IsParameterTrue(System.String)
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: IsParameterTrue(String)
  nameWithType: InstallContext.IsParameterTrue(String)
  fullName: System.Configuration.Install.InstallContext.IsParameterTrue(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.Install.InstallContext.LogMessage(System.String)
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: LogMessage(String)
  nameWithType: InstallContext.LogMessage(String)
  fullName: System.Configuration.Install.InstallContext.LogMessage(String)
- uid: System.Configuration.Install.InstallContext.Parameters
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: Parameters
  nameWithType: InstallContext.Parameters
  fullName: System.Configuration.Install.InstallContext.Parameters
- uid: System.Collections.Specialized.StringDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: System.Collections.Specialized.StringDictionary
- uid: System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: ParseCommandLine(String[])
  nameWithType: InstallContext.ParseCommandLine(String[])
  fullName: System.Configuration.Install.InstallContext.ParseCommandLine(String[])
- uid: System.Configuration.Install.InstallContext.#ctor*
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: InstallContext
  nameWithType: InstallContext.InstallContext
- uid: System.Configuration.Install.InstallContext.IsParameterTrue*
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: IsParameterTrue
  nameWithType: InstallContext.IsParameterTrue
- uid: System.Configuration.Install.InstallContext.LogMessage*
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: LogMessage
  nameWithType: InstallContext.LogMessage
- uid: System.Configuration.Install.InstallContext.Parameters*
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: Parameters
  nameWithType: InstallContext.Parameters
- uid: System.Configuration.Install.InstallContext.ParseCommandLine*
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: ParseCommandLine
  nameWithType: InstallContext.ParseCommandLine
