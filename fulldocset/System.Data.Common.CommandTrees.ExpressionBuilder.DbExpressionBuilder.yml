### YamlMime:ManagedReference
items:
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  id: DbExpressionBuilder
  children:
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage@,System.Object)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression@,System.String,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding@,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Data.Common.CommandTrees.DbExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType@,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Data.Common.CommandTrees.DbExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.EdmProperty)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.NavigationProperty)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  langs:
  - csharp
  name: DbExpressionBuilder
  nameWithType: DbExpressionBuilder
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  type: Class
  summary: "Gir et API ikke konstruere <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref>s og gjør at API skal ha tilgang til som utvidelse metoder på uttrykkstypen seg selv."
  syntax:
    content: public static class DbExpressionBuilder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  id: Aggregate(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Aggregate(EdmFunction,DbExpression)
  nameWithType: DbExpressionBuilder.Aggregate(EdmFunction,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(EdmFunction,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionAggregate&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionAggregate Aggregate (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: function
      type: System.Data.Metadata.Edm.EdmFunction
      description: "Funksjonen som definerer aggregate operasjonen."
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Argumentet som aggregate-funksjonen skal beregnes."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionAggregate
      description: "Nye funksjonen aggregate med en referanse til den angitte funksjonen og argumentet. Aggregatfunksjonen funksjonen distinkte har verdien <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>function</code>eller <code>argument</code> null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>function</code>er ikke en mengdefunksjon eller har mer enn ett argument eller resultattypen for <code>argument</code> er lik eller forfremmes til parametertype <code>function</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  id: AggregateDistinct(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: AggregateDistinct(EdmFunction,DbExpression)
  nameWithType: DbExpressionBuilder.AggregateDistinct(EdmFunction,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(EdmFunction,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionAggregate&quot;> </xref> som brukes i en distinkte måte."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionAggregate AggregateDistinct (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: function
      type: System.Data.Metadata.Edm.EdmFunction
      description: "Funksjonen som definerer aggregate operasjonen."
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Argumentet som aggregate-funksjonen skal beregnes."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionAggregate
      description: "Nye funksjonen aggregate med en referanse til den angitte funksjonen og argumentet. Aggregatfunksjonen funksjonen distinkte har verdien <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>function</code>eller <code>argument</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>function</code>er ikke en mengdefunksjon eller har mer enn ett argument eller resultattypen for <code>argument</code> er lik eller forfremmes til parametertype <code>function</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: All(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: All(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.All(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(DbExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbQuantifierExpression&quot;> </xref> som bestemmer om det angitte predikatet inneholder for alle elementer i det angitte settet."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> predicate);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir det angitte settet."
    - id: predicate
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "En metode som representerer et predikat skal evalueres for hvert medlem i det angitte settet.    Denne metoden må produsere et uttrykk med en Boolean Resultattype som inneholder predikatet logikken."
    return:
      type: System.Data.Common.CommandTrees.DbQuantifierExpression
      description: "En ny DbQuantifierExpression som representerer alle operasjonen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uttrykket som er generert av <code> predicate </code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Uttrykket som er generert av <code> Predicate </code> har ikke en boolsk Resultattype."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  id: All(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: All(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.All(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbQuantifierExpression&quot;> </xref> som bestemmer om det angitte predikatet inneholder for alle elementer i det angitte settet."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Et uttrykk binding som angir det angitte settet."
    - id: predicate
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som representerer et predikat skal evalueres for hvert medlem i det angitte settet."
    return:
      type: System.Data.Common.CommandTrees.DbQuantifierExpression
      description: "En ny DbQuantifierExpression som representerer alle operasjonen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>eller <code>predicate</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>predicate</code>har ikke en boolsk Resultattype."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: And(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: And(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.And(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en <xref href=&quot;System.Data.Common.CommandTrees.DbAndExpression&quot;> </xref> som utfører logisk og til venstre og høyre argument."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbAndExpression And (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et boolsk uttrykk som angir det venstre argumentet."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et boolsk uttrykk som angir høyre argument."
    return:
      type: System.Data.Common.CommandTrees.DbAndExpression
      description: "En ny DbAndExpression med de angitte argumentene."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>eller <code>right</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>left</code>og <code>right</code> har ikke en boolsk Resultattype."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@)
  id: Any(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Any(DbExpression)
  nameWithType: DbExpressionBuilder.Any(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> som bestemmer om det angitte Sett-argumentet er ikke tom."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExpression Any (this System.Data.Common.CommandTrees.DbExpression source);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir det angitte settet."
    return:
      type: System.Data.Common.CommandTrees.DbExpression
      description: "En ny <xref href=&quot;System.Data.Common.CommandTrees.DbNotExpression&quot;> </xref> brukes på en ny <xref href=&quot;System.Data.Common.CommandTrees.DbIsEmptyExpression&quot;> </xref> med det angitte argumentet."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>source</code>er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>source</code>har ikke en samlingstype resultat."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: Any(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Any(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.Any(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbQuantifierExpression&quot;> </xref> som bestemmer om det angitte predikatet inneholder for alle element i det angitte settet."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> predicate);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir det angitte settet."
    - id: predicate
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "En metode som representerer predikatet skal evalueres for hvert medlem i det angitte settet. Denne metoden må produsere et uttrykk med en Boolean Resultattype som inneholder predikatet logikken."
    return:
      type: System.Data.Common.CommandTrees.DbQuantifierExpression
      description: "En ny DbQuantifierExpression som representerer alle operasjonen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uttrykket som er generert av <code> predicate </code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Uttrykket som er generert av <code> predicate </code> har ikke en boolsk Resultattype."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  id: Any(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Any(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.Any(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbQuantifierExpression&quot;> </xref> som bestemmer om det angitte predikatet inneholder for alle element i det angitte settet."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Et uttrykk binding som angir det angitte settet."
    - id: predicate
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som representerer et predikat skal evalueres for hvert medlem i det angitte settet."
    return:
      type: System.Data.Common.CommandTrees.DbQuantifierExpression
      description: "En ny DbQuantifierExpression som representerer alle operasjonen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>eller <code>predicate</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Uttrykket som er generert av <code> predicate </code> har ikke en boolsk Resultattype."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate@,System.String)
  id: As(System.Data.Common.CommandTrees.DbAggregate@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: As(DbAggregate,String)
  nameWithType: DbExpressionBuilder.As(DbAggregate,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(DbAggregate,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Returnerer de angitte argumentene som en nøkkel/verdi-par-objekt."
  syntax:
    content: public static System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbAggregate> As (this System.Data.Common.CommandTrees.DbAggregate value, string alias);
    parameters:
    - id: value
      type: System.Data.Common.CommandTrees.DbAggregate
      description: "Verdien i nøkkel/verdi-paret."
    - id: alias
      type: System.String
      description: "Nøkkelen i nøkkel/verdi-paret."
    return:
      type: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}
      description: "Et objekt for nøkkel/verdi-par."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression@,System.String)
  id: As(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: As(DbExpression,String)
  nameWithType: DbExpressionBuilder.As(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(DbExpression,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Returnerer de angitte argumentene som en nøkkel/verdi-par-objekt."
  syntax:
    content: public static System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression> As (this System.Data.Common.CommandTrees.DbExpression value, string alias);
    parameters:
    - id: value
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Verdien i nøkkel/verdi-paret."
    - id: alias
      type: System.String
      description: "Nøkkelen i nøkkel/verdi-paret."
    return:
      type: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}
      description: "Et objekt for nøkkel/verdi-par."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression@)
  id: Bind(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Bind(DbExpression)
  nameWithType: DbExpressionBuilder.Bind(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> som bruker et genererte variabelnavn til å binde det angitte uttrykket."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExpressionBinding Bind (this System.Data.Common.CommandTrees.DbExpression input);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uttrykket som skal bindes."
    return:
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "En ny uttrykket binding med det angitte uttrykket og et genererte variabelnavn."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>input</code>har ikke et resultat for samlingen."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression@,System.String)
  id: BindAs(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: BindAs(DbExpression,String)
  nameWithType: DbExpressionBuilder.BindAs(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(DbExpression,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> som bruker det angitte variabelnavnet til å binde angitt uttrykk"
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExpressionBinding BindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uttrykket som skal bindes."
    - id: varName
      type: System.String
      description: "Variabelnavnet som skal brukes for bindingen."
    return:
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "En ny uttrykket binding med det angitte uttrykket og variabelnavn."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>eller <code>varName</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>input</code>har ikke et resultat for samlingen."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)
  id: Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)
  nameWithType: DbExpressionBuilder.Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbCaseExpression&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbCaseExpression Case (System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> whenExpressions, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> thenExpressions, System.Data.Common.CommandTrees.DbExpression elseExpression);
    parameters:
    - id: whenExpressions
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: "En liste over uttrykk som gir betinget for på hvert enkelt tilfelle."
    - id: thenExpressions
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: "En liste over uttrykk som gir resultatet av hvert enkelt tilfelle."
    - id: elseExpression
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som definerer resultatet når noen omstendighet samsvarer."
    return:
      type: System.Data.Common.CommandTrees.DbCaseExpression
      description: "En ny DbCaseExpression med de angitte tilfeller og standard."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>whenExpressions</code>eller <code>thenExpressions</code> er null eller inneholder null, eller <code>elseExpression</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>whenExpressions</code>eller <code>thenExpressions</code> er tom eller <code>whenExpressions</code> inneholder et uttrykk med en ikke-boolsk Resultattype eller noen vanlige resultattypen finnes for alle uttrykk i <code>thenExpressions</code> og <code>elseExpression</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  id: CastTo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CastTo(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.CastTo(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(DbExpression,TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbCastExpression&quot;> </xref> som gjelder en cast-operasjon for et polymorfisk argument."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbCastExpression CastTo (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage toType);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Argumentet som endringen skal brukes."
    - id: toType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Skriv inn metadataene som angir type endres til."
    return:
      type: System.Data.Common.CommandTrees.DbCastExpression
      description: "En ny DbCastExpression med den angitte typen argumentet og -mål."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>Argument</code>eller <code>toType</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den angitte endringen er ikke gyldig."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)
  id: Constant(System.Object)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Constant(Object)
  nameWithType: DbExpressionBuilder.Constant(Object)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbConstantExpression&quot;> </xref> med den angitte konstante verdien."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbConstantExpression Constant (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Den konstante verdien til å representere."
    return:
      type: System.Data.Common.CommandTrees.DbConstantExpression
      description: "Et nytt DbConstantExpression med den angitte verdien."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>er ikke en forekomst av en gyldig konstanttype."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage@,System.Object)
  id: Constant(System.Data.Metadata.Edm.TypeUsage@,System.Object)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Constant(TypeUsage,Object)
  nameWithType: DbExpressionBuilder.Constant(TypeUsage,Object)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(TypeUsage,Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbConstantExpression&quot;> </xref> av den angitte primitive typen med den angitte konstante verdien."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbConstantExpression Constant (this System.Data.Metadata.Edm.TypeUsage constantType, object value);
    parameters:
    - id: constantType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Typen for den konstante verdien."
    - id: value
      type: System.Object
      description: "Den konstante verdien til å representere."
    return:
      type: System.Data.Common.CommandTrees.DbConstantExpression
      description: "Et nytt DbConstantExpression med den angitte verdien og resultattypen for <code> constantType </code>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>eller <code>constantType</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>er ikke en forekomst av en gyldig konstanttype <code>constantType</code> representerer ikke en primitiv type eller <code>value</code> er av en annen primitiv type enn som representeres av <code>constantType</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  id: CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CreateRef(EntitySet,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,IEnumerable<DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbRefExpression&quot;> </xref> som koder en referanse til en bestemt enhet basert på nøkkelverdier."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> keyValues);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySet
      description: "Enhet som er angitt i det aktuelle elementet finnes."
    - id: keyValues
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: "En samling av <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref>s som gir nøkkelverdiene. Disse uttrykkene må samsvare med (i tall, type og rekkefølge) Nøkkelegenskapene i den refererte enhetstypen."
    return:
      type: System.Data.Common.CommandTrees.DbRefExpression
      description: "Angi en ny DbRefExpression som refererer til elementet med de angitte nøkkelverdiene i den angitte enheten."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entitySet</code>er null, eller <code>keyValues</code> er null eller inneholder null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Antall <code> keyValues </code> samsvarer ikke med antall nøkkelmedlemmer deklarert av den <code> entitySet </code>&quot;s elementtypen, eller <code> keyValues </code> inneholder et uttrykk med en Resultattype som ikke er kompatibel med typen for den tilsvarende nøkkelmedlem."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression[])
  id: CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CreateRef(EntitySet,DbExpression[])
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,DbExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbRefExpression&quot;> </xref> som koder en referanse til en bestemt enhet basert på nøkkelverdier."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression[] keyValues);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySet
      description: "Enhet som er angitt i det aktuelle elementet finnes."
    - id: keyValues
      type: System.Data.Common.CommandTrees.DbExpression[]
      description: "En samling av <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref>s som gir nøkkelverdiene. Disse uttrykkene må samsvare med (i tall, type og rekkefølge) Nøkkelegenskapene i den refererte enhetstypen."
    return:
      type: System.Data.Common.CommandTrees.DbRefExpression
      description: "Angi en ny DbRefExpression som refererer til elementet med de angitte nøkkelverdiene i den angitte enheten."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entitySet</code>er null, eller <code>keyValues</code> er null eller inneholder null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Antall <code> keyValues </code> samsvarer ikke med antall nøkkelmedlemmer deklarert av den <code> entitySet </code>&quot;s elementtypen, eller <code> keyValues </code> inneholder et uttrykk med en Resultattype som ikke er kompatibel med typen for den tilsvarende nøkkelmedlem."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  id: CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbRefExpression&quot;> </xref> som koder en referanse til en bestemt enhet for en gitt type som er basert på nøkkelverdier."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> keyValues);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySet
      description: "Enhet som er angitt i det aktuelle elementet finnes."
    - id: entityType
      type: System.Data.Metadata.Edm.EntityType
      description: "Bestemt type den refererte enheten. Dette må være en enhetstype fra samme hierarki som settet enheten elementtype."
    - id: keyValues
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: "En samling av <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref>s som gir nøkkelverdiene. Disse uttrykkene må samsvare med (i tall, type og rekkefølge) Nøkkelegenskapene i den refererte enhetstypen."
    return:
      type: System.Data.Common.CommandTrees.DbRefExpression
      description: "Angi en ny DbRefExpression som refererer til elementet med de angitte nøkkelverdiene i den angitte enheten."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entitySet</code>eller <code>entityType</code> er null, eller <code>keyValues</code> er null eller inneholder null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Antall <code> keyValues </code> samsvarer ikke med antall nøkkelmedlemmer deklarert av den <code> entitySet </code>&quot;s elementtypen, eller <code> keyValues </code> inneholder et uttrykk med en Resultattype som ikke er kompatibel med typen for den tilsvarende nøkkelmedlem."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])
  id: CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CreateRef(EntitySet,EntityType,DbExpression[])
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,EntityType,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,EntityType,DbExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbRefExpression&quot;> </xref> som koder en referanse til en bestemt enhet for en gitt type som er basert på nøkkelverdier."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, System.Data.Common.CommandTrees.DbExpression[] keyValues);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySet
      description: "Enhet som er angitt i det aktuelle elementet finnes."
    - id: entityType
      type: System.Data.Metadata.Edm.EntityType
      description: "Bestemt type den refererte enheten. Dette må være en enhetstype fra samme hierarki som settet enheten elementtype."
    - id: keyValues
      type: System.Data.Common.CommandTrees.DbExpression[]
      description: "En samling av <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref>s som gir nøkkelverdiene. Disse uttrykkene må samsvare med (i tall, type og rekkefølge) Nøkkelegenskapene i den refererte enhetstypen."
    return:
      type: System.Data.Common.CommandTrees.DbRefExpression
      description: "Angi en ny DbRefExpression som refererer til elementet med de angitte nøkkelverdiene i den angitte enheten."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entitySet</code>eller <code>entityType</code> er null, eller <code>keyValues</code> er null eller inneholder null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Antall <code> keyValues </code> samsvarer ikke med antall nøkkelmedlemmer deklarert av den <code> entitySet </code>&quot;s elementtypen, eller <code> keyValues </code> inneholder et uttrykk med en Resultattype som ikke er kompatibel med typen for den tilsvarende nøkkelmedlem."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  id: CrossApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  nameWithType: DbExpressionBuilder.CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbApplyExpression&quot;> </xref> som evaluerer det angitte <code> apply </code> uttrykk én gang for hvert element i en gitt inndata angitt produserer en samling av rader med tilsvarende inndataene og bruke kolonner. Rader som <code> apply </code> evalueres til et tomt sett er ikke inkludert."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>> apply);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> som angir det angitte settet."
    - id: apply
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}
      description: "En metode som angir logikken skal evalueres én gang for hvert medlem i det angitte settet."
    return:
      type: System.Data.Common.CommandTrees.DbApplyExpression
      description: "En ny DbApplyExpression med de angitte inndataene og bruke bindinger og en <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> av CrossApply."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Resultatet av <code> apply </code> inneholder et navn eller et uttrykk som er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Resultatet av <code> apply </code> inneholder et navn eller uttrykk som ikke er gyldig i en binding med uttrykk."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  id: CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CrossApply(DbExpressionBinding,DbExpressionBinding)
  nameWithType: DbExpressionBuilder.CrossApply(DbExpressionBinding,DbExpressionBinding)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(DbExpressionBinding,DbExpressionBinding)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbApplyExpression&quot;> </xref> som evaluerer det angitte <code> apply </code> uttrykk én gang for hvert element i en gitt inndata angitt produserer en samling av rader med tilsvarende inndataene og bruke kolonner. Rader som <code> apply </code> evalueres til et tomt sett er ikke inkludert."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> som angir det angitte settet."
    - id: apply
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> som angir logic skal evalueres én gang for hvert medlem i det angitte settet."
    return:
      type: System.Data.Common.CommandTrees.DbApplyExpression
      description: "En ny DbApplyExpression med de angitte inndataene og bruke bindinger og en <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> av CrossApply."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>eller <code>apply</code> er null."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})
  id: CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CrossJoin(IEnumerable<DbExpressionBinding>)
  nameWithType: DbExpressionBuilder.CrossJoin(IEnumerable<DbExpressionBinding>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(IEnumerable<DbExpressionBinding>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbCrossJoinExpression&quot;> </xref> som uten forbehold slår angitt i listen over inndatauttrykk bindinger."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbCrossJoinExpression CrossJoin (System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpressionBinding> inputs);
    parameters:
    - id: inputs
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding}
      description: "En liste over uttrykksbindinger som angir inndata angir."
    return:
      type: System.Data.Common.CommandTrees.DbCrossJoinExpression
      description: "En ny DbCrossJoinExpression med en <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> i sammenføyningen som representerer ubetinget sammenføyning av de angitte settene."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>inputs</code>er null eller inneholder null-element."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>inputs</code>inneholder færre enn 2 uttrykksbindinger."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression@)
  id: Deref(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Deref(DbExpression)
  nameWithType: DbExpressionBuilder.Deref(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbDerefExpression&quot;> </xref> som henter en bestemt enhet som er angitt et."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbDerefExpression Deref (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> som gir referansen. Dette uttrykket må ha en referanse Type."
    return:
      type: System.Data.Common.CommandTrees.DbDerefExpression
      description: "En ny DbDerefExpression som henter den angitte enheten."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>har ikke en referansetype resultat."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression@)
  id: Distinct(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Distinct(DbExpression)
  nameWithType: DbExpressionBuilder.Distinct(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbDistinctExpression&quot;> </xref> som fjerner duplikater fra det angitte argumentet."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbDistinctExpression Distinct (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som definerer settet som utfører operasjonen distinct."
    return:
      type: System.Data.Common.CommandTrees.DbDistinctExpression
      description: "En ny DbDistinctExpression som representerer distinkte operasjonen gjelder argumentet angitt sett."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>har ikke en samlingstype resultat."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Divide(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Divide(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Divide(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbArithmeticExpression&quot;> </xref> som deler det venstre argumentet av høyre argument."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Divide (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir det venstre argumentet."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir høyre argument."
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: "En ny DbArithmeticExpression som representerer deling-operasjonen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>eller <code>right</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det finnes ingen felles numerisk resultattypen mellom <code> left </code> eller <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression@)
  id: Element(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Element(DbExpression)
  nameWithType: DbExpressionBuilder.Element(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbElementExpression&quot;> </xref> som konverterer et sett til en singleton."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbElementExpression Element (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir det angitte settet."
    return:
      type: System.Data.Common.CommandTrees.DbElementExpression
      description: "DbElementExpression som representerer konvertering av set-argumentet til en singleton."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>har ikke en samlingstype resultat."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Equal(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Equal(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Equal(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbComparisonExpression&quot;> </xref> som sammenligner venstre og høyre argument for likhet."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbComparisonExpression Equal (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir det venstre argumentet."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir høyre argument."
    return:
      type: System.Data.Common.CommandTrees.DbComparisonExpression
      description: "En ny DbComparisonExpression som representerer likhetssammenligning."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>eller <code>right</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det finnes ingen felles likhet sammenlignbare resultattypen mellom <code> left </code> og <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Except(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Except(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Except(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbExceptExpression&quot;> </xref> som beregner subtraksjon for riktige-argumentet i venstre Sett argumentet."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExceptExpression Except (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som definerer venstre Sett argumentet."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som definerer høyre Sett argumentet."
    return:
      type: System.Data.Common.CommandTrees.DbExceptExpression
      description: "Et nytt DbExceptExpression som representerer differansen mellom venstre argument fra høyre argument."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>eller <code>right</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det finnes ingen felles resultatet samlingstype mellom <code> left </code> og <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression@)
  id: Exists(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Exists(DbExpression)
  nameWithType: DbExpressionBuilder.Exists(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> som bestemmer om det angitte Sett-argumentet er ikke tom."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExpression Exists (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir det angitte settet."
    return:
      type: System.Data.Common.CommandTrees.DbExpression
      description: "En ny <xref href=&quot;System.Data.Common.CommandTrees.DbNotExpression&quot;> </xref> brukes på en ny <xref href=&quot;System.Data.Common.CommandTrees.DbIsEmptyExpression&quot;> </xref> med det angitte argumentet."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>har ikke en samlingstype resultat."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False
  id: "False"
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: "False"
  nameWithType: DbExpressionBuilder.False
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Henter en <xref href=&quot;System.Data.Common.CommandTrees.DbConstantExpression&quot;> </xref> med den boolske verdien <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbConstantExpression False { get; }
    return:
      type: System.Data.Common.CommandTrees.DbConstantExpression
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbConstantExpression&quot;> </xref> med den boolske verdien <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  id: Filter(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Filter(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.Filter(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbFilterExpression&quot;> </xref> som filtrerer elementene i de angitte inndataene angis ved å bruke det angitte predikatet."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFilterExpression Filter (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Et uttrykk binding som angir det angitte settet."
    - id: predicate
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som representerer et predikat skal evalueres for hvert medlem i det angitte settet."
    return:
      type: System.Data.Common.CommandTrees.DbFilterExpression
      description: "En ny DbFilterExpression som produserer filtrerte settet."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>eller <code>predicate</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>predicate</code>har ikke en boolsk Resultattype."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: FullOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbJoinExpression&quot;> </xref> som slår angitt av uttrykkene venstre og høyre på det angitte join-vilkåret, ved hjelp av FullOuterJoin som den <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> joinCondition);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> som angir venstre setter argumentet."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> som angir høyre setter argumentet."
    - id: joinCondition
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "En metode som representerer betingelsen som skal delta. Denne metoden må produsere et uttrykk med en Boolean Resultattype som gir logikken join-igjen."
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: "DbJoinExpression nye med en <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> for FullOuterJoin, som representerer hel ytre kobling-operasjonen som brukes til venstre og høyre inndata settene under den angitte join-betingelsen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uttrykket som er generert av <code> joinCondition </code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Uttrykket som er generert av <code> joinCondition </code> har ikke en boolsk Resultattype."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  id: FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbJoinExpression&quot;> </xref> som slår angitt av de venstre og høyre uttrykksbindinger, på det angitte join-vilkåret, ved hjelp av FullOuterJoin som den <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> som angir venstre setter argumentet."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> som angir høyre setter argumentet."
    - id: joinCondition
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir betingelsen som skal delta."
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: "DbJoinExpression nye med en <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> for FullOuterJoin, som representerer hel ytre kobling-operasjonen som brukes til venstre og høyre inndata settene under den angitte join-betingelsen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>,  <code>right</code> or <code>joinCondition</code> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Uttrykket som er generert av <code> joinCondition </code> har ikke en boolsk Resultattype."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression@)
  id: GetEntityRef(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GetEntityRef(DbExpression)
  nameWithType: DbExpressionBuilder.GetEntityRef(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbEntityRefExpression&quot;> </xref> som henter ref angitt-enheten i strukturell skjemaet."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbEntityRefExpression GetEntityRef (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uttrykket som inneholder enheten. Dette uttrykket må ha en enhetstype resultat."
    return:
      type: System.Data.Common.CommandTrees.DbEntityRefExpression
      description: "En ny DbEntityRefExpression som henter en referanse til den angitte enheten."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>har ikke en enhetstype resultat."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression@)
  id: GetRefKey(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GetRefKey(DbExpression)
  nameWithType: DbExpressionBuilder.GetRefKey(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbRefKeyExpression&quot;> </xref> som henter nøkkelverdiene angitt referanse i strukturell skjemaet."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefKeyExpression GetRefKey (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uttrykket som referansen. Dette uttrykket må ha en referanse Type med en elementtype for enheten."
    return:
      type: System.Data.Common.CommandTrees.DbRefKeyExpression
      description: "En ny DbRefKeyExpression som henter nøkkelverdiene til den angitte referansen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>har ikke en referansetype resultat."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: GreaterThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GreaterThan(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.GreaterThan(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbComparisonExpression&quot;> </xref> som bestemmer om det venstre argumentet er større enn høyre argument."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir det venstre argumentet."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir høyre argument."
    return:
      type: System.Data.Common.CommandTrees.DbComparisonExpression
      description: "En ny DbComparisonExpression som representerer større-enn sammenligningen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>eller <code>right</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det finnes ingen felles rekkefølge resultattypen mellom <code> left </code> og <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GreaterThanOrEqual(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.GreaterThanOrEqual(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbComparisonExpression&quot;> </xref> som bestemmer om det venstre argumentet er større enn eller lik høyre argument."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir det venstre argumentet."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir høyre argument."
    return:
      type: System.Data.Common.CommandTrees.DbComparisonExpression
      description: "En ny DbComparisonExpression som representerer større enn-eller-lik-til-sammenligningen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>eller <code>right</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det finnes ingen felles rekkefølge resultattypen mellom <code> left </code> og <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression@)
  id: GroupBind(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GroupBind(DbExpression)
  nameWithType: DbExpressionBuilder.GroupBind(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny gruppe uttrykket binding som bruker genererte variabelen og gruppevariabelnavn til å binde det angitte uttrykket."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBind (this System.Data.Common.CommandTrees.DbExpression input);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uttrykket som skal bindes."
    return:
      type: System.Data.Common.CommandTrees.DbGroupExpressionBinding
      description: "En ny gruppe uttrykket-binding med det angitte uttrykket og en generert variabelnavnet og gruppevariabelnavnet."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>input</code>har ikke en samlingstype resultat."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression@,System.String,System.String)
  id: GroupBindAs(System.Data.Common.CommandTrees.DbExpression@,System.String,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GroupBindAs(DbExpression,String,String)
  nameWithType: DbExpressionBuilder.GroupBindAs(DbExpression,String,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(DbExpression,String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbGroupExpressionBinding&quot;> </xref> som bruker det angitte variabelnavnet og gruppevariabelnavn til å binde det angitte uttrykket."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName, string groupVarName);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uttrykket som skal bindes."
    - id: varName
      type: System.String
      description: "Variabelnavnet som skal brukes for bindingen."
    - id: groupVarName
      type: System.String
      description: "Variabelnavnet som skal brukes til å henvise til gruppen når den nye gruppe uttrykket bindingen brukes i en group by-uttrykk."
    return:
      type: System.Data.Common.CommandTrees.DbGroupExpressionBinding
      description: "En ny gruppe uttrykket-binding med det angitte uttrykket, variabelnavnet og gruppevariabelnavnet."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>,  <code>varName</code> or <code>groupVarName</code> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>input</code>har ikke en samlingstype resultat."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding@,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})
  id: GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding@,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)
  nameWithType: DbExpressionBuilder.GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbGroupByExpression&quot;> </xref> som grupperer elementer med inndata som er angitt i henhold til de angitte gruppenøklene og gjelder de angitte aggregater."
  remarks: "DbGroupByExpression kan listen over nøkler eller listen over mengder er tom, men ikke begge deler."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbGroupByExpression GroupBy (this System.Data.Common.CommandTrees.DbGroupExpressionBinding input, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>> keys, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbAggregate>> aggregates);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbGroupExpressionBinding
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbGroupExpressionBinding&quot;> </xref> som angir det angitte settet."
    - id: keys
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}
      description: "En liste over strengeuttrykk parene som definerer grupperingskolonner."
    - id: aggregates
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}}
      description: "En liste over uttrykk som angir aggregater skal brukes."
    return:
      type: System.Data.Common.CommandTrees.DbGroupByExpression
      description: "Et nytt DbGroupByExpression med angitt inndata sett, gruppering nøkler og aggregater."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>, <code>keys</code> eller <code>aggregates</code> er null, <code>keys</code> inneholder en null-kolonnen nøkkel eller et uttrykk, eller <code>aggregates</code> inneholder null aggregate kolonnenavn eller mengden."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Begge <code> keys </code> og <code> aggregates </code> er tomt eller en ugyldig eller ble angitt dupliserte kolonnenavn."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: InnerJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbJoinExpression&quot;> </xref> som slår angitt av uttrykkene venstre og høyre på det angitte join-vilkåret, ved hjelp av InnerJoin som den <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> joinCondition);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> som angir venstre setter argumentet."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> som angir høyre setter argumentet."
    - id: joinCondition
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "En metode som representerer betingelsen som skal delta. Denne metoden må produsere et uttrykk med en Boolean Resultattype som gir logikken join-igjen."
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: "DbJoinExpression nye med en <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> av InnerJoin, som representerer indre kobling-operasjonen som brukes til venstre og høyre inndata settene under den angitte join-betingelsen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uttrykket som er generert av <code> joinCondition </code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Uttrykket som er generert av <code> joinCondition </code> har ikke en boolsk Resultattype."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  id: InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbJoinExpression&quot;> </xref> som slår angitt av de venstre og høyre uttrykksbindinger, på det angitte join-vilkåret, ved hjelp av InnerJoin som den <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> som angir venstre setter argumentet."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> som angir høyre setter argumentet."
    - id: joinCondition
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir betingelsen som skal delta."
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: "DbJoinExpression nye med en <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> av InnerJoin, som representerer indre kobling-operasjonen som brukes til venstre og høyre inndata settene under den angitte join-betingelsen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>,  <code>right</code> or <code>joinCondition</code> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>joinCondition</code>har ikke en boolsk Resultattype."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Intersect(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Intersect(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Intersect(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbIntersectExpression&quot;> </xref> som beregner skjæringspunktet for venstre og høyre angir argumentene."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbIntersectExpression Intersect (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som definerer venstre Sett argumentet."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som definerer høyre Sett argumentet."
    return:
      type: System.Data.Common.CommandTrees.DbIntersectExpression
      description: "En ny DbIntersectExpression som representerer skjæringspunktet for venstre og høyre argument."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>eller <code>right</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det finnes ingen felles resultatet samlingstype mellom <code> left </code> eller <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  id: Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Invoke(DbLambda,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.Invoke(DbLambda,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(DbLambda,IEnumerable<DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbLambdaExpression&quot;> </xref> som representerer av den angitte Lambda-funksjonen til de angitte argumentene."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> arguments);
    parameters:
    - id: lambda
      type: System.Data.Common.CommandTrees.DbLambda
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbLambda&quot;> </xref> forekomsten som representerer Lambda-funksjon for å bruke."
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: "En liste over uttrykk som gir argumentene."
    return:
      type: System.Data.Common.CommandTrees.DbLambdaExpression
      description: "En ny DbLambdaExpression som representerer Lambda funksjonen programmet."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>lambda</code>eller <code>arguments</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Antall <code> arguments </code> samsvarer ikke med antall variabler som er deklarert med <code> lambda </code>, eller <code> arguments </code> inneholder et uttrykk som har en Resultattype som ikke er lik eller forfremmes til den tilsvarende typen."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Data.Common.CommandTrees.DbExpression[])
  id: Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Invoke(DbLambda,DbExpression[])
  nameWithType: DbExpressionBuilder.Invoke(DbLambda,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(DbLambda,DbExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbLambdaExpression&quot;> </xref> som representerer av den angitte Lambda-funksjonen til de angitte argumentene."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, System.Data.Common.CommandTrees.DbExpression[] arguments);
    parameters:
    - id: lambda
      type: System.Data.Common.CommandTrees.DbLambda
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbLambda&quot;> </xref> forekomsten som representerer Lambda-funksjon for å bruke."
    - id: arguments
      type: System.Data.Common.CommandTrees.DbExpression[]
      description: "Uttrykk som gir argumentene."
    return:
      type: System.Data.Common.CommandTrees.DbLambdaExpression
      description: "En ny DbLambdaExpression som representerer Lambda funksjonen programmet."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>lambda</code>eller <code>arguments</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Antall <code> arguments </code> samsvarer ikke med antall variabler som er deklarert med <code> lambda </code>, eller <code> arguments </code> inneholder et uttrykk som har en Resultattype som ikke er lik eller forfremmes til den tilsvarende typen."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  id: Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Invoke(EdmFunction,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.Invoke(EdmFunction,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(EdmFunction,IEnumerable<DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> som representerer aktivering av den angitte funksjonen med de angitte argumentene."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> arguments);
    parameters:
    - id: function
      type: System.Data.Metadata.Edm.EdmFunction
      description: "Metadata for funksjonen for å aktivere."
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: "En liste over uttrykk som gir argumenter for funksjonen."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "En ny DbFunctionExpression som representerer funksjonsaktivering."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>function</code>er null, eller <code>arguments</code> er null eller inneholder null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Antall <code> arguments </code> er ikke likt antallet parametere som er deklarert med <code> function </code>, eller <code> arguments </code> inneholder et uttrykk som har en Resultattype som ikke er lik eller forfremmes til datatypen for parameteren tilhørende funksjonen."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression[])
  id: Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Invoke(EdmFunction,DbExpression[])
  nameWithType: DbExpressionBuilder.Invoke(EdmFunction,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(EdmFunction,DbExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> som representerer aktivering av den angitte funksjonen med de angitte argumentene."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression[] arguments);
    parameters:
    - id: function
      type: System.Data.Metadata.Edm.EdmFunction
      description: "Metadata for funksjonen for å aktivere."
    - id: arguments
      type: System.Data.Common.CommandTrees.DbExpression[]
      description: "Uttrykk som gir argumenter for funksjonen."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "En ny DbFunctionExpression som representerer funksjonsaktivering."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>function</code>er null, eller <code>arguments</code> er null eller inneholder null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Antall <code> arguments </code> er ikke likt antallet parametere som er deklarert med <code> function </code>, eller <code> arguments </code> inneholder et uttrykk som har en Resultattype som ikke er lik eller forfremmes til datatypen for parameteren tilhørende funksjonen."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression@)
  id: IsEmpty(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: IsEmpty(DbExpression)
  nameWithType: DbExpressionBuilder.IsEmpty(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbIsEmptyExpression&quot;> </xref> som bestemmer om det angitte Sett-argumentet er et tomt sett."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbIsEmptyExpression IsEmpty (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir det angitte settet."
    return:
      type: System.Data.Common.CommandTrees.DbIsEmptyExpression
      description: "En ny DbIsEmptyExpression med det angitte argumentet."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>har ikke en samlingstype resultat."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression@)
  id: IsNull(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: IsNull(DbExpression)
  nameWithType: DbExpressionBuilder.IsNull(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbIsNullExpression&quot;> </xref> som bestemmer om det angitte argumentet er null."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbIsNullExpression IsNull (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir argumentet."
    return:
      type: System.Data.Common.CommandTrees.DbIsNullExpression
      description: "En ny DbIsNullExpression med det angitte argumentet."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>har en samlingstype resultat."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  id: IsOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: IsOf(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.IsOf(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(DbExpression,TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbIsOfExpression&quot;> </xref> som bestemmer om det angitte argumentet er av den angitte typen eller en undertype."
  remarks: "DbIsOfExpression krever at `argument` har en polymorf Resultattype, og at `type` er fra samme typehierarkiet som den resultattypen av typen."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbIsOfExpression IsOf (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir forekomsten."
    - id: type
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Skriv inn metadataene som angir hvilken type resultattypen for den forekomsten skal sammenlignes."
    return:
      type: System.Data.Common.CommandTrees.DbIsOfExpression
      description: "En ny DbIsOfExpression med den angitte forekomsten og type og DbExpressionKind IsOf."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>eller <code>type</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>type</code>er ikke i det samme typen hierarkiet som resultattypen for <code>argument</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  id: IsOfOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: IsOfOnly(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.IsOfOnly(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(DbExpression,TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbIsOfExpression&quot;> </xref> uttrykk som bestemmer om det angitte argumentet er av den angitte typen, og bare denne typen (ikke en undertype)."
  remarks: "DbIsOfExpression krever at `argument` har en polymorf Resultattype, og at `type` er fra samme typehierarkiet som den resultattypen av typen."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbIsOfExpression IsOfOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir forekomsten."
    - id: type
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Skriv inn metadataene som angir hvilken type resultattypen for den forekomsten skal sammenlignes."
    return:
      type: System.Data.Common.CommandTrees.DbIsOfExpression
      description: "En ny DbIsOfExpression med den angitte forekomsten og type og DbExpressionKind IsOfOnly."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>eller <code>type</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>type</code>er ikke i det samme typen hierarkiet som resultattypen for <code>argument</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: Join(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbJoinExpression&quot;> </xref> som slår angitt av uttrykkene ytre og indre på en likhet betingelse mellom de angitte ytre og indre nøklene, ved hjelp av InnerJoin som den <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression Join (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> outerKey, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> innerKey);
    parameters:
    - id: outer
      type: System.Data.Common.CommandTrees.DbExpression
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> som angir argumentet ytre sett."
    - id: inner
      type: System.Data.Common.CommandTrees.DbExpression
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> som angir indre setter argumentet."
    - id: outerKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "En metode som angir hvordan ytre nøkkelverdien må være avledet fra et element av det ytre settet."
    - id: innerKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "En metode som angir hvordan indre nøkkelverdien må være avledet fra et element av det interne settet."
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: "DbJoinExpression nye med en <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> av InnerJoin, som representerer indre kobling-operasjonen som brukes til venstre og høyre inndata settene under en join-betingelse som sammenligner ytre og indre nøkkelverdiene likhet."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uttrykket som er generert av <code> outerKey </code> eller <code> innerKey </code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Uttrykkene produsert av <code> outerKey </code> og <code> innerKey </code> kan ikke sammenlignes likhet."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  id: Join``1(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  nameWithType: DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbProjectExpression Join<TSelector> (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> outerKey, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> innerKey, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector> selector);
    parameters:
    - id: outer
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Som skal legges til."
    - id: inner
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Som skal legges til."
    - id: outerKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Som skal legges til."
    - id: innerKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Som skal legges til."
    - id: selector
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector}
      description: "Som skal legges til."
    return:
      type: System.Data.Common.CommandTrees.DbProjectExpression
      description: "Som skal legges til."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join<TSelector>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})
  id: Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)
  nameWithType: DbExpressionBuilder.Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en <xref href=&quot;System.Data.Common.CommandTrees.DbLambda&quot;> </xref> med den angitte linjebundet Lambda funksjonen implementering og formelle parametere."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbVariableReferenceExpression> variables);
    parameters:
    - id: body
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som definerer logikken for Lambda-funksjonen."
    - id: variables
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression}
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbVariableReferenceExpression&quot;> </xref> samling som representerer de formelle parameterne med Lambda-funksjonen. Disse variablene er ugyldig for bruk i den `body` uttrykk."
    return:
      type: System.Data.Common.CommandTrees.DbLambda
      description: "En ny DbLambda som beskriver en innebygd Lambda-funksjonen med angitt brødtekst og formelle parametere."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>variables</code>er null eller inneholder null, eller <code>body</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>variables</code>inneholder mer enn ett element med samme variabelnavn."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])
  id: Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Lambda(DbExpression,DbVariableReferenceExpression[])
  nameWithType: DbExpressionBuilder.Lambda(DbExpression,DbVariableReferenceExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(DbExpression,DbVariableReferenceExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en <xref href=&quot;System.Data.Common.CommandTrees.DbLambda&quot;> </xref> med den angitte linjebundet Lambda funksjonen implementering og formelle parametere."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables);
    parameters:
    - id: body
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som definerer logikken for Lambda-funksjonen."
    - id: variables
      type: System.Data.Common.CommandTrees.DbVariableReferenceExpression[]
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbVariableReferenceExpression&quot;> </xref> samling som representerer de formelle parameterne med Lambda-funksjonen. Disse variablene er ugyldig for bruk i den `body` uttrykk."
    return:
      type: System.Data.Common.CommandTrees.DbLambda
      description: "En ny DbLambda som beskriver en innebygd Lambda-funksjonen med angitt brødtekst og formelle parametere."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>variables</code>er null eller inneholder null, eller <code>body</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>variables</code>inneholder mer enn ett element med samme variabelnavn."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbJoinExpression&quot;> </xref> som slår angitt av uttrykkene venstre og høyre på det angitte join-vilkåret, ved hjelp av LeftOuterJoin som den <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> joinCondition);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> som angir venstre setter argumentet."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> som angir høyre setter argumentet."
    - id: joinCondition
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "En metode som representerer betingelsen som skal delta. Denne metoden må produsere et uttrykk med en Boolean Resultattype som gir logikken join-igjen."
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: "DbJoinExpression nye med en <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> av LeftOuterJoin, som representerer venstre ytre kobling-operasjonen som brukes til venstre og høyre inndata settene under den angitte join-betingelsen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uttrykket som er generert av <code> joinCondition </code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Uttrykket som er generert av <code> joinCondition </code> har ikke en boolsk Resultattype."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  id: LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbJoinExpression&quot;> </xref> som slår angitt av de venstre og høyre uttrykksbindinger, på det angitte join-vilkåret, ved hjelp av LeftOuterJoin som den <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> som angir venstre setter argumentet."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> som angir høyre setter argumentet."
    - id: joinCondition
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir betingelsen som skal delta."
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: "DbJoinExpression nye med en <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> av LeftOuterJoin, som representerer venstre ytre kobling-operasjonen som brukes til venstre og høyre inndata settene under den angitte join-betingelsen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>,  <code>right</code> or <code>joinCondition</code> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>joinCondition</code>har ikke en boolsk Resultattype."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: LessThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: LessThan(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.LessThan(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbComparisonExpression&quot;> </xref> som bestemmer om det venstre argumentet er mindre enn høyre argument."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbComparisonExpression LessThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir det venstre argumentet."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir høyre argument."
    return:
      type: System.Data.Common.CommandTrees.DbComparisonExpression
      description: "En ny DbComparisonExpression som representerer mindre-enn sammenligningen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>eller <code>right</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det finnes ingen felles rekkefølge resultattypen mellom <code> left </code> og <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: LessThanOrEqual(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.LessThanOrEqual(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbComparisonExpression&quot;> </xref> som bestemmer om det venstre argumentet er mindre enn eller lik høyre argument."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbComparisonExpression LessThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir det venstre argumentet."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir høyre argument."
    return:
      type: System.Data.Common.CommandTrees.DbComparisonExpression
      description: "En ny DbComparisonExpression som representerer mindre enn-eller-lik-til-sammenligningen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>eller <code>right</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det finnes ingen felles Resultattype som er begge likhet - og rekkefølge mellom <code> left </code> og <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Like(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Like(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbLikeExpression&quot;> </xref> som sammenligner den angitte inndataene strengen til det angitte mønsteret."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir inndata strengen."
    - id: pattern
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir Mønsterstrengen som."
    return:
      type: System.Data.Common.CommandTrees.DbLikeExpression
      description: "En ny DbLikeExpression med de angitte inndataene, mønsteret og null escape."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>Argument</code>eller <code>pattern</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Argument</code>eller <code>pattern</code> har ikke en strengtype som resultat."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  id: Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Like(DbExpression,DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Like(DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(DbExpression,DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbLikeExpression&quot;> </xref> som sammenligner den angitte inndataene strengen til det angitte mønsteret ved hjelp av den valgfrie escape."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern, System.Data.Common.CommandTrees.DbExpression escape);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir inndata strengen."
    - id: pattern
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir Mønsterstrengen som."
    - id: escape
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et valgfritt uttrykk som angir escape-strengen."
    return:
      type: System.Data.Common.CommandTrees.DbLikeExpression
      description: "En ny DbLikeExpression med de angitte inndataene, mønsteret og escape."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>,   <code>pattern</code> or <code>escape</code> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>, <code>pattern</code> eller <code>escape</code> har ikke en strengtype som resultat."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Limit(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Limit(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Limit(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbLimitExpression&quot;> </xref> som begrenser antall elementer i samlingen argumentet til det angitte antallet grenseverdien. Bundet resultatene er ikke inkludert i utdataene."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLimitExpression Limit (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir den angitte samlingen."
    - id: count
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir grenseverdien."
    return:
      type: System.Data.Common.CommandTrees.DbLimitExpression
      description: "En ny DbLimitExpression med det angitte argumentet og count grenseverdier som ikke inkluderer knyttet resultater."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>eller <code>count</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>har ikke en samlingstype resultatet eller <code>count</code> har ikke en Resultattype som er lik eller forfremmes til en 64-biters heltall."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Minus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Minus(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Minus(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbArithmeticExpression&quot;> </xref> som trekker høyre argument fra venstre argument."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Minus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir det venstre argumentet."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir høyre argument."
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: "En ny DbArithmeticExpression som representerer subtraksjon-operasjonen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>eller <code>right</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det finnes ingen felles numerisk resultattypen mellom <code> left </code> og <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Modulo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Modulo(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Modulo(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbArithmeticExpression&quot;> </xref> som beregner restverdien etter det venstre argumentet dividert høyre argument."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Modulo (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir det venstre argumentet."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir høyre argument."
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: "En ny DbArithmeticExpression som representerer den modulus operasjonen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>eller <code>right</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det finnes ingen felles numerisk resultattypen mellom <code> left </code> og <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Multiply(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Multiply(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Multiply(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbArithmeticExpression&quot;> </xref> som multipliserer venstre argument av høyre argument."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Multiply (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir det venstre argumentet."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir høyre argument."
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: "En ny DbArithmeticExpression som representerer Multiplikasjonsoperasjonen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>eller <code>right</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det finnes ingen felles numerisk resultattypen mellom <code> left </code> og <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)
  id: Navigate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)
  nameWithType: DbExpressionBuilder.Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbRelationshipNavigationExpression&quot;> </xref> som representerer navigering i en sammensetning eller tilknytning relasjon."
  remarks: "<xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression>krever at navigasjon alltid oppstå på grunn av en referanse, og kan derfor `navigateFrom` må alltid ha en referansetype resultat.</xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression>"
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Common.CommandTrees.DbExpression navigateFrom, System.Data.Metadata.Edm.RelationshipEndMember fromEnd, System.Data.Metadata.Edm.RelationshipEndMember toEnd);
    parameters:
    - id: navigateFrom
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir forekomsten som navigasjon skal utføres."
    - id: fromEnd
      type: System.Data.Metadata.Edm.RelationshipEndMember
      description: "Metadata for egenskapen som representerer slutten av relasjon som navigasjon skal utføres."
    - id: toEnd
      type: System.Data.Metadata.Edm.RelationshipEndMember
      description: "Metadata for egenskapen som representerer slutten av relasjon som navigasjon skal utføres."
    return:
      type: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression
      description: "En ny DbRelationshipNavigationExpression som representerer navigering i den angitte fra og relasjon endene av den angitte relasjonstypen fra den angitte navigeringen forekomsten."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fromEnd</code>,  <code>toEnd</code> or <code>navigateFrom</code> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>fromEnd</code>og <code>toEnd</code> er ikke deklarert av samme relasjonstype eller <code>navigateFrom</code> har en Resultattype som ikke er kompatibel med egenskapstype <code>fromEnd</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType@,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)
  id: Navigate(System.Data.Metadata.Edm.RelationshipType@,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Navigate(RelationshipType,String,String,DbExpression)
  nameWithType: DbExpressionBuilder.Navigate(RelationshipType,String,String,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(RelationshipType,String,String,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbRelationshipNavigationExpression&quot;> </xref> som representerer navigering i en sammensetning eller tilknytning relasjon."
  remarks: "<xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression>krever at navigasjon alltid oppstå på grunn av en referanse, og kan derfor `navigateFrom` må alltid ha en referansetype resultat.</xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression>"
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Metadata.Edm.RelationshipType type, string fromEndName, string toEndName, System.Data.Common.CommandTrees.DbExpression navigateFrom);
    parameters:
    - id: type
      type: System.Data.Metadata.Edm.RelationshipType
      description: "Metadata for relasjonstype som representerer relasjonen."
    - id: fromEndName
      type: System.String
      description: "Navnet på egenskapen for relasjonstype som representerer slutten av relasjon som navigasjon skal utføres."
    - id: toEndName
      type: System.String
      description: "Navnet på egenskapen for relasjonstypen som representerer slutten av relasjon som skal skje for navigasjon."
    - id: navigateFrom
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk i angir forekomsten fra naviagtion som skal utføres."
    return:
      type: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression
      description: "En ny DbRelationshipNavigationExpression som representerer navigering i den angitte fra og relasjon endene av den angitte relasjonstypen fra den angitte navigeringen forekomsten."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>,  <code>fromEndName</code>,  <code>toEndName</code> or <code>navigateFrom</code> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>type</code>er ikke knyttet til dette kommandotreet metadata arbeidsområdet eller <code>navigateFrom</code> er knyttet til et annet kommandotre, eller <code>type</code> deklarerer ikke en relasjon end-egenskapen med navnet <code>toEndName</code> eller <code>fromEndName</code>, eller <code>navigateFrom</code> har en Resultattype som ikke er kompatibel med egenskapstypen for relasjonen end-egenskapen med navnet <code>fromEndName</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression@)
  id: Negate(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Negate(DbExpression)
  nameWithType: DbExpressionBuilder.Negate(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbArithmeticExpression&quot;> </xref> som opphever verdien til argumentet."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Negate (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir argumentet."
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: "En ny DbArithmeticExpression som representerer negering-operasjonen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det finnes ingen numerisk resultattypen for <code> argument </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  id: New(System.Data.Metadata.Edm.TypeUsage@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: New(TypeUsage,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.New(TypeUsage,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(TypeUsage,IEnumerable<DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbNewInstanceExpression&quot;> </xref>. Hvis Typeargumentet er en samlingstype, angi argumentene av elementene i samlingen. Argumentene, ellers brukes som egenskapen eller kolonnen verdiene i den nye forekomsten."
  remarks: "Hvis `instanceType` er en en samling Skriv deretter alle uttrykk i `arguments` må ha en Resultattype som er forfremmes til elementtypen for den `instanceType`. Hvis `instanceType` er en radtype `arguments` må inneholde så mange uttrykk som det er kolonner i radtypen og resultattypen for hvert uttrykk må være lik eller forfremmes til typen i den tilsvarende kolonnen. En radtype som ikke deklarerer noen kolonner er ugyldig. Hvis `instanceType` er en enhetstype `arguments` må inneholde mange uttrykk siden det finnes egenskaper som er definert av typen, og resultattypen for hvert uttrykk må være lik eller forfremmes til typen i den tilsvarende egenskapen."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> arguments);
    parameters:
    - id: instanceType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Typen for den nye forekomsten."
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: "Uttrykk som angir du verdier i de nye forekomstene tolket i henhold til den forekomsten type."
    return:
      type: System.Data.Common.CommandTrees.DbNewInstanceExpression
      description: "En ny DbNewInstanceExpression med angitt type og argumenter."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instanceType</code>eller <code>arguments</code> er null, eller <code>arguments</code> inneholder null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>arguments</code>er tomt eller resultattypene for den inkluderte uttrykk samsvarer ikke med kravene for <code>instanceType</code> (som beskrevet i avsnittet kommentarer)."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Data.Common.CommandTrees.DbExpression[])
  id: New(System.Data.Metadata.Edm.TypeUsage@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: New(TypeUsage,DbExpression[])
  nameWithType: DbExpressionBuilder.New(TypeUsage,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(TypeUsage,DbExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbNewInstanceExpression&quot;> </xref>. Hvis Typeargumentet er en samlingstype, angi argumentene av elementene i samlingen. Argumentene, ellers brukes som egenskapen eller kolonnen verdiene i den nye forekomsten."
  remarks: "Hvis `instanceType` er en en samling Skriv deretter alle uttrykk i `arguments` må ha en Resultattype som er forfremmes til elementtypen for den `instanceType`. Hvis `instanceType` er en radtype `arguments` må inneholde så mange uttrykk som det er kolonner i radtypen og resultattypen for hvert uttrykk må være lik eller forfremmes til typen i den tilsvarende kolonnen. En radtype som ikke deklarerer noen kolonner er ugyldig. Hvis `instanceType` er en enhetstype `arguments` må inneholde mange uttrykk siden det finnes egenskaper som er definert av typen, og resultattypen for hvert uttrykk må være lik eller forfremmes til typen i den tilsvarende egenskapen."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, System.Data.Common.CommandTrees.DbExpression[] arguments);
    parameters:
    - id: instanceType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Typen for den nye forekomsten."
    - id: arguments
      type: System.Data.Common.CommandTrees.DbExpression[]
      description: "Uttrykk som angir du verdier i de nye forekomstene tolket i henhold til den forekomsten type."
    return:
      type: System.Data.Common.CommandTrees.DbNewInstanceExpression
      description: "En ny DbNewInstanceExpression med angitt type og argumenter."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instanceType</code>eller <code>arguments</code> er null, eller <code>arguments</code> inneholder null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>arguments</code>er tomt eller resultattypene for den inkluderte uttrykk samsvarer ikke med kravene for <code>instanceType</code> (som beskrevet i avsnittet kommentarer)."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  id: NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: NewCollection(IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.NewCollection(IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(IEnumerable<DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbNewInstanceExpression&quot;> </xref> som bygger en samling som inneholder de angitte elementene. Hva slags samlingen er basert på vanlige typer elementene. Hvis ingen felles elementtype finnes er det et unntaket."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> elements);
    parameters:
    - id: elements
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: "En liste over uttrykk som gir av elementene i samlingen."
    return:
      type: System.Data.Common.CommandTrees.DbNewInstanceExpression
      description: "En ny DbNewInstanceExpression med typen for den angitte samlingen og argumenter."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>elements</code>er null eller inneholder null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>elements</code>er tom eller inneholder ingen felles resultattypen finnes som-uttrykk."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])
  id: NewCollection(System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: NewCollection(DbExpression[])
  nameWithType: DbExpressionBuilder.NewCollection(DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(DbExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbNewInstanceExpression&quot;> </xref> som bygger en samling som inneholder de angitte elementene. Hva slags samlingen er basert på vanlige typer elementene. Hvis ingen felles elementtype finnes er det et unntaket."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (System.Data.Common.CommandTrees.DbExpression[] elements);
    parameters:
    - id: elements
      type: System.Data.Common.CommandTrees.DbExpression[]
      description: "En liste over uttrykk som gir av elementene i samlingen."
    return:
      type: System.Data.Common.CommandTrees.DbNewInstanceExpression
      description: "En ny DbNewInstanceExpression med typen for den angitte samlingen og argumenter."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>elements</code>er null eller inneholder null.."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>elements</code>er tom eller inneholder ingen felles resultattypen finnes som-uttrykk."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage@)
  id: NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: NewEmptyCollection(TypeUsage)
  nameWithType: DbExpressionBuilder.NewEmptyCollection(TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbNewInstanceExpression&quot;> </xref> som bygger en tom samling av typen for den angitte samlingen."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewEmptyCollection (this System.Data.Metadata.Edm.TypeUsage collectionType);
    parameters:
    - id: collectionType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Typen metadataene for samlingen til å opprette"
    return:
      type: System.Data.Common.CommandTrees.DbNewInstanceExpression
      description: "En ny DbNewInstanceExpression med den angitte samling-typen og et tomt <code> Arguments </code> listen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>collectionType</code>er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>collectionType</code>er ikke en samlingstype."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  id: NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)
  nameWithType: DbExpressionBuilder.NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbNewInstanceExpression&quot;> </xref> som produserer en rad med den angitte kolonner og de angitte verdiene som er angitt som uttrykk."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewRow (System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>> columnValues);
    parameters:
    - id: columnValues
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}
      description: "En liste over streng DbExpression nøkkel / verdi-parene som definerer strukturen og verdier i raden."
    return:
      type: System.Data.Common.CommandTrees.DbNewInstanceExpression
      description: "En ny DbNewInstanceExpression som representerer konstruksjon av raden."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>columnValues</code>er null eller inneholder et element med en null kolonnenavn eller et uttrykk."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>columnValues</code>er tom eller inneholder en duplisert eller ugyldige kolonnenavnet."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression@)
  id: Not(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Not(DbExpression)
  nameWithType: DbExpressionBuilder.Not(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en <xref href=&quot;System.Data.Common.CommandTrees.DbNotExpression&quot;> </xref> som utfører logisk negering for det angitte argumentet."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNotExpression Not (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et boolsk uttrykk som angir argumentet."
    return:
      type: System.Data.Common.CommandTrees.DbNotExpression
      description: "En ny DbNotExpression med det angitte argumentet."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>har ikke en boolsk Resultattype."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: NotEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: NotEqual(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.NotEqual(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbComparisonExpression&quot;> </xref> som sammenligner venstre og høyre argument for ulikhet."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbComparisonExpression NotEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir det venstre argumentet."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir høyre argument."
    return:
      type: System.Data.Common.CommandTrees.DbComparisonExpression
      description: "En ny DbComparisonExpression som representerer ulikhet sammenligningen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>eller <code>right</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det finnes ingen felles likhet sammenlignbare resultattypen mellom <code> left </code> og <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage@)
  id: Null(System.Data.Metadata.Edm.TypeUsage@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Null(TypeUsage)
  nameWithType: DbExpressionBuilder.Null(TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbNullExpression&quot;> </xref>, som representerer en typeangitt null-verdi."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNullExpression Null (this System.Data.Metadata.Edm.TypeUsage nullType);
    parameters:
    - id: nullType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Typen null-verdi."
    return:
      type: System.Data.Common.CommandTrees.DbNullExpression
      description: "En forekomst av DbNullExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>nullType</code>er null."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  id: OfType(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OfType(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.OfType(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(DbExpression,TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbOfTypeExpression&quot;> </xref> som produserer et sett som består av elementene i de angitte inndataene angitt som er av den angitte typen."
  remarks: "DbOfTypeExpression krever at `argument` har en samling føre type med en polymorf elementtype, og at `type` er en type fra samme hierarki i typen som denne elementtypen."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbOfTypeExpression OfType (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> som angir det angitte settet."
    - id: type
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Skriv inn metadata for typen med elementer i settet med inndata må inkluderes i settet."
    return:
      type: System.Data.Common.CommandTrees.DbOfTypeExpression
      description: "En ny DbOfTypeExpression med argumentet angitt sett og typen og et ExpressionKind av <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>eller <code>type</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>har ikke en samlingstype resultatet eller <code>type</code> er ikke en type i samme typehierarkiet som elementtypen for samlingen resultattypen for <code>argument</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  id: OfTypeOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OfTypeOnly(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.OfTypeOnly(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(DbExpression,TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbOfTypeExpression&quot;> </xref> som produserer et sett som består av elementene i de angitte inndataene angitt som er av den angitte typen."
  remarks: "DbOfTypeExpression krever at `argument` har en samling føre type med en polymorf elementtype, og at `type` er en type fra samme hierarki i typen som denne elementtypen."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbOfTypeExpression OfTypeOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> som angir det angitte settet."
    - id: type
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Skriv inn metadata for typen elementer i settet med inndata må samsvare med nøyaktig som skal inkluderes i settet."
    return:
      type: System.Data.Common.CommandTrees.DbOfTypeExpression
      description: "En ny DbOfTypeExpression med argumentet angitt sett og typen og et ExpressionKind av <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>eller <code>type</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>har ikke en samlingstype resultatet eller <code>type</code> er ikke en type i samme typehierarkiet som elementtypen for samlingen resultattypen for <code>argument</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Or(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Or(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Or(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en <xref href=&quot;System.Data.Common.CommandTrees.DbOrExpression&quot;> </xref> som utfører logisk eller for venstre og høyre argument."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbOrExpression Or (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et boolsk uttrykk som angir det venstre argumentet."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et boolsk uttrykk som angir høyre argument."
    return:
      type: System.Data.Common.CommandTrees.DbOrExpression
      description: "En ny DbOrExpression med de angitte argumentene."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>eller <code>right</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>left</code>eller <code>right</code> har ikke en boolsk Resultattype."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OrderBy(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> som sorterer de angitte inndataene som er angitt av den angitte sorteringsnøkkelen med stigende sortering rekkefølge og standard sortering."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir det angitte settet."
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "En metode som angir hvordan avledes key sorteringsuttrykk som er angitt et medlem med det angitte settet. Denne metoden må produsere et uttrykk med en rekkefølge Resultattype som gir sorteringen for definisjonen."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "En ny DbSortExpression som representerer rekkefølgen av operasjonen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uttrykket som er generert av <code> sortKey </code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Uttrykket som er generert av <code> sortKey </code> har ikke en rekkefølge resultattypen."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  id: OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> som sorterer de angitte inndataene som er angitt av den angitte sorteringsnøkkelen med stigende rekkefølge, og den angitte sorteringen."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey, string collation);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir det angitte settet."
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "En metode som angir hvordan avledes key sorteringsuttrykk som er angitt et medlem med det angitte settet. Denne metoden må produsere et uttrykk med en rekkefølge Resultattype som gir sorteringen for definisjonen."
    - id: collation
      type: System.String
      description: "Sorteringen sortere."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "En ny DbSortExpression som representerer rekkefølgen av operasjonen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uttrykket som er generert av <code> sortKey </code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Uttrykket som er generert av <code> sortKey </code> har ikke en rekkefølge strengtype resultat."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>collation</code>er tom eller inneholder bare mellomrom."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> som sorterer de angitte inndataene som er angitt av den angitte sorteringsnøkkelen med synkende sortering rekkefølge og standard sortering."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir det angitte settet."
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "En metode som angir hvordan avledes key sorteringsuttrykk som er angitt et medlem med det angitte settet. Denne metoden må produsere et uttrykk med en rekkefølge Resultattype som gir sorteringen for definisjonen."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "En ny DbSortExpression som representerer rekkefølgen av operasjonen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uttrykket som er generert av <code> sortKey </code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Uttrykket som er generert av <code> sortKey </code> har ikke en rekkefølge resultattypen."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  id: OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> som sorterer de angitte inndataene som er angitt av den angitte sorteringsnøkkelen med synkende rekkefølge og den angitte sorteringen."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey, string collation);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir det angitte settet."
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "En metode som angir hvordan avledes key sorteringsuttrykk som er angitt et medlem med det angitte settet. Denne metoden må produsere et uttrykk med en rekkefølge Resultattype som gir sorteringen for definisjonen."
    - id: collation
      type: System.String
      description: "Sorteringen sortere."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "En ny DbSortExpression som representerer rekkefølgen av operasjonen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uttrykket som er generert av <code> sortKey </code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Uttrykket som er generert av <code> sortKey </code> har ikke en rekkefølge strengtype resultat."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>collation</code>er tom eller inneholder bare mellomrom."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  id: OuterApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  nameWithType: DbExpressionBuilder.OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbApplyExpression&quot;> </xref> som evaluerer det angitte <code> apply </code> uttrykk én gang for hvert element i en gitt inndata angitt produserer en samling av rader med tilsvarende inndataene og bruke kolonner. Rader som <code> apply </code> evalueres til et tomt sett har en kolonneverdi for bruk av <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>> apply);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> som angir det angitte settet."
    - id: apply
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}
      description: "En metode som angir logikken skal evalueres én gang for hvert medlem i det angitte settet."
    return:
      type: System.Data.Common.CommandTrees.DbApplyExpression
      description: "En ny DbApplyExpression med de angitte inndataene og bruke bindinger og en <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> av OuterApply."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Resultatet av <code> apply </code> inneholder et navn eller et uttrykk som er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Resultatet av <code> apply </code> inneholder et navn eller uttrykk som ikke er gyldig i en binding med uttrykk."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  id: OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OuterApply(DbExpressionBinding,DbExpressionBinding)
  nameWithType: DbExpressionBuilder.OuterApply(DbExpressionBinding,DbExpressionBinding)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(DbExpressionBinding,DbExpressionBinding)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbApplyExpression&quot;> </xref> som evaluerer det angitte <code> apply </code> uttrykk én gang for hvert element i en gitt inndata angitt produserer en samling av rader med tilsvarende inndataene og bruke kolonner. Rader som <code> apply </code> evalueres til et tomt sett har en kolonneverdi for bruk av <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> som angir det angitte settet."
    - id: apply
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> som angir logic skal evalueres én gang for hvert medlem i det angitte settet."
    return:
      type: System.Data.Common.CommandTrees.DbApplyExpression
      description: "En ny DbApplyExpression med de angitte inndataene og bruke bindinger og en <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> av OuterApply."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>eller <code>apply</code> er null."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage@,System.String)
  id: Parameter(System.Data.Metadata.Edm.TypeUsage@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Parameter(TypeUsage,String)
  nameWithType: DbExpressionBuilder.Parameter(TypeUsage,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(TypeUsage,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbParameterReferenceExpression&quot;> </xref> som refererer til en parameter med det angitte navnet og type."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbParameterReferenceExpression Parameter (this System.Data.Metadata.Edm.TypeUsage type, string name);
    parameters:
    - id: type
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Typen for parameteren refereres til."
    - id: name
      type: System.String
      description: "Navnet på den refererte parameteren."
    return:
      type: System.Data.Common.CommandTrees.DbParameterReferenceExpression
      description: "Et DbParameterReferenceExpression som representerer en referanse til en parameter med det angitte navnet og type. Resultattypen for uttrykket som skal være den samme som <code> type </code>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Plus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Plus(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Plus(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbArithmeticExpression&quot;> </xref> som legger til venstre argument i høyre argument."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Plus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir det venstre argumentet."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir høyre argument."
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: "En ny DbArithmeticExpression som representerer tillegg-operasjonen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>eller <code>right</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det finnes ingen felles numerisk resultattypen mellom <code> left </code> og <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  id: Project(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Project(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.Project(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbProjectExpression&quot;> </xref> som genererer det angitte uttrykket over det angitte settet som inndata."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbProjectExpression Project (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression projection);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Et uttrykk binding som angir det angitte settet."
    - id: projection
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som prosjektet over settet."
    return:
      type: System.Data.Common.CommandTrees.DbProjectExpression
      description: "En ny DbProjectExpression som representerer projeksjonen-operasjonen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>eller <code>projection</code> er null."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.EdmProperty)
  id: Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.EdmProperty)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Property(DbExpression,EdmProperty)
  nameWithType: DbExpressionBuilder.Property(DbExpression,EdmProperty)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,EdmProperty)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbPropertyExpression&quot;> </xref> som representerer henting av den angitte egenskapen."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.EdmProperty propertyMetadata);
    parameters:
    - id: instance
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Forekomsten som å hente egenskapen. Kan være null hvis egenskapen er statisk."
    - id: propertyMetadata
      type: System.Data.Metadata.Edm.EdmProperty
      description: "Metadata for egenskapen for å hente."
    return:
      type: System.Data.Common.CommandTrees.DbPropertyExpression
      description: "En ny DbPropertyExpression som representerer henting av meldingsegenskap."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>propertyMetadata</code>er null eller <code>instance</code> er null og egenskapen er ikke statisk."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.NavigationProperty)
  id: Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.NavigationProperty)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Property(DbExpression,NavigationProperty)
  nameWithType: DbExpressionBuilder.Property(DbExpression,NavigationProperty)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,NavigationProperty)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbPropertyExpression&quot;> </xref> som representerer henting av den angitte navigasjonsegenskapen."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.NavigationProperty navigationProperty);
    parameters:
    - id: instance
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Forekomsten skal hentes navigasjonsegenskapen fra."
    - id: navigationProperty
      type: System.Data.Metadata.Edm.NavigationProperty
      description: "Metadata for navigasjonsegenskapen for å hente."
    return:
      type: System.Data.Common.CommandTrees.DbPropertyExpression
      description: "En ny DbPropertyExpression som representerer henting av navigasjon-egenskap."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>navigationProperty</code>eller <code>instance</code> er null."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember)
  id: Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Property(DbExpression,RelationshipEndMember)
  nameWithType: DbExpressionBuilder.Property(DbExpression,RelationshipEndMember)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,RelationshipEndMember)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbPropertyExpression&quot;> </xref> som representerer henting av det angitte relasjonen end-medlemmet."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.RelationshipEndMember relationshipEnd);
    parameters:
    - id: instance
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Forekomsten som skal hentes relasjonen end-medlem."
    - id: relationshipEnd
      type: System.Data.Metadata.Edm.RelationshipEndMember
      description: "Metadata for relasjonen end-medlem til å hente."
    return:
      type: System.Data.Common.CommandTrees.DbPropertyExpression
      description: "En ny DbPropertyExpression som representerer relasjonen end medlem henting."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>relationshipEnd</code>er null eller <code>instance</code> er null og egenskapen er ikke statisk."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.String)
  id: Property(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Property(DbExpression,String)
  nameWithType: DbExpressionBuilder.Property(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbPropertyExpression&quot;> </xref> som representerer henting av instance-egenskap med det angitte navnet fra den angitte forekomsten."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, string propertyName);
    parameters:
    - id: instance
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Forekomsten som å hente egenskapen."
    - id: propertyName
      type: System.String
      description: "Navnet på egenskapen som skal hentes."
    return:
      type: System.Data.Common.CommandTrees.DbPropertyExpression
      description: "En ny DbPropertyExpression som representerer henting av meldingsegenskap."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>propertyName</code>er null eller <code>instance</code> er null og egenskapen er ikke statisk."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Ingen egenskap med det angitte navnet er deklarert av typen <code> instance </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression)
  id: RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: RefFromKey(EntitySet,DbExpression)
  nameWithType: DbExpressionBuilder.RefFromKey(EntitySet,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(EntitySet,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbRefExpression&quot;> </xref> som koder en referanse til en bestemt enhet basert på nøkkelverdier."
  remarks: '`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set. The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet''s` entity type.'
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySet
      description: "Enheten er angitt i det aktuelle elementet finnes."
    - id: keyRow
      type: System.Data.Common.CommandTrees.DbExpression
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> som bygger en post med kolonner som samsvarer med (i tall, type og rekkefølge) nøkkel-egenskapene for den refererte enhetstypen."
    return:
      type: System.Data.Common.CommandTrees.DbRefExpression
      description: "Angi en ny DbRefExpression som refererer til elementet med de angitte nøkkelverdiene i den angitte enheten."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entitySet</code>eller <code>keyRow</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>keyRow</code>har ikke en post Resultattype som samsvarer med Nøkkelegenskapene i den refererte enheten Sett enhetstypen."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)
  id: RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: RefFromKey(EntitySet,DbExpression,EntityType)
  nameWithType: DbExpressionBuilder.RefFromKey(EntitySet,DbExpression,EntityType)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(EntitySet,DbExpression,EntityType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbRefExpression&quot;> </xref> som koder en referanse til en bestemt enhet basert på nøkkelverdier."
  remarks: '`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set. The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet''s` entity type.'
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow, System.Data.Metadata.Edm.EntityType entityType);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySet
      description: "Enheten er angitt i det aktuelle elementet finnes."
    - id: keyRow
      type: System.Data.Common.CommandTrees.DbExpression
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> som bygger en post med kolonner som samsvarer med (i tall, type og rekkefølge) nøkkel-egenskapene for den refererte enhetstypen."
    - id: entityType
      type: System.Data.Metadata.Edm.EntityType
      description: "Typen som referansen må referere til enheten."
    return:
      type: System.Data.Common.CommandTrees.DbRefExpression
      description: "Angi en ny DbRefExpression som refererer til elementet med de angitte nøkkelverdiene i den angitte enheten."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entitySet</code>,  <code>keyRow</code> or <code>entityType</code> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>entityType</code>er ikke i samme typehierarki som settet enheten enhetstypen eller <code>keyRow</code> har ikke en post Resultattype som samsvarer med Nøkkelegenskapene i den refererte enheten Sett enhetstypen."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase@)
  id: Scan(System.Data.Metadata.Edm.EntitySetBase@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Scan(EntitySetBase)
  nameWithType: DbExpressionBuilder.Scan(EntitySetBase)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(EntitySetBase)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbScanExpression&quot;> </xref> som refererer til det angitte settet for enhet eller relasjon."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbScanExpression Scan (this System.Data.Metadata.Edm.EntitySetBase targetSet);
    parameters:
    - id: targetSet
      type: System.Data.Metadata.Edm.EntitySetBase
      description: "Metadata for enhet eller relasjon satt til referanse."
    return:
      type: System.Data.Common.CommandTrees.DbScanExpression
      description: "En ny DbScanExpression basert på det angitte settet for enhet eller relasjon."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetSet</code>er null."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})
  id: Select``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Select(DbExpression,Func<DbExpression,TProjection>)
  nameWithType: DbExpressionBuilder.Select(DbExpression,Func<DbExpression,TProjection>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select(DbExpression,Func<DbExpression,TProjection>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbProjectExpression Select<TProjection> (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,TProjection> projection);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Som skal legges til."
    - id: projection
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,TProjection}
      description: "Som skal legges til."
    return:
      type: System.Data.Common.CommandTrees.DbProjectExpression
      description: "Som skal legges til."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select<TProjection>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: SelectMany(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: SelectMany(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbApplyExpression&quot;> </xref> som evaluerer det angitte <code> apply </code> uttrykk én gang for hvert element i en gitt inndata angitt produserer en samling av rader med tilsvarende inndataene og bruke kolonner. Rader som <code> apply </code> evalueres til et tomt sett er ikke inkludert. En <xref href=&quot;System.Data.Common.CommandTrees.DbProjectExpression&quot;> </xref> opprettes som velger den <code> apply </code> kolonne fra hver rad produserer overordnede samlingen av <code> apply </code> resultater."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> apply);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> som angir det angitte settet."
    - id: apply
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "En metode som representerer logikken skal evalueres én gang for hvert medlem i det angitte settet."
    return:
      type: System.Data.Common.CommandTrees.DbProjectExpression
      description: "En ny DbProjectExpression som velger kolonnen Bruk fra en ny DbApplyExpression med de angitte inndata og bruk bindingene og en <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> av CrossApply."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uttrykket som er generert av <code> apply </code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Uttrykket som er generert av <code> apply </code> har ikke en samlingstype."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  id: SelectMany``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  nameWithType: DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany<TSelector> (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> apply, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector> selector);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Som skal legges til."
    - id: apply
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Som skal legges til."
    - id: selector
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector}
      description: "Som skal legges til."
    return:
      type: System.Data.Common.CommandTrees.DbProjectExpression
      description: "Som skal legges til."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany<TSelector>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Skip(System.Data.Common.CommandTrees.DbSortExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Skip(DbSortExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Skip(DbSortExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(DbSortExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbSkipExpression&quot;> </xref> som hopper over det angitte antallet elementer fra de angitte sorterte inndata."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbSortExpression argument, System.Data.Common.CommandTrees.DbExpression count);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> som angir sorterte inndata."
    - id: count
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk i angir hvor mange elementer i settet skal hoppes over."
    return:
      type: System.Data.Common.CommandTrees.DbSkipExpression
      description: "En ny DbSkipExpression som representerer skip-operasjonen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>eller <code>count</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>er ikke <xref href=&quot;System.Data.Common.CommandTrees.DbConstantExpression&quot;> </xref> eller <xref href=&quot;System.Data.Common.CommandTrees.DbParameterReferenceExpression&quot;> </xref> eller har en Resultattype som ikke er lik eller forfremmes til en 64-biters heltall."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)
  id: Skip(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)
  nameWithType: DbExpressionBuilder.Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbSkipExpression&quot;> </xref> som sorterer de angitte inndataene som er angitt av de angitte sortering spesifikasjonene før hopper over det angitte antallet elementer."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbSortClause> sortOrder, System.Data.Common.CommandTrees.DbExpression count);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Et uttrykk binding som angir det angitte settet."
    - id: sortOrder
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause}
      description: "En liste over sortering spesifikasjonene som avgjør hvordan elementene i det angitte settet skal sorteres."
    - id: count
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk i angir hvor mange elementer i settet skal hoppes over."
    return:
      type: System.Data.Common.CommandTrees.DbSkipExpression
      description: "En ny DbSkipExpression som representerer skip-operasjonen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>, <code>sortOrder</code> eller <code>count</code> er null, eller <code>sortOrder</code> inneholder null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sortOrder</code>er tom, eller <code>count</code> er ikke <xref href=&quot;System.Data.Common.CommandTrees.DbConstantExpression&quot;> </xref> eller <xref href=&quot;System.Data.Common.CommandTrees.DbParameterReferenceExpression&quot;> </xref> eller har en Resultattype som ikke er lik eller forfremmes til en 64-biters heltall."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})
  id: Sort(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Sort(DbExpressionBinding,IEnumerable<DbSortClause>)
  nameWithType: DbExpressionBuilder.Sort(DbExpressionBinding,IEnumerable<DbSortClause>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(DbExpressionBinding,IEnumerable<DbSortClause>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> som sorterer de angitte inndataene som er angitt av de angitte sortering spesifikasjonene."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression Sort (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbSortClause> sortOrder);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Et uttrykk binding som angir det angitte settet."
    - id: sortOrder
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause}
      description: "En liste over sortering spesifikasjonene som avgjør hvordan elementene i det angitte settet skal sorteres."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "En ny DbSortExpression som representerer sorteringsoperasjonen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>eller <code>sortOrder</code> er null, eller <code>sortOrder</code> inneholder null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sortOrder</code>er tom."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Take(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Take(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Take(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbLimitExpression&quot;> </xref> som begrenser antall elementer i samlingen argumentet til det angitte antallet grenseverdien. Bundet resultatene er ikke inkludert i utdataene."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLimitExpression Take (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir den angitte samlingen."
    - id: count
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir grenseverdien."
    return:
      type: System.Data.Common.CommandTrees.DbLimitExpression
      description: "En ny DbLimitExpression med det angitte argumentet og count grenseverdier som ikke inkluderer knyttet resultater."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>eller <code>count</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>har ikke en samlingstype resultatet <code>count</code> har ikke en Resultattype som er lik eller forfremmes til en 64-biters heltall."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> som med en sorteringsrekkefølge som inkluderer sorteringsrekkefølgen for den angitte rekkefølgen inndata Sett sammen med den angitte sorteringsnøkkelen i stigende rekkefølge og med standardsorteringen."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "DbSortExpression som angir i inndataene."
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "En metode som angir hvordan avledes flere viktige Sorteringsuttrykket gitt et medlem med det angitte settet. Denne metoden må produsere et uttrykk med en rekkefølge Resultattype som gir sorteringen for definisjonen."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "En ny DbSortExpression som representerer nye generelle etter operasjonen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uttrykket som er generert av <code> sortKey </code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sortKey</code>har ikke en rekkefølge resultattypen."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  id: ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> som med en sorteringsrekkefølge som inkluderer sorteringsrekkefølgen for den angitte rekkefølgen inndata Sett sammen med den angitte sorteringsnøkkelen i stigende rekkefølge og med den angitte sorteringen."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey, string collation);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "DbSortExpression som angir i inndataene."
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "En metode som angir hvordan avledes flere viktige Sorteringsuttrykket gitt et medlem med det angitte settet. Denne metoden må produsere et uttrykk med en rekkefølge Resultattype som gir sorteringen for definisjonen."
    - id: collation
      type: System.String
      description: "Sorteringen sortere."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "En ny DbSortExpression som representerer nye generelle etter operasjonen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uttrykket som er generert av <code> sortKey </code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Uttrykket som er generert av <code> sortKey </code> har ikke en rekkefølge strengtype resultat."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>collation</code>er tom eller inneholder bare mellomrom."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> som med en sorteringsrekkefølge som inkluderer sorteringsrekkefølgen for den angitte rekkefølgen inndata Sett sammen med den angitte sorteringsnøkkelen i synkende rekkefølge og med standardsorteringen."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "DbSortExpression som angir i inndataene."
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "En metode som angir hvordan avledes flere viktige Sorteringsuttrykket gitt et medlem med det angitte settet. Denne metoden må produsere et uttrykk med en rekkefølge Resultattype som gir sorteringen for definisjonen."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "En ny DbSortExpression som representerer nye generelle etter operasjonen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uttrykket som er generert av <code> sortKey </code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Uttrykket som er generert av <code> sortKey </code> har ikke en rekkefølge resultattypen."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  id: ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> som med en sorteringsrekkefølge som inkluderer sorteringsrekkefølgen for den angitte rekkefølgen inndata Sett sammen med den angitte sorteringsnøkkelen i synkende rekkefølge og med den angitte sorteringen."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey, string collation);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "DbSortExpression som angir i inndataene."
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "En metode som angir hvordan avledes flere viktige Sorteringsuttrykket gitt et medlem med det angitte settet. Denne metoden må produsere et uttrykk med en rekkefølge Resultattype som gir sorteringen for definisjonen."
    - id: collation
      type: System.String
      description: "Sorteringen sortere."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "En ny DbSortExpression som representerer nye generelle etter operasjonen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uttrykket som er generert av <code> sortKey </code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Uttrykket som er generert av <code> sortKey </code> har ikke en rekkefølge strengtype resultat."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>collation</code>er tom eller inneholder bare mellomrom."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@)
  id: ToSortClause(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ToSortClause(DbExpression)
  nameWithType: DbExpressionBuilder.ToSortClause(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbSortClause&quot;> </xref> med en stigende sortering rekkefølge og standard sortering."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key);
    parameters:
    - id: key
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uttrykk som definerer sorteringsnøkkelen for."
    return:
      type: System.Data.Common.CommandTrees.DbSortClause
      description: "En ny sortering-setning med gitt sorteringsnøkkel og stigende rekkefølge."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>key</code>har ikke en rekkefølge resultattypen."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@,System.String)
  id: ToSortClause(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ToSortClause(DbExpression,String)
  nameWithType: DbExpressionBuilder.ToSortClause(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(DbExpression,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbSortClause&quot;> </xref> med en stigende rekkefølge og den angitte sorteringen."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key, string collation);
    parameters:
    - id: key
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uttrykk som definerer sorteringsnøkkelen for."
    - id: collation
      type: System.String
      description: "Sorteringen sortere."
    return:
      type: System.Data.Common.CommandTrees.DbSortClause
      description: "En ny sortering-setning med den angitte sorteringsnøkkel og sortering og stigende rekkefølge."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>er null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>collation</code>er tom eller inneholder bare mellomrom."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>key</code>har ikke en rekkefølge resultattypen."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@)
  id: ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ToSortClauseDescending(DbExpression)
  nameWithType: DbExpressionBuilder.ToSortClauseDescending(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbSortClause&quot;> </xref> med en synkende sortering rekkefølge og standard sortering."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key);
    parameters:
    - id: key
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uttrykk som definerer sorteringsnøkkelen for."
    return:
      type: System.Data.Common.CommandTrees.DbSortClause
      description: "En ny sortering-setning med gitt sorteringsnøkkel og synkende rekkefølge."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>key</code>har ikke en rekkefølge resultattypen."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@,System.String)
  id: ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ToSortClauseDescending(DbExpression,String)
  nameWithType: DbExpressionBuilder.ToSortClauseDescending(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(DbExpression,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbSortClause&quot;> </xref> med synkende rekkefølge og den angitte sorteringen."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key, string collation);
    parameters:
    - id: key
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uttrykk som definerer sorteringsnøkkelen for."
    - id: collation
      type: System.String
      description: "Sorteringen sortere."
    return:
      type: System.Data.Common.CommandTrees.DbSortClause
      description: "En ny sortering-setning med den angitte sorteringsnøkkel og sortering og synkende rekkefølge."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>er null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>collation</code>er tom eller inneholder bare mellomrom."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>key</code>har ikke en rekkefølge resultattypen."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  id: TreatAs(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: TreatAs(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.TreatAs(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(DbExpression,TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbTreatExpression&quot;> </xref>."
  remarks: "DbTreatExpression krever at `argument` har en polymorf Resultattype, og at `treatType` er fra samme typehierarkiet som den resultattypen av typen."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbTreatExpression TreatAs (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage treatType);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir forekomsten."
    - id: treatType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Skriv inn metadataene for av treat-filtype."
    return:
      type: System.Data.Common.CommandTrees.DbTreatExpression
      description: "En ny DbTreatExpression med det angitte argumentet og type."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>eller <code>treatType</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>treatType</code>er ikke i det samme typen hierarkiet som resultattypen for <code>argument</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True
  id: "True"
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: "True"
  nameWithType: DbExpressionBuilder.True
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Henter en <xref href=&quot;System.Data.Common.CommandTrees.DbConstantExpression&quot;> </xref> med den boolske verdien <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbConstantExpression True { get; }
    return:
      type: System.Data.Common.CommandTrees.DbConstantExpression
      description: "En <xref href=&quot;System.Data.Common.CommandTrees.DbConstantExpression&quot;> </xref> med den boolske verdien <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression@)
  id: UnaryMinus(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: UnaryMinus(DbExpression)
  nameWithType: DbExpressionBuilder.UnaryMinus(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbArithmeticExpression&quot;> </xref> som opphever verdien til argumentet."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression UnaryMinus (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir argumentet."
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: "En ny DbArithmeticExpression som representerer negering-operasjonen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det finnes ingen numerisk resultattypen for <code> argument </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Union(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Union(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Union(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> som beregner Unionen av til venstre og høyre angir argumentene der duplikater er fjernet."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExpression Union (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som definerer venstre Sett argumentet."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som definerer høyre Sett argumentet."
    return:
      type: System.Data.Common.CommandTrees.DbExpression
      description: "En ny DbExpression som beregner for union-, uten duplikater, i den venstre og høyre argument."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>eller <code>right</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Ingen felles samlingstype på resultatet med en likhet sammenlignbare elementtype finnes mellom <code> left </code> og <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: UnionAll(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: UnionAll(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.UnionAll(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbUnionAllExpression&quot;> </xref> som beregner Unionen av de venstre og høyre Sett argumentene og fjernes ikke duplikater."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbUnionAllExpression UnionAll (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som definerer venstre Sett argumentet."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som definerer høyre Sett argumentet."
    return:
      type: System.Data.Common.CommandTrees.DbUnionAllExpression
      description: "En ny DbUnionAllExpression som union-, inkludert duplikater, i den venstre og høyre argument."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>eller <code>right</code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Ingen felles samlingstype på resultatet med en likhet sammenlignbare elementtype finnes mellom <code> left </code> og <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage@,System.String)
  id: Variable(System.Data.Metadata.Edm.TypeUsage@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Variable(TypeUsage,String)
  nameWithType: DbExpressionBuilder.Variable(TypeUsage,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(TypeUsage,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbVariableReferenceExpression&quot;> </xref> som refererer til en variabel med det angitte navnet og type."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbVariableReferenceExpression Variable (this System.Data.Metadata.Edm.TypeUsage type, string name);
    parameters:
    - id: type
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Typen for den refererte variabelen."
    - id: name
      type: System.String
      description: "Navnet på den refererte variabelen."
    return:
      type: System.Data.Common.CommandTrees.DbVariableReferenceExpression
      description: "DbVariableReferenceExpression som representerer en referanse til en variabel med det angitte navnet og type. Resultattypen for uttrykket som skal være den samme som <code> type </code>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: Where(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Where(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.Where(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(DbExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Oppretter en ny <xref href=&quot;System.Data.Common.CommandTrees.DbFilterExpression&quot;> </xref> som filtrerer elementene i de angitte inndataene angis ved å bruke det angitte predikatet."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFilterExpression Where (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> predicate);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Et uttrykk som angir det angitte settet."
    - id: predicate
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "En metode som representerer predikatet skal evalueres for hvert medlem i det angitte settet.    Denne metoden må produsere et uttrykk med en Boolean Resultattype som inneholder predikatet logikken."
    return:
      type: System.Data.Common.CommandTrees.DbFilterExpression
      description: "En ny DbQuantifierExpression som representerer alle operasjonen."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uttrykket som er generert av <code> predicate </code> er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Uttrykket som er generert av <code> predicate </code> har ikke en boolsk Resultattype."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Aggregate(EdmFunction,DbExpression)
  nameWithType: DbExpressionBuilder.Aggregate(EdmFunction,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(EdmFunction,DbExpression)
- uid: System.Data.Common.CommandTrees.DbFunctionAggregate
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbFunctionAggregate
  nameWithType: DbFunctionAggregate
  fullName: System.Data.Common.CommandTrees.DbFunctionAggregate
- uid: System.Data.Metadata.Edm.EdmFunction
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EdmFunction
  nameWithType: EdmFunction
  fullName: System.Data.Metadata.Edm.EdmFunction
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: AggregateDistinct(EdmFunction,DbExpression)
  nameWithType: DbExpressionBuilder.AggregateDistinct(EdmFunction,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(EdmFunction,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: All(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.All(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(DbExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.DbQuantifierExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbQuantifierExpression
  nameWithType: DbQuantifierExpression
  fullName: System.Data.Common.CommandTrees.DbQuantifierExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression>
  nameWithType: Func<DbExpression,DbExpression>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: All(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.All(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.DbExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionBinding
  nameWithType: DbExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbExpressionBinding
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: And(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.And(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbAndExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbAndExpression
  nameWithType: DbAndExpression
  fullName: System.Data.Common.CommandTrees.DbAndExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Any(DbExpression)
  nameWithType: DbExpressionBuilder.Any(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Any(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.Any(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Any(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.Any(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: As(DbAggregate,String)
  nameWithType: DbExpressionBuilder.As(DbAggregate,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(DbAggregate,String)
- uid: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}
  parent: System.Collections.Generic
  isExternal: true
  name: KeyValuePair<String,DbAggregate>
  nameWithType: KeyValuePair<String,DbAggregate>
  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbAggregate>
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Data.Common.CommandTrees.DbAggregate>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbAggregate
    name: DbAggregate
    nameWithType: DbAggregate
    fullName: DbAggregate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.DbAggregate
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbAggregate
  nameWithType: DbAggregate
  fullName: System.Data.Common.CommandTrees.DbAggregate
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: As(DbExpression,String)
  nameWithType: DbExpressionBuilder.As(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(DbExpression,String)
- uid: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}
  parent: System.Collections.Generic
  isExternal: true
  name: KeyValuePair<String,DbExpression>
  nameWithType: KeyValuePair<String,DbExpression>
  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Bind(DbExpression)
  nameWithType: DbExpressionBuilder.Bind(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: BindAs(DbExpression,String)
  nameWithType: DbExpressionBuilder.BindAs(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(DbExpression,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)
  nameWithType: DbExpressionBuilder.Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)
- uid: System.Data.Common.CommandTrees.DbCaseExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbCaseExpression
  nameWithType: DbCaseExpression
  fullName: System.Data.Common.CommandTrees.DbCaseExpression
- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<DbExpression>
  nameWithType: IEnumerable<DbExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Data.Common.CommandTrees.DbExpression>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CastTo(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.CastTo(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(DbExpression,TypeUsage)
- uid: System.Data.Common.CommandTrees.DbCastExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbCastExpression
  nameWithType: DbCastExpression
  fullName: System.Data.Common.CommandTrees.DbCastExpression
- uid: System.Data.Metadata.Edm.TypeUsage
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: TypeUsage
  nameWithType: TypeUsage
  fullName: System.Data.Metadata.Edm.TypeUsage
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Constant(Object)
  nameWithType: DbExpressionBuilder.Constant(Object)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(Object)
- uid: System.Data.Common.CommandTrees.DbConstantExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbConstantExpression
  nameWithType: DbConstantExpression
  fullName: System.Data.Common.CommandTrees.DbConstantExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage@,System.Object)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Constant(TypeUsage,Object)
  nameWithType: DbExpressionBuilder.Constant(TypeUsage,Object)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(TypeUsage,Object)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CreateRef(EntitySet,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,IEnumerable<DbExpression>)
- uid: System.Data.Common.CommandTrees.DbRefExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbRefExpression
  nameWithType: DbRefExpression
  fullName: System.Data.Common.CommandTrees.DbRefExpression
- uid: System.Data.Metadata.Edm.EntitySet
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntitySet
  nameWithType: EntitySet
  fullName: System.Data.Metadata.Edm.EntitySet
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CreateRef(EntitySet,DbExpression[])
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,DbExpression[])
- uid: System.Data.Common.CommandTrees.DbExpression[]
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression[]
  spec.csharp:
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)
- uid: System.Data.Metadata.Edm.EntityType
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntityType
  nameWithType: EntityType
  fullName: System.Data.Metadata.Edm.EntityType
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CreateRef(EntitySet,EntityType,DbExpression[])
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,EntityType,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,EntityType,DbExpression[])
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  nameWithType: DbExpressionBuilder.CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
- uid: System.Data.Common.CommandTrees.DbApplyExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbApplyExpression
  nameWithType: DbApplyExpression
  fullName: System.Data.Common.CommandTrees.DbApplyExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}
  parent: System
  isExternal: true
  name: Func<DbExpression,KeyValuePair<String,DbExpression>>
  nameWithType: Func<DbExpression,KeyValuePair<String,DbExpression>>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CrossApply(DbExpressionBinding,DbExpressionBinding)
  nameWithType: DbExpressionBuilder.CrossApply(DbExpressionBinding,DbExpressionBinding)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(DbExpressionBinding,DbExpressionBinding)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CrossJoin(IEnumerable<DbExpressionBinding>)
  nameWithType: DbExpressionBuilder.CrossJoin(IEnumerable<DbExpressionBinding>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(IEnumerable<DbExpressionBinding>)
- uid: System.Data.Common.CommandTrees.DbCrossJoinExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbCrossJoinExpression
  nameWithType: DbCrossJoinExpression
  fullName: System.Data.Common.CommandTrees.DbCrossJoinExpression
- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<DbExpressionBinding>
  nameWithType: IEnumerable<DbExpressionBinding>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpressionBinding>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Data.Common.CommandTrees.DbExpressionBinding>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbExpressionBinding
    name: DbExpressionBinding
    nameWithType: DbExpressionBinding
    fullName: DbExpressionBinding
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Deref(DbExpression)
  nameWithType: DbExpressionBuilder.Deref(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(DbExpression)
- uid: System.Data.Common.CommandTrees.DbDerefExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbDerefExpression
  nameWithType: DbDerefExpression
  fullName: System.Data.Common.CommandTrees.DbDerefExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Distinct(DbExpression)
  nameWithType: DbExpressionBuilder.Distinct(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(DbExpression)
- uid: System.Data.Common.CommandTrees.DbDistinctExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbDistinctExpression
  nameWithType: DbDistinctExpression
  fullName: System.Data.Common.CommandTrees.DbDistinctExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Divide(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Divide(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbArithmeticExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbArithmeticExpression
  nameWithType: DbArithmeticExpression
  fullName: System.Data.Common.CommandTrees.DbArithmeticExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Element(DbExpression)
  nameWithType: DbExpressionBuilder.Element(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(DbExpression)
- uid: System.Data.Common.CommandTrees.DbElementExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbElementExpression
  nameWithType: DbElementExpression
  fullName: System.Data.Common.CommandTrees.DbElementExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Equal(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Equal(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbComparisonExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbComparisonExpression
  nameWithType: DbComparisonExpression
  fullName: System.Data.Common.CommandTrees.DbComparisonExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Except(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Except(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbExceptExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExceptExpression
  nameWithType: DbExceptExpression
  fullName: System.Data.Common.CommandTrees.DbExceptExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Exists(DbExpression)
  nameWithType: DbExpressionBuilder.Exists(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: "False"
  nameWithType: DbExpressionBuilder.False
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Filter(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.Filter(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.DbFilterExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbFilterExpression
  nameWithType: DbFilterExpression
  fullName: System.Data.Common.CommandTrees.DbFilterExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.DbJoinExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbJoinExpression
  nameWithType: DbJoinExpression
  fullName: System.Data.Common.CommandTrees.DbJoinExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression,DbExpression>
  nameWithType: Func<DbExpression,DbExpression,DbExpression>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GetEntityRef(DbExpression)
  nameWithType: DbExpressionBuilder.GetEntityRef(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(DbExpression)
- uid: System.Data.Common.CommandTrees.DbEntityRefExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbEntityRefExpression
  nameWithType: DbEntityRefExpression
  fullName: System.Data.Common.CommandTrees.DbEntityRefExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GetRefKey(DbExpression)
  nameWithType: DbExpressionBuilder.GetRefKey(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(DbExpression)
- uid: System.Data.Common.CommandTrees.DbRefKeyExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbRefKeyExpression
  nameWithType: DbRefKeyExpression
  fullName: System.Data.Common.CommandTrees.DbRefKeyExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GreaterThan(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.GreaterThan(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GreaterThanOrEqual(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.GreaterThanOrEqual(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GroupBind(DbExpression)
  nameWithType: DbExpressionBuilder.GroupBind(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(DbExpression)
- uid: System.Data.Common.CommandTrees.DbGroupExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbGroupExpressionBinding
  nameWithType: DbGroupExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbGroupExpressionBinding
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression@,System.String,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GroupBindAs(DbExpression,String,String)
  nameWithType: DbExpressionBuilder.GroupBindAs(DbExpression,String,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(DbExpression,String,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding@,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)
  nameWithType: DbExpressionBuilder.GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)
- uid: System.Data.Common.CommandTrees.DbGroupByExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbGroupByExpression
  nameWithType: DbGroupByExpression
  fullName: System.Data.Common.CommandTrees.DbGroupByExpression
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<KeyValuePair<String,DbExpression>>
  nameWithType: IEnumerable<KeyValuePair<String,DbExpression>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<KeyValuePair<String,DbAggregate>>
  nameWithType: IEnumerable<KeyValuePair<String,DbAggregate>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbAggregate>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbAggregate>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Data.Common.CommandTrees.DbAggregate>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbAggregate
    name: DbAggregate
    nameWithType: DbAggregate
    fullName: DbAggregate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Intersect(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Intersect(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbIntersectExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbIntersectExpression
  nameWithType: DbIntersectExpression
  fullName: System.Data.Common.CommandTrees.DbIntersectExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Invoke(DbLambda,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.Invoke(DbLambda,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(DbLambda,IEnumerable<DbExpression>)
- uid: System.Data.Common.CommandTrees.DbLambdaExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbLambdaExpression
  nameWithType: DbLambdaExpression
  fullName: System.Data.Common.CommandTrees.DbLambdaExpression
- uid: System.Data.Common.CommandTrees.DbLambda
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbLambda
  nameWithType: DbLambda
  fullName: System.Data.Common.CommandTrees.DbLambda
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Invoke(DbLambda,DbExpression[])
  nameWithType: DbExpressionBuilder.Invoke(DbLambda,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(DbLambda,DbExpression[])
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Invoke(EdmFunction,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.Invoke(EdmFunction,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(EdmFunction,IEnumerable<DbExpression>)
- uid: System.Data.Common.CommandTrees.DbFunctionExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbFunctionExpression
  nameWithType: DbFunctionExpression
  fullName: System.Data.Common.CommandTrees.DbFunctionExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Invoke(EdmFunction,DbExpression[])
  nameWithType: DbExpressionBuilder.Invoke(EdmFunction,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(EdmFunction,DbExpression[])
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsEmpty(DbExpression)
  nameWithType: DbExpressionBuilder.IsEmpty(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(DbExpression)
- uid: System.Data.Common.CommandTrees.DbIsEmptyExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbIsEmptyExpression
  nameWithType: DbIsEmptyExpression
  fullName: System.Data.Common.CommandTrees.DbIsEmptyExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsNull(DbExpression)
  nameWithType: DbExpressionBuilder.IsNull(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(DbExpression)
- uid: System.Data.Common.CommandTrees.DbIsNullExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbIsNullExpression
  nameWithType: DbIsNullExpression
  fullName: System.Data.Common.CommandTrees.DbIsNullExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsOf(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.IsOf(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(DbExpression,TypeUsage)
- uid: System.Data.Common.CommandTrees.DbIsOfExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbIsOfExpression
  nameWithType: DbIsOfExpression
  fullName: System.Data.Common.CommandTrees.DbIsOfExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsOfOnly(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.IsOfOnly(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(DbExpression,TypeUsage)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  nameWithType: DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
- uid: System.Data.Common.CommandTrees.DbProjectExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbProjectExpression
  nameWithType: DbProjectExpression
  fullName: System.Data.Common.CommandTrees.DbProjectExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression,TSelector>
  nameWithType: Func<DbExpression,DbExpression,TSelector>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TSelector
    name: TSelector
    nameWithType: TSelector
    fullName: TSelector
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)
  nameWithType: DbExpressionBuilder.Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)
- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<DbVariableReferenceExpression>
  nameWithType: IEnumerable<DbVariableReferenceExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbVariableReferenceExpression>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Data.Common.CommandTrees.DbVariableReferenceExpression>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbVariableReferenceExpression
    name: DbVariableReferenceExpression
    nameWithType: DbVariableReferenceExpression
    fullName: DbVariableReferenceExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Lambda(DbExpression,DbVariableReferenceExpression[])
  nameWithType: DbExpressionBuilder.Lambda(DbExpression,DbVariableReferenceExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(DbExpression,DbVariableReferenceExpression[])
- uid: System.Data.Common.CommandTrees.DbVariableReferenceExpression[]
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbVariableReferenceExpression
  nameWithType: DbVariableReferenceExpression
  fullName: System.Data.Common.CommandTrees.DbVariableReferenceExpression[]
  spec.csharp:
  - uid: System.Data.Common.CommandTrees.DbVariableReferenceExpression
    name: DbVariableReferenceExpression
    nameWithType: DbVariableReferenceExpression
    fullName: DbVariableReferenceExpression[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: LessThan(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.LessThan(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: LessThanOrEqual(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.LessThanOrEqual(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Like(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Like(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbLikeExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbLikeExpression
  nameWithType: DbLikeExpression
  fullName: System.Data.Common.CommandTrees.DbLikeExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Like(DbExpression,DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Like(DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(DbExpression,DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Limit(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Limit(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbLimitExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbLimitExpression
  nameWithType: DbLimitExpression
  fullName: System.Data.Common.CommandTrees.DbLimitExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Minus(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Minus(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Modulo(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Modulo(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Multiply(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Multiply(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)
  nameWithType: DbExpressionBuilder.Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)
- uid: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbRelationshipNavigationExpression
  nameWithType: DbRelationshipNavigationExpression
  fullName: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression
- uid: System.Data.Metadata.Edm.RelationshipEndMember
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: RelationshipEndMember
  nameWithType: RelationshipEndMember
  fullName: System.Data.Metadata.Edm.RelationshipEndMember
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType@,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Navigate(RelationshipType,String,String,DbExpression)
  nameWithType: DbExpressionBuilder.Navigate(RelationshipType,String,String,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(RelationshipType,String,String,DbExpression)
- uid: System.Data.Metadata.Edm.RelationshipType
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: RelationshipType
  nameWithType: RelationshipType
  fullName: System.Data.Metadata.Edm.RelationshipType
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Negate(DbExpression)
  nameWithType: DbExpressionBuilder.Negate(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: New(TypeUsage,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.New(TypeUsage,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(TypeUsage,IEnumerable<DbExpression>)
- uid: System.Data.Common.CommandTrees.DbNewInstanceExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbNewInstanceExpression
  nameWithType: DbNewInstanceExpression
  fullName: System.Data.Common.CommandTrees.DbNewInstanceExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: New(TypeUsage,DbExpression[])
  nameWithType: DbExpressionBuilder.New(TypeUsage,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(TypeUsage,DbExpression[])
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NewCollection(IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.NewCollection(IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(IEnumerable<DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NewCollection(DbExpression[])
  nameWithType: DbExpressionBuilder.NewCollection(DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(DbExpression[])
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NewEmptyCollection(TypeUsage)
  nameWithType: DbExpressionBuilder.NewEmptyCollection(TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(TypeUsage)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)
  nameWithType: DbExpressionBuilder.NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Not(DbExpression)
  nameWithType: DbExpressionBuilder.Not(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(DbExpression)
- uid: System.Data.Common.CommandTrees.DbNotExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbNotExpression
  nameWithType: DbNotExpression
  fullName: System.Data.Common.CommandTrees.DbNotExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NotEqual(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.NotEqual(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Null(TypeUsage)
  nameWithType: DbExpressionBuilder.Null(TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(TypeUsage)
- uid: System.Data.Common.CommandTrees.DbNullExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbNullExpression
  nameWithType: DbNullExpression
  fullName: System.Data.Common.CommandTrees.DbNullExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OfType(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.OfType(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(DbExpression,TypeUsage)
- uid: System.Data.Common.CommandTrees.DbOfTypeExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbOfTypeExpression
  nameWithType: DbOfTypeExpression
  fullName: System.Data.Common.CommandTrees.DbOfTypeExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OfTypeOnly(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.OfTypeOnly(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(DbExpression,TypeUsage)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Or(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Or(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbOrExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbOrExpression
  nameWithType: DbOrExpression
  fullName: System.Data.Common.CommandTrees.DbOrExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OrderBy(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.DbSortExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSortExpression
  nameWithType: DbSortExpression
  fullName: System.Data.Common.CommandTrees.DbSortExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  nameWithType: DbExpressionBuilder.OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OuterApply(DbExpressionBinding,DbExpressionBinding)
  nameWithType: DbExpressionBuilder.OuterApply(DbExpressionBinding,DbExpressionBinding)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(DbExpressionBinding,DbExpressionBinding)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Parameter(TypeUsage,String)
  nameWithType: DbExpressionBuilder.Parameter(TypeUsage,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(TypeUsage,String)
- uid: System.Data.Common.CommandTrees.DbParameterReferenceExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbParameterReferenceExpression
  nameWithType: DbParameterReferenceExpression
  fullName: System.Data.Common.CommandTrees.DbParameterReferenceExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Plus(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Plus(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Project(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.Project(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.EdmProperty)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Property(DbExpression,EdmProperty)
  nameWithType: DbExpressionBuilder.Property(DbExpression,EdmProperty)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,EdmProperty)
- uid: System.Data.Common.CommandTrees.DbPropertyExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbPropertyExpression
  nameWithType: DbPropertyExpression
  fullName: System.Data.Common.CommandTrees.DbPropertyExpression
- uid: System.Data.Metadata.Edm.EdmProperty
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EdmProperty
  nameWithType: EdmProperty
  fullName: System.Data.Metadata.Edm.EdmProperty
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.NavigationProperty)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Property(DbExpression,NavigationProperty)
  nameWithType: DbExpressionBuilder.Property(DbExpression,NavigationProperty)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,NavigationProperty)
- uid: System.Data.Metadata.Edm.NavigationProperty
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: NavigationProperty
  nameWithType: NavigationProperty
  fullName: System.Data.Metadata.Edm.NavigationProperty
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Property(DbExpression,RelationshipEndMember)
  nameWithType: DbExpressionBuilder.Property(DbExpression,RelationshipEndMember)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,RelationshipEndMember)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Property(DbExpression,String)
  nameWithType: DbExpressionBuilder.Property(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: RefFromKey(EntitySet,DbExpression)
  nameWithType: DbExpressionBuilder.RefFromKey(EntitySet,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(EntitySet,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: RefFromKey(EntitySet,DbExpression,EntityType)
  nameWithType: DbExpressionBuilder.RefFromKey(EntitySet,DbExpression,EntityType)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(EntitySet,DbExpression,EntityType)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Scan(EntitySetBase)
  nameWithType: DbExpressionBuilder.Scan(EntitySetBase)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(EntitySetBase)
- uid: System.Data.Common.CommandTrees.DbScanExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbScanExpression
  nameWithType: DbScanExpression
  fullName: System.Data.Common.CommandTrees.DbScanExpression
- uid: System.Data.Metadata.Edm.EntitySetBase
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntitySetBase
  nameWithType: EntitySetBase
  fullName: System.Data.Metadata.Edm.EntitySetBase
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Select(DbExpression,Func<DbExpression,TProjection>)
  nameWithType: DbExpressionBuilder.Select(DbExpression,Func<DbExpression,TProjection>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select(DbExpression,Func<DbExpression,TProjection>)
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,TProjection}
  parent: System
  isExternal: true
  name: Func<DbExpression,TProjection>
  nameWithType: Func<DbExpression,TProjection>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,TProjection>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Data.Common.CommandTrees.DbExpression,TProjection>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TProjection
    name: TProjection
    nameWithType: TProjection
    fullName: TProjection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: SelectMany(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  nameWithType: DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Skip(DbSortExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Skip(DbSortExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(DbSortExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbSkipExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSkipExpression
  nameWithType: DbSkipExpression
  fullName: System.Data.Common.CommandTrees.DbSkipExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)
  nameWithType: DbExpressionBuilder.Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)
- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<DbSortClause>
  nameWithType: IEnumerable<DbSortClause>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbSortClause>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Data.Common.CommandTrees.DbSortClause>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbSortClause
    name: DbSortClause
    nameWithType: DbSortClause
    fullName: DbSortClause
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Sort(DbExpressionBinding,IEnumerable<DbSortClause>)
  nameWithType: DbExpressionBuilder.Sort(DbExpressionBinding,IEnumerable<DbSortClause>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(DbExpressionBinding,IEnumerable<DbSortClause>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Take(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Take(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ToSortClause(DbExpression)
  nameWithType: DbExpressionBuilder.ToSortClause(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(DbExpression)
- uid: System.Data.Common.CommandTrees.DbSortClause
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSortClause
  nameWithType: DbSortClause
  fullName: System.Data.Common.CommandTrees.DbSortClause
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ToSortClause(DbExpression,String)
  nameWithType: DbExpressionBuilder.ToSortClause(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(DbExpression,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ToSortClauseDescending(DbExpression)
  nameWithType: DbExpressionBuilder.ToSortClauseDescending(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ToSortClauseDescending(DbExpression,String)
  nameWithType: DbExpressionBuilder.ToSortClauseDescending(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(DbExpression,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: TreatAs(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.TreatAs(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(DbExpression,TypeUsage)
- uid: System.Data.Common.CommandTrees.DbTreatExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbTreatExpression
  nameWithType: DbTreatExpression
  fullName: System.Data.Common.CommandTrees.DbTreatExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: "True"
  nameWithType: DbExpressionBuilder.True
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: UnaryMinus(DbExpression)
  nameWithType: DbExpressionBuilder.UnaryMinus(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Union(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Union(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: UnionAll(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.UnionAll(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbUnionAllExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbUnionAllExpression
  nameWithType: DbUnionAllExpression
  fullName: System.Data.Common.CommandTrees.DbUnionAllExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Variable(TypeUsage,String)
  nameWithType: DbExpressionBuilder.Variable(TypeUsage,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(TypeUsage,String)
- uid: System.Data.Common.CommandTrees.DbVariableReferenceExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbVariableReferenceExpression
  nameWithType: DbVariableReferenceExpression
  fullName: System.Data.Common.CommandTrees.DbVariableReferenceExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Where(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.Where(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(DbExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Aggregate
  nameWithType: DbExpressionBuilder.Aggregate
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: AggregateDistinct
  nameWithType: DbExpressionBuilder.AggregateDistinct
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: All
  nameWithType: DbExpressionBuilder.All
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: And
  nameWithType: DbExpressionBuilder.And
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Any
  nameWithType: DbExpressionBuilder.Any
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: As
  nameWithType: DbExpressionBuilder.As
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Bind
  nameWithType: DbExpressionBuilder.Bind
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: BindAs
  nameWithType: DbExpressionBuilder.BindAs
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Case
  nameWithType: DbExpressionBuilder.Case
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CastTo
  nameWithType: DbExpressionBuilder.CastTo
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Constant
  nameWithType: DbExpressionBuilder.Constant
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CreateRef
  nameWithType: DbExpressionBuilder.CreateRef
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CrossApply
  nameWithType: DbExpressionBuilder.CrossApply
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CrossJoin
  nameWithType: DbExpressionBuilder.CrossJoin
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Deref
  nameWithType: DbExpressionBuilder.Deref
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Distinct
  nameWithType: DbExpressionBuilder.Distinct
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Divide
  nameWithType: DbExpressionBuilder.Divide
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Element
  nameWithType: DbExpressionBuilder.Element
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Equal
  nameWithType: DbExpressionBuilder.Equal
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Except
  nameWithType: DbExpressionBuilder.Except
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Exists
  nameWithType: DbExpressionBuilder.Exists
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: "False"
  nameWithType: DbExpressionBuilder.False
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Filter
  nameWithType: DbExpressionBuilder.Filter
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: FullOuterJoin
  nameWithType: DbExpressionBuilder.FullOuterJoin
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GetEntityRef
  nameWithType: DbExpressionBuilder.GetEntityRef
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GetRefKey
  nameWithType: DbExpressionBuilder.GetRefKey
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GreaterThan
  nameWithType: DbExpressionBuilder.GreaterThan
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GreaterThanOrEqual
  nameWithType: DbExpressionBuilder.GreaterThanOrEqual
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GroupBind
  nameWithType: DbExpressionBuilder.GroupBind
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GroupBindAs
  nameWithType: DbExpressionBuilder.GroupBindAs
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GroupBy
  nameWithType: DbExpressionBuilder.GroupBy
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: InnerJoin
  nameWithType: DbExpressionBuilder.InnerJoin
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Intersect
  nameWithType: DbExpressionBuilder.Intersect
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Invoke
  nameWithType: DbExpressionBuilder.Invoke
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsEmpty
  nameWithType: DbExpressionBuilder.IsEmpty
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsNull
  nameWithType: DbExpressionBuilder.IsNull
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsOf
  nameWithType: DbExpressionBuilder.IsOf
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsOfOnly
  nameWithType: DbExpressionBuilder.IsOfOnly
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Join
  nameWithType: DbExpressionBuilder.Join
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join<TSelector>*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Join<TSelector>
  nameWithType: DbExpressionBuilder.Join<TSelector>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Lambda
  nameWithType: DbExpressionBuilder.Lambda
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: LeftOuterJoin
  nameWithType: DbExpressionBuilder.LeftOuterJoin
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: LessThan
  nameWithType: DbExpressionBuilder.LessThan
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: LessThanOrEqual
  nameWithType: DbExpressionBuilder.LessThanOrEqual
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Like
  nameWithType: DbExpressionBuilder.Like
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Limit
  nameWithType: DbExpressionBuilder.Limit
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Minus
  nameWithType: DbExpressionBuilder.Minus
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Modulo
  nameWithType: DbExpressionBuilder.Modulo
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Multiply
  nameWithType: DbExpressionBuilder.Multiply
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Navigate
  nameWithType: DbExpressionBuilder.Navigate
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Negate
  nameWithType: DbExpressionBuilder.Negate
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: New
  nameWithType: DbExpressionBuilder.New
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NewCollection
  nameWithType: DbExpressionBuilder.NewCollection
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NewEmptyCollection
  nameWithType: DbExpressionBuilder.NewEmptyCollection
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NewRow
  nameWithType: DbExpressionBuilder.NewRow
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Not
  nameWithType: DbExpressionBuilder.Not
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NotEqual
  nameWithType: DbExpressionBuilder.NotEqual
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: "Null"
  nameWithType: DbExpressionBuilder.Null
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OfType
  nameWithType: DbExpressionBuilder.OfType
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OfTypeOnly
  nameWithType: DbExpressionBuilder.OfTypeOnly
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Or
  nameWithType: DbExpressionBuilder.Or
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OrderBy
  nameWithType: DbExpressionBuilder.OrderBy
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OrderByDescending
  nameWithType: DbExpressionBuilder.OrderByDescending
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OuterApply
  nameWithType: DbExpressionBuilder.OuterApply
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Parameter
  nameWithType: DbExpressionBuilder.Parameter
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Plus
  nameWithType: DbExpressionBuilder.Plus
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Project
  nameWithType: DbExpressionBuilder.Project
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Property
  nameWithType: DbExpressionBuilder.Property
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: RefFromKey
  nameWithType: DbExpressionBuilder.RefFromKey
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Scan
  nameWithType: DbExpressionBuilder.Scan
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select<TProjection>*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Select<TProjection>
  nameWithType: DbExpressionBuilder.Select<TProjection>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: SelectMany
  nameWithType: DbExpressionBuilder.SelectMany
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany<TSelector>*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: SelectMany<TSelector>
  nameWithType: DbExpressionBuilder.SelectMany<TSelector>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Skip
  nameWithType: DbExpressionBuilder.Skip
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Sort
  nameWithType: DbExpressionBuilder.Sort
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Take
  nameWithType: DbExpressionBuilder.Take
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ThenBy
  nameWithType: DbExpressionBuilder.ThenBy
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ThenByDescending
  nameWithType: DbExpressionBuilder.ThenByDescending
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ToSortClause
  nameWithType: DbExpressionBuilder.ToSortClause
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ToSortClauseDescending
  nameWithType: DbExpressionBuilder.ToSortClauseDescending
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: TreatAs
  nameWithType: DbExpressionBuilder.TreatAs
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: "True"
  nameWithType: DbExpressionBuilder.True
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: UnaryMinus
  nameWithType: DbExpressionBuilder.UnaryMinus
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Union
  nameWithType: DbExpressionBuilder.Union
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: UnionAll
  nameWithType: DbExpressionBuilder.UnionAll
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Variable
  nameWithType: DbExpressionBuilder.Variable
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Where
  nameWithType: DbExpressionBuilder.Where
