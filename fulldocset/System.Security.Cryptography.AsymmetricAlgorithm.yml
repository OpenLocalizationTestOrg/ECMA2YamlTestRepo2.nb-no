### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  id: AsymmetricAlgorithm
  children:
  - System.Security.Cryptography.AsymmetricAlgorithm.#ctor
  - System.Security.Cryptography.AsymmetricAlgorithm.Clear
  - System.Security.Cryptography.AsymmetricAlgorithm.Create
  - System.Security.Cryptography.AsymmetricAlgorithm.Create(System.String)
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)
  - System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm
  - System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)
  langs:
  - csharp
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
  type: Class
  summary: "Representerer abstrakt basisklasse som må arver fra alle implementeringer av asymmetriske algoritmer."
  remarks: "Asymmetriske kryptografiske algoritmer, også kalt fellesnøkkel algoritmer, krever at både avsenderen og mottakeren beholder to relaterte nøkler: en privat nøkkel og en fellesnøkkel. Begge nøkler er unike for enheten. Fellesnøkkelen kan bli gjort tilgjengelig for alle; Denne nøkkelen brukes til kode data som er sendt til en mottaker. Den private nøkkelen må holdes private av mottakeren; Denne nøkkelen brukes til dekoding meldinger som ble kodet ved bruk av fellesnøkkel for den mottakeren. Den <xref:System.Security.Cryptography.RSACryptoServiceProvider>klassen er en implementering av en fellesnøkkel algoritme.</xref:System.Security.Cryptography.RSACryptoServiceProvider> En detaljert beskrivelse av fellesnøkkel kryptering og algoritmer i avsnittet &quot;Fellesnøkkel kryptering&quot; i [kryptografitjenester](~/add/includes/ajax-current-ext-md.md). Du finner informasjon om hvordan du bruker verktøyet sterkt navn (Sn.exe) til å opprette nøkkelpar [slik: opprette et felles-Private nøkkelen nøkkelpar](~/add/includes/ajax-current-ext-md.md).       Du kan bruke fellesnøkkel systemer for å utgjøre signaturer. Signaturer brukes til å beskytte integriteten til data. For eksempel for å bruke en fellesnøkkel systemet til å signere en melding, gjelder avsenderen først en hash-funksjonen meldingen for å lage et meldingssammendrag. Avsenderen krypterer deretter meldingsgodkjenningen med avsenderens private nøkkelen til å opprette avsenderens personlig signatur. Etter at du mottar meldingen og signaturen, mottakeren dekrypterer signaturen ved bruk av fellesnøkkel for avsenderens gjenopprette meldingsgodkjenningen og hashes meldingen med den samme hash-algoritmen som brukes av avsenderen. Hvis meldingsgodkjenningen mottakeren beregner samsvarer med meldingsgodkjenningen mottatt fra avsenderen, kan mottakeren anta at meldingen ikke ble endret mens du er i transitt. Legg merke til at alle kan bekrefte en signatur fordi avsenderens fellesnøkkelen er felles kunnskap. Denne metoden beholder ikke PFS for meldingen. for å være hemmelige meldingen, må det også krypteres.       .NET Framework gir følgende klasser som implementerer algoritmer for digital signatur: <xref:System.Security.Cryptography.DSACryptoServiceProvider>, <xref:System.Security.Cryptography.RSACryptoServiceProvider>, <xref:System.Security.Cryptography.ECDsa>(basisklasse), og <xref:System.Security.Cryptography.ECDsaCng>.</xref:System.Security.Cryptography.ECDsaCng> </xref:System.Security.Cryptography.ECDsa> </xref:System.Security.Cryptography.RSACryptoServiceProvider> </xref:System.Security.Cryptography.DSACryptoServiceProvider>       Den <xref:System.Security.Cryptography>navneområdet gir konkrete klasser for <xref:System.Security.Cryptography.RSA>og <xref:System.Security.Cryptography.DSA>bare.</xref:System.Security.Cryptography.DSA> </xref:System.Security.Cryptography.RSA> </xref:System.Security.Cryptography>       For å lære hvordan du bruker RSA-algoritmen til å kryptere og dekryptere XML-data, opprette og kontroller XML-signaturer, kan du se disse artiklene:- [slik: kryptere XML-elementer med asymmetriske nøkler](~/add/includes/ajax-current-ext-md.md)      -   [slik: dekryptere XML-elementer med asymmetriske nøkler](~/add/includes/ajax-current-ext-md.md)      -   [slik: Logg XML-dokumenter med signaturer](~/add/includes/ajax-current-ext-md.md)      -   [slik: bekrefte den digitale signaturer av XML-dokumenter](~/add/includes/ajax-current-ext-md.md)"
  example:
  - "The following code example demonstrates how to implement a custom asymmetric algorithm inherited from the AsymmetricAlgorithm class.  An additional class is provided to demonstrate how to use the custom class.  \n  \n [!code-cs[System.Security.Cryptography.AsymmetricAlgorithm#2](~/add/codesnippet/csharp/t-system.security.crypto_0_1.cs)]\n [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#2](~/add/codesnippet/cpp/t-system.security.crypto_0_1.cpp)]\n [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#2](~/add/codesnippet/visualbasic/t-system.security.crypto_0_1.vb)]  \n  \n Here's an additional class that demonstrates how to use the custom class.  \n  \n [!code-cs[System.Security.Cryptography.AsymmetricAlgorithm#3](~/add/codesnippet/csharp/t-system.security.crypto_0_2.cs)]\n [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#3](~/add/codesnippet/visualbasic/t-system.security.crypto_0_2.vb)]\n [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#3](~/add/codesnippet/cpp/t-system.security.crypto_0_2.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class AsymmetricAlgorithm : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricAlgorithm.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: AsymmetricAlgorithm()
  nameWithType: AsymmetricAlgorithm.AsymmetricAlgorithm()
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.AsymmetricAlgorithm()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> klasse."
  remarks: "Du kan ikke opprette en forekomst av en abstrakt klasse. Programmet kode oppretter en ny forekomst av en avledet klasse. Den <xref:System.Security.Cryptography.RSACryptoServiceProvider>og <xref:System.Security.Cryptography.DSACryptoServiceProvider>klasser er bare støttes for øyeblikket implementeringer.</xref:System.Security.Cryptography.DSACryptoServiceProvider> </xref:System.Security.Cryptography.RSACryptoServiceProvider>"
  syntax:
    content: protected AsymmetricAlgorithm ();
    parameters: []
  overload: System.Security.Cryptography.AsymmetricAlgorithm.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Implementeringen av den utledede klassen er ikke gyldig."
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Clear
  id: Clear
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: Clear()
  nameWithType: AsymmetricAlgorithm.Clear()
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Frigir alle ressursene som brukes av den <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> klasse."
  remarks: "Denne metoden er en enkel kall til den <xref:System.IDisposable.Dispose%2A?displayProperty=fullName>metoden.</xref:System.IDisposable.Dispose%2A?displayProperty=fullName>       Kaller `Dispose` tillater ressursene som brukes av den <xref:System.Security.Cryptography.AsymmetricAlgorithm>klassen for å være tildeles på nytt til andre formål.</xref:System.Security.Cryptography.AsymmetricAlgorithm> For mer informasjon om `Dispose`, se [Rydder opp uforvaltede ressurser](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to call the Clear method to release the resources of the current `customCrypto` object. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.  \n  \n [!code-cs[System.Security.Cryptography.AsymmetricAlgorithm#1](~/add/codesnippet/csharp/m-system.security.crypto_101_1.cs)]\n [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#1](~/add/codesnippet/visualbasic/m-system.security.crypto_101_1.vb)]\n [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#1](~/add/codesnippet/cpp/m-system.security.crypto_101_1.cpp)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Security.Cryptography.AsymmetricAlgorithm.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Create
  id: Create
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: Create()
  nameWithType: AsymmetricAlgorithm.Create()
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Oppretter et kryptografisk objekt brukes til å utføre den asymmetriske algoritmen."
  remarks: ''
  example:
  - "The following code example demonstrates how to implement the Create method in an extended class. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.  \n  \n [!code-cs[System.Security.Cryptography.AsymmetricAlgorithm#11](~/add/codesnippet/csharp/m-system.security.crypto_87_1.cs)]\n [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#11](~/add/codesnippet/cpp/m-system.security.crypto_87_1.cpp)]\n [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#11](~/add/codesnippet/visualbasic/m-system.security.crypto_87_1.vb)]"
  syntax:
    content: public static System.Security.Cryptography.AsymmetricAlgorithm Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "En ny <xref href=&quot;System.Security.Cryptography.RSACryptoServiceProvider&quot;> </xref> serverforekomsten, med mindre standardinnstillingene er endret med den [ &lt;cryptoClass&gt; elementet](../Topic/%3CcryptoClass%3E%20Element.md)."
  overload: System.Security.Cryptography.AsymmetricAlgorithm.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: Create(String)
  nameWithType: AsymmetricAlgorithm.Create(String)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Oppretter en forekomst av den angitte implementeringen av en asymmetrisk algoritmen."
  remarks: ''
  example:
  - "The following code example demonstrates how to implement the Create method in an extended class. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.  \n  \n [!code-cs[System.Security.Cryptography.AsymmetricAlgorithm#12](~/add/codesnippet/csharp/m-system.security.crypto_118_1.cs)]\n [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#12](~/add/codesnippet/cpp/m-system.security.crypto_118_1.cpp)]\n [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#12](~/add/codesnippet/visualbasic/m-system.security.crypto_118_1.vb)]"
  syntax:
    content: public static System.Security.Cryptography.AsymmetricAlgorithm Create (string algName);
    parameters:
    - id: algName
      type: System.String
      description: "Den asymmetriske Algoritmeimplementeringen skal brukes. Tabellen nedenfor viser gyldige verdier for den `algName` parameteren og algoritmer de er tilordnet til.       <table><thead><tr><th> Verdien for parameteren       </th><th> Implementerer       </th></tr></thead><tbody><tr><td> System.Security.Cryptography.AsymmetricAlgorithm       </td><td><xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;></xref></td></tr><tr><td> RSA       </td><td><xref href=&quot;System.Security.Cryptography.RSA&quot;></xref></td></tr><tr><td> System.Security.Cryptography.RSA       </td><td><xref href=&quot;System.Security.Cryptography.RSA&quot;></xref></td></tr><tr><td> DSA       </td><td><xref href=&quot;System.Security.Cryptography.DSA&quot;></xref></td></tr><tr><td> System.Security.Cryptography.DSA       </td><td><xref href=&quot;System.Security.Cryptography.DSA&quot;></xref></td></tr><tr><td> ECDsa       </td><td><xref href=&quot;System.Security.Cryptography.ECDsa&quot;></xref></td></tr><tr><td> ECDsaCng       </td><td><xref href=&quot;System.Security.Cryptography.ECDsaCng&quot;></xref></td></tr><tr><td> System.Security.Cryptography.ECDsaCng       </td><td><xref href=&quot;System.Security.Cryptography.ECDsaCng&quot;></xref></td></tr><tr><td> ECDH       </td><td><xref href=&quot;System.Security.Cryptography.ECDiffieHellman&quot;></xref></td></tr><tr><td> ECDiffieHellman       </td><td><xref href=&quot;System.Security.Cryptography.ECDiffieHellman&quot;></xref></td></tr><tr><td> ECDiffieHellmanCng       </td><td><xref href=&quot;System.Security.Cryptography.ECDiffieHellmanCng&quot;></xref></td></tr><tr><td> System.Security.Cryptography.ECDiffieHellmanCng       </td><td><xref href=&quot;System.Security.Cryptography.ECDiffieHellmanCng&quot;></xref></td></tr></tbody></table>"
    return:
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "En ny forekomst av den angitte asymmetriske Algoritmeimplementeringen."
  overload: System.Security.Cryptography.AsymmetricAlgorithm.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  id: Dispose
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: Dispose()
  nameWithType: AsymmetricAlgorithm.Dispose()
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Frigir alle ressursene som brukes av den gjeldende forekomsten av den <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> klasse."
  remarks: "Kall `Dispose` når du er ferdig med <xref:System.Security.Cryptography.AsymmetricAlgorithm>.</xref:System.Security.Cryptography.AsymmetricAlgorithm> Den `Dispose` metoden forlater den <xref:System.Security.Cryptography.AsymmetricAlgorithm>i en ubrukelig tilstand.</xref:System.Security.Cryptography.AsymmetricAlgorithm> Etter kall `Dispose`, må du frigi alle referanser til den <xref:System.Security.Cryptography.AsymmetricAlgorithm>Slik saneringsoppsamlingen kan gjenvinne minnet som den <xref:System.Security.Cryptography.AsymmetricAlgorithm>ble bruker.</xref:System.Security.Cryptography.AsymmetricAlgorithm> </xref:System.Security.Cryptography.AsymmetricAlgorithm>       Hvis du vil ha mer informasjon, se [Rydder opp uforvaltede ressurser](~/add/includes/ajax-current-ext-md.md) og [implementere metoden fjerne](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Alltid kall `Dispose` før du slipper siste referanse til <xref:System.Security.Cryptography.AsymmetricAlgorithm>.</xref:System.Security.Cryptography.AsymmetricAlgorithm> Ellers ressurser den bruker vil ikke bli frigjort før saneringsoppsamling kall av <xref:System.Security.Cryptography.AsymmetricAlgorithm>objektets `Finalize` metode.</xref:System.Security.Cryptography.AsymmetricAlgorithm>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.Cryptography.AsymmetricAlgorithm.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: AsymmetricAlgorithm.Dispose(Boolean)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Frigir uforvaltede ressursene som brukes av den <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> klasse og frigir eventuelt administrerte ressurser."
  remarks: "Denne metoden kalles av offentlig `Dispose()` metoden og `Finalize` metoden. `Dispose()`Aktiverer den beskyttede `Dispose(Boolean)` metoden med den `disposing` parameteren satt til `true`. `Finalize`aktiverer `Dispose` med `disposing` satt til `false`.       Når den `disposing` parameteren er `true`, denne metoden Frigjør alle ressurser holdes av administrerte objekter som denne <xref:System.Security.Cryptography.AsymmetricAlgorithm>referanser.</xref:System.Security.Cryptography.AsymmetricAlgorithm> Denne metoden starter den `Dispose()` metode for hver referert objekt."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>å frigjøre både administrerte og uforvaltede ressurser. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> frigi bare uforvaltede ressurser."
  overload: System.Security.Cryptography.AsymmetricAlgorithm.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)
  id: FromXmlString(System.String)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: FromXmlString(String)
  nameWithType: AsymmetricAlgorithm.FromXmlString(String)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Når overstyrt i en avledet klasse, Rekonstruerer en <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> objektet fra en XML-streng. Ellers oppstår det et <xref:System.NotImplementedException>.</xref:System.NotImplementedException>"
  remarks: ''
  example:
  - "The following code example demonstrates how to implement the FromXmlString method to parse the specified XML string to populate the current <xref:System.Security.Cryptography.CspParameters> object. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.  \n  \n [!code-cs[System.Security.Cryptography.AsymmetricAlgorithm#4](~/add/codesnippet/csharp/m-system.security.crypto_86_1.cs)]\n [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#4](~/add/codesnippet/cpp/m-system.security.crypto_86_1.cpp)]\n [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#4](~/add/codesnippet/visualbasic/m-system.security.crypto_86_1.vb)]"
  syntax:
    content: public virtual void FromXmlString (string xmlString);
    parameters:
    - id: xmlString
      type: System.String
      description: "XML-strengen som skal brukes til Bygg opp den <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> objektet."
  overload: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm
  id: KeyExchangeAlgorithm
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: KeyExchangeAlgorithm
  nameWithType: AsymmetricAlgorithm.KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Når overstyrt i en avledet klasse, henter navnet på nøkkelens utvekslingsnøkkel-algoritmen. Ellers oppstår det et <xref:System.NotImplementedException>.</xref:System.NotImplementedException>"
  remarks: ''
  example:
  - "The following code example demonstrates how to override the KeyExchangeAlgorithm property to return the name for the key exchange algorithm. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.  \n  \n [!code-cs[System.Security.Cryptography.AsymmetricAlgorithm#6](~/add/codesnippet/csharp/p-system.security.crypto_83_1.cs)]\n [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#6](~/add/codesnippet/cpp/p-system.security.crypto_83_1.cpp)]\n [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#6](~/add/codesnippet/visualbasic/p-system.security.crypto_83_1.vb)]"
  syntax:
    content: public virtual string KeyExchangeAlgorithm { get; }
    return:
      type: System.String
      description: "Navnet på nøkkelens utvekslingsnøkkel-algoritmen."
  overload: System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  id: KeySize
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: KeySize
  nameWithType: AsymmetricAlgorithm.KeySize
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Henter eller angir størrelsen, i biter, med nøkkel modulus brukes av den asymmetriske algoritmen."
  remarks: "Ugyldig nøkkel størrelsene angis av bestemt implementeringen av den asymmetriske algoritmen og er oppført i den <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A>egenskapen.</xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A>"
  example:
  - "The following code example demonstrates how to override the KeySize property to verify that it falls within the range identified in the local `keySizes` member variable. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.  \n  \n [!code-cs[System.Security.Cryptography.AsymmetricAlgorithm#9](~/add/codesnippet/csharp/p-system.security.crypto_112_1.cs)]\n [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#9](~/add/codesnippet/cpp/p-system.security.crypto_112_1.cpp)]\n [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#9](~/add/codesnippet/visualbasic/p-system.security.crypto_112_1.vb)]"
  syntax:
    content: public virtual int KeySize { get; set; }
    return:
      type: System.Int32
      description: "Størrelsen, i biter brukes av algoritmen asymmetriske nøkkelen modulus."
  overload: System.Security.Cryptography.AsymmetricAlgorithm.KeySize*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Modulstørrelsen er ugyldig."
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  id: KeySizeValue
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: KeySizeValue
  nameWithType: AsymmetricAlgorithm.KeySizeValue
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Representerer størrelsen, i biter brukes av algoritmen asymmetriske nøkkelen modulus."
  remarks: "Ugyldig nøkkel størrelsene angis av bestemt implementeringen av den asymmetriske algoritmen og er oppført i den <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A>egenskapen.</xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A>       Dette feltet er tilgjengelig via den <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeySize%2A>egenskapen.</xref:System.Security.Cryptography.AsymmetricAlgorithm.KeySize%2A>"
  syntax:
    content: protected int KeySizeValue;
    return:
      type: System.Int32
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  id: LegalKeySizes
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: LegalKeySizes
  nameWithType: AsymmetricAlgorithm.LegalKeySizes
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Henter key størrelsene som støttes av den asymmetriske algoritmen."
  remarks: "Den asymmetriske algoritmen støtter bare key størrelser som samsvarer med en oppføring i denne matrisen."
  example:
  - "The following code example demonstrates how to call the LegalKeySizes property to retrieve the <xref:System.Security.Cryptography.KeySizes.MinSize%2A>, <xref:System.Security.Cryptography.KeySizes.MaxSize%2A>, and <xref:System.Security.Cryptography.KeySizes.SkipSize%2A> properties. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.  \n  \n [!code-cs[System.Security.Cryptography.AsymmetricAlgorithm#10](~/add/codesnippet/csharp/p-system.security.crypto_30_1.cs)]\n [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#10](~/add/codesnippet/visualbasic/p-system.security.crypto_30_1.vb)]\n [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#10](~/add/codesnippet/cpp/p-system.security.crypto_30_1.cpp)]"
  syntax:
    content: public virtual System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }
    return:
      type: System.Security.Cryptography.KeySizes[]
      description: "En matrise som inneholder key størrelsene støttes av den asymmetriske algoritmen."
  overload: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  id: LegalKeySizesValue
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: LegalKeySizesValue
  nameWithType: AsymmetricAlgorithm.LegalKeySizesValue
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Angir nøkkelen størrelsene som støttes av den asymmetriske algoritmen."
  remarks: "Den asymmetriske algoritmen støtter bare key størrelser som samsvarer med en oppføring i denne matrisen.       Dette feltet er tilgjengelig via den <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A>egenskapen.</xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A>"
  syntax:
    content: protected System.Security.Cryptography.KeySizes[] LegalKeySizesValue;
    return:
      type: System.Security.Cryptography.KeySizes[]
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: SignatureAlgorithm
  nameWithType: AsymmetricAlgorithm.SignatureAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Henter navnet på signaturalgoritmen når implementert i en avledet klasse. Ellers oppstår det et <xref:System.NotImplementedException>.</xref:System.NotImplementedException> alltid"
  remarks: ''
  example:
  - "The following code example demonstrates how to override the SignatureAlgorithm property to return the name of the signature algorithm. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.  \n  \n [!code-cs[System.Security.Cryptography.AsymmetricAlgorithm#7](~/add/codesnippet/csharp/p-system.security.crypto_43_1.cs)]\n [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#7](~/add/codesnippet/cpp/p-system.security.crypto_43_1.cpp)]\n [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#7](~/add/codesnippet/visualbasic/p-system.security.crypto_43_1.vb)]"
  syntax:
    content: public virtual string SignatureAlgorithm { get; }
    return:
      type: System.String
      description: "Navnet på signaturalgoritmen."
  overload: System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)
  id: ToXmlString(System.Boolean)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: ToXmlString(Boolean)
  nameWithType: AsymmetricAlgorithm.ToXmlString(Boolean)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Når overstyrt i en avledet klasse, oppretter og returnerer en XML-streng som representerer gjeldende <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> objektet. Ellers oppstår det et <xref:System.NotImplementedException>.</xref:System.NotImplementedException>"
  remarks: ''
  example:
  - "The following code example demonstrates how to call the ToXmlString method to create an XML representation of the parameters in the current <xref:System.Security.Cryptography.AsymmetricAlgorithm> object. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.  \n  \n [!code-cs[System.Security.Cryptography.AsymmetricAlgorithm#5](~/add/codesnippet/csharp/m-system.security.crypto_109_1.cs)]\n [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#5](~/add/codesnippet/cpp/m-system.security.crypto_109_1.cpp)]\n [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#5](~/add/codesnippet/visualbasic/m-system.security.crypto_109_1.vb)]"
  syntax:
    content: public virtual string ToXmlString (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>inkludere private parametere; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Et XML-strengen kodingen for gjeldende <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> objektet."
  overload: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.AsymmetricAlgorithm.#ctor
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: AsymmetricAlgorithm()
  nameWithType: AsymmetricAlgorithm.AsymmetricAlgorithm()
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.AsymmetricAlgorithm()
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Clear
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: Clear()
  nameWithType: AsymmetricAlgorithm.Clear()
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Clear()
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Create
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: Create()
  nameWithType: AsymmetricAlgorithm.Create()
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Create()
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Create(System.String)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: Create(String)
  nameWithType: AsymmetricAlgorithm.Create(String)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Create(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: Dispose()
  nameWithType: AsymmetricAlgorithm.Dispose()
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Dispose()
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: AsymmetricAlgorithm.Dispose(Boolean)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: FromXmlString(String)
  nameWithType: AsymmetricAlgorithm.FromXmlString(String)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(String)
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: AsymmetricAlgorithm.KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: KeySize
  nameWithType: AsymmetricAlgorithm.KeySize
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeySize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: KeySizeValue
  nameWithType: AsymmetricAlgorithm.KeySizeValue
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
- uid: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: LegalKeySizes
  nameWithType: AsymmetricAlgorithm.LegalKeySizes
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
- uid: System.Security.Cryptography.KeySizes[]
  parent: System.Security.Cryptography
  isExternal: false
  name: KeySizes
  nameWithType: KeySizes
  fullName: System.Security.Cryptography.KeySizes[]
  spec.csharp:
  - uid: System.Security.Cryptography.KeySizes
    name: KeySizes
    nameWithType: KeySizes
    fullName: KeySizes[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: LegalKeySizesValue
  nameWithType: AsymmetricAlgorithm.LegalKeySizesValue
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
- uid: System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: AsymmetricAlgorithm.SignatureAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm
- uid: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: ToXmlString(Boolean)
  nameWithType: AsymmetricAlgorithm.ToXmlString(Boolean)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(Boolean)
- uid: System.Security.Cryptography.AsymmetricAlgorithm.#ctor*
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm.AsymmetricAlgorithm
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Clear*
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: Clear
  nameWithType: AsymmetricAlgorithm.Clear
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Create*
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: Create
  nameWithType: AsymmetricAlgorithm.Create
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose*
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: Dispose
  nameWithType: AsymmetricAlgorithm.Dispose
- uid: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString*
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: FromXmlString
  nameWithType: AsymmetricAlgorithm.FromXmlString
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm*
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: AsymmetricAlgorithm.KeyExchangeAlgorithm
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeySize*
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: KeySize
  nameWithType: AsymmetricAlgorithm.KeySize
- uid: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes*
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: LegalKeySizes
  nameWithType: AsymmetricAlgorithm.LegalKeySizes
- uid: System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm*
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: AsymmetricAlgorithm.SignatureAlgorithm
- uid: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString*
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: ToXmlString
  nameWithType: AsymmetricAlgorithm.ToXmlString
