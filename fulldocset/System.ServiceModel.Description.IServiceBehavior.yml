### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.IServiceBehavior
  id: IServiceBehavior
  children:
  - System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  langs:
  - csharp
  name: IServiceBehavior
  nameWithType: IServiceBehavior
  fullName: System.ServiceModel.Description.IServiceBehavior
  type: Interface
  summary: "Inneholder en metode for å endre eller sette inn tilpassede utvidelser på tvers av en hele tjeneste, inkludert de <xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref>."
  remarks: "Implementere IServiceBehavior for å endre, undersøke eller utvide deler av tjenesteomfattende kjøring på programnivå:-Bruk av <xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A>metode for å endre kjøretid egenskapsverdier eller sette inn egendefinert utvidelse objekter som feil behandlingsprogrammer, melding eller parameteren interceptors, utvidelser for sikkerhet og andre egendefinert utvidelse-objekter.</xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A>      -Bruk av <xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A>metode for å undersøke beskrivelsen før [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] bygger tjenesten kjøres for å bekrefte at det kan kjøres riktig.</xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A>      -Bruk av <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A>metoden skal sendes til et bindingselement den egendefinerte informasjonen for tjenesten slik at den støtter tjenesten på riktig måte.</xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A>       IServiceBehavior objekter kan gjøre bruk av noen av disse metodene, men ofte bare én er viktig. i slike tilfeller ubrukte metodene til å returnere en verdi.      > [!NOTE] > Alle metodene for IServiceBehavior sende <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName>og <xref:System.ServiceModel.ServiceHostBase?displayProperty=fullName>objekter som en parametere.</xref:System.ServiceModel.ServiceHostBase?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName> Den <xref:System.ServiceModel.Description.ServiceDescription>parameteren er for gjennomgang bare; hvis du endrer disse objektene kjøring virkemåten er udefinert.</xref:System.ServiceModel.Description.ServiceDescription>       Hvis du vil utføre tilpassing oppgave den er beregnet, IServiceBehavior-objektet må legges til i <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A>egenskapen før bygging av kjøretiden service.</xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A> Tre måter å gjøre dette: – programmatisk Legg til egendefinert tjenestevirkemåten til den <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A>egenskapen før punktet der den <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName>-metoden på den <xref:System.ServiceModel.ServiceHost?displayProperty=fullName>objektet.</xref:System.ServiceModel.ServiceHost?displayProperty=fullName> </xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A>      -Opprett en egendefinert attributt som implementerer IServiceBehavior og bruke den til å merke Tjenesteklasser som skal endres. Når en <xref:System.ServiceModel.ServiceHost>objektet bygges, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] bruker gjenspeiling til å oppdage attributter i tjenestetypen.</xref:System.ServiceModel.ServiceHost> Hvis noen attributter implementerer IServiceBehavior, legges de til virkemåtesamlingen <xref:System.ServiceModel.Description.ServiceDescription>.</xref:System.ServiceModel.Description.ServiceDescription>      -Utvide den <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=fullName>klassen for å støtte angivelse av virkemåten i et program eller maskinen konfigurasjonsfilen.</xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=fullName> Se eksempel for mer informasjon.       Eksempler på tjenesten virkemåter i [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] inkluderer den <xref:System.ServiceModel.ServiceBehaviorAttribute>attributtet i <xref:System.ServiceModel.Description.ServiceThrottlingBehavior?displayProperty=fullName>, <xref:System.ServiceModel.Description.ServiceDebugBehavior?displayProperty=fullName>og <xref:System.ServiceModel.Description.ServiceMetadataBehavior?displayProperty=fullName>virkemåte.</xref:System.ServiceModel.Description.ServiceMetadataBehavior?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceDebugBehavior?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceThrottlingBehavior?displayProperty=fullName> </xref:System.ServiceModel.ServiceBehaviorAttribute>"
  example:
  - "The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application. In this example, the error handler catches all exceptions and converts them into a custom `GreetingFault` SOAP fault that is then returned to the client.  \n  \n The following IServiceBehavior implementation adds no binding parameter objects, adds the custom <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=fullName> object to each <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=fullName> property, and validates that each operation of the service to which the service behavior is applied and has a <xref:System.ServiceModel.FaultContractAttribute?displayProperty=fullName> of type `GreetingFault`.  \n  \n [!code-vb[IErrorHandler#7](~/add/codesnippet/visualbasic/ierrorhandler.client/ierrorhandler.vb#7)]\n [!code-cs[IErrorHandler#7](~/add/codesnippet/csharp/ierrorhandler.client/ierrorhandler.cs#7)]  \n  \n In this example, the behavior class also implements <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=fullName>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public interface IServiceBehavior
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  id: AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.Description.IServiceBehavior
  langs:
  - csharp
  name: AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  nameWithType: IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  fullName: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Gjør mulighet å sende tilpassede data til binding elementer å støtte implementeringen kontrakten."
  remarks: "Bruke AddBindingParameters metode for å legge til objekter som tilpassede data til den `parameters` samlingen binding elementer kan bruke til å hente ekstra opplysninger slik at de kan støtte kontrakten.       Denne metoden kalles én gang for hver URIEN. For eksempel hvis en tjeneste har fire endepunkt, og to av dem har lytte samme URI, og denne metoden henter kalles tre ganger. Årsaken er at den `bindingParameters` target hver kanal bunke og det er én kanal stakk for hver URIEN. Fordi hvert kall mottar disse endepunkt på lytte-URI, to kaller hver get én <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName>, og ett kall henter en samling av to <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName>objekter.</xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName>      > [!NOTE] > Alle de <xref:System.ServiceModel.Description.IServiceBehavior>metoder sende <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName>og <xref:System.ServiceModel.ServiceHostBase?displayProperty=fullName>objekter som en parametere.</xref:System.ServiceModel.ServiceHostBase?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName> </xref:System.ServiceModel.Description.IServiceBehavior> Den <xref:System.ServiceModel.Description.ServiceDescription>parameteren er for gjennomgang og innsetting av tilpassinger bare; hvis du endrer ellers disse objektene kjøring virkemåten er udefinert.</xref:System.ServiceModel.Description.ServiceDescription>"
  syntax:
    content: public void AddBindingParameters (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint> endpoints, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);
    parameters:
    - id: serviceDescription
      type: System.ServiceModel.Description.ServiceDescription
      description: "Tjenestebeskrivelsen for tjenesten."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "Verten for tjenesten."
    - id: endpoints
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
      description: "Service-endepunkt."
    - id: bindingParameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "Egendefinert objekter som bindingen elementer har tilgang til."
  overload: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  id: ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Description.IServiceBehavior
  langs:
  - csharp
  name: ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  nameWithType: IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Gir muligheten til å endre kjøretid egenskapsverdier eller sette inn egendefinert utvidelse objekter som feil behandlingsprogrammer, melding eller parameteren interceptors, utvidelser for sikkerhet og andre egendefinert utvidelse-objekter."
  remarks: "Implementere ApplyDispatchBehavior-metode for å kontrollere eller endre den <xref:System.ServiceModel.ServiceHostBase>objekt som bygges for å støtte noen egendefinert kjøring scenarioet.</xref:System.ServiceModel.ServiceHostBase>      > [!NOTE] > Alle de <xref:System.ServiceModel.Description.IServiceBehavior>metoder sende <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName>og <xref:System.ServiceModel.ServiceHostBase?displayProperty=fullName>objekter som en parametere.</xref:System.ServiceModel.ServiceHostBase?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName> </xref:System.ServiceModel.Description.IServiceBehavior> Den <xref:System.ServiceModel.Description.ServiceDescription>parameteren er for gjennomgang og innsetting av tilpassinger bare; hvis du endrer ellers disse objektene kjøring virkemåten er udefinert.</xref:System.ServiceModel.Description.ServiceDescription>"
  example:
  - "The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application. In this example, the error handler catches all exceptions and converts them into a custom `GreetingFault` SOAP fault that is then returned to the client.  \n  \n The following <xref:System.ServiceModel.Description.IServiceBehavior> implementation adds no binding parameter objects, adds the custom <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=fullName> object to each <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=fullName> property, and validates that each operation of the service to which the service behavior is applied and has a <xref:System.ServiceModel.FaultContractAttribute?displayProperty=fullName> of type `GreetingFault`.  \n  \n [!code-vb[IErrorHandler#7](~/add/codesnippet/visualbasic/ierrorhandler.client/ierrorhandler.vb#7)]\n [!code-cs[IErrorHandler#7](~/add/codesnippet/csharp/ierrorhandler.client/ierrorhandler.cs#7)]  \n  \n In this example, the behavior class also implements <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=fullName>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public void ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase);
    parameters:
    - id: serviceDescription
      type: System.ServiceModel.Description.ServiceDescription
      description: "Tjenestebeskrivelsen."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "Verten som for øyeblikket opprettes."
  overload: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  id: Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Description.IServiceBehavior
  langs:
  - csharp
  name: Validate(ServiceDescription,ServiceHostBase)
  nameWithType: IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Gir muligheten til å kontrollere Tjenesteverten og tjenestebeskrivelsen for å bekrefte at tjenesten kan kjøres."
  remarks: "Bruk metoden Valider for å bekrefte om den gjeldende tjenesten kan kjøre riktig i henhold til scenariet.      > [!NOTE] > Alle de <xref:System.ServiceModel.Description.IServiceBehavior>metoder sende <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName>og <xref:System.ServiceModel.ServiceHostBase?displayProperty=fullName>objekter som en parametere.</xref:System.ServiceModel.ServiceHostBase?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName> </xref:System.ServiceModel.Description.IServiceBehavior> Den <xref:System.ServiceModel.Description.ServiceDescription>parameteren er for gjennomgang og innsetting av tilpassinger bare; hvis du endrer ellers disse objektene kjøring virkemåten er udefinert.</xref:System.ServiceModel.Description.ServiceDescription>"
  example:
  - "The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application. In this example, the error handler catches all exceptions and converts them into a custom `GreetingFault` SOAP fault that is then returned to the client.  \n  \n The following <xref:System.ServiceModel.Description.IServiceBehavior> implementation adds no binding parameter objects, adds the custom <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=fullName> object to each <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=fullName> property, and validates that each operation of the service to which the service behavior is applied and has a <xref:System.ServiceModel.FaultContractAttribute?displayProperty=fullName> of type `GreetingFault`.  \n  \n [!code-vb[IErrorHandler#7](~/add/codesnippet/visualbasic/ierrorhandler.client/ierrorhandler.vb#7)]\n [!code-cs[IErrorHandler#7](~/add/codesnippet/csharp/ierrorhandler.client/ierrorhandler.cs#7)]  \n  \n In this example, the behavior class also implements <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=fullName>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public void Validate (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase);
    parameters:
    - id: serviceDescription
      type: System.ServiceModel.Description.ServiceDescription
      description: "Tjenestebeskrivelsen."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "Tjenesteverten som blir opprettet."
  overload: System.ServiceModel.Description.IServiceBehavior.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.Description.IServiceBehavior
  isExternal: false
  name: AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  nameWithType: IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  fullName: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
- uid: System.ServiceModel.Description.ServiceDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.ServiceModel.Description.ServiceDescription
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ServiceEndpoint>
  nameWithType: Collection<ServiceEndpoint>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Description.ServiceEndpoint>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ServiceEndpoint
    name: ServiceEndpoint
    nameWithType: ServiceEndpoint
    fullName: ServiceEndpoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingParameterCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingParameterCollection
  nameWithType: BindingParameterCollection
  fullName: System.ServiceModel.Channels.BindingParameterCollection
- uid: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Description.IServiceBehavior
  isExternal: false
  name: ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  nameWithType: IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
- uid: System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Description.IServiceBehavior
  isExternal: false
  name: Validate(ServiceDescription,ServiceHostBase)
  nameWithType: IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
- uid: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters*
  parent: System.ServiceModel.Description.IServiceBehavior
  isExternal: false
  name: AddBindingParameters
  nameWithType: IServiceBehavior.AddBindingParameters
- uid: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior*
  parent: System.ServiceModel.Description.IServiceBehavior
  isExternal: false
  name: ApplyDispatchBehavior
  nameWithType: IServiceBehavior.ApplyDispatchBehavior
- uid: System.ServiceModel.Description.IServiceBehavior.Validate*
  parent: System.ServiceModel.Description.IServiceBehavior
  isExternal: false
  name: Validate
  nameWithType: IServiceBehavior.Validate
