### YamlMime:ManagedReference
items:
- uid: System.Web.UI.PostBackTrigger
  id: PostBackTrigger
  children:
  - System.Web.UI.PostBackTrigger.#ctor
  - System.Web.UI.PostBackTrigger.ControlID
  - System.Web.UI.PostBackTrigger.HasTriggered
  - System.Web.UI.PostBackTrigger.Initialize
  - System.Web.UI.PostBackTrigger.ToString
  langs:
  - csharp
  name: PostBackTrigger
  nameWithType: PostBackTrigger
  fullName: System.Web.UI.PostBackTrigger
  type: Class
  summary: "Definerer en kontroll i en <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> kontrollen som en sende tilbake kontrollen."
  remarks: "Bruk PostBackTrigger-kontroll for å aktivere kontroller i en <xref:System.Web.UI.UpdatePanel>kan forårsake en tilbakesending i stedet for å utføre en asynkron tilbakesending.</xref:System.Web.UI.UpdatePanel>       Bruk den <xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A>metoden for den <xref:System.Web.UI.ScriptManager>kontrollen for å registrere en sende tilbake kontroll programmatisk.</xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A> Deretter kan du kalle den <xref:System.Web.UI.UpdatePanel.Update%2A>metoden for den <xref:System.Web.UI.UpdatePanel>kontrollerer når kontrollen for utløseren utfører en tilbakesending.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel.Update%2A>      > [!NOTE] > Programmatisk å legge til PostBackTrigger kontroller støttes ikke.       Hvis en kontroll som er angitt som både PostBackTrigger og <xref:System.Web.UI.AsyncPostBackTrigger>kontroll, et unntak.</xref:System.Web.UI.AsyncPostBackTrigger>"
  example:
  - "The following example shows how to declaratively define a PostBackTrigger control for an <xref:System.Web.UI.UpdatePanel> control. In the panel, a <xref:System.Web.UI.WebControls.FileUpload> control enables users to upload a file. Users must first check whether the file to upload exists. The <xref:System.Web.UI.WebControls.Button> control that calls the event handler to check the file name causes an asynchronous postback. However, the <xref:System.Web.UI.WebControls.Button> control that uploads the file is registered as a PostBackTrigger, because files cannot be uploaded asynchronously.  \n  \n [!code-vb[System.Web.UI.PostBackTrigger#1](~/add/codesnippet/visualbasic/t-system.web.ui.postback_1_1.aspx)]\n [!code-cs[System.Web.UI.PostBackTrigger#1](~/add/codesnippet/csharp/t-system.web.ui.postback_1_1.aspx)]"
  syntax:
    content: 'public class PostBackTrigger : System.Web.UI.UpdatePanelControlTrigger'
  inheritance:
  - System.Object
  - System.Web.UI.UpdatePanelTrigger
  - System.Web.UI.UpdatePanelControlTrigger
  implements: []
  inheritedMembers:
  - System.Web.UI.UpdatePanelControlTrigger.FindTargetControl(System.Boolean)
  - System.Web.UI.UpdatePanelTrigger.Owner
  platform:
  - net462
- uid: System.Web.UI.PostBackTrigger.#ctor
  id: '#ctor'
  parent: System.Web.UI.PostBackTrigger
  langs:
  - csharp
  name: PostBackTrigger()
  nameWithType: PostBackTrigger.PostBackTrigger()
  fullName: System.Web.UI.PostBackTrigger.PostBackTrigger()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.UI.PostBackTrigger&quot;> </xref> klasse."
  remarks: "Til å opprette en ny <xref:System.Web.UI.PostBackTrigger>objekt, bruker du den **UpdatePanelTrigger samlingen redigeringsprogrammet** dialogboksen boksen i utviklerprogrammet, eller Opprett en `<Triggers>` elementet deklarativt i den <xref:System.Web.UI.UpdatePanel>kontroll.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.PostBackTrigger> Legger til programmatisk <xref:System.Web.UI.PostBackTrigger>Kontroller støttes ikke.</xref:System.Web.UI.PostBackTrigger>"
  syntax:
    content: public PostBackTrigger ();
    parameters: []
  overload: System.Web.UI.PostBackTrigger.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PostBackTrigger.ControlID
  id: ControlID
  parent: System.Web.UI.PostBackTrigger
  langs:
  - csharp
  name: ControlID
  nameWithType: PostBackTrigger.ControlID
  fullName: System.Web.UI.PostBackTrigger.ControlID
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Henter eller angir navnet på kontrollen som er en <xref href=&quot;System.Web.UI.PostBackTrigger&quot;> </xref> kontrollere for en <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> kontrollen."
  syntax:
    content: public string ControlID { get; set; }
    return:
      type: System.String
      description: "En streng som representerer en server kontroll-ID."
  overload: System.Web.UI.PostBackTrigger.ControlID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PostBackTrigger.HasTriggered
  id: HasTriggered
  parent: System.Web.UI.PostBackTrigger
  langs:
  - csharp
  name: HasTriggered()
  nameWithType: PostBackTrigger.HasTriggered()
  fullName: System.Web.UI.PostBackTrigger.HasTriggered()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Returnerer en verdi som angir om utløseren ble aktivert."
  remarks: "Kontrollutviklere kan overstyre HasTriggered-egenskapen for å gi tilpassede logikken for å bestemme om utløseren ble aktivert. For å vise den egendefinerte utløseren vises under utformingen i den `<Triggers>` element av den <xref:System.Web.UI.UpdatePanel>kontrollen, kan du legge til et direktiv på siden eller i delen i Web.config-filen.</xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: protected override bool HasTriggered ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis utløseren ble aktivert; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.PostBackTrigger.HasTriggered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PostBackTrigger.Initialize
  id: Initialize
  parent: System.Web.UI.PostBackTrigger
  langs:
  - csharp
  name: Initialize()
  nameWithType: PostBackTrigger.Initialize()
  fullName: System.Web.UI.PostBackTrigger.Initialize()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Initialiserer den <xref href=&quot;System.Web.UI.PostBackTrigger&quot;> </xref> objektet."
  syntax:
    content: protected override void Initialize ();
    parameters: []
  overload: System.Web.UI.PostBackTrigger.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PostBackTrigger.ToString
  id: ToString
  parent: System.Web.UI.PostBackTrigger
  langs:
  - csharp
  name: ToString()
  nameWithType: PostBackTrigger.ToString()
  fullName: System.Web.UI.PostBackTrigger.ToString()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Returnerer en streng som representerer gjeldende <xref href=&quot;System.Web.UI.PostBackTrigger&quot;> </xref> objektet."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "En streng som representerer gjeldende <xref href=&quot;System.Web.UI.PostBackTrigger&quot;> </xref> objektet."
  overload: System.Web.UI.PostBackTrigger.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.UpdatePanelControlTrigger
  isExternal: false
  name: System.Web.UI.UpdatePanelControlTrigger
- uid: System.Web.UI.PostBackTrigger.#ctor
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: PostBackTrigger()
  nameWithType: PostBackTrigger.PostBackTrigger()
  fullName: System.Web.UI.PostBackTrigger.PostBackTrigger()
- uid: System.Web.UI.PostBackTrigger.ControlID
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: ControlID
  nameWithType: PostBackTrigger.ControlID
  fullName: System.Web.UI.PostBackTrigger.ControlID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.PostBackTrigger.HasTriggered
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: HasTriggered()
  nameWithType: PostBackTrigger.HasTriggered()
  fullName: System.Web.UI.PostBackTrigger.HasTriggered()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.PostBackTrigger.Initialize
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: Initialize()
  nameWithType: PostBackTrigger.Initialize()
  fullName: System.Web.UI.PostBackTrigger.Initialize()
- uid: System.Web.UI.PostBackTrigger.ToString
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: ToString()
  nameWithType: PostBackTrigger.ToString()
  fullName: System.Web.UI.PostBackTrigger.ToString()
- uid: System.Web.UI.PostBackTrigger.#ctor*
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: PostBackTrigger
  nameWithType: PostBackTrigger.PostBackTrigger
- uid: System.Web.UI.PostBackTrigger.ControlID*
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: ControlID
  nameWithType: PostBackTrigger.ControlID
- uid: System.Web.UI.PostBackTrigger.HasTriggered*
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: HasTriggered
  nameWithType: PostBackTrigger.HasTriggered
- uid: System.Web.UI.PostBackTrigger.Initialize*
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: Initialize
  nameWithType: PostBackTrigger.Initialize
- uid: System.Web.UI.PostBackTrigger.ToString*
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: ToString
  nameWithType: PostBackTrigger.ToString
