### YamlMime:ManagedReference
items:
- uid: System.Web.ApplicationServices.AuthenticationService
  id: AuthenticationService
  children:
  - System.Web.ApplicationServices.AuthenticationService.#ctor
  - System.Web.ApplicationServices.AuthenticationService.Authenticating
  - System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  - System.Web.ApplicationServices.AuthenticationService.IsLoggedIn
  - System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)
  - System.Web.ApplicationServices.AuthenticationService.Logout
  - System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)
  langs:
  - csharp
  name: AuthenticationService
  nameWithType: AuthenticationService
  fullName: System.Web.ApplicationServices.AuthenticationService
  type: Class
  summary: "Aktiverer tilgang til ASP.NET skjemagodkjenning som en webtjeneste."
  remarks: "Objektet AuthenticationService gjør det mulig å godkjenne brukere via en [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] tjenesten. Du bruker WCF godkjenningstjenesten når må du godkjenne brukere via ASP.NET-medlemskap fra et program som er utenfor webprogram som lagrer brukerlegitimasjonen. Programmet må kunne sende og bruke melding i SOAP-format. Via klassen AuthenticationService, kan du logge brukere, logge brukere, validere legitimasjon, Kontroller statusen for godkjenning, tilpasse godkjenning, og angi informasjonskapselen for godkjenning.       Klassen AuthenticationService inneholder fire metoder som du skal få tilgang til bare via en WCF-tjenesten: den <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>, og <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>metoder.</xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> </xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> </xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> </xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> Hvis du vil kalle disse metodene, aktivere godkjenningstjenesten på en nettserver og koble deretter et klientprogram WCF-kompatibelt med webtjenesten. Du finner informasjon om hvordan du konfigurerer godkjenningstjenesten [slik: aktivere godkjenningstjenesten WCF](~/add/includes/ajax-current-ext-md.md).       Påloggingsinformasjon brukere, kan du sende brukerlegitimasjonen til den <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>metoden.</xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> Hvis legitimasjonen er gyldig, oppretter klassen AuthenticationService en informasjonskapsel for godkjenning. Hvis informasjonskapselen for godkjenning ikke er utløpt, vet du at brukerens legitimasjon er godkjent, og du har ikke bekrefte legitimasjonen på nytt. (Informasjonskapsel mindre godkjenning er ikke tilgjengelig via AuthenticationService-klassen.)       AuthenticationService kan øke to hendelser: <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>og <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> </xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Den <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>hendelsen oppstår når brukerlegitimasjonen valideres.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Oppretter en hendelsesbehandling for den <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>-hendelsen for å tilpasse hvordan brukerlegitimasjonen er validert.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Den <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>hendelsen oppstår når informasjonskapselen for godkjenning som angis etter at brukerlegitimasjonen er blitt godkjent.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> Oppretter en hendelsesbehandling for den <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>-hendelsen for å tilpasse informasjonskapselen for godkjenning.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>       Den <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>metoden kontrollerer brukerlegitimasjon for godkjenning, men returnerer ikke en godkjenningsbillett.</xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> Bruk <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>når en bruker tidligere har logget på, og må du kontrollere at legitimasjonen er fortsatt er gyldige ved starten av en ny applikasjon-økt.</xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>       Et eksempel på ved hjelp av tjenesten WCF godkjenning fra en applikasjon i konsollen, kan du se [gjennomgang: ved hjelp av ASP.NET programtjenester](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)]

      [System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")]

      [System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")]

      public class AuthenticationService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.#ctor
  id: '#ctor'
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: AuthenticationService()
  nameWithType: AuthenticationService.AuthenticationService()
  fullName: System.Web.ApplicationServices.AuthenticationService.AuthenticationService()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.ApplicationServices.AuthenticationService&quot;> </xref> klasse."
  syntax:
    content: public AuthenticationService ();
    parameters: []
  overload: System.Web.ApplicationServices.AuthenticationService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.Authenticating
  id: Authenticating
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: Authenticating
  nameWithType: AuthenticationService.Authenticating
  fullName: System.Web.ApplicationServices.AuthenticationService.Authenticating
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Forekommer når brukerlegitimasjonen valideres."
  remarks: "Authenticating denne hendelsen oppstår når brukerlegitimasjonen valideres. Opprett en hendelsesbehandling for hendelsen Authenticating tilpasse hvordan brukerlegitimasjonen er validert."
  example:
  - "The following example shows how to bind an event handler for the Authenticating event in the `Application_Start` method of the Global.asax file.  \n  \n [!code-cs[System.Web.Security.LoginService_MultipleCredentials#1](~/add/codesnippet/csharp/e-system.web.application_0_1.asax)]\n [!code-vb[System.Web.Security.LoginService_MultipleCredentials#1](~/add/codesnippet/visualbasic/e-system.web.application_0_1.asax)]  \n  \n The following example shows an event handler for the Authenticating event in the Global.asax file. The event handler reads two authentication values from the <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A> property and passes them together with the user name and password to a custom authentication class named `StudentAuthentication`.  \n  \n [!code-cs[System.Web.Security.LoginService_MultipleCredentials#2](~/add/codesnippet/csharp/e-system.web.application_0_2.asax)]\n [!code-vb[System.Web.Security.LoginService_MultipleCredentials#2](~/add/codesnippet/visualbasic/e-system.web.application_0_2.asax)]"
  syntax:
    content: public static event EventHandler<System.Web.ApplicationServices.AuthenticatingEventArgs> Authenticating;
    return:
      type: System.EventHandler{System.Web.ApplicationServices.AuthenticatingEventArgs}
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  id: CreatingCookie
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: CreatingCookie
  nameWithType: AuthenticationService.CreatingCookie
  fullName: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Forekommer når godkjenning informasjonskapselen er angitt."
  remarks: "CreatingCookie denne hendelsen oppstår når informasjonskapselen for godkjenning som angis etter at brukerlegitimasjonen er blitt godkjent. Opprett en hendelsesbehandling for hendelsen CreatingCookie tilpasse informasjonskapselen for godkjenning."
  example:
  - "The following example shows how to bind an event handler to the CreatingCookie event in the `Application_Start` method of the Global.asax file.  \n  \n [!code-cs[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/add/codesnippet/csharp/e-system.web.application_1_1.asax)]\n [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.application_1_1.asax)]  \n  \n The following example shows an event handler for the CreatingCookie event in the Global.asax file. The event handler customizes the authentication cookie by adding the value in the <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> property to the <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> property. Store the <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> property in a cookie only if you know that the data in the property is not sensitive. Malicious users can access the values in the cookie.  \n  \n [!code-cs[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/add/codesnippet/csharp/e-system.web.application_1_2.asax)]\n [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/add/codesnippet/visualbasic/e-system.web.application_1_2.asax)]"
  syntax:
    content: public static event EventHandler<System.Web.ApplicationServices.CreatingCookieEventArgs> CreatingCookie;
    return:
      type: System.EventHandler{System.Web.ApplicationServices.CreatingCookieEventArgs}
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn
  id: IsLoggedIn
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: IsLoggedIn()
  nameWithType: AuthenticationService.IsLoggedIn()
  fullName: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Bestemmer om den gjeldende brukeren er godkjent."
  remarks: "Metoden IsLoggedIn kontrollerer om den gjeldende brukeren er godkjent ved å kontrollere de <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>.property.</xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>      > [!NOTE] > Ikke kalle metoden IsLoggedIn fra kode som kjører på nettserveren. Du kalle metoden IsLoggedIn bare som en del av en WCF-tjenesten."
  syntax:
    content: public bool IsLoggedIn ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis brukeren er godkjent; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)
  id: Login(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: Login(String,String,String,Boolean)
  nameWithType: AuthenticationService.Login(String,String,String,Boolean)
  fullName: System.Web.ApplicationServices.AuthenticationService.Login(String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Kontrollerer bruker legitimasjon og oppretter en godkjenningsbillett (cookie) hvis legitimasjonen er gyldig."
  remarks: "Metoden påloggingen validerer brukerlegitimasjonen via en leverandør av medlemskap. Du kan bruke medlemskap standardleverandøren eller angi en egendefinert medlemskapsleverandør på kjøretidspunktet. Den <xref:System.Web.ApplicationServices.AuthenticationService>klasse formidler `userName` og `password` til leverandøren av medlemskapet <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>metode, men ikke sende `customCredential`.</xref:System.Web.Security.MembershipProvider.ValidateUser%2A> </xref:System.Web.ApplicationServices.AuthenticationService> Hvis <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>returnerer `true`, <xref:System.Web.ApplicationServices.AuthenticationService>oppretter en godkjenningsbillett som en informasjonskapsel.</xref:System.Web.ApplicationServices.AuthenticationService> </xref:System.Web.Security.MembershipProvider.ValidateUser%2A> Angi den `isPersistent` parameter `true` til å opprette en godkjenningsbillett som varer utenfor økten.      > [!NOTE] > Alltid bruke godkjenningstjenesten sammen med secure sockets layer (SSL, ved å bruke HTTPS) til å beskytte sensitive data.       Metoden påloggingen opphøyer den <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>hendelsen og <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>hendelsen.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> </xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Oppretter en hendelsesbehandling for <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>tilpasse godkjenning, for eksempel kontrollerer verdiene `customCredential` eller validere legitimasjonen via en ikke-standard medlemskapsleverandør.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Verdiene i `customCredential` ikke er godkjent av medlemskap standardleverandøren. Du kan tilpasse informasjonskapselen for godkjenning, oppretter du en hendelsesbehandling for <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>      > [!NOTE] > Ikke kalle metoden pålogging fra kode som kjører på nettserveren. Du kalle metoden påloggingen bare som en del av en WCF-tjenesten. Hvis du vil ha mer informasjon, se [ASP.NET godkjenning](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool Login (string username, string password, string customCredential, bool isPersistent);
    parameters:
    - id: username
      type: System.String
      description: "Brukernavnet for å validere."
    - id: password
      type: System.String
      description: "Passordet for brukeren som er angitt."
    - id: customCredential
      type: System.String
      description: "Verdien eller verdiene til å validere i tillegg til `userName` og `password`, hvis noen."
    - id: isPersistent
      type: System.Boolean
      description: "En verdi som angir om godkjenningsbilletten forblir gyldig på tvers av økter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis brukeropplysningene er gyldige. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ApplicationServices.AuthenticationService.Login*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userName</code>or <code>password</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.Logout
  id: Logout
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: Logout()
  nameWithType: AuthenticationService.Logout()
  fullName: System.Web.ApplicationServices.AuthenticationService.Logout()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Fjerner godkjenningsbilletten (cookie) i nettleseren."
  remarks: "Metoden Avloggingsforespørsler tømmes informasjonskapselen for godkjenning fra leserens informasjonskapsel samlingen. Brukeren må logge på på nytt godkjennes.       Den <xref:System.Web.ApplicationServices.AuthenticationService>klassen ikke lagre informasjonen på serveren som godkjenning billetter er fjernet.</xref:System.Web.ApplicationServices.AuthenticationService>      > [!NOTE] > Ikke kalle metoden Avloggingsforespørsler fra kode som kjører på nettserveren. Du kalle metoden Avloggingsforespørsler bare som en del av en WCF-tjenesten. Hvis du vil ha mer informasjon, se [ASP.NET godkjenning](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Logout ();
    parameters: []
  overload: System.Web.ApplicationServices.AuthenticationService.Logout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)
  id: ValidateUser(System.String,System.String,System.String)
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: ValidateUser(String,String,String)
  nameWithType: AuthenticationService.ValidateUser(String,String,String)
  fullName: System.Web.ApplicationServices.AuthenticationService.ValidateUser(String,String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Godkjenner brukerlegitimasjonen uten utsteder en godkjenningsbillett."
  remarks: "Metoden ValidateUser godkjenner brukerlegitimasjonen, men angir ikke en informasjonskapsel for godkjenning. Uten en informasjonskapsel for godkjenning vil brukeren ikke bli logget selv om legitimasjonen er gyldig.       Bruk metoden ValidateUser når må du kontrollere om en brukeropplysningene er gyldige uten å motta en informasjonskapsel for godkjenning. Du kan for eksempel gjøre dette hvis informasjonskapselen for godkjenning allerede er lagret i et klientprogram, men du ønsker å bekrefte at brukerens legitimasjon er fortsatt er gyldige når du starter en ny økt.       TheValidateUser metoden opphøyer den <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>hendelse, men ikke heve den <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>hendelsen.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> </xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>      > [!NOTE] > Ikke kalle metoden ValidateUser fra kode som kjører på nettserveren. Du kalle metoden ValidateUser bare som en del av en WCF-tjenesten. Hvis du vil ha mer informasjon, se [ASP.NET godkjenning](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool ValidateUser (string username, string password, string customCredential);
    parameters:
    - id: username
      type: System.String
      description: "Brukernavnet for å validere."
    - id: password
      type: System.String
      description: "Passordet for brukeren som er angitt."
    - id: customCredential
      type: System.String
      description: "Verdien eller verdiene til å validere i tillegg til `userName` og `password`, hvis noen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis brukeropplysningene er gyldige. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ApplicationServices.AuthenticationService.ValidateUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userName</code>or <code>password</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.ApplicationServices.AuthenticationService.#ctor
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: AuthenticationService()
  nameWithType: AuthenticationService.AuthenticationService()
  fullName: System.Web.ApplicationServices.AuthenticationService.AuthenticationService()
- uid: System.Web.ApplicationServices.AuthenticationService.Authenticating
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Authenticating
  nameWithType: AuthenticationService.Authenticating
  fullName: System.Web.ApplicationServices.AuthenticationService.Authenticating
- uid: System.EventHandler{System.Web.ApplicationServices.AuthenticatingEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<AuthenticatingEventArgs>
  nameWithType: EventHandler<AuthenticatingEventArgs>
  fullName: System.EventHandler<System.Web.ApplicationServices.AuthenticatingEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.ApplicationServices.AuthenticatingEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ApplicationServices.AuthenticatingEventArgs
    name: AuthenticatingEventArgs
    nameWithType: AuthenticatingEventArgs
    fullName: AuthenticatingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: CreatingCookie
  nameWithType: AuthenticationService.CreatingCookie
  fullName: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
- uid: System.EventHandler{System.Web.ApplicationServices.CreatingCookieEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<CreatingCookieEventArgs>
  nameWithType: EventHandler<CreatingCookieEventArgs>
  fullName: System.EventHandler<System.Web.ApplicationServices.CreatingCookieEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.ApplicationServices.CreatingCookieEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ApplicationServices.CreatingCookieEventArgs
    name: CreatingCookieEventArgs
    nameWithType: CreatingCookieEventArgs
    fullName: CreatingCookieEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: IsLoggedIn()
  nameWithType: AuthenticationService.IsLoggedIn()
  fullName: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Login(String,String,String,Boolean)
  nameWithType: AuthenticationService.Login(String,String,String,Boolean)
  fullName: System.Web.ApplicationServices.AuthenticationService.Login(String,String,String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ApplicationServices.AuthenticationService.Logout
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Logout()
  nameWithType: AuthenticationService.Logout()
  fullName: System.Web.ApplicationServices.AuthenticationService.Logout()
- uid: System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: ValidateUser(String,String,String)
  nameWithType: AuthenticationService.ValidateUser(String,String,String)
  fullName: System.Web.ApplicationServices.AuthenticationService.ValidateUser(String,String,String)
- uid: System.Web.ApplicationServices.AuthenticationService.#ctor*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: AuthenticationService
  nameWithType: AuthenticationService.AuthenticationService
- uid: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: IsLoggedIn
  nameWithType: AuthenticationService.IsLoggedIn
- uid: System.Web.ApplicationServices.AuthenticationService.Login*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Login
  nameWithType: AuthenticationService.Login
- uid: System.Web.ApplicationServices.AuthenticationService.Logout*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Logout
  nameWithType: AuthenticationService.Logout
- uid: System.Web.ApplicationServices.AuthenticationService.ValidateUser*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: ValidateUser
  nameWithType: AuthenticationService.ValidateUser
