### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleLob
  id: OracleLob
  children:
  - System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)
  - System.Data.OracleClient.OracleLob.BeginBatch
  - System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)
  - System.Data.OracleClient.OracleLob.CanRead
  - System.Data.OracleClient.OracleLob.CanSeek
  - System.Data.OracleClient.OracleLob.CanWrite
  - System.Data.OracleClient.OracleLob.ChunkSize
  - System.Data.OracleClient.OracleLob.Clone
  - System.Data.OracleClient.OracleLob.Connection
  - System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)
  - System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  - System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  - System.Data.OracleClient.OracleLob.Dispose(System.Boolean)
  - System.Data.OracleClient.OracleLob.EndBatch
  - System.Data.OracleClient.OracleLob.Erase
  - System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)
  - System.Data.OracleClient.OracleLob.Flush
  - System.Data.OracleClient.OracleLob.IsBatched
  - System.Data.OracleClient.OracleLob.IsNull
  - System.Data.OracleClient.OracleLob.IsTemporary
  - System.Data.OracleClient.OracleLob.Length
  - System.Data.OracleClient.OracleLob.LobType
  - System.Data.OracleClient.OracleLob.Null
  - System.Data.OracleClient.OracleLob.Position
  - System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)
  - System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Data.OracleClient.OracleLob.SetLength(System.Int64)
  - System.Data.OracleClient.OracleLob.Value
  - System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)
  - System.Data.OracleClient.OracleLob.WriteByte(System.Byte)
  langs:
  - csharp
  name: OracleLob
  nameWithType: OracleLob
  fullName: System.Data.OracleClient.OracleLob
  type: Class
  summary: "Representerer et stort objekt binær (<xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;></xref>) datatypen som er lagret på en Oracle-server. Denne klassen kan ikke arves."
  remarks: "En OracleLob er forskjellig fra en <xref:System.Data.OracleClient.OracleBFile>at dataene lagres på serveren i stedet for i en fysisk fil i operativsystemet.</xref:System.Data.OracleClient.OracleBFile> Det kan også være et objekt med lese-og skrivetilgang, i motsetning til en <xref:System.Data.OracleClient.OracleBFile>, som alltid er skrivebeskyttet.</xref:System.Data.OracleClient.OracleBFile>       En OracleLob kan være en av disse <xref:System.Data.OracleClient.OracleType>datatyper.</xref:System.Data.OracleClient.OracleType>      | Datatypen for OracleType | Beskrivelse |   |--------------------------|-----------------|   | `Blob`| En Oracle `BLOB` datatype som inneholder binære data med en maksimal størrelse på 4 gigabyte (GB). Dette er tilordnet til en <xref:System.Array>av typen <xref:System.Byte>. |   | `Clob`| En Oracle `CLOB` datatype som inneholder tegndata, basert på standard tegn som er angitt på serveren, med en maksimal størrelse på 4 GB.</xref:System.Byte> </xref:System.Array> Dette er tilordnet til <xref:System.String>. |   | `NClob`| En Oracle `NCLOB` datatype som inneholder tegndata, basert på national tegnsettet på serveren med maksimumsstørrelsen på 4 GB.</xref:System.String> Dette er tilordnet til <xref:System.String>. |       En .NET-programutvikler kan hente Oracle `LOB` verdier til basic .NET-datatyper som <xref:System.Array>av typen <xref:System.Byte>og <xref:System.String>, eller datatypen spesialiserte OracleLob.</xref:System.String> </xref:System.Byte> </xref:System.Array> </xref:System.String> OracleLob klassen støtter lesing av data fra og skrives til Oracle `LOB` i Oracle-database.       Følgende er de primære egenskapene til datatypen OracleLob som skiller fra grunnleggende .NET-datatyper: – Når du hente Oracle `LOB` verdien fra Oracle-database i klassen OracleLob, kan du endre det `LOB` data i en åpen transaksjon og endringene gjenspeiles direkte til databasen. Hvis du hente Oracle `LOB` verdi til en <xref:System.Array>av typen <xref:System.Byte>eller <xref:System.String>og oppdatere disse matriser ikke endringene til databasen.</xref:System.String> </xref:System.Byte> </xref:System.Array>      -Når du bruker klassen OracleLob å få tilgang til en del av en `LOB` verdi, bare at gruppen er sendt fra Oracle-databasen til klienten. Når du bruker den <xref:System.Data.OracleClient.OracleDataReader.GetChars%2A>metode for å få tilgang til en del av en `LOB` verdi, hele innholdet i verdien er sendt fra Oracle-databasen til klienten.</xref:System.Data.OracleClient.OracleDataReader.GetChars%2A>       For å få et OracleLob-objekt, kan du kalle den <xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A>metoden.</xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A>       Du kan lage en OracleLob som er NULL med dette formatet: ```   OracleLob myLob = OracleLob.Null;   ``` denne metoden brukes først og fremst for å teste om en `LOB` returnert fra serveren er NULL, som dette eksemplet viser: ```   If(myLob == OracleLob.Null)   ``` en NULL `LOB` fungerer på samme måte som en null-byte `LOB` i den <xref:System.Data.OracleClient.OracleLob.Read%2A>lykkes, og returnerer alltid null byte.</xref:System.Data.OracleClient.OracleLob.Read%2A>       Hvis du velger en `LOB` kolonne som inneholder en nullverdi returnerer <xref:System.Data.OracleClient.OracleLob.Null>.</xref:System.Data.OracleClient.OracleLob.Null>       Du må starte en transaksjon før henting av en midlertidig `LOB`. Hvis ikke, den <xref:System.Data.OracleClient.OracleDataReader>kan ikke hente data senere.</xref:System.Data.OracleClient.OracleDataReader>       Du kan også åpne en midlertidig `LOB` i Oracle ved å ringe DBMS_LOB. CREATETEMPORARY system lagrede prosedyren og bindingen en `LOB` utdataparameter. På klientsiden, en midlertidig `LOB` fungerer som en tabellbasert `LOB`. For eksempel for å oppdatere midlertidige `LOB`, den må være angitt i en transaksjon.       C# eksemplet nedenfor viser hvordan du åpner en midlertidig `LOB`.      ```   OracleConnection connection = new OracleConnection(&quot;server=MyServer; integrated security=yes;&quot;);   connection.Open();   OracleTransaction transaction = connection.BeginTransaction();   OracleCommand command = connection.CreateCommand();   command.Transaction = transaction;   command.CommandText = &quot;declare xx blob; begin dbms_lob.createtemporary(xx, false, 0); :tempblob := xx; end;&quot;;   command.Parameters.Add(new OracleParameter(&quot;tempblob&quot;, OracleType.Blob)).Direction = ParameterDirection.Output;   command.ExecuteNonQuery();   OracleLob tempLob = (OracleLob)command.Parameters[0].Value;   byte[] tempbuff = new byte[10000];   tempLob.BeginBatch(OracleLobOpenMode.ReadWrite);   tempLob.Write(tempbuff,0,tempbuff.Length);   tempLob.EndBatch();   command.Parameters.Clear();   command.CommandText = &quot;MyTable.MyProc&quot;;   command.CommandType = CommandType.StoredProcedure;     command.Parameters.Add(new OracleParameter(&quot;ImportDoc&quot;, OracleType.Blob)).Value = tempLob;   command.ExecuteNonQuery();   transaction.Commit();   connection.Close   ```      > [!NOTE]> Arvet <xref:System.IO.Stream.WriteByte%2A>metoden mislykkes hvis brukes med tegndata, og en <xref:System.InvalidOperationException>forårsakes.</xref:System.InvalidOperationException> </xref:System.IO.Stream.WriteByte%2A> Bruk den <xref:System.Data.OracleClient.OracleLob.Write%2A>metoden i stedet.</xref:System.Data.OracleClient.OracleLob.Write%2A>   >> Midlertidig `LOB`s er bare lukkes når tilkoblingen er lukket, men med pooling og belastet, midlertidig `LOB`s ikke Lukk. Dette kan løses ved vinningsberegninger midlertidige `LOB`, ved å bruke `tempLob.Dispose()`."
  syntax:
    content: 'public sealed class OracleLob : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable'
  inheritance:
  - System.IO.Stream
  implements:
  - System.Data.SqlTypes.INullable
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)
  id: Append(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Append(OracleLob)
  nameWithType: OracleLob.Append(OracleLob)
  fullName: System.Data.OracleClient.OracleLob.Append(OracleLob)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Tilføyer data fra den angitte <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> til gjeldende <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref>."
  remarks: "Ikke skrive til den `LOB`, må du har hentet av `LOB` bruker FOR UPDATE-setningsdelen i SQL SELECT-setningen, og du må ha en lokal transaksjon startet.       Alle data fra datakilden `LOB` føyes til slutten av gjeldende `LOB`. Plasseringen av ingen `LOB` er evaluert eller endret under denne prosessen.       Datatypene underliggende må alltid være den samme. Hvis du tilføyer fra et <xref:System.Data.OracleClient.OracleType>mål <xref:System.Data.OracleClient.OracleLob>må også være <xref:System.Data.OracleClient.OracleType>.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleType> for eksempel      > [!NOTE] > I denne versjonen, skriving til en skrivebeskyttet `LOB` blir kanskje vellykket, men oppdateres ikke den `LOB` på serveren. I dette tilfellet, lokalt kopi av det `LOB` er oppdatert. Derfor senere leseoperasjoner på den <xref:System.Data.OracleClient.OracleLob>objekt kan returnere resultatene av Skriveoperasjonen.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public void Append (System.Data.OracleClient.OracleLob source);
    parameters:
    - id: source
      type: System.Data.OracleClient.OracleLob
      description: "Den <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> som skal føyes data."
  overload: System.Data.OracleClient.OracleLob.Append*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Kilden <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> er null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Kilden <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> er null, eller tilkoblingen er lukket."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Kilden <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektet er lukket eller fjernet."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Det oppstod en Oracle-feil."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.BeginBatch
  id: BeginBatch
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: BeginBatch()
  nameWithType: OracleLob.BeginBatch()
  fullName: System.Data.OracleClient.OracleLob.BeginBatch()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hindrer serversiden utløsere at under utføring av flere leseoperasjoner."
  remarks: "Åpner den `LOB` i <xref:System.Data.OracleClient.OracleLobOpenMode>modus; derfor den `LOB` kan bare lese fra, ikke skrive til, før det tilsvarende kallet til <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>.</xref:System.Data.OracleClient.OracleLob.EndBatch%2A> </xref:System.Data.OracleClient.OracleLobOpenMode> Til å utføre bunke skriver til den `LOB`, kaller du <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> <xref:System.Data.OracleClient.OracleLobOpenMode>.</xref:System.Data.OracleClient.OracleLobOpenMode> </xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>       Kaller BeginBatch mer enn én gang i den samme transaksjonen for øyeblikket oppstår Oracle &quot;ORA&22293;: LOB allerede er åpnet i den samme transaksjonen&quot; feil. Hvis du hente det `LOB` ved hjelp av en annen <xref:System.Data.OracleClient.OracleDataReader>, og opprinnelige oppkalleren har ikke kalles i <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>metode, samme feil genereres.</xref:System.Data.OracleClient.OracleLob.EndBatch%2A> </xref:System.Data.OracleClient.OracleDataReader> Du må derfor kalle <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>metoden når du er ferdig med <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.EndBatch%2A>"
  syntax:
    content: public void BeginBatch ();
    parameters: []
  overload: System.Data.OracleClient.OracleLob.BeginBatch*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Tilkoblingen er lukket."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet er lukket eller fjernet."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Det oppstod en Oracle-feil."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)
  id: BeginBatch(System.Data.OracleClient.OracleLobOpenMode)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: BeginBatch(OracleLobOpenMode)
  nameWithType: OracleLob.BeginBatch(OracleLobOpenMode)
  fullName: System.Data.OracleClient.OracleLob.BeginBatch(OracleLobOpenMode)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hindrer serversiden utløsere utløses under utføring av flere og skriveoperasjoner i den angitte tilgangsmodusen."
  remarks: "Ikke skrive til den `LOB`, må du har hentet av `LOB` bruker FOR UPDATE-setningsdelen i SQL SELECT-setningen, og du må ha en lokal transaksjon startet.       Kaller <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>mer enn én gang i den samme transaksjonen for øyeblikket oppstår Oracle &quot;ORA&22293;: LOB allerede er åpnet i den samme transaksjonen&quot; feil.</xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> Hvis du hente det `LOB` ved hjelp av en annen <xref:System.Data.OracleClient.OracleDataReader>, og opprinnelige oppkalleren har ikke kalles i <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>metode, samme feil genereres.</xref:System.Data.OracleClient.OracleLob.EndBatch%2A> </xref:System.Data.OracleClient.OracleDataReader> Du må derfor kalle <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>metoden når du er ferdig med <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.EndBatch%2A>"
  syntax:
    content: public void BeginBatch (System.Data.OracleClient.OracleLobOpenMode mode);
    parameters:
    - id: mode
      type: System.Data.OracleClient.OracleLobOpenMode
      description: "Modus (én av de <xref href=&quot;System.Data.OracleClient.OracleLobOpenMode&quot;> </xref> verdier) som den <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> får mellom BeginBatch kallet og tilhørende <xref:System.Data.OracleClient.OracleLob.EndBatch*>kall.</xref:System.Data.OracleClient.OracleLob.EndBatch*>"
  overload: System.Data.OracleClient.OracleLob.BeginBatch*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Tilkoblingen er lukket."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet er lukket eller fjernet."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Det oppstod en Oracle-feil."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CanRead
  id: CanRead
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CanRead
  nameWithType: OracleLob.CanRead
  fullName: System.Data.OracleClient.OracleLob.CanRead
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Henter en verdi som angir om den <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> kan kopiere dataflyten."
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> Dataflyten støtter lesing, ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Hvis en <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> er lukket eller fjernet."
  overload: System.Data.OracleClient.OracleLob.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CanSeek
  id: CanSeek
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CanSeek
  nameWithType: OracleLob.CanSeek
  fullName: System.Data.OracleClient.OracleLob.CanSeek
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Henter en verdi som angir om fremover og bakover søk kan utføres."
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Hvis en <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> er lukket eller fjernet, ellers <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> for <xref href=&quot;System.Data.OracleClient.OracleLob.Null&quot;></xref>."
  overload: System.Data.OracleClient.OracleLob.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CanWrite
  id: CanWrite
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CanWrite
  nameWithType: OracleLob.CanWrite
  fullName: System.Data.OracleClient.OracleLob.CanWrite
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Returnerer alltid SANN, uavhengig om det <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> støtter skriving eller ikke."
  remarks: "Ikke skrive til den `LOB`, må du har hentet av `LOB` bruker FOR UPDATE-setningsdelen i SQL SELECT-setningen, og du må har startet en lokal transaksjon."
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "Returnerer alltid <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, uavhengig av om en åpnet eller undisposed <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> støtter skriving eller ikke, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Hvis en <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> er lukket eller fjernet."
  overload: System.Data.OracleClient.OracleLob.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.ChunkSize
  id: ChunkSize
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: ChunkSize
  nameWithType: OracleLob.ChunkSize
  fullName: System.Data.OracleClient.OracleLob.ChunkSize
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Henter en verdi som angir minimum antall byte som skal hente fra eller sender til serveren under en operasjon for lese-og skrivetilgang."
  remarks: "Verdien som returneres av egenskapen gruppestørrelsen er ikke en innstilling for .NET Framework-dataleverandør for Oracle. Det er bare verdien Oracle kall grensesnittet (OCI) bruker ved kommunikasjon med serveren. Bruk gruppestørrelsen for å sikre at klientsiden biter har samme størrelse. Lese eller skrive i mindre deler hurtigbufre ikke data, og fører til en mindre optimalisert tur-retur til serveren fordi en fullstendig pakke som ikke er mottatt eller sendt."
  syntax:
    content: public int ChunkSize { get; }
    return:
      type: System.Int32
      description: "Minste antall byte som skal hente eller sende."
  overload: System.Data.OracleClient.OracleLob.ChunkSize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Tilkoblingen er lukket."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet er lukket eller fjernet."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Det oppstod en Oracle-feil."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Clone
  id: Clone
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Clone()
  nameWithType: OracleLob.Clone()
  fullName: System.Data.OracleClient.OracleLob.Clone()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Oppretter en ny <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektet som refererer til samme Oracle <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> som opprinnelig <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektet."
  remarks: "Egenskaper for den nye <xref:System.Data.OracleClient.OracleLob>objektet opprinnelig er de samme som i det opprinnelige objektet.</xref:System.Data.OracleClient.OracleLob> Imidlertid etter klone er fullført, hver <xref:System.Data.OracleClient.OracleLob>objektet er uavhengig av hverandre.</xref:System.Data.OracleClient.OracleLob> For eksempel endre verdien for den <xref:System.Data.OracleClient.OracleLob.Position%2A>egenskap i opprinnelige <xref:System.Data.OracleClient.OracleLob>ikke endre verdien for <xref:System.Data.OracleClient.OracleLob.Position%2A>på kopien.</xref:System.Data.OracleClient.OracleLob.Position%2A> </xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.Position%2A>"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "En ny <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektet som refererer til samme Oracle <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> som opprinnelig <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektet."
  overload: System.Data.OracleClient.OracleLob.Clone*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Tilkoblingen er lukket."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet er lukket eller fjernet."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Connection
  id: Connection
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Connection
  nameWithType: OracleLob.Connection
  fullName: System.Data.OracleClient.OracleLob.Connection
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Henter den <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> brukes i denne forekomsten av den <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  syntax:
    content: public System.Data.OracleClient.OracleConnection Connection { get; }
    return:
      type: System.Data.OracleClient.OracleConnection
      description: "Tilkobling til en datakilde."
  overload: System.Data.OracleClient.OracleLob.Connection*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet er lukket eller fjernet."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)
  id: CopyTo(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CopyTo(OracleLob)
  nameWithType: OracleLob.CopyTo(OracleLob)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(OracleLob)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Kopier fra dette <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> til et mål <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "Datatypene underliggende må alltid være den samme. Hvis du kopierer fra et <xref:System.Data.OracleClient.OracleType>mål <xref:System.Data.OracleClient.OracleLob>må også være <xref:System.Data.OracleClient.OracleType>.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleType> for eksempel       Hvis målet forskyvningen er utenfor slutten av målet `LOB`, `LOB` dataene skal kopieres er utvidet. Avstanden mellom slutten av den `LOB` og mål-forskyvning utenfor slutten ut med nulltegn for `BLOB` datatyper og mellomrom for `CLOB` og `NCLOB` datatyper.       Ikke skrive til den `LOB`, må du har hentet av `LOB` bruker FOR UPDATE-setningsdelen i SQL SELECT-setningen, og du må ha en lokal transaksjon startet.      > [!NOTE] > I denne versjonen, skriving til en skrivebeskyttet `LOB` kan være vellykket, men ikke oppdatere den `LOB` på serveren. I dette tilfellet, lokalt kopi av det `LOB` oppdateres. Derfor senere leseoperasjoner på den <xref:System.Data.OracleClient.OracleLob>objekt kan returnere resultatene av Skriveoperasjonen.</xref:System.Data.OracleClient.OracleLob>   >> Den `CopyTo` metoden ikke fjerne innholdet i målet `OracleLob` før du utfører kopieringen."
  syntax:
    content: public long CopyTo (System.Data.OracleClient.OracleLob destination);
    parameters:
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "Målet <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
    return:
      type: System.Int64
      description: "Antall byte kopieres. Dette utelater alle polstret byte."
  overload: System.Data.OracleClient.OracleLob.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> angitt i den <code> destination </code> -parameteren er null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Operasjonen er ikke innenfor en transaksjon i <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektet er null, eller tilkoblingen er lukket."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Det oppstod en Oracle-feil."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  id: CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CopyTo(OracleLob,Int64)
  nameWithType: OracleLob.CopyTo(OracleLob,Int64)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(OracleLob,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Kopier fra dette <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> til et mål <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> med den angitte mengden data."
  remarks: "Datatypene underliggende må alltid være den samme. Hvis du kopierer fra et <xref:System.Data.OracleClient.OracleType>mål <xref:System.Data.OracleClient.OracleLob>må også være <xref:System.Data.OracleClient.OracleType>.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleType> for eksempel       Hvis målet forskyvningen er utenfor slutten av målet `LOB`, `LOB` dataene skal kopieres er utvidet. Avstanden mellom slutten av `LOB` og mål forskyvningen utenfor slutten ut med nulltegn for `BLOB` datatyper og mellomrom for `CLOB` og `NCLOB` datatyper.       Ikke skrive til den `LOB`, må du har hentet av `LOB` bruker FOR UPDATE-setningsdelen i SQL SELECT-setningen, og du må ha en lokal transaksjon startet.      > [!NOTE] > I denne versjonen, skriving til en skrivebeskyttet `LOB` blir kanskje vellykket, men oppdateres ikke den `LOB` på serveren. I dette tilfellet, lokalt kopi av det `LOB` er oppdatert. Derfor senere leseoperasjoner på den <xref:System.Data.OracleClient.OracleLob>objekt kan returnere resultatene av Skriveoperasjonen.</xref:System.Data.OracleClient.OracleLob>   >> Den `CopyTo` metoden ikke fjerne innholdet i målet `OracleLob` før du utfører kopieringen."
  syntax:
    content: public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);
    parameters:
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "Målet<xref href=&quot;System.Data.OracleClient.OracleLob&quot;></xref>"
    - id: destinationOffset
      type: System.Int64
      description: "Forskyvningen som skal kopieres. For <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> og <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> datatyper, dette må være et likt antall byte."
    return:
      type: System.Int64
      description: "Antall byte kopieres. Dette utelater alle polstret byte."
  overload: System.Data.OracleClient.OracleLob.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> angitt i den <code> destination </code> parameteren er full."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "En verdi som er angitt i den <code> destinationOffset </code> parameteren er mindre enn null eller større enn 4 GB.       - eller - en verdi som er angitt i den <code> destinationOffset </code> parameteren for en <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> eller <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> datatypen er ikke enda.       - eller - du må angi <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> og <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> datatyper som et partall byte."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Operasjonen er ikke innenfor en transaksjon i <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektet er null, eller tilkoblingen er lukket."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Det oppstod en Oracle-feil."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  id: CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CopyTo(Int64,OracleLob,Int64,Int64)
  nameWithType: OracleLob.CopyTo(Int64,OracleLob,Int64,Int64)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(Int64,OracleLob,Int64,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Kopier fra dette <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> til et mål <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> med angitt mengden data, og kilden forskyvningen."
  remarks: "Datatypene underliggende må alltid være den samme. Hvis du kopierer fra et <xref:System.Data.OracleClient.OracleType>mål <xref:System.Data.OracleClient.OracleLob>må også være <xref:System.Data.OracleClient.OracleType>.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleType> for eksempel       Hvis målet forskyvningen er utenfor slutten av målet `LOB`, `LOB` dataene skal kopieres er utvidet. Avstanden mellom slutten av `LOB` og mål forskyvningen utenfor slutten ut med nulltegn for `BLOB` datatyper og mellomrom for `CLOB` og `NCLOB` datatyper.       Ikke skrive til den `LOB`, må du har hentet av `LOB` bruker FOR UPDATE-setningsdelen i SQL SELECT-setningen, og du må ha en lokal transaksjon startet.      > [!NOTE] > I denne versjonen, skriving til en skrivebeskyttet `LOB` blir kanskje vellykket, men oppdateres ikke den `LOB` på serveren. I dette tilfellet, lokalt kopi av det `LOB` er oppdatert. Derfor senere leseoperasjoner på den <xref:System.Data.OracleClient.OracleLob>objekt kan returnere resultatene av Skriveoperasjonen.</xref:System.Data.OracleClient.OracleLob>   >> Den `CopyTo` metoden ikke fjerne innholdet i målet `OracleLob` før du utfører kopieringen."
  syntax:
    content: public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);
    parameters:
    - id: sourceOffset
      type: System.Int64
      description: "Forskyvningen som skal kopieres. For <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> og <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> datatyper, dette må være et partall."
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "The destination <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;></xref><xref href=&quot;System.Data.OracleClient&quot;></xref>."
    - id: destinationOffset
      type: System.Int64
      description: "Målet forskyvningen som skal kopieres. For <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> og <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> datatyper, dette må være et partall."
    - id: amount
      type: System.Int64
      description: "Antallet data, i byte for å kopiere. For <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> og <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> datatyper, dette må være et partall."
    return:
      type: System.Int64
      description: "Antall byte kopieres. Dette utelater alle polstret byte."
  overload: System.Data.OracleClient.OracleLob.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> angitt i den <code> destination </code> parameteren er full."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "En verdi som er angitt i den <code> amount </code>, <code> sourceOffset </code>, eller <code> destinationOffset </code> parameteren er mindre enn null eller større enn 4 GB.       -or-       A value specified in the <code>amount</code>, <code>sourceOffset</code>, or <code>destinationOffset</code> parameter for a <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;></xref> data type is not even."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Operasjonen er ikke innenfor en transaksjon i <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektet er null, eller tilkoblingen er lukket."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Det oppstod en Oracle-feil."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OracleLob.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleLob.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Som skal legges til."
  overload: System.Data.OracleClient.OracleLob.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.EndBatch
  id: EndBatch
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: EndBatch()
  nameWithType: OracleLob.EndBatch()
  fullName: System.Data.OracleClient.OracleLob.EndBatch()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Tillater serversiden utløsere for å gjenoppta at etter at datadefinisjonsspråkoperasjonen flere skriveoperasjoner."
  remarks: "Kalle <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>metoden før du utfører skriveoperasjoner <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>"
  syntax:
    content: public void EndBatch ();
    parameters: []
  overload: System.Data.OracleClient.OracleLob.EndBatch*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Tilkoblingen er lukket."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet er lukket eller fjernet."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Det oppstod en Oracle-feil."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Erase
  id: Erase
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Erase()
  nameWithType: OracleLob.Erase()
  fullName: System.Data.OracleClient.OracleLob.Erase()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Sletter alle data fra denne <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "Tøm kutte ikke data. Den `LOB` lengden uendret for en `BLOB` datatype, og dataene slettes erstattes av 0x00. `CLOB`og `NCLOB` datatyper er erstattet med mellomrom.       Ikke skrive til den `LOB`, må du har hentet av `LOB` bruker FOR UPDATE-setningsdelen i SQL SELECT-setningen, og du må ha en lokal transaksjon startet.      > [!NOTE] > I denne versjonen, skriving til en skrivebeskyttet `LOB` blir kanskje vellykket, men oppdateres ikke den `LOB` på serveren. I dette tilfellet, lokalt kopi av det `LOB` er oppdatert. Derfor senere leseoperasjoner på den <xref:System.Data.OracleClient.OracleLob>objekt kan returnere resultatene av Skriveoperasjonen.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long Erase ();
    parameters: []
    return:
      type: System.Int64
      description: "Antall byte som er slettet."
  overload: System.Data.OracleClient.OracleLob.Erase*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Operasjonen er ikke innenfor en transaksjon i <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektet er null, eller tilkoblingen er lukket."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet er lukket eller fjernet."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Det oppstod en Oracle-feil."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)
  id: Erase(System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Erase(Int64,Int64)
  nameWithType: OracleLob.Erase(Int64,Int64)
  fullName: System.Data.OracleClient.OracleLob.Erase(Int64,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Sletter angitte mengden data fra denne <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "Summen av verdiene i den `offset` og `amount` parametere kan være større enn størrelsen på <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> Derfor å angi en verdi som er større enn den som ble returnert av den <xref:System.Data.OracleClient.OracleLob.Length%2A>egenskapen lykkes; imidlertid <xref:System.Data.OracleClient.OracleLob.Erase%2A>bare sletter til slutten av <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.Erase%2A> </xref:System.Data.OracleClient.OracleLob.Length%2A> (På samme måte hvis en negativ verdi er sendt til `offset`, <xref:System.Data.OracleClient.OracleLob.Erase%2A>lykkes, men bare slette starter fra begynnelsen av den <xref:System.Data.OracleClient.OracleLob>.)</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.Erase%2A> Dette er forskjellig fra verdien for den <xref:System.Data.OracleClient.OracleLob.Read%2A>og <xref:System.Data.OracleClient.OracleLob.Write%2A>metoder og tilbud fordelen ved å slette alle data fra verdien som er angitt av `offset` uten å gjøre en ekstra tur-retur til serveren for å bekrefte faktisk størrelse.</xref:System.Data.OracleClient.OracleLob.Write%2A> </xref:System.Data.OracleClient.OracleLob.Read%2A>       <xref:System.Data.OracleClient.OracleLob.Erase%2A>ikke kutte av data.</xref:System.Data.OracleClient.OracleLob.Erase%2A> Den `LOB` lengden uendret for en `BLOB` datatype, og dataene slettes erstattes av 0x00. `CLOB`og `NCLOB` datatyper er erstattet med mellomrom.       Ikke skrive til den `LOB`, må du har hentet av `LOB` bruker FOR UPDATE-setningsdelen i SQL SELECT-setningen, og du må ha en lokal transaksjon startet.      > [!NOTE] > I denne versjonen, skriving til en skrivebeskyttet `LOB` blir kanskje vellykket, men oppdateres ikke den `LOB` på serveren. I dette tilfellet, lokalt kopi av det `LOB` er oppdatert. Derfor senere leseoperasjoner på den <xref:System.Data.OracleClient.OracleLob>objekt kan returnere resultatene av Skriveoperasjonen.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long Erase (long offset, long amount);
    parameters:
    - id: offset
      type: System.Int64
      description: "Forskyvningen som skal slettes. For <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> og <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> datatyper, dette må være et partall."
    - id: amount
      type: System.Int64
      description: "Antallet data, i byte til å slette. For <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> og <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> datatyper, dette må være et partall."
    return:
      type: System.Int64
      description: "Antall byte som er slettet."
  overload: System.Data.OracleClient.OracleLob.Erase*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Operasjonen er ikke innenfor en transaksjon i <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektet er null, eller tilkoblingen er lukket."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet er lukket eller fjernet."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Det oppstod en Oracle-feil."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Flush
  id: Flush
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Flush()
  nameWithType: OracleLob.Flush()
  fullName: System.Data.OracleClient.OracleLob.Flush()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Støttes ikke for øyeblikket."
  remarks: "I denne versjonen fungerer ikke denne metoden."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Data.OracleClient.OracleLob.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.IsBatched
  id: IsBatched
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: IsBatched
  nameWithType: OracleLob.IsBatched
  fullName: System.Data.OracleClient.OracleLob.IsBatched
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Henter en verdi som angir om et program kalt den <xref:System.Data.OracleClient.OracleLob.BeginBatch*>metoden.</xref:System.Data.OracleClient.OracleLob.BeginBatch*>"
  remarks: 'Når du bruker en Oracle 8.0.5-server, en Oracle &quot;ORA 00600: Intern feilkode&quot; unntak.'
  syntax:
    content: public bool IsBatched { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis programmet kalles i <xref:System.Data.OracleClient.OracleLob.BeginBatch*>metode, ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.OracleClient.OracleLob.BeginBatch*>"
  overload: System.Data.OracleClient.OracleLob.IsBatched*
  exceptions:
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Det oppstod en Oracle-feil."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.IsNull
  id: IsNull
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: IsNull
  nameWithType: OracleLob.IsNull
  fullName: System.Data.OracleClient.OracleLob.IsNull
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Henter en verdi som angir om den <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> er en <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;> </xref> dataflyten."
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref href=&quot;System.Data.OracleClient.OracleLob&quot;></xref> is a <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref> stream, otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.OracleClient.OracleLob.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.IsTemporary
  id: IsTemporary
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: IsTemporary
  nameWithType: OracleLob.IsTemporary
  fullName: System.Data.OracleClient.OracleLob.IsTemporary
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Henter en verdi som angir om den <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> er en midlertidig <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref>."
  remarks: "Eksemplet nedenfor viser hvordan du oppretter en midlertidig `LOB`.      ```   OracleConnection connection = new OracleConnection(&quot;server=MyServer; integrated security=yes;&quot;);   connection.Open();   OracleTransaction transaction = connection.BeginTransaction();   OracleCommand command = connection.CreateCommand();   command.Transaction = transaction;   command.CommandText = &quot;declare xx blob; begin dbms_lob.createtemporary(xx, false, 0); :tempblob := xx; end;&quot;;   command.Parameters.Add(new OracleParameter(&quot;tempblob&quot;, OracleType.Blob)).Direction = ParameterDirection.Output;   command.ExecuteNonQuery();   OracleLob tempLob = (OracleLob)command.Parameters[0].Value;   tempLob.BeginBatch(OracleLobOpenMode.ReadWrite);   tempLob.Write(tempbuff,0,tempbuff.Length);   tempLob.EndBatch();   command.Parameters.Clear();   command.CommandText = &quot;MyTable.MyProc&quot;;   command.CommandType = CommandType.StoredProcedure;     command.Parameters.Add(new OracleParameter(&quot;ImportDoc&quot;, OracleType.Blob)).Value = tempLob;   command.ExecuteNonQuery();   transaction.Commit();   connection.Close   ```"
  syntax:
    content: public bool IsTemporary { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> er en midlertidig <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref>, ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleLob.IsTemporary*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Tilkoblingen er lukket."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet er lukket eller fjernet."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Det oppstod en Oracle-feil."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Length
  id: Length
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Length
  nameWithType: OracleLob.Length
  fullName: System.Data.OracleClient.OracleLob.Length
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Henter en verdi som returnerer størrelsen på den <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "Størrelsen på den <xref:System.Data.OracleClient.OracleLob>returneres alltid i byte for alle datatyper.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "Størrelsen på den <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> i byte."
  overload: System.Data.OracleClient.OracleLob.Length*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Tilkoblingen er lukket."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet er lukket eller fjernet."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Det oppstod en Oracle-feil."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.LobType
  id: LobType
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: LobType
  nameWithType: OracleLob.LobType
  fullName: System.Data.OracleClient.OracleLob.LobType
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Henter en verdi som returnerer den <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> datatype."
  remarks: "En <xref:System.Data.OracleClient.OracleLob>kan være én av følgende <xref:System.Data.OracleClient.OracleType>datatyper.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleLob>      | Datatypen for OracleType | Beskrivelse |   |--------------------------|-----------------|   | `Blob`| En Oracle `BLOB` datatype som inneholder binære data med en maksimal størrelse på 4 GB. Dette er tilordnet til en <xref:System.Array>av typen <xref:System.Byte>. |   | `Clob`| En Oracle `CLOB` datatype som inneholder tegndata, basert på standard tegn som er angitt på serveren, med en maksimal størrelse på 4 GB.</xref:System.Byte> </xref:System.Array> Dette er tilordnet til <xref:System.String>. |   | `NClob`| En Oracle `NCLOB` datatype som inneholder tegndata, basert på national tegnsettet på serveren med maksimumsstørrelsen på 4 GB.</xref:System.String> Dette er tilordnet til <xref:System.String>. |</xref:System.String>"
  syntax:
    content: public System.Data.OracleClient.OracleType LobType { get; }
    return:
      type: System.Data.OracleClient.OracleType
      description: "Én av de <xref href=&quot;System.Data.OracleClient.OracleType&quot;> </xref> <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> datatyper."
  overload: System.Data.OracleClient.OracleLob.LobType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Null
  id: "Null"
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: "Null"
  nameWithType: OracleLob.Null
  fullName: System.Data.OracleClient.OracleLob.Null
  type: Field
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Representerer en null <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektet."
  remarks: "Du kan lage en <xref:System.Data.OracleClient.OracleLob>som er NULL med dette formatet: ```   OracleLob myLob = OracleLOB.Null;   ``` denne metoden brukes først og fremst for å teste om en `LOB` returnert fra serveren er NULL, som dette eksemplet viser: ```   If(myLob == OracleLob.Null)   ``` en NULL `LOB` fungerer på samme måte som en null byte `LOB` i den <xref:System.Data.OracleClient.OracleLob.Read%2A>lykkes, og returnerer alltid null byte.</xref:System.Data.OracleClient.OracleLob.Read%2A> </xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public static readonly System.Data.OracleClient.OracleLob Null;
    return:
      type: System.Data.OracleClient.OracleLob
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Position
  id: Position
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Position
  nameWithType: OracleLob.Position
  fullName: System.Data.OracleClient.OracleLob.Position
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Henter gjeldende lese plassering i den <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> dataflyten."
  remarks: "Dataflyten må støtte søking ikke hente eller angi posisjonen. Bruk av <xref:System.Data.OracleClient.OracleLob.CanSeek%2A>til å fastslå om Dataflyten støtter søking.</xref:System.Data.OracleClient.OracleLob.CanSeek%2A>       Søking hvor som helst utover meldingens lengde dataflyten støttes. Søking til ulikt posisjon for `CLOB` og `NCLOB` datatyper støttes også. Du finner mer informasjon i avsnittet Merknader for den <xref:System.Data.OracleClient.OracleLob.Read%2A>egenskapen.</xref:System.Data.OracleClient.OracleLob.Read%2A>       Egenskapen posisjon ikke holde oversikt over antall byte fra dataflyt som har blitt brukt, hoppet over, eller begge deler."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "Gjeldende plassering i den <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> dataflyten."
  overload: System.Data.OracleClient.OracleLob.Position*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Tilkoblingen er lukket."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet er lukket eller fjernet."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: OracleLob.Read(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleLob.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Leser en sekvens med byte fra gjeldende <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> strøm- og forskudd posisjonen i dataflyten ved antall byte lest."
  remarks: "Metoden lese leser maksimalt `count` byte fra gjeldende flyten og lagrer dem i `buffer` Start fra `offset`. Gjeldende plassering i dataflyten Avansert på antall byte lest; Hvis det oppstår et unntak, forblir imidlertid gjeldende plassering i dataflyten uendret. Les returnerer antall byte som leses. Den returnerte verdien er null hvis posisjonen er for øyeblikket på slutten av dataflyten. Les blokkerer til minst én byte med data kan leses, at ingen data er tilgjengelig. Lese returnerer 0 Hvis du prøver å lese fra en `LOB` når gjeldende posisjon er på slutten av `LOB`. Les kan returnere færre byte enn forespurte selv om slutten på dataflyten ikke er nådd.       .NET Framework-dataleverandør for Oracle behandler alle `CLOB` og `NCLOB` data som Unicode. Derfor under tilgang til `CLOB` og `NCLOB` -datatyper du alltid har med antall byte, der hvert tegn er 2 byte. Hvis en streng som inneholder tre tegn lagres som for eksempel en `NCLOB` på en Oracle-server der tegnsettet 4 byte per tegn, og du utføre en `Read` operasjonen du angi lengden på strengen som 6 byte, selv om det er lagret som 12 byte på serveren.       C# eksemplet viser hvordan du lese <xref:System.Data.OracleClient.OracleLob>objekter.</xref:System.Data.OracleClient.OracleLob>      ```   public static void ReadLobExample(OracleCommand command)   {      int actual = 0;         //Select some data.      // Table Schema:      //  &quot;CREATE TABLE TableWithLobs (a int, b BLOB, c CLOB, d NCLOB)&quot;;      //  &quot;INSERT INTO TableWithLobs values (1, &quot;AA&quot;, &quot;AAA&quot;, N&quot;AAAA&quot;)&quot;;      command.CommandText = &quot;SELECT * FROM TableWithLobs&quot;;      OracleDataReader reader = command.ExecuteReader();      using(reader)      {         //Obtain the first row of data.         reader.Read();         //Obtain the LOBs (all 3 varieties).         OracleLob BLOB = reader.GetOracleLob(1);         OracleLob CLOB  = reader.GetOracleLob(2);         OracleLob NCLOB = reader.GetOracleLob(3);            //Example - Reading binary data (in chunks).         byte[] buffer = new byte[100];         while((actual = BLOB.Read(buffer, 0, buffer.Length)) >0)            Console.WriteLine(BLOB.LobType + &quot;.Read(&quot; + buffer + &quot;, &quot; + buffer.Length + &quot;) => &quot; + actual);            //Example - Reading CLOB/NCLOB data (in chunks).         //Note: You can read character data as raw Unicode bytes (using OracleLob.Read as in the above example).         //However, because the OracleLob object inherits directly from the.NET stream object,          //all the existing classes that manipluate streams can also be used. For example, the          //.NET StreamReader makes converting the raw bytes into actual characters easier.         StreamReader streamreader = new StreamReader(CLOB, Encoding.Unicode);         char[] cbuffer = new char[100];         while((actual = streamreader.Read(cbuffer, 0, cbuffer.Length)) >0)            Console.WriteLine(CLOB.LobType + &quot;.Read(&quot; + new string(cbuffer, 0, actual) + &quot;, &quot; + cbuffer.Length + &quot;) => &quot; + actual);            //Example - Reading data (all at once).         //You could use StreamReader.ReadToEnd to obtain all the string data,or simply         //call OracleLob.Value to obtain a contiguous allocation of all the data.         Console.WriteLine(NCLOB.LobType + &quot;.Value => &quot; + NCLOB.Value);      }   }   ```Du kan lage en <xref:System.Data.OracleClient.OracleLob>som er NULL med dette formatet: ```   OracleLob myLob = OracleLob.Null;   ``` denne metoden brukes først og fremst for å teste om en `LOB` returnert fra serveren er NULL, som følgende eksempel illustrerer.</xref:System.Data.OracleClient.OracleLob>      ```   If(myLob == OracleLob.Null)   ```En NULL `LOB` fungerer på samme måte som en null byte `LOB` fordi lese lykkes og alltid returnerer null byte."
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "En bytematrise. Låse denne metoden, bufferen inneholder den angitte Bytematrisen med verdiene mellom `offset` og (`offset` + `count`) erstattet med byte lest fra den gjeldende kilden."
    - id: offset
      type: System.Int32
      description: "Forskyvning nullbasert byte i `buffer` vil begynne å lagre dataene lese fra gjeldende dataflyten. For <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> og <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> datatyper, dette må være et partall."
    - id: count
      type: System.Int32
      description: "Maksimalt antall byte som leses fra den gjeldende dataflyten. For <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> og <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> datatyper, dette må være et partall."
    return:
      type: System.Int32
      description: "Totalt antall byte som leses, til bufferen. Dette kan være mindre enn antall byte som ble forespurt hvis mange byte er ikke tilgjengelig for øyeblikket, eller null (0) Hvis slutten på dataflyten er nådd."
  overload: System.Data.OracleClient.OracleLob.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <code> buffer </code> er en nullreferanse (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "En verdi i den <code> offset </code> eller <code> count </code> parameteren er positive.       - eller - summen av parameterne forskyvningen og antallet er større enn bufferlengden.       - eller - en verdi som er angitt i den <code> amount </code> eller <code> offset </code> parameteren er mindre enn null eller større enn 4 GB."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Operasjonen er ikke innenfor en transaksjon i <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektet er null, eller tilkoblingen er lukket."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet er lukket eller fjernet."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Det oppstod en Oracle-feil."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: OracleLob.Seek(Int64,SeekOrigin)
  fullName: System.Data.OracleClient.OracleLob.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Angir posisjonen i gjeldende <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> dataflyten."
  remarks: "Hvis `offset` er negativ, den nye plasseringen må være før plasseringen angitt av `origin` av antall byte som er angitt av `offset`. Hvis `offset` er null, den nye plasseringen må være plasseringen angitt av `origin`. Hvis `offset` er positivt, den nye plasseringen må følge plasseringen angitt av `origin` av antall byte som er angitt av `offset`.       Søking hvor som helst utover meldingens lengde dataflyten støttes. Søking til ulikt posisjon for `CLOB` og `NCLOB` datatyper støttes også. Du finner mer informasjon i avsnittet Merknader for den <xref:System.Data.OracleClient.OracleLob.Read%2A>egenskapen.</xref:System.Data.OracleClient.OracleLob.Read%2A>"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Forskyvning i forhold til kommer fra en byte. Hvis `offset` er negativ, den nye posisjonen kommer før plasseringen angitt av `origin` av antall byte som er angitt av `offset`. Hvis `offset` er null, den nye stillingen er plasseringen angitt av `origin`. Hvis `offset` er positivt, den nye posisjonen følger plasseringen angitt av `origin` av antall byte som er angitt av `offset`."
    - id: origin
      type: System.IO.SeekOrigin
      description: "En verdi av typen <xref:System.IO.SeekOrigin>angir referanse brukes til å få ny posisjon.</xref:System.IO.SeekOrigin>"
    return:
      type: System.Int64
      description: "Den nye posisjonen i gjeldende dataflyten."
  overload: System.Data.OracleClient.OracleLob.Seek*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> origin </code> parameteren inneholder ikke en gyldig verdi."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den resulterende posisjonen er utenfor lengden på verdien."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektet er lukket eller fjernet."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Det oppstod en Oracle-feil."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: OracleLob.SetLength(Int64)
  fullName: System.Data.OracleClient.OracleLob.SetLength(Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Angir hvor lang den <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> stream til en verdi mindre enn gjeldende lengde."
  remarks: "Et forsøk på å øke lengden på den <xref:System.Data.OracleClient.OracleLob>dataflyten mislykkes, og returnerer &quot;melding: ORA&22926;: angitt trim Adresselengden er større enn gjeldende LOB-verdien&quot; fra Oracle-serveren.</xref:System.Data.OracleClient.OracleLob>       En dataflyt må støtte både skrive- og søking for SetLength til funksjonen.       .NET Framework-dataleverandør for Oracle behandler alle `CLOB` og `NCLOB` data som Unicode. Derfor under tilgang til `CLOB` og `NCLOB` -datatyper du alltid har med antall byte, der hvert tegn er 2 byte. Hvis en streng som inneholder tre tegn lagres som for eksempel en `NCLOB` på en Oracle-server der tegnsettet 4 byte per tegn, og du utføre en `SetLength` operasjonen du angi lengden på strengen som 6 byte, selv om det er lagret som 12 byte på serveren.       Ikke skrive til den `LOB`, må du har hentet av `LOB` bruker FOR UPDATE-setningsdelen i SQL SELECT-setningen, og du må ha en lokal transaksjon startet.      > [!NOTE] > En skriveoperasjon til en skrivebeskyttet `LOB` blir kanskje vellykket, men oppdateres ikke den `LOB` på serveren. I dette tilfellet, lokalt kopi av det `LOB` er oppdatert. Derfor senere leseoperasjoner på den <xref:System.Data.OracleClient.OracleLob>objekt kan returnere resultatene av Skriveoperasjonen.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Ønsket lengden på gjeldende <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> dataflyt i byte. For <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> og <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> datatyper, dette må være et partall."
  overload: System.Data.OracleClient.OracleLob.SetLength*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "En verdi som er angitt i den <code> value </code> parameteren for en <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> eller <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> datatypen er ikke enda.       - eller - en verdi som er angitt i den <code> value </code> parameteren er mindre enn null eller større enn 4 GB."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Operasjonen er ikke innenfor en transaksjon i <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektet er null, eller tilkoblingen er lukket."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet er lukket eller fjernet."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Det oppstod en Oracle-feil."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Value
  id: Value
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Value
  nameWithType: OracleLob.Value
  fullName: System.Data.OracleClient.OracleLob.Value
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Henter common language runtime dataflyten verdien tegnekvivalenten for den underliggende verdien."
  remarks: "For <xref:System.Data.OracleClient.OracleType>datatyper, verdien returnerer hele underliggende dataene som en sammenhengende array av typen `Byte[]`.</xref:System.Data.OracleClient.OracleType> For <xref:System.Data.OracleClient.OracleType>og <xref:System.Data.OracleClient.OracleType>datatyper, verdi returnerer alle data som en `String` datatype.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleType> For data som er null returnerer verdien <xref:System.DBNull>.</xref:System.DBNull> Ved å sammenligne de returnerte verdiene, du kan skille mellom tom data, null data og data.      > [!NOTE] > Fordelene ved å bruke `LOB` datatyper er muligheten til å hente store mengder data i biter på klienten. Imidlertid når du bruker verdi, du hente alle dataene for den `LOB` kolonnen som en sammenhengende gruppe, som kan øke programmet overhead betydelig."
  syntax:
    content: public object Value { get; }
    return:
      type: System.Object
      description: "For <xref href=&quot;System.Data.OracleClient.OracleType&quot;></xref>, an array of type <xref uid=&quot;langword_csharp_Byte[]&quot; name=&quot;Byte[]&quot; href=&quot;&quot;></xref>. For <xref href=&quot;System.Data.OracleClient.OracleType&quot;></xref> and <xref href=&quot;System.Data.OracleClient.OracleType&quot;></xref>, a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. For null data <xref href=&quot;System.DBNull&quot;> </xref>."
  overload: System.Data.OracleClient.OracleLob.Value*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet er lukket eller fjernet."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Det oppstod en Oracle-feil."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: OracleLob.Write(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleLob.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Skriver en sekvens med byte til gjeldende <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> flyten og flytter gjeldende plassering i denne dataflyten på antall byte skrevet."
  remarks: "Hvis Skriveoperasjonen lykkes, flytter posisjonen i dataflyten på antall byte skrevet. Hvis det oppstår et unntak, endres ikke posisjonen i dataflyten.       Skriving utenfor slutten av `LOB` er tillatt og viser den `LOB` på antall byte skrevet.       .NET Framework-dataleverandør for Oracle behandler alle `CLOB` og `NCLOB` data som Unicode. Derfor under tilgang til `CLOB` og `NCLOB` -datatyper du alltid har med antall byte, der hvert tegn er 2 byte. Hvis en streng som inneholder tre tegn lagres som for eksempel en `NCLOB` på en Oracle-server der tegnsettet 4 byte per tegn, og du utføre en `Write` operasjonen du angi lengden på strengen som 6 byte, selv om det er lagret som 12 byte på serveren.       Ikke skrive til den `LOB`, må du har hentet av `LOB` bruker FOR UPDATE-setningsdelen i SQL SELECT-setningen, og du må ha en lokal transaksjon startet.       C# eksemplet nedenfor viser hvordan du kan skrive til <xref:System.Data.OracleClient.OracleLob>objekter.</xref:System.Data.OracleClient.OracleLob>      ```   public static void WriteLobExample(OracleCommand command)   {      //Note: Updating LOB data requires a transaction.      command.Transaction = command.Connection.BeginTransaction();      //Select some data.      //    Table Schema:      //        &quot;CREATE TABLE tablewithlobs (a int, b BLOB, c BLOB)&quot;;      //        &quot;INSERT INTO tablewithlobs values (1, &quot;AA&quot;, &quot;AAA&quot;)&quot;;      command.CommandText = &quot;SELECT * FROM TableWithLobs FOR UPDATE&quot;;      OracleDataReader reader = command.ExecuteReader();      using(reader)      {         //Obtain the first row of data.         reader.Read();         //Obtain both LOBs.         OracleLob BLOB1    = reader.GetOracleLob(1);         OracleLob BLOB2    = reader.GetOracleLob(2);         //Perform any desired operations on the LOB, (read, position, and so on).         //...         //Example - Writing binary data (directly to the backend).         //To write, you can use any of the stream classes, or write raw binary data using          //the OracleLob write method. Writing character vs. binary is the same;         //however note that character is always in terms of Unicode byte counts         //(for example: even number of bytes - 2 bytes for every Unicode character).         byte[] buffer = new byte[100];         buffer[0] = 0xCC;         buffer[1] = 0xDD;         BLOB1.Write(buffer, 0, 2);         BLOB1.Position = 0;         Console.WriteLine(BLOB1.LobType + &quot;.Write(&quot; + buffer + &quot;, 0, 2) => &quot; + BLOB1.Value);            //Example - Copying data into another LOB.         long actual = BLOB1.CopyTo(BLOB2);         Console.WriteLine(BLOB1.LobType + &quot;.CopyTo(&quot; + BLOB2.Value + &quot;) => &quot; + actual);            //Commit the transaction now that everything succeeded.         //Note: On error, Transaction.Dispose is called (from the using statement)         //and will automatically roll-back the pending transaction.         command.Transaction.Commit();      }   }   ```      > [!NOTE]> En skriveoperasjon til en skrivebeskyttet `LOB` blir kanskje vellykket, men oppdateres ikke den `LOB` på serveren. I dette tilfellet, lokalt kopi av det `LOB` er oppdatert. Derfor senere leseoperasjoner på den <xref:System.Data.OracleClient.OracleLob>objekt kan returnere resultatene av Skriveoperasjonen.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "En bytematrise. Denne metoden kopierer antall byte som er angitt i `count` fra `buffer` til gjeldende dataflyten."
    - id: offset
      type: System.Int32
      description: "Forskyvning nullbasert byte i `buffer` som du vil kopiere byte til gjeldende dataflyten. For <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> og <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> datatyper, dette må være et partall."
    - id: count
      type: System.Int32
      description: "Antall byte som skrives til gjeldende dataflyten. For <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> og <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> datatyper, dette må være et partall."
  overload: System.Data.OracleClient.OracleLob.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <code> buffer </code> parameteren er en nullreferanse (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "En verdi i den <code> offset </code> eller <code> count </code> parameteren er positive.       - eller - summen av den <code> offset </code> og <code> count </code> parametere er større enn den <code> buffer </code> lengde.       - eller - en verdi som er angitt i den <code> count </code> eller <code> offset </code> parameteren er mindre enn null eller større enn 4 GB.       - eller - du må angi <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> og <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> datatyper som et partall byte."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Operasjonen er ikke innenfor en transaksjon i <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektet er null, eller tilkoblingen er lukket."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet er lukket eller fjernet."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Det oppstod en Oracle-feil."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: WriteByte(Byte)
  nameWithType: OracleLob.WriteByte(Byte)
  fullName: System.Data.OracleClient.OracleLob.WriteByte(Byte)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Skriver en byte til gjeldende plassering i den <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> flyten og flytter posisjonen i dataflyten av én byte."
  remarks: "Hvis Skriveoperasjonen lykkes, flytter posisjonen i dataflyten av én byte. Hvis det oppstår et unntak, endres ikke posisjonen i dataflyten.       Skriving utenfor slutten av den `LOB` er tillatt og viser den `LOB` av én byte.       Ikke skrive til den `LOB`, må du har hentet av `LOB` bruker FOR UPDATE-setningsdelen i SQL SELECT-setningen, og du må ha en lokal transaksjon startet.      > [!NOTE] > En skriveoperasjon til en skrivebeskyttet `LOB` blir kanskje vellykket, men oppdateres ikke den `LOB` på serveren. I dette tilfellet, lokalt kopi av det `LOB` er oppdatert. Derfor senere leseoperasjoner på den <xref:System.Data.OracleClient.OracleLob>objekt kan returnere resultatene av Skriveoperasjonen.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public override void WriteByte (byte value);
    parameters:
    - id: value
      type: System.Byte
      description: "Byte til å skrive til dataflyten."
  overload: System.Data.OracleClient.OracleLob.WriteByte*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Data.OracleClient.OracleException
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleException
  nameWithType: OracleException
  fullName: System.Data.OracleClient.OracleException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Append(OracleLob)
  nameWithType: OracleLob.Append(OracleLob)
  fullName: System.Data.OracleClient.OracleLob.Append(OracleLob)
- uid: System.Data.OracleClient.OracleLob
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleLob
  nameWithType: OracleLob
  fullName: System.Data.OracleClient.OracleLob
- uid: System.Data.OracleClient.OracleLob.BeginBatch
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: BeginBatch()
  nameWithType: OracleLob.BeginBatch()
  fullName: System.Data.OracleClient.OracleLob.BeginBatch()
- uid: System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: BeginBatch(OracleLobOpenMode)
  nameWithType: OracleLob.BeginBatch(OracleLobOpenMode)
  fullName: System.Data.OracleClient.OracleLob.BeginBatch(OracleLobOpenMode)
- uid: System.Data.OracleClient.OracleLobOpenMode
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleLobOpenMode
  nameWithType: OracleLobOpenMode
  fullName: System.Data.OracleClient.OracleLobOpenMode
- uid: System.Data.OracleClient.OracleLob.CanRead
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanRead
  nameWithType: OracleLob.CanRead
  fullName: System.Data.OracleClient.OracleLob.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleLob.CanSeek
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanSeek
  nameWithType: OracleLob.CanSeek
  fullName: System.Data.OracleClient.OracleLob.CanSeek
- uid: System.Data.OracleClient.OracleLob.CanWrite
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanWrite
  nameWithType: OracleLob.CanWrite
  fullName: System.Data.OracleClient.OracleLob.CanWrite
- uid: System.Data.OracleClient.OracleLob.ChunkSize
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: ChunkSize
  nameWithType: OracleLob.ChunkSize
  fullName: System.Data.OracleClient.OracleLob.ChunkSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OracleClient.OracleLob.Clone
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Clone()
  nameWithType: OracleLob.Clone()
  fullName: System.Data.OracleClient.OracleLob.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleLob.Connection
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Connection
  nameWithType: OracleLob.Connection
  fullName: System.Data.OracleClient.OracleLob.Connection
- uid: System.Data.OracleClient.OracleConnection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CopyTo(OracleLob)
  nameWithType: OracleLob.CopyTo(OracleLob)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(OracleLob)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CopyTo(OracleLob,Int64)
  nameWithType: OracleLob.CopyTo(OracleLob,Int64)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(OracleLob,Int64)
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CopyTo(Int64,OracleLob,Int64,Int64)
  nameWithType: OracleLob.CopyTo(Int64,OracleLob,Int64,Int64)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(Int64,OracleLob,Int64,Int64)
- uid: System.Data.OracleClient.OracleLob.Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OracleLob.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleLob.Dispose(Boolean)
- uid: System.Data.OracleClient.OracleLob.EndBatch
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: EndBatch()
  nameWithType: OracleLob.EndBatch()
  fullName: System.Data.OracleClient.OracleLob.EndBatch()
- uid: System.Data.OracleClient.OracleLob.Erase
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Erase()
  nameWithType: OracleLob.Erase()
  fullName: System.Data.OracleClient.OracleLob.Erase()
- uid: System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Erase(Int64,Int64)
  nameWithType: OracleLob.Erase(Int64,Int64)
  fullName: System.Data.OracleClient.OracleLob.Erase(Int64,Int64)
- uid: System.Data.OracleClient.OracleLob.Flush
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Flush()
  nameWithType: OracleLob.Flush()
  fullName: System.Data.OracleClient.OracleLob.Flush()
- uid: System.Data.OracleClient.OracleLob.IsBatched
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsBatched
  nameWithType: OracleLob.IsBatched
  fullName: System.Data.OracleClient.OracleLob.IsBatched
- uid: System.Data.OracleClient.OracleLob.IsNull
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsNull
  nameWithType: OracleLob.IsNull
  fullName: System.Data.OracleClient.OracleLob.IsNull
- uid: System.Data.OracleClient.OracleLob.IsTemporary
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsTemporary
  nameWithType: OracleLob.IsTemporary
  fullName: System.Data.OracleClient.OracleLob.IsTemporary
- uid: System.Data.OracleClient.OracleLob.Length
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Length
  nameWithType: OracleLob.Length
  fullName: System.Data.OracleClient.OracleLob.Length
- uid: System.Data.OracleClient.OracleLob.LobType
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: LobType
  nameWithType: OracleLob.LobType
  fullName: System.Data.OracleClient.OracleLob.LobType
- uid: System.Data.OracleClient.OracleType
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleType
  nameWithType: OracleType
  fullName: System.Data.OracleClient.OracleType
- uid: System.Data.OracleClient.OracleLob.Null
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: "Null"
  nameWithType: OracleLob.Null
  fullName: System.Data.OracleClient.OracleLob.Null
- uid: System.Data.OracleClient.OracleLob.Position
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Position
  nameWithType: OracleLob.Position
  fullName: System.Data.OracleClient.OracleLob.Position
- uid: System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: OracleLob.Read(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleLob.Read(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: OracleLob.Seek(Int64,SeekOrigin)
  fullName: System.Data.OracleClient.OracleLob.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Data.OracleClient.OracleLob.SetLength(System.Int64)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: SetLength(Int64)
  nameWithType: OracleLob.SetLength(Int64)
  fullName: System.Data.OracleClient.OracleLob.SetLength(Int64)
- uid: System.Data.OracleClient.OracleLob.Value
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Value
  nameWithType: OracleLob.Value
  fullName: System.Data.OracleClient.OracleLob.Value
- uid: System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: OracleLob.Write(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleLob.Write(Byte[],Int32,Int32)
- uid: System.Data.OracleClient.OracleLob.WriteByte(System.Byte)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: WriteByte(Byte)
  nameWithType: OracleLob.WriteByte(Byte)
  fullName: System.Data.OracleClient.OracleLob.WriteByte(Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.OracleClient.OracleLob.Append*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Append
  nameWithType: OracleLob.Append
- uid: System.Data.OracleClient.OracleLob.BeginBatch*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: BeginBatch
  nameWithType: OracleLob.BeginBatch
- uid: System.Data.OracleClient.OracleLob.CanRead*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanRead
  nameWithType: OracleLob.CanRead
- uid: System.Data.OracleClient.OracleLob.CanSeek*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanSeek
  nameWithType: OracleLob.CanSeek
- uid: System.Data.OracleClient.OracleLob.CanWrite*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanWrite
  nameWithType: OracleLob.CanWrite
- uid: System.Data.OracleClient.OracleLob.ChunkSize*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: ChunkSize
  nameWithType: OracleLob.ChunkSize
- uid: System.Data.OracleClient.OracleLob.Clone*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Clone
  nameWithType: OracleLob.Clone
- uid: System.Data.OracleClient.OracleLob.Connection*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Connection
  nameWithType: OracleLob.Connection
- uid: System.Data.OracleClient.OracleLob.CopyTo*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CopyTo
  nameWithType: OracleLob.CopyTo
- uid: System.Data.OracleClient.OracleLob.Dispose*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Dispose
  nameWithType: OracleLob.Dispose
- uid: System.Data.OracleClient.OracleLob.EndBatch*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: EndBatch
  nameWithType: OracleLob.EndBatch
- uid: System.Data.OracleClient.OracleLob.Erase*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Erase
  nameWithType: OracleLob.Erase
- uid: System.Data.OracleClient.OracleLob.Flush*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Flush
  nameWithType: OracleLob.Flush
- uid: System.Data.OracleClient.OracleLob.IsBatched*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsBatched
  nameWithType: OracleLob.IsBatched
- uid: System.Data.OracleClient.OracleLob.IsNull*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsNull
  nameWithType: OracleLob.IsNull
- uid: System.Data.OracleClient.OracleLob.IsTemporary*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsTemporary
  nameWithType: OracleLob.IsTemporary
- uid: System.Data.OracleClient.OracleLob.Length*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Length
  nameWithType: OracleLob.Length
- uid: System.Data.OracleClient.OracleLob.LobType*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: LobType
  nameWithType: OracleLob.LobType
- uid: System.Data.OracleClient.OracleLob.Position*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Position
  nameWithType: OracleLob.Position
- uid: System.Data.OracleClient.OracleLob.Read*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Read
  nameWithType: OracleLob.Read
- uid: System.Data.OracleClient.OracleLob.Seek*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Seek
  nameWithType: OracleLob.Seek
- uid: System.Data.OracleClient.OracleLob.SetLength*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: SetLength
  nameWithType: OracleLob.SetLength
- uid: System.Data.OracleClient.OracleLob.Value*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Value
  nameWithType: OracleLob.Value
- uid: System.Data.OracleClient.OracleLob.Write*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Write
  nameWithType: OracleLob.Write
- uid: System.Data.OracleClient.OracleLob.WriteByte*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: WriteByte
  nameWithType: OracleLob.WriteByte
