### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.DirectorySecurity
  id: DirectorySecurity
  children:
  - System.Security.AccessControl.DirectorySecurity.#ctor
  - System.Security.AccessControl.DirectorySecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)
  langs:
  - csharp
  name: DirectorySecurity
  nameWithType: DirectorySecurity
  fullName: System.Security.AccessControl.DirectorySecurity
  type: Class
  summary: "Representerer tilgangskontroll og overvåking sikkerhet for en mappe. Denne klassen kan ikke arves."
  remarks: "Klassen DirectorySecurity angir tilgangsrettigheter for en systemkatalogen og hvordan du vil overvåke forsøk på tilgang. Denne klassen representerer tilgang og audit som et sett med regler. Hver tilgangsregel er representert av en <xref:System.Security.AccessControl.FileSystemAccessRule>objektet, mens hver regel for sporing av endringer er representert av en <xref:System.Security.AccessControl.FileSystemAuditRule>objektet.</xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.FileSystemAccessRule>       Klassen DirectorySecurity er en abstrakt av underliggende filsystemet i Windows-sikkerhet. I dette systemet har hver katalog en detaljert tilgangskontrolliste (DACL), som kontrollerer tilgang til mappen, og en system tilgangskontrolliste (SACL) som angir access control forsøk som overvåkes. Den <xref:System.Security.AccessControl.FileSystemAccessRule>og <xref:System.Security.AccessControl.FileSystemAuditRule>klasser er abstraksjoner tilgangskontrolloppføringene (tilgangskontrolloppføringer) som utgjør DACL og SACL.</xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.FileSystemAccessRule>       Klassen DirectorySecurity skjuler mange detaljer om DACL og SACL; du har ikke bekymre TILGANGSKONTROLLISTEN sortering eller null DACL.       Bruk av <xref:System.Security.AccessControl.FileSecurity>klassen for å hente, Legg til eller endre tilgangsregler som representerer DACL og SACL av en fil.</xref:System.Security.AccessControl.FileSecurity>       Tabellen nedenfor viser metodene som du kan bruke til å få tilgang til og sikre katalogen.      | Oppgaven | Metoder |   |----------|-------------|   | Legger til regler |<xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A?displayProperty=fullName></xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A?displayProperty=fullName><br /><br /> <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A?displayProperty=fullName>|   | Fjern regler |<xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A?displayProperty=fullName></xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A?displayProperty=fullName></xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A?displayProperty=fullName><br /><br /> <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A?displayProperty=fullName>|   | Hente tilgangskontroll til en mappe |<xref:System.IO.Directory.GetAccessControl%2A?displayProperty=fullName></xref:System.IO.Directory.GetAccessControl%2A?displayProperty=fullName></xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A?displayProperty=fullName><br /><br /> <xref:System.IO.DirectoryInfo.GetAccessControl%2A?displayProperty=fullName>|   | Beholde tilgangskontroll til en mappe |<xref:System.IO.Directory.SetAccessControl%2A?displayProperty=fullName></xref:System.IO.Directory.SetAccessControl%2A?displayProperty=fullName></xref:System.IO.DirectoryInfo.GetAccessControl%2A?displayProperty=fullName><br /><br /> <xref:System.IO.DirectoryInfo.SetAccessControl%2A?displayProperty=fullName>|</xref:System.IO.DirectoryInfo.SetAccessControl%2A?displayProperty=fullName>"
  example:
  - "The following code example uses the DirectorySecurity class to add and then remove an access control list (ACL) entry from a directory.  You must supply a valid user or group account to run this example.  \n  \n [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/t-system.security.access_1_1.cpp)]\n [!code-cs[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/t-system.security.access_1_1.cs)]\n [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/t-system.security.access_1_1.vb)]"
  syntax:
    content: 'public sealed class DirectorySecurity : System.Security.AccessControl.FileSystemSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  - System.Security.AccessControl.CommonObjectSecurity
  - System.Security.AccessControl.NativeObjectSecurity
  - System.Security.AccessControl.FileSystemSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.FileSystemSecurity.AccessRightType
  - System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  - System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.Security.AccessControl.DirectorySecurity.#ctor
  id: '#ctor'
  parent: System.Security.AccessControl.DirectorySecurity
  langs:
  - csharp
  name: DirectorySecurity()
  nameWithType: DirectorySecurity.DirectorySecurity()
  fullName: System.Security.AccessControl.DirectorySecurity.DirectorySecurity()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.AccessControl.DirectorySecurity&quot;> </xref> klasse."
  remarks: "Bruk denne konstruktøren når du vil opprette en tom <xref:System.Security.AccessControl.DirectorySecurity>objekt som ikke er basert på en eksisterende mappe.</xref:System.Security.AccessControl.DirectorySecurity> Du kan deretter fylle ut objektet med informasjon om tilgangskontroll og bruke den til en mappe."
  syntax:
    content: public DirectorySecurity ();
    parameters: []
  overload: System.Security.AccessControl.DirectorySecurity.#ctor*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Det gjeldende operativsystemet er ikke Microsoft Windows 2000 eller senere."
  platform:
  - net462
- uid: System.Security.AccessControl.DirectorySecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)
  id: '#ctor(System.String,System.Security.AccessControl.AccessControlSections)'
  parent: System.Security.AccessControl.DirectorySecurity
  langs:
  - csharp
  name: DirectorySecurity(String,AccessControlSections)
  nameWithType: DirectorySecurity.DirectorySecurity(String,AccessControlSections)
  fullName: System.Security.AccessControl.DirectorySecurity.DirectorySecurity(String,AccessControlSections)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.AccessControl.DirectorySecurity&quot;> </xref> klassen fra en angitt mappe med de angitte verdiene i den <xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;> </xref> opplisting."
  remarks: "Denne konstruktøren henter access control informasjon for den angitte mappen og deretter oppretter en <xref:System.Security.AccessControl.DirectorySecurity>objekt som innkapsler denne informasjonen.</xref:System.Security.AccessControl.DirectorySecurity> Du kan deretter undersøkes, Legg til eller slette kontrollen tilgangsinformasjon for den angitte mappen."
  syntax:
    content: public DirectorySecurity (string name, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: name
      type: System.String
      description: "Plasseringen av en mappe til å opprette en <xref href=&quot;System.Security.AccessControl.DirectorySecurity&quot;> </xref> objekt fra."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "Én av de <xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;> </xref> verdier som angir hvilken type tilgang kontrollere (ACL) listeinformasjon som skal hentes."
  overload: System.Security.AccessControl.DirectorySecurity.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> name </code> parameter er en tom streng, inneholder bare mellomrom eller inneholder én eller flere ugyldige tegn som er definert av <xref:System.IO.Path.InvalidPathChars>.</xref:System.IO.Path.InvalidPathChars>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angitte banen er ugyldig (for eksempel det er på en lokal stasjon)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Den angitte filen i den <code> name </code> parameter ble ikke funnet."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil under åpning av katalogen."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <code> name </code> parameteren har et ugyldig format."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Det gjeldende operativsystemet er ikke Microsoft Windows 2000 eller senere."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angitte banen, filnavnet eller begge være lengre enn den systemdefinerte maksimumslengden. For eksempel på Windows-baserte plattformer baner må være mindre enn 248 tegn, og filnavn må være mindre enn 260 tegn."
  - type: System.Security.AccessControl.PrivilegeNotHeldException
    commentId: T:System.Security.AccessControl.PrivilegeNotHeldException
    description: "Den gjeldende systemkontoen har ikke administratorrettigheter."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "Finner ikke mappen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den <code> name </code> parameter angitt en katalog som er skrivebeskyttet.       - eller - operasjonen støttes ikke på gjeldende plattform.       - eller - oppkalleren har ikke den nødvendige tillatelsen."
  platform:
  - net462
references:
- uid: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: System.Security.AccessControl.FileSystemSecurity
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.Security.AccessControl.PrivilegeNotHeldException
  parent: System.Security.AccessControl
  isExternal: false
  name: PrivilegeNotHeldException
  nameWithType: PrivilegeNotHeldException
  fullName: System.Security.AccessControl.PrivilegeNotHeldException
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.Security.AccessControl.DirectorySecurity.#ctor
  parent: System.Security.AccessControl.DirectorySecurity
  isExternal: false
  name: DirectorySecurity()
  nameWithType: DirectorySecurity.DirectorySecurity()
  fullName: System.Security.AccessControl.DirectorySecurity.DirectorySecurity()
- uid: System.Security.AccessControl.DirectorySecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.DirectorySecurity
  isExternal: false
  name: DirectorySecurity(String,AccessControlSections)
  nameWithType: DirectorySecurity.DirectorySecurity(String,AccessControlSections)
  fullName: System.Security.AccessControl.DirectorySecurity.DirectorySecurity(String,AccessControlSections)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.AccessControlSections
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlSections
  nameWithType: AccessControlSections
  fullName: System.Security.AccessControl.AccessControlSections
- uid: System.Security.AccessControl.DirectorySecurity.#ctor*
  parent: System.Security.AccessControl.DirectorySecurity
  isExternal: false
  name: DirectorySecurity
  nameWithType: DirectorySecurity.DirectorySecurity
