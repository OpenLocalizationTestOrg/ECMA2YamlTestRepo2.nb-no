### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.EventInstance
  id: EventInstance
  children:
  - System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32)
  - System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32,System.Diagnostics.EventLogEntryType)
  - System.Diagnostics.EventInstance.CategoryId
  - System.Diagnostics.EventInstance.EntryType
  - System.Diagnostics.EventInstance.InstanceId
  langs:
  - csharp
  name: EventInstance
  nameWithType: EventInstance
  fullName: System.Diagnostics.EventInstance
  type: Class
  summary: "Representerer språknøytrale informasjon for en oppføring i hendelsesloggen."
  remarks: "Bruk EventInstance til å skrive en oppføring i hendelsesloggen med en ressurs-ID i stedet for en strengverdi. For å skrive en oppføring i hendelsesloggen, kan du starte den <xref:System.Diagnostics.EventInstance.InstanceId%2A>egenskapen og sende forekomsten av <xref:System.Diagnostics.EventLog.WriteEvent%2A>metode.</xref:System.Diagnostics.EventLog.WriteEvent%2A> </xref:System.Diagnostics.EventInstance.InstanceId%2A> Event Viewer bruker forekomst-ID til å søke etter og vise tilsvarende streng fra oversatte ressursfilen basert på gjeldende språkinnstillinger. Du må registrere hendelseskilden med den tilsvarende ressursfilen før du skriver hendelser ved hjelp av ressurs-IDer.       Når du skriver hendelser, kan du angi den <xref:System.Diagnostics.EventInstance.EntryType%2A>til å angi ikonet Event Viewer viser for oppføringen.</xref:System.Diagnostics.EventInstance.EntryType%2A> Du kan også angi en <xref:System.Diagnostics.EventInstance.CategoryId%2A>til å angi kategorien Event Viewer viser for oppføringen.</xref:System.Diagnostics.EventInstance.CategoryId%2A>       Event Viewer bruker kategori for å filtrere hendelser som er skrevet av en hendelseskilden. Event Viewer kan vise kategorien som en tallverdi, eller den kan bruke kategorien som en ressurs-ID til å vise en lokaliserte strengen.       Hvis du vil vise kategorien oversatte strenger i hendelseslisten, må du bruke en hendelseskilden konfigurert med en kategori ressursfil, og angi den <xref:System.Diagnostics.EventInstance.CategoryId%2A>til en ressurs-ID i kategorien ressursfilen.</xref:System.Diagnostics.EventInstance.CategoryId%2A> Hvis hendelseskilden ikke har en konfigurert kategori ressursfil, eller den angitte <xref:System.Diagnostics.EventInstance.CategoryId%2A>samsvarer ikke indeksen en streng i kategorien ressursfilen, og deretter Hendelsesliste viser numerisk kategori-verdien for oppføringen.</xref:System.Diagnostics.EventInstance.CategoryId%2A> Konfigurer kategori ressursfilen, sammen med antall kategori strenger i ressursfilen, ved hjelp av <xref:System.Diagnostics.EventLogInstaller>eller <xref:System.Diagnostics.EventSourceCreationData>klasse.</xref:System.Diagnostics.EventSourceCreationData> </xref:System.Diagnostics.EventLogInstaller>       Du må registrere en kilde for en hendelseslogg før du bruker EventInstance for å skrive en hendelse med den <xref:System.Diagnostics.EventLog.WriteEvent%2A>metoden.</xref:System.Diagnostics.EventLog.WriteEvent%2A> Kilden må konfigureres for skriving oversatte oppføringer til loggen, og kilden må angi minst en message ressursfil.       Opprett ny hendelseskilden under installasjonen av programmet. Dette gjør at tiden for operativsystem for å oppdatere listen over registrert hendelsen datakilder og deres konfigurasjoner. Hvis operativsystemet ikke er oppdatert listen over datakilder hendelsen, og du prøver å skrive en hendelse med den nye kilden Skriveoperasjonen mislykkes. Du kan konfigurere en ny datakilde ved hjelp av en <xref:System.Diagnostics.EventLogInstaller>, eller bruk den <xref:System.Diagnostics.EventLog.CreateEventSource%2A>metoden.</xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLogInstaller> Du må ha administratorrettigheter på datamaskinen for å opprette en ny hendelseskilde.       For informasjon om definerer hendelsesmeldinger og bygge hendelsesloggen ressursfiler, se emnet &quot;Meldingen kompilatoren&quot; i Platform SDK-dokumentasjonen på [http://msdn.microsoft.com](http://msdn.microsoft.com)."
  example:
  - "The following code example writes an informational event entry, and then reuses the EventInstance to write an entry for a warning event to an existing event log. The event message text is specified using a resource identifier in a message resource file. The code example assumes that the corresponding message resource file has been registered for the source.  \n  \n [!code-cpp[EventLog_WriteEvent#9](~/add/codesnippet/cpp/t-system.diagnostics.eve_2_1.cpp)]\n [!code-vb[EventLog_WriteEvent#9](~/add/codesnippet/visualbasic/t-system.diagnostics.eve_2_1.vb)]\n [!code-cs[EventLog_WriteEvent#9](~/add/codesnippet/csharp/t-system.diagnostics.eve_2_1.cs)]  \n  \n The code example uses the following message text file, built into the resource library EventLogMsgs.dll. A message text file is the source from which the message resource file is created. The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.  \n  \n```  \n; // EventLogMsgs.mc  \n; // ********************************************************  \n  \n; // Use the following commands to build this file:  \n  \n; //   mc -s EventLogMsgs.mc  \n; //   rc EventLogMsgs.rc  \n; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   \n; // ********************************************************  \n  \n; // - Event categories -  \n; // Categories must be numbered consecutively starting at 1.  \n; // ********************************************************  \n  \nMessageId=0x1  \nSeverity=Success  \nSymbolicName=INSTALL_CATEGORY  \nLanguage=English  \nInstallation  \n.  \n  \nMessageId=0x2  \nSeverity=Success  \nSymbolicName=QUERY_CATEGORY  \nLanguage=English  \nDatabase Query  \n.  \n  \nMessageId=0x3  \nSeverity=Success  \nSymbolicName=REFRESH_CATEGORY  \nLanguage=English  \nData Refresh  \n.  \n  \n; // - Event messages -  \n; // *********************************  \n  \nMessageId = 1000  \nSeverity = Success  \nFacility = Application  \nSymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  \nLanguage=English  \nMy application message text, in English, for message id 1000, called from %1.  \n.  \n  \nMessageId = 1001  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  \nLanguage=English  \nMy application message text, in English, for message id 1001, called from %1.  \n.  \n  \nMessageId = 1002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = GENERIC_INFO_MESSAGE_ID_1002  \nLanguage=English  \nMy generic information message in English, for message id 1002.  \n.  \n  \nMessageId = 1003  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  \nLanguage=English  \nMy generic warning message in English, for message id 1003, called from %1.  \n.  \n  \nMessageId = 1004  \nSeverity = Success  \nFacility = Application  \nSymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  \nLanguage=English  \nThe update cycle is complete for %%5002.  \n.  \n  \nMessageId = 1005  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  \nLanguage=English  \nThe refresh operation did not complete because the connection to server %1 could not be established.  \n.  \n  \n; // - Event log display name -  \n; // ********************************************************  \n  \nMessageId = 5001  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  \nLanguage=English  \nSample Event Log  \n.  \n  \n; // - Event message parameters -  \n; //   Language independent insertion strings  \n; // ********************************************************  \n  \nMessageId = 5002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  \nLanguage=English  \nSVC_UPDATE.EXE  \n.  \n```"
  syntax:
    content: public class EventInstance
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32)
  id: '#ctor(System.Int64,System.Int32)'
  parent: System.Diagnostics.EventInstance
  langs:
  - csharp
  name: EventInstance(Int64,Int32)
  nameWithType: EventInstance.EventInstance(Int64,Int32)
  fullName: System.Diagnostics.EventInstance.EventInstance(Int64,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Diagnostics.EventInstance&quot;> </xref> klasse ved hjelp av angitt ressurs identifikatorene for oversatte meldings- og teksten for hendelsen."
  remarks: "For å skrive inn en hendelseslogg en oppføring i informasjon, kan du starte en <xref:System.Diagnostics.EventInstance>og sende den til den <xref:System.Diagnostics.EventLog.WriteEvent%2A>metoden.</xref:System.Diagnostics.EventLog.WriteEvent%2A> </xref:System.Diagnostics.EventInstance> Angi den `instanceId` til ressurs-IDen for hendelsesmeldingen i den tilsvarende <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>egenskapen for datakilden.</xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> Angi den `categoryId` til en kategori for numerisk verdi eller ressurs-IDen for hendelseskategorien i den <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>egenskapen for datakilden; sett av `categoryId` til null for ingen hendelseskategori.</xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> Den <xref:System.Diagnostics.EventInstance.EntryType%2A>for den nye forekomsten er satt til <xref:System.Diagnostics.EventLogEntryType>som standard.</xref:System.Diagnostics.EventLogEntryType> </xref:System.Diagnostics.EventInstance.EntryType%2A>       Event Viewer bruker identifikatorene ressurs for å vise tilsvarende strengene fra de lokaliserte ressursfilene for datakilden. Du må registrere kilde med de tilsvarende ressursfilene før du kan skrive hendelser ved hjelp av ressurs-IDer."
  example:
  - "The following code example writes an informational event entry, and then reuses the <xref:System.Diagnostics.EventInstance> to write an entry for a warning event to an existing event log. The event message text is specified using a resource identifier in a message resource file. The code example assumes that the corresponding message resource file has been registered for the source.  \n  \n [!code-cpp[EventLog_WriteEvent#9](~/add/codesnippet/cpp/m-system.diagnostics.eve_5_1.cpp)]\n [!code-vb[EventLog_WriteEvent#9](~/add/codesnippet/visualbasic/m-system.diagnostics.eve_5_1.vb)]\n [!code-cs[EventLog_WriteEvent#9](~/add/codesnippet/csharp/m-system.diagnostics.eve_5_1.cs)]  \n  \n The code example uses the following message text file, built into the resource library EventLogMsgs.dll. A message text file is the source from which the message resource file is created. The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.  \n  \n```  \n; // EventLogMsgs.mc  \n; // ********************************************************  \n  \n; // Use the following commands to build this file:  \n  \n; //   mc -s EventLogMsgs.mc  \n; //   rc EventLogMsgs.rc  \n; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   \n; // ********************************************************  \n  \n; // - Event categories -  \n; // Categories must be numbered consecutively starting at 1.  \n; // ********************************************************  \n  \nMessageId=0x1  \nSeverity=Success  \nSymbolicName=INSTALL_CATEGORY  \nLanguage=English  \nInstallation  \n.  \n  \nMessageId=0x2  \nSeverity=Success  \nSymbolicName=QUERY_CATEGORY  \nLanguage=English  \nDatabase Query  \n.  \n  \nMessageId=0x3  \nSeverity=Success  \nSymbolicName=REFRESH_CATEGORY  \nLanguage=English  \nData Refresh  \n.  \n  \n; // - Event messages -  \n; // *********************************  \n  \nMessageId = 1000  \nSeverity = Success  \nFacility = Application  \nSymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  \nLanguage=English  \nMy application message text, in English, for message id 1000, called from %1.  \n.  \n  \nMessageId = 1001  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  \nLanguage=English  \nMy application message text, in English, for message id 1001, called from %1.  \n.  \n  \nMessageId = 1002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = GENERIC_INFO_MESSAGE_ID_1002  \nLanguage=English  \nMy generic information message in English, for message id 1002.  \n.  \n  \nMessageId = 1003  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  \nLanguage=English  \nMy generic warning message in English, for message id 1003, called from %1.  \n.  \n  \nMessageId = 1004  \nSeverity = Success  \nFacility = Application  \nSymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  \nLanguage=English  \nThe update cycle is complete for %%5002.  \n.  \n  \nMessageId = 1005  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  \nLanguage=English  \nThe refresh operation did not complete because the connection to server %1 could not be established.  \n.  \n  \n; // - Event log display name -  \n; // ********************************************************  \n  \nMessageId = 5001  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  \nLanguage=English  \nSample Event Log  \n.  \n  \n; // - Event message parameters -  \n; //   Language independent insertion strings  \n; // ********************************************************  \n  \nMessageId = 5002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  \nLanguage=English  \nSVC_UPDATE.EXE  \n.  \n```"
  syntax:
    content: public EventInstance (long instanceId, int categoryId);
    parameters:
    - id: instanceId
      type: System.Int64
      description: "Ressurs-IDen som svarer til en streng som er definert i ressursen meldingsfilen for hendelseskilden."
    - id: categoryId
      type: System.Int32
      description: "Ressurs-IDen som svarer til en streng som er definert i kategorien ressursfilen hendelseskilden eller null til å angi Ingen kategori for hendelsen."
  overload: System.Diagnostics.EventInstance.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den <code> instanceId </code> parameteren er en negativ verdi eller en verdi som er større enn &lt;xref:System.UInt32.MaxValue?displayProperty=fullName&gt;.       - eller - <code> categoryId </code> parameteren er en negativ verdi eller en verdi som er større enn &lt;xref:System.UInt16.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32,System.Diagnostics.EventLogEntryType)
  id: '#ctor(System.Int64,System.Int32,System.Diagnostics.EventLogEntryType)'
  parent: System.Diagnostics.EventInstance
  langs:
  - csharp
  name: EventInstance(Int64,Int32,EventLogEntryType)
  nameWithType: EventInstance.EventInstance(Int64,Int32,EventLogEntryType)
  fullName: System.Diagnostics.EventInstance.EventInstance(Int64,Int32,EventLogEntryType)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Diagnostics.EventInstance&quot;> </xref> klasse ved hjelp av angitt ressurs identifikatorene for oversatte meldings- og teksten for hendelsen-posten og posttypen angitt hendelseslogg."
  remarks: "For å skrive inn en oppføring i en hendelseslogg, kan du starte en <xref:System.Diagnostics.EventInstance>og sende den til den <xref:System.Diagnostics.EventLog.WriteEvent%2A>metoden.</xref:System.Diagnostics.EventLog.WriteEvent%2A> </xref:System.Diagnostics.EventInstance> Angi den `instanceId` til ressurs-IDen for hendelsesmeldingen i den tilsvarende <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>egenskapen for datakilden.</xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> Angi den `categoryId` til en kategori for numerisk verdi eller ressurs-IDen for hendelseskategorien i den <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>egenskapen for datakilden; sett av `categoryId` til null for ingen hendelseskategori.</xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>       Event Viewer bruker identifikatorene ressurs for å vise tilsvarende strengene fra de lokaliserte ressursfilene for datakilden. Du må registrere kilde med de tilsvarende ressursfilene før du kan skrive hendelser ved hjelp av ressurs-IDer.       Angi den `entryType` til en av typene det forhåndsdefinerte oppføring. Event Viewer bruker hendelsestypen for å avgjøre hvilke ikon som skal vises i listevisning i hendelsesloggen."
  example:
  - "The following code example writes two audit event entries to the event log `myNewLog`. The code example creates a new event source and a new event log if they do not exist on the local computer. The event message text is specified using a resource identifier in a resource file.  \n  \n [!code-cpp[EventLog_WriteEvent#7](~/add/codesnippet/cpp/fc333350-d8a8-40ee-b15e-_1.cpp)]\n [!code-vb[EventLog_WriteEvent#7](~/add/codesnippet/visualbasic/fc333350-d8a8-40ee-b15e-_1.vb)]\n [!code-cs[EventLog_WriteEvent#7](~/add/codesnippet/csharp/fc333350-d8a8-40ee-b15e-_1.cs)]  \n  \n The code example uses the following message text file, built into the resource library EventLogMsgs.dll. A message text file is the source from which the message resource file is created. The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.  \n  \n```  \n; // EventLogMsgs.mc  \n; // ********************************************************  \n  \n; // Use the following commands to build this file:  \n  \n; //   mc -s EventLogMsgs.mc  \n; //   rc EventLogMsgs.rc  \n; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   \n; // ********************************************************  \n  \n; // - Event categories -  \n; // Categories must be numbered consecutively starting at 1.  \n; // ********************************************************  \n  \nMessageId=0x1  \nSeverity=Success  \nSymbolicName=INSTALL_CATEGORY  \nLanguage=English  \nInstallation  \n.  \n  \nMessageId=0x2  \nSeverity=Success  \nSymbolicName=QUERY_CATEGORY  \nLanguage=English  \nDatabase Query  \n.  \n  \nMessageId=0x3  \nSeverity=Success  \nSymbolicName=REFRESH_CATEGORY  \nLanguage=English  \nData Refresh  \n.  \n  \n; // - Event messages -  \n; // *********************************  \n  \nMessageId = 1000  \nSeverity = Success  \nFacility = Application  \nSymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  \nLanguage=English  \nMy application message text, in English, for message id 1000, called from %1.  \n.  \n  \nMessageId = 1001  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  \nLanguage=English  \nMy application message text, in English, for message id 1001, called from %1.  \n.  \n  \nMessageId = 1002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = GENERIC_INFO_MESSAGE_ID_1002  \nLanguage=English  \nMy generic information message in English, for message id 1002.  \n.  \n  \nMessageId = 1003  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  \nLanguage=English  \nMy generic warning message in English, for message id 1003, called from %1.  \n.  \n  \nMessageId = 1004  \nSeverity = Success  \nFacility = Application  \nSymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  \nLanguage=English  \nThe update cycle is complete for %%5002.  \n.  \n  \nMessageId = 1005  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  \nLanguage=English  \nThe refresh operation did not complete because the connection to server %1 could not be established.  \n.  \n  \n; // - Event log display name -  \n; // ********************************************************  \n  \nMessageId = 5001  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  \nLanguage=English  \nSample Event Log  \n.  \n  \n; // - Event message parameters -  \n; //   Language independent insertion strings  \n; // ********************************************************  \n  \nMessageId = 5002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  \nLanguage=English  \nSVC_UPDATE.EXE  \n.  \n```"
  syntax:
    content: public EventInstance (long instanceId, int categoryId, System.Diagnostics.EventLogEntryType entryType);
    parameters:
    - id: instanceId
      type: System.Int64
      description: "Ressurs-IDen som svarer til en streng som er definert i ressursen meldingsfilen for hendelseskilden."
    - id: categoryId
      type: System.Int32
      description: "Ressurs-IDen som svarer til en streng som er definert i kategorien ressursfilen hendelseskilden eller null til å angi Ingen kategori for hendelsen."
    - id: entryType
      type: System.Diagnostics.EventLogEntryType
      description: "En <xref href=&quot;System.Diagnostics.EventLogEntryType&quot;> </xref> verdi som angir hendelsestypen."
  overload: System.Diagnostics.EventInstance.#ctor*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>entryType</code>er ikke et gyldig <xref href=&quot;System.Diagnostics.EventLogEntryType&quot;> </xref> verdi."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>instanceId</code>er en negativ verdi eller en verdi større enn &lt;xref:System.UInt32.MaxValue?displayProperty=fullName&gt;.       - eller - <code>categoryId</code> er negativ eller en verdi større enn &lt;xref:System.UInt16.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Diagnostics.EventInstance.CategoryId
  id: CategoryId
  parent: System.Diagnostics.EventInstance
  langs:
  - csharp
  name: CategoryId
  nameWithType: EventInstance.CategoryId
  fullName: System.Diagnostics.EventInstance.CategoryId
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Henter eller angir ressurs-IDen som angir kategorien Programdefinert for hendelsen."
  remarks: "Hendelsesloggen kategorier er Programdefinert verdier å filtrere hendelser, eller angi mer informasjon om hendelsen. Programmet kan for eksempel definere separate kategorier for forskjellige komponenter eller annen operasjoner.       Angi egenskapen KategoriID til å angi kategorien Event Viewer viser for oppføringen. Event Viewer kan vise kategorien som en tallverdi, eller den kan bruke kategori-ID som en ressurs-ID til å vise en lokaliserte strengen basert på gjeldende språkinnstillinger.       Kilden til å vise kategori for oversatte strenger i tilfelle Viewer, må du bruke en hendelse konfigurert med en kategori ressursfil, og angi kategori-ID til en ressurs-ID i kategorien ressursfilen. Hvis hendelseskilden ikke har en konfigurert kategori ressursfil eller angitt kategori-ID indekserer ikke en streng i kategorien ressursfilen og deretter Hendelsesliste viser numerisk kategori-verdien for oppføringen.       Du må registrere kilde med den tilsvarende ressursfilen før du skriver hendelseskategorier ved hjelp av ressurs-IDer. Konfigurer kategori ressursfilen, sammen med antall kategori strenger i ressursfilen, ved hjelp av <xref:System.Diagnostics.EventLogInstaller>eller <xref:System.Diagnostics.EventSourceCreationData>klasse.</xref:System.Diagnostics.EventSourceCreationData> </xref:System.Diagnostics.EventLogInstaller> Når du definerer kategori strenger i en ressursfil, kategori ressurs-IDer må være nummererte pålogging fra 1, opptil den konfigurerte <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>egenskapsverdi.</xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>       Hendelseskategorier er valgfrie. Hvis programmet ikke bruker kategorier, ikke angi kategori-ID for oppføring i hendelsesloggen.       For informasjon om definere hendelsesmeldinger og oppretting av hendelsen ressursfiler, se emnet &quot;Meldingen kompilatoren&quot; i Platform SDK-dokumentasjonen på [http://msdn.microsoft.com](http://msdn.microsoft.com/). For mer informasjon om hvordan du definerer hendelseskategorier i ressursfiler, kan du se emnet &quot;hendelseskategorier&quot; i SDK"
  example:
  - "The following code example writes an informational event entry, and then reuses the <xref:System.Diagnostics.EventInstance> to write an entry for a warning event to an existing event log. The event message text is specified using a resource identifier in a message resource file. The code example assumes that the corresponding message resource file has been registered for the source.  \n  \n [!code-cpp[EventLog_WriteEvent#9](~/add/codesnippet/cpp/p-system.diagnostics.eve_24_1.cpp)]\n [!code-vb[EventLog_WriteEvent#9](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_24_1.vb)]\n [!code-cs[EventLog_WriteEvent#9](~/add/codesnippet/csharp/p-system.diagnostics.eve_24_1.cs)]  \n  \n The code example uses the following message text file, built into the resource library EventLogMsgs.dll. A message text file is the source from which the message resource file is created. The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.  \n  \n```  \n; // EventLogMsgs.mc  \n; // ********************************************************  \n  \n; // Use the following commands to build this file:  \n  \n; //   mc -s EventLogMsgs.mc  \n; //   rc EventLogMsgs.rc  \n; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   \n; // ********************************************************  \n  \n; // - Event categories -  \n; // Categories must be numbered consecutively starting at 1.  \n; // ********************************************************  \n  \nMessageId=0x1  \nSeverity=Success  \nSymbolicName=INSTALL_CATEGORY  \nLanguage=English  \nInstallation  \n.  \n  \nMessageId=0x2  \nSeverity=Success  \nSymbolicName=QUERY_CATEGORY  \nLanguage=English  \nDatabase Query  \n.  \n  \nMessageId=0x3  \nSeverity=Success  \nSymbolicName=REFRESH_CATEGORY  \nLanguage=English  \nData Refresh  \n.  \n  \n; // - Event messages -  \n; // *********************************  \n  \nMessageId = 1000  \nSeverity = Success  \nFacility = Application  \nSymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  \nLanguage=English  \nMy application message text, in English, for message id 1000, called from %1.  \n.  \n  \nMessageId = 1001  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  \nLanguage=English  \nMy application message text, in English, for message id 1001, called from %1.  \n.  \n  \nMessageId = 1002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = GENERIC_INFO_MESSAGE_ID_1002  \nLanguage=English  \nMy generic information message in English, for message id 1002.  \n.  \n  \nMessageId = 1003  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  \nLanguage=English  \nMy generic warning message in English, for message id 1003, called from %1.  \n.  \n  \nMessageId = 1004  \nSeverity = Success  \nFacility = Application  \nSymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  \nLanguage=English  \nThe update cycle is complete for %%5002.  \n.  \n  \nMessageId = 1005  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  \nLanguage=English  \nThe refresh operation did not complete because the connection to server %1 could not be established.  \n.  \n  \n; // - Event log display name -  \n; // ********************************************************  \n  \nMessageId = 5001  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  \nLanguage=English  \nSample Event Log  \n.  \n  \n; // - Event message parameters -  \n; //   Language independent insertion strings  \n; // ********************************************************  \n  \nMessageId = 5002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  \nLanguage=English  \nSVC_UPDATE.EXE  \n.  \n```"
  syntax:
    content: public int CategoryId { get; set; }
    return:
      type: System.Int32
      description: "En numerisk kategori verdien eller ressurs-ID som svarer til en streng som er definert i kategorien ressursfilen for hendelseskilden. Standarden er null, noe som betyr at ingen kategori vises for oppføringen hendelsen."
  overload: System.Diagnostics.EventInstance.CategoryId*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Egenskapen er satt til en negativ verdi eller til en verdi større enn &lt;xref:System.UInt16.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Diagnostics.EventInstance.EntryType
  id: EntryType
  parent: System.Diagnostics.EventInstance
  langs:
  - csharp
  name: EntryType
  nameWithType: EventInstance.EntryType
  fullName: System.Diagnostics.EventInstance.EntryType
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Henter eller angir hendelsestypen for oppføring i hendelsesloggen."
  remarks: "Hver hendelse er en enkel type programmet angir når den registrerer hendelsen. Event Viewer bruker hendelsestypen for å avgjøre hvilke ikon som skal vises i listevisning i hendelsesloggen."
  example:
  - "The following code example writes an informational event entry, and then reuses the <xref:System.Diagnostics.EventInstance> to write an entry for a warning event to an existing event log. The event message text is specified using a resource identifier in a message resource file. The code example assumes that the corresponding message resource file has been registered for the source.  \n  \n [!code-cpp[EventLog_WriteEvent#9](~/add/codesnippet/cpp/p-system.diagnostics.eve_11_1.cpp)]\n [!code-vb[EventLog_WriteEvent#9](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_11_1.vb)]\n [!code-cs[EventLog_WriteEvent#9](~/add/codesnippet/csharp/p-system.diagnostics.eve_11_1.cs)]  \n  \n The code example uses the following message text file, built into the resource library EventLogMsgs.dll. A message text file is the source from which the message resource file is created. The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.  \n  \n```  \n; // EventLogMsgs.mc  \n; // ********************************************************  \n  \n; // Use the following commands to build this file:  \n  \n; //   mc -s EventLogMsgs.mc  \n; //   rc EventLogMsgs.rc  \n; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   \n; // ********************************************************  \n  \n; // - Event categories -  \n; // Categories must be numbered consecutively starting at 1.  \n; // ********************************************************  \n  \nMessageId=0x1  \nSeverity=Success  \nSymbolicName=INSTALL_CATEGORY  \nLanguage=English  \nInstallation  \n.  \n  \nMessageId=0x2  \nSeverity=Success  \nSymbolicName=QUERY_CATEGORY  \nLanguage=English  \nDatabase Query  \n.  \n  \nMessageId=0x3  \nSeverity=Success  \nSymbolicName=REFRESH_CATEGORY  \nLanguage=English  \nData Refresh  \n.  \n  \n; // - Event messages -  \n; // *********************************  \n  \nMessageId = 1000  \nSeverity = Success  \nFacility = Application  \nSymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  \nLanguage=English  \nMy application message text, in English, for message id 1000, called from %1.  \n.  \n  \nMessageId = 1001  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  \nLanguage=English  \nMy application message text, in English, for message id 1001, called from %1.  \n.  \n  \nMessageId = 1002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = GENERIC_INFO_MESSAGE_ID_1002  \nLanguage=English  \nMy generic information message in English, for message id 1002.  \n.  \n  \nMessageId = 1003  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  \nLanguage=English  \nMy generic warning message in English, for message id 1003, called from %1.  \n.  \n  \nMessageId = 1004  \nSeverity = Success  \nFacility = Application  \nSymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  \nLanguage=English  \nThe update cycle is complete for %%5002.  \n.  \n  \nMessageId = 1005  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  \nLanguage=English  \nThe refresh operation did not complete because the connection to server %1 could not be established.  \n.  \n  \n; // - Event log display name -  \n; // ********************************************************  \n  \nMessageId = 5001  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  \nLanguage=English  \nSample Event Log  \n.  \n  \n; // - Event message parameters -  \n; //   Language independent insertion strings  \n; // ********************************************************  \n  \nMessageId = 5002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  \nLanguage=English  \nSVC_UPDATE.EXE  \n.  \n```"
  syntax:
    content: public System.Diagnostics.EventLogEntryType EntryType { get; set; }
    return:
      type: System.Diagnostics.EventLogEntryType
      description: "En <xref href=&quot;System.Diagnostics.EventLogEntryType&quot;> </xref> verdi som angir oppføring hendelsestype. Standardverdien er <xref href=&quot;System.Diagnostics.EventLogEntryType&quot;> </xref>."
  overload: System.Diagnostics.EventInstance.EntryType*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Egenskapen er ikke satt til en gyldig <xref href=&quot;System.Diagnostics.EventLogEntryType&quot;> </xref> verdi."
  platform:
  - net462
- uid: System.Diagnostics.EventInstance.InstanceId
  id: InstanceId
  parent: System.Diagnostics.EventInstance
  langs:
  - csharp
  name: InstanceId
  nameWithType: EventInstance.InstanceId
  fullName: System.Diagnostics.EventInstance.InstanceId
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Henter eller angir ressurs-IDen som angir teksten for hendelsen."
  remarks: "Egenskapen InstanceId identifiserer en hendelse oppføring for en konfigurert hendelse-datakilde. For hendelser som er definert i meldingen ressursfiler tilsvarer InstanceId ressurs-IDen kompilert fra meldingen Definisjonsfeltene i tekstfilen meldingen. Programmet kan skrive oversatte hendelsesloggen poster ved å angi InstanceId til en ressurs-IDen. Event Viewer bruker InstanceId ressurs-IDen til å søke etter og vise tilsvarende streng fra oversatte ressursfilen basert på gjeldende språkinnstillinger. Du må registrere kilde med den tilsvarende ressursfilen før du skriver hendelser ved hjelp av ressurs-IDer.       For informasjon om definerer hendelsesmeldinger og bygge hendelsesloggen ressursfiler, se emnet &quot;Meldingen kompilatoren&quot; i Platform SDK-dokumentasjonen på [http://msdn.microsoft.com](http://msdn.microsoft.com/). For mer informasjon om hendelsesloggen identifikatorer, kan du se emnet &quot;Hendelsen identifikatorer&quot; i SDK."
  example:
  - "The following code example writes an informational event entry, and then reuses the <xref:System.Diagnostics.EventInstance> to write an entry for a warning event to an existing event log. The event message text is specified using a resource identifier in a message resource file. The code example assumes that the corresponding message resource file has been registered for the source.  \n  \n [!code-cpp[EventLog_WriteEvent#9](~/add/codesnippet/cpp/p-system.diagnostics.eve_16_1.cpp)]\n [!code-vb[EventLog_WriteEvent#9](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_16_1.vb)]\n [!code-cs[EventLog_WriteEvent#9](~/add/codesnippet/csharp/p-system.diagnostics.eve_16_1.cs)]  \n  \n The code example uses the following message text file, built into the resource library EventLogMsgs.dll. A message text file is the source from which the message resource file is created. The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.  \n  \n```  \n; // EventLogMsgs.mc  \n; // ********************************************************  \n  \n; // Use the following commands to build this file:  \n  \n; //   mc -s EventLogMsgs.mc  \n; //   rc EventLogMsgs.rc  \n; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   \n; // ********************************************************  \n  \n; // - Event categories -  \n; // Categories must be numbered consecutively starting at 1.  \n; // ********************************************************  \n  \nMessageId=0x1  \nSeverity=Success  \nSymbolicName=INSTALL_CATEGORY  \nLanguage=English  \nInstallation  \n.  \n  \nMessageId=0x2  \nSeverity=Success  \nSymbolicName=QUERY_CATEGORY  \nLanguage=English  \nDatabase Query  \n.  \n  \nMessageId=0x3  \nSeverity=Success  \nSymbolicName=REFRESH_CATEGORY  \nLanguage=English  \nData Refresh  \n.  \n  \n; // - Event messages -  \n; // *********************************  \n  \nMessageId = 1000  \nSeverity = Success  \nFacility = Application  \nSymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  \nLanguage=English  \nMy application message text, in English, for message id 1000, called from %1.  \n.  \n  \nMessageId = 1001  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  \nLanguage=English  \nMy application message text, in English, for message id 1001, called from %1.  \n.  \n  \nMessageId = 1002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = GENERIC_INFO_MESSAGE_ID_1002  \nLanguage=English  \nMy generic information message in English, for message id 1002.  \n.  \n  \nMessageId = 1003  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  \nLanguage=English  \nMy generic warning message in English, for message id 1003, called from %1.  \n.  \n  \nMessageId = 1004  \nSeverity = Success  \nFacility = Application  \nSymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  \nLanguage=English  \nThe update cycle is complete for %%5002.  \n.  \n  \nMessageId = 1005  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  \nLanguage=English  \nThe refresh operation did not complete because the connection to server %1 could not be established.  \n.  \n  \n; // - Event log display name -  \n; // ********************************************************  \n  \nMessageId = 5001  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  \nLanguage=English  \nSample Event Log  \n.  \n  \n; // - Event message parameters -  \n; //   Language independent insertion strings  \n; // ********************************************************  \n  \nMessageId = 5002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  \nLanguage=English  \nSVC_UPDATE.EXE  \n.  \n```"
  syntax:
    content: public long InstanceId { get; set; }
    return:
      type: System.Int64
      description: "Ressurs-IDen som svarer til en streng som er definert i ressursen meldingsfilen for hendelseskilden."
  overload: System.Diagnostics.EventInstance.InstanceId*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Egenskapen er satt til en negativ verdi eller til en verdi større enn &lt;xref:System.UInt32.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32)
  parent: System.Diagnostics.EventInstance
  isExternal: false
  name: EventInstance(Int64,Int32)
  nameWithType: EventInstance.EventInstance(Int64,Int32)
  fullName: System.Diagnostics.EventInstance.EventInstance(Int64,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32,System.Diagnostics.EventLogEntryType)
  parent: System.Diagnostics.EventInstance
  isExternal: false
  name: EventInstance(Int64,Int32,EventLogEntryType)
  nameWithType: EventInstance.EventInstance(Int64,Int32,EventLogEntryType)
  fullName: System.Diagnostics.EventInstance.EventInstance(Int64,Int32,EventLogEntryType)
- uid: System.Diagnostics.EventLogEntryType
  parent: System.Diagnostics
  isExternal: false
  name: EventLogEntryType
  nameWithType: EventLogEntryType
  fullName: System.Diagnostics.EventLogEntryType
- uid: System.Diagnostics.EventInstance.CategoryId
  parent: System.Diagnostics.EventInstance
  isExternal: false
  name: CategoryId
  nameWithType: EventInstance.CategoryId
  fullName: System.Diagnostics.EventInstance.CategoryId
- uid: System.Diagnostics.EventInstance.EntryType
  parent: System.Diagnostics.EventInstance
  isExternal: false
  name: EntryType
  nameWithType: EventInstance.EntryType
  fullName: System.Diagnostics.EventInstance.EntryType
- uid: System.Diagnostics.EventInstance.InstanceId
  parent: System.Diagnostics.EventInstance
  isExternal: false
  name: InstanceId
  nameWithType: EventInstance.InstanceId
  fullName: System.Diagnostics.EventInstance.InstanceId
- uid: System.Diagnostics.EventInstance.#ctor*
  parent: System.Diagnostics.EventInstance
  isExternal: false
  name: EventInstance
  nameWithType: EventInstance.EventInstance
- uid: System.Diagnostics.EventInstance.CategoryId*
  parent: System.Diagnostics.EventInstance
  isExternal: false
  name: CategoryId
  nameWithType: EventInstance.CategoryId
- uid: System.Diagnostics.EventInstance.EntryType*
  parent: System.Diagnostics.EventInstance
  isExternal: false
  name: EntryType
  nameWithType: EventInstance.EntryType
- uid: System.Diagnostics.EventInstance.InstanceId*
  parent: System.Diagnostics.EventInstance
  isExternal: false
  name: InstanceId
  nameWithType: EventInstance.InstanceId
