### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  id: X509Certificate
  children:
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[])
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.IntPtr)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
  - System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetName
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
  - System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[])
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  - System.Security.Cryptography.X509Certificates.X509Certificate.Reset
  - System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  - System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  - System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Cryptography.X509Certificates.X509Certificate.ToString
  - System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)
  langs:
  - csharp
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
  type: Class
  summary: "Inneholder metoder som hjelper deg bruke X.509 v.3 sertifikater."
  remarks: "ASN.1 DER er bare sertifikatformatet støttes av denne klassen.       For de fleste tilfeller må du bruke den <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>klasse i stedet.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2>      > [!IMPORTANT] > Med start av [!INCLUDE[net_v46](~/add/includes/net-v46-md.md)], denne typen implementerer den <xref:System.IDisposable>grensesnittet.</xref:System.IDisposable> Når du er ferdig ved hjelp av typen, må du fjerne den direkte eller indirekte. Hvis du vil fjerne av typen direkte, kan du kalle den <xref:System.IDisposable.Dispose%2A>metoden i en `try` / `catch` blokken.</xref:System.IDisposable.Dispose%2A> Hvis du vil fjerne den indirekte, bruke et språk som `using` (i C#) eller `Using` (i Visual Basic). For mer informasjon, se &quot;Ved hjelp av et objekt som implementerer IDisposable&quot; i den <xref:System.IDisposable>grensesnittet emnet.</xref:System.IDisposable>   >> For apper som mål i [!INCLUDE[net_v452](~/add/includes/net-v452-md.md)] og tidligere versjoner X509Certificate klassen implementerer ikke det <xref:System.IDisposable>grensesnittet og derfor ikke har en `Dispose` metode.</xref:System.IDisposable>"
  example:
  - "The following example loads an X.509 certificate from a file, calls the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.ToString%2A> method, and displays the results to the console.  \n  \n [!code-cpp[Cryptography.X509Certificates.X509Certificate#1](~/add/codesnippet/cpp/t-system.security.crypto_76_1.cpp)]\n [!code-cs[Cryptography.X509Certificates.X509Certificate#1](~/add/codesnippet/csharp/t-system.security.crypto_76_1.cs)]\n [!code-vb[Cryptography.X509Certificates.X509Certificate#1](~/add/codesnippet/visualbasic/t-system.security.crypto_76_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class X509Certificate : IDisposable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.Runtime.Serialization.IDeserializationCallback
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate()
  nameWithType: X509Certificate.X509Certificate()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klasse."
  remarks: "ASN.1 DER er bare sertifikatformatet støttes av denne klassen."
  syntax:
    content: public X509Certificate ();
    parameters: []
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(Byte[])
  nameWithType: X509Certificate.X509Certificate(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klasse som er definert fra en sekvens med byte som representerer en X.509v3-sertifikat."
  remarks: "ASN.1 DER er bare sertifikatformatet støttes av denne klassen.       Hvis du oppretter en <xref:System.Security.Cryptography.X509Certificates.X509Certificate>sertifikatet ved å angi en signert fillageret PKCS7 for `data`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>er opprettet for sertifikatet som signerte butikken ikke for noen av sertifikatene i lageret.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  example:
  - "The following example loads an X.509 certificate file into an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object, exports the certificate as a byte array, and then imports the byte array into another <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.  \n  \n [!code-cs[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/add/codesnippet/csharp/b1e21656-448f-470a-baa1-_1.cs)]\n [!code-vb[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/add/codesnippet/visualbasic/b1e21656-448f-470a-baa1-_1.vb)]\n [!code-cpp[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/add/codesnippet/cpp/b1e21656-448f-470a-baa1-_1.cpp)]"
  syntax:
    content: public X509Certificate (byte[] data);
    parameters:
    - id: data
      type: System.Byte[]
      description: "En bytematrise som inneholder data fra et X.509-sertifikat."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Oppstår en feil med sertifikatet. For eksempel:-sertifikatfilen finnes ikke.      -Sertifikatet er ugyldig.      Passordet-sertifikatet er feil."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - lengden på den <code> rawData </code> parameteren er 0."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.IntPtr)
  id: '#ctor(System.IntPtr)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(IntPtr)
  nameWithType: X509Certificate.X509Certificate(IntPtr)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(IntPtr)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klasse ved hjelp av en referanse til et ubehandlet <xref uid=&quot;langword_csharp_PCCERT_CONTEXT&quot; name=&quot;PCCERT_CONTEXT&quot; href=&quot;&quot;> </xref> struktur."
  remarks: "Denne konstruktøren oppretter en ny <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objekt med en håndtaket for Microsoft kryptografisk API sertifikatkonteksten, `PCCERT_CONTEXT`.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>      > [!IMPORTANT] > Denne konstruktøren opprettes en kopi av sertifikatkonteksten. Ikke anta at konteksten strukturen du sendes til konstruktøren er ugyldig. Det kan ha blitt gitt ut. Du kan få en kopi av gjeldende `PCCERT_CONTEXT` struktur fra den <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A>egenskapen, men den er gyldig bare under levetiden for den <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objektet.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A>"
  syntax:
    content: public X509Certificate (IntPtr handle);
    parameters:
    - id: handle
      type: System.IntPtr
      description: "En referanse til et ubehandlet <xref uid=&quot;langword_csharp_PCCERT_CONTEXT&quot; name=&quot;PCCERT_CONTEXT&quot; href=&quot;&quot;> </xref> struktur."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Oppstår en feil med sertifikatet. For eksempel:-sertifikatfilen finnes ikke.      -Sertifikatet er ugyldig.      Passordet-sertifikatet er feil."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Parameteren referansen representerer ikke en gyldig <xref uid=&quot;langword_csharp_PCCERT_CONTEXT&quot; name=&quot;PCCERT_CONTEXT&quot; href=&quot;&quot;> </xref> struktur."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(X509Certificate)
  nameWithType: X509Certificate.X509Certificate(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(X509Certificate)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klasse ved hjelp av en annen <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klasse."
  remarks: "ASN.1 DER er bare sertifikatformatet støttes av denne klassen."
  syntax:
    content: public X509Certificate (System.Security.Cryptography.X509Certificates.X509Certificate cert);
    parameters:
    - id: cert
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "En <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klasse som ikke denne klassen."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Oppstår en feil med sertifikatet. For eksempel:-sertifikatfilen finnes ikke.      -Sertifikatet er ugyldig.      Passordet-sertifikatet er feil."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Verdien for den <code> cert </code> parameteren er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(String)
  nameWithType: X509Certificate.X509Certificate(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klassen med navnet på en PKCS7 signerte filen."
  remarks: "ASN.1 DER er bare sertifikatformatet støttes av denne klassen.       Hvis du oppretter en <xref:System.Security.Cryptography.X509Certificates.X509Certificate>sertifikatet ved å angi en signert fillageret PKCS7 for `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>er opprettet for sertifikatet som signerte butikken ikke for noen av sertifikatene i lageret.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  example:
  - "The following example loads an X.509 certificate from a file, calls the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.ToString%2A> method, and displays the results to the console.  \n  \n [!code-cpp[Cryptography.X509Certificates.X509Certificate#1](~/add/codesnippet/cpp/8a4791ef-477c-432d-b12d-_1.cpp)]\n [!code-cs[Cryptography.X509Certificates.X509Certificate#1](~/add/codesnippet/csharp/8a4791ef-477c-432d-b12d-_1.cs)]\n [!code-vb[Cryptography.X509Certificates.X509Certificate#1](~/add/codesnippet/visualbasic/8a4791ef-477c-432d-b12d-_1.vb)]"
  syntax:
    content: public X509Certificate (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "Navnet på en signert PKCS7-fil."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Oppstår en feil med sertifikatet. For eksempel:-sertifikatfilen finnes ikke.      -Sertifikatet er ugyldig.      Passordet-sertifikatet er feil."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString)
  id: '#ctor(System.Byte[],System.Security.SecureString)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(Byte[],SecureString)
  nameWithType: X509Certificate.X509Certificate(Byte[],SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],SecureString)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klasse ved hjelp av en bytematrise og et passord."
  remarks: "ASN.1 DER er bare sertifikatformatet støttes av denne klassen.      > [!IMPORTANT] > Code aldri hardt et passord i kildekode.  Hardkodet passord kan hentes fra en samling med den [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), et heksadesimalt redigeringsprogram, eller ved å ganske enkelt å åpne samlingen i et tekstredigeringsprogram, for eksempel Notepad.exe.       Hvis du oppretter en <xref:System.Security.Cryptography.X509Certificates.X509Certificate>sertifikatet ved å angi en signert fillageret PKCS7 for `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>er opprettet for sertifikatet som signerte butikken ikke for noen av sertifikatene i lageret.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (byte[] rawData, System.Security.SecureString password);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "En bytematrise som inneholder data fra et X.509-sertifikat."
    - id: password
      type: System.Security.SecureString
      description: "Passordet som kreves for å få tilgang til X.509 sertifikatdataene."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Oppstår en feil med sertifikatet. For eksempel:-sertifikatfilen finnes ikke.      -Sertifikatet er ugyldig.      Passordet-sertifikatet er feil."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - lengden på den <code> rawData </code> parameteren er 0."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String)
  id: '#ctor(System.Byte[],System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(Byte[],String)
  nameWithType: X509Certificate.X509Certificate(Byte[],String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klasse ved hjelp av en bytematrise og et passord."
  remarks: "ASN.1 DER er bare sertifikatformatet støttes av denne klassen.      > [!IMPORTANT] > Code aldri hardt et passord i kildekode.  Hardkodet passord kan hentes fra en samling med den [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), et heksadesimalt redigeringsprogram, eller ved å ganske enkelt å åpne samlingen i et tekstredigeringsprogram, for eksempel Notepad.exe.       Hvis du oppretter en <xref:System.Security.Cryptography.X509Certificates.X509Certificate>sertifikatet ved å angi en signert fillageret PKCS7 for `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>er opprettet for sertifikatet som signerte butikken ikke for noen av sertifikatene i lageret.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (byte[] rawData, string password);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "En bytematrise som inneholder data fra et X.509-sertifikat."
    - id: password
      type: System.String
      description: "Passordet som kreves for å få tilgang til X.509 sertifikatdataene."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Oppstår en feil med sertifikatet. For eksempel:-sertifikatfilen finnes ikke.      -Sertifikatet er ugyldig.      Passordet-sertifikatet er feil."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - lengden på den <code> rawData </code> parameteren er 0."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(SerializationInfo,StreamingContext)
  nameWithType: X509Certificate.X509Certificate(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klasse ved hjelp av en <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objekt og en <xref:System.Runtime.Serialization.StreamingContext>strukturen.</xref:System.Runtime.Serialization.StreamingContext>"
  syntax:
    content: public X509Certificate (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "En <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objektet som beskriver serialisering."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "En <xref:System.Runtime.Serialization.StreamingContext>-strukturen som beskriver hvordan serialisering skal utføres.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Oppstår en feil med sertifikatet. For eksempel:-sertifikatfilen finnes ikke.      -Sertifikatet er ugyldig.      Passordet-sertifikatet er feil."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString)
  id: '#ctor(System.String,System.Security.SecureString)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(String,SecureString)
  nameWithType: X509Certificate.X509Certificate(String,SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,SecureString)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klasse ved hjelp av et filnavn og et passord."
  remarks: "ASN.1 DER er bare sertifikatformatet støttes av denne klassen.  Kall til denne konstruktøren med riktig passord dekrypterer den private nøkkelen og lagrer den i en beholder.      > [!IMPORTANT] > Code aldri hardt et passord i kildekode.  Hardkodet passord kan hentes fra en samling med den [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), et heksadesimalt redigeringsprogram, eller ved å ganske enkelt å åpne samlingen i et tekstredigeringsprogram, for eksempel Notepad.exe.       Hvis du oppretter en <xref:System.Security.Cryptography.X509Certificates.X509Certificate>sertifikatet ved å angi en signert fillageret PKCS7 for `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>er opprettet for sertifikatet som signerte butikken ikke for noen av sertifikatene i lageret.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (string fileName, System.Security.SecureString password);
    parameters:
    - id: fileName
      type: System.String
      description: "Navnet på sertifikatfilen."
    - id: password
      type: System.Security.SecureString
      description: "Passordet som kreves for å få tilgang til X.509 sertifikatdataene."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Oppstår en feil med sertifikatet. For eksempel:-sertifikatfilen finnes ikke.      -Sertifikatet er ugyldig.      Passordet-sertifikatet er feil."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(String,String)
  nameWithType: X509Certificate.X509Certificate(String,String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klassen med navnet på en PKCS7 signert fil- og et passord for å få tilgang til sertifikatet."
  remarks: "ASN.1 DER er bare sertifikatformatet støttes av denne klassen.  Kall til denne konstruktøren med riktig passord dekrypterer den private nøkkelen og lagrer den i en beholder.       Hvis du oppretter en <xref:System.Security.Cryptography.X509Certificates.X509Certificate>sertifikatet ved å angi en signert fillageret PKCS7 for `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>er opprettet for sertifikatet som signerte butikken ikke for noen av sertifikatene i lageret.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (string fileName, string password);
    parameters:
    - id: fileName
      type: System.String
      description: "Navnet på en signert PKCS7-fil."
    - id: password
      type: System.String
      description: "Passordet som kreves for å få tilgang til X.509 sertifikatdataene."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Oppstår en feil med sertifikatet. For eksempel:-sertifikatfilen finnes ikke.      -Sertifikatet er ugyldig.      Passordet-sertifikatet er feil."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klasse ved hjelp av en bytematrise, passord og en nøkkel lagring-flagget."
  remarks: "Kall til denne konstruktøren med riktig passord dekrypterer den private nøkkelen og lagrer den til en Microsoft kryptografisk API kryptografisk tjenesten leverandøren (CSP).       ASN.1 DER er bare sertifikatformatet støttes av denne klassen.      > [!IMPORTANT] > Code aldri hardt et passord i kildekode.  Hardkodet passord kan hentes fra en samling med den [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), et heksadesimalt redigeringsprogram, eller ved å ganske enkelt å åpne samlingen i et tekstredigeringsprogram, for eksempel Notepad.exe.       Hvis du oppretter en <xref:System.Security.Cryptography.X509Certificates.X509Certificate>sertifikatet ved å angi en signert fillageret PKCS7 for `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>er opprettet for sertifikatet som signerte butikken ikke for noen av sertifikatene i lageret.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "En bytematrise som inneholder data fra et X.509-sertifikat."
    - id: password
      type: System.Security.SecureString
      description: "Passordet som kreves for å få tilgang til X.509 sertifikatdataene."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "En bitvis kombinasjon av opplistingen verdier som styrer hvor og hvordan du importere sertifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Oppstår en feil med sertifikatet. For eksempel:-sertifikatfilen finnes ikke.      -Sertifikatet er ugyldig.      Passordet-sertifikatet er feil."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - lengden på den <code> rawData </code> parameteren er 0."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],String,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klasse ved hjelp av en bytematrise, passord og en nøkkel lagring-flagget."
  remarks: "Denne konstruktøren oppretter en ny <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objekt som bruker en byte datatabellen, et passord som kreves for å få tilgang til sertifikatdataene og et key lagring-flagg.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>  Kall til denne konstruktøren med riktig passord dekrypterer den private nøkkelen og lagrer den til en Microsoft kryptografisk API kryptografisk tjenesten leverandøren (CSP).       Den <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>verdien kan brukes til å kontrollere hvor og hvordan den private nøkkelen er importert.</xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>       ASN.1 DER er bare sertifikatformatet støttes av denne klassen.      > [!IMPORTANT] > Code aldri hardt et passord i kildekode.  Hardkodet passord kan hentes fra en samling med den [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), et heksadesimalt redigeringsprogram, eller ved å ganske enkelt å åpne samlingen i et tekstredigeringsprogram, for eksempel Notepad.exe.       Hvis du oppretter en <xref:System.Security.Cryptography.X509Certificates.X509Certificate>sertifikatet ved å angi en signert fillageret PKCS7 for `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>er opprettet for sertifikatet som signerte butikken ikke for noen av sertifikatene i lageret.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "En bytematrise som inneholder data fra et X.509-sertifikat."
    - id: password
      type: System.String
      description: "Passordet som kreves for å få tilgang til X.509 sertifikatdataene."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "En bitvis kombinasjon av opplistingen verdier som styrer hvor og hvordan du importere sertifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Oppstår en feil med sertifikatet. For eksempel:-sertifikatfilen finnes ikke.      -Sertifikatet er ugyldig.      Passordet-sertifikatet er feil."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - lengden på den <code> rawData </code> parameteren er 0."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,SecureString,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klasse ved hjelp av et filnavn for et passord og en nøkkel lagring-flagget."
  remarks: "Hvis du oppretter en <xref:System.Security.Cryptography.X509Certificates.X509Certificate>sertifikatet ved å angi en signert fillageret PKCS7 for `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>er opprettet for sertifikatet som signerte butikken ikke for noen av sertifikatene i lageret.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "Navnet på sertifikatfilen."
    - id: password
      type: System.Security.SecureString
      description: "Passordet som kreves for å få tilgang til X.509 sertifikatdataene."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "En bitvis kombinasjon av opplistingen verdier som styrer hvor og hvordan du importere sertifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Oppstår en feil med sertifikatet. For eksempel:-sertifikatfilen finnes ikke.      -Sertifikatet er ugyldig.      Passordet-sertifikatet er feil."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,String,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klassen ved hjelp av navnet på en PKCS7 signerte filen, et passord for å få tilgang til sertifikatet og et key lagring-flagg."
  remarks: "Hvis du oppretter en <xref:System.Security.Cryptography.X509Certificates.X509Certificate>sertifikatet ved å angi en signert fillageret PKCS7 for `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>er opprettet for sertifikatet som signerte butikken ikke for noen av sertifikatene i lageret.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "Navnet på en signert PKCS7-fil."
    - id: password
      type: System.String
      description: "Passordet som kreves for å få tilgang til X.509 sertifikatdataene."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "En bitvis kombinasjon av opplistingen verdier som styrer hvor og hvordan du importere sertifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Oppstår en feil med sertifikatet. For eksempel:-sertifikatfilen finnes ikke.      -Sertifikatet er ugyldig.      Passordet-sertifikatet er feil."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)
  id: CreateFromCertFile(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: CreateFromCertFile(String)
  nameWithType: X509Certificate.CreateFromCertFile(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Oppretter en X.509v3-sertifikat fra den angitte PKCS7 signerte filen."
  remarks: "ASN.1 DER er bare sertifikatformatet støttes av denne klassen.      > [!NOTE] > Sertifikatfilen er ikke begrenset til .cerfiles. PKCS7 signerte filen kan brukes, inkludert en Authenticode signert PFX-fil."
  example:
  - "The following example creates an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> from a specified certification file.  \n  \n [!code-cs[X509Certificate.ToString Method#1](~/add/codesnippet/csharp/676668f7-2ee9-45c0-8357-_1.cs)]\n [!code-cpp[X509Certificate.ToString Method#1](~/add/codesnippet/cpp/676668f7-2ee9-45c0-8357-_1.cpp)]\n [!code-vb[X509Certificate.ToString Method#1](~/add/codesnippet/visualbasic/676668f7-2ee9-45c0-8357-_1.vb)]"
  syntax:
    content: public static System.Security.Cryptography.X509Certificates.X509Certificate CreateFromCertFile (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "Banen til PKCS7 signerte filen å opprette X.509-sertifikatet."
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Det nylig opprettede X.509-sertifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>filename</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)
  id: CreateFromSignedFile(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: CreateFromSignedFile(String)
  nameWithType: X509Certificate.CreateFromSignedFile(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Oppretter en X.509v3-sertifikat fra den angitte signerte filen."
  remarks: "ASN.1 DER er bare sertifikatformatet støttes av denne klassen."
  syntax:
    content: public static System.Security.Cryptography.X509Certificates.X509Certificate CreateFromSignedFile (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "Banen til den signerte filen å opprette X.509-sertifikatet."
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Det nylig opprettede X.509-sertifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
  id: Dispose
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Dispose()
  nameWithType: X509Certificate.Dispose()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Frigir alle ressursene som brukes av gjeldende <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objektet."
  remarks: >-
    > [!NOTE]

    >  <xref:System.Security.Cryptography.X509Certificates.X509Certificate> implements the <xref:System.IDisposable> interface starting with the [!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> class does not implement this interface, and therefore the `Dispose` method does not exist.
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: X509Certificate.Dispose(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Frigir alle uforvaltede ressursene som brukes av dette <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> og eventuelt frigir administrerte ressurser."
  remarks: >-
    > [!NOTE]

    >  <xref:System.Security.Cryptography.X509Certificates.X509Certificate> implements the <xref:System.IDisposable> interface starting with the [!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> class does not implement this interface, and therefore the `Dispose` method does not exist.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>å frigjøre både administrerte og uforvaltede ressurser. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> frigi bare uforvaltede ressurser."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: X509Certificate.Equals(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Sammenligner to <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekter likhet."
  remarks: "To objekter regnes lik hvis de er <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objekter, og de har samme utsteder og serienummer.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  example:
  - "The following example compares two certificates for equality.  \n  \n [!code-cs[X509Certificate.Equals Method#1](~/add/codesnippet/csharp/f47485e7-2fcd-4cb5-8c02-_1.cs)]\n [!code-cpp[X509Certificate.Equals Method#1](~/add/codesnippet/cpp/f47485e7-2fcd-4cb5-8c02-_1.cpp)]\n [!code-vb[X509Certificate.Equals Method#1](~/add/codesnippet/visualbasic/f47485e7-2fcd-4cb5-8c02-_1.vb)]"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "En <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objektet til å sammenligne gjeldende objekt."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis gjeldende <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objektet som er lik objektet som er angitt av den <code> other </code> parameteren; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Equals(X509Certificate)
  nameWithType: X509Certificate.Equals(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(X509Certificate)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Sammenligner to <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekter likhet."
  remarks: "To <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objekter regnes lik hvis de har samme utsteder og serienummer.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  example:
  - "The following example compares two certificates for equality.  \n  \n [!code-cs[X509Certificate.Equals Method#1](~/add/codesnippet/csharp/a7eacb37-7527-4d28-91b5-_1.cs)]\n [!code-cpp[X509Certificate.Equals Method#1](~/add/codesnippet/cpp/a7eacb37-7527-4d28-91b5-_1.cpp)]\n [!code-vb[X509Certificate.Equals Method#1](~/add/codesnippet/visualbasic/a7eacb37-7527-4d28-91b5-_1.vb)]"
  syntax:
    content: public virtual bool Equals (System.Security.Cryptography.X509Certificates.X509Certificate other);
    parameters:
    - id: other
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "En <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objektet til å sammenligne gjeldende objekt."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis gjeldende <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objektet som er lik objektet som er angitt av den <code> other </code> parameteren; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Export(X509ContentType)
  nameWithType: X509Certificate.Export(X509ContentType)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Eksporterer gjeldende <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> -objekt til en bytematrise i et format som er beskrevet av én av de <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> verdier."
  remarks: 'Den `contentType` parameteren godtar bare følgende verdier for den <xref:System.Security.Cryptography.X509Certificates.X509ContentType>opplisting: <xref:System.Security.Cryptography.X509Certificates.X509ContentType>, <xref:System.Security.Cryptography.X509Certificates.X509ContentType>, og <xref:System.Security.Cryptography.X509Certificates.X509ContentType>.</xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType>  Sending av en annen verdi årsaker en <xref:System.Security.Cryptography.CryptographicException>til å bli utløst.</xref:System.Security.Cryptography.CryptographicException>'
  example:
  - "The following example loads an X.509 certificate file into an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object, exports the certificate as a byte array, and then imports the byte array into another <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.  \n  \n [!code-cs[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/add/codesnippet/csharp/7086c90a-cfa4-4cab-9c75-_1.cs)]\n [!code-vb[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/add/codesnippet/visualbasic/7086c90a-cfa4-4cab-9c75-_1.vb)]\n [!code-cpp[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/add/codesnippet/cpp/7086c90a-cfa4-4cab-9c75-_1.cpp)]"
  syntax:
    content: public virtual byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType);
    parameters:
    - id: contentType
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: "Én av de <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> verdier som beskriver hvordan du formaterer utdataene."
    return:
      type: System.Byte[]
      description: "En bytematrise som representerer gjeldende <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objektet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Export*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "En annen verdi enn <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref>, <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref>, eller <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> ble sendt til den <code> contentType </code> parameteren.       - eller - sertifikatet kan ikke eksporteres."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Export(X509ContentType,SecureString)
  nameWithType: X509Certificate.Export(X509ContentType,SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType,SecureString)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Eksporterer gjeldende <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> -objekt til en bytematrise ved hjelp av angitt format og et passord."
  remarks: "Den `contentType` parameteren godtar bare følgende verdier for den <xref:System.Security.Cryptography.X509Certificates.X509ContentType>opplisting: <xref:System.Security.Cryptography.X509Certificates.X509ContentType>, <xref:System.Security.Cryptography.X509Certificates.X509ContentType>, og <xref:System.Security.Cryptography.X509Certificates.X509ContentType>.</xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType>  Sending av en annen verdi årsaker en <xref:System.Security.Cryptography.CryptographicException>til å bli utløst.</xref:System.Security.Cryptography.CryptographicException>      > [!IMPORTANT] > Code aldri hardt et passord i kildekode.  Hardkodet passord kan hentes fra en samling med den [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), et heksadesimalt redigeringsprogram, eller ved å ganske enkelt å åpne samlingen i et tekstredigeringsprogram, for eksempel Notepad.exe."
  syntax:
    content: public virtual byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, System.Security.SecureString password);
    parameters:
    - id: contentType
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: "Én av de <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> verdier som beskriver hvordan du formaterer utdataene."
    - id: password
      type: System.Security.SecureString
      description: "Passordet som kreves for å få tilgang til X.509 sertifikatdataene."
    return:
      type: System.Byte[]
      description: "En bytematrise som representerer gjeldende <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objektet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Export*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "En annen verdi enn <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref>, <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref>, eller <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> ble sendt til den <code> contentType </code> parameteren.       - eller - sertifikatet kan ikke eksporteres."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Export(X509ContentType,String)
  nameWithType: X509Certificate.Export(X509ContentType,String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Eksporterer gjeldende <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> -objekt til en bytematrise i et format som er beskrevet av én av de <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> verdier, og bruker det angitte passordet."
  remarks: "Den `contentType` parameteren godtar bare følgende verdier for den <xref:System.Security.Cryptography.X509Certificates.X509ContentType>opplisting: <xref:System.Security.Cryptography.X509Certificates.X509ContentType>, <xref:System.Security.Cryptography.X509Certificates.X509ContentType>, og <xref:System.Security.Cryptography.X509Certificates.X509ContentType>.</xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType>  Sending av en annen verdi årsaker en <xref:System.Security.Cryptography.CryptographicException>til å bli utløst.</xref:System.Security.Cryptography.CryptographicException>      > [!IMPORTANT] > Code aldri hardt et passord i kildekode.  Hardkodet passord kan hentes fra en samling med den [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), et heksadesimalt redigeringsprogram, eller ved å ganske enkelt å åpne samlingen i et tekstredigeringsprogram, for eksempel Notepad.exe."
  syntax:
    content: public virtual byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password);
    parameters:
    - id: contentType
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: "Én av de <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> verdier som beskriver hvordan du formaterer utdataene."
    - id: password
      type: System.String
      description: "Passordet som kreves for å få tilgang til X.509 sertifikatdataene."
    return:
      type: System.Byte[]
      description: "En bytematrise som representerer gjeldende <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objektet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Export*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "En annen verdi enn <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref>, <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref>, eller <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> ble sendt til den <code> contentType </code> parameteren.       - eller - sertifikatet kan ikke eksporteres."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)
  id: FormatDate(System.DateTime)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: FormatDate(DateTime)
  nameWithType: X509Certificate.FormatDate(DateTime)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Konverterer angitt dato og klokkeslett til en streng."
  remarks: "Noen kulturer kan ikke konvertere fremtidige datoer til strenger. Hvis utløpsdatoen for et X.509-sertifikat er utenfor området for kulturen, går FormatDate tilbake til en kalender som kan express datoen. Hvis <xref:System.Globalization.CultureInfo.Calendar%2A>verdien er at <xref:System.Globalization.UmAlQuraCalendar>kalenderen er endret til den <xref:System.Globalization.HijriCalendar>klasse; Hvis ikke, den er endret til <xref:System.Globalization.CultureInfo.InvariantCulture%2A>.</xref:System.Globalization.CultureInfo.InvariantCulture%2A> </xref:System.Globalization.HijriCalendar> </xref:System.Globalization.UmAlQuraCalendar> </xref:System.Globalization.CultureInfo.Calendar%2A>"
  syntax:
    content: protected static string FormatDate (DateTime date);
    parameters:
    - id: date
      type: System.DateTime
      description: "Datoen og klokkeslettet som skal konverteres."
    return:
      type: System.String
      description: "En strengrepresentasjon av verdien for den <xref:System.DateTime>objektet.</xref:System.DateTime>"
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  id: GetCertHash
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetCertHash()
  nameWithType: X509Certificate.GetCertHash()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerer hash-verdien for X.509v3-sertifikat som en bytematrise."
  remarks: ''
  example:
  - "The following example uses the GetCertHash method to fill an array of bytes with the hash value for an X.509 certificate.  \n  \n [!code-cs[X509Certificate.GetCertHash Method#1](~/add/codesnippet/csharp/m-system.security.crypto_52_1.cs)]\n [!code-vb[X509Certificate.GetCertHash Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_52_1.vb)]\n [!code-cpp[X509Certificate.GetCertHash Method#1](~/add/codesnippet/cpp/m-system.security.crypto_52_1.cpp)]"
  syntax:
    content: public virtual byte[] GetCertHash ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Hash-verdi for X.509-sertifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
  id: GetCertHashString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetCertHashString()
  nameWithType: X509Certificate.GetCertHashString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerer SHA1 hash-verdien for X.509v3-sertifikat som en heksadesimale streng."
  remarks: ''
  example:
  - "The following example uses the GetCertHashString method to get an X.509 certificate hash value, convert it to a string, and display it to the console.  \n  \n [!code-cpp[X509Certificate.GetCertHashString Method#1](~/add/codesnippet/cpp/91428cb0-40b3-45b2-8ef3-_1.cpp)]\n [!code-cs[X509Certificate.GetCertHashString Method#1](~/add/codesnippet/csharp/91428cb0-40b3-45b2-8ef3-_1.cs)]\n [!code-vb[X509Certificate.GetCertHashString Method#1](~/add/codesnippet/visualbasic/91428cb0-40b3-45b2-8ef3-_1.vb)]"
  syntax:
    content: public virtual string GetCertHashString ();
    parameters: []
    return:
      type: System.String
      description: "Heksadesimale strengrepresentasjon av X.509 sertifikatet hash-verdien."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString
  id: GetEffectiveDateString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetEffectiveDateString()
  nameWithType: X509Certificate.GetEffectiveDateString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerer den effektive datoen for denne X.509v3-sertifikat."
  remarks: "Den effektive datoen er datoen etter hvor-X.509-sertifikatet er gyldig.       Metoden GetEffectiveDateString returnerer en streng som viser datoen formatert kort dato mønsteret etterfulgt av klokkeslett formatert i mønster for lang tid.  Datoen og klokkeslettet er formatert med gjeldende kultur og tidssone."
  example:
  - "The following example uses the GetEffectiveDateString method to get the effective date of a certificate and displays it to the console.  \n  \n [!code-vb[X509Certificate.GetEffectiveDateString Method#1](~/add/codesnippet/visualbasic/5a69884a-4857-43c9-9b1e-_1.vb)]\n [!code-cpp[X509Certificate.GetEffectiveDateString Method#1](~/add/codesnippet/cpp/5a69884a-4857-43c9-9b1e-_1.cpp)]\n [!code-cs[X509Certificate.GetEffectiveDateString Method#1](~/add/codesnippet/csharp/5a69884a-4857-43c9-9b1e-_1.cs)]"
  syntax:
    content: public virtual string GetEffectiveDateString ();
    parameters: []
    return:
      type: System.String
      description: "Den effektive datoen for X.509 sertifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString
  id: GetExpirationDateString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetExpirationDateString()
  nameWithType: X509Certificate.GetExpirationDateString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerer utløpsdatoen for denne X.509v3-sertifikat."
  remarks: "Utløpsdatoen er datoen etter som X.509-sertifikatet er ikke lenger gyldig.       Metoden GetExpirationDateString returnerer en streng som viser datoen formatert kort dato mønsteret etterfulgt av klokkeslett formatert i mønster for lang tid.  Datoen og klokkeslettet er formatert med gjeldende kultur og tidssone.      > [!NOTE] > Denne metoden kan returnere en forskjellig strengformat på Macintosh datamaskiner, selv om den underliggende <xref:System.DateTime>objektet representerer samme verdi.</xref:System.DateTime>"
  example:
  - "The following example uses the GetExpirationDateString method to get the expiration date of a certificate and displays it to the console.  \n  \n [!code-vb[X509Certificate.GetExpirationDateString Method#1](~/add/codesnippet/visualbasic/76048adf-be4c-432a-8c57-_1.vb)]\n [!code-cpp[X509Certificate.GetExpirationDateString Method#1](~/add/codesnippet/cpp/76048adf-be4c-432a-8c57-_1.cpp)]\n [!code-cs[X509Certificate.GetExpirationDateString Method#1](~/add/codesnippet/csharp/76048adf-be4c-432a-8c57-_1.cs)]"
  syntax:
    content: public virtual string GetExpirationDateString ();
    parameters: []
    return:
      type: System.String
      description: "Utløpsdatoen for X.509 sertifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  id: GetFormat
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetFormat()
  nameWithType: X509Certificate.GetFormat()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerer navnet på format for denne X.509v3-sertifikat."
  remarks: "Formatet X.509 returneres alltid i denne implementeringen."
  example:
  - "The following example uses the GetFormat method to get the format of a certificate and displays it to the console.  \n  \n [!code-cpp[X509Certificate.GetFormat Method#1](~/add/codesnippet/cpp/m-system.security.crypto_96_1.cpp)]\n [!code-cs[X509Certificate.GetFormat Method#1](~/add/codesnippet/csharp/m-system.security.crypto_96_1.cs)]\n [!code-vb[X509Certificate.GetFormat Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_96_1.vb)]"
  syntax:
    content: public virtual string GetFormat ();
    parameters: []
    return:
      type: System.String
      description: "Formatet for dette X.509-sertifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: X509Certificate.GetHashCode()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerer hashkoden for X.509v3-sertifikat som et heltall."
  remarks: "Hvis X.509 sertifikatet hash-koden er en matrise med over 4 byte, vises ikke alle byte etter fjerde byte i denne heltall representasjon."
  example:
  - "The following example uses the GetHashCode method to return an integer representation of a certificate's hash code and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetHashCode Method#1](~/add/codesnippet/csharp/m-system.security.crypto_37_1.cs)]\n [!code-cpp[X509Certificate.GetHashCode Method#1](~/add/codesnippet/cpp/m-system.security.crypto_37_1.cpp)]\n [!code-vb[X509Certificate.GetHashCode Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_37_1.vb)]"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Hashkoden for X.509-sertifikat som et heltall."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName
  id: GetIssuerName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetIssuerName()
  nameWithType: X509Certificate.GetIssuerName()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerer navnet på sertifiseringsinstansen som har utstedt sertifikatet X.509v3."
  remarks: ''
  example:
  - "The following example uses the GetIssuerName method to return the certificate issuer's name and displays it to the console.  \n  \n [!code-cpp[X509Certificate.GetIssuerName Method#1](~/add/codesnippet/cpp/m-system.security.crypto_90_1.cpp)]\n [!code-vb[X509Certificate.GetIssuerName Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_90_1.vb)]\n [!code-cs[X509Certificate.GetIssuerName Method#1](~/add/codesnippet/csharp/m-system.security.crypto_90_1.cs)]"
  syntax:
    content: public virtual string GetIssuerName ();
    parameters: []
    return:
      type: System.String
      description: "Navnet på sertifiseringsinstansen som har utstedt sertifikatet X.509."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Oppstår en feil med sertifikatet. For eksempel:-sertifikatfilen finnes ikke.      -Sertifikatet er ugyldig.      Passordet-sertifikatet er feil."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  id: GetKeyAlgorithm
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetKeyAlgorithm()
  nameWithType: X509Certificate.GetKeyAlgorithm()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerer algoritme for informasjon om denne X.509v3-sertifikat som en streng."
  remarks: ''
  example:
  - "The following example uses the GetKeyAlgorithm method to get a certificate's key algorithm in string format and displays it to the console.  \n  \n [!code-cpp[X509Certificate.GetKeyAlgorithm Method#1](~/add/codesnippet/cpp/m-system.security.crypto_21_1.cpp)]\n [!code-cs[X509Certificate.GetKeyAlgorithm Method#1](~/add/codesnippet/csharp/m-system.security.crypto_21_1.cs)]\n [!code-vb[X509Certificate.GetKeyAlgorithm Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_21_1.vb)]"
  syntax:
    content: public virtual string GetKeyAlgorithm ();
    parameters: []
    return:
      type: System.String
      description: "Algoritme informasjonen for sertifikatet X.509 som en streng."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Sertifikatkonteksten er ugyldig."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  id: GetKeyAlgorithmParameters
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetKeyAlgorithmParameters()
  nameWithType: X509Certificate.GetKeyAlgorithmParameters()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerer key Algoritmeparameterne for X.509v3-sertifikat som en bytematrise."
  remarks: ''
  example:
  - "The following example uses the GetKeyAlgorithmParameters method to return a certificate's key algorithm parameters as an array of bytes and displays it to the console.  \n  \n [!code-cpp[X509Certificate.GetKeyAlgorithmParameters Method#1](~/add/codesnippet/cpp/50ee38f2-6fab-4f27-b38b-_1.cpp)]\n [!code-cs[X509Certificate.GetKeyAlgorithmParameters Method#1](~/add/codesnippet/csharp/50ee38f2-6fab-4f27-b38b-_1.cs)]\n [!code-vb[X509Certificate.GetKeyAlgorithmParameters Method#1](~/add/codesnippet/visualbasic/50ee38f2-6fab-4f27-b38b-_1.vb)]"
  syntax:
    content: public virtual byte[] GetKeyAlgorithmParameters ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Nøkkelen Algoritmeparameterne for X.509-sertifikat som en bytematrise."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Sertifikatkonteksten er ugyldig."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  id: GetKeyAlgorithmParametersString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetKeyAlgorithmParametersString()
  nameWithType: X509Certificate.GetKeyAlgorithmParametersString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerer key Algoritmeparameterne for X.509v3-sertifikat som en heksadesimale streng."
  remarks: ''
  example:
  - "The following example uses the GetKeyAlgorithmParametersString method to return a certificate's key algorithm parameters in string format and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetKeyAlgorithmParametersString#1](~/add/codesnippet/csharp/a22806f0-c945-45f8-bbd4-_1.cs)]\n [!code-cpp[X509Certificate.GetKeyAlgorithmParametersString#1](~/add/codesnippet/cpp/a22806f0-c945-45f8-bbd4-_1.cpp)]\n [!code-vb[X509Certificate.GetKeyAlgorithmParametersString#1](~/add/codesnippet/visualbasic/a22806f0-c945-45f8-bbd4-_1.vb)]"
  syntax:
    content: public virtual string GetKeyAlgorithmParametersString ();
    parameters: []
    return:
      type: System.String
      description: "Nøkkelen Algoritmeparameterne for X.509-sertifikat som en heksadesimale streng."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Sertifikatkonteksten er ugyldig."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetName
  id: GetName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetName()
  nameWithType: X509Certificate.GetName()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetName()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerer navnet på sikkerhetskontohaveren sertifikatet ble utstedt."
  remarks: ''
  example:
  - "The following example uses the GetName method to return the name of a certificate's principal and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetName Method#1](~/add/codesnippet/csharp/m-system.security.crypto_133_1.cs)]\n [!code-cpp[X509Certificate.GetName Method#1](~/add/codesnippet/cpp/m-system.security.crypto_133_1.cpp)]\n [!code-vb[X509Certificate.GetName Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_133_1.vb)]"
  syntax:
    content: public virtual string GetName ();
    parameters: []
    return:
      type: System.String
      description: "Navnet på sikkerhetskontohaveren sertifikatet ble utstedt."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetName*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Sertifikatkonteksten er ugyldig."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  id: GetPublicKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetPublicKey()
  nameWithType: X509Certificate.GetPublicKey()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerer fellesnøkkelen for sertifikatet X.509v3 som en bytematrise."
  remarks: ''
  example:
  - "The following example uses the GetPublicKey method to return a certificate's public key as an array of bytes and displays it to the console.  \n  \n [!code-cpp[X509Certificate.GetPublicKey Method#1](~/add/codesnippet/cpp/m-system.security.crypto_13_1.cpp)]\n [!code-cs[X509Certificate.GetPublicKey Method#1](~/add/codesnippet/csharp/m-system.security.crypto_13_1.cs)]\n [!code-vb[X509Certificate.GetPublicKey Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_13_1.vb)]"
  syntax:
    content: public virtual byte[] GetPublicKey ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Fellesnøkkelen for X.509-sertifikat som en bytematrise."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Sertifikatkonteksten er ugyldig."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString
  id: GetPublicKeyString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetPublicKeyString()
  nameWithType: X509Certificate.GetPublicKeyString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerer fellesnøkkelen for sertifikatet X.509v3 som en heksadesimale streng."
  remarks: ''
  example:
  - "The following example uses the GetPublicKeyString method to return a certificate's public key as a string and displays it to the console.  \n  \n [!code-cpp[X509Certificate.GetPublicKeyString Method#1](~/add/codesnippet/cpp/32662298-b286-4db7-b0c3-_1.cpp)]\n [!code-cs[X509Certificate.GetPublicKeyString Method#1](~/add/codesnippet/csharp/32662298-b286-4db7-b0c3-_1.cs)]\n [!code-vb[X509Certificate.GetPublicKeyString Method#1](~/add/codesnippet/visualbasic/32662298-b286-4db7-b0c3-_1.vb)]"
  syntax:
    content: public virtual string GetPublicKeyString ();
    parameters: []
    return:
      type: System.String
      description: "Fellesnøkkelen for X.509-sertifikat som en heksadesimale streng."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
  id: GetRawCertData
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetRawCertData()
  nameWithType: X509Certificate.GetRawCertData()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerer raw-data for hele X.509v3-sertifikat som en bytematrise."
  remarks: ''
  example:
  - "The following example uses the GetRawCertData method to return a certificate's raw data as an array of bytes and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetRawCertData Method#1](~/add/codesnippet/csharp/m-system.security.crypto_8_1.cs)]\n [!code-vb[X509Certificate.GetRawCertData Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_8_1.vb)]\n [!code-cpp[X509Certificate.GetRawCertData Method#1](~/add/codesnippet/cpp/m-system.security.crypto_8_1.cpp)]"
  syntax:
    content: public virtual byte[] GetRawCertData ();
    parameters: []
    return:
      type: System.Byte[]
      description: "En bytematrise som inneholder X.509 sertifikatdataene."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString
  id: GetRawCertDataString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetRawCertDataString()
  nameWithType: X509Certificate.GetRawCertDataString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerer raw-data for hele X.509v3-sertifikat som en heksadesimale streng."
  remarks: ''
  example:
  - "The following example uses the GetRawCertDataString method to return a certificate's raw data as a string and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetRawCertDataString Method#1](~/add/codesnippet/csharp/7093e757-0c91-4543-9e38-_1.cs)]\n [!code-cpp[X509Certificate.GetRawCertDataString Method#1](~/add/codesnippet/cpp/7093e757-0c91-4543-9e38-_1.cpp)]\n [!code-vb[X509Certificate.GetRawCertDataString Method#1](~/add/codesnippet/visualbasic/7093e757-0c91-4543-9e38-_1.vb)]"
  syntax:
    content: public virtual string GetRawCertDataString ();
    parameters: []
    return:
      type: System.String
      description: "X.509 sertifikatdataene som en heksadesimale streng."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  id: GetSerialNumber
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetSerialNumber()
  nameWithType: X509Certificate.GetSerialNumber()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerer serienummeret for X.509v3-sertifikat som en bytematrise."
  remarks: ''
  example:
  - "The following example uses the GetSerialNumber method to return a certificate's serial number as an array of bytes and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetSerialNumber Method#1](~/add/codesnippet/csharp/m-system.security.crypto_4_1.cs)]\n [!code-cpp[X509Certificate.GetSerialNumber Method#1](~/add/codesnippet/cpp/m-system.security.crypto_4_1.cpp)]\n [!code-vb[X509Certificate.GetSerialNumber Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_4_1.vb)]"
  syntax:
    content: public virtual byte[] GetSerialNumber ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Serienummeret for X.509-sertifikat som en bytematrise."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Sertifikatkonteksten er ugyldig."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
  id: GetSerialNumberString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetSerialNumberString()
  nameWithType: X509Certificate.GetSerialNumberString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerer serienummeret for X.509v3-sertifikat som en heksadesimale streng."
  remarks: ''
  example:
  - "The following example uses the GetSerialNumberString method to return a certificate's serial number as a string and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetSerialNumberString Method#1](~/add/codesnippet/csharp/68e809e1-8785-4578-8a1f-_1.cs)]\n [!code-cpp[X509Certificate.GetSerialNumberString Method#1](~/add/codesnippet/cpp/68e809e1-8785-4578-8a1f-_1.cpp)]\n [!code-vb[X509Certificate.GetSerialNumberString Method#1](~/add/codesnippet/visualbasic/68e809e1-8785-4578-8a1f-_1.vb)]"
  syntax:
    content: public virtual string GetSerialNumberString ();
    parameters: []
    return:
      type: System.String
      description: "Serienummeret for X.509-sertifikat som en heksadesimale streng."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  id: Handle
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Handle
  nameWithType: X509Certificate.Handle
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Henter en referanse til en Microsoft kryptografisk API sertifikatkontekst beskrevet av et ubehandlet <xref uid=&quot;langword_csharp_PCCERT_CONTEXT&quot; name=&quot;PCCERT_CONTEXT&quot; href=&quot;&quot;> </xref> struktur."
  remarks: "Referansen er bare gyldig levetiden for den <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objektet.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "En <xref:System.IntPtr>-strukturen som representerer et ubehandlet <xref uid=&quot;langword_csharp_PCCERT_CONTEXT&quot; name=&quot;PCCERT_CONTEXT&quot; href=&quot;&quot;> </xref> strukturen.</xref:System.IntPtr>"
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[])
  id: Import(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(Byte[])
  nameWithType: X509Certificate.Import(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Fyller ut den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt med data fra en bytematrise."
  remarks: "Denne metoden kan brukes til å ta raw bytematrise av X.509-sertifikat og fyll ut den <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objektet med tilhørende verdier.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public virtual void Import (byte[] rawData);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "En bytematrise som inneholder data fra et X.509-sertifikat."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - lengden på den <code> rawData </code> parameteren er 0."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String)
  id: Import(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(String)
  nameWithType: X509Certificate.Import(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Fyller ut den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt med informasjon fra en sertifikatfil."
  remarks: "Denne metoden bruker en sertifikatfil (for eksempel en fil med filtypen CER) som representerer et X.509-sertifikat, og fyller ut den <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objekt med sertifikatet i filen.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  example:
  - "The following example loads an X.509 certificate from a file, calls the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.ToString%2A> method, and displays the results to the console.  \n  \n [!code-cs[Cryptography.X509Certificates.X509Certificate.Import#1](~/add/codesnippet/csharp/9f89a581-a9e3-4157-bfa5-_1.cs)]\n [!code-cpp[Cryptography.X509Certificates.X509Certificate.Import#1](~/add/codesnippet/cpp/9f89a581-a9e3-4157-bfa5-_1.cpp)]\n [!code-vb[Cryptography.X509Certificates.X509Certificate.Import#1](~/add/codesnippet/visualbasic/9f89a581-a9e3-4157-bfa5-_1.vb)]"
  syntax:
    content: public virtual void Import (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "Navnet på sertifikatfilen representert som en streng."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[],SecureString,X509KeyStorageFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Fyller ut en <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt bruker data fra en bytematrise, passord og en nøkkel lagring-flagget."
  remarks: >-
    > [!IMPORTANT]

    >  Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.
  syntax:
    content: public virtual void Import (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "En bytematrise som inneholder data fra et X.509-sertifikat."
    - id: password
      type: System.Security.SecureString
      description: "Passordet som kreves for å få tilgang til X.509 sertifikatdataene."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "En bitvis kombinasjon av opplistingen verdier som styrer hvor og hvordan du importere sertifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - lengden på den <code> rawData </code> parameteren er 0."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[],String,X509KeyStorageFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Fyller ut den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt bruker data fra en bytematrise, passord og flagg for å bestemme hvordan den private nøkkelen er importert."
  remarks: "Denne metoden kan brukes til å fylle ut et <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objekt bruker et passord for sertifikatet som er representert av Bytematrisen.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> Den <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>verdien kan brukes til å kontrollere hvor og hvordan den private nøkkelen er importert.</xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>"
  syntax:
    content: public virtual void Import (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "En bytematrise som inneholder data fra et X.509-sertifikat."
    - id: password
      type: System.String
      description: "Passordet som kreves for å få tilgang til X.509 sertifikatdataene."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "En bitvis kombinasjon av opplistingen verdier som styrer hvor og hvordan du importere sertifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - lengden på den <code> rawData </code> parameteren er 0."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String,SecureString,X509KeyStorageFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Fyller ut en <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt med informasjon fra en sertifikatfil, passord og en nøkkel lagring-flagget."
  remarks: >-
    > [!IMPORTANT]

    >  Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.
  syntax:
    content: public virtual void Import (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "Navnet på sertifikatfilen."
    - id: password
      type: System.Security.SecureString
      description: "Passordet som kreves for å få tilgang til X.509 sertifikatdataene."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "En bitvis kombinasjon av opplistingen verdier som styrer hvor og hvordan du importere sertifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String,String,X509KeyStorageFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Fyller ut den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt med informasjon fra en sertifikatfil, et passord og en <xref href=&quot;System.Security.Cryptography.X509Certificates.X509KeyStorageFlags&quot;> </xref> verdi."
  remarks: >-
    > [!IMPORTANT]

    >  Never hard-code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.
  syntax:
    content: public virtual void Import (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "Navnet på sertifikatfilen representert som en streng."
    - id: password
      type: System.String
      description: "Passordet som kreves for å få tilgang til X.509 sertifikatdataene."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "En bitvis kombinasjon av opplistingen verdier som styrer hvor og hvordan du importere sertifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  id: Issuer
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Issuer
  nameWithType: X509Certificate.Issuer
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Henter navnet på sertifiseringsinstansen som har utstedt sertifikatet X.509v3."
  syntax:
    content: public string Issuer { get; }
    return:
      type: System.String
      description: "Navnet på sertifiseringsinstansen som har utstedt sertifikatet X.509v3."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Referansen for sertifikatet er ugyldig."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Reset
  id: Reset
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Reset()
  nameWithType: X509Certificate.Reset()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Tilbakestiller tilstanden til den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> objektet."
  remarks: "Bruk metoden tilbakestilling til å tilbakestille verdien for sertifikatet. Denne metoden frigjør også ingen ressurser som er knyttet til sertifikatet."
  syntax:
    content: public virtual void Reset ();
    parameters: []
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  id: Subject
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Subject
  nameWithType: X509Certificate.Subject
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Henter identifiseres emnenavnet fra sertifikatet."
  syntax:
    content: public string Subject { get; }
    return:
      type: System.String
      description: "Det unike navnet for emne fra sertifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Subject*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Referansen for sertifikatet er ugyldig."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  id: System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  isEii: true
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  nameWithType: X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Implementerer den <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> grensesnittet og kalles tilbake deserialisering-hendelse når deserialisering er fullført."
  syntax:
    content: void IDeserializationCallback.OnDeserialization (object sender);
    parameters:
    - id: sender
      type: System.Object
      description: "Kilden for hendelsen deserialisering."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Henter informasjon for serialisering med data som er nødvendig for å opprette en forekomst av gjeldende <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objektet."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Objektet til å fylle ut med serialisering informasjon."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Mål-konteksten for serialisering."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString
  id: ToString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: ToString()
  nameWithType: X509Certificate.ToString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerer en streng som representerer gjeldende <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objektet."
  remarks: ''
  example:
  - "The following example uses the ToString method to display the value of a certificate to the console.  \n  \n [!code-cs[X509Certificate.ToString Method#1](~/add/codesnippet/csharp/m-system.security.crypto_128_1.cs)]\n [!code-cpp[X509Certificate.ToString Method#1](~/add/codesnippet/cpp/m-system.security.crypto_128_1.cpp)]\n [!code-vb[X509Certificate.ToString Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_128_1.vb)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "En strengrepresentasjon av gjeldende <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objektet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)
  id: ToString(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: ToString(Boolean)
  nameWithType: X509Certificate.ToString(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerer en streng som representerer gjeldende <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objektet, med ekstra informasjon om angitt."
  remarks: ''
  example:
  - "The following example uses the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.ToString%2A> method to display the value of a certificate to the console.  \n  \n [!code-cs[X509Certificate.ToString Method#1](~/add/codesnippet/csharp/7bb8ae2b-24f8-4b21-80b2-_1.cs)]\n [!code-cpp[X509Certificate.ToString Method#1](~/add/codesnippet/cpp/7bb8ae2b-24f8-4b21-80b2-_1.cpp)]\n [!code-vb[X509Certificate.ToString Method#1](~/add/codesnippet/visualbasic/7bb8ae2b-24f8-4b21-80b2-_1.vb)]"
  syntax:
    content: public virtual string ToString (bool fVerbose);
    parameters:
    - id: fVerbose
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>til å produsere detaljert formatet strengrepresentasjon; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "En strengrepresentasjon av gjeldende <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objektet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate()
  nameWithType: X509Certificate.X509Certificate()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(Byte[])
  nameWithType: X509Certificate.X509Certificate(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.IntPtr)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(IntPtr)
  nameWithType: X509Certificate.X509Certificate(IntPtr)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(X509Certificate)
  nameWithType: X509Certificate.X509Certificate(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(String)
  nameWithType: X509Certificate.X509Certificate(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(Byte[],SecureString)
  nameWithType: X509Certificate.X509Certificate(Byte[],SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],SecureString)
- uid: System.Security.SecureString
  parent: System.Security
  isExternal: false
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(Byte[],String)
  nameWithType: X509Certificate.X509Certificate(Byte[],String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(SerializationInfo,StreamingContext)
  nameWithType: X509Certificate.X509Certificate(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(String,SecureString)
  nameWithType: X509Certificate.X509Certificate(String,SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,SecureString)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(String,String)
  nameWithType: X509Certificate.X509Certificate(String,String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509KeyStorageFlags
  nameWithType: X509KeyStorageFlags
  fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: CreateFromCertFile(String)
  nameWithType: X509Certificate.CreateFromCertFile(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: CreateFromSignedFile(String)
  nameWithType: X509Certificate.CreateFromSignedFile(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Dispose()
  nameWithType: X509Certificate.Dispose()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: X509Certificate.Dispose(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Equals(Object)
  nameWithType: X509Certificate.Equals(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(Object)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Equals(X509Certificate)
  nameWithType: X509Certificate.Equals(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Export(X509ContentType)
  nameWithType: X509Certificate.Export(X509ContentType)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType)
- uid: System.Security.Cryptography.X509Certificates.X509ContentType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509ContentType
  nameWithType: X509ContentType
  fullName: System.Security.Cryptography.X509Certificates.X509ContentType
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Export(X509ContentType,SecureString)
  nameWithType: X509Certificate.Export(X509ContentType,SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType,SecureString)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Export(X509ContentType,String)
  nameWithType: X509Certificate.Export(X509ContentType,String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType,String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: FormatDate(DateTime)
  nameWithType: X509Certificate.FormatDate(DateTime)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetCertHash()
  nameWithType: X509Certificate.GetCertHash()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetCertHashString()
  nameWithType: X509Certificate.GetCertHashString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetEffectiveDateString()
  nameWithType: X509Certificate.GetEffectiveDateString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetExpirationDateString()
  nameWithType: X509Certificate.GetExpirationDateString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetFormat()
  nameWithType: X509Certificate.GetFormat()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetHashCode()
  nameWithType: X509Certificate.GetHashCode()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetIssuerName()
  nameWithType: X509Certificate.GetIssuerName()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithm()
  nameWithType: X509Certificate.GetKeyAlgorithm()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithmParameters()
  nameWithType: X509Certificate.GetKeyAlgorithmParameters()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithmParametersString()
  nameWithType: X509Certificate.GetKeyAlgorithmParametersString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetName()
  nameWithType: X509Certificate.GetName()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetName()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetPublicKey()
  nameWithType: X509Certificate.GetPublicKey()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetPublicKeyString()
  nameWithType: X509Certificate.GetPublicKeyString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetRawCertData()
  nameWithType: X509Certificate.GetRawCertData()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetRawCertDataString()
  nameWithType: X509Certificate.GetRawCertDataString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetSerialNumber()
  nameWithType: X509Certificate.GetSerialNumber()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetSerialNumberString()
  nameWithType: X509Certificate.GetSerialNumberString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Handle
  nameWithType: X509Certificate.Handle
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Handle
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(Byte[])
  nameWithType: X509Certificate.Import(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[])
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(String)
  nameWithType: X509Certificate.Import(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[],SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[],String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String,SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String,String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Issuer
  nameWithType: X509Certificate.Issuer
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Reset
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Reset()
  nameWithType: X509Certificate.Reset()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Reset()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Subject
  nameWithType: X509Certificate.Subject
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Subject
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  nameWithType: X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: ToString()
  nameWithType: X509Certificate.ToString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: ToString(Boolean)
  nameWithType: X509Certificate.ToString(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate.X509Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: CreateFromCertFile
  nameWithType: X509Certificate.CreateFromCertFile
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: CreateFromSignedFile
  nameWithType: X509Certificate.CreateFromSignedFile
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Dispose
  nameWithType: X509Certificate.Dispose
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Equals
  nameWithType: X509Certificate.Equals
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Export
  nameWithType: X509Certificate.Export
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: FormatDate
  nameWithType: X509Certificate.FormatDate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetCertHash
  nameWithType: X509Certificate.GetCertHash
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetCertHashString
  nameWithType: X509Certificate.GetCertHashString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetEffectiveDateString
  nameWithType: X509Certificate.GetEffectiveDateString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetExpirationDateString
  nameWithType: X509Certificate.GetExpirationDateString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetFormat
  nameWithType: X509Certificate.GetFormat
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetHashCode
  nameWithType: X509Certificate.GetHashCode
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetIssuerName
  nameWithType: X509Certificate.GetIssuerName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithm
  nameWithType: X509Certificate.GetKeyAlgorithm
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithmParameters
  nameWithType: X509Certificate.GetKeyAlgorithmParameters
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithmParametersString
  nameWithType: X509Certificate.GetKeyAlgorithmParametersString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetName*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetName
  nameWithType: X509Certificate.GetName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetPublicKey
  nameWithType: X509Certificate.GetPublicKey
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetPublicKeyString
  nameWithType: X509Certificate.GetPublicKeyString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetRawCertData
  nameWithType: X509Certificate.GetRawCertData
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetRawCertDataString
  nameWithType: X509Certificate.GetRawCertDataString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetSerialNumber
  nameWithType: X509Certificate.GetSerialNumber
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetSerialNumberString
  nameWithType: X509Certificate.GetSerialNumberString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Handle*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Handle
  nameWithType: X509Certificate.Handle
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import
  nameWithType: X509Certificate.Import
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Issuer
  nameWithType: X509Certificate.Issuer
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Reset*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Reset
  nameWithType: X509Certificate.Reset
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Subject*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Subject
  nameWithType: X509Certificate.Subject
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
  nameWithType: X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: ToString
  nameWithType: X509Certificate.ToString
