### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlDataAdapter
  id: SqlDataAdapter
  children:
  - System.Data.SqlClient.SqlDataAdapter.#ctor
  - System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)
  - System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  - System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)
  - System.Data.SqlClient.SqlDataAdapter.AddToBatch(System.Data.IDbCommand)
  - System.Data.SqlClient.SqlDataAdapter.ClearBatch
  - System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.SqlClient.SqlDataAdapter.DeleteCommand
  - System.Data.SqlClient.SqlDataAdapter.ExecuteBatch
  - System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  - System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  - System.Data.SqlClient.SqlDataAdapter.InitializeBatching
  - System.Data.SqlClient.SqlDataAdapter.InsertCommand
  - System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  - System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.SqlClient.SqlDataAdapter.RowUpdated
  - System.Data.SqlClient.SqlDataAdapter.RowUpdating
  - System.Data.SqlClient.SqlDataAdapter.SelectCommand
  - System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  - System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  - System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  - System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  - System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone
  - System.Data.SqlClient.SqlDataAdapter.TerminateBatching
  - System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize
  - System.Data.SqlClient.SqlDataAdapter.UpdateCommand
  langs:
  - csharp
  name: SqlDataAdapter
  nameWithType: SqlDataAdapter
  fullName: System.Data.SqlClient.SqlDataAdapter
  type: Class
  summary: "Representerer et sett med datakommandoer og en databasetilkobling som brukes til å fylle den <xref href=&quot;System.Data.DataSet&quot;> </xref> og oppdatere en SQL Server-database. Denne klassen kan ikke arves."
  remarks: "SqlDataAdapter, fungerer som en bro mellom en <xref:System.Data.DataSet>og SQL Server for å hente og lagring av data.</xref:System.Data.DataSet> SqlDataAdapter gir denne broen ved å tilordne <xref:System.Data.Common.DbDataAdapter.Fill%2A>, som endrer data i den <xref:System.Data.DataSet>som samsvarer med dataene i datakilden, og <xref:System.Data.Common.DbDataAdapter.Update%2A>, som endrer data i datakilden som samsvarer med dataene i den <xref:System.Data.DataSet>, ved hjelp av passende Transact-SQL-setninger mot datakilden.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Fill%2A> Oppdateringen utføres på grunnlag av rad. For hver rad innsatte endret og slettet den <xref:System.Data.Common.DbDataAdapter.Update%2A>metoden bestemmer typen endringer er utført på den (`Insert`, `Update`, eller `Delete`).</xref:System.Data.Common.DbDataAdapter.Update%2A> Avhengig av endring av `Insert`, `Update`, eller `Delete` kommandoen malen utfører for å overføre den endrede raden til datakilden. Når SqlDataAdapter fyller en <xref:System.Data.DataSet>, opprettes det nødvendige tabellene og kolonnene for de returnerte dataene hvis de ikke allerede finnes.</xref:System.Data.DataSet> Imidlertid primære nøkkelinformasjon er ikke inkludert i implisitt opprettet skjemaet med mindre <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>egenskapen er satt til <xref:System.Data.MissingSchemaAction>.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> Du kan også ha SqlDataAdapter opprette skjemaet for den <xref:System.Data.DataSet>, inkludert primære nøkkelinformasjon, før den er fylt med data ved hjelp av `FillSchema`.</xref:System.Data.DataSet> For mer informasjon, kan du se [eksisterende begrensninger for å legge til et datasett](~/add/includes/ajax-current-ext-md.md).       SqlDataAdapter brukes sammen med <xref:System.Data.SqlClient.SqlConnection>og <xref:System.Data.SqlClient.SqlCommand>å øke ytelse når du kobler til en SQL Server-database.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlConnection>      > [!NOTE] > Hvis du bruker for SQL Server lagrede prosedyrer å redigere eller slette data ved hjelp av en `DataAdapter`, kontroller at du ikke bruke SET NOCOUNT ON i definisjonen av lagrede prosedyren. Berørt av rader antallet returnerte ikke null, ettersom dette skaper som den `DataAdapter` tolkes som en samtidighet-konflikt. I slike tilfeller en <xref:System.Data.DBConcurrencyException>vil bli utløst.</xref:System.Data.DBConcurrencyException>       SqlDataAdapter også den <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, og <xref:System.Data.Common.DataAdapter.TableMappings%2A>Egenskaper for å forenkle innlasting og oppdatering av data.</xref:System.Data.Common.DataAdapter.TableMappings%2A> </xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>       Når det opprettes en forekomst av SqlDataAdapter, settes egenskapene skrivetilgang til opprinnelige verdier. Hvis du vil se en liste av disse verdiene, kan du se SqlDataAdapter-konstruktøren.       Den <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>, og <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>er generisk maler som automatisk er fylt med enkeltverdier fra hver endrede rad via parametere mekanisme.</xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>       For hver kolonne som du overfører til datakilden på <xref:System.Data.Common.DbDataAdapter.Update%2A>, en parameter som skal legges til i `InsertCommand`, `UpdateCommand`, eller `DeleteCommand`.</xref:System.Data.Common.DbDataAdapter.Update%2A> Den <xref:System.Data.Common.DbParameter.SourceColumn%2A>-egenskapen til det <xref:System.Data.Common.DbParameter>objektet må være satt til navnet på kolonnen.</xref:System.Data.Common.DbParameter> </xref:System.Data.Common.DbParameter.SourceColumn%2A> Denne innstillingen angir at verdien for parameteren ikke er angitt manuelt, men er hentet fra den bestemte kolonnen i raden som er behandlet.      > [!NOTE] > En <xref:System.InvalidOperationException>oppstår hvis den <xref:System.Data.Common.DbDataAdapter.Fill%2A>metoden og tabellen inneholder en brukerdefinert type som ikke er tilgjengelig på klientdatamaskinen.</xref:System.Data.Common.DbDataAdapter.Fill%2A> </xref:System.InvalidOperationException> Hvis du vil ha mer informasjon, se [Creating og Using User-Defined typer](http://go.microsoft.com/fwlink/?LinkId=139492) i SQL Server Books Online."
  example:
  - "The following example uses the <xref:System.Data.SqlClient.SqlCommand>, SqlDataAdapter, and <xref:System.Data.SqlClient.SqlConnection> to select records from a database and populate a <xref:System.Data.DataSet> with the selected rows. The filled <xref:System.Data.DataSet> is then returned. To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.  \n  \n [!code-vb[Classic WebData SqlDataAdapter Example#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._14_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter Example#1](~/add/codesnippet/csharp/t-system.data.sqlclient._14_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RowUpdated")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlDataAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.SqlDataAdapterToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public sealed class SqlDataAdapter : System.Data.Common.DbDataAdapter, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DataAdapter
  - System.Data.Common.DbDataAdapter
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DataAdapter.AcceptChangesDuringFill
  - System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  - System.Data.Common.DataAdapter.CloneInternals
  - System.Data.Common.DataAdapter.ContinueUpdateOnError
  - System.Data.Common.DataAdapter.CreateTableMappings
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.FillError
  - System.Data.Common.DataAdapter.FillLoadOption
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.HasTableMappings
  - System.Data.Common.DataAdapter.MissingMappingAction
  - System.Data.Common.DataAdapter.MissingSchemaAction
  - System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  - System.Data.Common.DataAdapter.ResetFillLoadOption
  - System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  - System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  - System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  - System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  - System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  - System.Data.Common.DataAdapter.TableMappings
  - System.Data.Common.DbDataAdapter.DefaultSourceTableName
  - System.Data.Common.DbDataAdapter.Dispose(System.Boolean)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])
  - System.Data.Common.DbDataAdapter.FillCommandBehavior
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.GetFillParameters
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: SqlDataAdapter()
  nameWithType: SqlDataAdapter.SqlDataAdapter()
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref> klasse."
  remarks: "Når en forekomst av <xref:System.Data.SqlClient.SqlDataAdapter>er opprettet, følgende lese-og skrivetilgang er angitt til følgende startverdiene.</xref:System.Data.SqlClient.SqlDataAdapter>      | Egenskaper | Standardverdi |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       Du kan endre verdien for disse egenskapene via en egen kall til egenskapen.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._37_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter.SqlDataAdapter Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._37_1.cs)]"
  syntax:
    content: public SqlDataAdapter ();
    parameters: []
  overload: System.Data.SqlClient.SqlDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)
  id: '#ctor(System.Data.SqlClient.SqlCommand)'
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: SqlDataAdapter(SqlCommand)
  nameWithType: SqlDataAdapter.SqlDataAdapter(SqlCommand)
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter(SqlCommand)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref> klassen med den angitte <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> som den <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>egenskapen.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>"
  remarks: "Denne implementeringen av den <xref:System.Data.SqlClient.SqlDataAdapter>konstruktøren angir den <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>verdien angitt i egenskapen den `selectCommand` parameteren.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter>       Når en forekomst av <xref:System.Data.SqlClient.SqlDataAdapter>er opprettet, følgende lese-og skrivetilgang er angitt til følgende startverdiene.</xref:System.Data.SqlClient.SqlDataAdapter>      | Egenskaper | Standardverdi |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       Du kan endre verdien for disse egenskapene via en egen kall til egenskapen.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>       Når <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>(eller noen av de andre kommando egenskapene) er tilordnet til en tidligere opprettet <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlCommand>ikke klones.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> Den <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>opprettholder en referanse til det tidligere opprettet <xref:System.Data.SqlClient.SqlCommand>objektet.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlDataAdapter.SqlDataAdapter1 Example#1](~/add/codesnippet/csharp/9d168a15-4587-40fd-a80e-_1.cs)]\n [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter1 Example#1](~/add/codesnippet/visualbasic/9d168a15-4587-40fd-a80e-_1.vb)]"
  syntax:
    content: public SqlDataAdapter (System.Data.SqlClient.SqlCommand selectCommand);
    parameters:
    - id: selectCommand
      type: System.Data.SqlClient.SqlCommand
      description: "En <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> som er en Transact-SQL SELECT-setning eller lagret prosedyre og er angitt som den <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>for den <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref>.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>"
  overload: System.Data.SqlClient.SqlDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection)'
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: SqlDataAdapter(String,SqlConnection)
  nameWithType: SqlDataAdapter.SqlDataAdapter(String,SqlConnection)
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter(String,SqlConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref> klasse med en <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>og en <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> objektet.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>"
  remarks: "Denne implementeringen av den <xref:System.Data.SqlClient.SqlDataAdapter>åpner og lukker en <xref:System.Data.SqlClient.SqlConnection>Hvis den ikke allerede er åpen.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlDataAdapter> Dette kan være nyttig i en applikasjon som må kalle den <xref:System.Data.Common.DbDataAdapter.Fill%2A>metode for to eller flere <xref:System.Data.SqlClient.SqlDataAdapter>objekter.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.Data.Common.DbDataAdapter.Fill%2A> Hvis den <xref:System.Data.SqlClient.SqlConnection>er allerede åpen, du må eksplisitt kalle **lukke** eller **fjerne** å lukke den.</xref:System.Data.SqlClient.SqlConnection>       Når en forekomst av <xref:System.Data.SqlClient.SqlDataAdapter>er opprettet, følgende lese-og skrivetilgang er angitt til følgende startverdiene.</xref:System.Data.SqlClient.SqlDataAdapter>      | Egenskaper | Standardverdi |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       Du kan endre verdien for disse egenskapene via en egen kall til egenskapen.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter3 Example#1](~/add/codesnippet/visualbasic/fa8f1b27-cd12-4c35-bbde-_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter.SqlDataAdapter3 Example#1](~/add/codesnippet/csharp/fa8f1b27-cd12-4c35-bbde-_1.cs)]"
  syntax:
    content: public SqlDataAdapter (string selectCommandText, System.Data.SqlClient.SqlConnection selectConnection);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "En <xref:System.String>som en Transact-SQL SELECT-setning eller lagret prosedyre som skal brukes av den <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>for den <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref>.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*> </xref:System.String>"
    - id: selectConnection
      type: System.Data.SqlClient.SqlConnection
      description: "En <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> som representerer tilkoblingen. Hvis du ikke bruker tilkoblingsstrengen <xref uid=&quot;langword_csharp_Integrated Security = true&quot; name=&quot;Integrated Security = true&quot; href=&quot;&quot;> </xref>, kan du bruke <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> skal sendes at Brukernavnet og passordet sikrere enn ved å angi at Brukernavnet og passordet som tekst i tilkoblingsstrengen."
  overload: System.Data.SqlClient.SqlDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: SqlDataAdapter(String,String)
  nameWithType: SqlDataAdapter.SqlDataAdapter(String,String)
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter(String,String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref> klasse med en <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>og en tilkoblingsstreng.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>"
  remarks: "Denne overbelastning av den <xref:System.Data.SqlClient.SqlDataAdapter>konstruktøren bruker den `selectCommandText` parameteren til å angi den <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>egenskap.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter> Den <xref:System.Data.SqlClient.SqlDataAdapter>oppretter og opprettholde tilkoblingen opprettet med den `selectConnectionString` parameteren.</xref:System.Data.SqlClient.SqlDataAdapter>       Når en forekomst av <xref:System.Data.SqlClient.SqlDataAdapter>er opprettet, følgende lese-og skrivetilgang er angitt til følgende startverdiene.</xref:System.Data.SqlClient.SqlDataAdapter>      | Egenskaper | Standardverdi |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       Du kan endre verdien for disse egenskapene via en egen kall til egenskapen.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter2 Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._6_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter.SqlDataAdapter2 Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._6_1.cs)]"
  syntax:
    content: public SqlDataAdapter (string selectCommandText, string selectConnectionString);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "En <xref:System.String>som en Transact-SQL SELECT-setning eller lagret prosedyre som skal brukes av den <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>for den <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref>.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*> </xref:System.String>"
    - id: selectConnectionString
      type: System.String
      description: "Tilkoblingsstrengen. Hvis du ikke bruker tilkoblingsstrengen <xref uid=&quot;langword_csharp_Integrated Security = true&quot; name=&quot;Integrated Security = true&quot; href=&quot;&quot;> </xref>, kan du bruke &lt;xref:System.Data.SqlClient.SqlDataAdapter.%23ctor%2A&gt; og <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> skal sendes at Brukernavnet og passordet sikrere enn ved å angi at Brukernavnet og passordet som tekst i tilkoblingsstrengen."
  overload: System.Data.SqlClient.SqlDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.AddToBatch(System.Data.IDbCommand)
  id: AddToBatch(System.Data.IDbCommand)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: AddToBatch(IDbCommand)
  nameWithType: SqlDataAdapter.AddToBatch(IDbCommand)
  fullName: System.Data.SqlClient.SqlDataAdapter.AddToBatch(IDbCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override int AddToBatch (System.Data.IDbCommand command);
    parameters:
    - id: command
      type: System.Data.IDbCommand
      description: "Som skal legges til."
    return:
      type: System.Int32
      description: "Som skal legges til."
  overload: System.Data.SqlClient.SqlDataAdapter.AddToBatch*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.ClearBatch
  id: ClearBatch
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: ClearBatch()
  nameWithType: SqlDataAdapter.ClearBatch()
  fullName: System.Data.SqlClient.SqlDataAdapter.ClearBatch()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void ClearBatch ();
    parameters: []
  overload: System.Data.SqlClient.SqlDataAdapter.ClearBatch*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: SqlDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "Som skal legges til."
    - id: command
      type: System.Data.IDbCommand
      description: "Som skal legges til."
    - id: statementType
      type: System.Data.StatementType
      description: "Som skal legges til."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "Som skal legges til."
    return:
      type: System.Data.Common.RowUpdatedEventArgs
      description: "Som skal legges til."
  overload: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: SqlDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "Som skal legges til."
    - id: command
      type: System.Data.IDbCommand
      description: "Som skal legges til."
    - id: statementType
      type: System.Data.StatementType
      description: "Som skal legges til."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "Som skal legges til."
    return:
      type: System.Data.Common.RowUpdatingEventArgs
      description: "Som skal legges til."
  overload: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.DeleteCommand
  id: DeleteCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: SqlDataAdapter.DeleteCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter eller angir en Transact-SQL-setningen eller lagret prosedyre slette poster fra datasettet."
  remarks: "Under <xref:System.Data.Common.DbDataAdapter.Update%2A>, hvis denne egenskapen ikke er angitt og primære nøkkelinformasjon finnes i <xref:System.Data.DataSet>DeleteCommand kan genereres automatisk hvis du angi <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>egenskapen og bruk <xref:System.Data.SqlClient.SqlCommandBuilder>.</xref:System.Data.SqlClient.SqlCommandBuilder> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Deretter er flere kommandoer som du ikke angir generert av <xref:System.Data.SqlClient.SqlCommandBuilder>.</xref:System.Data.SqlClient.SqlCommandBuilder> Denne generering logikken krever nøkkelkolonneinformasjon i <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Hvis du vil ha mer informasjon, se [generering kommandoer med CommandBuilders](~/add/includes/ajax-current-ext-md.md).       Når DeleteCommand er tilordnet til en tidligere opprettet <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlCommand>ikke klones.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand> DeleteCommand opprettholder en referanse til det tidligere opprettet <xref:System.Data.SqlClient.SqlCommand>objektet.</xref:System.Data.SqlClient.SqlCommand>       For hver kolonne som du overfører til datakilden på <xref:System.Data.Common.DbDataAdapter.Update%2A>, en parameter som skal legges til i `InsertCommand`, `UpdateCommand`, eller `DeleteCommand`.</xref:System.Data.Common.DbDataAdapter.Update%2A> Den `SourceColumn` for parameteren må være satt til navnet på kolonnen. Dette indikerer at verdien for parameteren ikke er angitt manuelt, men er hentet fra den bestemte kolonnen i raden som er behandlet."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, and DeleteCommand properties. It assumes you have already created a <xref:System.Data.SqlClient.SqlConnection> object.  \n  \n [!code-vb[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._16_1.vb)]\n [!code-cs[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/csharp/p-system.data.sqlclient._16_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlCommand DeleteCommand { get; set; }
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "En <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> brukes under <xref:System.Data.Common.DbDataAdapter.Update*>til å slette poster i databasen som samsvarer med å slette radene i den <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.SqlClient.SqlDataAdapter.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.ExecuteBatch
  id: ExecuteBatch
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: ExecuteBatch()
  nameWithType: SqlDataAdapter.ExecuteBatch()
  fullName: System.Data.SqlClient.SqlDataAdapter.ExecuteBatch()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override int ExecuteBatch ();
    parameters: []
    return:
      type: System.Int32
      description: "Som skal legges til."
  overload: System.Data.SqlClient.SqlDataAdapter.ExecuteBatch*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  id: GetBatchedParameter(System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: GetBatchedParameter(Int32,Int32)
  nameWithType: SqlDataAdapter.GetBatchedParameter(Int32,Int32)
  fullName: System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);
    parameters:
    - id: commandIdentifier
      type: System.Int32
      description: "Som skal legges til."
    - id: parameterIndex
      type: System.Int32
      description: "Som skal legges til."
    return:
      type: System.Data.IDataParameter
      description: "Som skal legges til."
  overload: System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  id: GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: GetBatchedRecordsAffected(Int32,Int32,Exception)
  nameWithType: SqlDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
  fullName: System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);
    parameters:
    - id: commandIdentifier
      type: System.Int32
      description: "Som skal legges til."
    - id: recordsAffected
      type: System.Int32
      description: "Som skal legges til."
    - id: error
      type: System.Exception
      description: "Som skal legges til."
    return:
      type: System.Boolean
      description: "Som skal legges til."
  overload: System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.InitializeBatching
  id: InitializeBatching
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: InitializeBatching()
  nameWithType: SqlDataAdapter.InitializeBatching()
  fullName: System.Data.SqlClient.SqlDataAdapter.InitializeBatching()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void InitializeBatching ();
    parameters: []
  overload: System.Data.SqlClient.SqlDataAdapter.InitializeBatching*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.InsertCommand
  id: InsertCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: InsertCommand
  nameWithType: SqlDataAdapter.InsertCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter eller angir en Transact-SQL-setningen eller lagret prosedyre å sette inn nye poster i datakilden."
  remarks: "Under <xref:System.Data.Common.DbDataAdapter.Update%2A>, hvis denne egenskapen ikke er angitt og primære nøkkelinformasjon finnes i <xref:System.Data.DataSet>InsertCommand kan genereres automatisk hvis du angi <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>egenskapen og bruk <xref:System.Data.SqlClient.SqlCommandBuilder>.</xref:System.Data.SqlClient.SqlCommandBuilder> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Deretter er flere kommandoer som du ikke angir generert av <xref:System.Data.SqlClient.SqlCommandBuilder>.</xref:System.Data.SqlClient.SqlCommandBuilder> Denne generering logikken krever nøkkelkolonneinformasjon i <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Hvis du vil ha mer informasjon, se [generering kommandoer med CommandBuilders](~/add/includes/ajax-current-ext-md.md).       Når InsertCommand er tilordnet til en tidligere opprettet <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlCommand>ikke klones.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand> InsertCommand opprettholder en referanse til det tidligere opprettet <xref:System.Data.SqlClient.SqlCommand>objektet.</xref:System.Data.SqlClient.SqlCommand>       Hvis utførelse av kommandoen returnerer rader, disse radene kan legges til i <xref:System.Data.DataSet>avhengig av hvordan du angir den **UpdatedRowSource** -egenskapen til det <xref:System.Data.SqlClient.SqlCommand>objektet.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.DataSet>       For hver kolonne som du overfører til datakilden på <xref:System.Data.Common.DbDataAdapter.Update%2A>, en parameter som skal legges til `InsertCommand`, `UpdateCommand`, eller `DeleteCommand`.</xref:System.Data.Common.DbDataAdapter.Update%2A> Den `SourceColumn` for parameteren må være satt til navnet på kolonnen. Dette indikerer at verdien for parameteren ikke er angitt manuelt, men er hentet fra den bestemte kolonnen i raden som er behandlet."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, InsertCommand, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, and <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> properties. It assumes you have already created a <xref:System.Data.SqlClient.SqlConnection> object.  \n  \n [!code-vb[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._33_1.vb)]\n [!code-cs[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/csharp/p-system.data.sqlclient._33_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlCommand InsertCommand { get; set; }
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "En <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> brukes under <xref:System.Data.Common.DbDataAdapter.Update*>å sette inn poster i databasen som samsvarer med nye rader i den <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.SqlClient.SqlDataAdapter.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  id: OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: SqlDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatedEventArgs
      description: "Som skal legges til."
  overload: System.Data.SqlClient.SqlDataAdapter.OnRowUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  id: OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: SqlDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatingEventArgs
      description: "Som skal legges til."
  overload: System.Data.SqlClient.SqlDataAdapter.OnRowUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.RowUpdated
  id: RowUpdated
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: RowUpdated
  nameWithType: SqlDataAdapter.RowUpdated
  fullName: System.Data.SqlClient.SqlDataAdapter.RowUpdated
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Forekommer i løpet av <xref:System.Data.Common.DbDataAdapter.Update*>når en kommando kjøres mot datakilden.</xref:System.Data.Common.DbDataAdapter.Update*> Forsøket på å oppdatere gjøres Slik starter hendelsen."
  remarks: "Når du bruker <xref:System.Data.Common.DbDataAdapter.Update%2A>, to hendelser som inntreffer per dataraden oppdatert.</xref:System.Data.Common.DbDataAdapter.Update%2A> Rekkefølgen på utføringen er som følger: 1.  Verdiene i den <xref:System.Data.DataRow>flyttes til parameterverdiene.</xref:System.Data.DataRow>      2.  Den <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>hendelsen skjer.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  Utfører.      4.  Hvis kommandoen er satt til `FirstReturnedRecord`, først returnerte resultatet er plassert i <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  Hvis det er utdataparametere, er de plassert i <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      6.  Den <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>hendelsen skjer.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A>kalles.</xref:System.Data.DataRow.AcceptChanges%2A>"
  example:
  - "The following example shows how to use both the <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> and RowUpdated events.  \n  \n The <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> event returns this output:  \n  \n event args: (command=System.Data.SqlClient.SqlCommand commandType=2 status=0)  \n  \n The RowUpdated event returns this output:  \n  \n event args: (command=System.Data.SqlClient.SqlCommand commandType=2 recordsAffected=1 row=System.Data.DataRow[37] status=0)  \n  \n [!code-vb[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/add/codesnippet/visualbasic/e-system.data.sqlclient._0_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/add/codesnippet/csharp/e-system.data.sqlclient._0_1.cs)]"
  syntax:
    content: public event System.Data.SqlClient.SqlRowUpdatedEventHandler RowUpdated;
    return:
      type: System.Data.SqlClient.SqlRowUpdatedEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.RowUpdating
  id: RowUpdating
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: RowUpdating
  nameWithType: SqlDataAdapter.RowUpdating
  fullName: System.Data.SqlClient.SqlDataAdapter.RowUpdating
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Forekommer i løpet av <xref:System.Data.Common.DbDataAdapter.Update*>før en kommando kjøres mot datakilden.</xref:System.Data.Common.DbDataAdapter.Update*> Forsøket på å oppdatere gjøres Slik starter hendelsen."
  remarks: "Når du bruker <xref:System.Data.Common.DbDataAdapter.Update%2A>, to hendelser som inntreffer per dataraden oppdatert.</xref:System.Data.Common.DbDataAdapter.Update%2A> Rekkefølgen på utføringen er som følger: 1.  Verdiene i den <xref:System.Data.DataRow>flyttes til parameterverdiene.</xref:System.Data.DataRow>      2.  Den <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>hendelsen skjer.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  Utfører.      4.  Hvis kommandoen er satt til `FirstReturnedRecord`, først returnerte resultatet er plassert i <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  Hvis det er utdataparametere, er de plassert i <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      6.  Den <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>hendelsen skjer.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A>kalles.</xref:System.Data.DataRow.AcceptChanges%2A>"
  example:
  - "The following example shows how to use both the RowUpdating and <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> events.  \n  \n The RowUpdating event returns this output:  \n  \n event args: (command=System.Data.SqlClient.SqlCommand commandType=2 status=0)  \n  \n The <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> event returns this output:  \n  \n event args: (command=System.Data.SqlClient.SqlCommand commandType=2 recordsAffected=1 row=System.Data.DataRow[37] status=0)  \n  \n [!code-vb[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/add/codesnippet/visualbasic/e-system.data.sqlclient._1_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/add/codesnippet/csharp/e-system.data.sqlclient._1_1.cs)]"
  syntax:
    content: public event System.Data.SqlClient.SqlRowUpdatingEventHandler RowUpdating;
    return:
      type: System.Data.SqlClient.SqlRowUpdatingEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.SelectCommand
  id: SelectCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: SelectCommand
  nameWithType: SqlDataAdapter.SelectCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter eller angir en Transact-SQL-setningen eller lagret prosedyre som brukes til å velge poster i datakilden."
  remarks: "Når SelectCommand er tilordnet til en tidligere opprettet <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlCommand>ikke klones.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand> SelectCommand opprettholder en referanse til det tidligere opprettet <xref:System.Data.SqlClient.SqlCommand>objektet.</xref:System.Data.SqlClient.SqlCommand>       Hvis SelectCommand ikke returnerer alle rader, ingen tabeller er lagt til i <xref:System.Data.DataSet>, og ingen unntaket oppstår.</xref:System.Data.DataSet>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets the SelectCommand, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, and <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> properties. It assumes you have already created a <xref:System.Data.SqlClient.SqlConnection> object.  \n  \n [!code-vb[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._23_1.vb)]\n [!code-cs[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/csharp/p-system.data.sqlclient._23_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlCommand SelectCommand { get; set; }
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "En <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> brukes under <xref:System.Data.Common.DbDataAdapter.Fill*>til å velge poster fra databasen for plassering i den <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Fill*>"
  overload: System.Data.SqlClient.SqlDataAdapter.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  id: System#Data#IDbDataAdapter#DeleteCommand
  isEii: true
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hvis du vil ha en beskrivelse for dette medlemmet kan du se <xref:System.Data.IDbDataAdapter.DeleteCommand*>.</xref:System.Data.IDbDataAdapter.DeleteCommand*>"
  remarks: "Dette medlemmet er implementering eksplisitt grensesnitt medlem. Den kan brukes bare når den <xref:System.Data.SqlClient.SqlDataAdapter>forekomsten endres til en <xref:System.Data.IDbDataAdapter>grensesnittet.</xref:System.Data.IDbDataAdapter> </xref:System.Data.SqlClient.SqlDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "En <xref href=&quot;System.Data.IDbCommand&quot;> </xref> som brukes under <xref:System.Data.Common.DbDataAdapter.Update*>til å slette poster i datakilden for slettede rader i datasettet.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  id: System#Data#IDbDataAdapter#InsertCommand
  isEii: true
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hvis du vil ha en beskrivelse for dette medlemmet kan du se <xref:System.Data.IDbDataAdapter.InsertCommand*>.</xref:System.Data.IDbDataAdapter.InsertCommand*>"
  remarks: "Dette medlemmet er implementering eksplisitt grensesnitt medlem. Den kan brukes bare når den <xref:System.Data.SqlClient.SqlDataAdapter>forekomsten endres til en <xref:System.Data.IDbDataAdapter>grensesnittet.</xref:System.Data.IDbDataAdapter> </xref:System.Data.SqlClient.SqlDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "En <xref href=&quot;System.Data.IDbCommand&quot;> </xref> som brukes under <xref:System.Data.Common.DbDataAdapter.Update*>å sette inn poster i datakilden for nye rader i datasettet.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  id: System#Data#IDbDataAdapter#SelectCommand
  isEii: true
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hvis du vil ha en beskrivelse for dette medlemmet kan du se <xref:System.Data.IDbDataAdapter.SelectCommand*>.</xref:System.Data.IDbDataAdapter.SelectCommand*>"
  remarks: "Dette medlemmet er implementering eksplisitt grensesnitt medlem. Den kan brukes bare når den <xref:System.Data.SqlClient.SqlDataAdapter>forekomsten endres til en <xref:System.Data.IDbDataAdapter>grensesnittet.</xref:System.Data.IDbDataAdapter> </xref:System.Data.SqlClient.SqlDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "En <xref href=&quot;System.Data.IDbCommand&quot;> </xref> som brukes under <xref:System.Data.Common.DbDataAdapter.Update*>du velger poster fra datakilden for plassering i datasettet.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  id: System#Data#IDbDataAdapter#UpdateCommand
  isEii: true
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Se <xref:System.Data.IDbDataAdapter.UpdateCommand*>.</xref:System.Data.IDbDataAdapter.UpdateCommand*> for en beskrivelse for dette medlemmet"
  remarks: "Dette medlemmet er implementering eksplisitt grensesnitt medlem. Den kan brukes bare når den <xref:System.Data.SqlClient.SqlDataAdapter>forekomsten endres til en <xref:System.Data.IDbDataAdapter>grensesnittet.</xref:System.Data.IDbDataAdapter> </xref:System.Data.SqlClient.SqlDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "En <xref:System.Data.IdbCommand>som brukes under <xref:System.Data.Common.DbDataAdapter.Update*>å oppdatere poster i datakilden for endrede rader i datasettet.</xref:System.Data.Common.DbDataAdapter.Update*> </xref:System.Data.IdbCommand>"
  overload: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: SqlDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlDataAdapter.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Se <xref:System.ICloneable.Clone*>.</xref:System.ICloneable.Clone*> for en beskrivelse for dette medlemmet"
  remarks: "Dette medlemmet er implementering eksplisitt grensesnitt medlem. Den kan brukes bare når den <xref:System.Data.SqlClient.SqlDataAdapter>forekomsten endres til en <xref:System.ICloneable>grensesnittet.</xref:System.ICloneable> </xref:System.Data.SqlClient.SqlDataAdapter>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Et nytt objekt som er en kopi av den gjeldende forekomsten."
  overload: System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.TerminateBatching
  id: TerminateBatching
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: TerminateBatching()
  nameWithType: SqlDataAdapter.TerminateBatching()
  fullName: System.Data.SqlClient.SqlDataAdapter.TerminateBatching()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void TerminateBatching ();
    parameters: []
  overload: System.Data.SqlClient.SqlDataAdapter.TerminateBatching*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize
  id: UpdateBatchSize
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: UpdateBatchSize
  nameWithType: SqlDataAdapter.UpdateBatchSize
  fullName: System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter eller angir antall rader som behandles i hver rundtur til serveren."
  remarks: "Henter eller angir en verdi som aktiverer eller deaktiverer satsvis behandling kundestøtte, og angir antall kommandoer som kan utføres i en bunke.       Bruk UpdateBatchSize-egenskapen for å oppdatere en datakilde med endringer fra <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Dette kan øke ytelsen ved å redusere antallet gå veien om til serveren.       Kjøring av en svært bunken kan redusere ytelsen. Du bør derfor teste for innstillingen for ideelle bunke før implementering av programmet.       En <xref:System.ArgumentOutOfRangeException>oppstår hvis verdien er satt til et tall er mindre enn null.</xref:System.ArgumentOutOfRangeException>"
  syntax:
    content: public override int UpdateBatchSize { get; set; }
    return:
      type: System.Int32
      description: "Antall rader som skal behandles per bunke.       <table><thead><tr><th> Verdien er       </th><th> Effekt       </th></tr></thead><tbody><tr><td> 0       </td><td> Det er ingen grense på bunkestørrelsen..       </td></tr><tr><td> 1       </td><td> Deaktiverer oppdatering av bunken.       </td></tr><tr><td> &gt;1       </td><td> Endringene er sendt ved hjelp av bunker UpdateBatchSize operasjoner om gangen.       </td></tr></tbody></table>       Når du angir dette til en annen verdi enn 1, alle kommandoer som er tilknyttet den <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref> må ha deres **UpdatedRowSource** -egenskapen satt til <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref> eller <xref uid=&quot;langword_csharp_OutputParameters&quot; name=&quot;OutputParameters&quot; href=&quot;&quot;> </xref>. Et unntak ellers."
  overload: System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.UpdateCommand
  id: UpdateCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: SqlDataAdapter.UpdateCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Henter eller angir en Transact-SQL-setningen eller lagret prosedyre som brukes til å oppdatere poster i datakilden."
  remarks: "Under <xref:System.Data.Common.DbDataAdapter.Update%2A>, hvis denne egenskapen ikke er angitt og primære nøkkelinformasjon finnes i <xref:System.Data.DataSet>UpdateCommand kan genereres automatisk hvis du angi <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>egenskapen og bruk <xref:System.Data.SqlClient.SqlCommandBuilder>.</xref:System.Data.SqlClient.SqlCommandBuilder> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Deretter er flere kommandoer som du ikke angir generert av <xref:System.Data.SqlClient.SqlCommandBuilder>.</xref:System.Data.SqlClient.SqlCommandBuilder> Denne generering logikken krever nøkkelkolonneinformasjon i <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Hvis du vil ha mer informasjon, se [generering kommandoer med CommandBuilders](~/add/includes/ajax-current-ext-md.md).       Når UpdateCommand er tilordnet til en tidligere opprettet <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlCommand>ikke klones.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand> UpdateCommand opprettholder en referanse til det tidligere opprettet <xref:System.Data.SqlClient.SqlCommand>objektet.</xref:System.Data.SqlClient.SqlCommand>      > [!NOTE] > Hvis utførelse av kommandoen returnerer rader, oppdaterte radene kan slås sammen med den <xref:System.Data.DataSet>avhengig av hvordan du angir den **UpdatedRowSource** -egenskapen til det <xref:System.Data.SqlClient.SqlCommand>objektet.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.DataSet>       For hver kolonne som du overfører til datakilden på <xref:System.Data.Common.DbDataAdapter.Update%2A>, en parameter som skal legges til `InsertCommand`, `UpdateCommand`, eller `DeleteCommand`.</xref:System.Data.Common.DbDataAdapter.Update%2A>       Den `SourceColumn` for parameteren må være satt til navnet på kolonnen. Dette indikerer at verdien for parameteren ikke er angitt manuelt, men hentet fra den bestemte kolonnen i raden som er behandlet."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, UpdateCommand and <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> properties. It assumes you have already created a <xref:System.Data.SqlClient.SqlConnection> object.  \n  \n [!code-vb[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._31_1.vb)]\n [!code-cs[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/csharp/p-system.data.sqlclient._31_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlCommand UpdateCommand { get; set; }
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "En <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> brukes under <xref:System.Data.Common.DbDataAdapter.Update*>endret rader i å oppdatere poster i databasen som samsvarer med den <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.SqlClient.SqlDataAdapter.UpdateCommand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataAdapter
  isExternal: false
  name: System.Data.Common.DbDataAdapter
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SqlDataAdapter()
  nameWithType: SqlDataAdapter.SqlDataAdapter()
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter()
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SqlDataAdapter(SqlCommand)
  nameWithType: SqlDataAdapter.SqlDataAdapter(SqlCommand)
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter(SqlCommand)
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SqlDataAdapter(String,SqlConnection)
  nameWithType: SqlDataAdapter.SqlDataAdapter(String,SqlConnection)
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter(String,SqlConnection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnection
  nameWithType: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SqlDataAdapter(String,String)
  nameWithType: SqlDataAdapter.SqlDataAdapter(String,String)
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter(String,String)
- uid: System.Data.SqlClient.SqlDataAdapter.AddToBatch(System.Data.IDbCommand)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: AddToBatch(IDbCommand)
  nameWithType: SqlDataAdapter.AddToBatch(IDbCommand)
  fullName: System.Data.SqlClient.SqlDataAdapter.AddToBatch(IDbCommand)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: false
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.Data.SqlClient.SqlDataAdapter.ClearBatch
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: ClearBatch()
  nameWithType: SqlDataAdapter.ClearBatch()
  fullName: System.Data.SqlClient.SqlDataAdapter.ClearBatch()
- uid: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: SqlDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatedEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatedEventArgs
  nameWithType: RowUpdatedEventArgs
  fullName: System.Data.Common.RowUpdatedEventArgs
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Data.Common.DataTableMapping
  parent: System.Data.Common
  isExternal: false
  name: DataTableMapping
  nameWithType: DataTableMapping
  fullName: System.Data.Common.DataTableMapping
- uid: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: SqlDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatingEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatingEventArgs
  nameWithType: RowUpdatingEventArgs
  fullName: System.Data.Common.RowUpdatingEventArgs
- uid: System.Data.SqlClient.SqlDataAdapter.DeleteCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: SqlDataAdapter.DeleteCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.DeleteCommand
- uid: System.Data.SqlClient.SqlDataAdapter.ExecuteBatch
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: ExecuteBatch()
  nameWithType: SqlDataAdapter.ExecuteBatch()
  fullName: System.Data.SqlClient.SqlDataAdapter.ExecuteBatch()
- uid: System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: GetBatchedParameter(Int32,Int32)
  nameWithType: SqlDataAdapter.GetBatchedParameter(Int32,Int32)
  fullName: System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(Int32,Int32)
- uid: System.Data.IDataParameter
  parent: System.Data
  isExternal: false
  name: IDataParameter
  nameWithType: IDataParameter
  fullName: System.Data.IDataParameter
- uid: System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: GetBatchedRecordsAffected(Int32,Int32,Exception)
  nameWithType: SqlDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
  fullName: System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Data.SqlClient.SqlDataAdapter.InitializeBatching
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: InitializeBatching()
  nameWithType: SqlDataAdapter.InitializeBatching()
  fullName: System.Data.SqlClient.SqlDataAdapter.InitializeBatching()
- uid: System.Data.SqlClient.SqlDataAdapter.InsertCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: SqlDataAdapter.InsertCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.InsertCommand
- uid: System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: SqlDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
- uid: System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: SqlDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
- uid: System.Data.SqlClient.SqlDataAdapter.RowUpdated
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: RowUpdated
  nameWithType: SqlDataAdapter.RowUpdated
  fullName: System.Data.SqlClient.SqlDataAdapter.RowUpdated
- uid: System.Data.SqlClient.SqlRowUpdatedEventHandler
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlRowUpdatedEventHandler
  nameWithType: SqlRowUpdatedEventHandler
  fullName: System.Data.SqlClient.SqlRowUpdatedEventHandler
- uid: System.Data.SqlClient.SqlDataAdapter.RowUpdating
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: RowUpdating
  nameWithType: SqlDataAdapter.RowUpdating
  fullName: System.Data.SqlClient.SqlDataAdapter.RowUpdating
- uid: System.Data.SqlClient.SqlRowUpdatingEventHandler
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlRowUpdatingEventHandler
  nameWithType: SqlRowUpdatingEventHandler
  fullName: System.Data.SqlClient.SqlRowUpdatingEventHandler
- uid: System.Data.SqlClient.SqlDataAdapter.SelectCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: SqlDataAdapter.SelectCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.SelectCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: SqlDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlDataAdapter.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlClient.SqlDataAdapter.TerminateBatching
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: TerminateBatching()
  nameWithType: SqlDataAdapter.TerminateBatching()
  fullName: System.Data.SqlClient.SqlDataAdapter.TerminateBatching()
- uid: System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: UpdateBatchSize
  nameWithType: SqlDataAdapter.UpdateBatchSize
  fullName: System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize
- uid: System.Data.SqlClient.SqlDataAdapter.UpdateCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: SqlDataAdapter.UpdateCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.UpdateCommand
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SqlDataAdapter
  nameWithType: SqlDataAdapter.SqlDataAdapter
- uid: System.Data.SqlClient.SqlDataAdapter.AddToBatch*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: AddToBatch
  nameWithType: SqlDataAdapter.AddToBatch
- uid: System.Data.SqlClient.SqlDataAdapter.ClearBatch*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: ClearBatch
  nameWithType: SqlDataAdapter.ClearBatch
- uid: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent
  nameWithType: SqlDataAdapter.CreateRowUpdatedEvent
- uid: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent
  nameWithType: SqlDataAdapter.CreateRowUpdatingEvent
- uid: System.Data.SqlClient.SqlDataAdapter.DeleteCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: SqlDataAdapter.DeleteCommand
- uid: System.Data.SqlClient.SqlDataAdapter.ExecuteBatch*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: ExecuteBatch
  nameWithType: SqlDataAdapter.ExecuteBatch
- uid: System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: GetBatchedParameter
  nameWithType: SqlDataAdapter.GetBatchedParameter
- uid: System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: GetBatchedRecordsAffected
  nameWithType: SqlDataAdapter.GetBatchedRecordsAffected
- uid: System.Data.SqlClient.SqlDataAdapter.InitializeBatching*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: InitializeBatching
  nameWithType: SqlDataAdapter.InitializeBatching
- uid: System.Data.SqlClient.SqlDataAdapter.InsertCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: SqlDataAdapter.InsertCommand
- uid: System.Data.SqlClient.SqlDataAdapter.OnRowUpdated*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: OnRowUpdated
  nameWithType: SqlDataAdapter.OnRowUpdated
- uid: System.Data.SqlClient.SqlDataAdapter.OnRowUpdating*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: OnRowUpdating
  nameWithType: SqlDataAdapter.OnRowUpdating
- uid: System.Data.SqlClient.SqlDataAdapter.SelectCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: SqlDataAdapter.SelectCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: SqlDataAdapter.System.ICloneable.Clone
- uid: System.Data.SqlClient.SqlDataAdapter.TerminateBatching*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: TerminateBatching
  nameWithType: SqlDataAdapter.TerminateBatching
- uid: System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: UpdateBatchSize
  nameWithType: SqlDataAdapter.UpdateBatchSize
- uid: System.Data.SqlClient.SqlDataAdapter.UpdateCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: SqlDataAdapter.UpdateCommand
