### YamlMime:ManagedReference
items:
- uid: System.Threading.Overlapped
  id: Overlapped
  children:
  - System.Threading.Overlapped.#ctor
  - System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  - System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  - System.Threading.Overlapped.AsyncResult
  - System.Threading.Overlapped.EventHandle
  - System.Threading.Overlapped.EventHandleIntPtr
  - System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  - System.Threading.Overlapped.OffsetHigh
  - System.Threading.Overlapped.OffsetLow
  - System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  - System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  - System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  - System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  - System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  langs:
  - csharp
  name: Overlapped
  nameWithType: Overlapped
  fullName: System.Threading.Overlapped
  type: Class
  summary: "Inneholder en behandlet representasjon av en Win32 `OVERLAPPED` strukturen, inkludert metoder for å overføre informasjon fra en overlappet forekomst til en <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktur."
  remarks: "Den <xref:System.Threading.Overlapped.Pack%2A>og <xref:System.Threading.Overlapped.UnsafePack%2A>metoder overføring av informasjon fra et overlappet-objekt til en <xref:System.Threading.NativeOverlapped>-strukturen som kan sendes til Win32 API-funksjoner for asynkrone filen i/u.</xref:System.Threading.NativeOverlapped> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A> <xref:System.Threading.Overlapped.Unpack%2A>Informasjon om overføring fra en <xref:System.Threading.NativeOverlapped>struktur til en forekomst av klassen overlappet.</xref:System.Threading.NativeOverlapped> </xref:System.Threading.Overlapped.Unpack%2A>       Endringer i Egenskaper for et objekt som overlappet innvirkning på de tilknyttede <xref:System.Threading.NativeOverlapped>strukturen og omvendt.</xref:System.Threading.NativeOverlapped>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class Overlapped
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor
  id: '#ctor'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped()
  nameWithType: Overlapped.Overlapped()
  fullName: System.Threading.Overlapped.Overlapped()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Initialiserer en ny, tom forekomst av den <xref href=&quot;System.Threading.Overlapped&quot;> </xref> klasse."
  syntax:
    content: public Overlapped ();
    parameters: []
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped(Int32,Int32,Int32,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Threading.Overlapped&quot;> </xref> klassen med den angitte filen Plasser 32-biters heltall håndtaket for en hendelse som angis når i/u-operasjonen er fullført, og et grensesnitt som skal returneres resultatene av operasjonen."
  remarks: "Bruk <xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>til å hente behandlingen av administrerte synkronisering hendelser som er avledet fra <xref:System.Threading.WaitHandle>klassen.</xref:System.Threading.WaitHandle> </xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>       Implementeringen din av <xref:System.IAsyncResult>gir statusinformasjon i i/u-operasjon.</xref:System.IAsyncResult> Sendes til konstruktøren i den `ar` parameteren og hente den senere med den <xref:System.Threading.Overlapped.AsyncResult%2A>egenskapen.</xref:System.Threading.Overlapped.AsyncResult%2A> Hvis en tilbakeringing metode er angitt for den <xref:System.Threading.Overlapped.Pack%2A>eller <xref:System.Threading.Overlapped.UnsafePack%2A>metoden tilbakeringing kan hente den <xref:System.IAsyncResult>av pakker ut den <xref:System.Threading.NativeOverlapped>strukturen den mottar.</xref:System.Threading.NativeOverlapped> </xref:System.IAsyncResult> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A>"
  syntax:
    content: public Overlapped (int offsetLo, int offsetHi, int hEvent, IAsyncResult ar);
    parameters:
    - id: offsetLo
      type: System.Int32
      description: "Lav ordet filplasseringen vil starte overføringen."
    - id: offsetHi
      type: System.Int32
      description: "Høy ordet filplasseringen vil starte overføringen."
    - id: hEvent
      type: System.Int32
      description: "Referanse til en hendelse som angis når i/u-operasjonen er fullført."
    - id: ar
      type: System.IAsyncResult
      description: "Et objekt som implementerer den <xref:System.IAsyncResult>grensesnittet og gir statusinformasjon i i/u-operasjon.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  id: '#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Threading.Overlapped&quot;> </xref> klassen med den angitte filen Plasser, håndtaket for en hendelse som angis når i/u-operasjonen er fullført, og et grensesnitt som skal returneres resultatene av operasjonen."
  remarks: "Ikke hente referansen for et administrert synkroniseringsobjekt som er avledet fra den <xref:System.Threading.WaitHandle>klasse, må du bruke den <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName>til å hente en <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle>objekt, og kaller den <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A>metoden.</xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> </xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> </xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName> </xref:System.Threading.WaitHandle>       Implementeringen din av <xref:System.IAsyncResult>gir statusinformasjon i i/u-operasjon.</xref:System.IAsyncResult> Sendes til konstruktøren i den `ar` parameteren og hente den senere med den <xref:System.Threading.Overlapped.AsyncResult%2A>egenskapen.</xref:System.Threading.Overlapped.AsyncResult%2A> Hvis en tilbakeringing metode er angitt for den <xref:System.Threading.Overlapped.Pack%2A>eller <xref:System.Threading.Overlapped.UnsafePack%2A>metoden tilbakeringing kan hente den <xref:System.IAsyncResult>av pakker ut den <xref:System.Threading.NativeOverlapped>strukturen den mottar.</xref:System.Threading.NativeOverlapped> </xref:System.IAsyncResult> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A>"
  syntax:
    content: public Overlapped (int offsetLo, int offsetHi, IntPtr hEvent, IAsyncResult ar);
    parameters:
    - id: offsetLo
      type: System.Int32
      description: "Lav ordet filplasseringen vil starte overføringen."
    - id: offsetHi
      type: System.Int32
      description: "Høy ordet filplasseringen vil starte overføringen."
    - id: hEvent
      type: System.IntPtr
      description: "Referanse til en hendelse som angis når i/u-operasjonen er fullført."
    - id: ar
      type: System.IAsyncResult
      description: "Et objekt som implementerer den <xref:System.IAsyncResult>grensesnittet og gir statusinformasjon i i/u-operasjon.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.AsyncResult
  id: AsyncResult
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
  fullName: System.Threading.Overlapped.AsyncResult
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Henter eller angir objektet som gir statusinformasjon i i/u-operasjon."
  syntax:
    content: public IAsyncResult AsyncResult { get; set; }
    return:
      type: System.IAsyncResult
      description: "Et objekt som implementerer den <xref:System.IAsyncResult>grensesnittet.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.AsyncResult*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.EventHandle
  id: EventHandle
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: EventHandle
  nameWithType: Overlapped.EventHandle
  fullName: System.Threading.Overlapped.EventHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Henter eller angir 32-biters heltall-referanse til en Synkroniseringshendelse signalisert under i/u-operasjonen er fullført."
  remarks: "Denne egenskapen kan ikke brukes på 64-biters plattformer. Bruk av <xref:System.Threading.Overlapped.EventHandleIntPtr%2A>egenskapen i stedet.</xref:System.Threading.Overlapped.EventHandleIntPtr%2A>       Bruk <xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>til å hente behandlingen av administrerte synkronisering hendelser som er avledet fra <xref:System.Threading.WaitHandle>klassen.</xref:System.Threading.WaitHandle> </xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>"
  syntax:
    content: public int EventHandle { get; set; }
    return:
      type: System.Int32
      description: "En <xref:System.Int32>-verdi som angir behandlingen av hendelsen synkronisering.</xref:System.Int32>"
  overload: System.Threading.Overlapped.EventHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.EventHandleIntPtr
  id: EventHandleIntPtr
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
  fullName: System.Threading.Overlapped.EventHandleIntPtr
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Henter eller angir referansen til hendelsen synkronisering signalisert under i/u-operasjonen er fullført."
  remarks: "Ikke hente referansen for et administrert synkroniseringsobjekt som er avledet fra den <xref:System.Threading.WaitHandle>klasse, må du bruke den <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName>til å hente en <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle>objekt, og kaller den <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A>metoden.</xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> </xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> </xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName> </xref:System.Threading.WaitHandle>"
  syntax:
    content: public IntPtr EventHandleIntPtr { get; set; }
    return:
      type: System.IntPtr
      description: "En <xref:System.IntPtr>som representerer behandlingen av hendelsen.</xref:System.IntPtr>"
  overload: System.Threading.Overlapped.EventHandleIntPtr*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  id: Free(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Free(NativeOverlapped*)
  nameWithType: Overlapped.Free(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Free(NativeOverlapped*)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Frigjør uforvaltede minnet som er knyttet til en opprinnelig overlappende struktur som er tildelt av den <xref:System.Threading.Overlapped.Pack*>metoden.</xref:System.Threading.Overlapped.Pack*>"
  remarks: "Du må kalle metoden gratis nøyaktig én gang på hver <xref:System.Threading.NativeOverlapped>pekeren du mottar fra den <xref:System.Threading.Overlapped.Pack%2A>metoden.</xref:System.Threading.Overlapped.Pack%2A> </xref:System.Threading.NativeOverlapped> Hvis du ikke kalle metoden gratis, vil du ut minne. Hvis du kaller metoden gratis mer enn én gang, bli minnet skadet."
  syntax:
    content: public static void Free (System.Threading.NativeOverlapped* nativeOverlappedPtr);
    parameters:
    - id: nativeOverlappedPtr
      type: System.Threading.NativeOverlapped*
      description: "En peker til den <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> strukturen til å bli frigjort."
  overload: System.Threading.Overlapped.Free*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>nativeOverlappedPtr</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Threading.Overlapped.OffsetHigh
  id: OffsetHigh
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
  fullName: System.Threading.Overlapped.OffsetHigh
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Henter eller angir det mest signifikante ordet i filplasseringen vil starte overføringen. Filplasseringen er en byteforskyvning fra begynnelsen av filen."
  syntax:
    content: public int OffsetHigh { get; set; }
    return:
      type: System.Int32
      description: "En <xref:System.Int32>verdien som representerer det høy ordet i filplasseringen.</xref:System.Int32>"
  overload: System.Threading.Overlapped.OffsetHigh*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.OffsetLow
  id: OffsetLow
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
  fullName: System.Threading.Overlapped.OffsetLow
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Henter eller angir det laveste ordet i filplasseringen vil starte overføringen. Filplasseringen er en byteforskyvning fra begynnelsen av filen."
  syntax:
    content: public int OffsetLow { get; set; }
    return:
      type: System.Int32
      description: "En <xref:System.Int32>verdien som representerer det lav ordet i filplasseringen.</xref:System.Int32>"
  overload: System.Threading.Overlapped.OffsetLow*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  id: Pack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Pack(IOCompletionCallback)
  nameWithType: Overlapped.Pack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Administrasjonspakkene den gjeldende forekomsten til en <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> strukturen som angir representanten som skal aktiveres når den asynkrone i/u-operasjonen er fullført."
  remarks: "Ubehandlet pekeren returneres av denne metoden kan sendes til operativsystemet i overlappende i/u-operasjoner. Den <xref:System.Threading.NativeOverlapped>strukturen er fast i minnet før <xref:System.Threading.Overlapped.Unpack%2A>kalles.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>      > [!IMPORTANT] > Oppkalleren er ansvarlig for å feste bufferen. Hvis programdomenet er fjernet, men håndtaket for festet bufferen er ødelagt bufferen som er utgitt, slik at i/u-operasjon for å skrive til frigjort adressen Derfor er det best å bruke den <xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>metoden overbelastning, der kjøretiden PIN-bufferen.</xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>"
  syntax:
    content: public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback iocb);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "En <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> representanten som representerer metoden tilbakeringing aktiveres når den asynkrone i/u-operasjonen er fullført."
    return:
      type: System.Threading.NativeOverlapped*
      description: "En ubehandlet peker til en <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktur."
  overload: System.Threading.Overlapped.Pack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Gjeldende <xref href=&quot;System.Threading.Overlapped&quot;> </xref> er allerede pakket."
  platform:
  - net462
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  id: Pack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Pack(IOCompletionCallback,Object)
  nameWithType: Overlapped.Pack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Administrasjonspakkene den gjeldende forekomsten til en <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> strukturen som angir en representant som aktiveres når den asynkrone i/u-operasjonen er fullført, og en behandlede objektet som fungerer som en buffer."
  remarks: "Ubehandlet pekeren returneres av denne metoden kan sendes til operativsystemet i overlappende i/u-operasjoner. Den <xref:System.Threading.NativeOverlapped>strukturen er fast i minnet før <xref:System.Threading.Overlapped.Unpack%2A>kalles.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       Bufferlengden eller buffere som er angitt i `userData` må være de samme som sendes til funksjonen uforvaltede operativsystemet som utfører asynkront i/u.      > [!NOTE] > Kjøretiden PIN-bufferen eller buffere som er angitt i `userData` i løpet av i/u-operasjon. Hvis programdomenet er fjernet, beholder kjøretiden minne festet til i/u-operasjonen er fullført."
  syntax:
    content: public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback iocb, object userData);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "En <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> representanten som representerer metoden tilbakeringing aktiveres når den asynkrone i/u-operasjonen er fullført."
    - id: userData
      type: System.Object
      description: "Et objekt eller en matrise av objekter som representerer inndata eller utdata bufferen for operasjonen. Hvert objekt som representerer en buffer, for eksempel en bytematrise."
    return:
      type: System.Threading.NativeOverlapped*
      description: "En ubehandlet peker til en <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktur."
  overload: System.Threading.Overlapped.Pack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Gjeldende <xref href=&quot;System.Threading.Overlapped&quot;> </xref> er allerede pakket."
  platform:
  - net462
- uid: System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  id: Unpack(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Unpack(NativeOverlapped*)
  nameWithType: Overlapped.Unpack(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Unpack(NativeOverlapped*)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Pakke angitt uforvaltet <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> strukturen i en administrert <xref href=&quot;System.Threading.Overlapped&quot;> </xref> objektet."
  remarks: "Den <xref:System.Threading.NativeOverlapped>strukturen er ikke frigjort fysiske minnet før du kaller den <xref:System.Threading.Overlapped.Free%2A>metoden.</xref:System.Threading.Overlapped.Free%2A> </xref:System.Threading.NativeOverlapped>"
  syntax:
    content: public static System.Threading.Overlapped Unpack (System.Threading.NativeOverlapped* nativeOverlappedPtr);
    parameters:
    - id: nativeOverlappedPtr
      type: System.Threading.NativeOverlapped*
      description: "En ubehandlet peker til en <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktur."
    return:
      type: System.Threading.Overlapped
      description: "En <xref href=&quot;System.Threading.Overlapped&quot;> </xref> objekt som inneholder informasjon pakket fra den opprinnelige strukturen."
  overload: System.Threading.Overlapped.Unpack*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>nativeOverlappedPtr</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  id: UnsafePack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: UnsafePack(IOCompletionCallback)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Administrasjonspakkene den gjeldende forekomsten til en <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> strukturen som angir representanten å aktivere når den asynkrone i/u-operasjonen er fullført. Ikke overføre kall stakken."
  remarks: "Ubehandlet pekeren returneres av denne metoden kan sendes til operativsystemet i overlappende i/u-operasjoner. Den <xref:System.Threading.NativeOverlapped>strukturen er fast i minnet før <xref:System.Threading.Overlapped.Unpack%2A>kalles.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       Oppkalleren er ansvarlig for å feste bufferen. Hvis programdomenet er fjernet, men håndtaket for festet bufferen er ødelagt bufferen som er utgitt, slik at i/u-operasjon for å skrive til frigjort adressen Derfor er det best å bruke den <xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>metoden overbelastning, der kjøretiden PIN-bufferen.</xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>      > [!CAUTION] > Ved hjelp av den <xref:System.Threading.Overlapped.UnsafePack%2A>metoden utilsiktet kan åpne et hull i sikkerheten.</xref:System.Threading.Overlapped.UnsafePack%2A> Kodetilgangssikkerhet baseres tillatelse kontrollen i tillatelsene for alle brukere på stakken. Den <xref:System.Threading.Overlapped.UnsafePack%2A>metoden ikke overføre kall stakken.</xref:System.Threading.Overlapped.UnsafePack%2A> Skadelig kode kanskje utnytte dette for å unngå tillatelse database."
  syntax:
    content: public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback iocb);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "En <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> representanten som representerer metoden tilbakeringing aktiveres når den asynkrone i/u-operasjonen er fullført."
    return:
      type: System.Threading.NativeOverlapped*
      description: "En ubehandlet peker til en <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktur."
  overload: System.Threading.Overlapped.UnsafePack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Gjeldende <xref href=&quot;System.Threading.Overlapped&quot;> </xref> er allerede pakket."
  platform:
  - net462
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  id: UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: UnsafePack(IOCompletionCallback,Object)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Administrasjonspakkene den gjeldende forekomsten til en <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> strukturen angir representanten å aktivere når den asynkrone i/u-operasjonen er fullført, og den forvaltede objekt som fungerer som en buffer. Ikke overføre kall stakken."
  remarks: "Ubehandlet pekeren returneres av denne metoden kan sendes til operativsystemet i overlappende i/u-operasjoner. Den <xref:System.Threading.NativeOverlapped>strukturen er fast i minnet før <xref:System.Threading.Overlapped.Unpack%2A>kalles.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       Bufferlengden eller buffere som er angitt i `userData` må være de samme som sendes til funksjonen uforvaltede operativsystemet som utfører asynkront i/u.       Kjøretiden PIN-bufferen eller buffere som er angitt i`userData` i løpet av i/u-operasjon. Hvis programdomenet er fjernet, beholder kjøretiden minne festet til i/u-operasjonen er fullført.      > [!CAUTION] > Ved hjelp av UnsafePack metoden kan utilsiktet åpner et hull i sikkerheten. Kodetilgangssikkerhet baseres tillatelse kontrollen i tillatelsene for alle brukere på stakken. Metoden UnsafePack overføre ikke kall stakken. Skadelig kode kanskje utnytte dette for å unngå tillatelse database."
  syntax:
    content: public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback iocb, object userData);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "En <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> representanten som representerer metoden tilbakeringing aktiveres når den asynkrone i/u-operasjonen er fullført."
    - id: userData
      type: System.Object
      description: "Et objekt eller en matrise av objekter som representerer inndata eller utdata bufferen for operasjonen. Hvert objekt som representerer en buffer, for eksempel en bytematrise."
    return:
      type: System.Threading.NativeOverlapped*
      description: "En ubehandlet peker til en <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktur."
  overload: System.Threading.Overlapped.UnsafePack*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke den nødvendige tillatelsen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Gjeldende <xref href=&quot;System.Threading.Overlapped&quot;> </xref> er allerede pakket."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Threading.Overlapped.#ctor
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped()
  nameWithType: Overlapped.Overlapped()
  fullName: System.Threading.Overlapped.Overlapped()
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped(Int32,Int32,Int32,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Threading.Overlapped.AsyncResult
  parent: System.Threading.Overlapped
  isExternal: false
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
  fullName: System.Threading.Overlapped.AsyncResult
- uid: System.Threading.Overlapped.EventHandle
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandle
  nameWithType: Overlapped.EventHandle
  fullName: System.Threading.Overlapped.EventHandle
- uid: System.Threading.Overlapped.EventHandleIntPtr
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
  fullName: System.Threading.Overlapped.EventHandleIntPtr
- uid: System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Free(NativeOverlapped*)
  nameWithType: Overlapped.Free(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Free(NativeOverlapped*)
- uid: System.Threading.Overlapped.OffsetHigh
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
  fullName: System.Threading.Overlapped.OffsetHigh
- uid: System.Threading.Overlapped.OffsetLow
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
  fullName: System.Threading.Overlapped.OffsetLow
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack(IOCompletionCallback)
  nameWithType: Overlapped.Pack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback)
- uid: System.Threading.IOCompletionCallback
  parent: System.Threading
  isExternal: false
  name: IOCompletionCallback
  nameWithType: IOCompletionCallback
  fullName: System.Threading.IOCompletionCallback
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack(IOCompletionCallback,Object)
  nameWithType: Overlapped.Pack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback,Object)
- uid: System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Unpack(NativeOverlapped*)
  nameWithType: Overlapped.Unpack(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Unpack(NativeOverlapped*)
- uid: System.Threading.Overlapped
  parent: System.Threading
  isExternal: false
  name: Overlapped
  nameWithType: Overlapped
  fullName: System.Threading.Overlapped
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack(IOCompletionCallback)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback)
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack(IOCompletionCallback,Object)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback,Object)
- uid: System.Threading.Overlapped.#ctor*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped
  nameWithType: Overlapped.Overlapped
- uid: System.Threading.Overlapped.AsyncResult*
  parent: System.Threading.Overlapped
  isExternal: false
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
- uid: System.Threading.Overlapped.EventHandle*
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandle
  nameWithType: Overlapped.EventHandle
- uid: System.Threading.Overlapped.EventHandleIntPtr*
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
- uid: System.Threading.Overlapped.Free*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Free
  nameWithType: Overlapped.Free
- uid: System.Threading.Overlapped.OffsetHigh*
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
- uid: System.Threading.Overlapped.OffsetLow*
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
- uid: System.Threading.Overlapped.Pack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack
  nameWithType: Overlapped.Pack
- uid: System.Threading.Overlapped.Unpack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Unpack
  nameWithType: Overlapped.Unpack
- uid: System.Threading.Overlapped.UnsafePack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack
  nameWithType: Overlapped.UnsafePack
