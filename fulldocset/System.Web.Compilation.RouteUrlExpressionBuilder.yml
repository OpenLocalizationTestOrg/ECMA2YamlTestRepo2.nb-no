### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.RouteUrlExpressionBuilder
  id: RouteUrlExpressionBuilder
  children:
  - System.Web.Compilation.RouteUrlExpressionBuilder.#ctor
  - System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(System.Web.UI.Control,System.String)
  - System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate
  - System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)
  langs:
  - csharp
  name: RouteUrlExpressionBuilder
  nameWithType: RouteUrlExpressionBuilder
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder
  type: Class
  summary: "Oppretter en URL-adresse som tilsvarer parameterverdier for angitt URL-adresse."
  remarks: "Klassen RouteUrlExpressionBuilder gjør det mulig å angi egenskapen for en serverkontroll URL-adressen til en rute ved hjelp av en verdiliste URL-parameteren."
  example:
  - "The following example shows how to create markup that generates a hyperlink with a URL that is formatted for a route. The route is defined by using `http://www.contoso.com/search/{searchterm}` as the URL pattern.  \n  \n```  \n<asp:HyperLink ID=\"HyperLink1\" runat=\"server\"  \n               NavigateUrl=\"<%$ RouteUrl:searchterm=Bicycles %>\">  \n  Search for Bicycles  \n</asp:HyperLink>  \n```  \n  \n The URL generated for this hyperlink would be `http://www.contoso.com/search/Bicycles`.  \n  \n If the URL parameters provided to the `RouteUrl` expression are not sufficient to uniquely identify a route, you must include the route name. For example, if a Web application has two routes with `searchterm` as the sole URL parameter, the routes would have to be defined by using route names, and the hyperlink markup would resemble the following example:  \n  \n```  \n<asp:HyperLink ID=\"HyperLink1\" runat=\"server\"  \n               NavigateUrl=\"<%$ RouteUrl:searchterm=Bicycles,  \n               routename=BasicSearchRoute %>\">  \n  Search for Bicycles  \n</asp:HyperLink>  \n```"
  syntax:
    content: >-
      [System.Web.Compilation.ExpressionEditor("System.Web.UI.Design.RouteUrlExpressionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.Compilation.ExpressionPrefix("Routes")]

      public class RouteUrlExpressionBuilder : System.Web.Compilation.ExpressionBuilder
  inheritance:
  - System.Object
  - System.Web.Compilation.ExpressionBuilder
  implements: []
  inheritedMembers:
  - System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  platform:
  - net462
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.#ctor
  id: '#ctor'
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  langs:
  - csharp
  name: RouteUrlExpressionBuilder()
  nameWithType: RouteUrlExpressionBuilder.RouteUrlExpressionBuilder()
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.RouteUrlExpressionBuilder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.Compilation.RouteUrlExpressionBuilder&quot;> </xref> klasse."
  syntax:
    content: public RouteUrlExpressionBuilder ();
    parameters: []
  overload: System.Web.Compilation.RouteUrlExpressionBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  langs:
  - csharp
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: RouteUrlExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Oppretter en URL-adresse som svarer til parameterverdier for angitt URL-adresse og et ruten URL-format."
  remarks: "ASP.NET kaller opp denne metoden når det oppstår et uttrykk i følgende form i markup: `<%$ RouteUrl: urlparameter=value %>` denne metoden, riktig URL-adresse for de angitte rute nøkkelverdier for gjeldende <xref:System.Web.Routing.Route>objektet.</xref:System.Web.Routing.Route> Denne metoden overstyrer den <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>metoden.</xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> Det henter fra den `entry` parameteren en referanse til kontrollen uttrykket er bundet til det henter fra den `context` parameteren uttrykk som evalueres, og kaller den <xref:System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl%2A>metode for å generere URL-adressen.</xref:System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl%2A>"
  syntax:
    content: public override object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: target
      type: System.Object
      description: "Ikke brukes i denne implementeringen."
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "Uttrykket som er bundet til en egenskapen."
    - id: parsedData
      type: System.Object
      description: "Ikke brukes i denne implementeringen."
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Egenskaper for kontrollen eller siden."
    return:
      type: System.Object
      description: "URL-adressen som svarer til de angitte verdiene for URL-parameteren og den valgte ruten. Ruten er merket som samsvarer med rute mønstre for URL-adressen til den angitte listen over parametere. Hvis mer enn én rute samsvarer med en angitt liste over parametere, en rute navnet kan også angis som viser som rute til å velge."
  overload: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  langs:
  - csharp
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: RouteUrlExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Returnerer et code-uttrykk som brukes til å utføre egenskapen tilordningen i klassen som er generert siden."
  remarks: "Denne metoden kalles når CodeDOM er opprettet for sider eller kontrollen. <xref:System.CodeDom.CodeExpression>Objektet som returneres representerer code-uttrykket til å legge til egenskapen tildelingen i genererte siden klasse.</xref:System.CodeDom.CodeExpression>"
  syntax:
    content: public override System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "Uttrykket som er bundet til en egenskapen."
    - id: parsedData
      type: System.Object
      description: "Objektet som representerer analyseres data som returneres av <xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*>.</xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*>"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Egenskaper for kontrollen eller siden."
    return:
      type: System.CodeDom.CodeExpression
      description: "En <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> -forekomst som er brukt i egenskapen tilordningen."
  overload: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(System.Web.UI.Control,System.String)
  id: GetRouteUrl(System.Web.UI.Control,System.String)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  langs:
  - csharp
  name: GetRouteUrl(Control,String)
  nameWithType: RouteUrlExpressionBuilder.GetRouteUrl(Control,String)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Oppretter en URL-adresse som samsvarer med angitt rutenøkler for en rute URL-format."
  remarks: "Denne metoden, riktig verdi for URL-adressen ved å kalle den <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A>metoden for den <xref:System.Web.Routing.RouteCollection>objektet.</xref:System.Web.Routing.RouteCollection> </xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> Det henter den <xref:System.Web.Routing.RequestContext>objektet fra den `control` parameteren og analyserer rute navn og en rute fra den `expression` parameteren.</xref:System.Web.Routing.RequestContext>"
  syntax:
    content: public static string GetRouteUrl (System.Web.UI.Control control, string expression);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Kontrollen som uttrykket er bundet til."
    - id: expression
      type: System.String
      description: "Uttrykket som er angitt i markup."
    return:
      type: System.String
      description: "URL-adressen som tilsvarer rute URL-formatet for gjeldende <xref:System.Web.Routing.Route>objektet.</xref:System.Web.Routing.Route>"
  overload: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>control</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metoden ble kan ikke analysere uttrykket som er angitt i markup. Hvis du vil ha mer informasjon, kan du se <xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*>.</xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*>"
  platform:
  - net462
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate
  id: SupportsEvaluate
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  langs:
  - csharp
  name: SupportsEvaluate
  nameWithType: RouteUrlExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Henter en verdi som angir om et uttrykk kan evalueres på en side som ikke er kompilert."
  remarks: "Egenskapen SupportsEvaluate angir om den <xref:System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression%2A>metoden er implementert i klassen og kan returnere en verdi for uttrykket i en side som ikke er kompilert.</xref:System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression%2A> Den <xref:System.Web.Compilation.RouteUrlExpressionBuilder>klassen kan evaluere et uttrykk i en side som ikke er kompilert.</xref:System.Web.Compilation.RouteUrlExpressionBuilder> Derfor egenskapen SupportsEvaluate returnerer alltid `true`."
  syntax:
    content: public override bool SupportsEvaluate { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)
  id: TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  langs:
  - csharp
  name: TryParseRouteExpression(String,RouteValueDictionary,String)
  nameWithType: RouteUrlExpressionBuilder.TryParseRouteExpression(String,RouteValueDictionary,String)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(String,RouteValueDictionary,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Analyserer et uttrykk i en samling med rutenøkler og verdier, og eventuelt i et rutenavn."
  remarks: "Metoden TryParseRouteExpression fjerner innledende og avsluttende mellomrom fra uttrykket, og deler den i nøkkel/verdi-par med komma som skilletegn. Hvis nøkkelen ruten navngitt `RouteName` finnes, at verdien er sendt tilbake i `routeName` parameteren og ikke i `routeValues`. Ellers `null` returneres for `routeName`. Også fjernes innledende og avsluttende mellomrom fra individuelle nøkler og verdier.       Metoden TryParseRouteExpression returnerer `false` hvis uttrykket ikke består av minst én nøkkel/verdi-paret er formatet *nøkkelen*`=`*verdien*, og som bruker komma til å skille flere par."
  syntax:
    content: public static bool TryParseRouteExpression (string expression, System.Web.Routing.RouteValueDictionary routeValues, out string routeName);
    parameters:
    - id: expression
      type: System.String
      description: "Uttrykket som er angitt i markup."
    - id: routeValues
      type: System.Web.Routing.RouteValueDictionary
      description: "Samling av rutenøkler og de tilhørende verdiene."
    - id: routeName
      type: System.String
      description: "Låse denne metoden, inneholder en streng som representerer navnet på ruten, hvis `expression` inneholder en rute nøkkel navnet `RouteName`. Denne parameteren sendes ikke initialisert."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis analyse var vellykket. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: System.Web.Compilation.ExpressionBuilder
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.#ctor
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: RouteUrlExpressionBuilder()
  nameWithType: RouteUrlExpressionBuilder.RouteUrlExpressionBuilder()
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.RouteUrlExpressionBuilder()
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: RouteUrlExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.BoundPropertyEntry
  parent: System.Web.UI
  isExternal: false
  name: BoundPropertyEntry
  nameWithType: BoundPropertyEntry
  fullName: System.Web.UI.BoundPropertyEntry
- uid: System.Web.Compilation.ExpressionBuilderContext
  parent: System.Web.Compilation
  isExternal: false
  name: ExpressionBuilderContext
  nameWithType: ExpressionBuilderContext
  fullName: System.Web.Compilation.ExpressionBuilderContext
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: RouteUrlExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(System.Web.UI.Control,System.String)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: GetRouteUrl(Control,String)
  nameWithType: RouteUrlExpressionBuilder.GetRouteUrl(Control,String)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(Control,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: RouteUrlExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: TryParseRouteExpression(String,RouteValueDictionary,String)
  nameWithType: RouteUrlExpressionBuilder.TryParseRouteExpression(String,RouteValueDictionary,String)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(String,RouteValueDictionary,String)
- uid: System.Web.Routing.RouteValueDictionary
  parent: System.Web.Routing
  isExternal: true
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: System.Web.Routing.RouteValueDictionary
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.#ctor*
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: RouteUrlExpressionBuilder
  nameWithType: RouteUrlExpressionBuilder.RouteUrlExpressionBuilder
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression*
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: EvaluateExpression
  nameWithType: RouteUrlExpressionBuilder.EvaluateExpression
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression*
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: GetCodeExpression
  nameWithType: RouteUrlExpressionBuilder.GetCodeExpression
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl*
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: GetRouteUrl
  nameWithType: RouteUrlExpressionBuilder.GetRouteUrl
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate*
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: RouteUrlExpressionBuilder.SupportsEvaluate
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: TryParseRouteExpression
  nameWithType: RouteUrlExpressionBuilder.TryParseRouteExpression
