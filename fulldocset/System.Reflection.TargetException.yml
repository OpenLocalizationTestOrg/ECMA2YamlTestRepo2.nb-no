### YamlMime:ManagedReference
items:
- uid: System.Reflection.TargetException
  id: TargetException
  children:
  - System.Reflection.TargetException.#ctor
  - System.Reflection.TargetException.#ctor(System.String)
  - System.Reflection.TargetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Reflection.TargetException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: TargetException
  nameWithType: TargetException
  fullName: System.Reflection.TargetException
  type: Class
  summary: "Representerer unntak oppstod under er gjort forsøk på å aktivere et ugyldig mål."
  remarks: "En `TargetException` forårsakes når er gjort forsøk på å starte en ikke-statisk metode for et objekt som er null. Dette kan skje fordi oppkalleren ikke har tilgang til medlemmet, eller fordi målet ikke definere medlemmet og så videre.      > [!NOTE] > Dette unntaket er ikke inkludert i den [.NET for Windows Store-apper](http://go.microsoft.com/fwlink/?LinkID=247912) eller, men det er et av noen medlemmer som er. Hvis du vil innhentingsunntak i dette tilfellet skrive en `catch` -setningen for <xref:System.Exception>i stedet.</xref:System.Exception>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class TargetException : ApplicationException
  inheritance:
  - System.Exception
  - System.ApplicationException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Reflection.TargetException.#ctor
  id: '#ctor'
  parent: System.Reflection.TargetException
  langs:
  - csharp
  name: TargetException()
  nameWithType: TargetException.TargetException()
  fullName: System.Reflection.TargetException.TargetException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Reflection.TargetException&quot;> </xref> klassen med meldingen er tom og hovedårsaken til unntaket."
  remarks: "Den `InnerException` er satt til `null` og HRESULT-feilkoden settes til COR_E_TARGET.       `TargetException`arver fra <xref:System.Exception>.</xref:System.Exception> Denne konstruktøren angir egenskapene for den `Exception` objekt som vises i følgende tabell.      | Egenskapen | Verdien |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| `null`|   | <xref:System.Exception.Message%2A>| En tom streng (&quot;&quot;). |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public TargetException ();
    parameters: []
  overload: System.Reflection.TargetException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.TargetException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Reflection.TargetException
  langs:
  - csharp
  name: TargetException(String)
  nameWithType: TargetException.TargetException(String)
  fullName: System.Reflection.TargetException.TargetException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Reflection.TargetException&quot;> </xref> klassen med den angitte meldingen- og roten føre til at unntak."
  remarks: "`TargetException`arver fra <xref:System.Exception>.</xref:System.Exception> Denne konstruktøren angir egenskapene for den `Exception` objekt som vises i følgende tabell.      | Egenskapen | Verdien |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| `null`|   | <xref:System.Exception.Message%2A>| Strengen for meldingen. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public TargetException (string message);
    parameters:
    - id: message
      type: System.String
      description: "En <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> som beskriver hvorfor unntaket oppstod årsaken."
  overload: System.Reflection.TargetException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.TargetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Reflection.TargetException
  langs:
  - csharp
  name: TargetException(SerializationInfo,StreamingContext)
  nameWithType: TargetException.TargetException(SerializationInfo,StreamingContext)
  fullName: System.Reflection.TargetException.TargetException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Reflection.TargetException&quot;> </xref> klassen med den angitte serialisering og konteksten."
  syntax:
    content: protected TargetException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Dataene for serialisering eller deserialisering av objektet."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Kilden og målet for objektet."
  overload: System.Reflection.TargetException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.TargetException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Reflection.TargetException
  langs:
  - csharp
  name: TargetException(String,Exception)
  nameWithType: TargetException.TargetException(String,Exception)
  fullName: System.Reflection.TargetException.TargetException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Reflection.TargetException&quot;> </xref> klassen med en angitt feilmelding og en referanse til det interne unntaket er årsaken til dette unntaket."
  remarks: "Et unntak som er registrert som en direkte resultatet av et tidligere unntak må inkludere en referanse til det tidligere unntaket i den <xref:System.Exception.InnerException%2A>egenskapen.</xref:System.Exception.InnerException%2A> Den <xref:System.Exception.InnerException%2A>returnerer samme verdi som er sendt til konstruktøren, eller `null` hvis den <xref:System.Exception.InnerException%2A>egenskapen leverer ikke internt unntak verdien til konstruktøren.</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       Tabellen nedenfor viser første egenskapsverdiene for en forekomst av <xref:System.Reflection.TargetException>.</xref:System.Reflection.TargetException>      | Egenskapen | Verdien |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| Referansen for det indre unntaket. |   | <xref:System.Exception.Message%2A>| Feil melding strengen. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public TargetException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: "Feilmelding som forklarer hvorfor unntaket."
    - id: inner
      type: System.Exception
      description: "Unntaket er årsaken til den gjeldende unntaket. Hvis den `inner` parameteren er ikke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, oppstår det gjeldende unntaket i en <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> blokken som behandler det interne unntaket."
  overload: System.Reflection.TargetException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ApplicationException
  isExternal: false
  name: System.ApplicationException
- uid: System.Reflection.TargetException.#ctor
  parent: System.Reflection.TargetException
  isExternal: false
  name: TargetException()
  nameWithType: TargetException.TargetException()
  fullName: System.Reflection.TargetException.TargetException()
- uid: System.Reflection.TargetException.#ctor(System.String)
  parent: System.Reflection.TargetException
  isExternal: false
  name: TargetException(String)
  nameWithType: TargetException.TargetException(String)
  fullName: System.Reflection.TargetException.TargetException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.TargetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Reflection.TargetException
  isExternal: false
  name: TargetException(SerializationInfo,StreamingContext)
  nameWithType: TargetException.TargetException(SerializationInfo,StreamingContext)
  fullName: System.Reflection.TargetException.TargetException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Reflection.TargetException.#ctor(System.String,System.Exception)
  parent: System.Reflection.TargetException
  isExternal: false
  name: TargetException(String,Exception)
  nameWithType: TargetException.TargetException(String,Exception)
  fullName: System.Reflection.TargetException.TargetException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Reflection.TargetException.#ctor*
  parent: System.Reflection.TargetException
  isExternal: false
  name: TargetException
  nameWithType: TargetException.TargetException
