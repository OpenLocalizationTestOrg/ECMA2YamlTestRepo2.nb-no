### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  id: SecurityTokenResolver
  children:
  - System.IdentityModel.Selectors.SecurityTokenResolver.#ctor
  - System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)
  - System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  langs:
  - csharp
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
  type: Class
  summary: "Representerer en klasse med verktøyet som kan hente sikkerhetstokener eller nøkler når du har en nøkkel-ID eller nøkkel-ID-setningsdel."
  remarks: "Bruk SecurityTokenResolver klassen for å hente en nøkkel eller sikkerhet token når du har en nøkkel-ID eller nøkkel-ID-setningsdel. Den <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>og <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>metoder hente et token fordi at det er en nøkkel-ID eller nøkkel-ID-setningsdel.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> </xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> Den <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A>og <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A>hente en nøkkel fordi at det er en nøkkel-ID-setningsdel.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> </xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> Metoder med en `Try` prefiks retur `false` når hentingen mislykkes, mens metodene uten en `Try` prefikset Iverksett et unntak."
  syntax:
    content: 'public abstract class SecurityTokenResolver : System.IdentityModel.Configuration.ICustomIdentityConfiguration'
  inheritance:
  - System.Object
  implements:
  - System.IdentityModel.Configuration.ICustomIdentityConfiguration
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: SecurityTokenResolver()
  nameWithType: SecurityTokenResolver.SecurityTokenResolver()
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.SecurityTokenResolver()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> klasse."
  syntax:
    content: protected SecurityTokenResolver ();
    parameters: []
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)
  id: CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>,Boolean)
  nameWithType: SecurityTokenResolver.CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>,Boolean)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>,Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Oppretter en sikkerhet token Standardløsningsprogrammet for de angitte sikkerhetstokenene."
  remarks: "Sikkerhet token Løsningsprogrammet for som er returnert fra denne metoden bruker den <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A>og <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A>metoder for de angitte sikkerhetstokenene til å løse key identifikatorer og nøkkel-ID-setningsdeler.</xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> </xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A>"
  syntax:
    content: public static System.IdentityModel.Selectors.SecurityTokenResolver CreateDefaultSecurityTokenResolver (System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityToken> tokens, bool canMatchLocalId);
    parameters:
    - id: tokens
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken}
      description: "En &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; av typen <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> som inneholder settet med sikkerhetstokener som denne sikkerhet token artikkelløseren kan løse key identifikatorer og nøkkel-ID-setningsdeler til."
    - id: canMatchLocalId
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>å løse den <xref uid=&quot;langword_csharp_&lt;SecurityTokenReference&gt;&quot; name=&quot;&lt;SecurityTokenReference&gt;&quot; href=&quot;&quot;> </xref> for ID-setningsdeler som refererer til en sikkerhetsnøkkel som finnes et annet sted i SOAP-meldingen; ellers, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "En <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> som løser key identifikatorer og setningsdeler som samsvarer med sikkerhetstokener som er angitt i den <code> tokens </code> parameteren."
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)
  id: LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: SecurityTokenResolver.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(XmlNodeList)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Når overstyrt i en avledet klasse, laster du Egendefinert konfigurasjon fra XML."
  remarks: "Som standard, oppstår det et <xref:System.NotImplementedException>.</xref:System.NotImplementedException> Du kan overstyre denne metoden for å gi funksjonalitet i en avledet klasse."
  syntax:
    content: public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);
    parameters:
    - id: nodelist
      type: System.Xml.XmlNodeList
      description: "Egendefinert konfigurasjon-elementer."
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: ResolveSecurityKey(SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenResolver.ResolveSecurityKey(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Henter nøkkelen for det refereres til i angitt nøkkel-ID-setningsdelen."
  remarks: "Den <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A>og ResolveSecurityKey metoder er forskjellige på hva som skjer når setningsdelen nøkkel-ID kan ikke løses til en nøkkel.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> Den <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A>metoden returnerer `false`, mens metoden ResolveSecurityKey oppstår det et unntak.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKey ResolveSecurityKey (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "En <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> til å hente nøkkelen for."
    return:
      type: System.IdentityModel.Tokens.SecurityKey
      description: "En <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> som nøkkelen for refereres til i den angitte nøkkel-ID-setningsdelen."
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Kan ikke hente en nøkkel for setningsdelen nøkkel-ID som er angitt i den <code> keyIdentifierClause </code> parameteren."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: ResolveToken(SecurityKeyIdentifier)
  nameWithType: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(SecurityKeyIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Henter en sikkerhetskode som tilsvarer en sikkerhet nøkkel-ID-setningsdeler i den angitte nøkkelen identifikatoren."
  remarks: "Den <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>og ResolveToken metoder er forskjellige på hva som skjer når nøkkel-ID kan ikke løses til en sikkerhetskode.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> Den <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>metoden returnerer `false`, mens metoden ResolveToken oppstår det et unntak.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken ResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);
    parameters:
    - id: keyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "Den <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> til å opprette en sikkerhetskode for."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> som representerer den angitte nøkkelen identifikatoren."
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifier</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Kan ikke opprette en sikkerhetskode for den angitte nøkkelen identifikatoren."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: ResolveToken(SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Henter sikkerhetstokenet som samsvarer med angitt nøkkel-ID-setningsdelen."
  remarks: "Den <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>og ResolveToken metoder er forskjellige på hva som skjer når setningsdelen nøkkel-ID kan ikke løses til en sikkerhetskode.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> Den <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>metoden returnerer `false`, mens metoden ResolveToken oppstår det et unntak.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken ResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "Den <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> til å opprette en sikkerhetskode for."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> som representerer angitt nøkkel-ID-setningsdelen."
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  id: TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: TryResolveSecurityKey(SecurityKeyIdentifierClause,SecurityKey)
  nameWithType: SecurityTokenResolver.TryResolveSecurityKey(SecurityKeyIdentifierClause,SecurityKey)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(SecurityKeyIdentifierClause,SecurityKey)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Forsøk på å hente nøkkelen for det refereres til i angitt nøkkel-ID-setningsdelen."
  remarks: "TryResolveSecurityKey og <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A>metoder er forskjellige på hva som skjer når setningsdelen nøkkel-ID kan ikke løses til en nøkkel.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> Metoden TryResolveSecurityKey returnerer `false`, mens den <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A>metoden oppstår det et unntak.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A>"
  syntax:
    content: public bool TryResolveSecurityKey (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "En <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> til å hente nøkkelen for."
    - id: key
      type: System.IdentityModel.Tokens.SecurityKey
      description: "Låse denne metoden, inneholder en <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> som inneholder nøkkelen for det refereres til i angitt nøkkel-ID-setningsdelen. Denne parameteren sendes ikke initialisert."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Når en nøkkel kan derfor hentes for angitt nøkkel-ID-setning. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  id: TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  nameWithType: SecurityTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Forsøk på å hente nøkkelen for det refereres til i angitt nøkkel-ID-setningsdelen."
  remarks: "Metoden TryResolveSecurityKeyCore kalles av den <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A>og <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A>metoder.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> </xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A>"
  syntax:
    content: protected abstract bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "En <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> til å hente nøkkelen for."
    - id: key
      type: System.IdentityModel.Tokens.SecurityKey
      description: "Låse denne metoden, inneholder en <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> som inneholder nøkkelen for det refereres til i angitt nøkkel-ID-setningsdelen. Denne parameteren sendes ikke initialisert."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Når en nøkkel kan derfor hentes for angitt nøkkel-ID-setning. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: TryResolveToken(SecurityKeyIdentifier,SecurityToken)
  nameWithType: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifier,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Forsøk på å hente sikkerhetstokenet som samsvarer med en nøkkel-ID-setningsdeler i den angitte nøkkelen identifikatoren."
  remarks: "TryResolveToken og <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>metoder er forskjellige på hva som skjer når nøkkel-ID kan ikke løses til en sikkerhetskode.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> Metoden TryResolveToken returnerer `false`, mens den <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>metoden oppstår det et unntak.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>"
  syntax:
    content: public bool TryResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: keyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "Den <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> til å opprette en sikkerhetskode for."
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Låse denne metoden, inneholder en <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> som representerer den angitte nøkkelen identifikatoren. Denne parameteren sendes ikke initialisert."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Når en sikkerhetskode kan derfor hentes for den angitte nøkkelen identifikatoren; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifier</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: TryResolveToken(SecurityKeyIdentifierClause,SecurityToken)
  nameWithType: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifierClause,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifierClause,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Forsøk på å hente sikkerhetstokenet som samsvarer med angitt nøkkel-ID-setningsdelen."
  remarks: "TryResolveToken og <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>metoder er forskjellige på hva som skjer når setningsdelen nøkkel-ID kan ikke løses til en sikkerhetskode.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> Metoden TryResolveToken returnerer `false`, mens den <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>metoden oppstår det et unntak.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>"
  syntax:
    content: public bool TryResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "Den <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> til å opprette en sikkerhetskode for."
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Låse denne metoden, inneholder en <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> som representerer angitt nøkkel-ID-setningsdelen. Denne parameteren sendes ikke initialisert."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Når en sikkerhetskode kan derfor hentes for angitt nøkkel-ID-setning. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  nameWithType: SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Når overstyrt i en avledet klasse, kan du prøver å hente sikkerhetstokenet som samsvarer med minst én nøkkel-ID-setningsdeler i den angitte nøkkelen identifikatoren."
  remarks: "Metoden TryResolveTokenCore kalles av den <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>og <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>metoder.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> </xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>"
  syntax:
    content: protected abstract bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: keyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "Den <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> til å opprette en sikkerhetskode for."
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Låse denne metoden, inneholder en <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> som representerer den angitte nøkkelen identifikatoren. Denne parameteren sendes ikke initialisert."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Når en sikkerhetskode kan derfor hentes for den angitte nøkkelen identifikatoren; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  nameWithType: SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Når overstyrt i en avledet klasse, kan du prøve å løse sikkerhetstokenet som samsvarer med angitt nøkkel-ID-setningsdelen."
  remarks: "Metoden TryResolveTokenCore kalles av den <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>og <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>metoder.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> </xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>"
  syntax:
    content: protected abstract bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "Den <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> til å opprette en sikkerhetskode for."
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Låse denne metoden, inneholder en <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> som representerer angitt nøkkel-ID-setningsdelen. Denne parameteren sendes ikke initialisert."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Når en sikkerhetskode kan derfor hentes for angitt nøkkel-ID-setning. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.#ctor
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: SecurityTokenResolver()
  nameWithType: SecurityTokenResolver.SecurityTokenResolver()
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.SecurityTokenResolver()
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>,Boolean)
  nameWithType: SecurityTokenResolver.CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>,Boolean)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>,Boolean)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<SecurityToken>
  nameWithType: ReadOnlyCollection<SecurityToken>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityToken>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Tokens.SecurityToken>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: SecurityToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: SecurityTokenResolver.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(XmlNodeList)
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: ResolveSecurityKey(SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenResolver.ResolveSecurityKey(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: ResolveToken(SecurityKeyIdentifier)
  nameWithType: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: ResolveToken(SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveSecurityKey(SecurityKeyIdentifierClause,SecurityKey)
  nameWithType: SecurityTokenResolver.TryResolveSecurityKey(SecurityKeyIdentifierClause,SecurityKey)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(SecurityKeyIdentifierClause,SecurityKey)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  nameWithType: SecurityTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveToken(SecurityKeyIdentifier,SecurityToken)
  nameWithType: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifier,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveToken(SecurityKeyIdentifierClause,SecurityToken)
  nameWithType: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifierClause,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifierClause,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  nameWithType: SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  nameWithType: SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.#ctor*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver.SecurityTokenResolver
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: CreateDefaultSecurityTokenResolver
  nameWithType: SecurityTokenResolver.CreateDefaultSecurityTokenResolver
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: LoadCustomConfiguration
  nameWithType: SecurityTokenResolver.LoadCustomConfiguration
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: ResolveSecurityKey
  nameWithType: SecurityTokenResolver.ResolveSecurityKey
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: ResolveToken
  nameWithType: SecurityTokenResolver.ResolveToken
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveSecurityKey
  nameWithType: SecurityTokenResolver.TryResolveSecurityKey
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveSecurityKeyCore
  nameWithType: SecurityTokenResolver.TryResolveSecurityKeyCore
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveToken
  nameWithType: SecurityTokenResolver.TryResolveToken
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveTokenCore
  nameWithType: SecurityTokenResolver.TryResolveTokenCore
