### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint
  id: ConnectionPoint
  children:
  - System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections
  - System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType
  - System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID
  - System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName
  - System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(System.Web.UI.Control)
  - System.Web.UI.WebControls.WebParts.ConnectionPoint.ID
  - System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType
  langs:
  - csharp
  name: ConnectionPoint
  nameWithType: ConnectionPoint
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint
  type: Class
  summary: "Fungerer som basisklasse for definerer tilkobling peke objekter som gir forbrukeren kontrollen leverandøren kontrollen i en webdeler tilkobling til å dele data."
  remarks: "Hver webdeler tilkobling består av to serverkontroller deling av data: én kontroll er forbrukeren, den andre er leverandøren. Hvis du vil vite mer om de viktigste komponentene for tilkobling webdeler og tilkoblingsobjektet seg selv, se den <xref:System.Web.UI.WebControls.WebParts.WebPartConnection>klassen oversikt.</xref:System.Web.UI.WebControls.WebParts.WebPartConnection> Hver webdeler-tilkobling krever tilkobling punkt. Leverandøren og forbrukeren kontrollen må hver ha minst én definert ConnectionPoint objektet (dem kan eventuelt har flere tilkoblingen punkter) som inneholder detaljer om hvordan en kontroll kan koble til en annen kontroll og datatypen kan dele. Leverandøren har sin egen objekttypen tilkoblingen punkt (avledet fra basisklassen ConnectionPoint), i en tilkobling til faktiske en <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>forekomsten, og forbrukeren har sin egen, en <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>forekomsten.</xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> </xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>       Hvis du vil opprette et leverandøren connection point, utviklere må legge til en tilbakeringing metode leverandøren som returnerer en implementerte grensesnittet forekomst til en forbruker. De må merke tilbakeringing-metoden i kildekode med en `ConnectionProvider` code-attributtet (se den <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>klassen).</xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> På samme måte for å opprette et forbrukeren connection point, utviklere må legge til en metode forbrukeren som mottar en grensesnittet-forekomst, og de må merke denne metoden med en `ConnectionConsumer` attributtet (se den <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>klassen).</xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>       Når utviklere oppretter tilkoblinger på en side, kan de kan opprettes som statiske eller dynamiske tilkoblinger. Statiske tilkoblinger er deklarert i koden for en webside. Når en statisk tilkobling er deklarert, utviklere kan angi som tilkoblingen peker brukes for forbrukeren og leverandør ved å tilordne verdier til den `ProviderConnectionPointID` og `ConsumerConnectionPointID` attributter i den `<asp:webpartconnection>` objektkode. Denne fremgangsmåten er spesielt nyttig hvis det finnes flere tilkoblingen punkt som er definert i de forbruker og leverandøren kontrollene fordi det gjør det mulig for statiske tilkoblingen til å identifisere hvilke tilkoblingen peker til for tilkoblingen.       Dynamiske tilkoblinger opprettes programmatisk, av en utvikler-kode eller av brukere via brukergrensesnittet (UI) angitt av den <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>kontroll.</xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> Hvis du vil opprette en tilkobling i koden, utviklere må få en forekomst av en <xref:System.Web.UI.WebControls.WebParts.WebPartConnection>objektet ved å kalle den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>-metoden på den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartConnection> Før de kan kalle denne metoden, må utviklere referanser til forbrukeren og leverandøren serverkontroller og de respektive connection point-objektene. For å få referanser til tilkoblingen punktene for en leverandør og en Forbrukerkontroll, utviklere først kalle den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>og <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>metoder for den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> Disse metodene returnerer riktig tilkobling punkt objekter, som i sin tur kan sendes til metode for å opprette en tilkobling.       Når leverandørens og forbrukeren tilkoblingen punkt objekter begge arbeide med samme type grensesnittet, de er kompatible og kan utgjøre en direkte tilkobling for å dele data. Hvis de ikke fungerer med samme grensesnittype en <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>objektet må brukes til å oversette grensesnittet forekomsten av leverandøren til en type som brukeren kan arbeide med.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>       Den abstrakte klassen ConnectionPoint gir base detaljene for tilkoblingen punkt som er felles for både forbrukeren og leverandøren. Flere egenskaper inneholder disse detaljene. Den <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>egenskapen angir om et connection point kan delta i mer enn én tilkobling om gangen.</xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> Som standard leverandøren tilkoblingen punkt kan delta i flere tilkoblinger, og forbrukeren tilkoblingen punkt kan. Den <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>egenskapen angir hvilken type serverkontroll som er knyttet til et connection point.</xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> Merk at ikke bare <xref:System.Web.UI.WebControls.WebParts.WebPart>Kontroller kan utgjøre tilkoblinger; noen serverkontroll om en ASP.NET-kontroll, en egendefinert kontroll eller en brukerkontroll kan aktiveres for å delta i tilkoblinger Hvis satt i en <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>sone.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> Den <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>egenskapen gir et egendefinert navn for tilkoblingspunktet som kan vises i Brukergrensesnittet for å hjelpe brukere som oppretter tilkoblinger.</xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> Den <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A>egenskapen fungerer som en streng identifikator for punkt tilkoblingsobjektet seg selv.</xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> Den <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>egenskapen angir hvilken type grensesnittet forekomsten tilkoblingspunktet forstår.</xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> Om et gitt connection point gir eller bruker en forekomst av dette grensesnittet avgjøres av om det er en <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>eller <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>objektet.</xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> </xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>       Klassen ConnectionPoint har én måte. Den <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A>metoden returnerer en boolsk verdi som angir om et connection point er for øyeblikket kunne delta i tilkoblinger.</xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A>       Klassen ConnectionPoint også har ett felles felt, <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>.</xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> Dette feltet inneholder en verdi som brukes til å identifisere tilkoblingspunktet standard i en tilkobling.      > [!NOTE] > Attributtene for å angi tilkoblingspunktet metoder har bare én obligatoriske parameteren `displayName`, slik det er mulig å opprette standard tilkobling punkt attributtet uten å angi en ID. I slike tilfeller det <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>feltet inneholder en base verdien som skal brukes.</xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>"
  example:
  - "The following code example demonstrates the creation of a Web Parts connection that includes the required ConnectionPoint objects. Because the ConnectionPoint class is an abstract base class, instances of its child classes--<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>--are the actual objects used to form a connection.  \n  \n The example has four parts:  \n  \n-   A user control that enables you to change the Web Parts display mode on a page.  \n  \n-   Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.  \n  \n-   A Web page to host all the controls and run the code example.  \n  \n-   An explanation of how to run the example page.  \n  \n The first part of this code example is the user control that enables users to change display modes on a Web page. Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page. For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_ConnectionPoint_Overview#6](~/add/codesnippet/csharp/t-system.web.ui.webcontr_73_1.ascx)]\n [!code-vb[WebParts_ConnectionPoint_Overview#6](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_73_1.ascx)]  \n  \n The second part of the code example is the source code for the interface and controls. The source file contains a simple interface named `IZipCode`. There is also a <xref:System.Web.UI.WebControls.WebParts.WebPart> class named `ZipCodeWebPart` that implements the interface and acts as the provider control. Its `ProvideIZipCode` method is the callback method that implements the interface's only member. The method simply returns an instance of the interface. Note that the method is marked with a `ConnectionProvider` attribute in its metadata. This is the mechanism for identifying the method as the callback method for the provider's connection point. The other <xref:System.Web.UI.WebControls.WebParts.WebPart> class is named `WeatherWebPart`, and it acts as the consumer for the connection. This class has a method named `GetZipCode` that gets an instance of the `IZipCode` interface from the provider control. Note that this method is marked as the consumer's connection point method with a `ConnectionConsumer` attribute in its metadata. This is the mechanism for identifying the connection point method in the consumer control.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_ConnectionPoint_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_73_2.vb)]\n [!code-cs[WebParts_ConnectionPoint_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_73_2.cs)]  \n  \n The third part of the code example is the Web page. Near the top are `Register` directives to register the custom controls that form the connection, and the user control that enables users to change display modes on the page. The connection itself is created declaratively within the `<staticconnections>` element on the page. You can also create the connection programmatically; the code for doing that is contained in the `Button1_Click` method. Whether the connection is created declaratively or programmatically, connection points must always be specified for both the provider and the consumer. The `Button2_Click` method accesses the ConnectionPoint objects for both the provider and the consumer, and writes some of their property values to a label in the page.  \n  \n [!code-vb[WebParts_ConnectionPoint_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_73_3.aspx)]\n [!code-cs[WebParts_ConnectionPoint_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_73_3.aspx)]  \n  \n After you load the page in a browser, click the **Connection Point Details** button. Information about the provider and consumer connection points established in the declarative connection appears. Next, use the **Display Mode** drop-down control to switch the page into connect mode. On the verbs menu of one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls (represented by a downward arrow in the title bar), click the connect verb. The connection UI appears, created automatically by the `<asp:connectionszone>` control declared in the page. Click the **Disconnect** button to terminate the existing connection. Use the **Display Mode** control to return the page to browse mode. Next, click the **Dynamic Connection** button to create a connection programmatically. Click the **Connection Point Details** button again, to indicate details about the two connection point objects."
  syntax:
    content: public abstract class ConnectionPoint
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections
  id: AllowsMultipleConnections
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  langs:
  - csharp
  name: AllowsMultipleConnections
  nameWithType: ConnectionPoint.AllowsMultipleConnections
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Henter en verdi som angir om et connection point, støtter flere samtidige tilkoblinger."
  remarks: "<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>objekter har sine AllowsMultipleConnections egenskapen angitt til `true` (av den <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>klassen) fordi webdeler kontrollen som er angitt som standard aktiverer leverandøren tilkoblingen peker til skjemaet tilkoblinger til flere forbrukere.</xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute></xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>       I motsetning <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>objekter har sine AllowsMultipleConnections egenskapsverdien som er satt til `false` (av den <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>klassen) fordi webdeler kontrollen som er angitt som standard tillater forbrukeren tilkoblingen peker til å opprette en tilkobling til bare én leverandør om gangen.</xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> </xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>       Du kan endre standard virkemåte angående flere tilkoblinger ved å tilordne ulike verdier til den <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A?displayProperty=fullName>egenskapen (for leverandører) eller <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A?displayProperty=fullName>egenskapen (for forbrukere) på to <xref:System.Attribute>klasser som brukes for attributter for tilkoblingen.</xref:System.Attribute> </xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A?displayProperty=fullName> Hvis du aktiverer forbrukeren tilkoblingen peker til å koble til flere leverandører samtidig, må koden håndtere resulterende synkroniseringsproblemer."
  example:
  - "The following code example demonstrates the use of the AllowsMultipleConnections property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects. This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.  \n  \n The code in the `Button2_Click` method of the Web page accesses the AllowsMultipleConnections property on each of the connection point objects and writes each value to a label. Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.  \n  \n [!code-vb[WebParts_ConnectionPoint_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1358_1.aspx)]\n [!code-cs[WebParts_ConnectionPoint_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1358_1.aspx)]"
  syntax:
    content: public bool AllowsMultipleConnections { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis tilkoblingspunktet støtter flere tilkoblinger. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType
  id: ControlType
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  langs:
  - csharp
  name: ControlType
  nameWithType: ConnectionPoint.ControlType
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Henter den <xref:System.Type>serverkontroll som er tilknyttet et connection point.</xref:System.Type>"
  remarks: "Verdien for egenskapen ControlType er ofte den <xref:System.Web.UI.WebControls.WebParts.WebPart>type.</xref:System.Web.UI.WebControls.WebParts.WebPart> Imidlertid fordi alle typer kontroll eller Serverkontroll kan kobles sammen hvis den er riktig aktivert og er plassert i en <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>sone, egenskapen ControlType kan returnere ett av disse andre server kontrolltypene samt.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>       Når serveren styrer som ikke er <xref:System.Web.UI.WebControls.WebParts.WebPart>Kontroller er plassert i en <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>sone, de står i en <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>objektet ved kjøretid slik at de kan fungere som <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrollerer og delta i tilkoblinger.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> Men når slike kontroller er involvert i tilkoblinger, returnerer ikke ControlType egenskapsverdien den <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>typen; den returnerer typen for den <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>objektets underordnede kontrollen, som er kontrolltypen av serveren eller brukeren.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart>"
  example:
  - "The following code example demonstrates the use of the ControlType property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects. This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.  \n  \n The code in the `Button2_Click` method of the Web page accesses the ControlType property on each of the connection point objects and writes each value to a label. Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.  \n  \n [!code-vb[WebParts_ConnectionPoint_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_622_1.aspx)]\n [!code-cs[WebParts_ConnectionPoint_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_622_1.aspx)]"
  syntax:
    content: public Type ControlType { get; }
    return:
      type: System.Type
      description: "En <xref:System.Type>som representerer kontrolltypen.</xref:System.Type>"
  overload: System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID
  id: DefaultID
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  langs:
  - csharp
  name: DefaultID
  nameWithType: ConnectionPoint.DefaultID
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Representerer en streng som brukes til å identifisere tilkoblingspunktet standard i en samling av tilkoblingen punkt som er knyttet til en serverkontroll."
  remarks: "Når et connection point er opprettet, er det mulig å angi en ID for tilkoblingspunktet på kildekode forbrukeren eller provider <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrollere, ved hjelp av en <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>eller <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>attributtet.</xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> </xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> </xref:System.Web.UI.WebControls.WebParts.WebPart> Når et attributt legges imidlertid til å koble i kildekode den `ID` parameteren er valgfrie. Hvis IDen ikke er angitt i attributtet, inneholder DefaultID-feltet en streng som brukes til å identifisere tilkoblingspunktet for standard.       Hvis flere tilkoblingen punkt er definert i en forbrukeren eller leverandøren, er det er nødvendig for å angi en ID for hver tilkobling punkt, slik at tilkoblingen punktene kan identifiseres når du oppretter tilkoblinger."
  syntax:
    content: public static readonly string DefaultID;
    return:
      type: System.String
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName
  id: DisplayName
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  langs:
  - csharp
  name: DisplayName
  nameWithType: ConnectionPoint.DisplayName
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Henter en streng som fungerer som et egendefinert visningsnavn til å representere en connection point i brukergrensesnittet (UI)."
  remarks: "Hvis du vil opprette en webdeler-tilkobling, må leverandør og forbrukeren kontrollene for tilkoblingen hver angi minst én tilkobling, velger du en metoden som de kan kommunisere og dele dataene. For å identifisere metodene connection point, angir utvikler et attributt av de valgte. I leverandøren, en `ConnectionProvider` attributtet er angitt i den valgte tilbakeringing-metoden, og i forbrukeren, en `ConnectionConsumer` attributtet er angitt for metoden som mottar en forekomst av et grensesnitt som inneholder data fra leverandøren. Begge disse attributtene i én parameter kreves alltid, uansett hvilken overbelastning er deklarert til å opprette attributtet er den `displayName` parameteren. Utvikleren må tilordne en streng som skal brukes som et egendefinert navn for tilkoblingspunktet, og denne strengen blir verdien for egenskapen visningsnavn.       Egenskapsverdien visningsnavnet vises i Brukergrensesnittet for en webside når brukere opprette tilkoblinger. For eksempel når den <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>kontrollen er lagt til siden den oppretter en Brukergrensesnittet for brukere å opprette tilkoblinger mellom kontroller.</xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> Når en bruker bytter en side i koble visningsmodus og klikker et koble verb på en <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrollere tilkoblingen Brukergrensesnittet vises.</xref:System.Web.UI.WebControls.WebParts.WebPart> Hver kontroll kan delta i en tilkobling er oppført i Brukergrensesnittet, og ved siden av hver kontroll er en kontroll i rullegardinlisten som viser de egendefinerte navnene punktene sine tilgjengelig tilkobling. Brukerne må velge minst én tilkoblingspunktet for å opprette en tilkobling. Verdiene som vises i listen over tilkoblingen punkt hentes fra egenskapen visningsnavn. Hvis utviklere bygge et egendefinert brukergrensesnitt for oppretting av tilkoblinger, kan de bruke egenskapen visningsnavnet på samme måte å angi et egendefinert navn som representerer et connection point."
  syntax:
    content: public string DisplayName { get; }
    return:
      type: System.String
      description: "En streng som inneholder et egendefinert navn for en <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> objektet."
  overload: System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(System.Web.UI.Control)
  id: GetEnabled(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  langs:
  - csharp
  name: GetEnabled(Control)
  nameWithType: ConnectionPoint.GetEnabled(Control)
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Returnerer en verdi som angir om et connection point kan kobles sammen."
  remarks: "Metoden GetEnabled i grunntallet <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>klasse alltid returnerer `true`, men avledede klasser kan overstyre metoden til å returnere `true` eller `false` på ulike tidspunkter basert på statusen for `control`.</xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>"
  example:
  - "The following code example demonstrates the use of the GetEnabled method on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects. This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.  \n  \n The code in the `Button2_Click` method of the Web page accesses the GetEnabled method on each of the connection point objects and writes each value to a label. Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.  \n  \n [!code-vb[WebParts_ConnectionPoint_Overview#1](~/add/codesnippet/visualbasic/a42b3e8f-70fc-455c-a13a-_1.aspx)]\n [!code-cs[WebParts_ConnectionPoint_Overview#1](~/add/codesnippet/csharp/a42b3e8f-70fc-455c-a13a-_1.aspx)]"
  syntax:
    content: public virtual bool GetEnabled (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> eller andre serverkontroll som er knyttet til et connection point."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis kontrollen kan opprette et connection point for å delta i en tilkobling; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.ID
  id: ID
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  langs:
  - csharp
  name: ID
  nameWithType: ConnectionPoint.ID
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.ID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Henter en streng som inneholder identifikatoren for et connection point."
  remarks: "Når en utvikler deklarerer en <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>eller <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>attributtet i en metode i kildekoden for en kontroll, slik at metoden kan brukes som et connection point er ikke nødvendig for å deklarere den `ID` parameteren for attributtet connection point.</xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> </xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> Det obligatoriske attributtet er den `displayName` parameteren. Standard-ID er tilordnet til koblingen med verdien fra det <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>felt.</xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>       Hvis det er bare én måte i en kontroll som brukes som et connection point, er det ikke nødvendig å angi en ID for tilkoblingspunktet. Hvis det finnes flere metoder som er angitt som tilkoblingen punkt, må du angi en ID for hvert av dem.; Hvis ikke, vil bli utløst et unntak. Ved å tilordne en ID for hver tilkoblingspunktet, gjør du det også mulig å angi hvilken tilkoblingspunktet skal brukes når du deklarere tilkoblinger i nettsider eller opprette dem i koden."
  example:
  - "The following code example demonstrates the use of the ID property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects. This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.  \n  \n The code in the `Button2_Click` method of the Web page accesses the ID property on each of the connection point objects and writes each value to a label. Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.  \n  \n [!code-vb[WebParts_ConnectionPoint_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1125_1.aspx)]\n [!code-cs[WebParts_ConnectionPoint_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1125_1.aspx)]"
  syntax:
    content: public string ID { get; }
    return:
      type: System.String
      description: "En streng som inneholder identifikatoren for et connection point."
  overload: System.Web.UI.WebControls.WebParts.ConnectionPoint.ID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType
  id: InterfaceType
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  langs:
  - csharp
  name: InterfaceType
  nameWithType: ConnectionPoint.InterfaceType
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Henter type grensesnitt som brukes av et connection point."
  remarks: "Egenskapen InterfaceType angir hvilken type grensesnittet et connection point bruker. Dette bidrar til å fastslå om to kontroller kompatible og kan ikke opprette en tilkobling. Hvis leverandøren for tilkoblingspunktet InterfaceType er forskjellig fra de forbrukeren tilkoblingspunktet InterfaceType, vil de to kontrollene er inkompatible (det vil si at de ikke kan kobles direkte uten en transformering) og en <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>objektet må brukes til å opprette en tilkobling.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>"
  example:
  - "The following code example demonstrates the use of the InterfaceType property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects. This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.  \n  \n The code in the `Button2_Click` method of the Web page accesses the InterfaceType property on each of the connection point objects and writes each value to a label. Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.  \n  \n [!code-vb[WebParts_ConnectionPoint_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_359_1.aspx)]\n [!code-cs[WebParts_ConnectionPoint_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_359_1.aspx)]"
  syntax:
    content: public Type InterfaceType { get; }
    return:
      type: System.Type
      description: "En <xref:System.Type>som tilsvarer grensesnittype angitt eller forbrukes av en kontroll.</xref:System.Type>"
  overload: System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  isExternal: false
  name: AllowsMultipleConnections
  nameWithType: ConnectionPoint.AllowsMultipleConnections
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  isExternal: false
  name: ControlType
  nameWithType: ConnectionPoint.ControlType
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  isExternal: false
  name: DefaultID
  nameWithType: ConnectionPoint.DefaultID
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  isExternal: false
  name: DisplayName
  nameWithType: ConnectionPoint.DisplayName
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  isExternal: false
  name: GetEnabled(Control)
  nameWithType: ConnectionPoint.GetEnabled(Control)
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(Control)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.ID
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  isExternal: false
  name: ID
  nameWithType: ConnectionPoint.ID
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.ID
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  isExternal: false
  name: InterfaceType
  nameWithType: ConnectionPoint.InterfaceType
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections*
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  isExternal: false
  name: AllowsMultipleConnections
  nameWithType: ConnectionPoint.AllowsMultipleConnections
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType*
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  isExternal: false
  name: ControlType
  nameWithType: ConnectionPoint.ControlType
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName*
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  isExternal: false
  name: DisplayName
  nameWithType: ConnectionPoint.DisplayName
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled*
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  isExternal: false
  name: GetEnabled
  nameWithType: ConnectionPoint.GetEnabled
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.ID*
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  isExternal: false
  name: ID
  nameWithType: ConnectionPoint.ID
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType*
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  isExternal: false
  name: InterfaceType
  nameWithType: ConnectionPoint.InterfaceType
