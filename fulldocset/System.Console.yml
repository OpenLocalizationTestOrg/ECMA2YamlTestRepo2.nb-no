### YamlMime:ManagedReference
items:
- uid: System.Console
  id: Console
  children:
  - System.Console.BackgroundColor
  - System.Console.Beep
  - System.Console.Beep(System.Int32,System.Int32)
  - System.Console.BufferHeight
  - System.Console.BufferWidth
  - System.Console.CancelKeyPress
  - System.Console.CapsLock
  - System.Console.Clear
  - System.Console.CursorLeft
  - System.Console.CursorSize
  - System.Console.CursorTop
  - System.Console.CursorVisible
  - System.Console.Error
  - System.Console.ForegroundColor
  - System.Console.In
  - System.Console.InputEncoding
  - System.Console.IsErrorRedirected
  - System.Console.IsInputRedirected
  - System.Console.IsOutputRedirected
  - System.Console.KeyAvailable
  - System.Console.LargestWindowHeight
  - System.Console.LargestWindowWidth
  - System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)
  - System.Console.NumberLock
  - System.Console.OpenStandardError
  - System.Console.OpenStandardError(System.Int32)
  - System.Console.OpenStandardInput
  - System.Console.OpenStandardInput(System.Int32)
  - System.Console.OpenStandardOutput
  - System.Console.OpenStandardOutput(System.Int32)
  - System.Console.Out
  - System.Console.OutputEncoding
  - System.Console.Read
  - System.Console.ReadKey
  - System.Console.ReadKey(System.Boolean)
  - System.Console.ReadLine
  - System.Console.ResetColor
  - System.Console.SetBufferSize(System.Int32,System.Int32)
  - System.Console.SetCursorPosition(System.Int32,System.Int32)
  - System.Console.SetError(System.IO.TextWriter)
  - System.Console.SetIn(System.IO.TextReader)
  - System.Console.SetOut(System.IO.TextWriter)
  - System.Console.SetWindowPosition(System.Int32,System.Int32)
  - System.Console.SetWindowSize(System.Int32,System.Int32)
  - System.Console.Title
  - System.Console.TreatControlCAsInput
  - System.Console.WindowHeight
  - System.Console.WindowLeft
  - System.Console.WindowTop
  - System.Console.WindowWidth
  - System.Console.Write(System.Boolean)
  - System.Console.Write(System.Char)
  - System.Console.Write(System.Char[])
  - System.Console.Write(System.Decimal)
  - System.Console.Write(System.Double)
  - System.Console.Write(System.Int32)
  - System.Console.Write(System.Int64)
  - System.Console.Write(System.Object)
  - System.Console.Write(System.Single)
  - System.Console.Write(System.String)
  - System.Console.Write(System.UInt32)
  - System.Console.Write(System.UInt64)
  - System.Console.Write(System.String,System.Object)
  - System.Console.Write(System.String,System.Object[])
  - System.Console.Write(System.Char[],System.Int32,System.Int32)
  - System.Console.Write(System.String,System.Object,System.Object)
  - System.Console.Write(System.String,System.Object,System.Object,System.Object)
  - System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)
  - System.Console.WriteLine
  - System.Console.WriteLine(System.Boolean)
  - System.Console.WriteLine(System.Char)
  - System.Console.WriteLine(System.Char[])
  - System.Console.WriteLine(System.Decimal)
  - System.Console.WriteLine(System.Double)
  - System.Console.WriteLine(System.Int32)
  - System.Console.WriteLine(System.Int64)
  - System.Console.WriteLine(System.Object)
  - System.Console.WriteLine(System.Single)
  - System.Console.WriteLine(System.String)
  - System.Console.WriteLine(System.UInt32)
  - System.Console.WriteLine(System.UInt64)
  - System.Console.WriteLine(System.String,System.Object)
  - System.Console.WriteLine(System.String,System.Object[])
  - System.Console.WriteLine(System.Char[],System.Int32,System.Int32)
  - System.Console.WriteLine(System.String,System.Object,System.Object)
  - System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)
  - System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)
  langs:
  - csharp
  name: Console
  nameWithType: Console
  fullName: System.Console
  type: Class
  summary: "Representerer standard inndata, output og feil dataflytene for konsollen programmer. Denne klassen kan ikke arves.       For Ã¥ bla gjennom .NET Framework-kildekode for denne typen, kan du se den [Referansekilde](http://referencesource.microsoft.com/#mscorlib/system/console.cs#f907d79481da6ba4)."
  remarks: "> [!NOTE]\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/console.cs#f907d79481da6ba4). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \n  \n The console is an operating system window where users interact with the operating system or with a text-based console application by entering text input through the computer keyboard, and by reading text output from the computer terminal. For example, in the Windows operating system, the console is called the Command Prompt window and accepts MS-DOS commands. The Console class provides basic support for applications that read characters from, and write characters to, the console.  \n  \n For information about developing with the Console class, see the following sections:  \n  \n-   [Console I/O Streams](#Streams)  \n  \n-   [Screen Buffer and Console Window](#Buffer)  \n  \n-   [Unicode Support for the Console](#Unicode)  \n  \n-   [Common Operations](#Operations)  \n  \n-   [.NET Core Notes](#Core)  \n  \n<a name=\"Streams\"></a>   \n## Console I/O Streams  \n When a console application starts, the operating system automatically associates three I/O streams with the console: standard input stream, standard output stream, and standard error output stream. Your application can read user input from the standard input stream; write normal data to the standard output stream; and write error data to the standard error output stream. These streams are presented to your application as the values of the <xref:System.Console.In%2A?displayProperty=fullName>, <xref:System.Console.Out%2A?displayProperty=fullName>, and <xref:System.Console.Error%2A?displayProperty=fullName> properties.  \n  \n By default, the value of the <xref:System.Console.In%2A> property is a <xref:System.IO.TextReader?displayProperty=fullName> object that represents the keyboard, and the values of the <xref:System.Console.Out%2A> and <xref:System.Console.Error%2A> properties are <xref:System.IO.TextWriter?displayProperty=fullName> objects that represent a console window. However, you can set these properties to streams that do not represent the console window or keyboard; for example, you can set these properties to streams that represent files. To redirect the standard input, standard output, or standard error stream, call the <xref:System.Console.SetIn%2A?displayProperty=fullName>, <xref:System.Console.SetOut%2A?displayProperty=fullName>, or <xref:System.Console.SetError%2A?displayProperty=fullName> method, respectively. I/O operations that use these streams are synchronized, which means that multiple threads can read from, or write to, the streams. This means that methods that are ordinarily asynchronous, such as <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=fullName>, execute synchronously if the object represents a console stream.  \n  \n> [!NOTE]\n>  Do not use the Console class to display output in unattended applications, such as server applications. Calls to methods such as <xref:System.Console.Write%2A?displayProperty=fullName> and <xref:System.Console.WriteLine%2A?displayProperty=fullName> have no effect in GUI applications.  \n  \n Console class members that work normally when the underlying stream is directed to a console might throw an exception if the stream is redirected, for example, to a file. Program your application to catch <xref:System.IO.IOException?displayProperty=fullName> exceptions if you redirect a standard stream. You can also use the <xref:System.Console.IsOutputRedirected%2A>, <xref:System.Console.IsInputRedirected%2A>, and <xref:System.Console.IsErrorRedirected%2A> properties to determine whether a standard stream is redirected before performing an operation that throws an <xref:System.IO.IOException?displayProperty=fullName> exception.  \n  \n It is sometimes useful to explicitly call the members of the stream objects represented by the <xref:System.Console.In%2A>, <xref:System.Console.Out%2A>, and <xref:System.Console.Error%2A> properties. For example, by default, the <xref:System.Console.ReadLine%2A?displayProperty=fullName> method reads input from the standard input stream. Similarly, the <xref:System.Console.WriteLine%2A?displayProperty=fullName> method writes data to the standard output stream, and the data is followed by the default line termination string, which is  a carriage return and line feed (\"\\r\\n\"). However, the Console class does not provide a corresponding method to write data to the standard error output stream, or a property to change the line termination string for data written to that stream.  \n  \n You can solve this problem by setting the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> property of the <xref:System.Console.Out%2A> or <xref:System.Console.Error%2A> property to another line termination string. For example, the following C# statement sets the line termination string for the standard error output stream to two carriage return and line feed sequences:  \n  \n `Console.Error.NewLine = \"\\r\\n\\r\\n\";`  \n  \n You can then explicitly call the <xref:System.IO.TextWriter.WriteLine%2A> method of the error output stream object, as in the following C# statement:  \n  \n `Console.Error.WriteLine();`  \n  \n<a name=\"Buffer\"></a>   \n## Screen Buffer and Console Window  \n Two closely related features of the console are the screen buffer and the console window. Text is actually read from or written to streams owned by the console, but appear to be read from or written to an area owned by the console called the screen buffer. The screen buffer is an attribute of the console, and is organized as a rectangular grid of rows and columns where each grid intersection, or character cell, can contain a character. Each character has its own foreground color, and each character cell has its own background color.  \n  \n The screen buffer is viewed through a rectangular region called the console window. The console window is another attribute of the console; it is not the console itself, which is an operating system window. The console window is arranged in rows and columns, is less than or equal to the size of the screen buffer, and can be moved to view different areas of the underlying screen buffer. If the screen buffer is larger than the console window, the console automatically displays scroll bars so the console window can be repositioned over the screen buffer area.  \n  \n A cursor indicates the screen buffer position where text is currently read or written. The cursor can be hidden or made visible, and its height can be changed. If the cursor is visible, the console window position is moved automatically so the cursor is always in view.  \n  \n The origin for character cell coordinates in the screen buffer is the upper left corner, and the positions of the cursor and the console window are measured relative to that origin. Use zero-based indexes to specify positions; that is, specify the topmost row as row 0, and the leftmost column as column 0. The maximum value for the row and column indexes is <xref:System.Int16.MaxValue?displayProperty=fullName>.  \n  \n<a name=\"Unicode\"></a>   \n## Unicode Support for the Console  \n In general, the console reads input and writes output by using the current console code page, which the system locale defines by default. A code page can handle only a subset of available Unicode characters, so if you try to display characters that are not mapped by a particular code page, the console won't be able to display all characters or represent them accurately. The following example illustrates this problem. It tries to display the characters of the Cyrillic alphabet from U+0410 to U+044F to the console. If you run the example on a system that uses console code page 437, each character is replaced by a question mark (?), because Cyrillic characters do not map to the characters in code page 437.  \n  \n [!code-cs[System.Console.Class#1](~/add/codesnippet/csharp/t-system.console_1.cs)]\n [!code-vb[System.Console.Class#1](~/add/codesnippet/visualbasic/t-system.console_1.vb)]  \n  \n In addition to supporting code pages, the Console class supports UTF-8 encoding with the <xref:System.Text.UTF8Encoding> class. Beginning with the .NET Framework 4.5, the Console class also supports UTF-16 encoding with the <xref:System.Text.UnicodeEncoding> class. To display Unicode characters to the console. you set the <xref:System.Console.OutputEncoding%2A> property to either <xref:System.Text.UTF8Encoding> or  <xref:System.Text.UnicodeEncoding>.  \n  \n Support for Unicode characters requires the encoder to recognize a particular Unicode character, and also requires a font that has the glyphs needed to render that character. To successfully display Unicode characters to the console, the console font must be set to a non-raster or TrueType font such as Consolas or Lucida Console. The following example shows how you can programmatically change the font from a raster font to Lucida Console.  \n  \n [!code-cs[System.Console.Class.Unsafe#3](~/add/codesnippet/csharp/setfont1/setfont1.cs#3)]\n [!code-vb[System.Console.Class.Unsafe#3](~/add/codesnippet/visualbasic/t-system.console_2.vb)]  \n  \n However, TrueType fonts can display only a subset of glyphs. For example, the Lucida Console font displays only 643 of the approximately 64,000 available characters from U+0021 to U+FB02. To see which characters a particular font supports, open the **Fonts** applet in Control Panel, choose the **Find a character** option, and choose the font whose character set you'd like to examine in the **Font** list of the **Character Map** window.  \n  \n Windows uses font linking to display glyphs that are not available in a particular font. For information about font linking to display additional character sets, see [Globalization Step-by-Step: Fonts](http://go.microsoft.com/fwlink/?LinkId=229111). Linked fonts are defined in the HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\FontLink\\SystemLink subkey of the registry. Each entry associated with this subkey corresponds to the name of a base font, and its value is a string array that defines the font files and the fonts that are linked to the base font. Each member of the array defines a linked font and takes the form *font-file-name*,*font-name*. The following example illustrates how you can programmatically define a linked font named SimSun found in a font file named simsun.ttc that displays Simplified Han characters.  \n  \n [!code-cs[System.Console.Class#2](~/add/codesnippet/csharp/t-system.console_3.cs)]\n [!code-vb[System.Console.Class#2](~/add/codesnippet/visualbasic/t-system.console_3.vb)]  \n  \n Unicode support for the console has the following limitations:  \n  \n-   UTF-32 encoding is not supported. The only supported Unicode encodings are UTF-8 and UTF-16, which are represented by the <xref:System.Text.UTF8Encoding> and <xref:System.Text.UnicodeEncoding> classes, respectively.  \n  \n-   Bidirectional output is not supported.  \n  \n-   Display of characters outside the Basic Multilingual Plane (that is, of surrogate pairs) is not supported, even if they are defined in a linked font file.  \n  \n-   Display of characters in complex scripts is not supported.  \n  \n-   Combining character sequences (that is, characters that consist of a base character and one or more combining characters) are displayed as separate characters. To work around this limitation, you can normalize the string to be displayed by calling the <xref:System.String.Normalize%2A?displayProperty=fullName> method before sending output to the console. In the following example, a string that contains the combining character sequence U+0061 U+0308 is displayed to the console as two characters before the output string is normalized, and as a single character after the <xref:System.String.Normalize%2A?displayProperty=fullName> method is called.  \n  \n     [!code-cs[System.Console.Class#5](~/add/codesnippet/csharp/t-system.console_4.cs)]\n     [!code-vb[System.Console.Class#5](~/add/codesnippet/visualbasic/t-system.console_4.vb)]  \n  \n     Note that normalization is a viable solution only if the Unicode standard for the character includes a pre-composed form that corresponds to a particular combining character sequence.  \n  \n-   If a font provides a glyph for a code point in the private use area, that glyph will be displayed. However, because characters in the private use area are application-specific, this may not be the expected glyph.  \n  \n The following example displays a range of Unicode characters to the console. The example accepts three command-line parameters: the start of the range to display, the end of the range to display, and whether to use the current console encoding (`false`) or UTF-16 encoding (`true`). It assumes that the console is using a TrueType font.  \n  \n [!code-cs[System.Console.Class#4](~/add/codesnippet/csharp/t-system.console_5.cs)]\n [!code-vb[System.Console.Class#4](~/add/codesnippet/visualbasic/t-system.console_5.vb)]  \n  \n<a name=\"Operations\"></a>   \n## Common Operations  \n The Console class contains the following methods for reading console input and writing console output:  \n  \n-   The overloads of the <xref:System.Console.ReadKey%2A> method read an individual character.  \n  \n-   The <xref:System.Console.ReadLine%2A> method reads an entire line of input.  \n  \n-   The <xref:System.Console.Write%2A> method overloads convert an instance of a value type, an array of characters, or a set of objects to a formatted or unformatted string, and then write that string to the console.  \n  \n-   A parallel set of <xref:System.Console.WriteLine%2A> method overloads output the same string as the <xref:System.Console.Write%2A> overloads but also add a line termination string.  \n  \n The Console class also contains methods and properties to perform the following operations:  \n  \n-   Get or set the size of the screen buffer. The <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties let you get or set the buffer height and width, respectively, and the <xref:System.Console.SetBufferSize%2A> method lets you set the buffer size in a single method call.  \n  \n-   Get or set the size of the console window. The <xref:System.Console.WindowHeight%2A> and <xref:System.Console.WindowWidth%2A> properties let you get or set the window height and width, respectively, and the <xref:System.Console.SetWindowSize%2A> method lets you set the window size in a single method call.  \n  \n-   Get or set the size of the cursor. The <xref:System.Console.CursorSize%2A> property specifies the height of the cursor in a character cell.  \n  \n-   Get or set the position of the console window relative to the screen buffer. The <xref:System.Console.WindowTop%2A> and <xref:System.Console.WindowLeft%2A> properties let you get or set the top row and leftmost column of the screen buffer that appears in the console window, and the <xref:System.Console.SetWindowPosition%2A> method lets you set these values in a single method call.  \n  \n-   Get or set the position of the cursor by getting or setting the <xref:System.Console.CursorTop%2A> and <xref:System.Console.CursorLeft%2A> properties, or set the position of the cursor by calling the <xref:System.Console.SetCursorPosition%2A> method.  \n  \n-   Move or clear data in the screen buffer by calling the <xref:System.Console.MoveBufferArea%2A> or <xref:System.Console.Clear%2A> method.  \n  \n-   Get or set the foreground and background colors by using the <xref:System.Console.ForegroundColor%2A> and <xref:System.Console.BackgroundColor%2A> properties, or reset the background and foreground to their default colors by calling the <xref:System.Console.ResetColor%2A> method.  \n  \n-   Play the sound of a beep through the console speaker by calling the <xref:System.Console.Beep%2A> method.  \n  \n<a name=\"Core\"></a>   \n## [!INCLUDE[net_core](~/add/includes/net-core-md.md)] Notes  \n In the .NET Framework on the desktop, the Console class uses the encoding returned by `GetConsoleCP` and `GetConsoleOutputCP`, which typically is a code page encoding. For example code, on systems whose culture is English (United States), code page 437 is the encoding that is used by default. However, [!INCLUDE[net_core](~/add/includes/net-core-md.md)] may make only a limited subset of these encodings available. Where this is the case, <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> is used as the default encoding for the console.  \n  \n If your app depends on specific code page encodings, you can still make them available by doing the following *before* you call any Console methods:  \n  \n1.  Add a reference to the System.Text.Encoding.CodePages.dll assembly to your project.  \n  \n2.  Retrieve the <xref:System.Text.EncodingProvider> object from the <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=fullName> property.  \n  \n3.  Pass the <xref:System.Text.EncodingProvider> object to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=fullName> method to make the additional encodings supported by the encoding provider available.  \n  \n The Console class will then automatically use the default system encoding rather than UTF8, provided that you have registered the encoding provider before calling any Console output methods."
  example:
  - "The following example demonstrates how to read data from, and write data to, the standard input and output streams. Note that these streams can be redirected by using the <xref:System.Console.SetIn%2A> and <xref:System.Console.SetOut%2A> methods.  \n  \n [!code-cs[Classic Console Example#1](~/add/codesnippet/csharp/t-system.console_6.cs)]\n [!code-cpp[Classic Console Example#1](~/add/codesnippet/cpp/t-system.console_6.cpp)]\n [!code-vb[Classic Console Example#1](~/add/codesnippet/visualbasic/t-system.console_6.vb)]"
  syntax:
    content: public static class Console
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Console.BackgroundColor
  id: BackgroundColor
  parent: System.Console
  langs:
  - csharp
  name: BackgroundColor
  nameWithType: Console.BackgroundColor
  fullName: System.Console.BackgroundColor
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter eller angir bakgrunnsfargen for konsollen."
  remarks: "En endring i BackgroundColor egenskapen pÃ¥virker bare utdata som er skrevet til individuelle tegn celler etter at bakgrunnsfargen er endret. Hvis du vil endre bakgrunnsfargen for konsollvinduet som en helhet, kan du angi egenskapen BackgroundColor og kall den <xref:System.Console.Clear%2A>metoden.</xref:System.Console.Clear%2A> Eksemplet inneholder et bilde.       [!code-vb[System.Console.BackgroundColor#1](~/add/codesnippet/visualbasic/p-system.console.backgro_1.vb)][!code-cs[System.Console.BackgroundColor#1](~/add/codesnippet/csharp/p-system.console.backgro_1.cs) ] en get-operasjon for en Windows-basert program som en konsoll ikke finnes, returnerer <xref:System.ConsoleColor?displayProperty=fullName>.</xref:System.ConsoleColor?displayProperty=fullName>  "
  example:
  - "The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the BackgroundColor and <xref:System.Console.ForegroundColor%2A> properties to variables. It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground. (If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <xref:System.Console.ResetColor%2A> method to restore the original console colors.  \n  \n [!code-vb[System.ConsoleColor#1](~/add/codesnippet/visualbasic/p-system.console.backgro_2.vb)]\n [!code-cs[System.ConsoleColor#1](~/add/codesnippet/csharp/p-system.console.backgro_2.cs)]"
  syntax:
    content: public static ConsoleColor BackgroundColor { get; set; }
    return:
      type: System.ConsoleColor
      description: "En verdi som angir bakgrunnsfargen for konsollen; Det vil si fargen som vises bak hvert tegn. Standarden er svarte."
  overload: System.Console.BackgroundColor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Fargen som er angitt i en set-operasjon er ikke et gyldig medlem av <xref href=&quot;System.ConsoleColor&quot;> </xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Brukeren har ikke tillatelse til Ã¥ utfÃ¸re denne handlingen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.Beep
  id: Beep
  parent: System.Console
  langs:
  - csharp
  name: Beep()
  nameWithType: Console.Beep()
  fullName: System.Console.Beep()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Spiller lyden av et lydsignal via konsollen taleridentifiserings."
  remarks: "Som standard lydsignalet spilles av en frekvens pÃ¥ 800 hertz lenge 200 millisekunder.      > [!NOTE] > Den <xref:System.Console.Beep%2A>metoden stÃ¸ttes ikke pÃ¥ 64-biters versjoner av Windows Vista og Windows XP.</xref:System.Console.Beep%2A>       Lydsignal bryter et kall til Windows [lydsignal funksjonen](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx). Om lydsignal produserer en lyd i versjoner av Windows fÃ¸r Windows 7, avhenger av tilstedevÃ¦relsen av et 8254 programmerbare intervallet tidtakeren brikke. Fra og med Windows 7, som den avhenger lydfil standardenheten."
  example:
  - "The following example demonstrates the Beep method. The example accepts a number from 1 through 9 as a command line argument, and plays the beep that number of times.  \n  \n [!code-cs[console.beep#1](~/add/codesnippet/csharp/m-system.console.beep_1.cs)]\n [!code-cpp[console.beep#1](~/add/codesnippet/cpp/m-system.console.beep_1.cpp)]\n [!code-vb[console.beep#1](~/add/codesnippet/visualbasic/m-system.console.beep_1.vb)]"
  syntax:
    content: public static void Beep ();
    parameters: []
  overload: System.Console.Beep*
  exceptions:
  - type: System.Security.HostProtectionException
    commentId: T:System.Security.HostProtectionException
    description: "Denne metoden ble utfÃ¸rt pÃ¥ en server, for eksempel SQL Server, som ikke tillater tilgang til et brukergrensesnitt."
  platform:
  - net462
- uid: System.Console.Beep(System.Int32,System.Int32)
  id: Beep(System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: Beep(Int32,Int32)
  nameWithType: Console.Beep(Int32,Int32)
  fullName: System.Console.Beep(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Spiller lyden av et lydsignal angitte intervallet og duration via konsollen taleridentifiserings."
  remarks: "<xref:System.Console.Beep%2A>bryter et kall til Windows [lydsignal funksjonen](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx).</xref:System.Console.Beep%2A> Om <xref:System.Console.Beep%2A>produserer en lyd i versjoner av Windows fÃ¸r Windows 7, avhengig av tilstedevÃ¦relsen av et 8254 programmerbare intervallet tidtakeren brikke.</xref:System.Console.Beep%2A> Fra og med Windows 7, som den avhenger lydfil standardenheten.      > [!NOTE] > Den <xref:System.Console.Beep%2A>metoden stÃ¸ttes ikke pÃ¥ 64-biters versjoner av Windows Vista og Windows XP.</xref:System.Console.Beep%2A>"
  example:
  - "This example demonstrates the Beep method by playing the first few notes of a song through the console speaker.  \n  \n [!code-cpp[console.beep2#1](~/add/codesnippet/cpp/m-system.console.beep-sy_1.cpp)]\n [!code-vb[console.beep2#1](~/add/codesnippet/visualbasic/m-system.console.beep-sy_1.vb)]\n [!code-cs[console.beep2#1](~/add/codesnippet/csharp/m-system.console.beep-sy_1.cs)]"
  syntax:
    content: public static void Beep (int frequency, int duration);
    parameters:
    - id: frequency
      type: System.Int32
      description: "Hyppigheten for lydsignalet, varierer fra 37 til 32767 hertz."
    - id: duration
      type: System.Int32
      description: "Varigheten for lydsignalet mÃ¥lt i millisekunder."
  overload: System.Console.Beep*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>frequency</code>er mindre enn 37 eller mer enn 32767 hertz.       - eller - <code>duration</code> er mindre enn eller lik null."
  - type: System.Security.HostProtectionException
    commentId: T:System.Security.HostProtectionException
    description: "Denne metoden ble utfÃ¸rt pÃ¥ en server, for eksempel SQL Server, som ikke tillater tilgang til konsollen."
  platform:
  - net462
- uid: System.Console.BufferHeight
  id: BufferHeight
  parent: System.Console
  langs:
  - csharp
  name: BufferHeight
  nameWithType: Console.BufferHeight
  fullName: System.Console.BufferHeight
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter eller angir hÃ¸yden pÃ¥ bufferomrÃ¥det."
  remarks: "Angir antall rader (eller linjer) som er lagret i buffer som brukes av et vindu for konsollen modus for denne egenskapen. Sammenligning av <xref:System.Console.WindowHeight%2A>definerer hvor mange rader som vises i konsollvinduet nÃ¥r som helst bestemt.</xref:System.Console.WindowHeight%2A> Hvis antall rader faktisk er skrevet til bufferen overskrider antallet rader som er definert av den <xref:System.Console.WindowHeight%2A>egenskapen vinduet kan rulles loddrett slik at det vises et sammenhengende antall rader som er lik den <xref:System.Console.WindowHeight%2A>egenskapen og er plassert hvor som helst i bufferen.</xref:System.Console.WindowHeight%2A> </xref:System.Console.WindowHeight%2A>       Hvis en set-operasjon reduserer verdien for egenskapen BufferHeight, fjernes de Ã¸verste linjene. Hvis antall linjer reduseres fra 300 til 250, linjer 0 til 49 er fjernet, og den eksisterende linjer 50 til 299 blir linjer 0 til 249."
  example:
  - "This example demonstrates the BufferHeight and <xref:System.Console.BufferWidth%2A> properties. The example reports the dimensions of an operating system window set to a buffer size of 300 rows and 85 columns.  \n  \n [!code-cs[console.bufferHW#1](~/add/codesnippet/csharp/p-system.console.bufferh_1.cs)]\n [!code-cpp[console.bufferHW#1](~/add/codesnippet/cpp/p-system.console.bufferh_1.cpp)]\n [!code-vb[console.bufferHW#1](~/add/codesnippet/visualbasic/p-system.console.bufferh_1.vb)]"
  syntax:
    content: public static int BufferHeight { get; set; }
    return:
      type: System.Int32
      description: "Gjeldende hÃ¸yden, i radene i bufferomrÃ¥det."
  overload: System.Console.BufferHeight*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Verdien i en set-operasjon er mindre enn eller lik null.       - eller - verdi i en set-operasjon er stÃ¸rre enn eller lik &lt;xref:System.Int16.MaxValue?displayProperty=fullName&gt;.       - eller - verdien i en set-operasjon er mindre enn <> </> *> + <> </> *>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Brukeren har ikke tillatelse til Ã¥ utfÃ¸re denne handlingen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.BufferWidth
  id: BufferWidth
  parent: System.Console
  langs:
  - csharp
  name: BufferWidth
  nameWithType: Console.BufferWidth
  fullName: System.Console.BufferWidth
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter eller angir bredden pÃ¥ bufferomrÃ¥det."
  remarks: "Hvis en set-operasjon reduserer verdien for egenskapen BufferWidth, fjernes kolonnene lengst til hÃ¸yre. Hvis antallet kolonner reduseres fra 80 til 60, fjernes for eksempel kolonner 60 via 79 for hver rad."
  example:
  - "This example demonstrates the <xref:System.Console.BufferHeight%2A> and BufferWidth properties. The example reports the dimensions of an operating system window set to a buffer size of 300 rows and 85 columns.  \n  \n [!code-cs[console.bufferHW#1](~/add/codesnippet/csharp/p-system.console.bufferw_1.cs)]\n [!code-cpp[console.bufferHW#1](~/add/codesnippet/cpp/p-system.console.bufferw_1.cpp)]\n [!code-vb[console.bufferHW#1](~/add/codesnippet/visualbasic/p-system.console.bufferw_1.vb)]"
  syntax:
    content: public static int BufferWidth { get; set; }
    return:
      type: System.Int32
      description: "Gjeldende bredden, i kolonnene i bufferomrÃ¥det."
  overload: System.Console.BufferWidth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Verdien i en set-operasjon er mindre enn eller lik null.       - eller - verdi i en set-operasjon er stÃ¸rre enn eller lik &lt;xref:System.Int16.MaxValue?displayProperty=fullName&gt;.       - eller - verdien i en set-operasjon er mindre enn <> </> *> + <> </> *>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Brukeren har ikke tillatelse til Ã¥ utfÃ¸re denne handlingen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.CancelKeyPress
  id: CancelKeyPress
  parent: System.Console
  langs:
  - csharp
  name: CancelKeyPress
  nameWithType: Console.CancelKeyPress
  fullName: System.Console.CancelKeyPress
  type: Event
  assemblies:
  - mscorlib
  namespace: System
  summary: "Forekommer nÃ¥r den <xref href=&quot;System.ConsoleModifiers&quot;> </xref> tast (Ctrl) og enten den <xref href=&quot;System.ConsoleKey&quot;> </xref> konsollen (C) eller Break-nÃ¸kkel trykkes samtidig (Ctrl + C eller Ctrl + Break)."
  remarks: "Denne hendelsen brukes sammen med <xref:System.ConsoleCancelEventHandler?displayProperty=fullName>og <xref:System.ConsoleCancelEventArgs?displayProperty=fullName>.</xref:System.ConsoleCancelEventArgs?displayProperty=fullName> </xref:System.ConsoleCancelEventHandler?displayProperty=fullName> Hendelsen CancelKeyPress aktiverer en applikasjon konsollen Ã¥ fange opp Ctrl + C signalet slik hendelsesbehandlingen kan bestemme om du vil fortsette Ã¥ kjÃ¸re eller avsluttes. Du finner mer informasjon om behandling av hendelser [behandling og opprettet hendelser](~/add/includes/ajax-current-ext-md.md).       NÃ¥r du trykker Ctrl + C eller Ctrl + Break CancelKeyPress hendelsen startes og programmets <xref:System.ConsoleCancelEventHandler>hendelsesbehandlingen er utfÃ¸rt.</xref:System.ConsoleCancelEventHandler> Hendelsesbehandlingen er sendt en <xref:System.ConsoleCancelEventArgs>objektet som har to nyttig egenskaper:- <xref:System.ConsoleCancelEventArgs.SpecialKey%2A>, slik at du kan fastslÃ¥ om behandlingsprogrammet ble startet som fÃ¸lge av brukeren trykke Ctrl + C (egenskapsverdi <xref:System.ConsoleSpecialKey?displayProperty=fullName>) eller Ctrl + Break (egenskapsverdi <xref:System.ConsoleSpecialKey?displayProperty=fullName>).</xref:System.ConsoleSpecialKey?displayProperty=fullName> </xref:System.ConsoleSpecialKey?displayProperty=fullName> </xref:System.ConsoleCancelEventArgs.SpecialKey%2A> </xref:System.ConsoleCancelEventArgs>      - <xref:System.ConsoleCancelEventArgs.Cancel%2A>, som gjÃ¸r det mulig Ã¥ finne ut hvordan til programmet mÃ¥ svare pÃ¥ brukeren Ã¥ trykke Ctrl + C eller Ctrl + Break.</xref:System.ConsoleCancelEventArgs.Cancel%2A> Som standard i <xref:System.ConsoleCancelEventArgs.Cancel%2A>egenskapen `false`, som gjÃ¸r at programmer kjÃ¸ring mÃ¥ avsluttes nÃ¥r hendelsesbehandlingen avslutter.</xref:System.ConsoleCancelEventArgs.Cancel%2A> Endre egenskapen til `true` angir at programmet skal fortsette Ã¥ kjÃ¸re.      > [!TIP] > Hvis programmet har enkle krav, kan du bruke den <xref:System.Console.TreatControlCAsInput%2A>egenskapen i stedet for denne hendelsen.</xref:System.Console.TreatControlCAsInput%2A> Ved Ã¥ angi denne egenskapen til `false`, kan du kontrollere at programmet alltid avslutter Hvis brukeren trykker Ctrl + C. Ved Ã¥ sette verdien `true`, kan du kontrollere at trykke Ctrl + C ikke kan avslutte applikasjonen.       Hendelsesbehandling for denne handlingen utfÃ¸res pÃ¥ en trÃ¥d applikasjonsutvalget trÃ¥d."
  example:
  - "The following example demonstrates how the CancelKeyPress event is used. When you press Ctrl+C, the read operation is interrupted and the `myHandler` event handler is invoked. Upon entry to the event handler, the <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=fullName> property is `false`, which means that the current process will terminate when the event handler terminates. However, the event handler sets the <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=fullName> property to `true`, which means that the process will not terminate and the read operation will resume.  \n  \n [!code-cs[console.cancelkeypress#1](~/add/codesnippet/csharp/e-system.console.cancelk_1.cs)]\n [!code-cpp[console.cancelkeypress#1](~/add/codesnippet/cpp/e-system.console.cancelk_1.cpp)]\n [!code-vb[console.cancelkeypress#1](~/add/codesnippet/visualbasic/e-system.console.cancelk_1.vb)]"
  syntax:
    content: public static event ConsoleCancelEventHandler CancelKeyPress;
    return:
      type: System.ConsoleCancelEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Console.CapsLock
  id: CapsLock
  parent: System.Console
  langs:
  - csharp
  name: CapsLock
  nameWithType: Console.CapsLock
  fullName: System.Console.CapsLock
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter en verdi som angir om tastaturet vekslingen CAPS LOCK er aktivert eller deaktivert."
  syntax:
    content: public static bool CapsLock { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis CAPS LOCK er aktivert. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Hvis CAPS LOCK er deaktivert."
  overload: System.Console.CapsLock*
  exceptions: []
  platform:
  - net462
- uid: System.Console.Clear
  id: Clear
  parent: System.Console
  langs:
  - csharp
  name: Clear()
  nameWithType: Console.Clear()
  fullName: System.Console.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Fjerner konsollen bufferen og tilhÃ¸rende konsollvinduet viser informasjon."
  remarks: "Med metoden Fjern tilsvarer aktivering MS-DOS `cls` i Ledetekst-vinduet. NÃ¥r Fjern for markÃ¸ren ruller automatisk til det Ã¸verste venstre hjÃ¸rnet av vinduet og innholdet pÃ¥ skjermbufferen er satt til tomme ved hjelp av gjeldende forgrunnen bakgrunnsfargen.      > [!NOTE] > ForsÃ¸k pÃ¥ Ã¥ kalle metoden Fjern nÃ¥r en konsoll programmets utdata omdirigeres til en fil oppstÃ¥r <xref:System.IO.IOException>.</xref:System.IO.IOException> Du kan unngÃ¥ dette ved alltid utfÃ¸re et kall til Clear-metoden i en `try`...`catch` Blokker."
  example:
  - "The following example uses the Clear method to clear the console before it executes a loop, prompts the user to select a foreground and background color and to enter a string to display. If the user chooses not to exit the program, the console's original foreground and background colors are restored and the Clear method is called again before re-executing the loop.  \n  \n [!code-vb[System.Console.Clear#1](~/add/codesnippet/visualbasic/m-system.console.clear_1.vb)]\n [!code-cs[System.Console.Clear#1](~/add/codesnippet/csharp/m-system.console.clear_1.cs)]  \n  \n The example relies on a `GetKeyPress` method to validate the user's selection of a foreground and background color.  \n  \n This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and Clear methods. The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of \"+\", \"&#124;\", and \"-\" strings. Note that the rectangle could be drawn with fewer steps using a combination of other strings.  \n  \n [!code-cs[console.cursorLTS#1](~/add/codesnippet/csharp/m-system.console.clear_2.cs)]\n [!code-cpp[console.cursorLTS#1](~/add/codesnippet/cpp/m-system.console.clear_2.cpp)]\n [!code-vb[console.cursorLTS#1](~/add/codesnippet/visualbasic/m-system.console.clear_2.vb)]"
  syntax:
    content: public static void Clear ();
    parameters: []
  overload: System.Console.Clear*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.CursorLeft
  id: CursorLeft
  parent: System.Console
  langs:
  - csharp
  name: CursorLeft
  nameWithType: Console.CursorLeft
  fullName: System.Console.CursorLeft
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter eller angir kolonnen posisjonen for markÃ¸ren i bufferomrÃ¥det."
  remarks: ''
  example:
  - "This example demonstrates the CursorLeft and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods. The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of \"+\", \"&#124;\", and \"-\" strings. Note that the rectangle could be drawn with fewer steps using a combination of other strings.  \n  \n [!code-cs[console.cursorLTS#1](~/add/codesnippet/csharp/p-system.console.cursorl_1.cs)]\n [!code-cpp[console.cursorLTS#1](~/add/codesnippet/cpp/p-system.console.cursorl_1.cpp)]\n [!code-vb[console.cursorLTS#1](~/add/codesnippet/visualbasic/p-system.console.cursorl_1.vb)]"
  syntax:
    content: public static int CursorLeft { get; set; }
    return:
      type: System.Int32
      description: "Gjeldende plassering, i kolonnene i markÃ¸ren."
  overload: System.Console.CursorLeft*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Verdien i en set-operasjon er mindre enn null.       - eller - verdi i en set-operasjon er stÃ¸rre enn eller lik <xref:System.Console.BufferWidth*>.</xref:System.Console.BufferWidth*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Brukeren har ikke tillatelse til Ã¥ utfÃ¸re denne handlingen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.CursorSize
  id: CursorSize
  parent: System.Console
  langs:
  - csharp
  name: CursorSize
  nameWithType: Console.CursorSize
  fullName: System.Console.CursorSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter eller angir hÃ¸yden pÃ¥ markÃ¸ren i celleegenskaper tegn."
  remarks: "MarkÃ¸ren utseendet varierer, fra en vannrett linje nederst i cellen nÃ¥r egenskapsverdien er 1 til Ã¥ fylle cellen fullstendig nÃ¥r egenskapsverdien er 100."
  example:
  - "This example demonstrates the CursorSize property. The example increases the size of the cursor each time any console key is pressed, then restores the cursor to its original size before terminating.  \n  \n [!code-cs[console.cursorsize#1](~/add/codesnippet/csharp/p-system.console.cursors_1.cs)]\n [!code-cpp[console.cursorsize#1](~/add/codesnippet/cpp/p-system.console.cursors_1.cpp)]\n [!code-vb[console.cursorsize#1](~/add/codesnippet/visualbasic/p-system.console.cursors_1.vb)]"
  syntax:
    content: public static int CursorSize { get; set; }
    return:
      type: System.Int32
      description: "StÃ¸rrelsen pÃ¥ markÃ¸ren uttrykkes som en prosentdel av hÃ¸yden celleegenskaper tegn. Egenskapen value omrÃ¥dene fra 1 til 100."
  overload: System.Console.CursorSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Verdien som er angitt i en set-operasjon er mindre enn 1 eller stÃ¸rre enn 100."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Brukeren har ikke tillatelse til Ã¥ utfÃ¸re denne handlingen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.CursorTop
  id: CursorTop
  parent: System.Console
  langs:
  - csharp
  name: CursorTop
  nameWithType: Console.CursorTop
  fullName: System.Console.CursorTop
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter eller angir posisjon for markÃ¸ren i bufferomrÃ¥det."
  remarks: ''
  example:
  - "This example demonstrates the <xref:System.Console.CursorLeft%2A> and CursorTop properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods. The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of \"+\", \"&#124;\", and \"-\" strings. Note that the rectangle could be drawn with fewer steps using a combination of other strings.  \n  \n [!code-cs[console.cursorLTS#1](~/add/codesnippet/csharp/p-system.console.cursortop_1.cs)]\n [!code-cpp[console.cursorLTS#1](~/add/codesnippet/cpp/p-system.console.cursortop_1.cpp)]\n [!code-vb[console.cursorLTS#1](~/add/codesnippet/visualbasic/p-system.console.cursortop_1.vb)]"
  syntax:
    content: public static int CursorTop { get; set; }
    return:
      type: System.Int32
      description: "Gjeldende plassering, i rader for markÃ¸ren."
  overload: System.Console.CursorTop*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Verdien i en set-operasjon er mindre enn null.       - eller - verdi i en set-operasjon er stÃ¸rre enn eller lik <xref:System.Console.BufferHeight*>.</xref:System.Console.BufferHeight*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Brukeren har ikke tillatelse til Ã¥ utfÃ¸re denne handlingen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.CursorVisible
  id: CursorVisible
  parent: System.Console
  langs:
  - csharp
  name: CursorVisible
  nameWithType: Console.CursorVisible
  fullName: System.Console.CursorVisible
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter eller angir en verdi som angir om markÃ¸ren er synlig."
  remarks: ''
  example:
  - "This example demonstrates the CursorVisible property. The example makes the cursor visible if the first column of input is a '+' character or invisible if the input is a '-' character.  \n  \n [!code-cs[console.cursorvis#1](~/add/codesnippet/csharp/p-system.console.cursorv_1.cs)]\n [!code-vb[console.cursorvis#1](~/add/codesnippet/visualbasic/p-system.console.cursorv_1.vb)]\n [!code-cpp[console.cursorvis#1](~/add/codesnippet/cpp/p-system.console.cursorv_1.cpp)]"
  syntax:
    content: public static bool CursorVisible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis pekeren er synlige. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.CursorVisible*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Brukeren har ikke tillatelse til Ã¥ utfÃ¸re denne handlingen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.Error
  id: Error
  parent: System.Console
  langs:
  - csharp
  name: Error
  nameWithType: Console.Error
  fullName: System.Console.Error
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter utdata standard feilflyt."
  remarks: "Denne standard feilflyt er som standard satt til konsollen. Det kan vÃ¦re satt til en annen dataflyt med den <xref:System.Console.SetError%2A>metoden.</xref:System.Console.SetError%2A> NÃ¥r standard feilflyt er omadressert, kan det reacquired ved Ã¥ kalle den <xref:System.Console.OpenStandardError%2A>metoden.</xref:System.Console.OpenStandardError%2A>       I konsollen programmer der informasjon utdata ofte omdirigert til en fil, brukes i standard feilflyt tilgjengelig via egenskapen til Ã¥ vise informasjon til konsollen, selv om utdata omdirigert. Eksemplet nedenfor viser produktet tabeller for 10 numre samtidig fra og med 1. Etter hver tallsett 10 brukes egenskapen til Ã¥ be om brukeren om Ã¥ vise neste. Hvis standard utdata omdirigeres til en fil, blir fremdeles brukeren bedt om rutinen skal generere neste sett med produkter.       [!code-cs[System.Console.Error#1](~/add/codesnippet/csharp/p-system.console.error_1.cs)][!code-vb[System.Console.Error#1  ](~/add/codesnippet/visualbasic/p-system.console.error_1.vb)]"
  example:
  - "The following example is a command line utility named ExpandTabs that replaces tab characters in a text file with four spaces, the value defined by the `tabSize` variable. It redirects the standard input and output streams to files, but uses the Error property to write the standard error stream to the console. It can be launched from the command line by supplying the name of the file that contains tab characters and the name of the output file.  \n  \n [!code-cpp[Console-EXPANDTABSEX#1](~/add/codesnippet/cpp/p-system.console.error_2.cpp)]\n [!code-cs[Console-EXPANDTABSEX#1](~/add/codesnippet/csharp/p-system.console.error_2.cs)]\n [!code-vb[Console-EXPANDTABSEX#1](~/add/codesnippet/visualbasic/p-system.console.error_2.vb)]  \n  \n The following example is a simple text file viewer that displays the contents of one or more text files to the console. If there are no command line arguments, or if any files passed as command line arguments do not exist, the example calls the <xref:System.Console.SetError%2A> method to redirect error information to a file, calls the <xref:System.Console.OpenStandardError%2A> method in the process of reacquiring the standard error stream, and indicates that error information was written to a file.  \n  \n [!code-cs[System.Console.OpenStandardError#1](~/add/codesnippet/csharp/p-system.console.error_3.cs)]\n [!code-vb[System.Console.OpenStandardError#1](~/add/codesnippet/visualbasic/p-system.console.error_3.vb)]  \n  \n Note that the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=fullName> property is set to `true` before reacquiring the error stream. This ensures that output will be sent to the console immediately rather than buffered."
  syntax:
    content: public static System.IO.TextWriter Error { get; }
    return:
      type: System.IO.TextWriter
      description: "En <xref:System.IO.TextWriter>som representerer utdata standard feilflyt.</xref:System.IO.TextWriter>"
  overload: System.Console.Error*
  exceptions: []
  platform:
  - net462
- uid: System.Console.ForegroundColor
  id: ForegroundColor
  parent: System.Console
  langs:
  - csharp
  name: ForegroundColor
  nameWithType: Console.ForegroundColor
  fullName: System.Console.ForegroundColor
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter eller angir forgrunnsfargen av konsollen."
  remarks: "Returnerer en get-operasjon for en Windows-basert program som en konsoll ikke finnes <xref:System.ConsoleColor>.</xref:System.ConsoleColor>"
  example:
  - "The following example checks whether the console's background color is black and, if it is, it changes the background color to red and the foreground color to black.  \n  \n [!code-cs[System.ConsoleColor#2](~/add/codesnippet/csharp/p-system.console.foregro_1.cs)]\n [!code-vb[System.ConsoleColor#2](~/add/codesnippet/visualbasic/p-system.console.foregro_1.vb)]  \n  \n The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the <xref:System.Console.BackgroundColor%2A> and ForegroundColor properties to variables. It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground. (If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <xref:System.Console.ResetColor%2A> method to restore the original console colors.  \n  \n [!code-vb[System.ConsoleColor#1](~/add/codesnippet/visualbasic/p-system.console.foregro_2.vb)]\n [!code-cs[System.ConsoleColor#1](~/add/codesnippet/csharp/p-system.console.foregro_2.cs)]"
  syntax:
    content: public static ConsoleColor ForegroundColor { get; set; }
    return:
      type: System.ConsoleColor
      description: "En <xref href=&quot;System.ConsoleColor&quot;> </xref> som angir forgrunnsfargen pÃ¥ konsollen; som er fargen pÃ¥ hver tegnene som vises. Standarden er grÃ¥."
  overload: System.Console.ForegroundColor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Fargen som er angitt i en set-operasjon er ikke et gyldig medlem av <xref href=&quot;System.ConsoleColor&quot;> </xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Brukeren har ikke tillatelse til Ã¥ utfÃ¸re denne handlingen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.In
  id: In
  parent: System.Console
  langs:
  - csharp
  name: In
  nameWithType: Console.In
  fullName: System.Console.In
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter standard inndataflyten."
  remarks: "Denne egenskapen er satt til standard inndataflyten som standard. Denne egenskapen kan settes til en annen dataflyt med den <xref:System.Console.SetIn%2A>metoden.</xref:System.Console.SetIn%2A>       Leseoperasjoner pÃ¥ standard inndataflyten kjÃ¸re synkront. Det vil si blokkeres de til den angitte skrivebeskyttede operasjonen er fullfÃ¸rt. Dette kan ogsÃ¥ skje hvis en asynkron metode som <xref:System.IO.TextReader.ReadLineAsync%2A>, kalles pÃ¥ den <xref:System.IO.TextReader>objektet som ble returnert av egenskapen In.</xref:System.IO.TextReader> </xref:System.IO.TextReader.ReadLineAsync%2A>"
  example:
  - "The following sample illustrates the use of the `In` property.  \n  \n [!code-cpp[consolein#1](~/add/codesnippet/cpp/p-system.console.in_1.cpp)]\n [!code-cs[consolein#1](~/add/codesnippet/csharp/p-system.console.in_1.cs)]\n [!code-vb[consolein#1](~/add/codesnippet/visualbasic/p-system.console.in_1.vb)]"
  syntax:
    content: public static System.IO.TextReader In { get; }
    return:
      type: System.IO.TextReader
      description: "En <xref:System.IO.TextReader>som representerer standard inndataflyten.</xref:System.IO.TextReader>"
  overload: System.Console.In*
  exceptions: []
  platform:
  - net462
- uid: System.Console.InputEncoding
  id: InputEncoding
  parent: System.Console
  langs:
  - csharp
  name: InputEncoding
  nameWithType: Console.InputEncoding
  fullName: System.Console.InputEncoding
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter eller angir kodingen konsollen bruker til Ã¥ lese inndata."
  remarks: "Konsollen bruker inndataene kodingen for Ã¥ oversette inndata fra tastaturet til et tilsvarende tegn. Den angitte kodingen inneholder en annen kodeside som tilordnes 256 tastatur tegnkoder til enkelttegn. Annen kodesider inneholde ulike spesialtegn, vanligvis tilpasses for et sprÃ¥k eller en gruppe med sprÃ¥k.       Med start av [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], en egenskapen get-operasjon kan returnere bufrede verdien i stedet for konsollens gjeldende inndata koding. Dette kan skje hvis verdien for egenskapen InputEncoding er endret av en annen metode enn en tilordning til egenskapen InputEncoding, for eksempel kaller Windows `SetConsoleCP` funksjonen eller bruker den `chcp` fra en PowerShell-skript."
  syntax:
    content: public static System.Text.Encoding InputEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "Kodingen som brukes til Ã¥ lese konsollen inndata."
  overload: System.Console.InputEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Egenskapsverdien i set-operasjon <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en feil under kjÃ¸ring av denne operasjonen."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Programmet har ikke tillatelse til Ã¥ utfÃ¸re denne operasjonen."
  platform:
  - net462
- uid: System.Console.IsErrorRedirected
  id: IsErrorRedirected
  parent: System.Console
  langs:
  - csharp
  name: IsErrorRedirected
  nameWithType: Console.IsErrorRedirected
  fullName: System.Console.IsErrorRedirected
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter en verdi som angir om utdata feilflyt er omadressert fra standard feilflyt."
  syntax:
    content: public static bool IsErrorRedirected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis feilutdata omdirigeres; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.IsErrorRedirected*
  exceptions: []
  platform:
  - net462
- uid: System.Console.IsInputRedirected
  id: IsInputRedirected
  parent: System.Console
  langs:
  - csharp
  name: IsInputRedirected
  nameWithType: Console.IsInputRedirected
  fullName: System.Console.IsInputRedirected
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter en verdi som angir om inndata er omadressert fra standard inndataflyten."
  syntax:
    content: public static bool IsInputRedirected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis inndata er omadressert; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.IsInputRedirected*
  exceptions: []
  platform:
  - net462
- uid: System.Console.IsOutputRedirected
  id: IsOutputRedirected
  parent: System.Console
  langs:
  - csharp
  name: IsOutputRedirected
  nameWithType: Console.IsOutputRedirected
  fullName: System.Console.IsOutputRedirected
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter en verdi som angir om utdata er omadressert fra standard utdata dataflyten."
  syntax:
    content: public static bool IsOutputRedirected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis utdata omdirigeres; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.IsOutputRedirected*
  exceptions: []
  platform:
  - net462
- uid: System.Console.KeyAvailable
  id: KeyAvailable
  parent: System.Console
  langs:
  - csharp
  name: KeyAvailable
  nameWithType: Console.KeyAvailable
  fullName: System.Console.KeyAvailable
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter en verdi som angir om en nÃ¸kkel Trykk er tilgjengelig i den inngÃ¥ende dataflyten."
  remarks: "Egenskapsverdien returneres umiddelbart. egenskapen KeyAvailable blokkerer som er ikke inndataene til en nÃ¸kkel Trykk er tilgjengelig.       Bruk egenskapen KeyAvailable sammen med bare den <xref:System.Console.ReadKey%2A>metoden, ikke den <xref:System.Console.Read%2A>eller <xref:System.Console.ReadLine%2A>metoder.</xref:System.Console.ReadLine%2A> </xref:System.Console.Read%2A> </xref:System.Console.ReadKey%2A>"
  example:
  - "The following example demonstrates how to use the KeyAvailable property to create a loop that runs until a key is pressed.  \n  \n [!code-cs[console.keyavailable#1](~/add/codesnippet/csharp/p-system.console.keyavai_1.cs)]\n [!code-cpp[console.keyavailable#1](~/add/codesnippet/cpp/p-system.console.keyavai_1.cpp)]\n [!code-vb[console.keyavailable#1](~/add/codesnippet/visualbasic/p-system.console.keyavai_1.vb)]"
  syntax:
    content: public static bool KeyAvailable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis en nÃ¸kkel Trykk er tilgjengelig. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.KeyAvailable*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Standard inndata omdirigeres til en fil i stedet for tastaturet."
  platform:
  - net462
- uid: System.Console.LargestWindowHeight
  id: LargestWindowHeight
  parent: System.Console
  langs:
  - csharp
  name: LargestWindowHeight
  nameWithType: Console.LargestWindowHeight
  fullName: System.Console.LargestWindowHeight
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter det stÃ¸rste antallet konsollen vinduet rader, basert pÃ¥ gjeldende skrift- og lÃ¸sningen."
  syntax:
    content: public static int LargestWindowHeight { get; }
    return:
      type: System.Int32
      description: "HÃ¸yden pÃ¥ vinduet for hÃ¸yeste mulige konsoll mÃ¥lt i rader."
  overload: System.Console.LargestWindowHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Console.LargestWindowWidth
  id: LargestWindowWidth
  parent: System.Console
  langs:
  - csharp
  name: LargestWindowWidth
  nameWithType: Console.LargestWindowWidth
  fullName: System.Console.LargestWindowWidth
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter det stÃ¸rste antallet konsollen vinduet kolonner, basert pÃ¥ gjeldende skrift- og lÃ¸sningen."
  syntax:
    content: public static int LargestWindowWidth { get; }
    return:
      type: System.Int32
      description: "Bredden pÃ¥ vinduet for hÃ¸yeste mulige konsoll mÃ¥lt i kolonner."
  overload: System.Console.LargestWindowWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Kopierer en angitt kilde-omrÃ¥de pÃ¥ skjermbufferen til et angitt mÃ¥l."
  remarks: "Hvis parameterne mÃ¥l og kilde angi en plassering som er utenfor grensene for gjeldende skjermbufferen, kopieres bare delen av kilde-omrÃ¥det som passer i mÃ¥lomrÃ¥det. Det vil si beskjÃ¦res kilde-omrÃ¥det for Ã¥ tilpasses den gjeldende skjermbufferen.       Metoden MoveBufferArea kopierer kilde-omrÃ¥det til mÃ¥lomrÃ¥det. Hvis mÃ¥lomrÃ¥det ikke overlapper kilde-omrÃ¥det, fylt kilde-omrÃ¥det med tomme med og bakgrunnsfargen fargene. Hvis ikke, den Snittede delen av kilde-omrÃ¥det er ikke fylt ut."
  syntax:
    content: public static void MoveBufferArea (int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop);
    parameters:
    - id: sourceLeft
      type: System.Int32
      description: "Kolonnen lengst til venstre for kilde-omrÃ¥det."
    - id: sourceTop
      type: System.Int32
      description: "Den Ã¸verste raden i kilde-omrÃ¥det."
    - id: sourceWidth
      type: System.Int32
      description: "Antall kolonner i kilde-omrÃ¥det."
    - id: sourceHeight
      type: System.Int32
      description: "Antall rader i kilde-omrÃ¥det."
    - id: targetLeft
      type: System.Int32
      description: "Kolonnen lengst til venstre for mÃ¥lomrÃ¥det."
    - id: targetTop
      type: System.Int32
      description: "Den Ã¸verste raden i mÃ¥lomrÃ¥det."
  overload: System.Console.MoveBufferArea*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Ãn eller flere av parameterne er mindre enn null.       -or-       <code>sourceLeft</code> or <code>targetLeft</code> is greater than or equal to <>*>.       -or-       <code>sourceTop</code> or <code>targetTop</code> is greater than or equal to <>*>.       -or-       <code>sourceTop</code> + <code>sourceHeight</code> is greater than or equal to <>*>.       -or-       <code>sourceLeft</code> + <code>sourceWidth</code> is greater than or equal to <>*>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Brukeren har ikke tillatelse til Ã¥ utfÃ¸re denne handlingen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)
  id: MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)
  parent: System.Console
  langs:
  - csharp
  name: MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32,Char,ConsoleColor,ConsoleColor)
  nameWithType: Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32,Char,ConsoleColor,ConsoleColor)
  fullName: System.Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32,Char,ConsoleColor,ConsoleColor)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Kopierer en angitt kilde-omrÃ¥de pÃ¥ skjermbufferen til et angitt mÃ¥l."
  remarks: "Hvis parameterne mÃ¥l og kilde Angir en posisjon ligger utenfor grensene for gjeldende skjermbufferen, kopieres bare delen av kilde-omrÃ¥det som passer i mÃ¥lomrÃ¥det. Det vil si beskjÃ¦res kilde-omrÃ¥det for Ã¥ tilpasses den gjeldende skjermbufferen.       Den <xref:System.Console.MoveBufferArea%2A>metoden kopierer kilde-omrÃ¥det til mÃ¥lomrÃ¥det.</xref:System.Console.MoveBufferArea%2A> Hvis mÃ¥lomrÃ¥det ikke overlapper kilde-omrÃ¥det, kilde-omrÃ¥det er fylt med en skrÃ¥strek angitt av `sourceChar`, med fargene som er angitt av `sourceForeColor` og `sourceBackColor`. Hvis ikke, den Snittede delen av kilde-omrÃ¥det er ikke fylt ut.       Den <xref:System.Console.MoveBufferArea%2A>metoden utfÃ¸rer Ingen operasjon hvis `sourceWidth` eller `sourceHeight` er null.</xref:System.Console.MoveBufferArea%2A>"
  syntax:
    content: public static void MoveBufferArea (int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor);
    parameters:
    - id: sourceLeft
      type: System.Int32
      description: "Kolonnen lengst til venstre for kilde-omrÃ¥det."
    - id: sourceTop
      type: System.Int32
      description: "Den Ã¸verste raden i kilde-omrÃ¥det."
    - id: sourceWidth
      type: System.Int32
      description: "Antall kolonner i kilde-omrÃ¥det."
    - id: sourceHeight
      type: System.Int32
      description: "Antall rader i kilde-omrÃ¥det."
    - id: targetLeft
      type: System.Int32
      description: "Kolonnen lengst til venstre for mÃ¥lomrÃ¥det."
    - id: targetTop
      type: System.Int32
      description: "Den Ã¸verste raden i mÃ¥lomrÃ¥det."
    - id: sourceChar
      type: System.Char
      description: "Tegnet som brukes til Ã¥ fylle kildeomrÃ¥det."
    - id: sourceForeColor
      type: System.ConsoleColor
      description: "Forgrunnsfargen som brukes til Ã¥ fylle kildeomrÃ¥det."
    - id: sourceBackColor
      type: System.ConsoleColor
      description: "Bakgrunnsfargen som brukes til Ã¥ fylle kildeomrÃ¥det."
  overload: System.Console.MoveBufferArea*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Ãn eller flere av parameterne er mindre enn null.       -or-       <code>sourceLeft</code> or <code>targetLeft</code> is greater than or equal to <>*>.       -or-       <code>sourceTop</code> or <code>targetTop</code> is greater than or equal to <>*>.       -or-       <code>sourceTop</code> + <code>sourceHeight</code> is greater than or equal to <>*>.       -or-       <code>sourceLeft</code> + <code>sourceWidth</code> is greater than or equal to <>*>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "En eller begge parameterne for er ikke medlem av den <xref href=&quot;System.ConsoleColor&quot;> </xref> opplisting."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Brukeren har ikke tillatelse til Ã¥ utfÃ¸re denne handlingen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.NumberLock
  id: NumberLock
  parent: System.Console
  langs:
  - csharp
  name: NumberLock
  nameWithType: Console.NumberLock
  fullName: System.Console.NumberLock
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter en verdi som angir om antall LÃ¥s tastaturet vekslingen aktivert eller deaktivert."
  syntax:
    content: public static bool NumberLock { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis %{NUM/ LOCK er aktivert. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> hvis %{NUM/ LÃ¥s er deaktivert."
  overload: System.Console.NumberLock*
  exceptions: []
  platform:
  - net462
- uid: System.Console.OpenStandardError
  id: OpenStandardError
  parent: System.Console
  langs:
  - csharp
  name: OpenStandardError()
  nameWithType: Console.OpenStandardError()
  fullName: System.Console.OpenStandardError()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter standard feilflyt."
  remarks: "Denne metoden kan brukes til Ã¥ hente standard feilflyt pÃ¥ nytt etter at den har blitt endret av den <xref:System.Console.SetError%2A>metoden.</xref:System.Console.SetError%2A>"
  example:
  - "The following example is a simple text file viewer that displays the contents of one or more text files to the console. If there are no command line arguments, or if any files passed as command line arguments do not exist, the example calls the <xref:System.Console.SetError%2A> method to redirect error information to a file, calls the OpenStandardError method in the process of reacquiring the standard error stream, and indicates that error information was written to a file.  \n  \n [!code-cs[System.Console.OpenStandardError#1](~/add/codesnippet/csharp/m-system.console.opensta_4_1.cs)]\n [!code-vb[System.Console.OpenStandardError#1](~/add/codesnippet/visualbasic/m-system.console.opensta_4_1.vb)]  \n  \n Note that the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=fullName> property is set to `true` before reacquiring the error stream. This ensures that output will be sent to the console immediately rather than buffered."
  syntax:
    content: public static System.IO.Stream OpenStandardError ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "Standard feilflyt."
  overload: System.Console.OpenStandardError*
  exceptions: []
  platform:
  - net462
- uid: System.Console.OpenStandardError(System.Int32)
  id: OpenStandardError(System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: OpenStandardError(Int32)
  nameWithType: Console.OpenStandardError(Int32)
  fullName: System.Console.OpenStandardError(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter standard feilflyt, som er angitt som en angitte bufferstÃ¸rrelsen."
  remarks: "Denne metoden kan brukes til Ã¥ hente standard feilflyt pÃ¥ nytt etter at den har blitt endret av den <xref:System.Console.SetError%2A>metoden.</xref:System.Console.SetError%2A>"
  syntax:
    content: public static System.IO.Stream OpenStandardError (int bufferSize);
    parameters:
    - id: bufferSize
      type: System.Int32
      description: "Den interne flytbuffer."
    return:
      type: System.IO.Stream
      description: "Standard feilflyt."
  overload: System.Console.OpenStandardError*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>bufferSize</code>er mindre enn eller lik null."
  platform:
  - net462
- uid: System.Console.OpenStandardInput
  id: OpenStandardInput
  parent: System.Console
  langs:
  - csharp
  name: OpenStandardInput()
  nameWithType: Console.OpenStandardInput()
  fullName: System.Console.OpenStandardInput()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter standard inndataflyten."
  remarks: "Denne metoden kan brukes til Ã¥ hente standard inndataflyten pÃ¥ nytt etter at den har blitt endret av den <xref:System.Console.SetIn%2A>metoden.</xref:System.Console.SetIn%2A>"
  example:
  - "The following example illustrates the use of the `OpenStandardInput` property.  \n  \n [!code-cs[System.Console.OpenStandartInput#1](~/add/codesnippet/csharp/m-system.console.opensta_3_1.cs)]\n [!code-vb[System.Console.OpenStandartInput#1](~/add/codesnippet/visualbasic/m-system.console.opensta_3_1.vb)]\n [!code-cpp[System.Console.OpenStandartInput#1](~/add/codesnippet/cpp/m-system.console.opensta_3_1.cpp)]"
  syntax:
    content: public static System.IO.Stream OpenStandardInput ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "Standard inndataflyten."
  overload: System.Console.OpenStandardInput*
  exceptions: []
  platform:
  - net462
- uid: System.Console.OpenStandardInput(System.Int32)
  id: OpenStandardInput(System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: OpenStandardInput(Int32)
  nameWithType: Console.OpenStandardInput(Int32)
  fullName: System.Console.OpenStandardInput(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter standard inndataflyten, som er angitt som en angitte bufferstÃ¸rrelsen."
  remarks: "Denne metoden kan brukes til Ã¥ hente standard utdata dataflyten pÃ¥ nytt etter at den har blitt endret av den <xref:System.Console.SetIn%2A>metoden.</xref:System.Console.SetIn%2A>"
  example:
  - "The following example illustrates the use of the `OpenStandardInput` property.  \n  \n [!code-cs[System.Console.OpenStandartInput#1](~/add/codesnippet/csharp/m-system.console.opensta_2_1.cs)]\n [!code-vb[System.Console.OpenStandartInput#1](~/add/codesnippet/visualbasic/m-system.console.opensta_2_1.vb)]\n [!code-cpp[System.Console.OpenStandartInput#1](~/add/codesnippet/cpp/m-system.console.opensta_2_1.cpp)]"
  syntax:
    content: public static System.IO.Stream OpenStandardInput (int bufferSize);
    parameters:
    - id: bufferSize
      type: System.Int32
      description: "Den interne flytbuffer."
    return:
      type: System.IO.Stream
      description: "Standard inndataflyten."
  overload: System.Console.OpenStandardInput*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>bufferSize</code>er mindre enn eller lik null."
  platform:
  - net462
- uid: System.Console.OpenStandardOutput
  id: OpenStandardOutput
  parent: System.Console
  langs:
  - csharp
  name: OpenStandardOutput()
  nameWithType: Console.OpenStandardOutput()
  fullName: System.Console.OpenStandardOutput()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter standard utdata dataflyten."
  remarks: "Denne metoden kan brukes til Ã¥ hente standard utdata dataflyten pÃ¥ nytt etter at den har blitt endret av den <xref:System.Console.SetOut%2A>metoden.</xref:System.Console.SetOut%2A>"
  example:
  - "The following example illustrates the use of the OpenStandardOutput method. It replaces four consecutive space characters in a string with a tab character. To run it, you must supply two command-line arguments. The first is the name of an existing text file to redirect the standard input stream to. The second is the name of a file to redirect the standard output stream to. This file need not exist. If it does, its contents will be overwritten.  \n  \n [!code-cpp[System.Console-INSERTTABS#1](~/add/codesnippet/cpp/m-system.console.opensta_0_1.cpp)]\n [!code-vb[System.Console-INSERTTABS#1](~/add/codesnippet/visualbasic/m-system.console.opensta_0_1.vb)]\n [!code-cs[System.Console-INSERTTABS#1](~/add/codesnippet/csharp/m-system.console.opensta_0_1.cs)]"
  syntax:
    content: public static System.IO.Stream OpenStandardOutput ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "Standard utdata-dataflyten."
  overload: System.Console.OpenStandardOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Console.OpenStandardOutput(System.Int32)
  id: OpenStandardOutput(System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: OpenStandardOutput(Int32)
  nameWithType: Console.OpenStandardOutput(Int32)
  fullName: System.Console.OpenStandardOutput(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter dataflyten standard utdata, som er angitt som en angitte bufferstÃ¸rrelsen."
  remarks: "Denne metoden kan brukes til Ã¥ hente standard utdata dataflyten pÃ¥ nytt etter at den har blitt endret av den <xref:System.Console.SetOut%2A>metoden.</xref:System.Console.SetOut%2A>"
  example:
  - "The following example illustrates the use of the OpenStandardOutput method. It replaces four consecutive space characters in a string with a tab character. To run it, you must supply two command line arguments. The first is the name of an existing text file to redirect the standard input stream to. The second is the name of a file to redirect the standard output stream to. This file need not exist. If it does, its contents will be overwritten.  \n  \n [!code-cpp[System.Console-INSERTTABS#1](~/add/codesnippet/cpp/m-system.console.opensta_1_1.cpp)]\n [!code-vb[System.Console-INSERTTABS#1](~/add/codesnippet/visualbasic/m-system.console.opensta_1_1.vb)]\n [!code-cs[System.Console-INSERTTABS#1](~/add/codesnippet/csharp/m-system.console.opensta_1_1.cs)]"
  syntax:
    content: public static System.IO.Stream OpenStandardOutput (int bufferSize);
    parameters:
    - id: bufferSize
      type: System.Int32
      description: "Den interne flytbuffer."
    return:
      type: System.IO.Stream
      description: "Standard utdata-dataflyten."
  overload: System.Console.OpenStandardOutput*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>bufferSize</code>er mindre enn eller lik null."
  platform:
  - net462
- uid: System.Console.Out
  id: Out
  parent: System.Console
  langs:
  - csharp
  name: Out
  nameWithType: Console.Out
  fullName: System.Console.Out
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter standard utdata dataflyten."
  remarks: "Denne egenskapen er satt til standard utdata dataflyten som standard. Denne egenskapen kan settes til en annen dataflyt med den <xref:System.Console.SetOut%2A>metoden.</xref:System.Console.SetOut%2A>       Legg merke til at kall til `Console.Out.WriteLine` metodene er tilsvarer kall til tilsvarende <xref:System.Console.WriteLine%2A>metoder.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example uses the Out property to display an array containing the names of files in the application's current directory to the standard output device. It then sets the standard output to a file named Files.txt and lists the array elements to the file. Finally, it sets the output to the standard output stream and again displays the array elements to the standard output device.  \n  \n [!code-cs[System.Console.Out#1](~/add/codesnippet/csharp/p-system.console.out_1.cs)]\n [!code-vb[System.Console.Out#1](~/add/codesnippet/visualbasic/p-system.console.out_1.vb)]"
  syntax:
    content: public static System.IO.TextWriter Out { get; }
    return:
      type: System.IO.TextWriter
      description: "En <xref:System.IO.TextWriter>som representerer standard utdata dataflyten.</xref:System.IO.TextWriter>"
  overload: System.Console.Out*
  exceptions: []
  platform:
  - net462
- uid: System.Console.OutputEncoding
  id: OutputEncoding
  parent: System.Console
  langs:
  - csharp
  name: OutputEncoding
  nameWithType: Console.OutputEncoding
  fullName: System.Console.OutputEncoding
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter eller angir kodingen konsollen bruker til Ã¥ skrive utdata."
  remarks: "Konsollen bruker utdata kodingen oversette tegn som er skrevet av en applikasjon i tilsvarende konsollen visningstegn. Standard kodeside som konsollen bruker bestemmes av nasjonale innstillinger.       Med start av [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], en egenskapen get-operasjon kan returnere bufrede verdien i stedet for konsollens gjeldende output-koding. Dette kan skje hvis verdien for egenskapen OutputEncoding er endret av en annen metode enn en tilordning til egenskapen OutputEncoding, for eksempel kaller Windows `SetConsoleOutputCP` funksjonen."
  syntax:
    content: public static System.Text.Encoding OutputEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "Kodingen som brukes til Ã¥ skrive konsollutdata."
  overload: System.Console.OutputEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Egenskapsverdien i set-operasjon <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en feil under kjÃ¸ring av denne operasjonen."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Programmet har ikke tillatelse til Ã¥ utfÃ¸re denne operasjonen."
  platform:
  - net462
- uid: System.Console.Read
  id: Read
  parent: System.Console
  langs:
  - csharp
  name: Read()
  nameWithType: Console.Read()
  fullName: System.Console.Read()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Leser tegnet fra standard inndataflyten."
  remarks: "Metoden lese blokkerer returnerer mens du skriver inn tegn. avbrytes nÃ¥r du trykker den <xref:System.ConsoleKey>nÃ¸kkel.</xref:System.ConsoleKey> StandardstÃ¸rrelsen tilfÃ¸yer en plattform som er avhengige av linjen avslutting sekvens i inndataene (for eksempel Windows tilfÃ¸yer en vognretur og linjeskift retur sekvens). EtterfÃ¸lgende kall til metoden lese hente din inndata ett tegn om gangen. NÃ¥r det siste tegnet som hentes, lese blokkerer returnerer pÃ¥ nytt og syklusen gjentas.      > [!IMPORTANT] > Den <xref:System.Console.ReadLine%2A>metode, eller <xref:System.Console.KeyAvailable%2A>egenskapen og <xref:System.Console.ReadKey%2A>metoden er best Ã¥ med metoden lese.</xref:System.Console.ReadKey%2A> </xref:System.Console.KeyAvailable%2A> </xref:System.Console.ReadLine%2A>       Legg merke til at metoden ikke returnerer -1 Hvis du gjÃ¸r ett av fÃ¸lgende: â samtidig Trykk den <xref:System.ConsoleModifiers>tast og <xref:System.ConsoleKey>konsollen nÃ¸kkel (Ctrl + Z), som signaliserer til slutten av filen betingelsen.</xref:System.ConsoleKey> </xref:System.ConsoleModifiers>      -Trykk en tilsvarende nÃ¸kkel som signaliserer til slutten av filen betingelsen, for eksempel F6 funksjonen nÃ¸kkelen i Windows.      -Omadressere inndataflyten til en datakilde som en tekstfil, som har et tegn som slutten av filen."
  example:
  - "The following example demonstrates the Read method.  \n  \n [!code-cpp[console.read#1](~/add/codesnippet/cpp/m-system.console.read_1.cpp)]\n [!code-cs[console.read#1](~/add/codesnippet/csharp/m-system.console.read_1.cs)]\n [!code-vb[console.read#1](~/add/codesnippet/visualbasic/m-system.console.read_1.vb)]"
  syntax:
    content: public static int Read ();
    parameters: []
    return:
      type: System.Int32
      description: "Neste tegn fra den inngÃ¥ende dataflyten eller negative Ã©n (-1) Hvis det er ingen flere tegn som skal leses."
  overload: System.Console.Read*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.ReadKey
  id: ReadKey
  parent: System.Console
  langs:
  - csharp
  name: ReadKey()
  nameWithType: Console.ReadKey()
  fullName: System.Console.ReadKey()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter neste tegn eller funksjonen nÃ¸kkelen fra brukeren. NÃ¸kkelen trykket vises i konsollvinduet."
  remarks: "Metoden ReadKey venter det vil si blokker pÃ¥ trÃ¥d utsteder ReadKey-metoden til et tegn eller funksjonen tast. En nÃ¸kkel for tegn eller funksjonen kan trykkes sammen med Ã©n eller flere Alt, Ctrl eller SKIFT modifikator nÃ¸kler. Trykk en tast alene vil imidlertid ikke ReadKey-metoden til Ã¥ returnere.       Avhengig av programmet, kan du Ã¸nsker Ã¥ bruke metoden ReadKey sammen med den <xref:System.Console.KeyAvailable%2A>egenskapen.</xref:System.Console.KeyAvailable%2A>       Metoden ReadKey leser fra tastaturet selv om standard inndata omdirigeres til en fil med den <xref:System.Console.SetIn%2A>metoden.</xref:System.Console.SetIn%2A>"
  example:
  - "One of the most common uses of the ReadKey method is to halt program execution until the user presses a key and the app either terminates or displays an additional window of information. The following example uses the  ReadKey method to wait for the user to press the Enter key before terminating the app.  \n  \n [!code-cs[System.Console.ReadKey#1](~/add/codesnippet/csharp/m-system.console.readkey_1.cs)]\n [!code-vb[System.Console.ReadKey#1](~/add/codesnippet/visualbasic/m-system.console.readkey_1.vb)]  \n  \n Note that this overload of the <xref:System.Console.ReadKey%2A> method by default echoes any displayable keys that the user presses to the console. To suppress them, call the  <xref:System.Console.ReadKey%2A> method with an `intercept` argument of `true`.  \n  \n The following example uses the ReadKey method to display information about which key the user pressed..  \n  \n [!code-cs[console.readkey1#1](~/add/codesnippet/csharp/m-system.console.readkey_2.cs)]\n [!code-cpp[console.readkey1#1](~/add/codesnippet/cpp/m-system.console.readkey_2.cpp)]\n [!code-vb[console.readkey1#1](~/add/codesnippet/visualbasic/m-system.console.readkey_2.vb)]"
  syntax:
    content: public static ConsoleKeyInfo ReadKey ();
    parameters: []
    return:
      type: System.ConsoleKeyInfo
      description: "Et objekt som beskriver det <xref href=&quot;System.ConsoleKey&quot;> </xref> konstant og Unicode-tegn, hvis aktuelt, som samsvarer med nÃ¸kkelen trykket konsollen. Den <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> objektet beskriver ogsÃ¥, i en bitvis kombinasjon av <xref href=&quot;System.ConsoleModifiers&quot;> </xref> verdier, om Ã©n eller flere SKIFT, Alt eller Ctrl modifikator nÃ¸kler trykket samtidig med nÃ¸kkel konsollen."
  overload: System.Console.ReadKey*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref:System.Console.In*>egenskapen omadressert fra noen dataflyten enn konsollen.</xref:System.Console.In*>"
  platform:
  - net462
- uid: System.Console.ReadKey(System.Boolean)
  id: ReadKey(System.Boolean)
  parent: System.Console
  langs:
  - csharp
  name: ReadKey(Boolean)
  nameWithType: Console.ReadKey(Boolean)
  fullName: System.Console.ReadKey(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter neste tegn eller funksjonen nÃ¸kkelen fra brukeren. NÃ¸kkelen trykket vises eventuelt i konsollvinduet."
  remarks: "Den <xref:System.Console.ReadKey%2A>metoden venter, og det vil si blokker pÃ¥ trÃ¥d utstedelsen av <xref:System.Console.ReadKey%2A>metoden til et tegn eller funksjonen tast.</xref:System.Console.ReadKey%2A> </xref:System.Console.ReadKey%2A> En nÃ¸kkel for tegn eller funksjonen kan trykkes sammen med Ã©n eller flere Alt, Ctrl eller SKIFT modifikator nÃ¸kler. Imidlertid Trykk en tast for seg selv, vil ikke den <xref:System.Console.ReadKey%2A>metoden skal returneres.</xref:System.Console.ReadKey%2A>       Hvis den `intercept` parameteren er `true`trykket nÃ¸kkelen fanges og ikke vises i konsollvinduet; ellers, trykket nÃ¸kkelen vises.       Avhengig av programmet, kan du Ã¸nsker Ã¥ bruke den <xref:System.Console.ReadKey%2A>metoden sammen med den <xref:System.Console.KeyAvailable%2A>egenskapen.</xref:System.Console.KeyAvailable%2A> </xref:System.Console.ReadKey%2A>       Den <xref:System.Console.ReadKey%2A>metoden leser fra tastaturet selv om standard inndata omdirigeres til en fil med den <xref:System.Console.SetIn%2A>metoden.</xref:System.Console.SetIn%2A> </xref:System.Console.ReadKey%2A>"
  example:
  - "One of the most common uses of the <xref:System.Console.ReadKey%2A> method is to halt program execution until the user presses a key and the app either terminates or displays an additional window of information. The following example uses the  ReadKey method to wait for the user to press the Enter key before terminating the app. Note that, if the user presses any other key, it is not echoed to the console.  \n  \n [!code-vb[System.Console.ReadKey#2](~/add/codesnippet/visualbasic/m-system.console.readkey_1.vb)]\n [!code-cs[System.Console.ReadKey#2](~/add/codesnippet/csharp/m-system.console.readkey_1.cs)]  \n  \n The following example uses the ReadKey method to display information about the key pressed by a user without echoing that key to the console.  \n  \n [!code-cs[console.readkey2#1](~/add/codesnippet/csharp/m-system.console.readkey_2.cs)]\n [!code-cpp[console.readkey2#1](~/add/codesnippet/cpp/m-system.console.readkey_2.cpp)]\n [!code-vb[console.readkey2#1](~/add/codesnippet/visualbasic/m-system.console.readkey_2.vb)]"
  syntax:
    content: public static ConsoleKeyInfo ReadKey (bool intercept);
    parameters:
    - id: intercept
      type: System.Boolean
      description: "Bestemmer om du vil vise trykket nÃ¸kkelen i konsollvinduet. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>for ikke Ã¥ vise trykket nÃ¸kkelen. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ConsoleKeyInfo
      description: "Et objekt som beskriver det <xref href=&quot;System.ConsoleKey&quot;> </xref> konstant og Unicode-tegn, hvis aktuelt, som samsvarer med nÃ¸kkelen trykket konsollen. Den <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> objektet beskriver ogsÃ¥, i en bitvis kombinasjon av <xref href=&quot;System.ConsoleModifiers&quot;> </xref> verdier, om Ã©n eller flere SKIFT, Alt eller Ctrl modifikator nÃ¸kler trykket samtidig med nÃ¸kkel konsollen."
  overload: System.Console.ReadKey*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref:System.Console.In*>egenskapen omadressert fra noen dataflyten enn konsollen.</xref:System.Console.In*>"
  platform:
  - net462
- uid: System.Console.ReadLine
  id: ReadLine
  parent: System.Console
  langs:
  - csharp
  name: ReadLine()
  nameWithType: Console.ReadLine()
  fullName: System.Console.ReadLine()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Leser neste linje med tegn fra standard inndataflyten."
  remarks: "Metoden ReadLine leser en linje fra standard inndataflyten. (Definisjon av en linje, kan du se avsnittet etter fÃ¸lgende liste.) Dette betyr at: - Hvis standard inndata enheten er tastaturet ReadLine metoden blokker fÃ¸r brukeren trykker den **angi** nÃ¸kkel.           Ãn av de vanligste bruker ReadLine metode er Ã¥ stanse midlertidig kjÃ¸ring av programmet fÃ¸r du fjerner konsollen og vise ny informasjon til den eller spÃ¸r om brukeren vil trykk ENTER fÃ¸r du avslutter programmet. FÃ¸lgende eksempel illustrerer dette.           [!code-cpp[System.Console.ReadLine#6](~/add/codesnippet/cpp/m-system.console.readline_1.cpp)][!code-vb[System.Console.ReadLine#6](~/add/codesnippet/visualbasic/m-system.console.readline_1.vb)][!code-cs[System.Console.ReadLine#6](~/add/codesnippet/csharp/m-system.console.readline_1.cs) ] -hvis standard inndata omdirigeres til en fil, metoden ReadLine leser en tekstlinje fra en fil.             FÃ¸lgende er for eksempel en tekstfil navnet ReadLine1.txt: ```          This is the first line.       This is the second line.       This is the third line.       This is the fourth line.          ``` eksemplet bruker ReadLine-metoden til Ã¥ lese inndata som er omadressert fra en fil. Leseoperasjonen avslutter nÃ¥r metoden returnerer `null`, noe som angir at ingen linjer fortsatt leses.           [!code-cs[System.Console.ReadLine#3](~/add/codesnippet/csharp/m-system.console.readline_2.cs)][!code-vb[System.Console.ReadLine#3](~/add/codesnippet/visualbasic/m-system.console.readline_2.vb) ] etter kompilering av eksemplet til en kjÃ¸rbar fil navnet ReadLine1.exe, kan du kjÃ¸re den fra kommandolinjen med syntaksen ```       ReadLine1 < ReadLine1.txt       ``` lese innholdet i filen for Ã¥ vise dem til konsollen.             En linje som er definert som en sekvens med tegn etterfulgt av et linjeskift (heksadesimale 0x000d), linjeskift (heksadesimale 0x000a) eller verdien for den <xref:System.Environment.NewLine%2A?displayProperty=fullName>egenskapen.</xref:System.Environment.NewLine%2A?displayProperty=fullName> Den returnerte strengen inneholder ikke avslutter tegn. Som standard leses metoden inndata fra inndatabufferen en 256 tegn. Fordi dette inkluderer de <xref:System.Environment.NewLine%2A?displayProperty=fullName>tegn, metoden kan lese linjer som inneholder opptil 254 tegn.</xref:System.Environment.NewLine%2A?displayProperty=fullName> Du kan lese lengre linjer ved kall av <xref:System.Console.OpenStandardInput%28System.Int32%29>metode.</xref:System.Console.OpenStandardInput%28System.Int32%29>       Metoden ReadLine utfÃ¸rer synkront. Det vil si blokkerer den til en linje leses eller Ctrl + Z tastatur kombinasjonen trykkes. Den <xref:System.Console.In%2A>returnerer en <xref:System.IO.TextReader>-objektet som representerer standard inndataflyten og som har bÃ¥de en synkron <xref:System.IO.TextReader.ReadLine%2A?displayProperty=fullName>metoden og en asynkron <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=fullName>metode.</xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=fullName> </xref:System.IO.TextReader.ReadLine%2A?displayProperty=fullName> </xref:System.IO.TextReader> </xref:System.Console.In%2A> Imidlertid, nÃ¥r den brukes som standard inndatastrÃ¸mmen pÃ¥ i konsollen, den <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=fullName>utfÃ¸rer synkront i stedet for asynkront og returnerer en `Task<String>` bare nÃ¥r leseoperasjonen er fullfÃ¸rt.</xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=fullName>       Hvis denne metoden oppstÃ¥r en <xref:System.OutOfMemoryException>unntak, leserens plassering i den underliggende <xref:System.IO.Stream>objekt Avansert etter antall tegn metoden kunne lese, men tegnene lese allerede i den interne bufferen for ReadLine forkastes.</xref:System.IO.Stream> </xref:System.OutOfMemoryException> Siden ikke kan endre plasseringen av leseren i dataflyten, tegnene lese allerede er uopprettelig, og kan bare Ã¥pnes av starter <xref:System.IO.TextReader>.</xref:System.IO.TextReader> Hvis den fÃ¸rste posisjonen i dataflyten er ukjent eller Dataflyten stÃ¸tter ikke sÃ¸king, den underliggende <xref:System.IO.Stream>ogsÃ¥ mÃ¥ initialiseres.</xref:System.IO.Stream> UnngÃ¥ slike tilfeller og lage robust kode, bÃ¸r du bruke den <xref:System.Console.KeyAvailable%2A>egenskapen og <xref:System.Console.ReadKey%2A>metoden og store lesingen tegn i en diskblokker buffer.</xref:System.Console.ReadKey%2A> </xref:System.Console.KeyAvailable%2A>       Hvis trykkes Ctrl + Z-tegnet nÃ¥r metoden lesing inndata fra konsollen, returneres `null`. Dette lar brukeren Ã¥ hindre ytterligere inndata fra tastaturet nÃ¥r metoden ReadLine kalles i en slÃ¸yfe. FÃ¸lgende eksempel illustrerer dette scenarioet.       [!code-cpp[System.Console.ReadLine#1](~/add/codesnippet/cpp/m-system.console.readline_3.cpp)][!code-cs[System.Console.ReadLine#1](~/add/codesnippet/csharp/m-system.console.readline_3.cs)][!code-vb[System.Console.ReadLine#1    ](~/add/codesnippet/visualbasic/m-system.console.readline_3.vb)]"
  example:
  - "The following example requires two command line arguments: the name of an existing text file, and the name of a file to write the output to. It opens the existing text file and redirects the standard input from the keyboard to that file. It also redirects the standard output from the console to the output file. It then uses the ReadLine method to read each line in the file, replaces every sequence of four spaces with a tab character, and uses the <xref:System.Console.WriteLine%2A?displayProperty=fullName> method to write the result to the output file.  \n  \n [!code-cpp[System.Console-INSERTTABS#1](~/add/codesnippet/cpp/m-system.console.readline_4.cpp)]\n [!code-vb[System.Console-INSERTTABS#1](~/add/codesnippet/visualbasic/m-system.console.readline_4.vb)]\n [!code-cs[System.Console-INSERTTABS#1](~/add/codesnippet/csharp/m-system.console.readline_4.cs)]"
  syntax:
    content: public static string ReadLine ();
    parameters: []
    return:
      type: System.String
      description: "Neste linje med tegn fra den inngÃ¥ende dataflyten eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis det finnes ingen flere linjer."
  overload: System.Console.ReadLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne til Ã¥ tildele en buffer for den returnerte strengen."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Antallet tegn i neste linje i tegn er stÃ¸rre enn &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Console.ResetColor
  id: ResetColor
  parent: System.Console
  langs:
  - csharp
  name: ResetColor()
  nameWithType: Console.ResetColor()
  fullName: System.Console.ResetColor()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Setter forgrunnen og bakgrunnen konsollen til standardverdiene."
  remarks: "Farger og bakgrunnsfargen gjenopprettes fargene som da den gjeldende prosessen ble startet. Hvis du vil ha mer informasjon, se den <xref:System.Console.ForegroundColor%2A>og <xref:System.Console.BackgroundColor%2A>Egenskaper.</xref:System.Console.BackgroundColor%2A> </xref:System.Console.ForegroundColor%2A>"
  example:
  - "The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the <xref:System.Console.BackgroundColor%2A> and <xref:System.Console.ForegroundColor%2A> properties to variables. It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground. (If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the ResetColor method to restore the original console colors.  \n  \n [!code-vb[System.ConsoleColor#1](~/add/codesnippet/visualbasic/m-system.console.resetco_1.vb)]\n [!code-cs[System.ConsoleColor#1](~/add/codesnippet/csharp/m-system.console.resetco_1.cs)]"
  syntax:
    content: public static void ResetColor ();
    parameters: []
  overload: System.Console.ResetColor*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Brukeren har ikke tillatelse til Ã¥ utfÃ¸re denne handlingen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.SetBufferSize(System.Int32,System.Int32)
  id: SetBufferSize(System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: SetBufferSize(Int32,Int32)
  nameWithType: Console.SetBufferSize(Int32,Int32)
  fullName: System.Console.SetBufferSize(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Angir hÃ¸yden og bredden pÃ¥ skjermen buffer til de angitte verdiene."
  remarks: ''
  example:
  - "The following example demonstrates the <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the <xref:System.Console.SetWindowPosition%2A>, SetBufferSize, and <xref:System.Console.ReadKey%2A> methods. The example draws a grid pattern in the screen buffer based on the screen buffer width. Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed. The grid pattern helps you see the movement of the console window relative to the screen buffer.  \n  \n [!code-cpp[console.windowLT#1](~/add/codesnippet/cpp/m-system.console.setbuff_1.cpp)]\n [!code-vb[console.windowLT#1](~/add/codesnippet/visualbasic/m-system.console.setbuff_1.vb)]\n [!code-cs[console.windowLT#1](~/add/codesnippet/csharp/m-system.console.setbuff_1.cs)]"
  syntax:
    content: public static void SetBufferSize (int width, int height);
    parameters:
    - id: width
      type: System.Int32
      description: "Bredden pÃ¥ bufferomrÃ¥det mÃ¥lt i kolonner."
    - id: height
      type: System.Int32
      description: "HÃ¸yden pÃ¥ bufferomrÃ¥det mÃ¥lt i rader."
  overload: System.Console.SetBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>height</code>eller <code>width</code> er mindre enn eller lik null.       - eller - <code>height</code> eller <code>width</code> er stÃ¸rre enn eller lik &lt;xref:System.Int16.MaxValue?displayProperty=fullName&gt;.       -or-       <code>width</code> is less than <xref:System.Console.WindowLeft*> + <xref:System.Console.WindowWidth*>.       -or-       <code>height</code> is less than <xref:System.Console.WindowTop*> + <xref:System.Console.WindowHeight*>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Brukeren har ikke tillatelse til Ã¥ utfÃ¸re denne handlingen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.SetCursorPosition(System.Int32,System.Int32)
  id: SetCursorPosition(System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: SetCursorPosition(Int32,Int32)
  nameWithType: Console.SetCursorPosition(Int32,Int32)
  fullName: System.Console.SetCursorPosition(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Angir plasseringen av markÃ¸ren."
  remarks: "Bruk SetCursorPosition-metoden til Ã¥ angi en plassering neste Skriveoperasjonen i konsollvinduet starter. Hvis den angitte markÃ¸rposisjonen er utenfor omrÃ¥det som vises i Ã¸yeblikket i konsollvinduet, endres kommer fra vinduet automatisk hvis du vil at markÃ¸ren skal vises.       MarkÃ¸ren flyttes automatisk til neste tegnposisjonen hver gang en bokstav skrives til konsollvinduet. Hvis pekeren er pÃ¥ nedre hÃ¸yre tegnposisjonen vinduets konsollen, skrive neste operasjonen Ã¥rsaker konsollvinduet Ã¥ rulle slik markÃ¸ren er synlig. Hvis du vil skrive et tegn til nedre hÃ¸yre tegnposisjonen uten at konsollvinduet for Ã¥ rulle ved Ã¥ bruke den <xref:System.Console.MoveBufferArea%2A>metode for Ã¥ flytte et tegn til denne plasseringen.</xref:System.Console.MoveBufferArea%2A>"
  example:
  - "This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the SetCursorPosition and <xref:System.Console.Clear%2A> methods. The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of \"+\", \"&#124;\", and \"-\" strings. Note that the rectangle could be drawn with fewer steps using a combination of other strings.  \n  \n [!code-cs[console.cursorLTS#1](~/add/codesnippet/csharp/m-system.console.setcurs_1.cs)]\n [!code-cpp[console.cursorLTS#1](~/add/codesnippet/cpp/m-system.console.setcurs_1.cpp)]\n [!code-vb[console.cursorLTS#1](~/add/codesnippet/visualbasic/m-system.console.setcurs_1.vb)]"
  syntax:
    content: public static void SetCursorPosition (int left, int top);
    parameters:
    - id: left
      type: System.Int32
      description: "Kolonneplasseringen av markÃ¸ren. Kolonner nummererte fra venstre til hÃ¸yre starter ved 0."
    - id: top
      type: System.Int32
      description: "Posisjon for markÃ¸ren. Rader er nummererte fra topp til bunn starter ved 0."
  overload: System.Console.SetCursorPosition*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>left</code>eller <code>top</code> er mindre enn null.       - eller - <code>left</code> er stÃ¸rre enn eller lik <xref:System.Console.BufferWidth*>.       - eller - <code>top</code> er stÃ¸rre enn eller lik <xref:System.Console.BufferHeight*>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Brukeren har ikke tillatelse til Ã¥ utfÃ¸re denne handlingen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.SetError(System.IO.TextWriter)
  id: SetError(System.IO.TextWriter)
  parent: System.Console
  langs:
  - csharp
  name: SetError(TextWriter)
  nameWithType: Console.SetError(TextWriter)
  fullName: System.Console.SetError(TextWriter)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Angir den <xref:System.Console.Error*>egenskapen til den angitte <xref:System.IO.TextWriter>objektet.</xref:System.IO.TextWriter> </xref:System.Console.Error*>"
  remarks: "Som standard i <xref:System.Console.Error%2A>er satt til utdata standard feilflyt.</xref:System.Console.Error%2A>       En <xref:System.IO.StreamWriter>som innkapsler en <xref:System.IO.FileStream>kan brukes til Ã¥ sende meldinger til en fil.</xref:System.IO.FileStream> </xref:System.IO.StreamWriter>"
  example:
  - "The following example shows how to redirect the standard error stream to a file.  \n  \n [!code-vb[System.Console.SetError#1](~/add/codesnippet/visualbasic/m-system.console.seterro_1.vb)]\n [!code-cs[System.Console.SetError#1](~/add/codesnippet/csharp/m-system.console.seterro_1.cs)]\n [!code-cpp[System.Console.SetError#1](~/add/codesnippet/cpp/m-system.console.seterro_1.cpp)]"
  syntax:
    content: public static void SetError (System.IO.TextWriter newError);
    parameters:
    - id: newError
      type: System.IO.TextWriter
      description: "En dataflyt som er nye standard feil utdataene."
  overload: System.Console.SetError*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>newError</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke den nÃ¸dvendige tillatelsen."
  platform:
  - net462
- uid: System.Console.SetIn(System.IO.TextReader)
  id: SetIn(System.IO.TextReader)
  parent: System.Console
  langs:
  - csharp
  name: SetIn(TextReader)
  nameWithType: Console.SetIn(TextReader)
  fullName: System.Console.SetIn(TextReader)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Angir den <xref:System.Console.In*>egenskapen til den angitte <xref:System.IO.TextReader>objektet.</xref:System.IO.TextReader> </xref:System.Console.In*>"
  remarks: "Som standard i <xref:System.Console.In%2A>er satt til standard inndataflyten.</xref:System.Console.In%2A>       En <xref:System.IO.StreamReader>som innkapsler en <xref:System.IO.FileStream>kan brukes til Ã¥ motta inndata fra en fil.</xref:System.IO.FileStream> </xref:System.IO.StreamReader>"
  example:
  - "The following example illustrates the use of the SetIn method. It replaces four consecutive space characters in a string with a tab character. To run it, you must supply two command line arguments. The first is the name of an existing text file to redirect the standard input stream to. The second is the name of a file to redirect the standard output stream to. This file need not exist. If it does, its contents will be overwritten.  \n  \n [!code-cpp[System.Console-INSERTTABS#1](~/add/codesnippet/cpp/m-system.console.setin-s_1.cpp)]\n [!code-vb[System.Console-INSERTTABS#1](~/add/codesnippet/visualbasic/m-system.console.setin-s_1.vb)]\n [!code-cs[System.Console-INSERTTABS#1](~/add/codesnippet/csharp/m-system.console.setin-s_1.cs)]"
  syntax:
    content: public static void SetIn (System.IO.TextReader newIn);
    parameters:
    - id: newIn
      type: System.IO.TextReader
      description: "En dataflyt som er nye standard inndata."
  overload: System.Console.SetIn*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>newIn</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke den nÃ¸dvendige tillatelsen."
  platform:
  - net462
- uid: System.Console.SetOut(System.IO.TextWriter)
  id: SetOut(System.IO.TextWriter)
  parent: System.Console
  langs:
  - csharp
  name: SetOut(TextWriter)
  nameWithType: Console.SetOut(TextWriter)
  fullName: System.Console.SetOut(TextWriter)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Angir den <xref:System.Console.Out*>egenskapen til den angitte <xref:System.IO.TextWriter>objektet.</xref:System.IO.TextWriter> </xref:System.Console.Out*>"
  remarks: "Som standard i <xref:System.Console.Out%2A>er satt til standard utdata dataflyten.</xref:System.Console.Out%2A>       En <xref:System.IO.StreamWriter>som innkapsler en <xref:System.IO.FileStream>kan brukes til Ã¥ sende utdata til en fil.</xref:System.IO.FileStream> </xref:System.IO.StreamWriter> For eksempel: [!code-cs [System.Console.SetOut#1](~/add/codesnippet/csharp/m-system.console.setout-_1.cs)][!code-vb[System.Console.SetOut#1](~/add/codesnippet/visualbasic/m-system.console.setout-_1.vb)][!code-cpp[System.Console.SetOut#1    ](~/add/codesnippet/cpp/m-system.console.setout-_1.cpp)]"
  example:
  - "The following example illustrates the use of the SetOut method. It replaces four consecutive space characters in a string with a tab character. To run it, you must supply two command line arguments. The first is the name of an existing text file to redirect the standard input stream to. The second is the name of a file to redirect the standard output stream to. This file need not exist. If it does, its contents will be overwritten.  \n  \n [!code-cpp[System.Console-INSERTTABS#1](~/add/codesnippet/cpp/m-system.console.setout-_2.cpp)]\n [!code-vb[System.Console-INSERTTABS#1](~/add/codesnippet/visualbasic/m-system.console.setout-_2.vb)]\n [!code-cs[System.Console-INSERTTABS#1](~/add/codesnippet/csharp/m-system.console.setout-_2.cs)]"
  syntax:
    content: public static void SetOut (System.IO.TextWriter newOut);
    parameters:
    - id: newOut
      type: System.IO.TextWriter
      description: "En dataflyt som er nye standard utdata."
  overload: System.Console.SetOut*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>newOut</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke den nÃ¸dvendige tillatelsen."
  platform:
  - net462
- uid: System.Console.SetWindowPosition(System.Int32,System.Int32)
  id: SetWindowPosition(System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: SetWindowPosition(Int32,Int32)
  nameWithType: Console.SetWindowPosition(Int32,Int32)
  fullName: System.Console.SetWindowPosition(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Angir plasseringen av konsollvinduet i forhold til skjermbufferen."
  remarks: "Vinduet operativsystemet viser konsollvinduet, og konsollvinduet viser en del av skjermbufferen. Metoden SetWindowPosition pÃ¥virker plasseringen av konsollvinduet i forhold til skjermbufferen, men pÃ¥virker ikke plasseringen av operativsystemet vinduet i forhold til skrivebordet.       Konsollen og operativsystemet windows vanligvis pÃ¥virker ikke hverandre. Imidlertid Hvis skjermbufferen ikke kan vises i gjeldende grensene for konsollvinduet, operativsystemet automatisk fÃ¸yer til side-felt i vinduet operativsystemet. I dette tilfellet flytting av operativsystemet vinduet rullefeltet stolper pÃ¥virker plasseringen av konsollvinduet, og flytte konsollvinduet med metoden SetWindowPosition pÃ¥virker plasseringen av operativsystemet vinduet side-felt."
  example:
  - "The following example demonstrates the <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the SetWindowPosition, <xref:System.Console.SetBufferSize%2A>, and <xref:System.Console.ReadKey%2A> methods. The example draws a grid pattern in the screen buffer based on the screen buffer width. Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed. The grid pattern helps you see the movement of the console window relative to the screen buffer.  \n  \n [!code-cpp[console.windowLT#1](~/add/codesnippet/cpp/m-system.console.setwind_0_1.cpp)]\n [!code-vb[console.windowLT#1](~/add/codesnippet/visualbasic/m-system.console.setwind_0_1.vb)]\n [!code-cs[console.windowLT#1](~/add/codesnippet/csharp/m-system.console.setwind_0_1.cs)]"
  syntax:
    content: public static void SetWindowPosition (int left, int top);
    parameters:
    - id: left
      type: System.Int32
      description: "Kolonneplasseringen av Ã¸verste venstre hjÃ¸rne av konsollvinduet."
    - id: top
      type: System.Int32
      description: "Raden plasseringen av Ã¸verste venstre hjÃ¸rne av konsollvinduet."
  overload: System.Console.SetWindowPosition*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>left</code>eller <code>top</code> er mindre enn null.       - eller - <code>left</code>  + <xref:System.Console.WindowWidth*> er stÃ¸rre enn <xref:System.Console.BufferWidth*>.       - eller - <code>top</code>  + <xref:System.Console.WindowHeight*> er stÃ¸rre enn <xref:System.Console.BufferHeight*>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Brukeren har ikke tillatelse til Ã¥ utfÃ¸re denne handlingen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.SetWindowSize(System.Int32,System.Int32)
  id: SetWindowSize(System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: SetWindowSize(Int32,Int32)
  nameWithType: Console.SetWindowSize(Int32,Int32)
  fullName: System.Console.SetWindowSize(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Angir hÃ¸yden og bredden pÃ¥ konsollvinduet til de angitte verdiene."
  remarks: ''
  example:
  - "This example demonstrates the SetWindowSize method, and the <xref:System.Console.WindowWidth%2A> and <xref:System.Console.WindowHeight%2A> properties. You must run the example to see the full effect of changing the console window size.  \n  \n The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key to be pressed. When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press. Finally, when any key is pressed, the console window is restored to its original dimensions and the example terminates.  \n  \n [!code-cpp[console.setwindowsize#1](~/add/codesnippet/cpp/m-system.console.setwind_1_1.cpp)]\n [!code-vb[console.setwindowsize#1](~/add/codesnippet/visualbasic/m-system.console.setwind_1_1.vb)]\n [!code-cs[console.setwindowsize#1](~/add/codesnippet/csharp/m-system.console.setwind_1_1.cs)]"
  syntax:
    content: public static void SetWindowSize (int width, int height);
    parameters:
    - id: width
      type: System.Int32
      description: "Bredden pÃ¥ konsollvinduet mÃ¥lt i kolonner."
    - id: height
      type: System.Int32
      description: "HÃ¸yden pÃ¥ konsollvinduet mÃ¥lt i rader."
  overload: System.Console.SetWindowSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>width</code>eller <code>height</code> er mindre enn eller lik null.       - eller - <code>width</code> plus <xref:System.Console.WindowLeft*> eller <code>height</code> plus <xref:System.Console.WindowTop*> er stÃ¸rre enn eller lik &lt;xref:System.Int16.MaxValue?displayProperty=fullName&gt;.       - eller - <code>width</code> eller <code>height</code> er stÃ¸rre enn den stÃ¸rste mulige vindusbredde og hÃ¸yde for gjeldende skjermen opplÃ¸sning og konsollen skrift."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Brukeren har ikke tillatelse til Ã¥ utfÃ¸re denne handlingen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.Title
  id: Title
  parent: System.Console
  langs:
  - csharp
  name: Title
  nameWithType: Console.Title
  fullName: System.Console.Title
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter eller angir tittelen som skal vises i tittellinjen konsollen."
  remarks: ''
  example:
  - "This example demonstrates the Title property. The example displays the current title of the operating system window, waits for a key press, then displays a new title.  \n  \n [!code-cs[console.title#1](~/add/codesnippet/csharp/p-system.console.title_1.cs)]\n [!code-cpp[console.title#1](~/add/codesnippet/cpp/p-system.console.title_1.cpp)]\n [!code-vb[console.title#1](~/add/codesnippet/visualbasic/p-system.console.title_1.vb)]"
  syntax:
    content: public static string Title { get; set; }
    return:
      type: System.String
      description: "Strengen som skal vises i tittellinjen i konsollen. Den maksimale lengden pÃ¥ strengen tittel er 24500 tegn."
  overload: System.Console.Title*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "De hentede tittelen er lengre enn 24500 tegn i en get-operasjon."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den angitte tittelen er lengre enn 24500 tegn i en set-operasjon."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den angitte tittelen er i en set-operasjon <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.TreatControlCAsInput
  id: TreatControlCAsInput
  parent: System.Console
  langs:
  - csharp
  name: TreatControlCAsInput
  nameWithType: Console.TreatControlCAsInput
  fullName: System.Console.TreatControlCAsInput
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter eller angir en verdi som angir om kombinasjonen av den <xref href=&quot;System.ConsoleModifiers&quot;> </xref> tast og <xref href=&quot;System.ConsoleKey&quot;> </xref> konsollen nÃ¸kkel (Ctrl + C) behandles som vanlig inndata eller avbrudd som behandles av operativsystemet."
  remarks: "Hvis verdien for egenskapen TreatControlCAsInput `false` Ctrl + C trykkes, trykket nÃ¸klene lagres ikke i inndatabufferen og operativsystemet avslutter prosessen for Ã¸yeblikket kjÃ¸res. Dette er standardverdien.      > [!CAUTION] > Bruke egenskapen Persienner fordi sette verdien til `true` har en store effekt. De fleste brukere forventer Ctrl + C for Ã¥ avslutte en applikasjon i konsollen. Hvis du deaktiverer effekten av Ctrl + C, mÃ¥ brukeren huske Ã¥ bruke Ctrl + Break for Ã¥ avslutte programmet, som er en mindre kjent kombinasjonen."
  example:
  - "The following example demonstrates the TreatControlCAsInput property.  \n  \n [!code-cs[console.readkey1#1](~/add/codesnippet/csharp/p-system.console.treatco_1.cs)]\n [!code-cpp[console.readkey1#1](~/add/codesnippet/cpp/p-system.console.treatco_1.cpp)]\n [!code-vb[console.readkey1#1](~/add/codesnippet/visualbasic/p-system.console.treatco_1.vb)]"
  syntax:
    content: public static bool TreatControlCAsInput { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis Ctrl + C behandles som vanlig; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.TreatControlCAsInput*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Kan ikke hente eller angi inndata modus for inndatabufferen konsollen."
  platform:
  - net462
- uid: System.Console.WindowHeight
  id: WindowHeight
  parent: System.Console
  langs:
  - csharp
  name: WindowHeight
  nameWithType: Console.WindowHeight
  fullName: System.Console.WindowHeight
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter eller angir hÃ¸yden pÃ¥ konsollen vindusomrÃ¥det."
  remarks: "ForsÃ¸k pÃ¥ Ã¥ angi verdien for egenskapen WindowHeight utdata omadressert oppstÃ¥r enten en <xref:System.ArgumentOutOfRangeException>eller en <xref:System.IO.IOException>unntak.</xref:System.IO.IOException> </xref:System.ArgumentOutOfRangeException> For Ã¥ hindre at et unntak, kan du angi verdien for denne egenskapen bare hvis det <xref:System.Console.IsOutputRedirected%2A>returnerer `false`.</xref:System.Console.IsOutputRedirected%2A>"
  example:
  - "This example demonstrates the <xref:System.Console.SetWindowSize%2A> method, and the <xref:System.Console.WindowWidth%2A> and WindowHeight properties. You must run the example to see the full effect of changing the console window size.  \n  \n The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key press. When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press. Finally, when any key is pressed the console window is restored to its original dimensions and the example terminates.  \n  \n [!code-cpp[console.setwindowsize#1](~/add/codesnippet/cpp/p-system.console.windowh_1.cpp)]\n [!code-vb[console.setwindowsize#1](~/add/codesnippet/visualbasic/p-system.console.windowh_1.vb)]\n [!code-cs[console.setwindowsize#1](~/add/codesnippet/csharp/p-system.console.windowh_1.cs)]"
  syntax:
    content: public static int WindowHeight { get; set; }
    return:
      type: System.Int32
      description: "HÃ¸yden pÃ¥ konsollvinduet mÃ¥lt i rader."
  overload: System.Console.WindowHeight*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Verdien for den <> </> *> egenskapen eller verdien for egenskapen WindowHeight er mindre enn eller lik 0.       - eller - verdien for egenskapen WindowHeight pluss verdien for den <> </> *> egenskapen er stÃ¸rre enn eller lik &lt;xref:System.Int16.MaxValue?displayProperty=fullName&gt;.       - eller - verdien for den <xref:System.Console.WindowWidth*>egenskapen eller verdien for egenskapen WindowHeight er stÃ¸rre enn den stÃ¸rste mulige vindusbredde og hÃ¸yde for gjeldende skjermen opplÃ¸sning og konsollen skrift.</xref:System.Console.WindowWidth*>"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Feil under lesing eller skrive informasjon."
  platform:
  - net462
- uid: System.Console.WindowLeft
  id: WindowLeft
  parent: System.Console
  langs:
  - csharp
  name: WindowLeft
  nameWithType: Console.WindowLeft
  fullName: System.Console.WindowLeft
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter eller angir lengst til venstre plasseringen av konsollen vinduet omrÃ¥de i forhold til skjermbufferen."
  remarks: "Konsollen representerer et rektangulÃ¦rt vindu i et stÃ¸rre rektangulÃ¦r buffer-omrÃ¥de. BÃ¥de vinduet og bufferen mÃ¥les loddrett deres antall rader og vannrett deres antall kolonner. StÃ¸rrelsen pÃ¥ bufferomrÃ¥det er definert av den <xref:System.Console.BufferHeight%2A>og <xref:System.Console.BufferWidth%2A>Egenskaper.</xref:System.Console.BufferWidth%2A> </xref:System.Console.BufferHeight%2A> MÃ¥lene til konsollen omrÃ¥det er definert av den <xref:System.Console.WindowHeight%2A>og <xref:System.Console.WindowWidth%2A>Egenskaper.</xref:System.Console.WindowWidth%2A> </xref:System.Console.WindowHeight%2A> Egenskapen WindowLeft bestemmer hvilken for bufferomrÃ¥det kolonnene i den fÃ¸rste kolonnen i konsollvinduet. Verdien for egenskapen WindowLeft kan vÃ¦re i omrÃ¥det 0 til <xref:System.Console.BufferWidth%2A>- <xref:System.Console.WindowWidth%2A>.</xref:System.Console.WindowWidth%2A> </xref:System.Console.BufferWidth%2A> ForsÃ¸k pÃ¥ Ã¥ sette den til en verdi utenfor omrÃ¥det oppstÃ¥r en <xref:System.ArgumentOutOfRangeException>.</xref:System.ArgumentOutOfRangeException>       NÃ¥r et konsollvindu Ã¥pnes, er standardverdien for egenskapen WindowLeft null, som indikerer at den fÃ¸rste kolonnen vises av konsollen samsvarer med den fÃ¸rste kolonnen (kolonne i posisjon null) i bufferomrÃ¥det. Standardbredden pÃ¥ bÃ¥de konsollvinduet og bufferomrÃ¥det er 80 kolonner. Dette betyr at egenskapen WindowLeft kan endres hvis konsollvinduet gjÃ¸res smalere eller bufferomrÃ¥det gjÃ¸res bredere.       Merk at hvis bredden pÃ¥ bufferomrÃ¥det overskrider bredden pÃ¥ konsollvinduet, verdien for egenskapen WindowLeft justeres automatisk nÃ¥r det vannrette rullefeltet bruker til Ã¥ definere vinduets relasjon til bufferomrÃ¥det.       ForsÃ¸k pÃ¥ Ã¥ angi verdien for egenskapen WindowLeft nÃ¥r utdata er omadressert kaster en <xref:System.IO.IOException>unntak.</xref:System.IO.IOException> For Ã¥ forhindre unntaket, kan du angi verdien for denne egenskapen bare hvis det <xref:System.Console.IsOutputRedirected%2A>returnerer `false`.</xref:System.Console.IsOutputRedirected%2A>"
  example:
  - "The following example opens an 80-column console window and defines a buffer area that is 120 columns wide. It displays information on window and buffer size, and then waits for the user to press either the LEFT ARROW key or the RIGHT ARROW key. In the former case, it decrements the value of the WindowLeft property by one if the result is a legal value. In the latter case, it increases the value of the WindowLeft property by one if the result would be legal. Note that the example does not have to handle an <xref:System.ArgumentOutOfRangeException>, because it checks that the value to be assigned to the WindowLeft property is not negative and does not cause the sum of the WindowLeft and <xref:System.Console.WindowWidth%2A> properties to exceed the <xref:System.Console.BufferWidth%2A> property value.  \n  \n [!code-vb[System.Console.WindowLeft#1](~/add/codesnippet/visualbasic/p-system.console.windowl_1.vb)]\n [!code-cs[System.Console.WindowLeft#1](~/add/codesnippet/csharp/p-system.console.windowl_1.cs)]\n [!code-cpp[System.Console.WindowLeft#1](~/add/codesnippet/cpp/p-system.console.windowl_1.cpp)]"
  syntax:
    content: public static int WindowLeft { get; set; }
    return:
      type: System.Int32
      description: "Lengst til venstre konsollen vindusplasseringen mÃ¥lt i kolonner."
  overload: System.Console.WindowLeft*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "I en set-operasjon verdien som skal tilordnes er mindre enn null.       - eller - som fÃ¸lge av tilordningen WindowLeft pluss <> </> *> ville overskride <> </> *>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Feil under lesing eller skrive informasjon."
  platform:
  - net462
- uid: System.Console.WindowTop
  id: WindowTop
  parent: System.Console
  langs:
  - csharp
  name: WindowTop
  nameWithType: Console.WindowTop
  fullName: System.Console.WindowTop
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter eller angir den Ã¸verste posisjonen for konsollen vindusomrÃ¥det i forhold til skjermbufferen."
  remarks: "Konsollen representerer et rektangulÃ¦rt vindu i et stÃ¸rre rektangulÃ¦r buffer-omrÃ¥de. BÃ¥de vinduet og bufferen mÃ¥les loddrett deres antall rader og vannrett deres antall kolonner. StÃ¸rrelsen pÃ¥ bufferomrÃ¥det er definert av den <xref:System.Console.BufferHeight%2A>og <xref:System.Console.BufferWidth%2A>Egenskaper.</xref:System.Console.BufferWidth%2A> </xref:System.Console.BufferHeight%2A> MÃ¥lene til konsollen omrÃ¥det er definert av den <xref:System.Console.WindowHeight%2A>og <xref:System.Console.WindowWidth%2A>Egenskaper.</xref:System.Console.WindowWidth%2A> </xref:System.Console.WindowHeight%2A> Egenskapen WindowTop bestemmer hvilken raden i bufferomrÃ¥det vises i den fÃ¸rste kolonnen i konsollvinduet. Verdien for egenskapen WindowTop kan vÃ¦re i omrÃ¥det 0 til <xref:System.Console.BufferHeight%2A>- <xref:System.Console.WindowHeight%2A>.</xref:System.Console.WindowHeight%2A> </xref:System.Console.BufferHeight%2A> ForsÃ¸k pÃ¥ Ã¥ sette den til en verdi utenfor omrÃ¥det oppstÃ¥r en <xref:System.ArgumentOutOfRangeException>.</xref:System.ArgumentOutOfRangeException>       ForsÃ¸k pÃ¥ Ã¥ angi verdien for egenskapen WindowTop nÃ¥r utdata er omadressert kaster en <xref:System.IO.IOException>unntak.</xref:System.IO.IOException> For Ã¥ forhindre unntaket, kan du angi verdien for denne egenskapen bare hvis det <xref:System.Console.IsOutputRedirected%2A>returnerer `false`.</xref:System.Console.IsOutputRedirected%2A>"
  example:
  - "The following example demonstrates the <xref:System.Console.WindowLeft%2A>, WindowTop, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, and <xref:System.Console.ReadKey%2A> methods. The example draws a grid pattern in the screen buffer based on the screen buffer width. Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed. The grid pattern helps you see the movement of the console window relative to the screen buffer.  \n  \n [!code-cpp[console.windowLT#1](~/add/codesnippet/cpp/p-system.console.windowtop_1.cpp)]\n [!code-vb[console.windowLT#1](~/add/codesnippet/visualbasic/p-system.console.windowtop_1.vb)]\n [!code-cs[console.windowLT#1](~/add/codesnippet/csharp/p-system.console.windowtop_1.cs)]"
  syntax:
    content: public static int WindowTop { get; set; }
    return:
      type: System.Int32
      description: "Ãverste konsollen vindusplasseringen mÃ¥lt i rader."
  overload: System.Console.WindowTop*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "I en set-operasjon verdien som skal tilordnes er mindre enn null.       - eller - som fÃ¸lge av tilordningen WindowTop pluss <> </> *> ville overskride <> </> *>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Feil under lesing eller skrive informasjon."
  platform:
  - net462
- uid: System.Console.WindowWidth
  id: WindowWidth
  parent: System.Console
  langs:
  - csharp
  name: WindowWidth
  nameWithType: Console.WindowWidth
  fullName: System.Console.WindowWidth
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Henter eller angir bredden pÃ¥ konsollvinduet."
  remarks: "ForsÃ¸k pÃ¥ Ã¥ angi verdien for egenskapen WindowWidth utdata omadressert oppstÃ¥r enten en <xref:System.ArgumentOutOfRangeException>eller en <xref:System.IO.IOException>unntak.</xref:System.IO.IOException> </xref:System.ArgumentOutOfRangeException> For Ã¥ hindre at et unntak, kan du angi verdien for denne egenskapen bare hvis det <xref:System.Console.IsOutputRedirected%2A>returnerer `false`.</xref:System.Console.IsOutputRedirected%2A>"
  example:
  - "This example demonstrates the <xref:System.Console.SetWindowSize%2A> method, and the WindowWidth and <xref:System.Console.WindowHeight%2A> properties. You must run the example to see the full effect of changing the console window size.  \n  \n The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key press. When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press. Finally, when any key is pressed the console window is restored to its original dimensions and the example terminates.  \n  \n [!code-cpp[console.setwindowsize#1](~/add/codesnippet/cpp/p-system.console.windoww_1.cpp)]\n [!code-vb[console.setwindowsize#1](~/add/codesnippet/visualbasic/p-system.console.windoww_1.vb)]\n [!code-cs[console.setwindowsize#1](~/add/codesnippet/csharp/p-system.console.windoww_1.cs)]"
  syntax:
    content: public static int WindowWidth { get; set; }
    return:
      type: System.Int32
      description: "Bredden pÃ¥ konsollvinduet mÃ¥lt i kolonner."
  overload: System.Console.WindowWidth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Verdien for egenskapen WindowWidth eller verdien for den <> </> *> egenskapen er mindre enn eller lik 0.       - eller - verdien for den <> </> *> egenskapen pluss verdien for den <> </> *> egenskapen er stÃ¸rre enn eller lik &lt;xref:System.Int16.MaxValue?displayProperty=fullName&gt;.       - eller - verdien for egenskapen WindowWidth eller verdien for den <> </> *> egenskapen er stÃ¸rre enn den stÃ¸rste mulige vindusbredde og hÃ¸yde for gjeldende skjermen opplÃ¸sning og konsollen skrift."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Feil under lesing eller skrive informasjon."
  platform:
  - net462
- uid: System.Console.Write(System.Boolean)
  id: Write(System.Boolean)
  parent: System.Console
  langs:
  - csharp
  name: Write(Boolean)
  nameWithType: Console.Write(Boolean)
  fullName: System.Console.Write(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av den angitte boolske verdien til standard utdata dataflyten."
  remarks: "Tekstrepresentasjonen av `value` produseres ved Ã¥ ringe <xref:System.Boolean.ToString%2A?displayProperty=fullName>, som genererer enten <xref:System.Boolean.TrueString?displayProperty=fullName>eller <xref:System.Boolean.FalseString?displayProperty=fullName>.</xref:System.Boolean.FalseString?displayProperty=fullName> </xref:System.Boolean.TrueString?displayProperty=fullName> </xref:System.Boolean.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_8_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_8_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_8_1.cpp)]"
  syntax:
    content: public static void Write (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: "Verdien til Ã¥ skrive."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.Write(System.Char)
  id: Write(System.Char)
  parent: System.Console
  langs:
  - csharp
  name: Write(Char)
  nameWithType: Console.Write(Char)
  fullName: System.Console.Write(Char)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver den angitte verdien for Unicode-tegn til standard utdata dataflyten."
  remarks: ''
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_9_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_9_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_9_1.cpp)]"
  syntax:
    content: public static void Write (char value);
    parameters:
    - id: value
      type: System.Char
      description: "Verdien til Ã¥ skrive."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.Write(System.Char[])
  id: Write(System.Char[])
  parent: System.Console
  langs:
  - csharp
  name: Write(Char[])
  nameWithType: Console.Write(Char[])
  fullName: System.Console.Write(Char[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver den angitte matrisen Unicode-tegn til standard utdata dataflyten."
  syntax:
    content: public static void Write (char[] buffer);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "En matrise for Unicode-tegn."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.Write(System.Decimal)
  id: Write(System.Decimal)
  parent: System.Console
  langs:
  - csharp
  name: Write(Decimal)
  nameWithType: Console.Write(Decimal)
  fullName: System.Console.Write(Decimal)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av den angitte <xref:System.Decimal>verdien til standard utdata-dataflyt.</xref:System.Decimal>"
  remarks: "Tekstrepresentasjonen av `value` produseres ved Ã¥ kalle <xref:System.Decimal.ToString%2A?displayProperty=fullName>.</xref:System.Decimal.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_12_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_12_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_12_1.cpp)]"
  syntax:
    content: public static void Write (decimal value);
    parameters:
    - id: value
      type: System.Decimal
      description: "Verdien til Ã¥ skrive."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.Write(System.Double)
  id: Write(System.Double)
  parent: System.Console
  langs:
  - csharp
  name: Write(Double)
  nameWithType: Console.Write(Double)
  fullName: System.Console.Write(Double)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av den angitte verdien for dobbel presisjon flyttall til standard utdata dataflyten."
  remarks: "Tekstrepresentasjonen av `value` produseres ved Ã¥ kalle den <xref:System.Double.ToString%2A?displayProperty=fullName>metoden.</xref:System.Double.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_6_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_6_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_6_1.cpp)]"
  syntax:
    content: public static void Write (double value);
    parameters:
    - id: value
      type: System.Double
      description: "Verdien til Ã¥ skrive."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.Write(System.Int32)
  id: Write(System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: Write(Int32)
  nameWithType: Console.Write(Int32)
  fullName: System.Console.Write(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av angitte 32-biters heltall med fortegn-verdien til standard utdata dataflyten."
  remarks: "Tekstrepresentasjonen av `value` produseres ved Ã¥ kalle den <xref:System.Int32.ToString%2A?displayProperty=fullName>metoden.</xref:System.Int32.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_10_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_10_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_10_1.cpp)]"
  syntax:
    content: public static void Write (int value);
    parameters:
    - id: value
      type: System.Int32
      description: "Verdien til Ã¥ skrive."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.Write(System.Int64)
  id: Write(System.Int64)
  parent: System.Console
  langs:
  - csharp
  name: Write(Int64)
  nameWithType: Console.Write(Int64)
  fullName: System.Console.Write(Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av angitte 64-biters heltall med fortegn-verdien til standard utdata dataflyten."
  remarks: "Tekstrepresentasjonen av `value` produseres ved Ã¥ kalle den <xref:System.Int64.ToString%2A?displayProperty=fullName>metoden.</xref:System.Int64.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_0_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_0_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_0_1.cpp)]"
  syntax:
    content: public static void Write (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Verdien til Ã¥ skrive."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.Write(System.Object)
  id: Write(System.Object)
  parent: System.Console
  langs:
  - csharp
  name: Write(Object)
  nameWithType: Console.Write(Object)
  fullName: System.Console.Write(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av det angitte objektet til standard utdata dataflyten."
  remarks: "Hvis `value` er `null`, ingenting er skrevet, og ingen unntak. Hvis ikke, den `ToString` -metoden til `value` kalles for Ã¥ produsere strengrepresentasjon og Resultatstrengen skrives til standard utdata-dataflyt."
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_3_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_3_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_3_1.cpp)]"
  syntax:
    content: public static void Write (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Verdien for Ã¥ skrive, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.Write(System.Single)
  id: Write(System.Single)
  parent: System.Console
  langs:
  - csharp
  name: Write(Single)
  nameWithType: Console.Write(Single)
  fullName: System.Console.Write(Single)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av den angitte verdien for enkel presisjon flyttall til standard utdata dataflyten."
  remarks: "Tekstrepresentasjonen av `value` produseres ved Ã¥ kalle den <xref:System.Single.ToString%2A?displayProperty=fullName>metoden.</xref:System.Single.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_1_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_1_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_1_1.cpp)]"
  syntax:
    content: public static void Write (float value);
    parameters:
    - id: value
      type: System.Single
      description: "Verdien til Ã¥ skrive."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.Write(System.String)
  id: Write(System.String)
  parent: System.Console
  langs:
  - csharp
  name: Write(String)
  nameWithType: Console.Write(String)
  fullName: System.Console.Write(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver den angitte strengverdien til standard utdata dataflyten."
  remarks: "Hvis verdien er `null`, ingenting er skrevet til standard utdata-dataflyt."
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_5_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_5_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_5_1.cpp)]"
  syntax:
    content: public static void Write (string value);
    parameters:
    - id: value
      type: System.String
      description: "Verdien til Ã¥ skrive."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.Write(System.UInt32)
  id: Write(System.UInt32)
  parent: System.Console
  langs:
  - csharp
  name: Write(UInt32)
  nameWithType: Console.Write(UInt32)
  fullName: System.Console.Write(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av angitte 32-biters heltall uten fortegn-verdien til standard utdata dataflyten."
  remarks: "Tekstrepresentasjonen av `value` produseres ved Ã¥ kalle den <xref:System.UInt32.ToString%2A?displayProperty=fullName>metoden.</xref:System.UInt32.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_7_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_7_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_7_1.cpp)]"
  syntax:
    content: public static void Write (uint value);
    parameters:
    - id: value
      type: System.UInt32
      description: "Verdien til Ã¥ skrive."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.Write(System.UInt64)
  id: Write(System.UInt64)
  parent: System.Console
  langs:
  - csharp
  name: Write(UInt64)
  nameWithType: Console.Write(UInt64)
  fullName: System.Console.Write(UInt64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av angitte 64-biters heltall uten fortegn-verdien til standard utdata dataflyten."
  remarks: "Tekstrepresentasjonen av `value` produseres ved Ã¥ kalle den <xref:System.UInt64.ToString%2A?displayProperty=fullName>metoden.</xref:System.UInt64.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_4_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_4_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_4_1.cpp)]"
  syntax:
    content: public static void Write (ulong value);
    parameters:
    - id: value
      type: System.UInt64
      description: "Verdien til Ã¥ skrive."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.Write(System.String,System.Object)
  id: Write(System.String,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: Write(String,Object)
  nameWithType: Console.Write(String,Object)
  fullName: System.Console.Write(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av det angitte objektet til standard utdata dataflyten ved hjelp av angitt format-informasjon."
  remarks: "Denne metoden bruker den [sammensatte formatering funksjonen](~/add/includes/ajax-current-ext-md.md) av .NET Framework konvertere verdien for et objekt til tekstrepresentasjonen, og Bygg inn som representasjon i en streng. Resultatstrengen skrives til dataflyten utdata.       Den `format` parameteren bestÃ¥r av null eller flere kjÃ¸ringer av teksten intermixed med null eller flere indekserte plassholdere, som kalles format elementer som svarer til et objekt i parameterlisten av denne metoden. Formatering prosessen erstatter hver format-element med Tekstrepresentasjonen av verdien for det tilsvarende objektet.       Syntaksen i et format-element er `{` *indeksen*[`,`*justering*] [`:`*formatString*]`}`som angir en obligatorisk indeks, valgfrie lengden og justering av formatert tekst og en valgfri tegnstreng format-IDen som styrer hvordan verdien for den tilsvarende objekt er formatert.       .NET Framework gir omfattende formatering stÃ¸tte, som er beskrevet i flere detaljer i formatering emnene nedenfor.      -Hvis du vil ha mer informasjon om funksjonen for sammensatte formatering som stÃ¸ttes av metoder som <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, og noen overlastingene av <xref:System.Console.WriteLine%2A>, se [sammensatte formatering](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      -Hvis du vil ha mer informasjon om tallformat identifikatorer, se [Standard numerisk formatstrenger](~/add/includes/ajax-current-ext-md.md) og [egendefinert numerisk formatstrenger](~/add/includes/ajax-current-ext-md.md).      -Hvis du vil ha mer informasjon om dato og klokkeslett formatere identifikatorer, se [Standard dato og klokkeslett-formatstrenger](~/add/includes/ajax-current-ext-md.md) og [egendefinert dato og klokkeslett-formatstrenger](~/add/includes/ajax-current-ext-md.md).      -Hvis du vil ha mer informasjon om opplisting format identifikatorer, se [Format-Opplistingsstrenger](~/add/includes/ajax-current-ext-md.md).      -Hvis du vil ha mer informasjon om formatering, se [formateringstyper](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.  \n  \n [!code-cpp[console.writelineFmt1#1](~/add/codesnippet/cpp/m-system.console.write-s_2_1.cpp)]\n [!code-cs[console.writelineFmt1#1](~/add/codesnippet/csharp/m-system.console.write-s_2_1.cs)]\n [!code-vb[console.writelineFmt1#1](~/add/codesnippet/visualbasic/m-system.console.write-s_2_1.vb)]  \n  \n The following example illustrates the use of the Write method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_2_2.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_2_2.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_2_2.cpp)]"
  syntax:
    content: public static void Write (string format, object arg0);
    parameters:
    - id: format
      type: System.String
      description: "En sammensatt formatstreng (se merknader)."
    - id: arg0
      type: System.Object
      description: "Et objekt for Ã¥ skrive ved hjelp av `format`."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Formatangivelsen i <code> format </code> er ugyldig."
  platform:
  - net462
- uid: System.Console.Write(System.String,System.Object[])
  id: Write(System.String,System.Object[])
  parent: System.Console
  langs:
  - csharp
  name: Write(String,Object[])
  nameWithType: Console.Write(String,Object[])
  fullName: System.Console.Write(String,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av den angitte matrisen av objekter til standard utdata dataflyten ved hjelp av angitt format-informasjon."
  remarks: "Denne metoden bruker den [sammensatte formatering funksjonen](~/add/includes/ajax-current-ext-md.md) av .NET Framework konvertere verdien for et objekt til tekstrepresentasjonen, og Bygg inn som representasjon i en streng. Resultatstrengen skrives til dataflyten utdata.       Den `format` parameteren bestÃ¥r av null eller flere kjÃ¸ringer av teksten intermixed med null eller flere indekserte plassholdere, som kalles format elementer som svarer til et objekt i parameterlisten av denne metoden. Formatering prosessen erstatter hver format-element med Tekstrepresentasjonen av verdien for det tilsvarende objektet.       Syntaksen i et format-element er `{` *indeksen*[`,`*justering*] [`:`*formatString*]`}`som angir en obligatorisk indeks, valgfrie lengden og justering av formatert tekst og en valgfri tegnstreng format-IDen som styrer hvordan verdien for den tilsvarende objekt er formatert.       .NET Framework gir omfattende formatering stÃ¸tte, som er beskrevet i flere detaljer i formatering emnene nedenfor.      -Hvis du vil ha mer informasjon om funksjonen for sammensatte formatering som stÃ¸ttes av metoder som <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, og noen overlastingene av <xref:System.Console.WriteLine%2A>, se [sammensatte formatering](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      -Hvis du vil ha mer informasjon om tallformat identifikatorer, se [Standard numerisk formatstrenger](~/add/includes/ajax-current-ext-md.md) og [egendefinert numerisk formatstrenger](~/add/includes/ajax-current-ext-md.md).      -Hvis du vil ha mer informasjon om dato og klokkeslett formatere identifikatorer, se [Standard dato og klokkeslett-formatstrenger](~/add/includes/ajax-current-ext-md.md) og [egendefinert dato og klokkeslett-formatstrenger](~/add/includes/ajax-current-ext-md.md).      -Hvis du vil ha mer informasjon om opplisting format identifikatorer, se [Format-Opplistingsstrenger](~/add/includes/ajax-current-ext-md.md).      -Hvis du vil ha mer informasjon om formatering, se [formateringstyper](~/add/includes/ajax-current-ext-md.md).       Den `arg` parameteren er en parametermatrise. Argumenter kan sendes til metoden som en matrise eller liste med fem eller flere elementer. Eksemplene viser begge formene av metodekallet."
  example:
  - "The following example defines a `Person` class with a number of properties that provide information about a person. Its `GetDescription` method returns an array that contains all of the property values except one. The example then uses the array returned by the  `GetDescription` method  to display the values of the Person object.  \n  \n [!code-cs[System.Console.Write#1](~/add/codesnippet/csharp/m-system.console.write-s_13_1.cs)]\n [!code-vb[System.Console.Write#1](~/add/codesnippet/visualbasic/m-system.console.write-s_13_1.vb)]  \n  \n Note that the example calls the Write method rather than the [WriteLine(String,âObject\\[\\])](assetId:///M:System.Console.WriteLine(System.String,System.Object[])?qualifyHint=False&autoUpgrade=False) method because it attempts to display the value of the `Person.Remarks` property on the same line. To do this, it examines the value of the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.WindowWidth%2A> properties to determine whether there is enough space for the remark to fit.  If there is, it displays the line. If not, it writes a line, indents three spaces, and displays the remark.  \n  \n The following example is identical to the first, except that it supplies a five-item list as the `arg` argument instead of a parameter array.  \n  \n [!code-vb[System.Console.Write#2](~/add/codesnippet/visualbasic/m-system.console.write-s_13_2.vb)]\n [!code-cs[System.Console.Write#2](~/add/codesnippet/csharp/m-system.console.write-s_13_2.cs)]"
  syntax:
    content: public static void Write (string format, object[] arg);
    parameters:
    - id: format
      type: System.String
      description: "En sammensatt formatstreng (se merknader)."
    - id: arg
      type: System.Object[]
      description: "En matrise av objekter til Ã¥ skrive ved hjelp av `format`."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>or <code>arg</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Formatangivelsen i <code> format </code> er ugyldig."
  platform:
  - net462
- uid: System.Console.Write(System.Char[],System.Int32,System.Int32)
  id: Write(System.Char[],System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: Write(Char[],Int32,Int32)
  nameWithType: Console.Write(Char[],Int32,Int32)
  fullName: System.Console.Write(Char[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver den angitte subarray Unicode-tegn til standard utdata dataflyten."
  remarks: "Denne metoden skriver `count` tegn med Start fra posisjon `index` av `buffer` til standard utdata-dataflyt."
  syntax:
    content: public static void Write (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "En matrise med Unicode-tegn."
    - id: index
      type: System.Int32
      description: "Startposisjonen i `buffer`."
    - id: count
      type: System.Int32
      description: "Antallet tegn du skriver."
  overload: System.Console.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>eller <code>count</code> er mindre enn null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>index</code>pluss <code>count</code> angi en plassering som ikke er i <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.Write(System.String,System.Object,System.Object)
  id: Write(System.String,System.Object,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: Write(String,Object,Object)
  nameWithType: Console.Write(String,Object,Object)
  fullName: System.Console.Write(String,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av de angitte objektene til standard utdata dataflyten ved hjelp av angitt format-informasjon."
  remarks: "Denne metoden bruker den [sammensatte formatering funksjonen](~/add/includes/ajax-current-ext-md.md) av .NET Framework konvertere verdien for et objekt til tekstrepresentasjonen, og Bygg inn som representasjon i en streng. Resultatstrengen skrives til dataflyten utdata.       Den `format` parameteren bestÃ¥r av null eller flere kjÃ¸ringer av teksten intermixed med null eller flere indekserte plassholdere, som kalles format elementer som svarer til et objekt i parameterlisten av denne metoden. Formatering prosessen erstatter hver format-element med Tekstrepresentasjonen av verdien for det tilsvarende objektet.       Syntaksen i et format-element er `{` *indeksen*[`,`*justering*] [`:`*formatString*]`}`som angir en obligatorisk indeks, valgfrie lengden og justering av formatert tekst og en valgfri tegnstreng format-IDen som styrer hvordan verdien for den tilsvarende objekt er formatert.       .NET Framework gir omfattende formatering stÃ¸tte, som er beskrevet i flere detaljer i formatering emnene nedenfor.      -Hvis du vil ha mer informasjon om funksjonen for sammensatte formatering som stÃ¸ttes av metoder som <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, og noen overlastingene av <xref:System.Console.WriteLine%2A>, se [sammensatte formatering](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      -Hvis du vil ha mer informasjon om tallformat identifikatorer, se [Standard numerisk formatstrenger](~/add/includes/ajax-current-ext-md.md) og [egendefinert numerisk formatstrenger](~/add/includes/ajax-current-ext-md.md).      -Hvis du vil ha mer informasjon om dato og klokkeslett formatere identifikatorer, se [Standard dato og klokkeslett-formatstrenger](~/add/includes/ajax-current-ext-md.md) og [egendefinert dato og klokkeslett-formatstrenger](~/add/includes/ajax-current-ext-md.md).      -Hvis du vil ha mer informasjon om opplisting format identifikatorer, se [Format-Opplistingsstrenger](~/add/includes/ajax-current-ext-md.md).      -Hvis du vil ha mer informasjon om formatering, se [formateringstyper](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.  \n  \n [!code-cpp[console.writelineFmt1#1](~/add/codesnippet/cpp/m-system.console.write-s_14_1.cpp)]\n [!code-cs[console.writelineFmt1#1](~/add/codesnippet/csharp/m-system.console.write-s_14_1.cs)]\n [!code-vb[console.writelineFmt1#1](~/add/codesnippet/visualbasic/m-system.console.write-s_14_1.vb)]  \n  \n The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_14_2.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_14_2.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_14_2.cpp)]"
  syntax:
    content: public static void Write (string format, object arg0, object arg1);
    parameters:
    - id: format
      type: System.String
      description: "En sammensatt formatstreng (se merknader)."
    - id: arg0
      type: System.Object
      description: "Det fÃ¸rste objektet til Ã¥ skrive ved hjelp av `format`."
    - id: arg1
      type: System.Object
      description: "Det andre objektet til Ã¥ skrive ved hjelp av `format`."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Formatangivelsen i <code> format </code> er ugyldig."
  platform:
  - net462
- uid: System.Console.Write(System.String,System.Object,System.Object,System.Object)
  id: Write(System.String,System.Object,System.Object,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: Write(String,Object,Object,Object)
  nameWithType: Console.Write(String,Object,Object,Object)
  fullName: System.Console.Write(String,Object,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av de angitte objektene til standard utdata dataflyten ved hjelp av angitt format-informasjon."
  remarks: "Denne metoden bruker den [sammensatte formatering funksjonen](~/add/includes/ajax-current-ext-md.md) av .NET Framework konvertere verdien for et objekt til tekstrepresentasjonen, og Bygg inn som representasjon i en streng. Resultatstrengen skrives til dataflyten utdata.       Den `format` parameteren bestÃ¥r av null eller flere kjÃ¸ringer av teksten intermixed med null eller flere indekserte plassholdere, som kalles format elementer som svarer til et objekt i parameterlisten av denne metoden. Formatering prosessen erstatter hver format-element med Tekstrepresentasjonen av verdien for det tilsvarende objektet.       Syntaksen i et format-element er `{` *indeksen*[`,`*justering*] [`:`*formatString*]`}`som angir en obligatorisk indeks, valgfrie lengden og justering av formatert tekst og en valgfri tegnstreng format-IDen som styrer hvordan verdien for den tilsvarende objekt er formatert.       .NET Framework gir omfattende formatering stÃ¸tte, som er beskrevet i flere detaljer i formatering emnene nedenfor.      -Hvis du vil ha mer informasjon om funksjonen for sammensatte formatering som stÃ¸ttes av metoder som <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, og noen overlastingene av <xref:System.Console.WriteLine%2A>, se [sammensatte formatering](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      -Hvis du vil ha mer informasjon om tallformat identifikatorer, se [Standard numerisk formatstrenger](~/add/includes/ajax-current-ext-md.md) og [egendefinert numerisk formatstrenger](~/add/includes/ajax-current-ext-md.md).      -Hvis du vil ha mer informasjon om dato og klokkeslett formatere identifikatorer, se [Standard dato og klokkeslett-formatstrenger](~/add/includes/ajax-current-ext-md.md) og [egendefinert dato og klokkeslett-formatstrenger](~/add/includes/ajax-current-ext-md.md).      -Hvis du vil ha mer informasjon om opplisting format identifikatorer, se [Format-Opplistingsstrenger](~/add/includes/ajax-current-ext-md.md).      -Hvis du vil ha mer informasjon om formatering, se [formateringstyper](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.  \n  \n [!code-cpp[console.writelineFmt1#1](~/add/codesnippet/cpp/m-system.console.write-s_11_1.cpp)]\n [!code-cs[console.writelineFmt1#1](~/add/codesnippet/csharp/m-system.console.write-s_11_1.cs)]\n [!code-vb[console.writelineFmt1#1](~/add/codesnippet/visualbasic/m-system.console.write-s_11_1.vb)]  \n  \n The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_11_2.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_11_2.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_11_2.cpp)]"
  syntax:
    content: public static void Write (string format, object arg0, object arg1, object arg2);
    parameters:
    - id: format
      type: System.String
      description: "En sammensatt formatstreng (se merknader)."
    - id: arg0
      type: System.Object
      description: "Det fÃ¸rste objektet til Ã¥ skrive ved hjelp av `format`."
    - id: arg1
      type: System.Object
      description: "Det andre objektet til Ã¥ skrive ved hjelp av `format`."
    - id: arg2
      type: System.Object
      description: "Det tredje objektet til Ã¥ skrive ved hjelp av `format`."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Formatangivelsen i <code> format </code> er ugyldig."
  platform:
  - net462
- uid: System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)
  id: Write(System.String,System.Object,System.Object,System.Object,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: Write(String,Object,Object,Object,Object)
  nameWithType: Console.Write(String,Object,Object,Object,Object)
  fullName: System.Console.Write(String,Object,Object,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av angitte objektene og variabel lengde parameterlister til standard utdata dataflyten ved hjelp av angitt format-informasjon."
  remarks: "> [!NOTE]\n>  This API is not CLS-compliant. The CLS-compliant alternative is [Console.Write(String,âObject\\[\\])](assetId:///M:System.Console.Write(System.String,System.Object[])?qualifyHint=True&autoUpgrade=False). The C# and Visual Basic compilers automatically resolve a call to this method as a call to [Console.Write(String,âObject\\[\\])](assetId:///M:System.Console.Write(System.String,System.Object[])?qualifyHint=True&autoUpgrade=False).  \n  \n This method uses the [composite formatting feature](~/add/includes/ajax-current-ext-md.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string. The resulting string is written to the output stream.  \n  \n The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method. The formatting process replaces each format item with the text representation of the value of the corresponding object.  \n  \n The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.  \n  \n The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.  \n  \n-   For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](../Topic/Composite%20Formatting.md).  \n  \n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/add/includes/ajax-current-ext-md.md) and [Custom Numeric Format Strings](~/add/includes/ajax-current-ext-md.md).  \n  \n-   For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/add/includes/ajax-current-ext-md.md) and [Custom Date and Time Format Strings](~/add/includes/ajax-current-ext-md.md).  \n  \n-   For more information about enumeration format specifiers, see [Enumeration Format Strings](~/add/includes/ajax-current-ext-md.md).  \n  \n-   For more information about formatting, see [Formatting Types](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example illustrates the use of variable parameters with the Write method. The method is called with a composite format string and five format items.  \n  \n [!code-cpp[System.Console.Write#3](~/add/codesnippet/cpp/04cf3884-a7cc-4915-bdb2-_1.cpp)]"
  syntax:
    content: public static void Write (string format, object arg0, object arg1, object arg2, object arg3);
    parameters:
    - id: format
      type: System.String
      description: "En sammensatt formatstreng (se merknader)."
    - id: arg0
      type: System.Object
      description: "Det fÃ¸rste objektet til Ã¥ skrive ved hjelp av `format`."
    - id: arg1
      type: System.Object
      description: "Det andre objektet til Ã¥ skrive ved hjelp av `format`."
    - id: arg2
      type: System.Object
      description: "Det tredje objektet til Ã¥ skrive ved hjelp av `format`."
    - id: arg3
      type: System.Object
      description: "Fjerde objektet til Ã¥ skrive ved hjelp av `format`."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Formatangivelsen i <code> format </code> er ugyldig."
  platform:
  - net462
- uid: System.Console.WriteLine
  id: WriteLine
  parent: System.Console
  langs:
  - csharp
  name: WriteLine()
  nameWithType: Console.WriteLine()
  fullName: System.Console.WriteLine()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver gjeldende linje terminator til standard utdata dataflyten."
  remarks: "Standard linje terminator er en streng som inneholder verdien er linjeskift etterfulgt av linjeskifttegn (&quot;\\r&quot; i C# eller `vbCrLf` i Visual Basic). Du kan endre linje terminator ved Ã¥ angi den <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName>for den <xref:System.Console.Out%2A>egenskapen til en annen streng.</xref:System.Console.Out%2A> </xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> Eksemplet inneholder et bilde."
  example:
  - "The example changes the line terminator from its default value of \"\\r\\n\" or `vbCrLf` to \"\\r\\n\\r\\n\" or `vbCrLf` + `vbCrLf`. It then calls the WriteLine and <xref:System.Console.WriteLine%28System.String%29> methods to display output to the console.  \n  \n [!code-cpp[System.Console.WriteLine#2](~/add/codesnippet/cpp/m-system.console.writeline_1.cpp)]\n [!code-cs[System.Console.WriteLine#2](~/add/codesnippet/csharp/m-system.console.writeline_1.cs)]\n [!code-vb[System.Console.WriteLine#2](~/add/codesnippet/visualbasic/m-system.console.writeline_1.vb)]"
  syntax:
    content: public static void WriteLine ();
    parameters: []
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Boolean)
  id: WriteLine(System.Boolean)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Boolean)
  nameWithType: Console.WriteLine(Boolean)
  fullName: System.Console.WriteLine(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av den angitte boolske verdien, etterfulgt av den gjeldende linje-terminator til standard utdata-dataflyt."
  remarks: "Tekstrepresentasjonen av `value` produseres ved Ã¥ kalle den <xref:System.Boolean.ToString%2A?displayProperty=fullName>metoden.</xref:System.Boolean.ToString%2A?displayProperty=fullName>       Du finner mer informasjon om linje terminator i avsnittet Merknader for den <xref:System.Console.WriteLine%2A>metode som har ingen parametere.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example generates ten random integers and uses the WriteLine method to indicate whether they are even.  \n  \n [!code-cpp[System.Console.WriteLine#4](~/add/codesnippet/cpp/m-system.console.writeli_5_1.cpp)]\n [!code-cs[System.Console.WriteLine#4](~/add/codesnippet/csharp/m-system.console.writeli_5_1.cs)]\n [!code-vb[System.Console.WriteLine#4](~/add/codesnippet/visualbasic/m-system.console.writeli_5_1.vb)]"
  syntax:
    content: public static void WriteLine (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: "Verdien til Ã¥ skrive."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Char)
  id: WriteLine(System.Char)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Char)
  nameWithType: Console.WriteLine(Char)
  fullName: System.Console.WriteLine(Char)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver angitt Unicode-tegn, etterfulgt av gjeldende linje terminator, verdien til standard utdata-dataflyt."
  remarks: "Du finner mer informasjon om linje terminator i avsnittet Merknader for den <xref:System.Console.WriteLine%2A>metode som har ingen parametere.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the WriteLine method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_13_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_13_1.vb)]"
  syntax:
    content: public static void WriteLine (char value);
    parameters:
    - id: value
      type: System.Char
      description: "Verdien til Ã¥ skrive."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Char[])
  id: WriteLine(System.Char[])
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Char[])
  nameWithType: Console.WriteLine(Char[])
  fullName: System.Console.WriteLine(Char[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver den angitte matrisen Unicode-tegn, etterfulgt av den gjeldende linje-terminator til standard utdata-dataflyt."
  remarks: "Du finner mer informasjon om linje terminator i avsnittet Merknader for den <xref:System.Console.WriteLine%2A>metode som har ingen parametere.</xref:System.Console.WriteLine%2A>"
  syntax:
    content: public static void WriteLine (char[] buffer);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "En matrise for Unicode-tegn."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Decimal)
  id: WriteLine(System.Decimal)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Decimal)
  nameWithType: Console.WriteLine(Decimal)
  fullName: System.Console.WriteLine(Decimal)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av den angitte <xref:System.Decimal>verdi, etterfulgt av den gjeldende linje-terminator til standard utdata-dataflyt.</xref:System.Decimal>"
  remarks: "Tekstrepresentasjonen av `value` produseres ved Ã¥ kalle den <xref:System.Decimal.ToString%2A?displayProperty=fullName>metoden.</xref:System.Decimal.ToString%2A?displayProperty=fullName>       Du finner mer informasjon om linje terminator i avsnittet Merknader for den <xref:System.Console.WriteLine%2A>metode som har ingen parametere.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_3_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_3_1.vb)]"
  syntax:
    content: public static void WriteLine (decimal value);
    parameters:
    - id: value
      type: System.Decimal
      description: "Verdien til Ã¥ skrive."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Double)
  id: WriteLine(System.Double)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Double)
  nameWithType: Console.WriteLine(Double)
  fullName: System.Console.WriteLine(Double)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av den angitte dobbel presisjon flyttallsverdi, etterfulgt av den gjeldende linje-terminator til standard utdata-dataflyt."
  remarks: "Tekstrepresentasjonen av `value` produseres ved Ã¥ kalle den <xref:System.Double.ToString%2A?displayProperty=fullName>metoden.</xref:System.Double.ToString%2A?displayProperty=fullName>       Du finner mer informasjon om linje terminator i avsnittet Merknader for den <xref:System.Console.WriteLine%2A>metode som har ingen parametere.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_2_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_2_1.vb)]"
  syntax:
    content: public static void WriteLine (double value);
    parameters:
    - id: value
      type: System.Double
      description: "Verdien til Ã¥ skrive."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Int32)
  id: WriteLine(System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Int32)
  nameWithType: Console.WriteLine(Int32)
  fullName: System.Console.WriteLine(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av angitte 32-biters heltall med fortegn-verdi, etterfulgt av den gjeldende linje-terminator til standard utdata-dataflyt."
  remarks: "Tekstrepresentasjonen av `value` produseres ved Ã¥ kalle den <xref:System.Int32.ToString%2A?displayProperty=fullName>metoden.</xref:System.Int32.ToString%2A?displayProperty=fullName>       Du finner mer informasjon om linje terminator i avsnittet Merknader for den <xref:System.Console.WriteLine%2A>metode som har ingen parametere.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_1_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_1_1.vb)]"
  syntax:
    content: public static void WriteLine (int value);
    parameters:
    - id: value
      type: System.Int32
      description: "Verdien til Ã¥ skrive."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Int64)
  id: WriteLine(System.Int64)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Int64)
  nameWithType: Console.WriteLine(Int64)
  fullName: System.Console.WriteLine(Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av angitte 64-biters heltall med fortegn-verdi, etterfulgt av den gjeldende linje-terminator til standard utdata-dataflyt."
  remarks: "Tekstrepresentasjonen av `value` produseres ved Ã¥ kalle den <xref:System.Int64.ToString%2A?displayProperty=fullName>metoden.</xref:System.Int64.ToString%2A?displayProperty=fullName>       Du finner mer informasjon om linje terminator i avsnittet Merknader for den <xref:System.Console.WriteLine%2A>metode som har ingen parametere.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_10_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_10_1.vb)]"
  syntax:
    content: public static void WriteLine (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Verdien til Ã¥ skrive."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Object)
  id: WriteLine(System.Object)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Object)
  nameWithType: Console.WriteLine(Object)
  fullName: System.Console.WriteLine(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av det angitte objektet, etterfulgt av den gjeldende linje-terminator til standard utdata-dataflyt."
  remarks: "Hvis `value` er `null`, bare linje terminator skrives. Hvis ikke, den `ToString` -metoden til `value` kalles for Ã¥ produsere strengrepresentasjon og Resultatstrengen skrives til standard utdata-dataflyt.       Du finner mer informasjon om linje terminator i avsnittet Merknader for den <xref:System.Console.WriteLine%2A>metode som har ingen parametere.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example uses the WriteLine method to display each value in an object array to the console.  \n  \n [!code-cpp[System.Console.WriteLine#3](~/add/codesnippet/cpp/m-system.console.writeli_6_1.cpp)]\n [!code-cpp[System.Console.WriteLine#3](~/add/codesnippet/cpp/m-system.console.writeli_6_1.cpp)]\n [!code-cs[System.Console.WriteLine#3](~/add/codesnippet/csharp/m-system.console.writeli_6_1.cs)]\n [!code-vb[System.Console.WriteLine#3](~/add/codesnippet/visualbasic/m-system.console.writeli_6_1.vb)]"
  syntax:
    content: public static void WriteLine (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Verdien til Ã¥ skrive."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Single)
  id: WriteLine(System.Single)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Single)
  nameWithType: Console.WriteLine(Single)
  fullName: System.Console.WriteLine(Single)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av den angitte enkel presisjon flyttallsverdi, etterfulgt av den gjeldende linje-terminator til standard utdata-dataflyt."
  remarks: "Tekstrepresentasjonen av `value` produseres ved Ã¥ kalle den <xref:System.Single.ToString%2A?displayProperty=fullName>metoden.</xref:System.Single.ToString%2A?displayProperty=fullName>       Du finner mer informasjon om linje terminator i avsnittet Merknader for den <xref:System.Console.WriteLine%2A>metode som har ingen parametere.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_4_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_4_1.vb)]"
  syntax:
    content: public static void WriteLine (float value);
    parameters:
    - id: value
      type: System.Single
      description: "Verdien til Ã¥ skrive."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: Console.WriteLine(String)
  fullName: System.Console.WriteLine(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver den angitte strengverdien, etterfulgt av den gjeldende linje-terminator til standard utdata-dataflyt."
  remarks: "Hvis verdien er `null`, bare linje terminator skrives til standard utdata dataflyten.       Du finner mer informasjon om linje terminator i avsnittet Merknader for den <xref:System.Console.WriteLine>metoden.</xref:System.Console.WriteLine>"
  example:
  - "The example changes the line terminator from its default value of \"\\r\\n\" or `vbCrLf` to \"\\r\\n\\r\\n\" or `vbCrLf` + `vbCrLf`. It then calls the <xref:System.Console.WriteLine> and WriteLine methods to display output to the console.  \n  \n [!code-cpp[System.Console.WriteLine#2](~/add/codesnippet/cpp/m-system.console.writeli_0_1.cpp)]\n [!code-cs[System.Console.WriteLine#2](~/add/codesnippet/csharp/m-system.console.writeli_0_1.cs)]\n [!code-vb[System.Console.WriteLine#2](~/add/codesnippet/visualbasic/m-system.console.writeli_0_1.vb)]"
  syntax:
    content: public static void WriteLine (string value);
    parameters:
    - id: value
      type: System.String
      description: "Verdien til Ã¥ skrive."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.WriteLine(System.UInt32)
  id: WriteLine(System.UInt32)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(UInt32)
  nameWithType: Console.WriteLine(UInt32)
  fullName: System.Console.WriteLine(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av angitte 32-biters heltall uten fortegn-verdien, etterfulgt av den gjeldende linje-terminator til standard utdata-dataflyt."
  remarks: "Tekstrepresentasjonen av `value` produseres ved Ã¥ kalle den <xref:System.UInt32.ToString%2A?displayProperty=fullName>metoden.</xref:System.UInt32.ToString%2A?displayProperty=fullName>       Du finner mer informasjon om linje terminator i avsnittet Merknader for den <xref:System.Console.WriteLine%2A>metode som har ingen parametere.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_8_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_8_1.vb)]"
  syntax:
    content: public static void WriteLine (uint value);
    parameters:
    - id: value
      type: System.UInt32
      description: "Verdien til Ã¥ skrive."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.WriteLine(System.UInt64)
  id: WriteLine(System.UInt64)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(UInt64)
  nameWithType: Console.WriteLine(UInt64)
  fullName: System.Console.WriteLine(UInt64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av angitte 64-biters heltall uten fortegn-verdien, etterfulgt av den gjeldende linje-terminator til standard utdata-dataflyt."
  remarks: "Tekstrepresentasjonen av `value` produseres ved Ã¥ kalle den <xref:System.UInt64.ToString%2A?displayProperty=fullName>metoden.</xref:System.UInt64.ToString%2A?displayProperty=fullName>       Du finner mer informasjon om linje terminator i avsnittet Merknader for den <xref:System.Console.WriteLine%2A>metode som har ingen parametere.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_12_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_12_1.vb)]"
  syntax:
    content: public static void WriteLine (ulong value);
    parameters:
    - id: value
      type: System.UInt64
      description: "Verdien til Ã¥ skrive."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.WriteLine(System.String,System.Object)
  id: WriteLine(System.String,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(String,Object)
  nameWithType: Console.WriteLine(String,Object)
  fullName: System.Console.WriteLine(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av det angitte objektet, etterfulgt av den gjeldende linje-terminator til standard utdata dataflyten ved hjelp av angitt format-informasjon."
  remarks: "Denne metoden bruker den [sammensatte formatering funksjonen](~/add/includes/ajax-current-ext-md.md) av .NET Framework konvertere verdien for et objekt til tekstrepresentasjonen, og Bygg inn som representasjon i en streng. Resultatstrengen skrives til dataflyten utdata.       Den `format` parameteren bestÃ¥r av null eller flere kjÃ¸ringer av teksten intermixed med null eller flere indekserte plassholdere, som kalles format elementer som svarer til et objekt i parameterlisten av denne metoden. Formatering prosessen erstatter hver format-element med Tekstrepresentasjonen av verdien for det tilsvarende objektet.       Syntaksen i et format-element er `{` *indeksen*[`,`*justering*] [`:`*formatString*]`}`som angir en obligatorisk indeks, valgfrie lengden og justering av formatert tekst og en valgfri tegnstreng format-IDen som styrer hvordan verdien for den tilsvarende objekt er formatert.       .NET Framework gir omfattende formatering stÃ¸tte, som er beskrevet i flere detaljer i formatering emnene nedenfor.      -Hvis du vil ha mer informasjon om funksjonen for sammensatte formatering som stÃ¸ttes av metoder som <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, og noen overlastingene av <xref:System.Console.WriteLine%2A>, se [sammensatte formatering](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      -Hvis du vil ha mer informasjon om tallformat identifikatorer, se [Standard numerisk formatstrenger](~/add/includes/ajax-current-ext-md.md) og [egendefinert numerisk formatstrenger](~/add/includes/ajax-current-ext-md.md).      -Hvis du vil ha mer informasjon om dato og klokkeslett formatere identifikatorer, se [Standard dato og klokkeslett-formatstrenger](~/add/includes/ajax-current-ext-md.md) og [egendefinert dato og klokkeslett-formatstrenger](~/add/includes/ajax-current-ext-md.md).      -Hvis du vil ha mer informasjon om opplisting format identifikatorer, se [Format-Opplistingsstrenger](~/add/includes/ajax-current-ext-md.md).      -Hvis du vil ha mer informasjon om formatering, se [formateringstyper](~/add/includes/ajax-current-ext-md.md).       Du finner mer informasjon om linje terminator i avsnittet Merknader for den <xref:System.Console.WriteLine%2A>metode som har ingen parametere.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example calls the WriteLine method to display five randomly generated <xref:System.Boolean> values.  \n  \n [!code-vb[System.Console.WriteLine#6](~/add/codesnippet/visualbasic/m-system.console.writeli_9_1.vb)]\n [!code-cs[System.Console.WriteLine#6](~/add/codesnippet/csharp/m-system.console.writeli_9_1.cs)]  \n  \n The following example calls the WriteLine method to display the current date.   Note that the format item in the `format` argument uses the \"D\" [standard date and time format string](../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md) to display the date in the long date format of the current culture.  \n  \n [!code-vb[System.Console.WriteLine#7](~/add/codesnippet/visualbasic/m-system.console.writeli_9_2.vb)]\n [!code-cs[System.Console.WriteLine#7](~/add/codesnippet/csharp/m-system.console.writeli_9_2.cs)]"
  syntax:
    content: public static void WriteLine (string format, object arg0);
    parameters:
    - id: format
      type: System.String
      description: "En sammensatt formatstreng (se merknader)."
    - id: arg0
      type: System.Object
      description: "Et objekt for Ã¥ skrive ved hjelp av `format`."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Formatangivelsen i <code> format </code> er ugyldig."
  platform:
  - net462
- uid: System.Console.WriteLine(System.String,System.Object[])
  id: WriteLine(System.String,System.Object[])
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(String,Object[])
  nameWithType: Console.WriteLine(String,Object[])
  fullName: System.Console.WriteLine(String,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av den angitte matrisen av objekter, etterfulgt av den gjeldende linje-terminator til standard utdata dataflyten ved hjelp av angitt format-informasjon."
  remarks: "Denne metoden bruker den [sammensatte formatering funksjonen](~/add/includes/ajax-current-ext-md.md) av .NET Framework konvertere verdien for et objekt til tekstrepresentasjonen, og Bygg inn som representasjon i en streng. Resultatstrengen skrives til dataflyten utdata.       Den `format` parameteren bestÃ¥r av null eller flere kjÃ¸ringer av teksten intermixed med null eller flere indekserte plassholdere, som kalles format elementer som svarer til et objekt i parameterlisten av denne metoden. Formatering prosessen erstatter hver format-element med Tekstrepresentasjonen av verdien for det tilsvarende objektet.       Syntaksen i et format-element er `{` *indeksen*[`,`*justering*] [`:`*formatString*]`}`som angir en obligatorisk indeks, valgfrie lengden og justering av formatert tekst og en valgfri tegnstreng format-IDen som styrer hvordan verdien for den tilsvarende objekt er formatert.       .NET Framework gir omfattende formatering stÃ¸tte, som er beskrevet i flere detaljer i formatering emnene nedenfor.      -Hvis du vil ha mer informasjon om funksjonen for sammensatte formatering som stÃ¸ttes av metoder som <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, og noen overlastingene av <xref:System.Console.WriteLine%2A>, se [sammensatte formatering](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      -Hvis du vil ha mer informasjon om tallformat identifikatorer, se [Standard numerisk formatstrenger](~/add/includes/ajax-current-ext-md.md) og [egendefinert numerisk formatstrenger](~/add/includes/ajax-current-ext-md.md).      -Hvis du vil ha mer informasjon om dato og klokkeslett formatere identifikatorer, se [Standard dato og klokkeslett-formatstrenger](~/add/includes/ajax-current-ext-md.md) og [egendefinert dato og klokkeslett-formatstrenger](~/add/includes/ajax-current-ext-md.md).      -Hvis du vil ha mer informasjon om opplisting format identifikatorer, se [Format-Opplistingsstrenger](~/add/includes/ajax-current-ext-md.md).      -Hvis du vil ha mer informasjon om formatering, se [formateringstyper](~/add/includes/ajax-current-ext-md.md).       Du finner mer informasjon om linje terminator i avsnittet Merknader for den <xref:System.Console.WriteLine%2A>metode som har ingen parametere.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.  \n  \n [!code-cpp[console.writelineFmt1#1](~/add/codesnippet/cpp/m-system.console.writeli_11_1.cpp)]\n [!code-cs[console.writelineFmt1#1](~/add/codesnippet/csharp/m-system.console.writeli_11_1.cs)]\n [!code-vb[console.writelineFmt1#1](~/add/codesnippet/visualbasic/m-system.console.writeli_11_1.vb)]  \n  \n The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_11_2.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_11_2.vb)]"
  syntax:
    content: public static void WriteLine (string format, object[] arg);
    parameters:
    - id: format
      type: System.String
      description: "En sammensatt formatstreng (se merknader)."
    - id: arg
      type: System.Object[]
      description: "En matrise av objekter til Ã¥ skrive ved hjelp av `format`."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>or <code>arg</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Formatangivelsen i <code> format </code> er ugyldig."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Char[],System.Int32,System.Int32)
  id: WriteLine(System.Char[],System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Char[],Int32,Int32)
  nameWithType: Console.WriteLine(Char[],Int32,Int32)
  fullName: System.Console.WriteLine(Char[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver den angitte subarray Unicode-tegn, etterfulgt av den gjeldende linje-terminator til standard utdata-dataflyt."
  remarks: "Denne metoden skriver `count` tegn med Start fra posisjon `index` av `buffer` til standard utdata-dataflyt.       Du finner mer informasjon om linje terminator i avsnittet Merknader for den <xref:System.Console.WriteLine%2A>metode som har ingen parametere.</xref:System.Console.WriteLine%2A>"
  syntax:
    content: public static void WriteLine (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "En matrise med Unicode-tegn."
    - id: index
      type: System.Int32
      description: "Startposisjonen i `buffer`."
    - id: count
      type: System.Int32
      description: "Antallet tegn du skriver."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>eller <code>count</code> er mindre enn null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>index</code>pluss <code>count</code> angi en plassering som ikke er i <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  platform:
  - net462
- uid: System.Console.WriteLine(System.String,System.Object,System.Object)
  id: WriteLine(System.String,System.Object,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(String,Object,Object)
  nameWithType: Console.WriteLine(String,Object,Object)
  fullName: System.Console.WriteLine(String,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av de angitte objektene, etterfulgt av den gjeldende linje-terminator til standard utdata dataflyten ved hjelp av angitt format-informasjon."
  remarks: "Denne metoden bruker den [sammensatte formatering funksjonen](~/add/includes/ajax-current-ext-md.md) av .NET Framework konvertere verdien for et objekt til tekstrepresentasjonen, og Bygg inn som representasjon i en streng. Resultatstrengen skrives til dataflyten utdata.       Den `format` parameteren bestÃ¥r av null eller flere kjÃ¸ringer av teksten intermixed med null eller flere indekserte plassholdere, som kalles format elementer som svarer til et objekt i parameterlisten av denne metoden. Formatering prosessen erstatter hver format-element med Tekstrepresentasjonen av verdien for det tilsvarende objektet.       Syntaksen i et format-element er `{` *indeksen*[`,`*justering*] [`:`*formatString*]`}`som angir en obligatorisk indeks, valgfrie lengden og justering av formatert tekst og en valgfri tegnstreng format-IDen som styrer hvordan verdien for den tilsvarende objekt er formatert.       .NET Framework gir omfattende formatering stÃ¸tte, som er beskrevet i flere detaljer i formatering emnene nedenfor.      -Hvis du vil ha mer informasjon om funksjonen for sammensatte formatering som stÃ¸ttes av metoder som <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, og noen overlastingene av <xref:System.Console.WriteLine%2A>, se [sammensatte formatering](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      -Hvis du vil ha mer informasjon om tallformat identifikatorer, se [Standard numerisk formatstrenger](~/add/includes/ajax-current-ext-md.md) og [egendefinert numerisk formatstrenger](~/add/includes/ajax-current-ext-md.md).      -Hvis du vil ha mer informasjon om dato og klokkeslett formatere identifikatorer, se [Standard dato og klokkeslett-formatstrenger](~/add/includes/ajax-current-ext-md.md) og [egendefinert dato og klokkeslett-formatstrenger](~/add/includes/ajax-current-ext-md.md).      -Hvis du vil ha mer informasjon om opplisting format identifikatorer, se [Format-Opplistingsstrenger](~/add/includes/ajax-current-ext-md.md).      -Hvis du vil ha mer informasjon om formatering, se [formateringstyper](~/add/includes/ajax-current-ext-md.md).       Du finner mer informasjon om linje terminator i avsnittet Merknader for den <xref:System.Console.WriteLine%2A>metode som har ingen parametere.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.  \n  \n [!code-cpp[console.writelineFmt1#1](~/add/codesnippet/cpp/m-system.console.writeli_7_1.cpp)]\n [!code-cs[console.writelineFmt1#1](~/add/codesnippet/csharp/m-system.console.writeli_7_1.cs)]\n [!code-vb[console.writelineFmt1#1](~/add/codesnippet/visualbasic/m-system.console.writeli_7_1.vb)]  \n  \n The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_7_2.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_7_2.vb)]"
  syntax:
    content: public static void WriteLine (string format, object arg0, object arg1);
    parameters:
    - id: format
      type: System.String
      description: "En sammensatt formatstreng (se merknader)."
    - id: arg0
      type: System.Object
      description: "Det fÃ¸rste objektet til Ã¥ skrive ved hjelp av `format`."
    - id: arg1
      type: System.Object
      description: "Det andre objektet til Ã¥ skrive ved hjelp av `format`."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Formatangivelsen i <code> format </code> er ugyldig."
  platform:
  - net462
- uid: System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)
  id: WriteLine(System.String,System.Object,System.Object,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(String,Object,Object,Object)
  nameWithType: Console.WriteLine(String,Object,Object,Object)
  fullName: System.Console.WriteLine(String,Object,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av de angitte objektene, etterfulgt av den gjeldende linje-terminator til standard utdata dataflyten ved hjelp av angitt format-informasjon."
  remarks: "Denne metoden bruker den [sammensatte formatering funksjonen](~/add/includes/ajax-current-ext-md.md) av .NET Framework konvertere verdien for et objekt til tekstrepresentasjonen, og Bygg inn som representasjon i en streng. Resultatstrengen skrives til dataflyten utdata.       Den `format` parameteren bestÃ¥r av null eller flere kjÃ¸ringer av teksten intermixed med null eller flere indekserte plassholdere, som kalles format elementer som svarer til et objekt i parameterlisten av denne metoden. Formatering prosessen erstatter hver format-element med Tekstrepresentasjonen av verdien for det tilsvarende objektet.       Syntaksen i et format-element er `{` *indeksen*[`,`*justering*] [`:`*formatString*]`}`som angir en obligatorisk indeks, valgfrie lengden og justering av formatert tekst og en valgfri tegnstreng format-IDen som styrer hvordan verdien for den tilsvarende objekt er formatert.       .NET Framework gir omfattende formatering stÃ¸tte, som er beskrevet i flere detaljer i formatering emnene nedenfor.      -Hvis du vil ha mer informasjon om funksjonen for sammensatte formatering som stÃ¸ttes av metoder som <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, og noen overlastingene av <xref:System.Console.WriteLine%2A>, se [sammensatte formatering](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      -Hvis du vil ha mer informasjon om tallformat identifikatorer, se [Standard numerisk formatstrenger](~/add/includes/ajax-current-ext-md.md) og [egendefinert numerisk formatstrenger](~/add/includes/ajax-current-ext-md.md).      -Hvis du vil ha mer informasjon om dato og klokkeslett formatere identifikatorer, se [Standard dato og klokkeslett-formatstrenger](~/add/includes/ajax-current-ext-md.md) og [egendefinert dato og klokkeslett-formatstrenger](~/add/includes/ajax-current-ext-md.md).      -Hvis du vil ha mer informasjon om opplisting format identifikatorer, se [Format-Opplistingsstrenger](~/add/includes/ajax-current-ext-md.md).      -Hvis du vil ha mer informasjon om formatering, se [formateringstyper](~/add/includes/ajax-current-ext-md.md).       Du finner mer informasjon om linje terminator i avsnittet Merknader for den <xref:System.Console.WriteLine%2A>metode som har ingen parametere.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.  \n  \n [!code-cpp[console.writelineFmt1#1](~/add/codesnippet/cpp/ecdde448-c375-4488-93b7-_1.cpp)]\n [!code-cs[console.writelineFmt1#1](~/add/codesnippet/csharp/ecdde448-c375-4488-93b7-_1.cs)]\n [!code-vb[console.writelineFmt1#1](~/add/codesnippet/visualbasic/ecdde448-c375-4488-93b7-_1.vb)]  \n  \n The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/ecdde448-c375-4488-93b7-_2.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/ecdde448-c375-4488-93b7-_2.vb)]"
  syntax:
    content: public static void WriteLine (string format, object arg0, object arg1, object arg2);
    parameters:
    - id: format
      type: System.String
      description: "En sammensatt formatstreng (se merknader)."
    - id: arg0
      type: System.Object
      description: "Det fÃ¸rste objektet til Ã¥ skrive ved hjelp av `format`."
    - id: arg1
      type: System.Object
      description: "Det andre objektet til Ã¥ skrive ved hjelp av `format`."
    - id: arg2
      type: System.Object
      description: "Det tredje objektet til Ã¥ skrive ved hjelp av `format`."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Formatangivelsen i <code> format </code> er ugyldig."
  platform:
  - net462
- uid: System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)
  id: WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(String,Object,Object,Object,Object)
  nameWithType: Console.WriteLine(String,Object,Object,Object,Object)
  fullName: System.Console.WriteLine(String,Object,Object,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skriver Tekstrepresentasjonen av de angitte objektene og variabel lengde parameterlisten etterfulgt av den gjeldende linje-terminator til standard utdata dataflyten ved hjelp av angitt format-informasjon."
  remarks: "> [!NOTE]\n>  This API is not CLS-compliant. The CLS-compliant alternative is [Console.WriteLine(String,âObject\\[\\])](assetId:///M:System.Console.WriteLine(System.String,System.Object[])?qualifyHint=True&autoUpgrade=False). The C# and Visual Basic compilers automatically resolve a call to this method as a call to [Console.WriteLine(String,âObject\\[\\])](assetId:///M:System.Console.WriteLine(System.String,System.Object[])?qualifyHint=True&autoUpgrade=False).  \n  \n This method uses the [composite formatting feature](~/add/includes/ajax-current-ext-md.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string. The resulting string is written to the output stream.  \n  \n The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method. The formatting process replaces each format item with the text representation of the value of the corresponding object.  \n  \n The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.  \n  \n The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.  \n  \n-   For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](../Topic/Composite%20Formatting.md).  \n  \n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/add/includes/ajax-current-ext-md.md) and [Custom Numeric Format Strings](~/add/includes/ajax-current-ext-md.md).  \n  \n-   For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/add/includes/ajax-current-ext-md.md) and [Custom Date and Time Format Strings](~/add/includes/ajax-current-ext-md.md).  \n  \n-   For more information about enumeration format specifiers, see [Enumeration Format Strings](~/add/includes/ajax-current-ext-md.md).  \n  \n-   For more information about formatting, see [Formatting Types](~/add/includes/ajax-current-ext-md.md).  \n  \n For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters."
  example:
  - "The following example illustrates the use of variable arguments with the WriteLine method. The method is called with a composite format string and five format items.  \n  \n [!code-cpp[System.Console.WriteLine#5](~/add/codesnippet/cpp/b0d255a7-f5e0-4135-8d9b-_1.cpp)]"
  syntax:
    content: public static void WriteLine (string format, object arg0, object arg1, object arg2, object arg3);
    parameters:
    - id: format
      type: System.String
      description: "En sammensatt formatstreng (se merknader)."
    - id: arg0
      type: System.Object
      description: "Det fÃ¸rste objektet til Ã¥ skrive ved hjelp av `format`."
    - id: arg1
      type: System.Object
      description: "Det andre objektet til Ã¥ skrive ved hjelp av `format`."
    - id: arg2
      type: System.Object
      description: "Det tredje objektet til Ã¥ skrive ved hjelp av `format`."
    - id: arg3
      type: System.Object
      description: "Fjerde objektet til Ã¥ skrive ved hjelp av `format`."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det oppstod en i/u-feil."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Formatangivelsen i <code> format </code> er ugyldig."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.Security.HostProtectionException
  parent: System.Security
  isExternal: false
  name: HostProtectionException
  nameWithType: HostProtectionException
  fullName: System.Security.HostProtectionException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Console.BackgroundColor
  parent: System.Console
  isExternal: false
  name: BackgroundColor
  nameWithType: Console.BackgroundColor
  fullName: System.Console.BackgroundColor
- uid: System.ConsoleColor
  parent: System
  isExternal: false
  name: ConsoleColor
  nameWithType: ConsoleColor
  fullName: System.ConsoleColor
- uid: System.Console.Beep
  parent: System.Console
  isExternal: false
  name: Beep()
  nameWithType: Console.Beep()
  fullName: System.Console.Beep()
- uid: System.Console.Beep(System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: Beep(Int32,Int32)
  nameWithType: Console.Beep(Int32,Int32)
  fullName: System.Console.Beep(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Console.BufferHeight
  parent: System.Console
  isExternal: false
  name: BufferHeight
  nameWithType: Console.BufferHeight
  fullName: System.Console.BufferHeight
- uid: System.Console.BufferWidth
  parent: System.Console
  isExternal: false
  name: BufferWidth
  nameWithType: Console.BufferWidth
  fullName: System.Console.BufferWidth
- uid: System.Console.CancelKeyPress
  parent: System.Console
  isExternal: false
  name: CancelKeyPress
  nameWithType: Console.CancelKeyPress
  fullName: System.Console.CancelKeyPress
- uid: System.ConsoleCancelEventHandler
  parent: System
  isExternal: false
  name: ConsoleCancelEventHandler
  nameWithType: ConsoleCancelEventHandler
  fullName: System.ConsoleCancelEventHandler
- uid: System.Console.CapsLock
  parent: System.Console
  isExternal: false
  name: CapsLock
  nameWithType: Console.CapsLock
  fullName: System.Console.CapsLock
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Console.Clear
  parent: System.Console
  isExternal: false
  name: Clear()
  nameWithType: Console.Clear()
  fullName: System.Console.Clear()
- uid: System.Console.CursorLeft
  parent: System.Console
  isExternal: false
  name: CursorLeft
  nameWithType: Console.CursorLeft
  fullName: System.Console.CursorLeft
- uid: System.Console.CursorSize
  parent: System.Console
  isExternal: false
  name: CursorSize
  nameWithType: Console.CursorSize
  fullName: System.Console.CursorSize
- uid: System.Console.CursorTop
  parent: System.Console
  isExternal: false
  name: CursorTop
  nameWithType: Console.CursorTop
  fullName: System.Console.CursorTop
- uid: System.Console.CursorVisible
  parent: System.Console
  isExternal: false
  name: CursorVisible
  nameWithType: Console.CursorVisible
  fullName: System.Console.CursorVisible
- uid: System.Console.Error
  parent: System.Console
  isExternal: false
  name: Error
  nameWithType: Console.Error
  fullName: System.Console.Error
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Console.ForegroundColor
  parent: System.Console
  isExternal: false
  name: ForegroundColor
  nameWithType: Console.ForegroundColor
  fullName: System.Console.ForegroundColor
- uid: System.Console.In
  parent: System.Console
  isExternal: false
  name: In
  nameWithType: Console.In
  fullName: System.Console.In
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Console.InputEncoding
  parent: System.Console
  isExternal: false
  name: InputEncoding
  nameWithType: Console.InputEncoding
  fullName: System.Console.InputEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Console.IsErrorRedirected
  parent: System.Console
  isExternal: false
  name: IsErrorRedirected
  nameWithType: Console.IsErrorRedirected
  fullName: System.Console.IsErrorRedirected
- uid: System.Console.IsInputRedirected
  parent: System.Console
  isExternal: false
  name: IsInputRedirected
  nameWithType: Console.IsInputRedirected
  fullName: System.Console.IsInputRedirected
- uid: System.Console.IsOutputRedirected
  parent: System.Console
  isExternal: false
  name: IsOutputRedirected
  nameWithType: Console.IsOutputRedirected
  fullName: System.Console.IsOutputRedirected
- uid: System.Console.KeyAvailable
  parent: System.Console
  isExternal: false
  name: KeyAvailable
  nameWithType: Console.KeyAvailable
  fullName: System.Console.KeyAvailable
- uid: System.Console.LargestWindowHeight
  parent: System.Console
  isExternal: false
  name: LargestWindowHeight
  nameWithType: Console.LargestWindowHeight
  fullName: System.Console.LargestWindowHeight
- uid: System.Console.LargestWindowWidth
  parent: System.Console
  isExternal: false
  name: LargestWindowWidth
  nameWithType: Console.LargestWindowWidth
  fullName: System.Console.LargestWindowWidth
- uid: System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)
  parent: System.Console
  isExternal: false
  name: MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32,Char,ConsoleColor,ConsoleColor)
  nameWithType: Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32,Char,ConsoleColor,ConsoleColor)
  fullName: System.Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32,Char,ConsoleColor,ConsoleColor)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Console.NumberLock
  parent: System.Console
  isExternal: false
  name: NumberLock
  nameWithType: Console.NumberLock
  fullName: System.Console.NumberLock
- uid: System.Console.OpenStandardError
  parent: System.Console
  isExternal: false
  name: OpenStandardError()
  nameWithType: Console.OpenStandardError()
  fullName: System.Console.OpenStandardError()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Console.OpenStandardError(System.Int32)
  parent: System.Console
  isExternal: false
  name: OpenStandardError(Int32)
  nameWithType: Console.OpenStandardError(Int32)
  fullName: System.Console.OpenStandardError(Int32)
- uid: System.Console.OpenStandardInput
  parent: System.Console
  isExternal: false
  name: OpenStandardInput()
  nameWithType: Console.OpenStandardInput()
  fullName: System.Console.OpenStandardInput()
- uid: System.Console.OpenStandardInput(System.Int32)
  parent: System.Console
  isExternal: false
  name: OpenStandardInput(Int32)
  nameWithType: Console.OpenStandardInput(Int32)
  fullName: System.Console.OpenStandardInput(Int32)
- uid: System.Console.OpenStandardOutput
  parent: System.Console
  isExternal: false
  name: OpenStandardOutput()
  nameWithType: Console.OpenStandardOutput()
  fullName: System.Console.OpenStandardOutput()
- uid: System.Console.OpenStandardOutput(System.Int32)
  parent: System.Console
  isExternal: false
  name: OpenStandardOutput(Int32)
  nameWithType: Console.OpenStandardOutput(Int32)
  fullName: System.Console.OpenStandardOutput(Int32)
- uid: System.Console.Out
  parent: System.Console
  isExternal: false
  name: Out
  nameWithType: Console.Out
  fullName: System.Console.Out
- uid: System.Console.OutputEncoding
  parent: System.Console
  isExternal: false
  name: OutputEncoding
  nameWithType: Console.OutputEncoding
  fullName: System.Console.OutputEncoding
- uid: System.Console.Read
  parent: System.Console
  isExternal: false
  name: Read()
  nameWithType: Console.Read()
  fullName: System.Console.Read()
- uid: System.Console.ReadKey
  parent: System.Console
  isExternal: false
  name: ReadKey()
  nameWithType: Console.ReadKey()
  fullName: System.Console.ReadKey()
- uid: System.ConsoleKeyInfo
  parent: System
  isExternal: false
  name: ConsoleKeyInfo
  nameWithType: ConsoleKeyInfo
  fullName: System.ConsoleKeyInfo
- uid: System.Console.ReadKey(System.Boolean)
  parent: System.Console
  isExternal: false
  name: ReadKey(Boolean)
  nameWithType: Console.ReadKey(Boolean)
  fullName: System.Console.ReadKey(Boolean)
- uid: System.Console.ReadLine
  parent: System.Console
  isExternal: false
  name: ReadLine()
  nameWithType: Console.ReadLine()
  fullName: System.Console.ReadLine()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Console.ResetColor
  parent: System.Console
  isExternal: false
  name: ResetColor()
  nameWithType: Console.ResetColor()
  fullName: System.Console.ResetColor()
- uid: System.Console.SetBufferSize(System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: SetBufferSize(Int32,Int32)
  nameWithType: Console.SetBufferSize(Int32,Int32)
  fullName: System.Console.SetBufferSize(Int32,Int32)
- uid: System.Console.SetCursorPosition(System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: SetCursorPosition(Int32,Int32)
  nameWithType: Console.SetCursorPosition(Int32,Int32)
  fullName: System.Console.SetCursorPosition(Int32,Int32)
- uid: System.Console.SetError(System.IO.TextWriter)
  parent: System.Console
  isExternal: false
  name: SetError(TextWriter)
  nameWithType: Console.SetError(TextWriter)
  fullName: System.Console.SetError(TextWriter)
- uid: System.Console.SetIn(System.IO.TextReader)
  parent: System.Console
  isExternal: false
  name: SetIn(TextReader)
  nameWithType: Console.SetIn(TextReader)
  fullName: System.Console.SetIn(TextReader)
- uid: System.Console.SetOut(System.IO.TextWriter)
  parent: System.Console
  isExternal: false
  name: SetOut(TextWriter)
  nameWithType: Console.SetOut(TextWriter)
  fullName: System.Console.SetOut(TextWriter)
- uid: System.Console.SetWindowPosition(System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: SetWindowPosition(Int32,Int32)
  nameWithType: Console.SetWindowPosition(Int32,Int32)
  fullName: System.Console.SetWindowPosition(Int32,Int32)
- uid: System.Console.SetWindowSize(System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: SetWindowSize(Int32,Int32)
  nameWithType: Console.SetWindowSize(Int32,Int32)
  fullName: System.Console.SetWindowSize(Int32,Int32)
- uid: System.Console.Title
  parent: System.Console
  isExternal: false
  name: Title
  nameWithType: Console.Title
  fullName: System.Console.Title
- uid: System.Console.TreatControlCAsInput
  parent: System.Console
  isExternal: false
  name: TreatControlCAsInput
  nameWithType: Console.TreatControlCAsInput
  fullName: System.Console.TreatControlCAsInput
- uid: System.Console.WindowHeight
  parent: System.Console
  isExternal: false
  name: WindowHeight
  nameWithType: Console.WindowHeight
  fullName: System.Console.WindowHeight
- uid: System.Console.WindowLeft
  parent: System.Console
  isExternal: false
  name: WindowLeft
  nameWithType: Console.WindowLeft
  fullName: System.Console.WindowLeft
- uid: System.Console.WindowTop
  parent: System.Console
  isExternal: false
  name: WindowTop
  nameWithType: Console.WindowTop
  fullName: System.Console.WindowTop
- uid: System.Console.WindowWidth
  parent: System.Console
  isExternal: false
  name: WindowWidth
  nameWithType: Console.WindowWidth
  fullName: System.Console.WindowWidth
- uid: System.Console.Write(System.Boolean)
  parent: System.Console
  isExternal: false
  name: Write(Boolean)
  nameWithType: Console.Write(Boolean)
  fullName: System.Console.Write(Boolean)
- uid: System.Console.Write(System.Char)
  parent: System.Console
  isExternal: false
  name: Write(Char)
  nameWithType: Console.Write(Char)
  fullName: System.Console.Write(Char)
- uid: System.Console.Write(System.Char[])
  parent: System.Console
  isExternal: false
  name: Write(Char[])
  nameWithType: Console.Write(Char[])
  fullName: System.Console.Write(Char[])
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Console.Write(System.Decimal)
  parent: System.Console
  isExternal: false
  name: Write(Decimal)
  nameWithType: Console.Write(Decimal)
  fullName: System.Console.Write(Decimal)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Console.Write(System.Double)
  parent: System.Console
  isExternal: false
  name: Write(Double)
  nameWithType: Console.Write(Double)
  fullName: System.Console.Write(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Console.Write(System.Int32)
  parent: System.Console
  isExternal: false
  name: Write(Int32)
  nameWithType: Console.Write(Int32)
  fullName: System.Console.Write(Int32)
- uid: System.Console.Write(System.Int64)
  parent: System.Console
  isExternal: false
  name: Write(Int64)
  nameWithType: Console.Write(Int64)
  fullName: System.Console.Write(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Console.Write(System.Object)
  parent: System.Console
  isExternal: false
  name: Write(Object)
  nameWithType: Console.Write(Object)
  fullName: System.Console.Write(Object)
- uid: System.Console.Write(System.Single)
  parent: System.Console
  isExternal: false
  name: Write(Single)
  nameWithType: Console.Write(Single)
  fullName: System.Console.Write(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Console.Write(System.String)
  parent: System.Console
  isExternal: false
  name: Write(String)
  nameWithType: Console.Write(String)
  fullName: System.Console.Write(String)
- uid: System.Console.Write(System.UInt32)
  parent: System.Console
  isExternal: false
  name: Write(UInt32)
  nameWithType: Console.Write(UInt32)
  fullName: System.Console.Write(UInt32)
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Console.Write(System.UInt64)
  parent: System.Console
  isExternal: false
  name: Write(UInt64)
  nameWithType: Console.Write(UInt64)
  fullName: System.Console.Write(UInt64)
- uid: System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Console.Write(System.String,System.Object)
  parent: System.Console
  isExternal: false
  name: Write(String,Object)
  nameWithType: Console.Write(String,Object)
  fullName: System.Console.Write(String,Object)
- uid: System.Console.Write(System.String,System.Object[])
  parent: System.Console
  isExternal: false
  name: Write(String,Object[])
  nameWithType: Console.Write(String,Object[])
  fullName: System.Console.Write(String,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Console.Write(System.Char[],System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: Write(Char[],Int32,Int32)
  nameWithType: Console.Write(Char[],Int32,Int32)
  fullName: System.Console.Write(Char[],Int32,Int32)
- uid: System.Console.Write(System.String,System.Object,System.Object)
  parent: System.Console
  isExternal: false
  name: Write(String,Object,Object)
  nameWithType: Console.Write(String,Object,Object)
  fullName: System.Console.Write(String,Object,Object)
- uid: System.Console.Write(System.String,System.Object,System.Object,System.Object)
  parent: System.Console
  isExternal: false
  name: Write(String,Object,Object,Object)
  nameWithType: Console.Write(String,Object,Object,Object)
  fullName: System.Console.Write(String,Object,Object,Object)
- uid: System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)
  parent: System.Console
  isExternal: false
  name: Write(String,Object,Object,Object,Object)
  nameWithType: Console.Write(String,Object,Object,Object,Object)
  fullName: System.Console.Write(String,Object,Object,Object,Object)
- uid: System.Console.WriteLine
  parent: System.Console
  isExternal: false
  name: WriteLine()
  nameWithType: Console.WriteLine()
  fullName: System.Console.WriteLine()
- uid: System.Console.WriteLine(System.Boolean)
  parent: System.Console
  isExternal: false
  name: WriteLine(Boolean)
  nameWithType: Console.WriteLine(Boolean)
  fullName: System.Console.WriteLine(Boolean)
- uid: System.Console.WriteLine(System.Char)
  parent: System.Console
  isExternal: false
  name: WriteLine(Char)
  nameWithType: Console.WriteLine(Char)
  fullName: System.Console.WriteLine(Char)
- uid: System.Console.WriteLine(System.Char[])
  parent: System.Console
  isExternal: false
  name: WriteLine(Char[])
  nameWithType: Console.WriteLine(Char[])
  fullName: System.Console.WriteLine(Char[])
- uid: System.Console.WriteLine(System.Decimal)
  parent: System.Console
  isExternal: false
  name: WriteLine(Decimal)
  nameWithType: Console.WriteLine(Decimal)
  fullName: System.Console.WriteLine(Decimal)
- uid: System.Console.WriteLine(System.Double)
  parent: System.Console
  isExternal: false
  name: WriteLine(Double)
  nameWithType: Console.WriteLine(Double)
  fullName: System.Console.WriteLine(Double)
- uid: System.Console.WriteLine(System.Int32)
  parent: System.Console
  isExternal: false
  name: WriteLine(Int32)
  nameWithType: Console.WriteLine(Int32)
  fullName: System.Console.WriteLine(Int32)
- uid: System.Console.WriteLine(System.Int64)
  parent: System.Console
  isExternal: false
  name: WriteLine(Int64)
  nameWithType: Console.WriteLine(Int64)
  fullName: System.Console.WriteLine(Int64)
- uid: System.Console.WriteLine(System.Object)
  parent: System.Console
  isExternal: false
  name: WriteLine(Object)
  nameWithType: Console.WriteLine(Object)
  fullName: System.Console.WriteLine(Object)
- uid: System.Console.WriteLine(System.Single)
  parent: System.Console
  isExternal: false
  name: WriteLine(Single)
  nameWithType: Console.WriteLine(Single)
  fullName: System.Console.WriteLine(Single)
- uid: System.Console.WriteLine(System.String)
  parent: System.Console
  isExternal: false
  name: WriteLine(String)
  nameWithType: Console.WriteLine(String)
  fullName: System.Console.WriteLine(String)
- uid: System.Console.WriteLine(System.UInt32)
  parent: System.Console
  isExternal: false
  name: WriteLine(UInt32)
  nameWithType: Console.WriteLine(UInt32)
  fullName: System.Console.WriteLine(UInt32)
- uid: System.Console.WriteLine(System.UInt64)
  parent: System.Console
  isExternal: false
  name: WriteLine(UInt64)
  nameWithType: Console.WriteLine(UInt64)
  fullName: System.Console.WriteLine(UInt64)
- uid: System.Console.WriteLine(System.String,System.Object)
  parent: System.Console
  isExternal: false
  name: WriteLine(String,Object)
  nameWithType: Console.WriteLine(String,Object)
  fullName: System.Console.WriteLine(String,Object)
- uid: System.Console.WriteLine(System.String,System.Object[])
  parent: System.Console
  isExternal: false
  name: WriteLine(String,Object[])
  nameWithType: Console.WriteLine(String,Object[])
  fullName: System.Console.WriteLine(String,Object[])
- uid: System.Console.WriteLine(System.Char[],System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: WriteLine(Char[],Int32,Int32)
  nameWithType: Console.WriteLine(Char[],Int32,Int32)
  fullName: System.Console.WriteLine(Char[],Int32,Int32)
- uid: System.Console.WriteLine(System.String,System.Object,System.Object)
  parent: System.Console
  isExternal: false
  name: WriteLine(String,Object,Object)
  nameWithType: Console.WriteLine(String,Object,Object)
  fullName: System.Console.WriteLine(String,Object,Object)
- uid: System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)
  parent: System.Console
  isExternal: false
  name: WriteLine(String,Object,Object,Object)
  nameWithType: Console.WriteLine(String,Object,Object,Object)
  fullName: System.Console.WriteLine(String,Object,Object,Object)
- uid: System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)
  parent: System.Console
  isExternal: false
  name: WriteLine(String,Object,Object,Object,Object)
  nameWithType: Console.WriteLine(String,Object,Object,Object,Object)
  fullName: System.Console.WriteLine(String,Object,Object,Object,Object)
- uid: System.Console.BackgroundColor*
  parent: System.Console
  isExternal: false
  name: BackgroundColor
  nameWithType: Console.BackgroundColor
- uid: System.Console.Beep*
  parent: System.Console
  isExternal: false
  name: Beep
  nameWithType: Console.Beep
- uid: System.Console.BufferHeight*
  parent: System.Console
  isExternal: false
  name: BufferHeight
  nameWithType: Console.BufferHeight
- uid: System.Console.BufferWidth*
  parent: System.Console
  isExternal: false
  name: BufferWidth
  nameWithType: Console.BufferWidth
- uid: System.Console.CapsLock*
  parent: System.Console
  isExternal: false
  name: CapsLock
  nameWithType: Console.CapsLock
- uid: System.Console.Clear*
  parent: System.Console
  isExternal: false
  name: Clear
  nameWithType: Console.Clear
- uid: System.Console.CursorLeft*
  parent: System.Console
  isExternal: false
  name: CursorLeft
  nameWithType: Console.CursorLeft
- uid: System.Console.CursorSize*
  parent: System.Console
  isExternal: false
  name: CursorSize
  nameWithType: Console.CursorSize
- uid: System.Console.CursorTop*
  parent: System.Console
  isExternal: false
  name: CursorTop
  nameWithType: Console.CursorTop
- uid: System.Console.CursorVisible*
  parent: System.Console
  isExternal: false
  name: CursorVisible
  nameWithType: Console.CursorVisible
- uid: System.Console.Error*
  parent: System.Console
  isExternal: false
  name: Error
  nameWithType: Console.Error
- uid: System.Console.ForegroundColor*
  parent: System.Console
  isExternal: false
  name: ForegroundColor
  nameWithType: Console.ForegroundColor
- uid: System.Console.In*
  parent: System.Console
  isExternal: false
  name: In
  nameWithType: Console.In
- uid: System.Console.InputEncoding*
  parent: System.Console
  isExternal: false
  name: InputEncoding
  nameWithType: Console.InputEncoding
- uid: System.Console.IsErrorRedirected*
  parent: System.Console
  isExternal: false
  name: IsErrorRedirected
  nameWithType: Console.IsErrorRedirected
- uid: System.Console.IsInputRedirected*
  parent: System.Console
  isExternal: false
  name: IsInputRedirected
  nameWithType: Console.IsInputRedirected
- uid: System.Console.IsOutputRedirected*
  parent: System.Console
  isExternal: false
  name: IsOutputRedirected
  nameWithType: Console.IsOutputRedirected
- uid: System.Console.KeyAvailable*
  parent: System.Console
  isExternal: false
  name: KeyAvailable
  nameWithType: Console.KeyAvailable
- uid: System.Console.LargestWindowHeight*
  parent: System.Console
  isExternal: false
  name: LargestWindowHeight
  nameWithType: Console.LargestWindowHeight
- uid: System.Console.LargestWindowWidth*
  parent: System.Console
  isExternal: false
  name: LargestWindowWidth
  nameWithType: Console.LargestWindowWidth
- uid: System.Console.MoveBufferArea*
  parent: System.Console
  isExternal: false
  name: MoveBufferArea
  nameWithType: Console.MoveBufferArea
- uid: System.Console.NumberLock*
  parent: System.Console
  isExternal: false
  name: NumberLock
  nameWithType: Console.NumberLock
- uid: System.Console.OpenStandardError*
  parent: System.Console
  isExternal: false
  name: OpenStandardError
  nameWithType: Console.OpenStandardError
- uid: System.Console.OpenStandardInput*
  parent: System.Console
  isExternal: false
  name: OpenStandardInput
  nameWithType: Console.OpenStandardInput
- uid: System.Console.OpenStandardOutput*
  parent: System.Console
  isExternal: false
  name: OpenStandardOutput
  nameWithType: Console.OpenStandardOutput
- uid: System.Console.Out*
  parent: System.Console
  isExternal: false
  name: Out
  nameWithType: Console.Out
- uid: System.Console.OutputEncoding*
  parent: System.Console
  isExternal: false
  name: OutputEncoding
  nameWithType: Console.OutputEncoding
- uid: System.Console.Read*
  parent: System.Console
  isExternal: false
  name: Read
  nameWithType: Console.Read
- uid: System.Console.ReadKey*
  parent: System.Console
  isExternal: false
  name: ReadKey
  nameWithType: Console.ReadKey
- uid: System.Console.ReadLine*
  parent: System.Console
  isExternal: false
  name: ReadLine
  nameWithType: Console.ReadLine
- uid: System.Console.ResetColor*
  parent: System.Console
  isExternal: false
  name: ResetColor
  nameWithType: Console.ResetColor
- uid: System.Console.SetBufferSize*
  parent: System.Console
  isExternal: false
  name: SetBufferSize
  nameWithType: Console.SetBufferSize
- uid: System.Console.SetCursorPosition*
  parent: System.Console
  isExternal: false
  name: SetCursorPosition
  nameWithType: Console.SetCursorPosition
- uid: System.Console.SetError*
  parent: System.Console
  isExternal: false
  name: SetError
  nameWithType: Console.SetError
- uid: System.Console.SetIn*
  parent: System.Console
  isExternal: false
  name: SetIn
  nameWithType: Console.SetIn
- uid: System.Console.SetOut*
  parent: System.Console
  isExternal: false
  name: SetOut
  nameWithType: Console.SetOut
- uid: System.Console.SetWindowPosition*
  parent: System.Console
  isExternal: false
  name: SetWindowPosition
  nameWithType: Console.SetWindowPosition
- uid: System.Console.SetWindowSize*
  parent: System.Console
  isExternal: false
  name: SetWindowSize
  nameWithType: Console.SetWindowSize
- uid: System.Console.Title*
  parent: System.Console
  isExternal: false
  name: Title
  nameWithType: Console.Title
- uid: System.Console.TreatControlCAsInput*
  parent: System.Console
  isExternal: false
  name: TreatControlCAsInput
  nameWithType: Console.TreatControlCAsInput
- uid: System.Console.WindowHeight*
  parent: System.Console
  isExternal: false
  name: WindowHeight
  nameWithType: Console.WindowHeight
- uid: System.Console.WindowLeft*
  parent: System.Console
  isExternal: false
  name: WindowLeft
  nameWithType: Console.WindowLeft
- uid: System.Console.WindowTop*
  parent: System.Console
  isExternal: false
  name: WindowTop
  nameWithType: Console.WindowTop
- uid: System.Console.WindowWidth*
  parent: System.Console
  isExternal: false
  name: WindowWidth
  nameWithType: Console.WindowWidth
- uid: System.Console.Write*
  parent: System.Console
  isExternal: false
  name: Write
  nameWithType: Console.Write
- uid: System.Console.WriteLine*
  parent: System.Console
  isExternal: false
  name: WriteLine
  nameWithType: Console.WriteLine
