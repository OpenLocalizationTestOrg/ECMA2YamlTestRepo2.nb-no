### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Button
  id: Button
  children:
  - System.Web.UI.WebControls.Button.#ctor
  - System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Button.CausesValidation
  - System.Web.UI.WebControls.Button.Click
  - System.Web.UI.WebControls.Button.Command
  - System.Web.UI.WebControls.Button.CommandArgument
  - System.Web.UI.WebControls.Button.CommandName
  - System.Web.UI.WebControls.Button.GetPostBackOptions
  - System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  - System.Web.UI.WebControls.Button.OnClientClick
  - System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  - System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.Button.PostBackUrl
  - System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.Button.Text
  - System.Web.UI.WebControls.Button.UseSubmitBehavior
  - System.Web.UI.WebControls.Button.ValidationGroup
  langs:
  - csharp
  name: Button
  nameWithType: Button
  fullName: System.Web.UI.WebControls.Button
  type: Class
  summary: "Viser en knapp-kontroll på siden."
  remarks: "I dette emnet:- [Introduksjon](#Introduction)      -   [knappen tilbakesending virkemåten og hendelser Server](#ButtonPostbackBehaviorandServerEvents)      -   [behandling for hendelser i klienten skriptet](#HandlingButtonEventsinClientScript)      -   [kontrollene og validering](#ButtonControlsAndValidation)      -   [knappene Kontroller](#ButtonsInDataControls)      -   [Binding Data kontrollene](#BindingDataToTheControls)      -   [ved hjelp av knappene med UpdatePanel Kontroller](#UsingButtonsWithUpdatePanelControls)      -   [deklarerende syntaksen](#DeclarativeSyntax) <a name=&quot;Introduction&quot;> </a> ## Introduksjon Bruk knappekontrollen til å opprette en knapp på siden som lar brukere for å legge inn en side til serveren.       Kontrollen utløser en hendelse i server-kode som kan håndtere, for å svare på tilbakesending. Det kan også opprette en hendelse i klientskript som du kan håndtere, før siden posteres eller som kan kjøre og avbryte innsending av siden.      > [!NOTE] > ASP.NET har flere typer kontrollene, hver som vises på en annen måte på websider. De er knappekontrollen blir gjengitt som et push-knappen. den <xref:System.Web.UI.WebControls.LinkButton>kontrollen, som gjengir som en kobling; og <xref:System.Web.UI.WebControls.ImageButton>kontrollen, som blir gjengitt som et bilde; og <xref:System.Web.UI.WebControls.ImageMap>kontrollen, som lar deg opprette grafikk med soner som brukerne kan klikke.</xref:System.Web.UI.WebControls.ImageMap> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.WebControls.LinkButton> Som standard sende alle kontrollene siden når du klikker. Du kan også bruke den <xref:System.Web.UI.HtmlControls.HtmlButton>og <xref:System.Web.UI.HtmlControls.HtmlInputButton>Kontroller til å opprette knappene på siden som er programmerbare i server-kode.</xref:System.Web.UI.HtmlControls.HtmlInputButton> </xref:System.Web.UI.HtmlControls.HtmlButton> For mer informasjon om forskjeller mellom HTML- og Web-server, se [oversikt over ASP.NET Web Server Kontroller](~/add/includes/ajax-current-ext-md.md).       Som standard er en knappekontrollen Send-knappen. En sendeknappen er ikke et kommandonavn (angitt av den <xref:System.Web.UI.WebControls.Button.CommandName%2A>egenskapen) som er forbundet med knappen og ganske enkelt poster websiden tilbake til serveren.</xref:System.Web.UI.WebControls.Button.CommandName%2A> Du kan angi en hendelsesbehandling for den <xref:System.Web.UI.WebControls.Button.Click>-hendelsen for å kontrollere programmatisk handlingene utføres når Send klikkes.</xref:System.Web.UI.WebControls.Button.Click>       Kommando har et kommandonavn som er knyttet til knappen eksempel `Sort`, ved å angi den <xref:System.Web.UI.WebControls.Button.CommandName%2A>egenskapen.</xref:System.Web.UI.WebControls.Button.CommandName%2A> Dette lar deg opprette flere knappen Kontroller på en webside og fastslå programmatisk som knappekontrollen klikkes. Du kan også bruke den <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>egenskap med en kommando for å gi tilleggsinformasjon om kommandoen for å utføre, for eksempel `Ascending`.</xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Du kan angi en hendelsesbehandling for den <xref:System.Web.UI.WebControls.Button.Command>-hendelsen for å kontrollere programmatisk handlingene utføres når den kommandoen ble brukt.</xref:System.Web.UI.WebControls.Button.Command>      <a name=&quot;ButtonPostbackBehaviorandServerEvents&quot;></a>## Knappen tilbakesending virkemåten og Server hendelser når en bruker klikker en hvilken som helst Web server kontroll, sendes siden til serveren. Dette gjør at websiden skal behandles og ventende hendelser oppstå i serverbasert kode. Når alle siden og behandling av kontrollen er ferdig, gjengir siden selve til nettleseren på nytt.       Knappene kan øke sine egne <xref:System.Web.UI.WebControls.Button.Click>hendelser eller <xref:System.Web.UI.WebControls.Button.Command>som du kan håndtere, ved hjelp av serverbasert kode.</xref:System.Web.UI.WebControls.Button.Command> </xref:System.Web.UI.WebControls.Button.Click> Dette er forskjellig fra hendelser i tradisjonell HTML-sider eller klientbaserte webprogrammer, der en knapp `onclick` hendelsen behandles ved hjelp av JavaScript som kjører på klienten. Hvis du vil ha mer informasjon, se [ASP.NET Web Forms Server kontrollen hendelsen modellen](~/add/includes/ajax-current-ext-md.md).       Når brukere klikker en knappekontrollen, posteres siden tilbake til serveren. Du kan konfigurere knappene for å legge inn gjeldende side til en annen side som standard siden posteres tilbake til seg selv. Dette kan være nyttig for å opprette flere sider skjemaer. Hvis du vil ha mer informasjon, se [tvers av sider Posting i ASP.NET Web Forms](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;HandlingButtonEventsinClientScript&quot;></a>## Behandling for hendelser i klienten skriptet kontrollene kan øke både serverhendelser og klienten hendelser. Serveren hendelsene etter tilbakesending, og de behandles i serversiden koden du skriver for siden. Klienten hendelser håndteres i klientskript, vanligvis ECMAScript (JavaScript), og starter før siden er sendt. Legger til klientsiden hendelser i ASP.NET kontrollene, kan du utføre oppgaver som vises bekreftelsesdialogbokser før du sender inn siden og avbryte potensielt innsending av. Hvis du vil ha mer informasjon, se [klienten skriptet i ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md) og [slik: svare på knappen Web Server Kontrollhendelsene i klientskript](~/add/includes/ajax-current-ext-md.md).       Du bør også knappekontrollen også bruke klientskript til å utføre tilbakesending (i stedet for bare å utføre en HTTP POST-operasjon). Dette kan være nyttig hvis du vil endre programmatisk tilbakesending, for eksempel tilknytting til andre elementer på siden. Du kan angi knappekontrollen <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>egenskapen `true` kan forårsake knappekontrollen til bruk skript for klienten basert tilbakesending.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>      <a name=&quot;ButtonControlsAndValidation&quot;></a>## Hvis du klikker en knappekontrollen fører til at validerer kontrollen til å utføre kontrollen kontrollene og validering Hvis en side inneholder ASP.NET validerer kontroller av standard. Hvis validering på klientsiden er aktivert for en validerer kontroll, sendes ikke siden hvis valideringskontroll mislyktes.       Tabellen nedenfor beskriver egenskapene som støttes av kontrollene som gjør det mulig å styre valideringen mer nøyaktig.      | Egenskapen | Beskrivelse |   |--------------|-----------------|   | <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>| Angir om å klikke knappen også til å utføre valideringskontroll.</xref:System.Web.UI.WebControls.Button.CausesValidation%2A> Sett denne egenskapen til `false` å hindre valideringskontroll. |   | <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>| Kan du angi hvilken validerer på siden kalles når knappen klikkes.</xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> Hvis ingen valideringsgrupper er opprettet, klikke knappen kaller alle validerer på siden. |       Hvis du vil ha mer informasjon, se [validering brukerinndata i ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;ButtonsInDataControls&quot;></a>## Knappene Data kontroller for server webkontroller ofte brukes i datakontroller som den <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.GridView>, og <xref:System.Web.UI.WebControls.Repeater>Vis kontroller.</xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataList> I slike tilfeller du vanligvis ikke svarer direkte til knappen hendelsen. En knapp i et datakontrollen opphøyer i stedet en hendelse som er spesifikke for datakontrollen. For eksempel i den <xref:System.Web.UI.WebControls.DataList>kontroll, en knapp kan øke det <xref:System.Web.UI.WebControls.DataList>kontrollens <xref:System.Web.UI.WebControls.DataList.ItemCommand>hendelsen i stedet for å heve for kontrollens <xref:System.Web.UI.WebControls.Button.Click>hendelsen.</xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.DataList.ItemCommand> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList>       Fordi databundet listen kontrollerer kan inneholde mange knapper, kan du angi egenskapen <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>til å angi en verdi som skal sendes som en del av hendelsen.</xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Deretter kan du teste for dette argumentet for å se som ble brukt.      <a name=&quot;BindingDataToTheControls&quot;></a>## Binding Data til kontroller du kan binde knappen webkontroller-server til en datakilde for å kontrollere egenskapsinnstillingene dynamisk. Du kan for eksempel ikke angi en knapp <xref:System.Web.UI.WebControls.Button.Text%2A>ved hjelp av databinding.</xref:System.Web.UI.WebControls.Button.Text%2A>      <a name=&quot;UsingButtonsWithUpdatePanelControls&quot;></a>## For å bruke knappene med UpdatePanel Kontroller delvis-siden til å gjengi gjør det mulig å oppdatere deler av en side uten en tilbakesending. <xref:System.Web.UI.UpdatePanel>Kontroller at du kan merke deler av siden som deltar i delvis siden gjengivelse.</xref:System.Web.UI.UpdatePanel> Som standard virkemåte for kontroller i en <xref:System.Web.UI.UpdatePanel>kontroll, inkludert kontrollene, er å utføre en asynkron tilbakesending i stedet for en tilbakesending.</xref:System.Web.UI.UpdatePanel> Dette oppdaterer bare innholdet i den <xref:System.Web.UI.UpdatePanel>kontrollere tilbakesending kommer fra.</xref:System.Web.UI.UpdatePanel>       I tillegg til et scenario av en kontroll som er i en <xref:System.Web.UI.UpdatePanel>kontrollen, kan du bruke kontrollene med <xref:System.Web.UI.UpdatePanel>Kontroller i følgende situasjoner:-definerer en kontroll som er utenfor en <xref:System.Web.UI.UpdatePanel>kontrollere som en <xref:System.Web.UI.AsyncPostBackTrigger>kontroll for panelet.</xref:System.Web.UI.AsyncPostBackTrigger> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> Når knappen klikkes utfører en asynkron tilbakesending og oppdaterer innholdet i panelet.      -Definere en kontroll som er i en <xref:System.Web.UI.UpdatePanel>kontrollere som en <xref:System.Web.UI.PostBackTrigger>for panelet.</xref:System.Web.UI.PostBackTrigger> </xref:System.Web.UI.UpdatePanel> Når du klikker du knappen, den utfører en tilbakesending selv om det er plassert i en <xref:System.Web.UI.UpdatePanel>kontroll.</xref:System.Web.UI.UpdatePanel>       For mer informasjon om delvis-siden gjengivelse og bruker <xref:System.Web.UI.UpdatePanel>kontroller, se [oversikt over kontroll av UpdatePanel](~/add/includes/ajax-current-ext-md.md) og [delvis siden gjengivelse oversikt over](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.UpdatePanel>      <a name=&quot;DeclarativeSyntax&quot;></a>## Deklarerende syntaks.```   <asp:Button       AccessKey=&quot;string&quot;       BackColor=&quot;color name|#dddddd&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       CausesValidation=&quot;True|False&quot;       CommandArgument=&quot;string&quot;       CommandName=&quot;string&quot;       CssClass=&quot;string&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       Height=&quot;size&quot;       ID=&quot;string&quot;       OnClick=&quot;Click event handler&quot;       OnClientClick=&quot;string&quot;       OnCommand=&quot;Command event handler&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       PostBackUrl=&quot;uri&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       Text=&quot;string&quot;       ToolTip=&quot;string&quot;       UseSubmitBehavior=&quot;True|False&quot;       ValidationGroup=&quot;string&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   />   ```"
  example:
  - "The following code example demonstrates how to create a Submit Button control that posts the Web page content back to the server.  \n  \n [!code-cs[Classic Button Example#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_42_1.aspx)]\n [!code-vb[Classic Button Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_42_1.aspx)]  \n  \n The following code example demonstrates how to create a Command Button control that sorts a list.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_42_2.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_42_2.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Click")]

      [System.ComponentModel.DefaultProperty("Text")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.SupportsEventValidation]

      [System.Web.UI.ToolboxData("<{0}:Button runat="server" Text="Button"></{0}:Button>")]

      public class Button : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  implements:
  - System.Web.UI.IPostBackEventHandler
  - System.Web.UI.WebControls.IButtonControl
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CreateControlStyle
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SaveViewState
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagKey
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.TrackViewState
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Button()
  nameWithType: Button.Button()
  fullName: System.Web.UI.WebControls.Button.Button()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> klasse."
  remarks: "Bruk denne konstruktøren til å opprette og starte en ny forekomst av <xref:System.Web.UI.WebControls.Button>klassen.</xref:System.Web.UI.WebControls.Button>"
  example:
  - "The following code example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.Button> class.  \n  \n [!code-cs[ButtonCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_106_1.aspx)]\n [!code-vb[ButtonCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_106_1.aspx)]"
  syntax:
    content: public Button ();
    parameters: []
  overload: System.Web.UI.WebControls.Button.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: Button.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.AddAttributesToRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Legger til attributtene for den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollen utdata dataflyten for gjengivelse på klienten."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the AddAttributesToRender method in a custom server control, so that the <xref:System.Web.UI.WebControls.Button> text always displays in red.  \n  \n [!code-cs[CustomButtonAddAttributesToRender#1](~/add/codesnippet/csharp/e2a4848c-bb88-4816-9064-_1.aspx)]\n [!code-vb[CustomButtonAddAttributesToRender#1](~/add/codesnippet/visualbasic/e2a4848c-bb88-4816-9064-_1.aspx)]  \n[!code-cs[CustomButtonAddAttributesToRender#2](~/add/codesnippet/csharp/e2a4848c-bb88-4816-9064-_2.cs)]\n[!code-vb[CustomButtonAddAttributesToRender#2](~/add/codesnippet/visualbasic/e2a4848c-bb88-4816-9064-_2.vb)]"
  syntax:
    content: protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "En <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> som inneholder utdata dataflyten å gjengi på klienten."
  overload: System.Web.UI.WebControls.Button.AddAttributesToRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.CausesValidation
  id: CausesValidation
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CausesValidation
  nameWithType: Button.CausesValidation
  fullName: System.Web.UI.WebControls.Button.CausesValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir en verdi som angir om valideringen utføres når den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollen klikkes."
  remarks: "Som standard siden valideringen utføres når en <xref:System.Web.UI.WebControls.Button>kontrollen klikkes.</xref:System.Web.UI.WebControls.Button> Siden validering bestemmer om inndata kontrollene som er tilknyttet en validering kontroll på siden med alle bestod valideringsregler som er angitt av kontrollen validering.       Du kan angi eller fastslå om validering er utført på både klienten og serveren når en <xref:System.Web.UI.WebControls.Button>kontrollen klikkes ved hjelp av egenskapen CausesValidation.</xref:System.Web.UI.WebControls.Button> For å hindre at godkjenningen fra utført egenskapen CausesValidation til `false`.      > [!NOTE] > Må du angi egenskapen CausesValidation `false` når du bruker den <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>egenskapen ikke poste tilbake til en annen side.</xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> Du bør kontrollere validering eksplisitt når sendes tilbake til en annen side. For eksempel i avsnittet Merknader for den <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>egenskapen.</xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>       Denne egenskapen vanligvis er satt til `false` for en `reset` eller `clear` for å hindre godkjenningen fra utført når den ble brukt.       Når verdien for egenskapen CausesValidation er satt til `true`, du kan også bruke den <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>til å angi navnet på valideringsgruppen for den <xref:System.Web.UI.WebControls.Button>kontrollen får valideringen.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>       Denne egenskapen kan ikke angis ved oppsett eller stil arket Oppsett. Hvis du vil ha mer informasjon, se <xref:System.Web.UI.ThemeableAttribute>og [ASP.NET tema og skallene](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the CausesValidation property to prevent page validation from occurring. Note that the <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> method activates each validation control independently.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ButtonControlCausesValidation#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_269_1.aspx)]\n [!code-cs[ButtonControlCausesValidation#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_269_1.aspx)]"
  syntax:
    content: public virtual bool CausesValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis valideringen utføres når den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollen er klikket; ellers, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardverdien er <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.Button.CausesValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.Click
  id: Click
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Click
  nameWithType: Button.Click
  fullName: System.Web.UI.WebControls.Button.Click
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Forekommer når den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollen klikkes."
  remarks: "Klikk denne hendelsen oppstår når den <xref:System.Web.UI.WebControls.Button>kontrollen klikkes.</xref:System.Web.UI.WebControls.Button> Denne hendelsen brukes vanligvis når ingen kommandonavnet er knyttet til den <xref:System.Web.UI.WebControls.Button>kontrollen (for eksempel med en Send-knapp).</xref:System.Web.UI.WebControls.Button>       Du finner mer informasjon om behandling av hendelser [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the Click event in order to display a message on the Web page when the <xref:System.Web.UI.WebControls.Button> control is clicked.  \n  \n [!code-vb[ButtonClickText#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_21_1.aspx)]\n [!code-cs[ButtonClickText#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_21_1.aspx)]"
  syntax:
    content: public event EventHandler Click;
    return:
      type: System.EventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.Command
  id: Command
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Command
  nameWithType: Button.Command
  fullName: System.Web.UI.WebControls.Button.Command
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Forekommer når den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollen klikkes."
  remarks: "Kommandoen denne hendelsen oppstår når den <xref:System.Web.UI.WebControls.Button>kontrollen klikkes.</xref:System.Web.UI.WebControls.Button> Denne hendelsen brukes vanligvis når en kommandonavnet eksempel `Sort`, er knyttet til den <xref:System.Web.UI.WebControls.Button>kontroll.</xref:System.Web.UI.WebControls.Button> Dette lar deg opprette flere <xref:System.Web.UI.WebControls.Button>vises på en nettserver siden og fastslå programmatisk som <xref:System.Web.UI.WebControls.Button>kontrollen klikkes.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button>      > [!NOTE] > For kommandoen denne hendelsen oppstår gjennom kontrollen hierarkiet i form av den `BubbleEvent`.       Du finner mer informasjon om behandling av hendelser [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the Command event to sort a list when the <xref:System.Web.UI.WebControls.Button> control is clicked. This example specifies the event handler declaratively, using the <xref:System.Web.UI.WebControls.Button.OnClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_140_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_140_1.aspx)]  \n  \n The following code example demonstrates how to specify the event handler and programmatically add it to the event in the `Page_Load` method.  \n  \n [!code-cs[ButtonCommand#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_140_2.aspx)]\n [!code-vb[ButtonCommand#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_140_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.CommandEventHandler Command;
    return:
      type: System.Web.UI.WebControls.CommandEventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.CommandArgument
  id: CommandArgument
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CommandArgument
  nameWithType: Button.CommandArgument
  fullName: System.Web.UI.WebControls.Button.CommandArgument
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir en valgfri parameter ble sendt til den <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> hendelsen sammen med den tilknyttede <xref:System.Web.UI.WebControls.Button.CommandName*>.</xref:System.Web.UI.WebControls.Button.CommandName*>"
  remarks: "Bruk CommandArgument-egenskapen til å angi en parameter som komplementerer den <xref:System.Web.UI.WebControls.Button.CommandName%2A>egenskapen.</xref:System.Web.UI.WebControls.Button.CommandName%2A>      > [!NOTE] > Selv om du kan angi egenskapen CommandArgument alene, er det vanligvis bare brukes når den <xref:System.Web.UI.WebControls.Button.CommandName%2A>egenskapen også er angitt.</xref:System.Web.UI.WebControls.Button.CommandName%2A>       Egenskapen CommandArgument komplementerer den <xref:System.Web.UI.WebControls.Button.CommandName%2A>ved slik at du kan angi mer informasjon om kommandoen som skal utføres.</xref:System.Web.UI.WebControls.Button.CommandName%2A> Hvis du har angitt for eksempel den <xref:System.Web.UI.WebControls.Button.CommandName%2A>egenskapen `Sort` og egenskapen CommandArgument til `Ascending`, du angi en kommando for å sortere i stigende rekkefølge.</xref:System.Web.UI.WebControls.Button.CommandName%2A>       Denne egenskapen kan ikke angis ved oppsett eller stil arket Oppsett. Hvis du vil ha mer informasjon, se <xref:System.Web.UI.ThemeableAttribute>og [ASP.NET tema og skallene](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the CommandArgument property to create a <xref:System.Web.UI.WebControls.Button> control that sorts a list in ascending order.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_977_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_977_1.aspx)]"
  syntax:
    content: public string CommandArgument { get; set; }
    return:
      type: System.String
      description: "En valgfri parameter sendt til den <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> hendelsen sammen med den tilknyttede <xref:System.Web.UI.WebControls.Button.CommandName*>.</xref:System.Web.UI.WebControls.Button.CommandName*> Standardverdien er &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.Button.CommandArgument*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.CommandName
  id: CommandName
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CommandName
  nameWithType: Button.CommandName
  fullName: System.Web.UI.WebControls.Button.CommandName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir kommandonavnet på som er tilknyttet den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollen som er sendt til den <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> hendelsen."
  remarks: "Når du har flere <xref:System.Web.UI.WebControls.Button>vises på en side, bruke egenskapen kommandonavn til å angi eller fastslå kommandonavnet tilknyttet hver <xref:System.Web.UI.WebControls.Button>kontroll.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button> Du kan angi egenskapen kommandonavn med en streng som identifiserer kommandoen som skal utføres. Deretter kan du programmatisk bestemme kommandonavnet for den <xref:System.Web.UI.WebControls.Button>kontrollere og utføre de nødvendige handlingene.</xref:System.Web.UI.WebControls.Button>       Mer informasjon om kommandoen som `Ascending`, kan angis ved hjelp av den <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>egenskapen.</xref:System.Web.UI.WebControls.Button.CommandArgument%2A>       Denne egenskapen kan ikke angis ved oppsett eller stil arket Oppsett. Hvis du vil ha mer informasjon, se <xref:System.Web.UI.ThemeableAttribute>og [ASP.NET tema og skallene](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the CommandName property to create a <xref:System.Web.UI.WebControls.Button> control that sorts a list.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_955_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_955_1.aspx)]"
  syntax:
    content: public string CommandName { get; set; }
    return:
      type: System.String
      description: "Kommandonavnet for den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollen. Standardverdien er &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.Button.CommandName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions
  id: GetPostBackOptions
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: GetPostBackOptions()
  nameWithType: Button.GetPostBackOptions()
  fullName: System.Web.UI.WebControls.Button.GetPostBackOptions()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Oppretter en <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> objektet som representerer den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> sende tilbake virkemåten for kontroll."
  remarks: "Metoden GetPostBackOptions oppretter en <xref:System.Web.UI.PostBackOptions>objektet som representerer den <xref:System.Web.UI.WebControls.Button>sende tilbake virkemåten for kontroll.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.PostBackOptions> Den <xref:System.Web.UI.PostBackOptions>objekt deretter vanligvis er sendt til den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=fullName>metoden som brukes til å hente en referanse til en klient-skript-funksjon som når den startes, fører til at serveren ikke poste tilbake til siden.</xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=fullName> </xref:System.Web.UI.PostBackOptions>       Denne metoden brukes hovedsakelig av kontrollutviklere når utvider <xref:System.Web.UI.WebControls.Button>klasse.</xref:System.Web.UI.WebControls.Button>"
  syntax:
    content: protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();
    parameters: []
    return:
      type: System.Web.UI.PostBackOptions
      description: "En <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> som representerer den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> sende tilbake virkemåten for kontroll."
  overload: System.Web.UI.WebControls.Button.GetPostBackOptions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  id: OnClick(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnClick(EventArgs)
  nameWithType: Button.OnClick(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnClick(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hever den <xref href=&quot;System.Web.UI.WebControls.Button.Click&quot;> </xref> hendelse av den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollen."
  remarks: "Den <xref:System.Web.UI.WebControls.Button.Click>denne hendelsen oppstår når den <xref:System.Web.UI.WebControls.Button>kontrollen klikkes.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.Click> Denne hendelsen brukes vanligvis når ingen kommandonavnet er knyttet til den <xref:System.Web.UI.WebControls.Button>kontrollen (for eksempel med en Send-knapp).</xref:System.Web.UI.WebControls.Button>       Opprettet en hendelse aktiverer hendelsesbehandlingen via en representant. Hvis du vil ha mer informasjon, se [NIB: opprettet en hendelse](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Metoden OnClick kan også avledede klasser behandle hendelsen uten å knytte representant. Dette er den foretrukne metoden for behandling av hendelsen i en avledet klasse."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Click> event in order to display a simple message on the Web page.  \n  \n [!code-vb[ButtonClickText#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_232_1.aspx)]\n [!code-cs[ButtonClickText#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_232_1.aspx)]"
  syntax:
    content: protected virtual void OnClick (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Hendelsesdata."
  overload: System.Web.UI.WebControls.Button.OnClick*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnClientClick
  id: OnClientClick
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnClientClick
  nameWithType: Button.OnClientClick
  fullName: System.Web.UI.WebControls.Button.OnClientClick
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir klientsiden skriptet som kjøres når en <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollens <xref href=&quot;System.Web.UI.WebControls.Button.Click&quot;> </xref> hendelsen skjer."
  remarks: "Bruk OnClientClick-egenskapen til å angi ytterligere-skript som kjøres når en <xref:System.Web.UI.WebControls.Button>kontrollens <xref:System.Web.UI.WebControls.Button.Click>denne hendelsen oppstår.</xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button> Skriptet som du angir for denne egenskapen gjengis i den <xref:System.Web.UI.WebControls.Button>kontrollens `OnClick` attributtet i tillegg til kontrollens forhåndsdefinert skript på klientsiden</xref:System.Web.UI.WebControls.Button>       Denne egenskapen kan ikke angis ved oppsett eller stil arket Oppsett. Hvis du vil ha mer informasjon, se <xref:System.Web.UI.ThemeableAttribute>og [ASP.NET tema og skallene](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192871).  \n  \n The following code example demonstrates how to use the OnClientClick property to specify additional client-side script that executes when a <xref:System.Web.UI.WebControls.Button> control is clicked.  \n  \n [!code-cs[Button.OnClientClick#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1351_1.aspx)]\n [!code-vb[Button.OnClientClick#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1351_1.aspx)]"
  syntax:
    content: public virtual string OnClientClick { get; set; }
    return:
      type: System.String
      description: "Klientsiden skriptet som kjøres når en <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollens <xref href=&quot;System.Web.UI.WebControls.Button.Click&quot;> </xref> hendelsen skjer."
  overload: System.Web.UI.WebControls.Button.OnClientClick*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  id: OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnCommand(CommandEventArgs)
  nameWithType: Button.OnCommand(CommandEventArgs)
  fullName: System.Web.UI.WebControls.Button.OnCommand(CommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hever den <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> hendelse av den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollen."
  remarks: "Den <xref:System.Web.UI.WebControls.Button.Command>denne hendelsen oppstår når den <xref:System.Web.UI.WebControls.Button>kontrollen klikkes.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.Command> Denne hendelsen brukes vanligvis når en kommandonavnet eksempel `Sort`, er knyttet til den <xref:System.Web.UI.WebControls.Button>kontroll.</xref:System.Web.UI.WebControls.Button> Dette lar deg opprette flere <xref:System.Web.UI.WebControls.Button>vises på en nettserver siden og fastslå programmatisk som <xref:System.Web.UI.WebControls.Button>kontrollen klikkes.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button>      > [!NOTE] > Den <xref:System.Web.UI.WebControls.Button.Command>denne hendelsen oppstår gjennom kontrollen hierarkiet i form av den `BubbleEvent`.</xref:System.Web.UI.WebControls.Button.Command>       Opprettet en hendelse aktiverer hendelsesbehandlingen via en representant. Hvis du vil ha mer informasjon, se [NIB: opprettet en hendelse](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Metoden OnCommand kan også avledede klasser behandle hendelsen uten å knytte representant. Dette er den foretrukne metoden for behandling av hendelsen i en avledet klasse."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Command> event to sort a list when the <xref:System.Web.UI.WebControls.Button> control is clicked. This example specifies the event handler declaratively, using the <xref:System.Web.UI.WebControls.Button.OnClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/0fac6d1f-268b-4550-92d4-_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/0fac6d1f-268b-4550-92d4-_1.aspx)]  \n  \n The following code example demonstrates how to specify the event handler and programmatically add it to the event in the `Page_Load` method.  \n  \n [!code-cs[ButtonCommand#1](~/add/codesnippet/csharp/0fac6d1f-268b-4550-92d4-_2.aspx)]\n [!code-vb[ButtonCommand#1](~/add/codesnippet/visualbasic/0fac6d1f-268b-4550-92d4-_2.aspx)]"
  syntax:
    content: protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.CommandEventArgs
      description: "Hendelsesdata."
  overload: System.Web.UI.WebControls.Button.OnCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: Button.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Bestemmer om den har blitt brukt før gjengivelse på klienten."
  remarks: "Metoden OnPreRender brukes hovedsakelig av kontrollutviklere når det avledes en egendefinert klasse fra den <xref:System.Web.UI.WebControls.Button>kontroll.</xref:System.Web.UI.WebControls.Button>"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Hendelsesdata."
  overload: System.Web.UI.WebControls.Button.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.PostBackUrl
  id: PostBackUrl
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
  fullName: System.Web.UI.WebControls.Button.PostBackUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir URL-adressen på siden Legg til fra gjeldende side når den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollen klikkes."
  remarks: "The PostBackUrl property allows you to perform a cross-page post using the <xref:System.Web.UI.WebControls.Button> control.  \n  \n> [!NOTE]\n>  Only correctly specified paths work with this property. For example, relative paths (Test/default.aspx), absolute paths (https://localhost/WebApp/default.aspx) and virtual (~\\Test\\default.aspx) work correctly. Incorrectly formed paths such as \"/Test/default.aspx\" or \"\\Test\\default.aspx\" do not work. See [ASP.NET Web Project Paths](~/add/includes/ajax-current-ext-md.md) for a discussion on creating correct paths.  \n  \n Set the PostBackUrl property to the URL of the Web page to post to when the <xref:System.Web.UI.WebControls.Button> control is clicked. For example, specifying `Page2.aspx` causes the page that contains the <xref:System.Web.UI.WebControls.Button> control to post to `Page2.aspx`. If you do not specify a value for the PostBackUrl property, the page posts back to itself.  \n  \n> [!IMPORTANT]\n>  When performing a cross-page postback with controls with server-side validation, you should check that the page's <xref:System.Web.UI.Page.IsValid%2A> property is `true` before processing the postback. In the case of a cross-page postback, the page to check is the <xref:System.Web.UI.Page.PreviousPage%2A>. The following VB code shows how this is done:  \n  \n```  \nSub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load  \n        If Page.PreviousPage.IsValid Then  \n            ' Handle the post back  \n        Else  \n            Response.Write(\"Invalid\")  \n        End If  \nEnd Sub  \n```  \n  \n For more information on cross-page posting techniques, see [Cross-Page Posting in ASP.NET Web Forms](~/add/includes/ajax-current-ext-md.md).  \n  \n This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the PostBackUrl property to perform a cross-page post. When the user clicks the <xref:System.Web.UI.WebControls.Button> control, the page posts the value entered in the text box to the target page specified by the PostBackUrl property. To run this sample, you must also create a file for the target page in the same directory as this code example. The code for target page is provided in the next example.  \n  \n [!code-vb[Button.PostBackUrlProperty#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_834_1.aspx)]\n [!code-cs[Button.PostBackUrlProperty#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_834_1.aspx)]  \n  \n The following code example demonstrates how to use the <xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=fullName> property to access a value that was posted from another page using the PostBackUrl property. This page gets the string that was posted from the previous page and displays it to the user. If you attempt to run this code example directly, you will get an error because the value of the `text` field will be `null`. Instead, use this code to create a target page and place the file in the same directory as the code for the previous example. The name of the file must correspond to the value specified for the PostBackUrl property in the previous example. When you run the code for the previous example, this page will execute automatically when the cross page post occurs.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Button.PostBackUrlPage2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_834_2.aspx)]\n [!code-vb[Button.PostBackUrlPage2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_834_2.aspx)]"
  syntax:
    content: public virtual string PostBackUrl { get; set; }
    return:
      type: System.String
      description: "URL-adressen til nettsiden ikke poste til fra gjeldende side når den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollen klikkes. Standardverdien er en tom streng (&quot;&quot;), som fører til siden for å legge inn tilbake til seg selv."
  overload: System.Web.UI.WebControls.Button.PostBackUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: Button.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opphøyer hendelser for den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollerer når den legger inn på serveren."
  remarks: "Denne hendelsen er brukt internt av den <xref:System.Web.UI.WebControls.Button>kontroll, når den klikkes, opphøye en <xref:System.Web.UI.WebControls.Button.Click>hendelse, og hvis angitt, en <xref:System.Web.UI.WebControls.Button.Command>hendelse.</xref:System.Web.UI.WebControls.Button.Command> </xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button>"
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "Argumentet for hendelsen."
  overload: System.Web.UI.WebControls.Button.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  id: RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: RenderContents(HtmlTextWriter)
  nameWithType: Button.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.RenderContents(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gjengir innholdet i kontrollen til den angitte writer."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the RenderContents method in a custom server control so that it always displays text following a custom <xref:System.Web.UI.WebControls.Button> server control.  \n  \n [!code-cs[CustomButtonRenderContents#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_178_1.aspx)]\n [!code-vb[CustomButtonRenderContents#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_178_1.aspx)]  \n[!code-cs[CustomButtonRenderContents#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_178_2.cs)]\n[!code-vb[CustomButtonRenderContents#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_178_2.vb)]"
  syntax:
    content: protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "En <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objektet som representerer den utdata dataflyten som skal gjengi HTML-innhold på klienten."
  overload: System.Web.UI.WebControls.Button.RenderContents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opphøyer hendelser for den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollerer når den legger inn på serveren."
  remarks: "Denne hendelsen er brukt internt av den <xref:System.Web.UI.WebControls.Button>kontroll, når den klikkes, opphøye en <xref:System.Web.UI.WebControls.Button.Click>hendelse, og hvis angitt, en <xref:System.Web.UI.WebControls.Button.Command>hendelse.</xref:System.Web.UI.WebControls.Button.Command> </xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button>"
  example:
  - "The following code example demonstrates how to override the IPostBackEventHandler.RaisePostBackEvent method so that it always raises the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event in a custom <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[CustomButtonRaisePostBackEvent#2](~/add/codesnippet/visualbasic/78761a3c-3126-47e7-b48e-_1.vb)]\n [!code-cs[CustomButtonRaisePostBackEvent#2](~/add/codesnippet/csharp/78761a3c-3126-47e7-b48e-_1.cs)]"
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "Argumentet for hendelsen."
  overload: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.Text
  id: Text
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Text
  nameWithType: Button.Text
  fullName: System.Web.UI.WebControls.Button.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir teksten teksten vises i den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollen."
  remarks: "Bruk Text-egenskapen til å angi eller fastslå teksten skal vises i den <xref:System.Web.UI.WebControls.Button>kontroll.</xref:System.Web.UI.WebControls.Button>       Verdien for denne egenskapen Hvis du velger, kan lagres automatisk på en ressursfil ved hjelp av en designer verktøyet. Hvis du vil ha mer informasjon, se <xref:System.ComponentModel.LocalizableAttribute>og [globalisering og lokalisering](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Text property to specify the caption displayed in the <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[ButtonClickText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1294_1.aspx)]\n [!code-cs[ButtonClickText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1294_1.aspx)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "Teksten teksten vises i den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollen. Standardverdien er &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.Button.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior
  id: UseSubmitBehavior
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
  fullName: System.Web.UI.WebControls.Button.UseSubmitBehavior
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir en verdi som angir om den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollen bruker klienten leserens sende mekanisme eller sende tilbake mekanisme for ASP.NET."
  remarks: "Bruk UseSubmitBehavior-egenskapen til å angi om en <xref:System.Web.UI.WebControls.Button>kontrollen bruker klienten leserens sende mekanisme eller sende tilbake mekanisme for ASP.NET.</xref:System.Web.UI.WebControls.Button> Verdien for denne egenskapen er som standard `true`, noe som den <xref:System.Web.UI.WebControls.Button>kontrollen skal bruke leserens sende mekanisme.</xref:System.Web.UI.WebControls.Button> Hvis du angir `false`, ASP.NET siden framework legger-skript til siden for å legge inn skjemaet på serveren.       Når egenskapen UseSubmitBehavior er `false`, kontrollutviklere kan bruke <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metode til å returnere klienten tilbake hendelse for <xref:System.Web.UI.WebControls.Button>.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Strengen som returneres av den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metoden inneholder teksten på klientsiden funksjonskallet og kan settes inn i en klientsiden hendelsesbehandlingen.</xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>       Denne egenskapen kan ikke angis ved oppsett eller stil arket Oppsett. Hvis du vil ha mer informasjon, se <xref:System.Web.UI.ThemeableAttribute>og [ASP.NET tema og skallene](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the UseSubmitBehavior property to specify the submit mechanism that a <xref:System.Web.UI.WebControls.Button> control uses when it posts back to the server. The UseSubmitBehavior property is set to `false`, causing the button to use the ASP.NET postback mechanism. If you view the source code for the rendered page using your browser's View Source command, you will see that client-side script has been added by the ASP.NET page framework to post the form to the server.  \n  \n [!code-vb[Button.UseSubmitBehavior#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_854_1.aspx)]\n [!code-cs[Button.UseSubmitBehavior#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_854_1.aspx)]"
  syntax:
    content: public virtual bool UseSubmitBehavior { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis kontrollen bruker klientleseren sende mekanisme; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.Button.UseSubmitBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.ValidationGroup
  id: ValidationGroup
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
  fullName: System.Web.UI.WebControls.Button.ValidationGroup
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Henter eller angir gruppen med kontroller som den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollen får valideringen når den legger inn på serveren."
  remarks: "Valideringsgrupper kan du tilordne validering Kontroller på en side til en bestemt kategori. Hver valideringsgruppe kan valideres uavhengig av andre valideringsgrupper på siden. Bruk ValidationGroup-egenskapen til å angi navnet på valideringsgruppen for den <xref:System.Web.UI.WebControls.Button>kontrollen får valideringen når den legger inn på serveren.</xref:System.Web.UI.WebControls.Button>       Denne egenskapen har en effekt bare når verdien for den <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>er satt til `true`.</xref:System.Web.UI.WebControls.Button.CausesValidation%2A> Når du angir en verdi for egenskapen ValidationGroup bare valideringen kontrollerer som er en del av den angitte gruppen valideres når den <xref:System.Web.UI.WebControls.Button>kontrollen legger inn på serveren.</xref:System.Web.UI.WebControls.Button> Hvis du ikke angir en verdi for egenskapen og <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>er satt til `true`, alle kontroller for validering på siden som ikke er tilordnet til en valideringsgruppe valideres når kontrollen legger inn på serveren.</xref:System.Web.UI.WebControls.Button.CausesValidation%2A>       Denne egenskapen kan ikke angis ved oppsett eller stil arket Oppsett. Hvis du vil ha mer informasjon, se <xref:System.Web.UI.ThemeableAttribute>og [ASP.NET tema og skallene](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the ValidationGroup property to specify the controls to validate when a <xref:System.Web.UI.WebControls.Button> control posts back to the server. The page contains three text boxes to capture data from the user and three <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls to ensure that the user does not leave a text box blank. The <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls for the first two text boxes are in the `PersonalInfoGroup` validation group and the <xref:System.Web.UI.WebControls.RequiredFieldValidator> control for the third text box is in the `LocationInfoGroup` validation group. When `Button1` is clicked, only the controls in validation group `PersonalInfoGroup` are validated. When `Button2` is clicked, only the control in validation group `LocationInfoGroup` is validated.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Button.ValidationGroup#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1224_1.aspx)]\n [!code-vb[Button.ValidationGroup#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1224_1.aspx)]"
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "Gruppen med kontroller som den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollen får valideringen når den legger inn på serveren. Standardverdien er en tom streng (&quot;&quot;)."
  overload: System.Web.UI.WebControls.Button.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: System.Web.UI.WebControls.WebControl
- uid: System.Web.UI.WebControls.Button.#ctor
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Button()
  nameWithType: Button.Button()
  fullName: System.Web.UI.WebControls.Button.Button()
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: Button.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.AddAttributesToRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.Button.CausesValidation
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CausesValidation
  nameWithType: Button.CausesValidation
  fullName: System.Web.UI.WebControls.Button.CausesValidation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.Button.Click
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Click
  nameWithType: Button.Click
  fullName: System.Web.UI.WebControls.Button.Click
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.Button.Command
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Command
  nameWithType: Button.Command
  fullName: System.Web.UI.WebControls.Button.Command
- uid: System.Web.UI.WebControls.CommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: CommandEventHandler
  nameWithType: CommandEventHandler
  fullName: System.Web.UI.WebControls.CommandEventHandler
- uid: System.Web.UI.WebControls.Button.CommandArgument
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandArgument
  nameWithType: Button.CommandArgument
  fullName: System.Web.UI.WebControls.Button.CommandArgument
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Button.CommandName
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandName
  nameWithType: Button.CommandName
  fullName: System.Web.UI.WebControls.Button.CommandName
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: GetPostBackOptions()
  nameWithType: Button.GetPostBackOptions()
  fullName: System.Web.UI.WebControls.Button.GetPostBackOptions()
- uid: System.Web.UI.PostBackOptions
  parent: System.Web.UI
  isExternal: false
  name: PostBackOptions
  nameWithType: PostBackOptions
  fullName: System.Web.UI.PostBackOptions
- uid: System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClick(EventArgs)
  nameWithType: Button.OnClick(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnClick(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.Button.OnClientClick
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClientClick
  nameWithType: Button.OnClientClick
  fullName: System.Web.UI.WebControls.Button.OnClientClick
- uid: System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnCommand(CommandEventArgs)
  nameWithType: Button.OnCommand(CommandEventArgs)
  fullName: System.Web.UI.WebControls.Button.OnCommand(CommandEventArgs)
- uid: System.Web.UI.WebControls.CommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: CommandEventArgs
  nameWithType: CommandEventArgs
  fullName: System.Web.UI.WebControls.CommandEventArgs
- uid: System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: Button.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.Button.PostBackUrl
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
  fullName: System.Web.UI.WebControls.Button.PostBackUrl
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: Button.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RenderContents(HtmlTextWriter)
  nameWithType: Button.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.RenderContents(HtmlTextWriter)
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.Button.Text
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Text
  nameWithType: Button.Text
  fullName: System.Web.UI.WebControls.Button.Text
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
  fullName: System.Web.UI.WebControls.Button.UseSubmitBehavior
- uid: System.Web.UI.WebControls.Button.ValidationGroup
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
  fullName: System.Web.UI.WebControls.Button.ValidationGroup
- uid: System.Web.UI.WebControls.Button.#ctor*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Button
  nameWithType: Button.Button
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: AddAttributesToRender
  nameWithType: Button.AddAttributesToRender
- uid: System.Web.UI.WebControls.Button.CausesValidation*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CausesValidation
  nameWithType: Button.CausesValidation
- uid: System.Web.UI.WebControls.Button.CommandArgument*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandArgument
  nameWithType: Button.CommandArgument
- uid: System.Web.UI.WebControls.Button.CommandName*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandName
  nameWithType: Button.CommandName
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: GetPostBackOptions
  nameWithType: Button.GetPostBackOptions
- uid: System.Web.UI.WebControls.Button.OnClick*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClick
  nameWithType: Button.OnClick
- uid: System.Web.UI.WebControls.Button.OnClientClick*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClientClick
  nameWithType: Button.OnClientClick
- uid: System.Web.UI.WebControls.Button.OnCommand*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnCommand
  nameWithType: Button.OnCommand
- uid: System.Web.UI.WebControls.Button.OnPreRender*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnPreRender
  nameWithType: Button.OnPreRender
- uid: System.Web.UI.WebControls.Button.PostBackUrl*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: Button.RaisePostBackEvent
- uid: System.Web.UI.WebControls.Button.RenderContents*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RenderContents
  nameWithType: Button.RenderContents
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.WebControls.Button.Text*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Text
  nameWithType: Button.Text
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
- uid: System.Web.UI.WebControls.Button.ValidationGroup*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
