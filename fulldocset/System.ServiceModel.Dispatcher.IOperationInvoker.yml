### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.IOperationInvoker
  id: IOperationInvoker
  children:
  - System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs
  - System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)
  - System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)
  - System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)
  - System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous
  langs:
  - csharp
  name: IOperationInvoker
  nameWithType: IOperationInvoker
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker
  type: Interface
  summary: "Deklarerer metoder som ta et objekt og en matrise med parametere som er hentet fra en melding, starte en metode for dette objektet med disse parameterne, og returnerer verdien som returneres av metoden og returnere parametere."
  remarks: "Implementere grensesnittet IOperationInvoker for å styre konverteringen fra en ikke-typeangitt objekt og matrisen til parameterne til et sterkt skrevet metodekall på dette objektet. Det har en synkron <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A>metoden som tar en forekomsten og sett med inndata av typen objekt og returnerer et objekt og et sett med utdataene for objekt av typen.</xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A> Det er også en <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin%2A>og [InvokeEnd (objektet, objektet\\[\\], IAsyncResult)](assetId:///M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)?qualifyHint=False&autoUpgrade=True) variant.</xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin%2A>  Den <xref:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous%2A>egenskapen angir om metoden synkron eller asynkron skal brukes.</xref:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous%2A>"
  syntax:
    content: public interface IOperationInvoker
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs
  id: AllocateInputs
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  langs:
  - csharp
  name: AllocateInputs()
  nameWithType: IOperationInvoker.AllocateInputs()
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Returnerer en &lt;xref:System.Array?displayProperty=fullName&gt; parameter-objekter."
  remarks: "Implementere dette for å returnere en matrise av parameterne for denne operasjonen. Denne matrisen fylles av formateringen og sendt tilbake til anroperen når <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A>kalles.</xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A>"
  syntax:
    content: public object[] AllocateInputs ();
    parameters: []
    return:
      type: System.Object[]
      description: "Parametere som skal brukes som argumenter til operasjonen."
  overload: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)
  id: Invoke(System.Object,System.Object[],System.Object[]@)
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  langs:
  - csharp
  name: Invoke(Object,Object[],Object[])
  nameWithType: IOperationInvoker.Invoke(Object,Object[],Object[])
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(Object,Object[],Object[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Returnerer et objekt og et sett med utdata objekter fra en forekomst og -settet med objekter som inndata."
  syntax:
    content: public object Invoke (object instance, object[] inputs, out object[] outputs);
    parameters:
    - id: instance
      type: System.Object
      description: "Objektet som skal aktiveres."
    - id: inputs
      type: System.Object[]
      description: "Inndata til metoden."
    - id: outputs
      type: System.Object[]
      description: "Utdataene fra metoden."
    return:
      type: System.Object
      description: "Verdien som returneres."
  overload: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)
  id: InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  langs:
  - csharp
  name: InvokeBegin(Object,Object[],AsyncCallback,Object)
  nameWithType: IOperationInvoker.InvokeBegin(Object,Object[],AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(Object,Object[],AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "En asynkron implementering av den <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke*>metoden.</xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke*>"
  syntax:
    content: public IAsyncResult InvokeBegin (object instance, object[] inputs, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: "Objektet som skal aktiveres."
    - id: inputs
      type: System.Object[]
      description: "Inndata til metoden."
    - id: callback
      type: System.AsyncCallback
      description: "Asynkron tilbakeringing-objekt."
    - id: state
      type: System.Object
      description: "Tilknyttede dataene."
    return:
      type: System.IAsyncResult
      description: "En &lt;xref:System.IAsyncResult?displayProperty=fullName&gt; brukes til å fullføre asynkront kall."
  overload: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)
  id: InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  langs:
  - csharp
  name: InvokeEnd(Object,Object[],IAsyncResult)
  nameWithType: IOperationInvoker.InvokeEnd(Object,Object[],IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(Object,Object[],IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Asynkron end-metoden."
  syntax:
    content: public object InvokeEnd (object instance, out object[] outputs, IAsyncResult result);
    parameters:
    - id: instance
      type: System.Object
      description: "Objektet som ble startet."
    - id: outputs
      type: System.Object[]
      description: "Utdataene fra metoden."
    - id: result
      type: System.IAsyncResult
      description: "Den &lt;xref:System.IAsyncResult?displayProperty=fullName&gt; objektet."
    return:
      type: System.Object
      description: "Verdien som returneres."
  overload: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous
  id: IsSynchronous
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  langs:
  - csharp
  name: IsSynchronous
  nameWithType: IOperationInvoker.IsSynchronous
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Henter en verdi som angir om den <> </> *> eller <> </> *>-metoden med dispatcher."
  remarks: "Standard anroperen sender ut meldinger til synkron operasjonen som standard. Denne verdien er bufret av dispatcher, og derfor bør ikke endre i levetiden for objektet som implementerer <xref:System.ServiceModel.Dispatcher.IOperationInvoker>.</xref:System.ServiceModel.Dispatcher.IOperationInvoker>"
  syntax:
    content: public bool IsSynchronous { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis dispatcher aktiverer synkron operasjonen. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: AllocateInputs()
  nameWithType: IOperationInvoker.AllocateInputs()
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs()
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: Invoke(Object,Object[],Object[])
  nameWithType: IOperationInvoker.Invoke(Object,Object[],Object[])
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(Object,Object[],Object[])
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: InvokeBegin(Object,Object[],AsyncCallback,Object)
  nameWithType: IOperationInvoker.InvokeBegin(Object,Object[],AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(Object,Object[],AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: InvokeEnd(Object,Object[],IAsyncResult)
  nameWithType: IOperationInvoker.InvokeEnd(Object,Object[],IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(Object,Object[],IAsyncResult)
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: IsSynchronous
  nameWithType: IOperationInvoker.IsSynchronous
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs*
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: AllocateInputs
  nameWithType: IOperationInvoker.AllocateInputs
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke*
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: Invoke
  nameWithType: IOperationInvoker.Invoke
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin*
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: InvokeBegin
  nameWithType: IOperationInvoker.InvokeBegin
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd*
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: InvokeEnd
  nameWithType: IOperationInvoker.InvokeEnd
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous*
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: IsSynchronous
  nameWithType: IOperationInvoker.IsSynchronous
