### YamlMime:ManagedReference
items:
- uid: System.Net.HttpListenerRequest
  id: HttpListenerRequest
  children:
  - System.Net.HttpListenerRequest.AcceptTypes
  - System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)
  - System.Net.HttpListenerRequest.ClientCertificateError
  - System.Net.HttpListenerRequest.ContentEncoding
  - System.Net.HttpListenerRequest.ContentLength64
  - System.Net.HttpListenerRequest.ContentType
  - System.Net.HttpListenerRequest.Cookies
  - System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)
  - System.Net.HttpListenerRequest.GetClientCertificate
  - System.Net.HttpListenerRequest.GetClientCertificateAsync
  - System.Net.HttpListenerRequest.HasEntityBody
  - System.Net.HttpListenerRequest.Headers
  - System.Net.HttpListenerRequest.HttpMethod
  - System.Net.HttpListenerRequest.InputStream
  - System.Net.HttpListenerRequest.IsAuthenticated
  - System.Net.HttpListenerRequest.IsLocal
  - System.Net.HttpListenerRequest.IsSecureConnection
  - System.Net.HttpListenerRequest.IsWebSocketRequest
  - System.Net.HttpListenerRequest.KeepAlive
  - System.Net.HttpListenerRequest.LocalEndPoint
  - System.Net.HttpListenerRequest.ProtocolVersion
  - System.Net.HttpListenerRequest.QueryString
  - System.Net.HttpListenerRequest.RawUrl
  - System.Net.HttpListenerRequest.RemoteEndPoint
  - System.Net.HttpListenerRequest.RequestTraceIdentifier
  - System.Net.HttpListenerRequest.ServiceName
  - System.Net.HttpListenerRequest.TransportContext
  - System.Net.HttpListenerRequest.Url
  - System.Net.HttpListenerRequest.UrlReferrer
  - System.Net.HttpListenerRequest.UserAgent
  - System.Net.HttpListenerRequest.UserHostAddress
  - System.Net.HttpListenerRequest.UserHostName
  - System.Net.HttpListenerRequest.UserLanguages
  langs:
  - csharp
  name: HttpListenerRequest
  nameWithType: HttpListenerRequest
  fullName: System.Net.HttpListenerRequest
  type: Class
  summary: "Beskriver en innkommende HTTP-forespørsel til en <xref href=&quot;System.Net.HttpListener&quot;> </xref> objektet. Denne klassen kan ikke arves."
  remarks: "Når en klient sender en forespørsel til en URI Uniform Resource Identifier () håndtert av en <xref:System.Net.HttpListener>objektet i <xref:System.Net.HttpListener>gir en <xref:System.Net.HttpListenerContext>objekt som inneholder informasjon om avsenderen, forespørselen og svaret som sendes til klienten.</xref:System.Net.HttpListenerContext> </xref:System.Net.HttpListener> </xref:System.Net.HttpListener> Den <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName>egenskapen returnerer HttpListenerRequest-objektet som beskriver forespørselen.</xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName>       HttpListenerRequest objektet inneholder informasjon om forespørselen, for eksempel forespørselen <xref:System.Net.HttpListenerRequest.HttpMethod%2A>streng, <xref:System.Net.HttpListenerRequest.UserAgent%2A>streng, og be om body data (se den <xref:System.Net.HttpListenerRequest.InputStream%2A>egenskapen).</xref:System.Net.HttpListenerRequest.InputStream%2A> </xref:System.Net.HttpListenerRequest.UserAgent%2A> </xref:System.Net.HttpListenerRequest.HttpMethod%2A>       Hvis du vil svarer på forespørselen, må du få tilknyttede svar ved hjelp av <xref:System.Net.HttpListenerContext.Response%2A>egenskapen.</xref:System.Net.HttpListenerContext.Response%2A>"
  example:
  - "The following code example demonstrates how to receive and respond to a HttpListenerRequest.  \n  \n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/t-system.net.httplistene_3_1.cs)]"
  syntax:
    content: public sealed class HttpListenerRequest
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.AcceptTypes
  id: AcceptTypes
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: AcceptTypes
  nameWithType: HttpListenerRequest.AcceptTypes
  fullName: System.Net.HttpListenerRequest.AcceptTypes
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter MIME-typer som er godkjent av klienten."
  remarks: "Den `Accept` overskriften er en streng med plass kommadelte Multipurpose Internet Mail Extensions (MIME) typenavn (for eksempel `image/jpeg`), som angir MIME-typer som klienten er klar til å godta og behandle i et svar. Den `*/*` oppføring indikerer at klienten godtar noen MIME-type. En detaljert beskrivelse av den `Accept` topptekst, se RFC 2616, tilgjengelig på [http://www.rfc-editor.org](http://www.rfc-editor.org/).       For en fullstendig liste over forespørselshodene, kan du se den <xref:System.Net.HttpRequestHeader>opplisting.</xref:System.Net.HttpRequestHeader>"
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_37_1.cs)]"
  syntax:
    content: public string[] AcceptTypes { get; }
    return:
      type: System.String[]
      description: "En <xref:System.String>matrise som inneholder typenavn som er angitt i forespørselen <xref uid=&quot;langword_csharp_Accept&quot; name=&quot;Accept&quot; href=&quot;&quot;> </xref> topptekst eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis klientforespørselen ikke inneholdt en <xref uid=&quot;langword_csharp_Accept&quot; name=&quot;Accept&quot; href=&quot;&quot;> </xref> overskrift.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.AcceptTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)
  id: BeginGetClientCertificate(System.AsyncCallback,System.Object)
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: BeginGetClientCertificate(AsyncCallback,Object)
  nameWithType: HttpListenerRequest.BeginGetClientCertificate(AsyncCallback,Object)
  fullName: System.Net.HttpListenerRequest.BeginGetClientCertificate(AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Starter en asynkron forespørsel for X.509 v.3 klientsertifikatet."
  syntax:
    content: public IAsyncResult BeginGetClientCertificate (AsyncCallback requestCallback, object state);
    parameters:
    - id: requestCallback
      type: System.AsyncCallback
      description: "En <xref:System.AsyncCallback>representanten som refererer til metoden som skal startes når operasjonen er fullført.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Et brukerdefinert objekt som inneholder informasjon om operasjonen. Dette objektet er sendt til tilbakeringing representanten når operasjonen er fullført."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>som angir statusen for operasjonen.</xref:System.IAsyncResult>"
  overload: System.Net.HttpListenerRequest.BeginGetClientCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.ClientCertificateError
  id: ClientCertificateError
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: ClientCertificateError
  nameWithType: HttpListenerRequest.ClientCertificateError
  fullName: System.Net.HttpListenerRequest.ClientCertificateError
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter en feilkode som identifiserer et problem med den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> gitt av klienten."
  remarks: "Denne egenskapen inneholder en Windows-feilkoden som returneres av den Secure Channel (Schannel) Security støtte leverandøren Interface (SSPIEN), som brukes til å validere sertifikatet. Du finner mer informasjon om SSPI-støtte for Schannel i &quot;Oppretter et sikker tilkobling ved hjelp av Schannel&quot; i dokumentasjonen for sikkerhet på [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  example:
  - "The following code example checks this property to determine whether the request includes a valid client certificate.  \n  \n [!code-vb[NCLListener#3](~/add/codesnippet/visualbasic/p-system.net.httplistene_33_1.vb)]\n [!code-cs[NCLListener#3](~/add/codesnippet/csharp/p-system.net.httplistene_33_1.cs)]"
  syntax:
    content: public int ClientCertificateError { get; }
    return:
      type: System.Int32
      description: "En <xref:System.Int32>verdi som inneholder en Windows-feilkoden.</xref:System.Int32>"
  overload: System.Net.HttpListenerRequest.ClientCertificateError*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Klientsertifikatet er ikke initialisert ennå av et kall til den <> </> *> eller <> </> *> metoder - eller - operasjonen pågår ennå."
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.ContentEncoding
  id: ContentEncoding
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: ContentEncoding
  nameWithType: HttpListenerRequest.ContentEncoding
  fullName: System.Net.HttpListenerRequest.ContentEncoding
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter innholdskodingen som kan brukes med dataene som sendes i forespørselen"
  remarks: "En <xref:System.Text.Encoding>objektet kan brukes til å konvertere byte sekvenser til tegnsett (tegntabell) og tegn i byte sekvenser.</xref:System.Text.Encoding> Egenskapen bruker charset-verdi fra den `Content-Type` hodet ikke avgjøre kodingen. Hvis denne informasjonen ikke er tilgjengelig, returnerer denne egenskapen <xref:System.Text.Encoding.Default%2A?displayProperty=fullName>.</xref:System.Text.Encoding.Default%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates using the ContentEncoding property.  \n  \n [!code-cs[Net_Listener_Basic#16](~/add/codesnippet/csharp/p-system.net.httplistene_40_1.cs)]"
  syntax:
    content: public System.Text.Encoding ContentEncoding { get; }
    return:
      type: System.Text.Encoding
      description: "En <xref:System.Text.Encoding>objektet brukes med dataene i den <xref:System.Net.HttpListenerRequest.InputStream*>egenskapen.</xref:System.Net.HttpListenerRequest.InputStream*> </xref:System.Text.Encoding>"
  overload: System.Net.HttpListenerRequest.ContentEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.ContentLength64
  id: ContentLength64
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: ContentLength64
  nameWithType: HttpListenerRequest.ContentLength64
  fullName: System.Net.HttpListenerRequest.ContentLength64
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter lengden på meldingstekst dataene i forespørselen."
  remarks: "Den `Content-Length` hodet uttrykker lang, i byte body dataene som følger med forespørselen.       For en fullstendig liste over forespørselshodene, kan du se den <xref:System.Net.HttpRequestHeader>opplisting.</xref:System.Net.HttpRequestHeader>"
  example:
  - "The following code example uses the ContentLength64 property while processing body data.  \n  \n [!code-cs[Net_Listener_Basic#16](~/add/codesnippet/csharp/p-system.net.httplistene_8_1.cs)]"
  syntax:
    content: public long ContentLength64 { get; }
    return:
      type: System.Int64
      description: "Verdien fra i forespørselen <xref uid=&quot;langword_csharp_Content-Length&quot; name=&quot;Content-Length&quot; href=&quot;&quot;> </xref> hodet. Denne verdien er -1 Hvis innholdslengden ikke er kjent."
  overload: System.Net.HttpListenerRequest.ContentLength64*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.ContentType
  id: ContentType
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: ContentType
  nameWithType: HttpListenerRequest.ContentType
  fullName: System.Net.HttpListenerRequest.ContentType
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter MIME-typen for meldingsteksten dataene i forespørselen."
  remarks: "Hvis en klient inkluderer body data i en forespørsel, den angir Multipurpose Internet Mail Extensions (MIME) til body dataene i den `Content-Type` hodet. For eksempel standard MIME-type data returnert fra en form-med den `POST` metoden `application/x-www-form-urlencoded`.       For en fullstendig liste over forespørselshodene, kan du se den <xref:System.Net.HttpRequestHeader>opplisting og RFC 2616, tilgjengelig på [http://www.rfc-editor.org](http://www.rfc-editor.org/).</xref:System.Net.HttpRequestHeader>       ContentType er null når det er ingen `Content-Type` -overskrift i forespørselen."
  example:
  - "The following code example demonstrates how to use this property.  \n  \n [!code-cs[Net_Listener_Basic#16](~/add/codesnippet/csharp/p-system.net.httplistene_12_1.cs)]"
  syntax:
    content: public string ContentType { get; }
    return:
      type: System.String
      description: "En <xref:System.String>som inneholder teksten for i forespørselen <xref uid=&quot;langword_csharp_Content-Type&quot; name=&quot;Content-Type&quot; href=&quot;&quot;> </xref> overskrift.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.ContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.Cookies
  id: Cookies
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: Cookies
  nameWithType: HttpListenerRequest.Cookies
  fullName: System.Net.HttpListenerRequest.Cookies
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter informasjonskapslene som er sendt med forespørselen."
  remarks: "En informasjonskapsel er navn/verdi-tekstdata fra en nettserver som er lagret på den lokale (klient) datamaskinen."
  example:
  - "The following code example displays the values of cookies sent with the request.  \n  \n [!code-cs[Net_Listener_Basic#18](~/add/codesnippet/csharp/p-system.net.httplistene_7_1.cs)]"
  syntax:
    content: public System.Net.CookieCollection Cookies { get; }
    return:
      type: System.Net.CookieCollection
      description: "En <xref:System.Net.CookieCollection>som inneholder informasjonskapsler som følger med forespørselen.</xref:System.Net.CookieCollection> Denne egenskapen returnerer en tom samling hvis forespørselen ikke inneholder informasjonskapsler."
  overload: System.Net.HttpListenerRequest.Cookies*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)
  id: EndGetClientCertificate(System.IAsyncResult)
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: EndGetClientCertificate(IAsyncResult)
  nameWithType: HttpListenerRequest.EndGetClientCertificate(IAsyncResult)
  fullName: System.Net.HttpListenerRequest.EndGetClientCertificate(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Avslutter en asynkron forespørsel for X.509 v.3 klientsertifikatet."
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Ventende forespørsel om sertifikatet."
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "Den <xref:System.IAsyncResult>objektet som returneres når operasjonen startes.</xref:System.IAsyncResult>"
  overload: System.Net.HttpListenerRequest.EndGetClientCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>kan ikke hente ved å kalle<xref:System.Net.HttpListenerRequest.BeginGetClientCertificate*><code>e.</code>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Denne metoden allerede ble kalt for operasjonen som ble identifisert av <code> asyncResult </code>."
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.GetClientCertificate
  id: GetClientCertificate
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: GetClientCertificate()
  nameWithType: HttpListenerRequest.GetClientCertificate()
  fullName: System.Net.HttpListenerRequest.GetClientCertificate()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter X.509 v.3 klientsertifikatet."
  remarks: "Denne metoden blokkerer til sertifikatet er hentet."
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate ();
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "En <xref href=&quot;System.Security.Cryptography.X509Certificates&quot;> </xref> objekt som inneholder X.509 v.3 klientsertifikatet."
  overload: System.Net.HttpListenerRequest.GetClientCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Et kall til denne metoden for å hente X.509 v.3 klientsertifikatet pågår, og derfor et annet kall til denne metoden kan ikke endres."
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.GetClientCertificateAsync
  id: GetClientCertificateAsync
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: GetClientCertificateAsync()
  nameWithType: HttpListenerRequest.GetClientCertificateAsync()
  fullName: System.Net.HttpListenerRequest.GetClientCertificateAsync()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter X.509 v.3 klientsertifikatet som en asynkron operasjon."
  remarks: "Denne operasjonen blokkere ikke. Det returnerte <xref:System.Threading.Tasks.Task%601>objektet fullfører når sertifikatet er hentet.</xref:System.Threading.Tasks.Task%601>       Hvis et kall til denne metoden for å hente X.509 v.3 klientsertifikatet pågår, kan deretter et annet kall til denne metoden ikke utføres."
  syntax:
    content: public System.Threading.Tasks.Task<System.Security.Cryptography.X509Certificates.X509Certificate2> GetClientCertificateAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Security.Cryptography.X509Certificates.X509Certificate2}
      description: "Returnerer &lt;xref:System.Threading.Tasks.Task%601&gt;.       Oppgaveobjektet som representerer den asynkrone operasjonen. Den &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; egenskap i oppgaveobjektet returnerer en <xref href=&quot;System.Security.Cryptography.X509Certificates&quot;> </xref> objekt som inneholder X.509 v.3 klientsertifikatet."
  overload: System.Net.HttpListenerRequest.GetClientCertificateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.HasEntityBody
  id: HasEntityBody
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: HasEntityBody
  nameWithType: HttpListenerRequest.HasEntityBody
  fullName: System.Net.HttpListenerRequest.HasEntityBody
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter en <xref:System.Boolean>verdi som angir om forespørselen har tilknyttede body data.</xref:System.Boolean>"
  remarks: "En forespørsel som sender data til serveren ved hjelp av den `POST` metoden, for eksempel må ha en hele brødteksten."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#16](~/add/codesnippet/csharp/p-system.net.httplistene_17_1.cs)]"
  syntax:
    content: public bool HasEntityBody { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis forespørselen har tilordnede body data. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerRequest.HasEntityBody*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.Headers
  id: Headers
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: Headers
  nameWithType: HttpListenerRequest.Headers
  fullName: System.Net.HttpListenerRequest.Headers
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter samlingen i hodet navn/verdi-par sendes i forespørselen."
  remarks: "Forespørselshodene inneholde metadatainformasjon. Identiteten til brukeragenten ansatt av klienten og godkjent MIME typer for dataene i svartekst, for eksempel overskrifter kan inneholde Uniform Resource Identifier (URI) for ressursen som refereres klienten til serveren.       For en fullstendig liste over forespørselshodene, kan du se den <xref:System.Net.HttpRequestHeader>opplisting.</xref:System.Net.HttpRequestHeader>"
  example:
  - "The following code example displays all the information in a given <xref:System.Net.WebHeaderCollection> object.  \n  \n [!code-cs[Net_Listener_Basic#21](~/add/codesnippet/csharp/p-system.net.httplistene_14_1.cs)]"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection Headers { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "En <xref:System.Net.WebHeaderCollection>som inneholder HTTP-hoder som er inkludert i forespørselen.</xref:System.Net.WebHeaderCollection>"
  overload: System.Net.HttpListenerRequest.Headers*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.HttpMethod
  id: HttpMethod
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: HttpMethod
  nameWithType: HttpListenerRequest.HttpMethod
  fullName: System.Net.HttpListenerRequest.HttpMethod
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter HTTP-metoden som er angitt av klienten."
  remarks: "HTTP-metode er vanligvis få eller POST, avhengig av handlingen ønsket av klienten."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_10_1.cs)]"
  syntax:
    content: public string HttpMethod { get; }
    return:
      type: System.String
      description: "En <xref:System.String>som inneholder metoden som brukes i forespørselen.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.HttpMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.InputStream
  id: InputStream
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: InputStream
  nameWithType: HttpListenerRequest.InputStream
  fullName: System.Net.HttpListenerRequest.InputStream
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter en dataflyt som inneholder meldingsteksten dataene som er sendt av klienten."
  remarks: "Hvis klienten sender data (for eksempel ved hjelp av HTTP `POST` metoden), dataflyten som returneres av denne metoden inneholder disse dataene.      > [!NOTE] > Lukke forespørselen ikke Lukk dataflyten som ble returnert av denne egenskapen. Når du trenger ikke lenger dataflyten, bør du lukke den ved å kalle den <xref:System.IO.Stream.Close%2A>metoden.</xref:System.IO.Stream.Close%2A>"
  example:
  - "The following code example demonstrates using this property to read the data sent with a request.  \n  \n [!code-cs[Net_Listener_Basic#16](~/add/codesnippet/csharp/p-system.net.httplistene_27_1.cs)]"
  syntax:
    content: public System.IO.Stream InputStream { get; }
    return:
      type: System.IO.Stream
      description: "En lesbar <xref:System.IO.Stream>objekt som inneholder byte sendt av klienten i brødteksten i forespørselen.</xref:System.IO.Stream> Denne egenskapen returnerer <xref:System.IO.Stream>Hvis ingen data sendes i forespørselen.</xref:System.IO.Stream>"
  overload: System.Net.HttpListenerRequest.InputStream*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.IsAuthenticated
  id: IsAuthenticated
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: HttpListenerRequest.IsAuthenticated
  fullName: System.Net.HttpListenerRequest.IsAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter en <xref:System.Boolean>verdi som angir om klienten sender denne forespørselen er godkjent.</xref:System.Boolean>"
  remarks: "Programmet forespørsler klienten godkjenning ved hjelp av den <xref:System.Net.HttpListener.AuthenticationSchemes%2A>eller <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A>egenskapen.</xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> </xref:System.Net.HttpListener.AuthenticationSchemes%2A>       Programmet ikke mottar en <xref:System.Net.HttpListenerContext>for forespørsler fra klienter som ikke ble godkjent.</xref:System.Net.HttpListenerContext>"
  example:
  - "The following code example displays the value of the IsAuthenticated property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_1_1.cs)]"
  syntax:
    content: public bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis klienten ble godkjent; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerRequest.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.IsLocal
  id: IsLocal
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: IsLocal
  nameWithType: HttpListenerRequest.IsLocal
  fullName: System.Net.HttpListenerRequest.IsLocal
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter en <xref:System.Boolean>verdi som angir om forespørselen er sendt fra den lokale datamaskinen.</xref:System.Boolean>"
  remarks: "Programmer kan bruke denne egenskapen til å utføre spesielle behandling når forespørsler fra den lokale datamaskinen."
  example:
  - "The following code example demonstrates using the IsLocal property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_28_1.cs)]"
  syntax:
    content: public bool IsLocal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis forespørselen kommer fra den samme datamaskinen som den <xref href=&quot;System.Net.HttpListener&quot;> </xref> objekt som angitt forespørselen; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerRequest.IsLocal*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.IsSecureConnection
  id: IsSecureConnection
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: IsSecureConnection
  nameWithType: HttpListenerRequest.IsSecureConnection
  fullName: System.Net.HttpListenerRequest.IsSecureConnection
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter en <xref:System.Boolean>verdi som angir om TCP-tilkoblingen som brukes til å sende forespørselen bruker Secure Sockets Layer (SSL)-protokollen.</xref:System.Boolean>"
  remarks: "For å be om en sikker tilkobling bruker klientforespørselen <xref:System.Uri.UriSchemeHttps>i stedet for <xref:System.Uri.UriSchemeHttp>.</xref:System.Uri.UriSchemeHttp> </xref:System.Uri.UriSchemeHttps> Hvis tilkoblingen ikke kan opprette bruker SSL, klienten mottar en <xref:System.Net.WebException>som gir informasjon om feilen.</xref:System.Net.WebException>"
  example:
  - "The following code example demonstrates using the IsSecureConnection property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_3_1.cs)]"
  syntax:
    content: public bool IsSecureConnection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis TCP-tilkoblingen bruker SSL; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerRequest.IsSecureConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.IsWebSocketRequest
  id: IsWebSocketRequest
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: IsWebSocketRequest
  nameWithType: HttpListenerRequest.IsWebSocketRequest
  fullName: System.Net.HttpListenerRequest.IsWebSocketRequest
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter en <xref:System.Boolean>verdi som angir om TCP-tilkoblingen var en forespørsel om WebSocket.</xref:System.Boolean>"
  syntax:
    content: public bool IsWebSocketRequest { get; }
    return:
      type: System.Boolean
      description: "Returnerer <xref:System.Boolean>.</xref:System.Boolean>       <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis TCP-tilkoblingen er en WebSocket-forespørsel. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerRequest.IsWebSocketRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.KeepAlive
  id: KeepAlive
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: KeepAlive
  nameWithType: HttpListenerRequest.KeepAlive
  fullName: System.Net.HttpListenerRequest.KeepAlive
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter en <xref:System.Boolean>verdi som angir om klienten ber om en fast tilkobling.</xref:System.Boolean>"
  remarks: "Hvis en HTTP-klienten og serveren forventer til exchange dataene flere ganger i en kort tidsperiode, raskere en fast tilkobling kommunikasjonen ved at de kan unngå overhead må åpner og lukker en TCP-tilkobling for hver melding. Standardverdien for denne egenskapen er for klienter ved hjelp av HTTP/1.1, `true`."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_5_1.cs)]"
  syntax:
    content: public bool KeepAlive { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om tilkoblingen skal holdes åpen. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerRequest.KeepAlive*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.LocalEndPoint
  id: LocalEndPoint
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: LocalEndPoint
  nameWithType: HttpListenerRequest.LocalEndPoint
  fullName: System.Net.HttpListenerRequest.LocalEndPoint
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Få serveren IP-adresse og port. nummer som forespørselen er sendt."
  remarks: "Denne egenskapen er nyttig når du ønsker å svare på forespørsler basert på måten de er løst."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_38_1.cs)]"
  syntax:
    content: public System.Net.IPEndPoint LocalEndPoint { get; }
    return:
      type: System.Net.IPEndPoint
      description: "En <xref:System.Net.IPEndPoint>som representerer IP-adressen som forespørselen er sendt til.</xref:System.Net.IPEndPoint>"
  overload: System.Net.HttpListenerRequest.LocalEndPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.ProtocolVersion
  id: ProtocolVersion
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: ProtocolVersion
  nameWithType: HttpListenerRequest.ProtocolVersion
  fullName: System.Net.HttpListenerRequest.ProtocolVersion
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter HTTP-versjonen som brukes av klienten ber om."
  remarks: "Mulighetene for forskjellige HTTP-versjoner som er angitt i dokumenter som er tilgjengelige på [http://www.rfc-editor.org](http://www.rfc-editor.org/)."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_9_1.cs)]"
  syntax:
    content: public Version ProtocolVersion { get; }
    return:
      type: System.Version
      description: "En <xref:System.Version>som identifiserer klientversjonen av HTTP.</xref:System.Version>"
  overload: System.Net.HttpListenerRequest.ProtocolVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.QueryString
  id: QueryString
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: QueryString
  nameWithType: HttpListenerRequest.QueryString
  fullName: System.Net.HttpListenerRequest.QueryString
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter spørringsstreng som er inkludert i forespørselen."
  remarks: "En URL-adresse deles spørringsinformasjonen fra baneinformasjonen av et spørsmål merke (?). Navn/verdi-par, atskilt med et likhetstegn (=). Hvis du vil ha tilgang til spørre etter data som en enkelt streng, kan du hente <xref:System.Uri.Query%2A>egenskapsverdien fra <xref:System.Uri>objektet som ble returnert av <xref:System.Net.HttpListenerRequest.Url%2A>.</xref:System.Net.HttpListenerRequest.Url%2A> </xref:System.Uri> </xref:System.Uri.Query%2A>      > [!NOTE] > Spørringer uten et likhetstegn (eksempel: [http://www.contoso.com/query.htm?Name](http://www.contoso.com/query.htm?Name) ) er lagt til i `null` nøkkelen i <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection>"
  example:
  - "The following code example demonstrates using the QueryString property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_4_1.cs)]"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection QueryString { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "En <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> objekt som inneholder spørre etter data som er inkludert i forespørselen <xref:System.Net.HttpListenerRequest.Url*>.</xref:System.Net.HttpListenerRequest.Url*>"
  overload: System.Net.HttpListenerRequest.QueryString*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.RawUrl
  id: RawUrl
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: RawUrl
  nameWithType: HttpListenerRequest.RawUrl
  fullName: System.Net.HttpListenerRequest.RawUrl
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter informasjon URL-adresse (uten vert og port) ble forespurt av klienten."
  remarks: "Raw URL-adressen er definert som en del av URL-adressen for følgende domeneinformasjon. I URL-strengen `http://www.contoso.com/articles/recent.aspx`, raw URL-adressen `/articles/recent.aspx`. Raw URL-adressen inneholder søkestrengen, hvis den finnes.       Hvis du vil ha informasjon om vert og port, kan du bruke den <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A>egenskapen.</xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A>"
  example:
  - "The following code example demonstrates using the RawUrl property.  \n  \n [!code-cs[Net_Listener_Basic#11](~/add/codesnippet/csharp/p-system.net.httplistene_29_1.cs)]"
  syntax:
    content: public string RawUrl { get; }
    return:
      type: System.String
      description: "En <xref:System.String>som inneholder raw URL-adressen for denne forespørselen.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.RawUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.RemoteEndPoint
  id: RemoteEndPoint
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: RemoteEndPoint
  nameWithType: HttpListenerRequest.RemoteEndPoint
  fullName: System.Net.HttpListenerRequest.RemoteEndPoint
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter klienten IP-adresse og port. nummer som forespørselen stammer fra."
  remarks: ''
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_11_1.cs)]"
  syntax:
    content: public System.Net.IPEndPoint RemoteEndPoint { get; }
    return:
      type: System.Net.IPEndPoint
      description: "En <xref:System.Net.IPEndPoint>som representerer IP-adresse og port. antall forespørselen kom fra.</xref:System.Net.IPEndPoint>"
  overload: System.Net.HttpListenerRequest.RemoteEndPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.RequestTraceIdentifier
  id: RequestTraceIdentifier
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: RequestTraceIdentifier
  nameWithType: HttpListenerRequest.RequestTraceIdentifier
  fullName: System.Net.HttpListenerRequest.RequestTraceIdentifier
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter forespørsels-IDen for den innkommende HTTP-forespørsler."
  syntax:
    content: public Guid RequestTraceIdentifier { get; }
    return:
      type: System.Guid
      description: "En <xref:System.Guid>objekt som inneholder identifikatoren for HTTP-forespørsler.</xref:System.Guid>"
  overload: System.Net.HttpListenerRequest.RequestTraceIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.ServiceName
  id: ServiceName
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: ServiceName
  nameWithType: HttpListenerRequest.ServiceName
  fullName: System.Net.HttpListenerRequest.ServiceName
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter leverandøren navnet SPN (Service) som klienten sendte i forespørselen."
  remarks: "Et program kan bruke egenskapen tjenestenavn til å utføre egendefinerte angi SPN (Service Name)."
  syntax:
    content: public string ServiceName { get; }
    return:
      type: System.String
      description: "En <xref:System.String>som inneholder SPN klienten sendte i forespørselen.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.ServiceName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.TransportContext
  id: TransportContext
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: TransportContext
  nameWithType: HttpListenerRequest.TransportContext
  fullName: System.Net.HttpListenerRequest.TransportContext
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter den <xref:System.Net.TransportContext>for klientforespørselen.</xref:System.Net.TransportContext>"
  remarks: "Den <xref:System.Net.TransportContext>egenskapen kan brukes til å hente kanal bindingen token (CBT) for en <xref:System.Net.HttpListenerRequest>som ble sendt ved hjelp av HTTPS.</xref:System.Net.HttpListenerRequest> </xref:System.Net.TransportContext>       Et program kan bruke den <xref:System.Net.TransportContext>til å utføre egendefinert godkjenning ved hjelp av kall til den opprinnelige Win32 [AcceptSecurityContext](http://go.microsoft.com/fwlink/?LinkId=147021) funksjonen.</xref:System.Net.TransportContext>       Hvis et program som prøver å hente kanal bindingen token (CBT) fra denne TransportContext egenskapen ved hjelp av den <xref:System.Net.TransportContext.GetChannelBinding%2A>metoden og <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind>er ikke <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind>, deretter den <xref:System.Net.HttpListenerRequest>vil throw <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.Net.HttpListenerRequest> </xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> </xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> </xref:System.Net.TransportContext.GetChannelBinding%2A> Den <xref:System.Net.HttpListenerRequest>overstyrer den <xref:System.Net.TransportContext.GetChannelBinding%2A>metode med implementering av intern.</xref:System.Net.TransportContext.GetChannelBinding%2A> </xref:System.Net.HttpListenerRequest>"
  syntax:
    content: public System.Net.TransportContext TransportContext { get; }
    return:
      type: System.Net.TransportContext
      description: "En <xref:System.Net.TransportContext>objekt for klientforespørselen.</xref:System.Net.TransportContext>"
  overload: System.Net.HttpListenerRequest.TransportContext*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.Url
  id: Url
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: Url
  nameWithType: HttpListenerRequest.Url
  fullName: System.Net.HttpListenerRequest.Url
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter den <xref:System.Uri>objektet som ble forespurt av klienten.</xref:System.Uri>"
  remarks: "URL-egenskapen kan du hente all informasjon som er tilgjengelig fra en <xref:System.Uri>objektet.</xref:System.Uri> Hvis du vil vite bare raw teksten i URI-forespørsel, kan du vurdere å bruke den <xref:System.Net.HttpListenerRequest.RawUrl%2A>egenskapen i stedet.</xref:System.Net.HttpListenerRequest.RawUrl%2A>       URL-egenskapen er null hvis den <xref:System.Uri>fra klienten kunne ikke analyseres.</xref:System.Uri>       Den <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>egenskapen angir om <xref:System.Net.HttpListener>bruker raw spørrestrengen URIEN i stedet for å konvertere URIEN der alle prosent-kodet konverteres og andre normalization trinn er utført.</xref:System.Net.HttpListener> </xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>       Når en <xref:System.Net.HttpListener>forekomsten mottar en forespørsel til den `http.sys` tjenesten, opprettes det en forekomst av URI-streng som er angitt av `http.sys`, og viser som URL-egenskapen.</xref:System.Net.HttpListener>       Den `http.sys` tjenesten viser to strenger for forespørsels-URIEN: - Raw URI - konverteres URI raw-URIEN er den <xref:System.Uri?displayProperty=fullName>angitt i forespørselslinjen i en HTTP-forespørsel: `GET /path/` `Host: www.contoso.com` raw URIEN fra `http.sys` for forespørselen som ovenfor, er &quot;/ banen /&quot;.       </xref:System.Uri?displayProperty=fullName> Dette representerer strengen etter HTTP-verbet som det ble sendt over nettverket.       Den `http.sys` service oppretter en konverterte URI fra informasjonen i forespørselen ved hjelp av URI som er angitt i HTTP-forespørselslinjen og vertshode for å finne den opprinnelige serveren forespørselen skal videresendes til. Dette gjøres ved å sammenligne informasjonen fra forespørselen med et sett med registrerte URI-prefikser. Noen normalization i forespørselen må utføres for å kunne sammenligne verdiene. For eksempel over konverterte URIEN ville blitt slik: `http://www.contoso.com/path/` den `http.sys` tjeneste kombinerer de <xref:System.Uri.Host%2A?displayProperty=fullName>egenskapsverdi og strengen i forespørselslinjen til å opprette en konverterte URI.</xref:System.Uri.Host%2A?displayProperty=fullName> I tillegg `http.sys` og <xref:System.Uri?displayProperty=fullName>klassen også gjøre følgende:-avregistrering-løser alle kodet prosentverdier.</xref:System.Uri?displayProperty=fullName>      -Konverterer prosent-kodet ikke ASCII-tegn til representere UTF-16 tegn. Legg merke til at UTF-8 og ANSI/DBCS tegn støttes og Unicode-tegn (Unicode-koding i % uXXXX format).      -Utfører andre normalization registreringstrinnen som banen komprimering.       Etter at forespørselen ikke inneholder informasjon om kodingen som brukes for prosent-kodet verdier, kan det ikke mulig å finne riktig koding ved analysering av prosent-kodet verdiene.       Derfor `http.sys` gir to registernøkler for å endre prosessen: | Registernøkkelen | Standardverdien | Beskrivelse |   |------------------|-------------------|-----------------|   | EnableNonUTF8 |&1; | Hvis null, `http.sys` godtar bare UTF-8-kodet URL-adresser.<br /><br /> Hvis ikke er null, `http.sys` godtar også ANSI-kodet eller DBCS-kodet URL-adresser i forespørsler. |   | FavorUTF8 |&1; | Hvis ikke er null, `http.sys` alltid forsøk ikke dekode en URL-adresse som UTF-8 først; Hvis denne konverteringen mislykkes og EnableNonUTF8 ikke er null, Http.sys deretter forsøker å dekod som ANSI- eller DBCS.<br /><br /> Hvis null og EnableNonUTF8 ikke er null, `http.sys` forsøk til dekoding som ANSI eller DBCS; hvis den ikke er fullført, prøver den UTF-8 konvertering. |       Når <xref:System.Net.HttpListener>mottar en forespørsel den bruker konverterte URIEN fra `http.sys` som inndata egenskapen URL-adresse.</xref:System.Net.HttpListener>       Det er behov for støtte av tegn i tillegg til tegn og tall i URI-adresser. Et eksempel er følgende URI, som brukes til å hente informasjon om kunden for kunden number &quot;1/3812&quot;: `http://www.contoso.com/Customer(&quot;1%2F3812&quot;)/` Merk prosent-kodet skråstrek i URIen (%&2;F). Dette er nødvendig, fordi da skråstrek representerer data og ikke banen skilletegn.       Sende strengen Uri-konstruktøren fører til følgende URIEN: `http://www.contoso.com/Customer(&quot;1/3812&quot;)/` deling banen til segmentene ville ført til følgende elementer: `Customer(&quot;1` `3812&quot;)` dette er ikke meningen av avsenderen av forespørselen.              Hvis den <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>egenskapen er satt til false, og deretter når den <xref:System.Net.HttpListener>mottar en forespørsel raw URIEN brukes i stedet for å konvertere URIEN fra `http.sys` som inndata egenskapen URL-adresse.</xref:System.Net.HttpListener> </xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>"
  example:
  - "The following code example demonstrates using the Url property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_20_1.cs)]"
  syntax:
    content: public Uri Url { get; }
    return:
      type: System.Uri
      description: "En <xref:System.Uri>objekt som identifiserer ressursen ble forespurt av klienten.</xref:System.Uri>"
  overload: System.Net.HttpListenerRequest.Url*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.UrlReferrer
  id: UrlReferrer
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: UrlReferrer
  nameWithType: HttpListenerRequest.UrlReferrer
  fullName: System.Net.HttpListenerRequest.UrlReferrer
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter Uniform Resource Identifier (URI) for ressursen som refereres klienten til serveren."
  remarks: "Hvis en klient har fulgt en hyperkobling til den forespurte URIEN, forespørselen kan inneholde en `Referrer` -header som identifiserer URIEN for ressursen som inneholdt hyperkoblingen.       Klienter kan forfalske eller velger å ikke finnes en <xref:System.Net.HttpRequestHeader>overskrift.</xref:System.Net.HttpRequestHeader> Derfor da UrlReferrer egenskapen kan være nyttig for å identifisere grunnleggende trender i webtrafikk; Du bør ikke bruke den som en del av et authorization-skjema til å kontrollere tilgang til data.       For en fullstendig liste over forespørselshodene, kan du se den <xref:System.Net.HttpRequestHeader>opplisting.</xref:System.Net.HttpRequestHeader>       UrlReferrer er null når det er ingen `Referrer` -overskrift i forespørselen eller når den `Referrer` hodet finnes i forespørselen, men kan ikke analyseres til en gyldig <xref:System.Uri>.</xref:System.Uri>"
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_22_1.cs)]"
  syntax:
    content: public Uri UrlReferrer { get; }
    return:
      type: System.Uri
      description: "En <xref:System.Uri>objekt som inneholder teksten for i forespørselen <xref:System.Net.HttpRequestHeader>hodet eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis hodet ikke er inkludert i forespørselen.</xref:System.Net.HttpRequestHeader> </xref:System.Uri>"
  overload: System.Net.HttpListenerRequest.UrlReferrer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.UserAgent
  id: UserAgent
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: UserAgent
  nameWithType: HttpListenerRequest.UserAgent
  fullName: System.Net.HttpListenerRequest.UserAgent
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter brukeragenten vises av klienten."
  remarks: "Den `User-Agent` hodet inneholder vanligvis tekst som identifiserer navnet og versjonsinformasjonen antall programvaren som brukes til å generere forespørselen.       For en fullstendig liste over forespørselshodene, kan du se den <xref:System.Net.HttpRequestHeader>opplisting.</xref:System.Net.HttpRequestHeader>       UserAgent er null når det er ingen `User-Agent` -overskrift i forespørselen."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_42_1.cs)]"
  syntax:
    content: public string UserAgent { get; }
    return:
      type: System.String
      description: "En <xref:System.String>objekt som inneholder teksten for i forespørselen <xref uid=&quot;langword_csharp_User-Agent&quot; name=&quot;User-Agent&quot; href=&quot;&quot;> </xref> overskrift.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.UserAgent*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.UserHostAddress
  id: UserHostAddress
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: UserHostAddress
  nameWithType: HttpListenerRequest.UserHostAddress
  fullName: System.Net.HttpListenerRequest.UserHostAddress
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter IP-adresse og port. nummer som forespørselen er sendt for serveren."
  remarks: "Informasjonen som ble returnert av denne egenskapen også er tilgjengelig i den <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A>egenskapsverdi.</xref:System.Net.HttpListenerRequest.LocalEndPoint%2A>"
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_6_1.cs)]"
  syntax:
    content: public string UserHostAddress { get; }
    return:
      type: System.String
      description: "En <xref:System.String>som inneholder adresseinformasjon verten.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.UserHostAddress*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.UserHostName
  id: UserHostName
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: UserHostName
  nameWithType: HttpListenerRequest.UserHostName
  fullName: System.Net.HttpListenerRequest.UserHostName
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter DNS-navnet og, hvis angitt, portnummeret angitt av klienten."
  remarks: "Den `Host` hodet inneholder forespurte vert servernavnet og portnummeret hvis angitt, atskilt av et kolon (for eksempel `www.contoso.com:8080`).       Du kan bruke denne egenskapen til å returnere ulike svar avhengig av vertsnavnet som er angitt i forespørselen.       For en fullstendig liste over forespørselshodene, kan du se den <xref:System.Net.HttpRequestHeader>opplisting.</xref:System.Net.HttpRequestHeader>"
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_39_1.cs)]"
  syntax:
    content: public string UserHostName { get; }
    return:
      type: System.String
      description: "En <xref:System.String>verdi som inneholder teksten for i forespørselen <xref uid=&quot;langword_csharp_Host&quot; name=&quot;Host&quot; href=&quot;&quot;> </xref> overskrift.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.UserHostName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.UserLanguages
  id: UserLanguages
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: UserLanguages
  nameWithType: HttpListenerRequest.UserLanguages
  fullName: System.Net.HttpListenerRequest.UserLanguages
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Henter naturlig språk som er foretrukket i svaret."
  remarks: "En detaljert beskrivelse av den `Accept-Language` topptekst, kan du se RFC 2616 14.4, tilgjengelig på [http://www.rfc-editor.org](http://www.rfc-editor.org/).       For en fullstendig liste over forespørselshodene, kan du se den <xref:System.Net.HttpRequestHeader>opplisting.</xref:System.Net.HttpRequestHeader>"
  example:
  - "The following code example displays the languages from the request's `Accept-Language` header.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_18_1.cs)]"
  syntax:
    content: public string[] UserLanguages { get; }
    return:
      type: System.String[]
      description: "En <xref:System.String>matrise som inneholder språk som er angitt i forespørselen <xref:System.Net.HttpRequestHeader>topptekst eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Hvis klientforespørselen ikke inneholdt en <xref:System.Net.HttpRequestHeader>overskrift.</xref:System.Net.HttpRequestHeader> </xref:System.Net.HttpRequestHeader> </xref:System.String>"
  overload: System.Net.HttpListenerRequest.UserLanguages*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.HttpListenerRequest.AcceptTypes
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: AcceptTypes
  nameWithType: HttpListenerRequest.AcceptTypes
  fullName: System.Net.HttpListenerRequest.AcceptTypes
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: BeginGetClientCertificate(AsyncCallback,Object)
  nameWithType: HttpListenerRequest.BeginGetClientCertificate(AsyncCallback,Object)
  fullName: System.Net.HttpListenerRequest.BeginGetClientCertificate(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Net.HttpListenerRequest.ClientCertificateError
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ClientCertificateError
  nameWithType: HttpListenerRequest.ClientCertificateError
  fullName: System.Net.HttpListenerRequest.ClientCertificateError
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.HttpListenerRequest.ContentEncoding
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpListenerRequest.ContentEncoding
  fullName: System.Net.HttpListenerRequest.ContentEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Net.HttpListenerRequest.ContentLength64
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ContentLength64
  nameWithType: HttpListenerRequest.ContentLength64
  fullName: System.Net.HttpListenerRequest.ContentLength64
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.HttpListenerRequest.ContentType
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ContentType
  nameWithType: HttpListenerRequest.ContentType
  fullName: System.Net.HttpListenerRequest.ContentType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.HttpListenerRequest.Cookies
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: Cookies
  nameWithType: HttpListenerRequest.Cookies
  fullName: System.Net.HttpListenerRequest.Cookies
- uid: System.Net.CookieCollection
  parent: System.Net
  isExternal: true
  name: CookieCollection
  nameWithType: CookieCollection
  fullName: System.Net.CookieCollection
- uid: System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: EndGetClientCertificate(IAsyncResult)
  nameWithType: HttpListenerRequest.EndGetClientCertificate(IAsyncResult)
  fullName: System.Net.HttpListenerRequest.EndGetClientCertificate(IAsyncResult)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Net.HttpListenerRequest.GetClientCertificate
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: GetClientCertificate()
  nameWithType: HttpListenerRequest.GetClientCertificate()
  fullName: System.Net.HttpListenerRequest.GetClientCertificate()
- uid: System.Net.HttpListenerRequest.GetClientCertificateAsync
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: GetClientCertificateAsync()
  nameWithType: HttpListenerRequest.GetClientCertificateAsync()
  fullName: System.Net.HttpListenerRequest.GetClientCertificateAsync()
- uid: System.Threading.Tasks.Task{System.Security.Cryptography.X509Certificates.X509Certificate2}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<X509Certificate2>
  nameWithType: Task<X509Certificate2>
  fullName: System.Threading.Tasks.Task<System.Security.Cryptography.X509Certificates.X509Certificate2>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Security.Cryptography.X509Certificates.X509Certificate2>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: X509Certificate2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.HttpListenerRequest.HasEntityBody
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: HasEntityBody
  nameWithType: HttpListenerRequest.HasEntityBody
  fullName: System.Net.HttpListenerRequest.HasEntityBody
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.HttpListenerRequest.Headers
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: Headers
  nameWithType: HttpListenerRequest.Headers
  fullName: System.Net.HttpListenerRequest.Headers
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Net.HttpListenerRequest.HttpMethod
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: HttpMethod
  nameWithType: HttpListenerRequest.HttpMethod
  fullName: System.Net.HttpListenerRequest.HttpMethod
- uid: System.Net.HttpListenerRequest.InputStream
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: InputStream
  nameWithType: HttpListenerRequest.InputStream
  fullName: System.Net.HttpListenerRequest.InputStream
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.HttpListenerRequest.IsAuthenticated
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsAuthenticated
  nameWithType: HttpListenerRequest.IsAuthenticated
  fullName: System.Net.HttpListenerRequest.IsAuthenticated
- uid: System.Net.HttpListenerRequest.IsLocal
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsLocal
  nameWithType: HttpListenerRequest.IsLocal
  fullName: System.Net.HttpListenerRequest.IsLocal
- uid: System.Net.HttpListenerRequest.IsSecureConnection
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsSecureConnection
  nameWithType: HttpListenerRequest.IsSecureConnection
  fullName: System.Net.HttpListenerRequest.IsSecureConnection
- uid: System.Net.HttpListenerRequest.IsWebSocketRequest
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsWebSocketRequest
  nameWithType: HttpListenerRequest.IsWebSocketRequest
  fullName: System.Net.HttpListenerRequest.IsWebSocketRequest
- uid: System.Net.HttpListenerRequest.KeepAlive
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: KeepAlive
  nameWithType: HttpListenerRequest.KeepAlive
  fullName: System.Net.HttpListenerRequest.KeepAlive
- uid: System.Net.HttpListenerRequest.LocalEndPoint
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: LocalEndPoint
  nameWithType: HttpListenerRequest.LocalEndPoint
  fullName: System.Net.HttpListenerRequest.LocalEndPoint
- uid: System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Net.HttpListenerRequest.ProtocolVersion
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ProtocolVersion
  nameWithType: HttpListenerRequest.ProtocolVersion
  fullName: System.Net.HttpListenerRequest.ProtocolVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Net.HttpListenerRequest.QueryString
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: QueryString
  nameWithType: HttpListenerRequest.QueryString
  fullName: System.Net.HttpListenerRequest.QueryString
- uid: System.Net.HttpListenerRequest.RawUrl
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: RawUrl
  nameWithType: HttpListenerRequest.RawUrl
  fullName: System.Net.HttpListenerRequest.RawUrl
- uid: System.Net.HttpListenerRequest.RemoteEndPoint
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: RemoteEndPoint
  nameWithType: HttpListenerRequest.RemoteEndPoint
  fullName: System.Net.HttpListenerRequest.RemoteEndPoint
- uid: System.Net.HttpListenerRequest.RequestTraceIdentifier
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: RequestTraceIdentifier
  nameWithType: HttpListenerRequest.RequestTraceIdentifier
  fullName: System.Net.HttpListenerRequest.RequestTraceIdentifier
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Net.HttpListenerRequest.ServiceName
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ServiceName
  nameWithType: HttpListenerRequest.ServiceName
  fullName: System.Net.HttpListenerRequest.ServiceName
- uid: System.Net.HttpListenerRequest.TransportContext
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: TransportContext
  nameWithType: HttpListenerRequest.TransportContext
  fullName: System.Net.HttpListenerRequest.TransportContext
- uid: System.Net.TransportContext
  parent: System.Net
  isExternal: true
  name: TransportContext
  nameWithType: TransportContext
  fullName: System.Net.TransportContext
- uid: System.Net.HttpListenerRequest.Url
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: Url
  nameWithType: HttpListenerRequest.Url
  fullName: System.Net.HttpListenerRequest.Url
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.HttpListenerRequest.UrlReferrer
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UrlReferrer
  nameWithType: HttpListenerRequest.UrlReferrer
  fullName: System.Net.HttpListenerRequest.UrlReferrer
- uid: System.Net.HttpListenerRequest.UserAgent
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserAgent
  nameWithType: HttpListenerRequest.UserAgent
  fullName: System.Net.HttpListenerRequest.UserAgent
- uid: System.Net.HttpListenerRequest.UserHostAddress
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserHostAddress
  nameWithType: HttpListenerRequest.UserHostAddress
  fullName: System.Net.HttpListenerRequest.UserHostAddress
- uid: System.Net.HttpListenerRequest.UserHostName
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserHostName
  nameWithType: HttpListenerRequest.UserHostName
  fullName: System.Net.HttpListenerRequest.UserHostName
- uid: System.Net.HttpListenerRequest.UserLanguages
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserLanguages
  nameWithType: HttpListenerRequest.UserLanguages
  fullName: System.Net.HttpListenerRequest.UserLanguages
- uid: System.Net.HttpListenerRequest.AcceptTypes*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: AcceptTypes
  nameWithType: HttpListenerRequest.AcceptTypes
- uid: System.Net.HttpListenerRequest.BeginGetClientCertificate*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: BeginGetClientCertificate
  nameWithType: HttpListenerRequest.BeginGetClientCertificate
- uid: System.Net.HttpListenerRequest.ClientCertificateError*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ClientCertificateError
  nameWithType: HttpListenerRequest.ClientCertificateError
- uid: System.Net.HttpListenerRequest.ContentEncoding*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpListenerRequest.ContentEncoding
- uid: System.Net.HttpListenerRequest.ContentLength64*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ContentLength64
  nameWithType: HttpListenerRequest.ContentLength64
- uid: System.Net.HttpListenerRequest.ContentType*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ContentType
  nameWithType: HttpListenerRequest.ContentType
- uid: System.Net.HttpListenerRequest.Cookies*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: Cookies
  nameWithType: HttpListenerRequest.Cookies
- uid: System.Net.HttpListenerRequest.EndGetClientCertificate*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: EndGetClientCertificate
  nameWithType: HttpListenerRequest.EndGetClientCertificate
- uid: System.Net.HttpListenerRequest.GetClientCertificate*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: GetClientCertificate
  nameWithType: HttpListenerRequest.GetClientCertificate
- uid: System.Net.HttpListenerRequest.GetClientCertificateAsync*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: GetClientCertificateAsync
  nameWithType: HttpListenerRequest.GetClientCertificateAsync
- uid: System.Net.HttpListenerRequest.HasEntityBody*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: HasEntityBody
  nameWithType: HttpListenerRequest.HasEntityBody
- uid: System.Net.HttpListenerRequest.Headers*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: Headers
  nameWithType: HttpListenerRequest.Headers
- uid: System.Net.HttpListenerRequest.HttpMethod*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: HttpMethod
  nameWithType: HttpListenerRequest.HttpMethod
- uid: System.Net.HttpListenerRequest.InputStream*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: InputStream
  nameWithType: HttpListenerRequest.InputStream
- uid: System.Net.HttpListenerRequest.IsAuthenticated*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsAuthenticated
  nameWithType: HttpListenerRequest.IsAuthenticated
- uid: System.Net.HttpListenerRequest.IsLocal*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsLocal
  nameWithType: HttpListenerRequest.IsLocal
- uid: System.Net.HttpListenerRequest.IsSecureConnection*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsSecureConnection
  nameWithType: HttpListenerRequest.IsSecureConnection
- uid: System.Net.HttpListenerRequest.IsWebSocketRequest*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsWebSocketRequest
  nameWithType: HttpListenerRequest.IsWebSocketRequest
- uid: System.Net.HttpListenerRequest.KeepAlive*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: KeepAlive
  nameWithType: HttpListenerRequest.KeepAlive
- uid: System.Net.HttpListenerRequest.LocalEndPoint*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: LocalEndPoint
  nameWithType: HttpListenerRequest.LocalEndPoint
- uid: System.Net.HttpListenerRequest.ProtocolVersion*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ProtocolVersion
  nameWithType: HttpListenerRequest.ProtocolVersion
- uid: System.Net.HttpListenerRequest.QueryString*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: QueryString
  nameWithType: HttpListenerRequest.QueryString
- uid: System.Net.HttpListenerRequest.RawUrl*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: RawUrl
  nameWithType: HttpListenerRequest.RawUrl
- uid: System.Net.HttpListenerRequest.RemoteEndPoint*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: RemoteEndPoint
  nameWithType: HttpListenerRequest.RemoteEndPoint
- uid: System.Net.HttpListenerRequest.RequestTraceIdentifier*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: RequestTraceIdentifier
  nameWithType: HttpListenerRequest.RequestTraceIdentifier
- uid: System.Net.HttpListenerRequest.ServiceName*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ServiceName
  nameWithType: HttpListenerRequest.ServiceName
- uid: System.Net.HttpListenerRequest.TransportContext*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: TransportContext
  nameWithType: HttpListenerRequest.TransportContext
- uid: System.Net.HttpListenerRequest.Url*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: Url
  nameWithType: HttpListenerRequest.Url
- uid: System.Net.HttpListenerRequest.UrlReferrer*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UrlReferrer
  nameWithType: HttpListenerRequest.UrlReferrer
- uid: System.Net.HttpListenerRequest.UserAgent*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserAgent
  nameWithType: HttpListenerRequest.UserAgent
- uid: System.Net.HttpListenerRequest.UserHostAddress*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserHostAddress
  nameWithType: HttpListenerRequest.UserHostAddress
- uid: System.Net.HttpListenerRequest.UserHostName*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserHostName
  nameWithType: HttpListenerRequest.UserHostName
- uid: System.Net.HttpListenerRequest.UserLanguages*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserLanguages
  nameWithType: HttpListenerRequest.UserLanguages
