### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  id: WorkflowPersistenceService
  children:
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)
  langs:
  - csharp
  name: WorkflowPersistenceService
  nameWithType: WorkflowPersistenceService
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  type: Class
  summary: "Abstrakt basisklasse som er avledet services fra som alle utholdenhet."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Når visse betingelser er oppfylt mens arbeidsflyten pågår, vedvarer arbeidsflyten runtime motoren Tilstandsinformasjon om arbeidsflytforekomsten. Utholdenhet kan forekomme, for eksempel når du er ferdig atomic transaksjonen, så snart arbeidsflytforekomsten er inaktiv, når verten kaller <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=fullName>på arbeidsflytforekomsten, eller når en arbeidsflytforekomst avsluttes eller avsluttes.</xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=fullName> Når arbeidsflyten runtime motoren semantikk angir at utholdenhet skal skje, kaller arbeidsflyten runtime motoren metodene som er angitt av en utholdenhet-tjenesten for å lagre Tilstandsinformasjon om arbeidsflytforekomsten. På samme måte når arbeidsflyten runtime motoren må gjenopprette en tidligere fast arbeidsflytforekomst, kaller metodene som er angitt av utholdenhet-tjenesten for å laste inn opplysningene tilstand. Arbeidsflyten runtime motoren behandler alle semantikk om når til å utføre utholdenhet. Utholdenhet-tjenesten behandler faktisk lagrer og laster inn arbeidsflyten statusinformasjon til eller fra et datalager.       Du kan opprette en fast tjeneste ved å hente en klasse fra WorkflowPersistenceService-klassen.  Du kan legge til tjenesten utholdenhet arbeidsflyten runtime motoren ved å kalle <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>eller ved å velge en passende verdi i programmets konfigurasjonsfil.</xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> Den <xref:System.Workflow.Runtime.WorkflowRuntime>skal bare inneholde én fast-tjeneste.</xref:System.Workflow.Runtime.WorkflowRuntime> Windows-arbeidsflyten Foundation inneholder den <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>klasse, en ut av-esken utholdenhet-tjeneste, som du kan bruke fordi eller utvide.</xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>       Arbeidsflyten runtime motoren har semantikk for låsing av arbeidsflyten tilstandsinformasjon for bruk i miljøer der utholdenhet tjenester som kjører i forskjellige prosesser kan ha tilgang til ett enkelt datalager. Klassen WorkflowPersistenceService gir muligheten til å støtte denne funksjonaliteten av arbeidsflyten runtime engine ved å oppgi en parameter for <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>som angir om tilstandsinformasjon for en arbeidsflytforekomst skal være låst i datakilden, og ved å angi en annen metode <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A>låst arbeidsflyten statusinformasjon til å låse opp tidligere.</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> I en fast-tjeneste som implementerer låsing, et kall til <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A>må låse tilstandsinformasjon for en arbeidsflytforekomst.</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A>       Tjenesten utholdenhet bør iverksette en <xref:System.Workflow.Runtime.Hosting.PersistenceException>Hvis den ikke lagre informasjon om som sitt datalager eller laste inn statusinformasjon fra sitt datalager.</xref:System.Workflow.Runtime.Hosting.PersistenceException> Arbeidsflyten runtime motoren forventer dette problemet.       En batching mekanisme er angitt for tjenester som bruker en robust butikk lagre informasjon om arbeidsflyten. Det er viktig i disse tilfellene sikre konsekvens mellom den minneoptimaliserte lageret som brukes av tjenesten utholdenhet og den interne tilstanden arbeidsflyten runtime-motoren. Du kan legge til funksjonalitet som er definert av <xref:System.Workflow.Runtime.IPendingWork>grensesnittet til tjenesten, og deretter delta i arbeidsflyten transaksjonen bunkebehandling fra den <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>ved å legge til endringer i datalageret som arbeidselementer til <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.IPendingWork> Robust butikken selve skal implementere den <xref:System.Transactions.IEnlistmentNotification>grensesnitt, slik at informasjon om arbeidsflyt ikke er fast feil ved en tilbakerulling.</xref:System.Transactions.IEnlistmentNotification> Hvis du vil ha mer informasjon, se <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A>eller <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>.</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A>"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public abstract class WorkflowPersistenceService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  inheritance:
  - System.Object
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  implements: []
  inheritedMembers:
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor
  id: '#ctor'
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: WorkflowPersistenceService()
  nameWithType: WorkflowPersistenceService.WorkflowPersistenceService()
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.WorkflowPersistenceService()
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Når implementert i en avledet klasse, initialiserer en ny forekomst av den <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowPersistenceService&quot;> </xref> klasse."
  remarks: ''
  example:
  - "The following example demonstrates creating an instance of the `SqlWorkflowPersistenceService` class (derived from `WorkflowPersistenceService`). This example is from the Nested Exception Handlers SDK sample, from the Program.cs class.  For more information, see the [Nested Exception Handlers Sample](http://msdn.microsoft.com/en-us/d1da0209-842b-41c8-9b7c-0cbaa1034265).  \n  \n [!code-cs[WF_Samples#161](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#161)]\n [!code-vb[WF_Samples#161](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#161)]"
  syntax:
    content: protected WorkflowPersistenceService ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)
  id: GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: GetDefaultSerializedForm(Activity)
  nameWithType: WorkflowPersistenceService.GetDefaultSerializedForm(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Henter serialiserte standardskjema for den <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
  syntax:
    content: protected static byte[] GetDefaultSerializedForm (System.Workflow.ComponentModel.Activity activity);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "Den <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> der serialisert form forespørres."
    return:
      type: System.Byte[]
      description: "Serialiserte standardskjema for den <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(System.Workflow.ComponentModel.Activity)
  id: GetIsBlocked(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: GetIsBlocked(Activity)
  nameWithType: WorkflowPersistenceService.GetIsBlocked(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Angir om den angitte aktiviteten er blokkert."
  syntax:
    content: protected static bool GetIsBlocked (System.Workflow.ComponentModel.Activity rootActivity);
    parameters:
    - id: rootActivity
      type: System.Workflow.ComponentModel.Activity
      description: "Root aktiviteten til arbeidsflytforekomsten."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den angitte aktiviteten blir blokkert; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)
  id: GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: GetSuspendOrTerminateInfo(Activity)
  nameWithType: WorkflowPersistenceService.GetSuspendOrTerminateInfo(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Henter avslutning eller utsette informasjon for den angitte aktiviteten."
  syntax:
    content: protected static string GetSuspendOrTerminateInfo (System.Workflow.ComponentModel.Activity rootActivity);
    parameters:
    - id: rootActivity
      type: System.Workflow.ComponentModel.Activity
      description: "Root aktiviteten til arbeidsflytforekomsten."
    return:
      type: System.String
      description: "En <xref:System.String>som inneholder avslutning eller utsette informasjon.</xref:System.String>"
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(System.Workflow.ComponentModel.Activity)
  id: GetWorkflowStatus(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: GetWorkflowStatus(Activity)
  nameWithType: WorkflowPersistenceService.GetWorkflowStatus(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Henter status for arbeidsflyten."
  syntax:
    content: protected static System.Workflow.Runtime.WorkflowStatus GetWorkflowStatus (System.Workflow.ComponentModel.Activity rootActivity);
    parameters:
    - id: rootActivity
      type: System.Workflow.ComponentModel.Activity
      description: "Root aktiviteten til arbeidsflytforekomsten."
    return:
      type: System.Workflow.Runtime.WorkflowStatus
      description: "En <xref href=&quot;System.Workflow.Runtime.WorkflowStatus&quot;> </xref> opplistingsverdi som angir statusen for arbeidsflyten."
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)
  id: LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: LoadCompletedContextActivity(Guid,Activity)
  nameWithType: WorkflowPersistenceService.LoadCompletedContextActivity(Guid,Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(Guid,Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Når implementert i en avledet klasse, laster du det angitte fullstendige omfanget tilbake i minnet."
  remarks: "Arbeidsflyten runtime motoren bruker LoadCompletedContextActivity implementere kompensasjon. Du må gjenopprette en identisk kopi av det fullstendige omfanget. Hvis du vil gjøre dette, må du gjenopprette en gyldig <xref:System.IO.Stream>fra din representasjon av fullførte omfanget dataene lagres.</xref:System.IO.Stream> Deretter må du sende denne <xref:System.IO.Stream>til en av overbelastede metoder for <xref:System.Workflow.ComponentModel.Activity.Load%2A>til å utføre deserialisering av omfanget.</xref:System.Workflow.ComponentModel.Activity.Load%2A> </xref:System.IO.Stream>       Hvis utholdenhet-tjenesten ikke kan laste inn det fullstendige området fra sitt datalager, bør den iverksette en <xref:System.Workflow.Runtime.Hosting.PersistenceException>med en melding.</xref:System.Workflow.Runtime.Hosting.PersistenceException>"
  example:
  - "The following example demonstrates an implementation of the `LoadCompletedContextActivity` method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d).  \n  \n [!code-cs[WF_Samples#269](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#269)]\n [!code-vb[WF_Samples#269](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#269)]"
  syntax:
    content: protected abstract System.Workflow.ComponentModel.Activity LoadCompletedContextActivity (Guid scopeId, System.Workflow.ComponentModel.Activity outerActivity);
    parameters:
    - id: scopeId
      type: System.Guid
      description: "Den <xref:System.Guid>omfanget som er fullført.</xref:System.Guid>"
    - id: outerActivity
      type: System.Workflow.ComponentModel.Activity
      description: "En <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> som representerer aktiviteten som omslutter fullstendige omfanget."
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "En <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> som representerer fullstendige omfanget."
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)
  id: LoadWorkflowInstanceState(System.Guid)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: LoadWorkflowInstanceState(Guid)
  nameWithType: WorkflowPersistenceService.LoadWorkflowInstanceState(Guid)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Når implementert i en avledet klasse, laster du den angitte tilstanden til arbeidsflytforekomsten tilbake i minnet."
  remarks: "Du må gjenopprette en identisk kopi av aktiviteten. Hvis du vil gjøre dette, må du gjenopprette en gyldig <xref:System.IO.Stream>fra din representasjon av arbeidsflytforekomsten i datalageret; du må sende denne <xref:System.IO.Stream>til en av de overbelastet <xref:System.Workflow.ComponentModel.Activity.Load%2A>metoder deserialisering arbeidsflyten serverforekomsten tilstand.</xref:System.Workflow.ComponentModel.Activity.Load%2A> </xref:System.IO.Stream> </xref:System.IO.Stream> Hvis utholdenhet-tjenesten ikke kan laste inn tilstanden arbeidsflyten forekomst fra sitt datalager, bør den iverksette en <xref:System.Workflow.Runtime.Hosting.PersistenceException>med en melding.</xref:System.Workflow.Runtime.Hosting.PersistenceException>       Arbeidsflyten runtime motoren implementerer låsetillatelse semantikk for å begrense tilgangen til statusen for arbeidsflyt-forekomst som er lagret i et datalager. Dette kan få tilgang til vedvarende tjenester som kjører i flere prosesser. Semantikk for låsetillatelse er utformet for å forhindre utholdenhet tjenester som kjører i to ulike prosesser innlastingen av samme arbeidsflytforekomsten i minnet samtidig. Avhengig miljøet at din utholdenhet er utformet for å støtte, kan du velge om å støtte denne funksjonaliteten. Hvis du velger å støtte låsetillatelse semantikk for kjøring, og hvis problemet arbeidsflyten forekomsten tidligere er låst av en annen prosess, bør deretter du iverksette <xref:System.Workflow.Runtime.WorkflowOwnershipException>.</xref:System.Workflow.Runtime.WorkflowOwnershipException> Ellers bør du låse tilgang til tilstanden arbeidsflyten forekomst i datalageret. Tilstanden for arbeidsflyten forekomsten kan låses av et kall til <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A>eller et kall til <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>med unlock-parameteren som er angitt til `true`.</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A>"
  example:
  - "The following example demonstrates an implementation of the `LoadWorkflowInstanceState` method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d).  \n  \n [!code-cs[WF_Samples#266](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#266)]\n [!code-vb[WF_Samples#266](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#266)]"
  syntax:
    content: protected abstract System.Workflow.ComponentModel.Activity LoadWorkflowInstanceState (Guid instanceId);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "Den <xref:System.Guid>på roten aktiviteten til arbeidsflytforekomsten.</xref:System.Guid>"
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "En <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> som representerer roten aktiviteten til arbeidsflytforekomsten."
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)
  id: RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: RestoreFromDefaultSerializedForm(Byte[],Activity)
  nameWithType: WorkflowPersistenceService.RestoreFromDefaultSerializedForm(Byte[],Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(Byte[],Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Gjenoppretter den <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> fra det serialiserte skjemaet."
  remarks: ''
  example:
  - "The following example demonstrates an implementation of the `RestoreFromDefaultSerializedForm` method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d).  \n  \n [!code-cs[WF_Samples#269](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#269)]\n [!code-vb[WF_Samples#269](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#269)]"
  syntax:
    content: protected static System.Workflow.ComponentModel.Activity RestoreFromDefaultSerializedForm (byte[] activityBytes, System.Workflow.ComponentModel.Activity outerActivity);
    parameters:
    - id: activityBytes
      type: System.Byte[]
      description: "Serialiserte formatet <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
    - id: outerActivity
      type: System.Workflow.ComponentModel.Activity
      description: "Ytterste <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>, som inneholder den <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> til å gjenopprette."
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "Den gjenopprettede <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)
  id: SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: SaveCompletedContextActivity(Activity)
  nameWithType: WorkflowPersistenceService.SaveCompletedContextActivity(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Når implementert i en avledet klasse, blir det angitte fullstendige omfanget til en datalageret."
  remarks: "Arbeidsflyten runtime motoren lagrer statusen til fullstendige omfanget aktiviteter for å implementere kompensasjon. Du må kalle en av de overbelastet <xref:System.Workflow.ComponentModel.Activity.Save%2A>metoder for å serialisere `activity` til en <xref:System.IO.Stream>; deretter kan du velge å behandle i tillegg av <xref:System.IO.Stream>før skriving til datalageret.</xref:System.IO.Stream> </xref:System.IO.Stream> </xref:System.Workflow.ComponentModel.Activity.Save%2A> Imidlertid når arbeidsflyten runtime motoren kaller <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A>, må du gjenopprette en identisk kopi av aktiviteten.</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A>       Du må kunne knytte fullstendige omfanget den omsluttende arbeidsflytforekomsten å merke omfanget som trenger datalageret når arbeidsflytforekomsten avsluttes eller er avsluttet. Derfor bør du også lagre den <xref:System.Guid>til arbeidsflytforekomsten som er knyttet til det fullstendige omfanget; dette kan hente fra den <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A>for den <xref:System.Workflow.Runtime.WorkflowInstance>knyttet til `activity`.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> </xref:System.Guid>       <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A>tar i <xref:System.Guid>fullstendige omfanget som en parameter.</xref:System.Guid></xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> Derfor må du også lagre den <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A>egenskapen tilknyttet `activity`.</xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A> Denne egenskapen kan refereres til av <xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty>for `activity`.</xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty>       Hvis du implementere en fast-tjeneste som bruker en robust butikk, for å beholde konsekvensen med den interne tilstanden arbeidsflyten runtime-motoren skal du delta i arbeidsflyten transaksjonen bunkebehandling for å utsette den faktiske skrivingen til i minneoptimaliserte store før en arbeidsflyt-commit datapunkt. Legg til et arbeidselement til å delta i bunkebehandling, den <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>-egenskap som representerer de ventende endringene til databasen, og implementere den <xref:System.Workflow.Runtime.IPendingWork>grensesnittet i din utholdenhet.</xref:System.Workflow.Runtime.IPendingWork> </xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>       Hvis du ikke kan lagre det fullstendige omfanget datalageret, bør du iverksette en <xref:System.Workflow.Runtime.Hosting.PersistenceException>med en passende feilmelding.</xref:System.Workflow.Runtime.Hosting.PersistenceException>"
  example:
  - "The following example demonstrates an implementation of the `SaveCompletedContextActivity` method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d).  \n  \n [!code-cs[WF_Samples#268](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#268)]\n [!code-vb[WF_Samples#268](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#268)]"
  syntax:
    content: protected abstract void SaveCompletedContextActivity (System.Workflow.ComponentModel.Activity activity);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "En <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> som representerer fullstendige omfanget."
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)
  id: SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: SaveWorkflowInstanceState(Activity,Boolean)
  nameWithType: WorkflowPersistenceService.SaveWorkflowInstanceState(Activity,Boolean)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(Activity,Boolean)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Når implementert i en avledet klasse, lagrer du tilstanden arbeidsflyten forekomsten til en datalageret."
  remarks: "Du må kalle en av de overbelastet <xref:System.Workflow.ComponentModel.Activity.Save%2A>metoder for å serialisere `rootActivity` til <xref:System.IO.Stream>.</xref:System.IO.Stream> </xref:System.Workflow.ComponentModel.Activity.Save%2A> Deretter kan du velge å behandle i tillegg av <xref:System.IO.Stream>før skriving til datalageret.</xref:System.IO.Stream> Imidlertid når arbeidsflyten runtime motoren kaller <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A>, må du gjenopprette en identisk kopi av aktiviteten roten.</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> Hvis du ikke kan lagre tilstanden arbeidsflyten forekomsten datalageret, bør du iverksette en <xref:System.Workflow.Runtime.Hosting.PersistenceException>med en passende feilmelding.</xref:System.Workflow.Runtime.Hosting.PersistenceException>       Arbeidsflyten runtime engine gir låsetillatelse semantikk for å begrense tilgangen til statusen for arbeidsflyt-forekomst som er lagret i datakilden. Dette kan få tilgang til vedvarende-tjenestene kjører i flere verter og peker til samme datalageret. Semantikk for låsetillatelse er utformet for å forhindre utholdenhet tjenestene som kjøres i to ulike arbeidsflyten kjøretidsfiler innlastingen av samme arbeidsflytforekomsten i minnet samtidig. Avhengig av miljøet utholdenhet tjenesten er utformet for å støtte, kan du velge om å støtte denne funksjonaliteten. Hvis du velger å støtte låsetillatelse semantikk for kjøring, da bør ingen fast tjeneste prøver å lagre en arbeidsflyt forekomsttilstand som tidligere har blitt låst av en annen utholdenhet tjeneste du iverksette <xref:System.Workflow.Runtime.WorkflowOwnershipException>.</xref:System.Workflow.Runtime.WorkflowOwnershipException> Hvis `unlock` er `true`, du må låse opp tilgang til tilstanden arbeidsflyten forekomsten når du lagrer den.       <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A>tar i <xref:System.Guid>til arbeidsflytforekomsten som en parameter.</xref:System.Guid></xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> Derfor bør du lagre <xref:System.Guid>.</xref:System.Guid> Du kan også bruke dette <xref:System.Guid>å knytte arbeidsflytforekomsten til lagret tilstander for de fullstendige omfangene.</xref:System.Guid> Du må gjøre dette fordi du må kunne merke disse fullstendige omfang som trenger når arbeidsflytforekomsten er fullført.       Arbeidsflyten runtime motoren kaller SaveWorkflowInstanceState en siste gang når arbeidsflytforekomsten er fullført eller avsluttet. Derfor Hvis <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A>er lik <xref:System.Workflow.Runtime.WorkflowStatus>eller <xref:System.Workflow.Runtime.WorkflowStatus>, kan du trygt slette arbeidsflytforekomsten og alle de tilknyttede fullstendige omfangene fra datalageret.</xref:System.Workflow.Runtime.WorkflowStatus> </xref:System.Workflow.Runtime.WorkflowStatus> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A> Alternativt kan du abonnere på de <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted>eller <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated>hendelser til å bestemme når det er trygt å slette poster som er knyttet til arbeidsflytforekomsten.</xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> </xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> Om du faktisk sletter postene fra datalageret avhenger av implementeringen din.       Hvis du har implementert en fast-tjeneste som bruker en robust butikk, deretter skal for å beholde konsekvensen med den interne tilstanden arbeidsflyten runtime-motoren du delta i arbeidsflyten transaksjonen bunkebehandling for å utsette den faktiske skrivingen til i minneoptimaliserte store før en arbeidsflyt-commit datapunkt. Hvis du vil delta i bunkebehandling, legge til et arbeidselement som representerer de ventende endringene til robust store for å den <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>egenskapen og Implementer den <xref:System.Workflow.Runtime.IPendingWork>grensesnittet i din utholdenhet.</xref:System.Workflow.Runtime.IPendingWork> </xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>"
  example:
  - "The following example demonstrates an implementation of the `SaveWorkflowInstanceState` method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d).  \n  \n [!code-cs[WF_Samples#264](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#264)]\n [!code-vb[WF_Samples#264](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#264)]"
  syntax:
    content: protected abstract void SaveWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity, bool unlock);
    parameters:
    - id: rootActivity
      type: System.Workflow.ComponentModel.Activity
      description: "Root aktiviteten til arbeidsflytforekomsten."
    - id: unlock
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis arbeidsflytforekomsten ikke bør låses; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Hvis arbeidsflytforekomsten skal låses."
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)
  id: UnloadOnIdle(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: UnloadOnIdle(Activity)
  nameWithType: WorkflowPersistenceService.UnloadOnIdle(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Bestemmer om en arbeidsflyt skal være utlastet når inaktiv."
  remarks: ''
  example:
  - "The following example demonstrates an implementation of the `UnloadOnIdle` method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d).  \n  \n [!code-cs[WF_Samples#270](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#270)]\n [!code-vb[WF_Samples#270](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#270)]"
  syntax:
    content: protected abstract bool UnloadOnIdle (System.Workflow.ComponentModel.Activity activity);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "En <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> som representerer fullstendige omfanget."
    return:
      type: System.Boolean
      description: "Hvis <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, arbeidsflyt runtime motoren fjerner angitt arbeidsflyten når den er inaktiv."
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)
  id: UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: UnlockWorkflowInstanceState(Activity)
  nameWithType: WorkflowPersistenceService.UnlockWorkflowInstanceState(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Når overstyrt i en avledet klasse, låses tilstanden for arbeidsflyt-forekomst."
  remarks: "Denne metoden er abstrakt, slik at den ikke inneholder en standard implementering på låse og låse opp.       Under implementering av en egendefinert utholdenhet-tjeneste, hvis du vil implementere en låsetillatelse skjemaet må overstyre denne metoden og mekanisme låsing låse opp i den <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>metoden basert på verdien for parameteren unlock.</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>"
  example:
  - "The following example demonstrates an implementation of the `UnlockWorkflowInstanceState` method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d).  \n  \n [!code-cs[WF_Samples#267](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#267)]\n [!code-vb[WF_Samples#267](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#267)]"
  syntax:
    content: protected abstract void UnlockWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity);
    parameters:
    - id: rootActivity
      type: System.Workflow.ComponentModel.Activity
      description: "Root aktiviteten til arbeidsflytforekomsten."
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: WorkflowPersistenceService()
  nameWithType: WorkflowPersistenceService.WorkflowPersistenceService()
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.WorkflowPersistenceService()
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: GetDefaultSerializedForm(Activity)
  nameWithType: WorkflowPersistenceService.GetDefaultSerializedForm(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(Activity)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Workflow.ComponentModel.Activity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: GetIsBlocked(Activity)
  nameWithType: WorkflowPersistenceService.GetIsBlocked(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(Activity)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: GetSuspendOrTerminateInfo(Activity)
  nameWithType: WorkflowPersistenceService.GetSuspendOrTerminateInfo(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(Activity)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: GetWorkflowStatus(Activity)
  nameWithType: WorkflowPersistenceService.GetWorkflowStatus(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(Activity)
- uid: System.Workflow.Runtime.WorkflowStatus
  parent: System.Workflow.Runtime
  isExternal: false
  name: WorkflowStatus
  nameWithType: WorkflowStatus
  fullName: System.Workflow.Runtime.WorkflowStatus
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: LoadCompletedContextActivity(Guid,Activity)
  nameWithType: WorkflowPersistenceService.LoadCompletedContextActivity(Guid,Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(Guid,Activity)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: LoadWorkflowInstanceState(Guid)
  nameWithType: WorkflowPersistenceService.LoadWorkflowInstanceState(Guid)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(Guid)
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: RestoreFromDefaultSerializedForm(Byte[],Activity)
  nameWithType: WorkflowPersistenceService.RestoreFromDefaultSerializedForm(Byte[],Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(Byte[],Activity)
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: SaveCompletedContextActivity(Activity)
  nameWithType: WorkflowPersistenceService.SaveCompletedContextActivity(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(Activity)
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: SaveWorkflowInstanceState(Activity,Boolean)
  nameWithType: WorkflowPersistenceService.SaveWorkflowInstanceState(Activity,Boolean)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(Activity,Boolean)
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: UnloadOnIdle(Activity)
  nameWithType: WorkflowPersistenceService.UnloadOnIdle(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(Activity)
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: UnlockWorkflowInstanceState(Activity)
  nameWithType: WorkflowPersistenceService.UnlockWorkflowInstanceState(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(Activity)
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: WorkflowPersistenceService
  nameWithType: WorkflowPersistenceService.WorkflowPersistenceService
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: GetDefaultSerializedForm
  nameWithType: WorkflowPersistenceService.GetDefaultSerializedForm
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: GetIsBlocked
  nameWithType: WorkflowPersistenceService.GetIsBlocked
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: GetSuspendOrTerminateInfo
  nameWithType: WorkflowPersistenceService.GetSuspendOrTerminateInfo
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: GetWorkflowStatus
  nameWithType: WorkflowPersistenceService.GetWorkflowStatus
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: LoadCompletedContextActivity
  nameWithType: WorkflowPersistenceService.LoadCompletedContextActivity
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: LoadWorkflowInstanceState
  nameWithType: WorkflowPersistenceService.LoadWorkflowInstanceState
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: RestoreFromDefaultSerializedForm
  nameWithType: WorkflowPersistenceService.RestoreFromDefaultSerializedForm
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: SaveCompletedContextActivity
  nameWithType: WorkflowPersistenceService.SaveCompletedContextActivity
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: SaveWorkflowInstanceState
  nameWithType: WorkflowPersistenceService.SaveWorkflowInstanceState
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: UnloadOnIdle
  nameWithType: WorkflowPersistenceService.UnloadOnIdle
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: UnlockWorkflowInstanceState
  nameWithType: WorkflowPersistenceService.UnlockWorkflowInstanceState
