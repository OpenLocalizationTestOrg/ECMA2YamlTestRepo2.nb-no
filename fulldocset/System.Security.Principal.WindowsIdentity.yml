### YamlMime:ManagedReference
items:
- uid: System.Security.Principal.WindowsIdentity
  id: WindowsIdentity
  children:
  - System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)
  - System.Security.Principal.WindowsIdentity.#ctor(System.Security.Principal.WindowsIdentity)
  - System.Security.Principal.WindowsIdentity.#ctor(System.String)
  - System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)
  - System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)
  - System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)
  - System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)
  - System.Security.Principal.WindowsIdentity.AccessToken
  - System.Security.Principal.WindowsIdentity.AuthenticationType
  - System.Security.Principal.WindowsIdentity.Claims
  - System.Security.Principal.WindowsIdentity.Clone
  - System.Security.Principal.WindowsIdentity.DefaultIssuer
  - System.Security.Principal.WindowsIdentity.DeviceClaims
  - System.Security.Principal.WindowsIdentity.Dispose
  - System.Security.Principal.WindowsIdentity.Dispose(System.Boolean)
  - System.Security.Principal.WindowsIdentity.GetAnonymous
  - System.Security.Principal.WindowsIdentity.GetCurrent
  - System.Security.Principal.WindowsIdentity.GetCurrent(System.Boolean)
  - System.Security.Principal.WindowsIdentity.GetCurrent(System.Security.Principal.TokenAccessLevels)
  - System.Security.Principal.WindowsIdentity.Groups
  - System.Security.Principal.WindowsIdentity.Impersonate
  - System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)
  - System.Security.Principal.WindowsIdentity.ImpersonationLevel
  - System.Security.Principal.WindowsIdentity.IsAnonymous
  - System.Security.Principal.WindowsIdentity.IsAuthenticated
  - System.Security.Principal.WindowsIdentity.IsGuest
  - System.Security.Principal.WindowsIdentity.IsSystem
  - System.Security.Principal.WindowsIdentity.Name
  - System.Security.Principal.WindowsIdentity.Owner
  - System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)
  - System.Security.Principal.WindowsIdentity.RunImpersonated``1(Microsoft.Win32.SafeHandles.SafeAccess``0okenHandle,System.Func{``0})
  - System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  - System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Principal.WindowsIdentity.Token
  - System.Security.Principal.WindowsIdentity.User
  - System.Security.Principal.WindowsIdentity.UserClaims
  langs:
  - csharp
  name: WindowsIdentity
  nameWithType: WindowsIdentity
  fullName: System.Security.Principal.WindowsIdentity
  type: Class
  summary: "Representerer en Windows-bruker."
  remarks: "Kall av <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A>metode for å opprette et WindowsIdentity-objekt som representerer gjeldende bruker.</xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A>      > [!IMPORTANT] > Denne typen implementerer den <xref:System.IDisposable>grensesnittet.</xref:System.IDisposable> Når du er ferdig ved hjelp av typen, må du fjerne den direkte eller indirekte. Hvis du vil fjerne av typen direkte, kan du kalle den <xref:System.IDisposable.Dispose%2A>metoden i en `try` / `catch` block.</xref:System.IDisposable.Dispose%2A> Hvis du vil fjerne den indirekte, bruke et språk som `using` (i C#) eller `Using` (i Visual Basic). For mer informasjon, se &quot;Ved hjelp av et objekt som implementerer IDisposable&quot; i den <xref:System.IDisposable>grensesnittet emnet.</xref:System.IDisposable>"
  example:
  - "The following example shows the use of members of WindowsIdentity class.  For an example showing how to obtain a Windows account token through a call to the unmanaged Win32 `LogonUser` function, and use that token to impersonate another user, see the <xref:System.Security.Principal.WindowsImpersonationContext> class.  \n  \n [!code-cs[System.Security.Principal.WindowsIdentity_AllMembers#1](~/add/codesnippet/csharp/t-system.security.princi_5_1.cs)]\n [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#1](~/add/codesnippet/cpp/t-system.security.princi_5_1.cpp)]\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#1](~/add/codesnippet/visualbasic/t-system.security.princi_5_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class WindowsIdentity : System.Security.Claims.ClaimsIdentity, IDisposable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.Security.Claims.ClaimsIdentity
  implements:
  - System.IDisposable
  - System.Runtime.Serialization.IDeserializationCallback
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Security.Claims.ClaimsIdentity.Actor
  - System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)
  - System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.BootstrapContext
  - System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)
  - System.Security.Claims.ClaimsIdentity.CustomSerializationData
  - System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
  - System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
  - System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.FindAll(System.String)
  - System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.FindFirst(System.String)
  - System.Security.Claims.ClaimsIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)
  - System.Security.Claims.ClaimsIdentity.Label
  - System.Security.Claims.ClaimsIdentity.NameClaimType
  - System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)
  - System.Security.Claims.ClaimsIdentity.RoleClaimType
  - System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)
  - System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)
  - System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)
  id: '#ctor(System.IntPtr)'
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: WindowsIdentity(IntPtr)
  nameWithType: WindowsIdentity.WindowsIdentity(IntPtr)
  fullName: System.Security.Principal.WindowsIdentity.WindowsIdentity(IntPtr)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> klasse for brukeren som er representert av det angitte Windows-konto-tokenet."
  remarks: "Tabellen nedenfor viser første egenskapsverdier for en forekomst av <xref:System.Security.Principal.WindowsIdentity>.</xref:System.Security.Principal.WindowsIdentity>      | Egenskapen | Standardverdi |   |--------------|-------------------|   | <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>| `Negotiate`|   | <xref:System.Security.Principal.WindowsAccountType>| `Normal`|   | <xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>| `false`|      > [!NOTE] > Kan du hente tokenet representert av `userToken` ved å kalle ubehandlet kode som Win32 API `LogonUser` funksjonen.</xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A> </xref:System.Security.Principal.WindowsAccountType> </xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> Alltid frigjøre `userToken` ved å kalle Win32 API `CloseHandle` funksjonen. For mer informasjon om kaller ubehandlet kode, kan du se [bruker funksjoner for uforvaltede DLL](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public WindowsIdentity (IntPtr userToken);
    parameters:
    - id: userToken
      type: System.IntPtr
      description: "Konto-token for brukeren koden kjøres på vegne."
  overload: System.Security.Principal.WindowsIdentity.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>userToken</code>er 0.       - eller - <code>userToken</code> er duplisert og ugyldig for representasjon."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke tillatelse.       - eller en Win32-feilen oppstod."
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.#ctor(System.Security.Principal.WindowsIdentity)
  id: '#ctor(System.Security.Principal.WindowsIdentity)'
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: WindowsIdentity(WindowsIdentity)
  nameWithType: WindowsIdentity.WindowsIdentity(WindowsIdentity)
  fullName: System.Security.Principal.WindowsIdentity.WindowsIdentity(WindowsIdentity)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> klassen ved hjelp av den angitte <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> objektet."
  syntax:
    content: protected WindowsIdentity (System.Security.Principal.WindowsIdentity identity);
    parameters:
    - id: identity
      type: System.Security.Principal.WindowsIdentity
      description: "Objektet som ikke konstruere ny forekomst av <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref>."
  overload: System.Security.Principal.WindowsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: WindowsIdentity(String)
  nameWithType: WindowsIdentity.WindowsIdentity(String)
  fullName: System.Security.Principal.WindowsIdentity.WindowsIdentity(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> klasse for brukeren som er representert av den angitte UPN (Hovednavn)."
  remarks: "Et hovednavn for bruker har formatet *brukernavn*@*domenenavn*.com, med andre ord, en e-postadresse. UPN-navnet som er identifisert i `sUserPrincipalName` brukes til å hente et token for denne brukeren via Win32 API `LsaLogonUser` funksjonen. Denne token blir brukt til å identifisere brukeren. Et unntak kan returneres på grunn av at du ikke kan logge på med oppgitt UPN-navnet.      > [!NOTE] > Denne konstruktøren er ment for Bruk bare på datamaskiner som er koblet til Windows Server 2003 eller senere domener. Et unntak for eldre domenetyper. Denne begrensningen er at denne konstruktøren bruker den [KERB_S4U_LOGON strukturen](http://go.microsoft.com/fwlink/?LinkId=143533), som ble første introdusert i Windows Server 2003."
  syntax:
    content: public WindowsIdentity (string sUserPrincipalName);
    parameters:
    - id: sUserPrincipalName
      type: System.String
      description: "UPN-navnet for brukeren koden kjøres på vegne."
  overload: System.Security.Principal.WindowsIdentity.#ctor*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Windows returnerte Windows NT-statuskode STATUS_ACCESS_DENIED."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne tilgjengelig."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke tillatelse.       - eller - datamaskinen er ikke koblet til et Windows 2003 eller senere domene.       - eller - datamaskinen kjører ikke Windows 2003 eller senere.       - eller - brukeren er ikke medlem av datamaskinen er koblet til domenet."
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)
  id: '#ctor(System.IntPtr,System.String)'
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: WindowsIdentity(IntPtr,String)
  nameWithType: WindowsIdentity.WindowsIdentity(IntPtr,String)
  fullName: System.Security.Principal.WindowsIdentity.WindowsIdentity(IntPtr,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> klasse for brukeren som er representert av det angitte Windows-tokenet for kontoen og den angitte godkjenningstypen."
  remarks: "Tabellen nedenfor viser første egenskapsverdier for en forekomst av <xref:System.Security.Principal.WindowsIdentity>.</xref:System.Security.Principal.WindowsIdentity>      | Egenskapen | Standardverdi |   |--------------|-------------------|   | <xref:System.Security.Principal.WindowsAccountType>| `Normal`|   | <xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>| `false`|       Verdien for den `type` parameteren brukes til å angi den <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>parameteren.</xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> </xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A> </xref:System.Security.Principal.WindowsAccountType> Hvis `type` er `null`, sikkerhet system angir <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>til `Negotiate` på Windows Vista og senere versjoner av Windows-operativsystem, og for å `Kerberos` på tidligere versjoner av Windows-operativsystemet.</xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> Sikkerhetssystemet bruker ikke denne verdien. Det er bare ment som informasjon Bruk for.      > [!NOTE] > Kan du hente tokenet representert av `userToken` ved å kalle ubehandlet kode som Win32 API `LogonUser` funksjonen. Alltid frigjøre `userToken` ved å kalle Win32 API `CloseHandle` funksjonen. For mer informasjon om kaller ubehandlet kode, kan du se [bruker funksjoner for uforvaltede DLL](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructor to create a new instance of the  <xref:System.Security.Principal.WindowsIdentity> class for the user represented by the specified Windows account token and the specified authentication type. This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.  \n  \n [!code-cs[System.Security.Principal.WindowsIdentity_AllMembers#4](~/add/codesnippet/csharp/dc54fc11-729f-4337-b932-_1.cs)]\n [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#4](~/add/codesnippet/cpp/dc54fc11-729f-4337-b932-_1.cpp)]\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#4](~/add/codesnippet/visualbasic/dc54fc11-729f-4337-b932-_1.vb)]"
  syntax:
    content: public WindowsIdentity (IntPtr userToken, string type);
    parameters:
    - id: userToken
      type: System.IntPtr
      description: "Konto-token for brukeren koden kjøres på vegne."
    - id: type
      type: System.String
      description: "(Informasjon Bruk bare.) Typen godkjenningstypen som brukes til å identifisere brukeren. Hvis du vil ha mer informasjon, se kommentarer."
  overload: System.Security.Principal.WindowsIdentity.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>userToken</code>er 0.       - eller - <code>userToken</code> er duplisert og ugyldig for representasjon."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke tillatelse.       - eller en Win32-feilen oppstod."
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: WindowsIdentity(SerializationInfo,StreamingContext)
  nameWithType: WindowsIdentity.WindowsIdentity(SerializationInfo,StreamingContext)
  fullName: System.Security.Principal.WindowsIdentity.WindowsIdentity(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> klasse for brukeren som er representert av informasjonen i en <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> dataflyten."
  remarks: >-
    > [!IMPORTANT]

    >  Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378).
  syntax:
    content: public WindowsIdentity (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Objektet som inneholder kontoinformasjon for brukeren."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Et objekt som angir dataflyten-egenskaper."
  overload: System.Security.Principal.WindowsIdentity.#ctor*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "En <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> kan ikke serialiseres på tvers av prosesser."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke tillatelse.       - eller en Win32-feilen oppstod."
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: WindowsIdentity(String,String)
  nameWithType: WindowsIdentity.WindowsIdentity(String,String)
  fullName: System.Security.Principal.WindowsIdentity.WindowsIdentity(String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> klasse for brukeren som er representert av den angitte UPN (Hovednavn) og den angitte godkjenningstypen."
  remarks: "Verdien for den `type` parameteren brukes til å angi den <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>parameteren.</xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> Hvis `type` er `null`, sikkerhet system angir <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>til `Negotiate` på Windows Vista og senere versjoner av Windows-operativsystem, og for å `Kerberos` på tidligere versjoner av Windows-operativsystemet.</xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> Sikkerhetssystemet bruker ikke denne verdien. Det er bare ment som informasjon Bruk for.       UPN-navnet som er identifisert i `sUserPrincipalName` brukes til å hente et token for denne brukeren via Win32 API `LsaLogonUser` funksjonen. Denne token blir brukt til å identifisere brukeren. Et unntak kan returneres på grunn av at du ikke kan logge på med oppgitt UPN-navnet.      > [!NOTE] > Denne konstruktøren er ment for Bruk bare på datamaskiner som er koblet til Windows Server 2003 eller senere domener. Et unntak for eldre domenetyper. Denne begrensningen er at denne konstruktøren bruker den [KERB_S4U_LOGON strukturen](http://go.microsoft.com/fwlink/?LinkId=143533), som ble første introdusert i Windows Server 2003."
  syntax:
    content: public WindowsIdentity (string sUserPrincipalName, string type);
    parameters:
    - id: sUserPrincipalName
      type: System.String
      description: "UPN-navnet for brukeren koden kjøres på vegne."
    - id: type
      type: System.String
      description: "(Informasjon Bruk bare.) Typen godkjenningstypen som brukes til å identifisere brukeren. Hvis du vil ha mer informasjon, se kommentarer."
  overload: System.Security.Principal.WindowsIdentity.#ctor*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Windows returnerte Windows NT-statuskode STATUS_ACCESS_DENIED."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne tilgjengelig."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke tillatelse.       - eller - datamaskinen er ikke koblet til et Windows 2003 eller senere domene.       - eller - datamaskinen kjører ikke Windows 2003 eller senere.       - eller - brukeren er ikke medlem av datamaskinen er koblet til domenet."
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)
  id: '#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)'
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: WindowsIdentity(IntPtr,String,WindowsAccountType)
  nameWithType: WindowsIdentity.WindowsIdentity(IntPtr,String,WindowsAccountType)
  fullName: System.Security.Principal.WindowsIdentity.WindowsIdentity(IntPtr,String,WindowsAccountType)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> klasse for brukeren som er representert av det angitte Windows-tokenet for kontoen, den angitte godkjenningstypen og den angitte typen for Windows-konto."
  remarks: "Tabellen nedenfor viser første egenskapsverdier for en forekomst av <xref:System.Security.Principal.WindowsIdentity>.</xref:System.Security.Principal.WindowsIdentity>      | Egenskapen | Standardverdi |   |--------------|-------------------|   | <xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>| `false`|       Verdien for den `type` parameteren brukes til å angi den <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>parameteren.</xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> </xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A> Hvis `type` er `null`, sikkerhet system angir <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>til `Negotiate` på Windows Vista og senere versjoner av Windows-operativsystem, og for å `Kerberos` på tidligere versjoner av Windows-operativsystemet.</xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> Sikkerhetssystemet bruker ikke denne verdien. Det er bare ment som informasjon Bruk for.      > [!NOTE] > Kan du hente tokenet representert av `userToken` ved å kalle ubehandlet kode som Win32 API `LogonUser` funksjonen. Alltid frigjøre `userToken` ved å kalle Win32 API `CloseHandle` funksjonen. For mer informasjon om kaller ubehandlet kode, kan du se [bruker funksjoner for uforvaltede DLL](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code shows the use of the WindowsIdentity constructor to create a new instance of the <xref:System.Security.Principal.WindowsIdentity> class for the user represented by the specified Windows account token, the specified authentication type, and the specified Windows account type. This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.  \n  \n [!code-cs[System.Security.Principal.WindowsIdentity_AllMembers#7](~/add/codesnippet/csharp/6cec7b3f-80c5-417d-99d8-_1.cs)]\n [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#7](~/add/codesnippet/cpp/6cec7b3f-80c5-417d-99d8-_1.cpp)]\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#7](~/add/codesnippet/visualbasic/6cec7b3f-80c5-417d-99d8-_1.vb)]"
  syntax:
    content: public WindowsIdentity (IntPtr userToken, string type, System.Security.Principal.WindowsAccountType acctType);
    parameters:
    - id: userToken
      type: System.IntPtr
      description: "Konto-token for brukeren koden kjøres på vegne."
    - id: type
      type: System.String
      description: "(Informasjon Bruk bare.) Typen godkjenningstypen som brukes til å identifisere brukeren. Hvis du vil ha mer informasjon, se kommentarer."
    - id: acctType
      type: System.Security.Principal.WindowsAccountType
      description: "En av verdiene for enumeration."
  overload: System.Security.Principal.WindowsIdentity.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>userToken</code>er 0.       - eller - <code>userToken</code> er duplisert og ugyldig for representasjon."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke tillatelse.       - eller en Win32-feilen oppstod."
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)
  id: '#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)'
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: WindowsIdentity(IntPtr,String,WindowsAccountType,Boolean)
  nameWithType: WindowsIdentity.WindowsIdentity(IntPtr,String,WindowsAccountType,Boolean)
  fullName: System.Security.Principal.WindowsIdentity.WindowsIdentity(IntPtr,String,WindowsAccountType,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> klasse for brukeren som er representert av det angitte Windows-tokenet for kontoen, den angitte godkjenningstypen, angitt Windows kontotypen og den angitte godkjenningsstatus."
  remarks: "Verdien for den `type` parameteren brukes til å angi den <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>parameteren.</xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> Hvis `type` er `null`, sikkerhet system angir <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>til `Negotiate` på Windows Vista og senere versjoner av Windows-operativsystem, og for å `Kerberos` på tidligere versjoner av Windows-operativsystemet.</xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> Sikkerhetssystemet bruker ikke denne verdien. Det er bare ment som informasjon Bruk for.       Du kan hente tokenet representert av `userToken` ved å kalle ubehandlet kode som Win32 API `LogonUser` funksjonen. Alltid frigjøre `userToken` ved å kalle Win32 API `CloseHandle` funksjonen. For mer informasjon om kaller ubehandlet kode, kan du se [bruker funksjoner for uforvaltede DLL](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code shows the use of the WindowsIdentity constructor to create a new instance of the <xref:System.Security.Principal.WindowsIdentity> class for the user represented by the specified Windows account token, the specified authentication type, the specified Windows account type, and the specified authentication status. This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.  \n  \n [!code-cs[System.Security.Principal.WindowsIdentity_AllMembers#17](~/add/codesnippet/csharp/851e6c2b-b248-45b7-9cd4-_1.cs)]\n [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#17](~/add/codesnippet/cpp/851e6c2b-b248-45b7-9cd4-_1.cpp)]\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#17](~/add/codesnippet/visualbasic/851e6c2b-b248-45b7-9cd4-_1.vb)]"
  syntax:
    content: public WindowsIdentity (IntPtr userToken, string type, System.Security.Principal.WindowsAccountType acctType, bool isAuthenticated);
    parameters:
    - id: userToken
      type: System.IntPtr
      description: "Konto-token for brukeren koden kjøres på vegne."
    - id: type
      type: System.String
      description: "(Informasjon Bruk bare.) Typen godkjenningstypen som brukes til å identifisere brukeren. Hvis du vil ha mer informasjon, se kommentarer."
    - id: acctType
      type: System.Security.Principal.WindowsAccountType
      description: "En av verdiene for enumeration."
    - id: isAuthenticated
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>for å angi at brukeren er godkjent; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Principal.WindowsIdentity.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>userToken</code>er 0.       - eller - <code>userToken</code> er duplisert og ugyldig for representasjon."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke tillatelse.       - eller en Win32-feilen oppstod."
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.AccessToken
  id: AccessToken
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: AccessToken
  nameWithType: WindowsIdentity.AccessToken
  fullName: System.Security.Principal.WindowsIdentity.AccessToken
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Henter dette <xref href=&quot;Microsoft.Win32.SafeHandles.SafeAccessTokenHandle&quot;> </xref> for denne <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> forekomsten."
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafeAccessTokenHandle AccessToken { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle
      description: "Returnerer en <xref href=&quot;Microsoft.Win32.SafeHandles.SafeAccessTokenHandle&quot;> </xref>."
  overload: System.Security.Principal.WindowsIdentity.AccessToken*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.AuthenticationType
  id: AuthenticationType
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: AuthenticationType
  nameWithType: WindowsIdentity.AuthenticationType
  fullName: System.Security.Principal.WindowsIdentity.AuthenticationType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Henter godkjenningstypen som brukes til å identifisere brukeren."
  remarks: "Denne egenskapen er bare ment som informasjon; Det brukes ikke av sikkerhetssystemet. Standardverdien for denne egenskapen er på Windows Vista og senere versjoner av Windows-operativsystem, `Negotiate`, som velger beste sikkerhet støtte leverandøren (SSP) basert på kunden konfigurert sikkerhetspolicy. Egenskapsverdien for standard for tidligere versjoner av Windows-operativsystemet `Kerberos`."
  syntax:
    content: public override sealed string AuthenticationType { get; }
    return:
      type: System.String
      description: "Typen godkjenningstypen som brukes til å identifisere brukeren."
  overload: System.Security.Principal.WindowsIdentity.AuthenticationType*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Windows returnerte Windows NT-statuskode STATUS_ACCESS_DENIED."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne tilgjengelig."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke tillatelse.       - eller - datamaskinen er ikke koblet til et Windows 2003 eller senere domene.       - eller - datamaskinen kjører ikke Windows 2003 eller senere.       - eller - brukeren er ikke medlem av datamaskinen er koblet til domenet."
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.Claims
  id: Claims
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: Claims
  nameWithType: WindowsIdentity.Claims
  fullName: System.Security.Principal.WindowsIdentity.Claims
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Henter alle krav for brukeren som er representert av denne Windows-brukeridentitet."
  syntax:
    content: public override System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> Claims { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "En samling av kravene for dette <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> objektet."
  overload: System.Security.Principal.WindowsIdentity.Claims*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.Clone
  id: Clone
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: Clone()
  nameWithType: WindowsIdentity.Clone()
  fullName: System.Security.Principal.WindowsIdentity.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Oppretter et nytt objekt som er en kopi av den gjeldende forekomsten."
  syntax:
    content: public override System.Security.Claims.ClaimsIdentity Clone ();
    parameters: []
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: "En kopi av den gjeldende forekomsten."
  overload: System.Security.Principal.WindowsIdentity.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.DefaultIssuer
  id: DefaultIssuer
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: DefaultIssuer
  nameWithType: WindowsIdentity.DefaultIssuer
  fullName: System.Security.Principal.WindowsIdentity.DefaultIssuer
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Angir navnet på standard <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> utsteder."
  syntax:
    content: public const string DefaultIssuer;
    return:
      type: System.String
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.DeviceClaims
  id: DeviceClaims
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: DeviceClaims
  nameWithType: WindowsIdentity.DeviceClaims
  fullName: System.Security.Principal.WindowsIdentity.DeviceClaims
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Henter krav som har den <xref href=&quot;System.Security.Claims.ClaimTypes.WindowsDeviceClaim&quot;> </xref> egenskapen nøkkel."
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> DeviceClaims { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "En samling av krav som har den <xref href=&quot;System.Security.Claims.ClaimTypes.WindowsDeviceClaim&quot;> </xref> egenskapen nøkkel."
  overload: System.Security.Principal.WindowsIdentity.DeviceClaims*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.Dispose
  id: Dispose
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: Dispose()
  nameWithType: WindowsIdentity.Dispose()
  fullName: System.Security.Principal.WindowsIdentity.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Frigir alle ressursene som brukes av den <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref>."
  remarks: "Kall avhending når du er ferdig med <xref:System.Security.Principal.WindowsIdentity>.</xref:System.Security.Principal.WindowsIdentity> Fjerningsmetoden forlater den <xref:System.Security.Principal.WindowsIdentity>i en ubrukelig tilstand.</xref:System.Security.Principal.WindowsIdentity> Etter å avhending, må du frigi alle referanser til den <xref:System.Security.Principal.WindowsIdentity>Slik saneringsoppsamlingen kan gjenvinne minnet som den <xref:System.Security.Principal.WindowsIdentity>ble bruker.</xref:System.Security.Principal.WindowsIdentity> </xref:System.Security.Principal.WindowsIdentity> Hvis du vil ha mer informasjon, se [Rydder opp uforvaltede ressurser](~/add/includes/ajax-current-ext-md.md) og [implementere metoden fjerne](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Alltid kall fjerne før du slipper siste referanse til <xref:System.Security.Principal.WindowsIdentity>.</xref:System.Security.Principal.WindowsIdentity> Ellers ressurser den bruker vil ikke bli frigjort før saneringsoppsamling kall av <xref:System.Security.Principal.WindowsIdentity>objektets `Finalize` metode.</xref:System.Security.Principal.WindowsIdentity>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.Principal.WindowsIdentity.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: WindowsIdentity.Dispose(Boolean)
  fullName: System.Security.Principal.WindowsIdentity.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Frigir uforvaltede ressursene som brukes av den <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> og eventuelt frigir administrerte ressurser."
  remarks: "Denne metoden kalles av offentlig `Dispose()`metoden og <xref:System.Object.Finalize%2A>metode.</xref:System.Object.Finalize%2A> `Dispose()`Aktiverer den beskyttede `Dispose(Boolean)` metoden med den `disposing` parameteren satt til `true`. <xref:System.Object.Finalize%2A>aktiverer `Dispose` med `disposing` satt til `false`.</xref:System.Object.Finalize%2A>       Når den `disposing` parameteren er `true`, denne metoden Frigjør alle ressurser holdes av administrerte objekter som denne <xref:System.Security.Principal.WindowsIdentity>referanser.</xref:System.Security.Principal.WindowsIdentity> Denne metoden starter den `Dispose()` metode for hver referert objekt."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>å frigjøre både administrerte og uforvaltede ressurser. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> frigi bare uforvaltede ressurser."
  overload: System.Security.Principal.WindowsIdentity.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.GetAnonymous
  id: GetAnonymous
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: GetAnonymous()
  nameWithType: WindowsIdentity.GetAnonymous()
  fullName: System.Security.Principal.WindowsIdentity.GetAnonymous()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Returnerer en <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> objekt som du kan bruke som en sentinel-verdi i koden til å representere en anonym bruker. Egenskapsverdien representerer ikke innebygde anonym identiteten som brukes av operativsystemet Windows."
  remarks: "Denne egenskapen returnerer et tomt <xref:System.Security.Principal.WindowsIdentity>objektet som gjør det mulig å behandle operasjoner som anonym.</xref:System.Security.Principal.WindowsIdentity> Egenskapsverdien samsvarer ikke med en anonym bruker for Windows og kan ikke brukes for representasjon. Legg også merke identiteten som returneres av denne egenskapen ikke er statisk; hvert kall til GetAnonymous returnerer en annen anonym identitet.       Du kan bruke den <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A>til å oppdage returverdien fra GetAnonymous.</xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> Imidlertid <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A>oppdager både Windows anonym ID og anonym ID returneres av denne metoden.</xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> Hvis du vil bruke den seneste identiteten bufre GetAnonymous returverdien i stedet for å stole på den <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A>egenskapen.</xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A>"
  example:
  - "The following code shows the use of the GetAnonymous method to return a <xref:System.Security.Principal.WindowsIdentity> object that represents an anonymous Windows user. This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.  \n  \n [!code-cs[System.Security.Principal.WindowsIdentity_AllMembers#15](~/add/codesnippet/csharp/m-system.security.princi_5_1.cs)]\n [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#15](~/add/codesnippet/cpp/m-system.security.princi_5_1.cpp)]\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#15](~/add/codesnippet/visualbasic/m-system.security.princi_5_1.vb)]"
  syntax:
    content: public static System.Security.Principal.WindowsIdentity GetAnonymous ();
    parameters: []
    return:
      type: System.Security.Principal.WindowsIdentity
      description: "Et objekt som representerer en anonym bruker."
  overload: System.Security.Principal.WindowsIdentity.GetAnonymous*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.GetCurrent
  id: GetCurrent
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: GetCurrent()
  nameWithType: WindowsIdentity.GetCurrent()
  fullName: System.Security.Principal.WindowsIdentity.GetCurrent()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Returnerer en <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> objektet som representerer gjeldende Windows-bruker."
  remarks: ''
  example:
  - "The following code shows the use of the GetCurrent method to return a <xref:System.Security.Principal.WindowsIdentity> object that represents the current Windows user. This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.  \n  \n [!code-cs[System.Security.Principal.WindowsIdentity_AllMembers#13](~/add/codesnippet/csharp/m-system.security.princi_7_1.cs)]\n [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#13](~/add/codesnippet/cpp/m-system.security.princi_7_1.cpp)]\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#13](~/add/codesnippet/visualbasic/m-system.security.princi_7_1.vb)]"
  syntax:
    content: public static System.Security.Principal.WindowsIdentity GetCurrent ();
    parameters: []
    return:
      type: System.Security.Principal.WindowsIdentity
      description: "Et objekt som representerer gjeldende bruker."
  overload: System.Security.Principal.WindowsIdentity.GetCurrent*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke tillatelse."
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.GetCurrent(System.Boolean)
  id: GetCurrent(System.Boolean)
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: GetCurrent(Boolean)
  nameWithType: WindowsIdentity.GetCurrent(Boolean)
  fullName: System.Security.Principal.WindowsIdentity.GetCurrent(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Returnerer en <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> objektet som representerer Windows identiteten for tråden eller prosessen, avhengig av verdien for den <code> ifImpersonating </code> parameteren."
  remarks: "Hvis `ifImpersonating` er `true` og tråden ikke representerer, den returnerte <xref:System.Security.Principal.WindowsIdentity>objektet har ingen verdi.</xref:System.Security.Principal.WindowsIdentity>  Hvis `ifImpersonating` er `false` og tråden representerer, <xref:System.Security.Principal.WindowsIdentity>for tråden returneres.</xref:System.Security.Principal.WindowsIdentity>  Hvis `ifImpersonating` er `false` og tråden ikke representerer, <xref:System.Security.Principal.WindowsIdentity>for prosessen returneres.</xref:System.Security.Principal.WindowsIdentity>"
  syntax:
    content: public static System.Security.Principal.WindowsIdentity GetCurrent (bool ifImpersonating);
    parameters:
    - id: ifImpersonating
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Returnerer den <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> hvis tråden representerer for øyeblikket; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> til å returnere den <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> trådens hvis den representerer eller <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> av prosessen hvis tråden ikke representerer."
    return:
      type: System.Security.Principal.WindowsIdentity
      description: "Et objekt som representerer en Windows-bruker."
  overload: System.Security.Principal.WindowsIdentity.GetCurrent*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.GetCurrent(System.Security.Principal.TokenAccessLevels)
  id: GetCurrent(System.Security.Principal.TokenAccessLevels)
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: GetCurrent(TokenAccessLevels)
  nameWithType: WindowsIdentity.GetCurrent(TokenAccessLevels)
  fullName: System.Security.Principal.WindowsIdentity.GetCurrent(TokenAccessLevels)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Returnerer en <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> objektet som representerer gjeldende Windows-bruker, ved hjelp av den angitte ønsket token tilgangsnivå."
  remarks: "Den `desiredAccess` parameteren angir en maske som identifiserer de forespurte typene tilgang til tokenet. Disse forespurte tilgangstyper sammenlignes med det tokenet detaljert tilgangskontrolliste (DACL) for å finne ut hvilken type tilgang er gitt eller nektet."
  syntax:
    content: public static System.Security.Principal.WindowsIdentity GetCurrent (System.Security.Principal.TokenAccessLevels desiredAccess);
    parameters:
    - id: desiredAccess
      type: System.Security.Principal.TokenAccessLevels
      description: "En bitvis kombinasjonen av verdier opplisting."
    return:
      type: System.Security.Principal.WindowsIdentity
      description: "Et objekt som representerer gjeldende bruker."
  overload: System.Security.Principal.WindowsIdentity.GetCurrent*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.Groups
  id: Groups
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: Groups
  nameWithType: WindowsIdentity.Groups
  fullName: System.Security.Principal.WindowsIdentity.Groups
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Henter gruppene gjeldende Windows brukeren tilhører."
  remarks: ''
  example:
  - "The following code example shows the use of the Groups property to display the identity references for the groups the current user belongs to.  This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.  \n  \n [!code-cs[System.Security.Principal.WindowsIdentity_AllMembers#20](~/add/codesnippet/csharp/p-system.security.princi_8_1.cs)]\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#20](~/add/codesnippet/visualbasic/p-system.security.princi_8_1.vb)]"
  syntax:
    content: public System.Security.Principal.IdentityReferenceCollection Groups { get; }
    return:
      type: System.Security.Principal.IdentityReferenceCollection
      description: "Et objekt som representerer gruppene tilhører gjeldende Windows-bruker."
  overload: System.Security.Principal.WindowsIdentity.Groups*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.Impersonate
  id: Impersonate
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: Impersonate()
  nameWithType: WindowsIdentity.Impersonate()
  fullName: System.Security.Principal.WindowsIdentity.Impersonate()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Representerer bruker representert av den <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> objektet."
  remarks: "Gjeldende bruker må ha tillatelse til å tillate representasjon på Windows NT-plattformer."
  example:
  - "The following example demonstrates how to obtain a Windows account token by calling the unmanaged Win32 `LogonUser` function, and how to use that token to impersonate another user and then revert to the original identity.  \n  \n [!code-cpp[WindowsIdentity Impersonation#1](~/add/codesnippet/cpp/m-system.security.princi_2_1.cpp)]\n [!code-cs[WindowsIdentity Impersonation#1](~/add/codesnippet/csharp/m-system.security.princi_2_1.cs)]\n [!code-vb[WindowsIdentity Impersonation#1](~/add/codesnippet/visualbasic/m-system.security.princi_2_1.vb)]"
  syntax:
    content: public virtual System.Security.Principal.WindowsImpersonationContext Impersonate ();
    parameters: []
    return:
      type: System.Security.Principal.WindowsImpersonationContext
      description: "Et objekt som representerer Windows-bruker før representasjonsnivå. Dette kan brukes til å gå tilbake til den opprinnelige brukerkontekst."
  overload: System.Security.Principal.WindowsIdentity.Impersonate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "En anonym identitet forsøkte å utføre en representasjon."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Det oppstod en Win32."
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)
  id: Impersonate(System.IntPtr)
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: Impersonate(IntPtr)
  nameWithType: WindowsIdentity.Impersonate(IntPtr)
  fullName: System.Security.Principal.WindowsIdentity.Impersonate(IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Representerer bruker representert av det angitte brukertokenet."
  remarks: "Gjeldende bruker må ha tillatelse til å tillate representasjon på Windows NT-plattformer.      > [!NOTE] > Å kalle metoden opptre med en `userToken` verdien <xref:System.IntPtr>tilsvarer kaller Win32 `RevertToSelf` funksjonen.</xref:System.IntPtr> Hvis en annen bruker for øyeblikket som representeres, tilbakestilles kontrollen til den opprinnelige brukeren.       Du finner mer informasjon om kaller ubehandlet kode [bruker funksjoner for uforvaltede DLL](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to obtain a Windows account token by calling the unmanaged Win32 `LogonUser` function, and how to use that token to impersonate another user and then revert to the original identity.  \n  \n [!code-vb[WindowsIdentity Impersonation2#1](~/add/codesnippet/visualbasic/m-system.security.princi_3_1.vb)]\n [!code-cs[WindowsIdentity Impersonation2#1](~/add/codesnippet/csharp/m-system.security.princi_3_1.cs)]"
  syntax:
    content: public static System.Security.Principal.WindowsImpersonationContext Impersonate (IntPtr userToken);
    parameters:
    - id: userToken
      type: System.IntPtr
      description: "Behandlingen av en Windows-konto-token. Dette tokenet hentes vanligvis via et kall til ubehandlet kode, for eksempel et kall til Win32 API <xref uid=&quot;langword_csharp_LogonUser&quot; name=&quot;LogonUser&quot; href=&quot;&quot;> </xref> funksjonen."
    return:
      type: System.Security.Principal.WindowsImpersonationContext
      description: "Et objekt som representerer Windows-bruker før representasjonsnivå. Dette objektet kan brukes til å gå tilbake til den opprinnelige brukerkontekst."
  overload: System.Security.Principal.WindowsIdentity.Impersonate*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Windows returnerte Windows NT-statuskode STATUS_ACCESS_DENIED."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det er ikke nok minne tilgjengelig."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Oppkalleren har ikke tillatelse."
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.ImpersonationLevel
  id: ImpersonationLevel
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: ImpersonationLevel
  nameWithType: WindowsIdentity.ImpersonationLevel
  fullName: System.Security.Principal.WindowsIdentity.ImpersonationLevel
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Henter representasjonsnivået for brukeren."
  remarks: "Beskriver representasjonsnivået som skal brukes til å koble til WMI."
  example:
  - "The following code example shows the use of the ImpersonationLevel property to display the impersonation level for the current user. This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.  \n  \n [!code-cs[System.Security.Principal.WindowsIdentity_AllMembers#21](~/add/codesnippet/csharp/p-system.security.princi_3_1.cs)]\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#21](~/add/codesnippet/visualbasic/p-system.security.princi_3_1.vb)]"
  syntax:
    content: public System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }
    return:
      type: System.Security.Principal.TokenImpersonationLevel
      description: "En av verdiene for enumeration som angir representasjonsnivået."
  overload: System.Security.Principal.WindowsIdentity.ImpersonationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.IsAnonymous
  id: IsAnonymous
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: IsAnonymous
  nameWithType: WindowsIdentity.IsAnonymous
  fullName: System.Security.Principal.WindowsIdentity.IsAnonymous
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Henter en verdi som angir om brukerkontoen er identifisert som en anonym konto av systemet."
  remarks: "Egenskapen IsAnonymous oppdager både Windows anonym ID og anonyme identiteten som returneres av den <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>metoden.</xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>       Anonyme kontoer vanligvis påløper bare bare fra i ASP.NET-baserte programmer når anonym tilgang er tillatt av Internet Information Services (IIS)."
  example:
  - "The following code shows the use of the IsAnonymous property to detect whether the user account is identified as an anonymous account by the system. This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.  \n  \n [!code-cs[System.Security.Principal.WindowsIdentity_AllMembers#9](~/add/codesnippet/csharp/p-system.security.princi_4_1.cs)]\n [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#9](~/add/codesnippet/cpp/p-system.security.princi_4_1.cpp)]\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#9](~/add/codesnippet/visualbasic/p-system.security.princi_4_1.vb)]"
  syntax:
    content: public virtual bool IsAnonymous { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis brukerkontoen er en anonym kontoen. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Principal.WindowsIdentity.IsAnonymous*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.IsAuthenticated
  id: IsAuthenticated
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: WindowsIdentity.IsAuthenticated
  fullName: System.Security.Principal.WindowsIdentity.IsAuthenticated
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Henter en verdi som angir om brukeren er godkjent av Windows."
  syntax:
    content: public override bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis brukeren ble godkjent; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Principal.WindowsIdentity.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.IsGuest
  id: IsGuest
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: IsGuest
  nameWithType: WindowsIdentity.IsGuest
  fullName: System.Security.Principal.WindowsIdentity.IsGuest
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Henter en verdi som angir om brukerkontoen er identifisert som en <xref href=&quot;System.Security.Principal.WindowsAccountType&quot;> </xref> kontoen av systemet."
  remarks: ''
  example:
  - "The following code shows the use of the IsGuest property to return a value indicating whether the user account is identified as a <xref:System.Security.Principal.WindowsAccountType> account by the system. This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.  \n  \n [!code-cs[System.Security.Principal.WindowsIdentity_AllMembers#12](~/add/codesnippet/csharp/p-system.security.princi_11_1.cs)]\n [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#12](~/add/codesnippet/cpp/p-system.security.princi_11_1.cpp)]\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#12](~/add/codesnippet/visualbasic/p-system.security.princi_11_1.vb)]"
  syntax:
    content: public virtual bool IsGuest { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis brukerkontoen er en <xref href=&quot;System.Security.Principal.WindowsAccountType&quot;> </xref> konto; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Principal.WindowsIdentity.IsGuest*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.IsSystem
  id: IsSystem
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: IsSystem
  nameWithType: WindowsIdentity.IsSystem
  fullName: System.Security.Principal.WindowsIdentity.IsSystem
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Henter en verdi som angir om brukerkontoen er identifisert som en <xref href=&quot;System.Security.Principal.WindowsAccountType&quot;> </xref> kontoen av systemet."
  remarks: ''
  example:
  - "The following code shows the use of the IsSystem property to return a value indicating whether the user account is identified as a <xref:System.Security.Principal.WindowsAccountType> account by the system. This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.  \n  \n [!code-cs[System.Security.Principal.WindowsIdentity_AllMembers#11](~/add/codesnippet/csharp/p-system.security.princi_9_1.cs)]\n [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#11](~/add/codesnippet/cpp/p-system.security.princi_9_1.cpp)]\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#11](~/add/codesnippet/visualbasic/p-system.security.princi_9_1.vb)]"
  syntax:
    content: public virtual bool IsSystem { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis brukerkontoen er en <xref href=&quot;System.Security.Principal.WindowsAccountType&quot;> </xref> konto; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Principal.WindowsIdentity.IsSystem*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.Name
  id: Name
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: Name
  nameWithType: WindowsIdentity.Name
  fullName: System.Security.Principal.WindowsIdentity.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Henter brukerens Windows-brukernavnet."
  remarks: "Påloggingsnavnet er i formatet DOMENE\\brukernavn."
  example:
  - "The following code shows the use of the Name property to get the user's Windows logon name. This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.  \n  \n [!code-cs[System.Security.Principal.WindowsIdentity_AllMembers#8](~/add/codesnippet/csharp/p-system.security.princi_2_1.cs)]\n [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#8](~/add/codesnippet/cpp/p-system.security.princi_2_1.cpp)]\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#8](~/add/codesnippet/visualbasic/p-system.security.princi_2_1.vb)]"
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: "Windows-påloggingsnavnet til brukeren på vegne koden kjøres."
  overload: System.Security.Principal.WindowsIdentity.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.Owner
  id: Owner
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: Owner
  nameWithType: WindowsIdentity.Owner
  fullName: System.Security.Principal.WindowsIdentity.Owner
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Henter sikkerhetsidentifikatoren (SID) for eieren av token."
  remarks: "SIDEN identifiserer en bruker eller gruppe på alle Windows NT-implementeringer.  Den returnerte SID identifiserer Standardeieren SID som gjelder for nyopprettede objekter."
  example:
  - "The following code example shows the use of the Owner property to display the security identifier for the token owner.  This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class  \n  \n [!code-cs[System.Security.Principal.WindowsIdentity_AllMembers#19](~/add/codesnippet/csharp/p-system.security.princi_5_1.cs)]\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#19](~/add/codesnippet/visualbasic/p-system.security.princi_5_1.vb)]"
  syntax:
    content: public System.Security.Principal.SecurityIdentifier Owner { get; }
    return:
      type: System.Security.Principal.SecurityIdentifier
      description: "Et objekt for eieren av token."
  overload: System.Security.Principal.WindowsIdentity.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)
  id: RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: RunImpersonated(SafeAccessTokenHandle,Action)
  nameWithType: WindowsIdentity.RunImpersonated(SafeAccessTokenHandle,Action)
  fullName: System.Security.Principal.WindowsIdentity.RunImpersonated(SafeAccessTokenHandle,Action)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Kjører den angitte handlingen som den representerte Windows-brukeridentiteten. I stedet for å bruke et representert metodekall og kjøre funksjonen i <xref href=&quot;System.Security.Principal.WindowsImpersonationContext&quot;> </xref>, du kan bruke RunImpersonated og gir funksjonen direkte som en parameter."
  remarks: ''
  example:
  - "The following example demonstrates the use of the <xref:System.Security.Principal.WindowsIdentity> class to impersonate a user.  \n  \n> [!WARNING]\n>  This sample asks the user to enter a password on the console screen. The password will be visible on the screen, because the console window does not support masked input natively.  \n  \n```c#  \n// The following example demonstrates the use of the WindowsIdentity class to impersonate a user.   \n// IMPORTANT NOTE:   \n// This sample asks the user to enter a password on the console screen.   \n// The password will be visible on the screen, because the console window   \n// does not support masked input natively.  \n  \nusing System;  \nusing System.Runtime.InteropServices;  \nusing System.Security;  \nusing System.Security.Principal;  \nusing Microsoft.Win32.SafeHandles;  \n  \npublic class ImpersonationDemo  \n{  \n    [DllImport(\"advapi32.dll\", SetLastError = true, CharSet = CharSet.Unicode)]  \n    public static extern bool LogonUser(String lpszUsername, String lpszDomain, String lpszPassword,  \n        int dwLogonType, int dwLogonProvider, out SafeAccessTokenHandle phToken);  \n  \n    public static void Main()  \n    {  \n        // Get the user token for the specified user, domain, and password using the   \n        // unmanaged LogonUser method.   \n        // The local machine name can be used for the domain name to impersonate a user on this machine.  \n        Console.Write(\"Enter the name of the domain on which to log on: \");  \n        string domainName = Console.ReadLine();  \n  \n        Console.Write(\"Enter the login of a user on {0} that you wish to impersonate: \", domainName);  \n        string userName = Console.ReadLine();  \n  \n        Console.Write(\"Enter the password for {0}: \", userName);  \n  \n        const int LOGON32_PROVIDER_DEFAULT = 0;  \n        //This parameter causes LogonUser to create a primary token.   \n        const int LOGON32_LOGON_INTERACTIVE = 2;  \n  \n        // Call LogonUser to obtain a handle to an access token.   \n        SafeAccessTokenHandle safeAccessTokenHandle;  \n        bool returnValue = LogonUser(userName, domainName, Console.ReadLine(),  \n            LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,  \n            out safeAccessTokenHandle);  \n  \n        if (false == returnValue)  \n        {  \n            int ret = Marshal.GetLastWin32Error();  \n            Console.WriteLine(\"LogonUser failed with error code : {0}\", ret);  \n            throw new System.ComponentModel.Win32Exception(ret);  \n        }  \n  \n        Console.WriteLine(\"Did LogonUser Succeed? \" + (returnValue ? \"Yes\" : \"No\"));  \n        // Check the identity.  \n        Console.WriteLine(\"Before impersonation: \" + WindowsIdentity.GetCurrent().Name);  \n  \n        // Note: if you want to run as unimpersonated, pass  \n        //       'SafeAccessTokenHandle.InvalidHandle' instead of variable 'safeAccessTokenHandle'  \n        WindowsIdentity.RunImpersonated(  \n            safeAccessTokenHandle,  \n            // User action  \n            () =>  \n            {  \n                // Check the identity.  \n                Console.WriteLine(\"During impersonation: \" + WindowsIdentity.GetCurrent().Name);  \n            }  \n            );  \n  \n        // Check the identity again.  \n        Console.WriteLine(\"After impersonation: \" + WindowsIdentity.GetCurrent().Name);  \n    }  \n}  \n  \n```"
  syntax:
    content: public static void RunImpersonated (Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, Action action);
    parameters:
    - id: safeAccessTokenHandle
      type: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle
      description: "SafeAccessTokenHandle for representert Windows-brukeridentitet."
    - id: action
      type: System.Action
      description: "System.Action til å kjøre."
  overload: System.Security.Principal.WindowsIdentity.RunImpersonated*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.RunImpersonated``1(Microsoft.Win32.SafeHandles.SafeAccess``0okenHandle,System.Func{``0})
  id: RunImpersonated``1(Microsoft.Win32.SafeHandles.SafeAccess``0okenHandle,System.Func{``0})
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: RunImpersonated(SafeAccessTokenHandle,Func<T>)
  nameWithType: WindowsIdentity.RunImpersonated(SafeAccessTokenHandle,Func<T>)
  fullName: System.Security.Principal.WindowsIdentity.RunImpersonated(SafeAccessTokenHandle,Func<T>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  syntax:
    content: public static T RunImpersonated<T> (Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, Func<T> func);
    parameters:
    - id: safeAccessTokenHandle
      type: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle
      description: "Som skal legges til."
    - id: func
      type: System.Func{T}
      description: "Som skal legges til."
    return:
      type: T
      description: "Som skal legges til."
  overload: System.Security.Principal.WindowsIdentity.RunImpersonated<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  id: System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  isEii: true
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  nameWithType: WindowsIdentity.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  fullName: System.Security.Principal.WindowsIdentity.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Implementerer den <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> grensesnittet og kalles tilbake deserialisering-hendelse når deserialisering er fullført."
  syntax:
    content: void IDeserializationCallback.OnDeserialization (object sender);
    parameters:
    - id: sender
      type: System.Object
      description: "Kilden for hendelsen deserialisering."
  overload: System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: WindowsIdentity.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Security.Principal.WindowsIdentity.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Angir den <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objekt med logiske konteksten informasjonen som kreves for å opprette en forekomst av denne utføringskontekst."
  remarks: "Denne metoden angir en <xref:System.Runtime.Serialization.SerializationInfo>med logisk kalle informasjon om sikkerhetskontekst.</xref:System.Runtime.Serialization.SerializationInfo> Under deserialisering, reconstituted kjøring context-objektet fra den <xref:System.Runtime.Serialization.SerializationInfo>overføres via dataflyten.</xref:System.Runtime.Serialization.SerializationInfo>       Hvis du vil ha mer informasjon, kan du se <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo>"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Et objekt som inneholder informasjonen som kreves for å serialisere den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Et objekt som inneholder kilde og mål for serialisert dataflyt knyttet til den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  overload: System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.Token
  id: Token
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: Token
  nameWithType: WindowsIdentity.Token
  fullName: System.Security.Principal.WindowsIdentity.Token
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Henter token for Windows-konto for brukeren."
  remarks: "Gjør ikke eksplisitt utgaven kontoen tokenet som returneres av Token-egenskapen. Tokenet er utgitt av den <xref:System.Security.Principal.WindowsIdentity.Dispose%2A>metode, som du kan ringe i koden.</xref:System.Security.Principal.WindowsIdentity.Dispose%2A> <xref:System.Security.Principal.WindowsIdentity.Dispose%2A>kalles også automatisk av saneringsoppsamlingen.</xref:System.Security.Principal.WindowsIdentity.Dispose%2A>      > [!NOTE] > Koden for kontoen som er returnert av Token-egenskap er et duplikat av Windows-token som brukes til å opprette den <xref:System.Security.Principal.WindowsIdentity>objekt og automatisk er utgitt av .NET Framework.</xref:System.Security.Principal.WindowsIdentity> Dette er forskjellig fra kontoen-token (den `userToken` parameteren for konstruktøren), som brukes til å opprette den <xref:System.Security.Principal.WindowsIdentity>objektet.</xref:System.Security.Principal.WindowsIdentity> `userToken`er en token for Windows-kontoen som er opprettet av et kall til `LogonUser` og må være lukket for å unngå en minnelekkasje."
  example:
  - "The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsSystem%2A> property to get the Windows account token for the user. This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.  \n  \n [!code-cs[System.Security.Principal.WindowsIdentity_AllMembers#14](~/add/codesnippet/csharp/p-system.security.princi_0_1.cs)]\n [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#14](~/add/codesnippet/cpp/p-system.security.princi_0_1.cpp)]\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#14](~/add/codesnippet/visualbasic/p-system.security.princi_0_1.vb)]"
  syntax:
    content: public virtual IntPtr Token { get; }
    return:
      type: System.IntPtr
      description: "Behandlingen av tilgangstoken som er knyttet til gjeldende kjøring-tråden."
  overload: System.Security.Principal.WindowsIdentity.Token*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.User
  id: User
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: User
  nameWithType: WindowsIdentity.User
  fullName: System.Security.Principal.WindowsIdentity.User
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Henter sikkerhetsidentifikatoren (SID) for brukeren."
  remarks: "SIDEN identifiserer en bruker eller gruppe på alle Windows NT-implementeringer.      > [!NOTE] > Den <xref:System.Security.Principal.WindowsIdentity>objektet som ble returnert av den <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>metoden er ikke det samme som en anonym bruker for Windows.</xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> </xref:System.Security.Principal.WindowsIdentity> Denne egenskapen henter `null` for en anonym bruker representert av den <xref:System.Security.Principal.WindowsIdentity>objektet som ble returnert av den <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>-metoden; den ikke hente SID som representerer en anonym bruker for Windows.</xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> </xref:System.Security.Principal.WindowsIdentity>"
  syntax:
    content: public System.Security.Principal.SecurityIdentifier User { get; }
    return:
      type: System.Security.Principal.SecurityIdentifier
      description: "Et objekt for brukeren."
  overload: System.Security.Principal.WindowsIdentity.User*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.WindowsIdentity.UserClaims
  id: UserClaims
  parent: System.Security.Principal.WindowsIdentity
  langs:
  - csharp
  name: UserClaims
  nameWithType: WindowsIdentity.UserClaims
  fullName: System.Security.Principal.WindowsIdentity.UserClaims
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Henter krav som har den <xref href=&quot;System.Security.Claims.ClaimTypes.WindowsUserClaim&quot;> </xref> egenskapen nøkkel."
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> UserClaims { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "En samling av krav som har den <xref href=&quot;System.Security.Claims.ClaimTypes.WindowsUserClaim&quot;> </xref> egenskapen nøkkel."
  overload: System.Security.Principal.WindowsIdentity.UserClaims*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: System.Security.Claims.ClaimsIdentity
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: WindowsIdentity(IntPtr)
  nameWithType: WindowsIdentity.WindowsIdentity(IntPtr)
  fullName: System.Security.Principal.WindowsIdentity.WindowsIdentity(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Security.Principal.WindowsIdentity.#ctor(System.Security.Principal.WindowsIdentity)
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: WindowsIdentity(WindowsIdentity)
  nameWithType: WindowsIdentity.WindowsIdentity(WindowsIdentity)
  fullName: System.Security.Principal.WindowsIdentity.WindowsIdentity(WindowsIdentity)
- uid: System.Security.Principal.WindowsIdentity
  parent: System.Security.Principal
  isExternal: false
  name: WindowsIdentity
  nameWithType: WindowsIdentity
  fullName: System.Security.Principal.WindowsIdentity
- uid: System.Security.Principal.WindowsIdentity.#ctor(System.String)
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: WindowsIdentity(String)
  nameWithType: WindowsIdentity.WindowsIdentity(String)
  fullName: System.Security.Principal.WindowsIdentity.WindowsIdentity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: WindowsIdentity(IntPtr,String)
  nameWithType: WindowsIdentity.WindowsIdentity(IntPtr,String)
  fullName: System.Security.Principal.WindowsIdentity.WindowsIdentity(IntPtr,String)
- uid: System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: WindowsIdentity(SerializationInfo,StreamingContext)
  nameWithType: WindowsIdentity.WindowsIdentity(SerializationInfo,StreamingContext)
  fullName: System.Security.Principal.WindowsIdentity.WindowsIdentity(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: WindowsIdentity(String,String)
  nameWithType: WindowsIdentity.WindowsIdentity(String,String)
  fullName: System.Security.Principal.WindowsIdentity.WindowsIdentity(String,String)
- uid: System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: WindowsIdentity(IntPtr,String,WindowsAccountType)
  nameWithType: WindowsIdentity.WindowsIdentity(IntPtr,String,WindowsAccountType)
  fullName: System.Security.Principal.WindowsIdentity.WindowsIdentity(IntPtr,String,WindowsAccountType)
- uid: System.Security.Principal.WindowsAccountType
  parent: System.Security.Principal
  isExternal: false
  name: WindowsAccountType
  nameWithType: WindowsAccountType
  fullName: System.Security.Principal.WindowsAccountType
- uid: System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: WindowsIdentity(IntPtr,String,WindowsAccountType,Boolean)
  nameWithType: WindowsIdentity.WindowsIdentity(IntPtr,String,WindowsAccountType,Boolean)
  fullName: System.Security.Principal.WindowsIdentity.WindowsIdentity(IntPtr,String,WindowsAccountType,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Principal.WindowsIdentity.AccessToken
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: AccessToken
  nameWithType: WindowsIdentity.AccessToken
  fullName: System.Security.Principal.WindowsIdentity.AccessToken
- uid: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeAccessTokenHandle
  nameWithType: SafeAccessTokenHandle
  fullName: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle
- uid: System.Security.Principal.WindowsIdentity.AuthenticationType
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: AuthenticationType
  nameWithType: WindowsIdentity.AuthenticationType
  fullName: System.Security.Principal.WindowsIdentity.AuthenticationType
- uid: System.Security.Principal.WindowsIdentity.Claims
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: Claims
  nameWithType: WindowsIdentity.Claims
  fullName: System.Security.Principal.WindowsIdentity.Claims
- uid: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Claim>
  nameWithType: IEnumerable<Claim>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Security.Claims.Claim>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Principal.WindowsIdentity.Clone
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: Clone()
  nameWithType: WindowsIdentity.Clone()
  fullName: System.Security.Principal.WindowsIdentity.Clone()
- uid: System.Security.Principal.WindowsIdentity.DefaultIssuer
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: DefaultIssuer
  nameWithType: WindowsIdentity.DefaultIssuer
  fullName: System.Security.Principal.WindowsIdentity.DefaultIssuer
- uid: System.Security.Principal.WindowsIdentity.DeviceClaims
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: DeviceClaims
  nameWithType: WindowsIdentity.DeviceClaims
  fullName: System.Security.Principal.WindowsIdentity.DeviceClaims
- uid: System.Security.Principal.WindowsIdentity.Dispose
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: Dispose()
  nameWithType: WindowsIdentity.Dispose()
  fullName: System.Security.Principal.WindowsIdentity.Dispose()
- uid: System.Security.Principal.WindowsIdentity.Dispose(System.Boolean)
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: WindowsIdentity.Dispose(Boolean)
  fullName: System.Security.Principal.WindowsIdentity.Dispose(Boolean)
- uid: System.Security.Principal.WindowsIdentity.GetAnonymous
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: GetAnonymous()
  nameWithType: WindowsIdentity.GetAnonymous()
  fullName: System.Security.Principal.WindowsIdentity.GetAnonymous()
- uid: System.Security.Principal.WindowsIdentity.GetCurrent
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: GetCurrent()
  nameWithType: WindowsIdentity.GetCurrent()
  fullName: System.Security.Principal.WindowsIdentity.GetCurrent()
- uid: System.Security.Principal.WindowsIdentity.GetCurrent(System.Boolean)
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: GetCurrent(Boolean)
  nameWithType: WindowsIdentity.GetCurrent(Boolean)
  fullName: System.Security.Principal.WindowsIdentity.GetCurrent(Boolean)
- uid: System.Security.Principal.WindowsIdentity.GetCurrent(System.Security.Principal.TokenAccessLevels)
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: GetCurrent(TokenAccessLevels)
  nameWithType: WindowsIdentity.GetCurrent(TokenAccessLevels)
  fullName: System.Security.Principal.WindowsIdentity.GetCurrent(TokenAccessLevels)
- uid: System.Security.Principal.TokenAccessLevels
  parent: System.Security.Principal
  isExternal: false
  name: TokenAccessLevels
  nameWithType: TokenAccessLevels
  fullName: System.Security.Principal.TokenAccessLevels
- uid: System.Security.Principal.WindowsIdentity.Groups
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: Groups
  nameWithType: WindowsIdentity.Groups
  fullName: System.Security.Principal.WindowsIdentity.Groups
- uid: System.Security.Principal.IdentityReferenceCollection
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReferenceCollection
  nameWithType: IdentityReferenceCollection
  fullName: System.Security.Principal.IdentityReferenceCollection
- uid: System.Security.Principal.WindowsIdentity.Impersonate
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: Impersonate()
  nameWithType: WindowsIdentity.Impersonate()
  fullName: System.Security.Principal.WindowsIdentity.Impersonate()
- uid: System.Security.Principal.WindowsImpersonationContext
  parent: System.Security.Principal
  isExternal: false
  name: WindowsImpersonationContext
  nameWithType: WindowsImpersonationContext
  fullName: System.Security.Principal.WindowsImpersonationContext
- uid: System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: Impersonate(IntPtr)
  nameWithType: WindowsIdentity.Impersonate(IntPtr)
  fullName: System.Security.Principal.WindowsIdentity.Impersonate(IntPtr)
- uid: System.Security.Principal.WindowsIdentity.ImpersonationLevel
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: ImpersonationLevel
  nameWithType: WindowsIdentity.ImpersonationLevel
  fullName: System.Security.Principal.WindowsIdentity.ImpersonationLevel
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: true
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.Security.Principal.WindowsIdentity.IsAnonymous
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: IsAnonymous
  nameWithType: WindowsIdentity.IsAnonymous
  fullName: System.Security.Principal.WindowsIdentity.IsAnonymous
- uid: System.Security.Principal.WindowsIdentity.IsAuthenticated
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: IsAuthenticated
  nameWithType: WindowsIdentity.IsAuthenticated
  fullName: System.Security.Principal.WindowsIdentity.IsAuthenticated
- uid: System.Security.Principal.WindowsIdentity.IsGuest
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: IsGuest
  nameWithType: WindowsIdentity.IsGuest
  fullName: System.Security.Principal.WindowsIdentity.IsGuest
- uid: System.Security.Principal.WindowsIdentity.IsSystem
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: IsSystem
  nameWithType: WindowsIdentity.IsSystem
  fullName: System.Security.Principal.WindowsIdentity.IsSystem
- uid: System.Security.Principal.WindowsIdentity.Name
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: Name
  nameWithType: WindowsIdentity.Name
  fullName: System.Security.Principal.WindowsIdentity.Name
- uid: System.Security.Principal.WindowsIdentity.Owner
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: Owner
  nameWithType: WindowsIdentity.Owner
  fullName: System.Security.Principal.WindowsIdentity.Owner
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: RunImpersonated(SafeAccessTokenHandle,Action)
  nameWithType: WindowsIdentity.RunImpersonated(SafeAccessTokenHandle,Action)
  fullName: System.Security.Principal.WindowsIdentity.RunImpersonated(SafeAccessTokenHandle,Action)
- uid: System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Security.Principal.WindowsIdentity.RunImpersonated``1(Microsoft.Win32.SafeHandles.SafeAccess``0okenHandle,System.Func{``0})
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: RunImpersonated(SafeAccessTokenHandle,Func<T>)
  nameWithType: WindowsIdentity.RunImpersonated(SafeAccessTokenHandle,Func<T>)
  fullName: System.Security.Principal.WindowsIdentity.RunImpersonated(SafeAccessTokenHandle,Func<T>)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Func{T}
  parent: System
  isExternal: true
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: Func<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  nameWithType: WindowsIdentity.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  fullName: System.Security.Principal.WindowsIdentity.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: WindowsIdentity.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Security.Principal.WindowsIdentity.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Security.Principal.WindowsIdentity.Token
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: Token
  nameWithType: WindowsIdentity.Token
  fullName: System.Security.Principal.WindowsIdentity.Token
- uid: System.Security.Principal.WindowsIdentity.User
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: User
  nameWithType: WindowsIdentity.User
  fullName: System.Security.Principal.WindowsIdentity.User
- uid: System.Security.Principal.WindowsIdentity.UserClaims
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: UserClaims
  nameWithType: WindowsIdentity.UserClaims
  fullName: System.Security.Principal.WindowsIdentity.UserClaims
- uid: System.Security.Principal.WindowsIdentity.#ctor*
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: WindowsIdentity
  nameWithType: WindowsIdentity.WindowsIdentity
- uid: System.Security.Principal.WindowsIdentity.AccessToken*
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: AccessToken
  nameWithType: WindowsIdentity.AccessToken
- uid: System.Security.Principal.WindowsIdentity.AuthenticationType*
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: AuthenticationType
  nameWithType: WindowsIdentity.AuthenticationType
- uid: System.Security.Principal.WindowsIdentity.Claims*
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: Claims
  nameWithType: WindowsIdentity.Claims
- uid: System.Security.Principal.WindowsIdentity.Clone*
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: Clone
  nameWithType: WindowsIdentity.Clone
- uid: System.Security.Principal.WindowsIdentity.DeviceClaims*
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: DeviceClaims
  nameWithType: WindowsIdentity.DeviceClaims
- uid: System.Security.Principal.WindowsIdentity.Dispose*
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: Dispose
  nameWithType: WindowsIdentity.Dispose
- uid: System.Security.Principal.WindowsIdentity.GetAnonymous*
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: GetAnonymous
  nameWithType: WindowsIdentity.GetAnonymous
- uid: System.Security.Principal.WindowsIdentity.GetCurrent*
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: GetCurrent
  nameWithType: WindowsIdentity.GetCurrent
- uid: System.Security.Principal.WindowsIdentity.Groups*
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: Groups
  nameWithType: WindowsIdentity.Groups
- uid: System.Security.Principal.WindowsIdentity.Impersonate*
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: Impersonate
  nameWithType: WindowsIdentity.Impersonate
- uid: System.Security.Principal.WindowsIdentity.ImpersonationLevel*
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: ImpersonationLevel
  nameWithType: WindowsIdentity.ImpersonationLevel
- uid: System.Security.Principal.WindowsIdentity.IsAnonymous*
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: IsAnonymous
  nameWithType: WindowsIdentity.IsAnonymous
- uid: System.Security.Principal.WindowsIdentity.IsAuthenticated*
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: IsAuthenticated
  nameWithType: WindowsIdentity.IsAuthenticated
- uid: System.Security.Principal.WindowsIdentity.IsGuest*
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: IsGuest
  nameWithType: WindowsIdentity.IsGuest
- uid: System.Security.Principal.WindowsIdentity.IsSystem*
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: IsSystem
  nameWithType: WindowsIdentity.IsSystem
- uid: System.Security.Principal.WindowsIdentity.Name*
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: Name
  nameWithType: WindowsIdentity.Name
- uid: System.Security.Principal.WindowsIdentity.Owner*
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: Owner
  nameWithType: WindowsIdentity.Owner
- uid: System.Security.Principal.WindowsIdentity.RunImpersonated*
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: RunImpersonated
  nameWithType: WindowsIdentity.RunImpersonated
- uid: System.Security.Principal.WindowsIdentity.RunImpersonated<T>*
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: RunImpersonated<T>
  nameWithType: WindowsIdentity.RunImpersonated<T>
- uid: System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
  nameWithType: WindowsIdentity.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
- uid: System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: WindowsIdentity.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Security.Principal.WindowsIdentity.Token*
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: Token
  nameWithType: WindowsIdentity.Token
- uid: System.Security.Principal.WindowsIdentity.User*
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: User
  nameWithType: WindowsIdentity.User
- uid: System.Security.Principal.WindowsIdentity.UserClaims*
  parent: System.Security.Principal.WindowsIdentity
  isExternal: false
  name: UserClaims
  nameWithType: WindowsIdentity.UserClaims
