### YamlMime:ManagedReference
items:
- uid: System.Numerics.Vector3
  id: Vector3
  children:
  - System.Numerics.Vector3.#ctor(System.Single)
  - System.Numerics.Vector3.#ctor(System.Numerics.Vector2,System.Single)
  - System.Numerics.Vector3.#ctor(System.Single,System.Single,System.Single)
  - System.Numerics.Vector3.Abs(System.Numerics.Vector3)
  - System.Numerics.Vector3.Add(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.Clamp(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.CopyTo(System.Single[])
  - System.Numerics.Vector3.CopyTo(System.Single[],System.Int32)
  - System.Numerics.Vector3.Cross(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.Distance(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.DistanceSquared(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Single)
  - System.Numerics.Vector3.Dot(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.Equals(System.Numerics.Vector3)
  - System.Numerics.Vector3.Equals(System.Object)
  - System.Numerics.Vector3.GetHashCode
  - System.Numerics.Vector3.Length
  - System.Numerics.Vector3.LengthSquared
  - System.Numerics.Vector3.Lerp(System.Numerics.Vector3,System.Numerics.Vector3,System.Single)
  - System.Numerics.Vector3.Max(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.Min(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Single)
  - System.Numerics.Vector3.Multiply(System.Single,System.Numerics.Vector3)
  - System.Numerics.Vector3.Negate(System.Numerics.Vector3)
  - System.Numerics.Vector3.Normalize(System.Numerics.Vector3)
  - System.Numerics.Vector3.One
  - System.Numerics.Vector3.op_Addition(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Single)
  - System.Numerics.Vector3.op_Equality(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.op_Inequality(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Single)
  - System.Numerics.Vector3.op_Multiply(System.Single,System.Numerics.Vector3)
  - System.Numerics.Vector3.op_Subtraction(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.op_UnaryNegation(System.Numerics.Vector3)
  - System.Numerics.Vector3.Reflect(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.SquareRoot(System.Numerics.Vector3)
  - System.Numerics.Vector3.Subtract(System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Vector3.ToString
  - System.Numerics.Vector3.ToString(System.String)
  - System.Numerics.Vector3.ToString(System.String,System.IFormatProvider)
  - System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  - System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)
  - System.Numerics.Vector3.TransformNormal(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  - System.Numerics.Vector3.UnitX
  - System.Numerics.Vector3.UnitY
  - System.Numerics.Vector3.UnitZ
  - System.Numerics.Vector3.X
  - System.Numerics.Vector3.Y
  - System.Numerics.Vector3.Z
  - System.Numerics.Vector3.Zero
  langs:
  - csharp
  name: Vector3
  nameWithType: Vector3
  fullName: System.Numerics.Vector3
  type: Struct
  summary: "Representerer en vektor med tre enkel presisjon flyttall verdier."
  remarks: "Strukturen Vector3 gir støtte for maskinvareakselerasjon."
  syntax:
    content: 'public struct Vector3 : IEquatable<System.Numerics.Vector3>, IFormattable'
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Numerics.Vector3>
  - System.IFormattable
  platform:
  - net462
- uid: System.Numerics.Vector3.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Vector3(Single)
  nameWithType: Vector3.Vector3(Single)
  fullName: System.Numerics.Vector3.Vector3(Single)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Oppretter en ny <xref href=&quot;System.Numerics.Vector3&quot;> </xref> objektet med tre elementer ha samme verdi."
  syntax:
    content: public Vector3 (float value);
    parameters:
    - id: value
      type: System.Single
      description: "Verdien som skal tilordnes til alle tre elementer."
  overload: System.Numerics.Vector3.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.#ctor(System.Numerics.Vector2,System.Single)
  id: '#ctor(System.Numerics.Vector2,System.Single)'
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Vector3(Vector2,Single)
  nameWithType: Vector3.Vector3(Vector2,Single)
  fullName: System.Numerics.Vector3.Vector3(Vector2,Single)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Oppretter en ny <xref href=&quot;System.Numerics.Vector3&quot;> </xref> objektet fra den angitte <xref href=&quot;System.Numerics.Vector2&quot;> </xref> objektet og den angitte verdien."
  syntax:
    content: public Vector3 (System.Numerics.Vector2 value, float z);
    parameters:
    - id: value
      type: System.Numerics.Vector2
      description: "Vektoren med to elementer."
    - id: z
      type: System.Single
      description: "Ekstra verdien som skal tilordnes til det <xref href=&quot;System.Numerics.Vector3.Z&quot;> </xref> felt."
  overload: System.Numerics.Vector3.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.#ctor(System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single)'
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Vector3(Single,Single,Single)
  nameWithType: Vector3.Vector3(Single,Single,Single)
  fullName: System.Numerics.Vector3.Vector3(Single,Single,Single)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Oppretter en vektor med elementer som har de angitte verdiene."
  syntax:
    content: public Vector3 (float x, float y, float z);
    parameters:
    - id: x
      type: System.Single
      description: "Verdien som skal tilordnes til det <xref href=&quot;System.Numerics.Vector3.X&quot;> </xref> felt."
    - id: y
      type: System.Single
      description: "Verdien som skal tilordnes til det <xref href=&quot;System.Numerics.Vector3.Y&quot;> </xref> felt."
    - id: z
      type: System.Single
      description: "Verdien som skal tilordnes til det <xref href=&quot;System.Numerics.Vector3.Z&quot;> </xref> felt."
  overload: System.Numerics.Vector3.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Abs(System.Numerics.Vector3)
  id: Abs(System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Abs(Vector3)
  nameWithType: Vector3.Abs(Vector3)
  fullName: System.Numerics.Vector3.Abs(Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerer en vektor der elementer er absolutte verdier for hver angitte vektoren elementer."
  syntax:
    content: public static System.Numerics.Vector3 Abs (System.Numerics.Vector3 value);
    parameters:
    - id: value
      type: System.Numerics.Vector3
      description: "En vektor."
    return:
      type: System.Numerics.Vector3
      description: "Den absolutte verdi vektoren."
  overload: System.Numerics.Vector3.Abs*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Add(System.Numerics.Vector3,System.Numerics.Vector3)
  id: Add(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Add(Vector3,Vector3)
  nameWithType: Vector3.Add(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Add(Vector3,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Legger til to vektorene sammen."
  syntax:
    content: public static System.Numerics.Vector3 Add (System.Numerics.Vector3 left, System.Numerics.Vector3 right);
    parameters:
    - id: left
      type: System.Numerics.Vector3
      description: "Den første vektoren å legge til."
    - id: right
      type: System.Numerics.Vector3
      description: "Andre vektoren å legge til."
    return:
      type: System.Numerics.Vector3
      description: "Summerte vektoren."
  overload: System.Numerics.Vector3.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Clamp(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)
  id: Clamp(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Clamp(Vector3,Vector3,Vector3)
  nameWithType: Vector3.Clamp(Vector3,Vector3,Vector3)
  fullName: System.Numerics.Vector3.Clamp(Vector3,Vector3,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Begrenser en vektor mellom minimum og en maksimumsverdi."
  syntax:
    content: public static System.Numerics.Vector3 Clamp (System.Numerics.Vector3 value1, System.Numerics.Vector3 min, System.Numerics.Vector3 max);
    parameters:
    - id: value1
      type: System.Numerics.Vector3
      description: "Vektoren begrensning."
    - id: min
      type: System.Numerics.Vector3
      description: "Minimumsverdien."
    - id: max
      type: System.Numerics.Vector3
      description: "Maksimumsverdien."
    return:
      type: System.Numerics.Vector3
      description: "Begrensede vektoren."
  overload: System.Numerics.Vector3.Clamp*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.CopyTo(System.Single[])
  id: CopyTo(System.Single[])
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: CopyTo(Single[])
  nameWithType: Vector3.CopyTo(Single[])
  fullName: System.Numerics.Vector3.CopyTo(Single[])
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Kopier av elementene i vektoren til en angitt matrise."
  remarks: '`array` must have at least three elements. The method copies the vector''s elements starting at index 0.'
  syntax:
    content: public void CopyTo (float[] array);
    parameters:
    - id: array
      type: System.Single[]
      description: "Målmatrisen."
  overload: System.Numerics.Vector3.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Antallet elementer i den gjeldende forekomsten er større enn i matrisen."
  - type: System.RankException
    commentId: T:System.RankException
    description: "<code>array</code>er flerdimensjonal."
  platform:
  - net462
- uid: System.Numerics.Vector3.CopyTo(System.Single[],System.Int32)
  id: CopyTo(System.Single[],System.Int32)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: CopyTo(Single[],Int32)
  nameWithType: Vector3.CopyTo(Single[],Int32)
  fullName: System.Numerics.Vector3.CopyTo(Single[],Int32)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Kopier av elementene i vektoren til en angitt matrise som starter ved en angitt indeks posisjon."
  remarks: '`array`må ha et tilstrekkelig antall elementer som passer til tre vektorelementer. Med andre ord elementer `index`, `index` + 1, og `index` + 2 må finnes i `array`.'
  syntax:
    content: public void CopyTo (float[] array, int index);
    parameters:
    - id: array
      type: System.Single[]
      description: "Målmatrisen."
    - id: index
      type: System.Int32
      description: "Indeksen vil kopiere det første elementet i vektoren."
  overload: System.Numerics.Vector3.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Antallet elementer i den gjeldende forekomsten er større enn i matrisen."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>er mindre enn null.       - eller - <code>index</code> er større enn eller lik matrise."
  - type: System.RankException
    commentId: T:System.RankException
    description: "<code>array</code>er flerdimensjonal."
  platform:
  - net462
- uid: System.Numerics.Vector3.Cross(System.Numerics.Vector3,System.Numerics.Vector3)
  id: Cross(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Cross(Vector3,Vector3)
  nameWithType: Vector3.Cross(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Cross(Vector3,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Beregner Kryssproduktet for to vektorene."
  syntax:
    content: public static System.Numerics.Vector3 Cross (System.Numerics.Vector3 vector1, System.Numerics.Vector3 vector2);
    parameters:
    - id: vector1
      type: System.Numerics.Vector3
      description: "Den første vektoren."
    - id: vector2
      type: System.Numerics.Vector3
      description: "Andre vektoren."
    return:
      type: System.Numerics.Vector3
      description: "Kryssproduktet."
  overload: System.Numerics.Vector3.Cross*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Distance(System.Numerics.Vector3,System.Numerics.Vector3)
  id: Distance(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Distance(Vector3,Vector3)
  nameWithType: Vector3.Distance(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Distance(Vector3,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Beregner Euclidean avstanden mellom de to angitte punktene."
  syntax:
    content: public static float Distance (System.Numerics.Vector3 value1, System.Numerics.Vector3 value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector3
      description: "Det første punktet."
    - id: value2
      type: System.Numerics.Vector3
      description: "Det andre punktet."
    return:
      type: System.Single
      description: "Avstanden."
  overload: System.Numerics.Vector3.Distance*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.DistanceSquared(System.Numerics.Vector3,System.Numerics.Vector3)
  id: DistanceSquared(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: DistanceSquared(Vector3,Vector3)
  nameWithType: Vector3.DistanceSquared(Vector3,Vector3)
  fullName: System.Numerics.Vector3.DistanceSquared(Vector3,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerer viser hvordan Euclidean avstanden mellom to angitte punktene."
  syntax:
    content: public static float DistanceSquared (System.Numerics.Vector3 value1, System.Numerics.Vector3 value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector3
      description: "Det første punktet."
    - id: value2
      type: System.Numerics.Vector3
      description: "Det andre punktet."
    return:
      type: System.Single
      description: "Avstanden viser hvordan."
  overload: System.Numerics.Vector3.DistanceSquared*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Numerics.Vector3)
  id: Divide(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Divide(Vector3,Vector3)
  nameWithType: Vector3.Divide(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Divide(Vector3,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Dividerer den første vektoren med andre."
  syntax:
    content: public static System.Numerics.Vector3 Divide (System.Numerics.Vector3 left, System.Numerics.Vector3 right);
    parameters:
    - id: left
      type: System.Numerics.Vector3
      description: "Den første vektoren."
    - id: right
      type: System.Numerics.Vector3
      description: "Andre vektoren."
    return:
      type: System.Numerics.Vector3
      description: "Vektoren fra fordelingen."
  overload: System.Numerics.Vector3.Divide*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Single)
  id: Divide(System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Divide(Vector3,Single)
  nameWithType: Vector3.Divide(Vector3,Single)
  fullName: System.Numerics.Vector3.Divide(Vector3,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Dividerer den angitte vektoren med en angitt skalarverdi."
  syntax:
    content: public static System.Numerics.Vector3 Divide (System.Numerics.Vector3 left, float divisor);
    parameters:
    - id: left
      type: System.Numerics.Vector3
      description: "Vektoren."
    - id: divisor
      type: System.Single
      description: "Skalarverdi."
    return:
      type: System.Numerics.Vector3
      description: "Vektoren som er resultatet av fordelingen."
  overload: System.Numerics.Vector3.Divide*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Dot(System.Numerics.Vector3,System.Numerics.Vector3)
  id: Dot(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Dot(Vector3,Vector3)
  nameWithType: Vector3.Dot(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Dot(Vector3,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerer punktum produktet av to vektorene."
  syntax:
    content: public static float Dot (System.Numerics.Vector3 vector1, System.Numerics.Vector3 vector2);
    parameters:
    - id: vector1
      type: System.Numerics.Vector3
      description: "Den første vektoren."
    - id: vector2
      type: System.Numerics.Vector3
      description: "Andre vektoren."
    return:
      type: System.Single
      description: "Produktet punktum."
  overload: System.Numerics.Vector3.Dot*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Equals(System.Numerics.Vector3)
  id: Equals(System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Equals(Vector3)
  nameWithType: Vector3.Equals(Vector3)
  fullName: System.Numerics.Vector3.Equals(Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerer en verdi som angir om denne forekomsten og en annen vektor er like."
  remarks: "To vektorene er like hvis deres <xref:System.Numerics.Vector3>, <xref:System.Numerics.Vector3>, og <xref:System.Numerics.Vector3>elementer er like.</xref:System.Numerics.Vector3> </xref:System.Numerics.Vector3> </xref:System.Numerics.Vector3>"
  syntax:
    content: public bool Equals (System.Numerics.Vector3 other);
    parameters:
    - id: other
      type: System.Numerics.Vector3
      description: "Andre vektoren."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis de to vektorene er like. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Numerics.Vector3.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Vector3.Equals(Object)
  fullName: System.Numerics.Vector3.Equals(Object)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerer en verdi som angir om denne forekomsten og et angitt objekt er like."
  remarks: "Den gjeldende forekomsten og `obj` er like om `obj` er en <xref:System.Numerics.Vector3>objekt og de tilsvarende elementene er like.</xref:System.Numerics.Vector3>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Objektet som skal sammenlignes med den gjeldende forekomsten."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den gjeldende forekomsten og <code> obj </code> er lik; ellers, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> <xref uid=&quot;langword_csharp_&quot; name=&quot;&quot; href=&quot;&quot;> </xref>. If <code>obj</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, the method returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Vector3.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.GetHashCode
  id: GetHashCode
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Vector3.GetHashCode()
  fullName: System.Numerics.Vector3.GetHashCode()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerer hashkoden for denne forekomsten."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Hash-kode."
  overload: System.Numerics.Vector3.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Length
  id: Length
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Length()
  nameWithType: Vector3.Length()
  fullName: System.Numerics.Vector3.Length()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerer lengden på dette vektor-objektet."
  syntax:
    content: public float Length ();
    parameters: []
    return:
      type: System.Single
      description: "Den vektoren lengde."
  overload: System.Numerics.Vector3.Length*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.LengthSquared
  id: LengthSquared
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: LengthSquared()
  nameWithType: Vector3.LengthSquared()
  fullName: System.Numerics.Vector3.LengthSquared()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerer lengden på vektoren viser hvordan."
  remarks: "Denne operasjonen gir bedre ytelse enn et kall til den <xref:System.Numerics.Vector3.Length%2A>metoden.</xref:System.Numerics.Vector3.Length%2A>"
  syntax:
    content: public float LengthSquared ();
    parameters: []
    return:
      type: System.Single
      description: "Viser hvordan den vektoren lengde."
  overload: System.Numerics.Vector3.LengthSquared*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Lerp(System.Numerics.Vector3,System.Numerics.Vector3,System.Single)
  id: Lerp(System.Numerics.Vector3,System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Lerp(Vector3,Vector3,Single)
  nameWithType: Vector3.Lerp(Vector3,Vector3,Single)
  fullName: System.Numerics.Vector3.Lerp(Vector3,Vector3,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Utfører en Lineær interpolering mellom to vektorene basert på den angitte vektingen."
  syntax:
    content: public static System.Numerics.Vector3 Lerp (System.Numerics.Vector3 value1, System.Numerics.Vector3 value2, float amount);
    parameters:
    - id: value1
      type: System.Numerics.Vector3
      description: "Den første vektoren."
    - id: value2
      type: System.Numerics.Vector3
      description: "Andre vektoren."
    - id: amount
      type: System.Single
      description: "En verdi mellom 0 og 1 som angir tykkelsen på `value2`."
    return:
      type: System.Numerics.Vector3
      description: "Interpolert vektoren."
  overload: System.Numerics.Vector3.Lerp*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Max(System.Numerics.Vector3,System.Numerics.Vector3)
  id: Max(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Max(Vector3,Vector3)
  nameWithType: Vector3.Max(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Max(Vector3,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerer en vektor der elementer er maksimalt antallet hvert par med elementer i to angitte vektorene."
  syntax:
    content: public static System.Numerics.Vector3 Max (System.Numerics.Vector3 value1, System.Numerics.Vector3 value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector3
      description: "Den første vektoren."
    - id: value2
      type: System.Numerics.Vector3
      description: "Andre vektoren."
    return:
      type: System.Numerics.Vector3
      description: "Maksimert vektoren."
  overload: System.Numerics.Vector3.Max*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Min(System.Numerics.Vector3,System.Numerics.Vector3)
  id: Min(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Min(Vector3,Vector3)
  nameWithType: Vector3.Min(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Min(Vector3,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerer en vektor der elementer er minst av hvert par med elementer i to angitte vektorene."
  syntax:
    content: public static System.Numerics.Vector3 Min (System.Numerics.Vector3 value1, System.Numerics.Vector3 value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector3
      description: "Den første vektoren."
    - id: value2
      type: System.Numerics.Vector3
      description: "Andre vektoren."
    return:
      type: System.Numerics.Vector3
      description: "Minimert vektoren."
  overload: System.Numerics.Vector3.Min*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Numerics.Vector3)
  id: Multiply(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Multiply(Vector3,Vector3)
  nameWithType: Vector3.Multiply(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Multiply(Vector3,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Multipliserer to vektorene sammen."
  syntax:
    content: public static System.Numerics.Vector3 Multiply (System.Numerics.Vector3 left, System.Numerics.Vector3 right);
    parameters:
    - id: left
      type: System.Numerics.Vector3
      description: "Den første vektoren."
    - id: right
      type: System.Numerics.Vector3
      description: "Andre vektoren."
    return:
      type: System.Numerics.Vector3
      description: "Produktet vektoren."
  overload: System.Numerics.Vector3.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Single)
  id: Multiply(System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Multiply(Vector3,Single)
  nameWithType: Vector3.Multiply(Vector3,Single)
  fullName: System.Numerics.Vector3.Multiply(Vector3,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Multipliserer en vektor med en angitt skalar."
  syntax:
    content: public static System.Numerics.Vector3 Multiply (System.Numerics.Vector3 left, float right);
    parameters:
    - id: left
      type: System.Numerics.Vector3
      description: "Vektoren vil multiplisere."
    - id: right
      type: System.Single
      description: "Skalarverdi."
    return:
      type: System.Numerics.Vector3
      description: "Skalert vektoren."
  overload: System.Numerics.Vector3.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Multiply(System.Single,System.Numerics.Vector3)
  id: Multiply(System.Single,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Multiply(Single,Vector3)
  nameWithType: Vector3.Multiply(Single,Vector3)
  fullName: System.Numerics.Vector3.Multiply(Single,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Multipliserer en skalarverdi med en angitt vektor."
  syntax:
    content: public static System.Numerics.Vector3 Multiply (float left, System.Numerics.Vector3 right);
    parameters:
    - id: left
      type: System.Single
      description: "Skalert verdien."
    - id: right
      type: System.Numerics.Vector3
      description: "Vektoren."
    return:
      type: System.Numerics.Vector3
      description: "Skalert vektoren."
  overload: System.Numerics.Vector3.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Negate(System.Numerics.Vector3)
  id: Negate(System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Negate(Vector3)
  nameWithType: Vector3.Negate(Vector3)
  fullName: System.Numerics.Vector3.Negate(Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Opphever en angitt vektor."
  syntax:
    content: public static System.Numerics.Vector3 Negate (System.Numerics.Vector3 value);
    parameters:
    - id: value
      type: System.Numerics.Vector3
      description: "Vektoren til negere."
    return:
      type: System.Numerics.Vector3
      description: "Negative vektoren."
  overload: System.Numerics.Vector3.Negate*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Normalize(System.Numerics.Vector3)
  id: Normalize(System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Normalize(Vector3)
  nameWithType: Vector3.Normalize(Vector3)
  fullName: System.Numerics.Vector3.Normalize(Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerer en vektor med samme retning som angitt vektoren, men med en lengde på én."
  syntax:
    content: public static System.Numerics.Vector3 Normalize (System.Numerics.Vector3 value);
    parameters:
    - id: value
      type: System.Numerics.Vector3
      description: "Vektoren skal normaliseres."
    return:
      type: System.Numerics.Vector3
      description: "Normalisert vektoren."
  overload: System.Numerics.Vector3.Normalize*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.One
  id: One
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: One
  nameWithType: Vector3.One
  fullName: System.Numerics.Vector3.One
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Henter en vektor med 3 elementer er lik én."
  syntax:
    content: public static System.Numerics.Vector3 One { get; }
    return:
      type: System.Numerics.Vector3
      description: "En vektor med tre elementer er lik én (det vil si returneres vektoren `(1,1,1)`."
  overload: System.Numerics.Vector3.One*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.op_Addition(System.Numerics.Vector3,System.Numerics.Vector3)
  id: op_Addition(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: op_Addition(Vector3,Vector3)
  nameWithType: Vector3.op_Addition(Vector3,Vector3)
  fullName: System.Numerics.Vector3.op_Addition(Vector3,Vector3)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Legger til to vektorene sammen."
  remarks: "Metoden tillegg definerer tillegg operasjonen for <xref:System.Numerics.Vector3>objekter.</xref:System.Numerics.Vector3>"
  syntax:
    content: public static System.Numerics.Vector3 op_Addition (System.Numerics.Vector3 left, System.Numerics.Vector3 right);
    parameters:
    - id: left
      type: System.Numerics.Vector3
      description: "Den første vektoren å legge til."
    - id: right
      type: System.Numerics.Vector3
      description: "Andre vektoren å legge til."
    return:
      type: System.Numerics.Vector3
      description: "Summerte vektoren."
  overload: System.Numerics.Vector3.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Numerics.Vector3)
  id: op_Division(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: op_Division(Vector3,Vector3)
  nameWithType: Vector3.op_Division(Vector3,Vector3)
  fullName: System.Numerics.Vector3.op_Division(Vector3,Vector3)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Dividerer den første vektoren med andre."
  remarks: "Metoden divisjonen definerer divisjonen operasjonen for <xref:System.Numerics.Vector3>objekter.</xref:System.Numerics.Vector3>"
  syntax:
    content: public static System.Numerics.Vector3 op_Division (System.Numerics.Vector3 left, System.Numerics.Vector3 right);
    parameters:
    - id: left
      type: System.Numerics.Vector3
      description: "Den første vektoren."
    - id: right
      type: System.Numerics.Vector3
      description: "Andre vektoren."
    return:
      type: System.Numerics.Vector3
      description: "Vektoren som er resultatet av å dele <code> left </code> av <code> right </code>."
  overload: System.Numerics.Vector3.op_Division*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Single)
  id: op_Division(System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: op_Division(Vector3,Single)
  nameWithType: Vector3.op_Division(Vector3,Single)
  fullName: System.Numerics.Vector3.op_Division(Vector3,Single)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Dividerer den angitte vektoren med en angitt skalarverdi."
  remarks: "Metoden divisjonen definerer divisjonen operasjonen for <xref:System.Numerics.Vector3>objekter.</xref:System.Numerics.Vector3>"
  syntax:
    content: public static System.Numerics.Vector3 op_Division (System.Numerics.Vector3 value1, float value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector3
      description: "Vektoren."
    - id: value2
      type: System.Single
      description: "Skalarverdi."
    return:
      type: System.Numerics.Vector3
      description: "Resultatet av fordelingen."
  overload: System.Numerics.Vector3.op_Division*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.op_Equality(System.Numerics.Vector3,System.Numerics.Vector3)
  id: op_Equality(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: op_Equality(Vector3,Vector3)
  nameWithType: Vector3.op_Equality(Vector3,Vector3)
  fullName: System.Numerics.Vector3.op_Equality(Vector3,Vector3)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerer en verdi som angir om hvert par med elementer i to angitte vektorene er lik."
  remarks: "To <xref:System.Numerics.Vector3>objekter er like Hvis hvert element i `left` er lik det tilsvarende elementet i `right`.</xref:System.Numerics.Vector3>"
  syntax:
    content: public static bool op_Equality (System.Numerics.Vector3 left, System.Numerics.Vector3 right);
    parameters:
    - id: left
      type: System.Numerics.Vector3
      description: "Den første vektoren skal sammenlignes."
    - id: right
      type: System.Numerics.Vector3
      description: "Andre vektoren skal sammenlignes."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Vector3.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.op_Inequality(System.Numerics.Vector3,System.Numerics.Vector3)
  id: op_Inequality(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: op_Inequality(Vector3,Vector3)
  nameWithType: Vector3.op_Inequality(Vector3,Vector3)
  fullName: System.Numerics.Vector3.op_Inequality(Vector3,Vector3)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerer en verdi som angir om to angitte vektorene er like."
  syntax:
    content: public static bool op_Inequality (System.Numerics.Vector3 left, System.Numerics.Vector3 right);
    parameters:
    - id: left
      type: System.Numerics.Vector3
      description: "Den første vektoren skal sammenlignes."
    - id: right
      type: System.Numerics.Vector3
      description: "Andre vektoren skal sammenlignes."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Vector3.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Numerics.Vector3)
  id: op_Multiply(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: op_Multiply(Vector3,Vector3)
  nameWithType: Vector3.op_Multiply(Vector3,Vector3)
  fullName: System.Numerics.Vector3.op_Multiply(Vector3,Vector3)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Multipliserer to vektorene sammen."
  remarks: "Den multiplikasjon metoden definerer Multiplikasjonsoperasjonen for <xref:System.Numerics.Vector3>objekter.</xref:System.Numerics.Vector3>"
  syntax:
    content: public static System.Numerics.Vector3 op_Multiply (System.Numerics.Vector3 left, System.Numerics.Vector3 right);
    parameters:
    - id: left
      type: System.Numerics.Vector3
      description: "Den første vektoren."
    - id: right
      type: System.Numerics.Vector3
      description: "Andre vektoren."
    return:
      type: System.Numerics.Vector3
      description: "Produktet vektoren."
  overload: System.Numerics.Vector3.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Single)
  id: op_Multiply(System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: op_Multiply(Vector3,Single)
  nameWithType: Vector3.op_Multiply(Vector3,Single)
  fullName: System.Numerics.Vector3.op_Multiply(Vector3,Single)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Multipler angitte vektoren av den angitte skalarverdi."
  remarks: "Den multiplikasjon metoden definerer Multiplikasjonsoperasjonen for <xref:System.Numerics.Vector3>objekter.</xref:System.Numerics.Vector3>"
  syntax:
    content: public static System.Numerics.Vector3 op_Multiply (System.Numerics.Vector3 left, float right);
    parameters:
    - id: left
      type: System.Numerics.Vector3
      description: "Vektoren."
    - id: right
      type: System.Single
      description: "Skalarverdi."
    return:
      type: System.Numerics.Vector3
      description: "Skalert vektoren."
  overload: System.Numerics.Vector3.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.op_Multiply(System.Single,System.Numerics.Vector3)
  id: op_Multiply(System.Single,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: op_Multiply(Single,Vector3)
  nameWithType: Vector3.op_Multiply(Single,Vector3)
  fullName: System.Numerics.Vector3.op_Multiply(Single,Vector3)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Multipler skalare verdien av angitte vektoren."
  remarks: "Den multiplikasjon metoden definerer Multiplikasjonsoperasjonen for <xref:System.Numerics.Vector3>objekter.</xref:System.Numerics.Vector3>"
  syntax:
    content: public static System.Numerics.Vector3 op_Multiply (float left, System.Numerics.Vector3 right);
    parameters:
    - id: left
      type: System.Single
      description: "Vektoren."
    - id: right
      type: System.Numerics.Vector3
      description: "Skalarverdi."
    return:
      type: System.Numerics.Vector3
      description: "Skalert vektoren."
  overload: System.Numerics.Vector3.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.op_Subtraction(System.Numerics.Vector3,System.Numerics.Vector3)
  id: op_Subtraction(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: op_Subtraction(Vector3,Vector3)
  nameWithType: Vector3.op_Subtraction(Vector3,Vector3)
  fullName: System.Numerics.Vector3.op_Subtraction(Vector3,Vector3)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Trekker andre vektoren fra først."
  remarks: "Metoden subtraksjon definerer subtraksjon operasjonen for <xref:System.Numerics.Vector3>objekter.</xref:System.Numerics.Vector3>"
  syntax:
    content: public static System.Numerics.Vector3 op_Subtraction (System.Numerics.Vector3 left, System.Numerics.Vector3 right);
    parameters:
    - id: left
      type: System.Numerics.Vector3
      description: "Den første vektoren."
    - id: right
      type: System.Numerics.Vector3
      description: "Andre vektoren."
    return:
      type: System.Numerics.Vector3
      description: "Vektoren som er resultatet av å trekke <code> right </code> fra <code> left </code>."
  overload: System.Numerics.Vector3.op_Subtraction*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.op_UnaryNegation(System.Numerics.Vector3)
  id: op_UnaryNegation(System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: op_UnaryNegation(Vector3)
  nameWithType: Vector3.op_UnaryNegation(Vector3)
  fullName: System.Numerics.Vector3.op_UnaryNegation(Vector3)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Opphever angitte vektoren."
  remarks: "Metoden UnaryNegation definerer negering monooperasjon for <xref:System.Numerics.Vector3>objekter.</xref:System.Numerics.Vector3>"
  syntax:
    content: public static System.Numerics.Vector3 op_UnaryNegation (System.Numerics.Vector3 value);
    parameters:
    - id: value
      type: System.Numerics.Vector3
      description: "Vektoren til negere."
    return:
      type: System.Numerics.Vector3
      description: "Negative vektoren."
  overload: System.Numerics.Vector3.op_UnaryNegation*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Reflect(System.Numerics.Vector3,System.Numerics.Vector3)
  id: Reflect(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Reflect(Vector3,Vector3)
  nameWithType: Vector3.Reflect(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Reflect(Vector3,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerer gjenspeilingen av en vektor av en overflate som har den angitte vanlige."
  syntax:
    content: public static System.Numerics.Vector3 Reflect (System.Numerics.Vector3 vector, System.Numerics.Vector3 normal);
    parameters:
    - id: vector
      type: System.Numerics.Vector3
      description: "Kilde-vektoren."
    - id: normal
      type: System.Numerics.Vector3
      description: "Vanlige overflaten som vises av."
    return:
      type: System.Numerics.Vector3
      description: "Gjenspeilt vektoren."
  overload: System.Numerics.Vector3.Reflect*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.SquareRoot(System.Numerics.Vector3)
  id: SquareRoot(System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: SquareRoot(Vector3)
  nameWithType: Vector3.SquareRoot(Vector3)
  fullName: System.Numerics.Vector3.SquareRoot(Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerer en vektor der elementer er kvadratroten for hvert av en angitt vektor elementene."
  syntax:
    content: public static System.Numerics.Vector3 SquareRoot (System.Numerics.Vector3 value);
    parameters:
    - id: value
      type: System.Numerics.Vector3
      description: "En vektor."
    return:
      type: System.Numerics.Vector3
      description: "Vektoren kvadratroten av."
  overload: System.Numerics.Vector3.SquareRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Subtract(System.Numerics.Vector3,System.Numerics.Vector3)
  id: Subtract(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Subtract(Vector3,Vector3)
  nameWithType: Vector3.Subtract(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Subtract(Vector3,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Trekker andre vektoren fra først."
  syntax:
    content: public static System.Numerics.Vector3 Subtract (System.Numerics.Vector3 left, System.Numerics.Vector3 right);
    parameters:
    - id: left
      type: System.Numerics.Vector3
      description: "Den første vektoren."
    - id: right
      type: System.Numerics.Vector3
      description: "Andre vektoren."
    return:
      type: System.Numerics.Vector3
      description: "Forskjellen vektoren."
  overload: System.Numerics.Vector3.Subtract*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.ToString
  id: ToString
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: ToString()
  nameWithType: Vector3.ToString()
  fullName: System.Numerics.Vector3.ToString()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerer strengrepresentasjon av gjeldende forekomst ved hjelp av standardformatering."
  remarks: "Denne metoden returnerer en streng der hvert element i vektoren er formatert med strengen &quot;G&quot; formatet (standard) og formatering konvensjoner på gjeldende tråd kultur. Den &quot;\\<&quot; og &quot;>&quot; tegn brukes til å starte og slutte strengen, og den gjeldende kulturen <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>egenskapen etterfulgt av et mellomrom brukes til å skille hvert element.</xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Strengrepresentasjon av den gjeldende forekomsten."
  overload: System.Numerics.Vector3.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.ToString(System.String)
  id: ToString(System.String)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: ToString(String)
  nameWithType: Vector3.ToString(String)
  fullName: System.Numerics.Vector3.ToString(String)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerer strengrepresentasjon av gjeldende forekomst med angitt formatstreng til å formatere enkeltelementer."
  remarks: "Denne metoden returnerer en streng der hvert element i vektoren er formatert med `format` og den gjeldende kulturen er formatering konvensjoner. Den &quot;\\<&quot; og &quot;>&quot; tegn brukes til å starte og slutte strengen, og den gjeldende kulturen <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>egenskapen etterfulgt av et mellomrom brukes til å skille hvert element.</xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>"
  syntax:
    content: public string ToString (string format);
    parameters:
    - id: format
      type: System.String
      description: "En [standard](~/add/includes/ajax-current-ext-md.md) eller [egendefinert numerisk formatstreng](~/add/includes/ajax-current-ext-md.md) som definerer formatet i enkeltelementer."
    return:
      type: System.String
      description: "Strengrepresentasjon av den gjeldende forekomsten."
  overload: System.Numerics.Vector3.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: ToString(String,IFormatProvider)
  nameWithType: Vector3.ToString(String,IFormatProvider)
  fullName: System.Numerics.Vector3.ToString(String,IFormatProvider)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerer strengrepresentasjon av gjeldende forekomst med angitt formatstreng til å formatere enkeltelementer og angitt format-leverandøren for å definere kultur-formatering."
  remarks: "Denne metoden returnerer en streng der hvert element i vektoren er formatert med `format` og `formatProvider`. Den &quot;\\<&quot; og &quot;>&quot; tegn brukes til å starte og slutte strengen og format-leverandøren <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>etterfulgt av et mellomrom brukes til å skille hvert element.</xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>"
  syntax:
    content: public string ToString (string format, IFormatProvider formatProvider);
    parameters:
    - id: format
      type: System.String
      description: "En [standard](~/add/includes/ajax-current-ext-md.md) eller [egendefinert numerisk formatstreng](~/add/includes/ajax-current-ext-md.md) som definerer formatet i enkeltelementer."
    - id: formatProvider
      type: System.IFormatProvider
      description: "En format leverandør som inneholder informasjon om kulturen-spesifikke-formatering."
    return:
      type: System.String
      description: "Strengrepresentasjon av den gjeldende forekomsten."
  overload: System.Numerics.Vector3.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  id: Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Transform(Vector3,Matrix4x4)
  nameWithType: Vector3.Transform(Vector3,Matrix4x4)
  fullName: System.Numerics.Vector3.Transform(Vector3,Matrix4x4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Transformerer en vektor av en angitt 4 x 4-matrise."
  syntax:
    content: public static System.Numerics.Vector3 Transform (System.Numerics.Vector3 position, System.Numerics.Matrix4x4 matrix);
    parameters:
    - id: position
      type: System.Numerics.Vector3
      description: "Vektoren til transformeringen."
    - id: matrix
      type: System.Numerics.Matrix4x4
      description: "Matrisen transformering."
    return:
      type: System.Numerics.Vector3
      description: "Transformert vektoren."
  overload: System.Numerics.Vector3.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)
  id: Transform(System.Numerics.Vector3,System.Numerics.Quaternion)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Transform(Vector3,Quaternion)
  nameWithType: Vector3.Transform(Vector3,Quaternion)
  fullName: System.Numerics.Vector3.Transform(Vector3,Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Transformerer en vektor av den angitte Quaternion rotasjonsverdien."
  syntax:
    content: public static System.Numerics.Vector3 Transform (System.Numerics.Vector3 value, System.Numerics.Quaternion rotation);
    parameters:
    - id: value
      type: System.Numerics.Vector3
      description: "Vektoren skal roteres."
    - id: rotation
      type: System.Numerics.Quaternion
      description: "Rotasjon for å bruke."
    return:
      type: System.Numerics.Vector3
      description: "Transformert vektoren."
  overload: System.Numerics.Vector3.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.TransformNormal(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  id: TransformNormal(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: TransformNormal(Vector3,Matrix4x4)
  nameWithType: Vector3.TransformNormal(Vector3,Matrix4x4)
  fullName: System.Numerics.Vector3.TransformNormal(Vector3,Matrix4x4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Transformerer en vektor normal av angitte 4 x 4 matrisen."
  syntax:
    content: public static System.Numerics.Vector3 TransformNormal (System.Numerics.Vector3 normal, System.Numerics.Matrix4x4 matrix);
    parameters:
    - id: normal
      type: System.Numerics.Vector3
      description: "Kilde-vektoren."
    - id: matrix
      type: System.Numerics.Matrix4x4
      description: "Matrisen."
    return:
      type: System.Numerics.Vector3
      description: "Transformert vektoren."
  overload: System.Numerics.Vector3.TransformNormal*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.UnitX
  id: UnitX
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: UnitX
  nameWithType: Vector3.UnitX
  fullName: System.Numerics.Vector3.UnitX
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Henter vektoren (1,0,0)."
  syntax:
    content: public static System.Numerics.Vector3 UnitX { get; }
    return:
      type: System.Numerics.Vector3
      description: "Vektoren `(1,0,0)`."
  overload: System.Numerics.Vector3.UnitX*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.UnitY
  id: UnitY
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: UnitY
  nameWithType: Vector3.UnitY
  fullName: System.Numerics.Vector3.UnitY
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Henter vektoren (0,1,0)."
  syntax:
    content: public static System.Numerics.Vector3 UnitY { get; }
    return:
      type: System.Numerics.Vector3
      description: "Vektoren `(0,1,0)`.."
  overload: System.Numerics.Vector3.UnitY*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.UnitZ
  id: UnitZ
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: UnitZ
  nameWithType: Vector3.UnitZ
  fullName: System.Numerics.Vector3.UnitZ
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Henter vektoren (0,0,1)."
  syntax:
    content: public static System.Numerics.Vector3 UnitZ { get; }
    return:
      type: System.Numerics.Vector3
      description: "Vektoren `(0,0,1)`."
  overload: System.Numerics.Vector3.UnitZ*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.X
  id: X
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: X
  nameWithType: Vector3.X
  fullName: System.Numerics.Vector3.X
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "X-komponenten for vektoren."
  syntax:
    content: public float X;
    return:
      type: System.Single
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Y
  id: Y
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Y
  nameWithType: Vector3.Y
  fullName: System.Numerics.Vector3.Y
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Y-komponenten for vektoren."
  syntax:
    content: public float Y;
    return:
      type: System.Single
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Z
  id: Z
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Z
  nameWithType: Vector3.Z
  fullName: System.Numerics.Vector3.Z
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Z-komponenten for vektoren."
  syntax:
    content: public float Z;
    return:
      type: System.Single
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector3.Zero
  id: Zero
  parent: System.Numerics.Vector3
  langs:
  - csharp
  name: Zero
  nameWithType: Vector3.Zero
  fullName: System.Numerics.Vector3.Zero
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Henter en vektor med 3 elementer er lik null."
  syntax:
    content: public static System.Numerics.Vector3 Zero { get; }
    return:
      type: System.Numerics.Vector3
      description: "En vektor med tre elementer er lik null (det vil si returneres vektoren `(0,0,0)`."
  overload: System.Numerics.Vector3.Zero*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.RankException
  isExternal: true
  name: System.RankException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Numerics.Vector3.#ctor(System.Single)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Vector3(Single)
  nameWithType: Vector3.Vector3(Single)
  fullName: System.Numerics.Vector3.Vector3(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Numerics.Vector3.#ctor(System.Numerics.Vector2,System.Single)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Vector3(Vector2,Single)
  nameWithType: Vector3.Vector3(Vector2,Single)
  fullName: System.Numerics.Vector3.Vector3(Vector2,Single)
- uid: System.Numerics.Vector2
  parent: System.Numerics
  isExternal: false
  name: Vector2
  nameWithType: Vector2
  fullName: System.Numerics.Vector2
- uid: System.Numerics.Vector3.#ctor(System.Single,System.Single,System.Single)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Vector3(Single,Single,Single)
  nameWithType: Vector3.Vector3(Single,Single,Single)
  fullName: System.Numerics.Vector3.Vector3(Single,Single,Single)
- uid: System.Numerics.Vector3.Abs(System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Abs(Vector3)
  nameWithType: Vector3.Abs(Vector3)
  fullName: System.Numerics.Vector3.Abs(Vector3)
- uid: System.Numerics.Vector3
  parent: System.Numerics
  isExternal: false
  name: Vector3
  nameWithType: Vector3
  fullName: System.Numerics.Vector3
- uid: System.Numerics.Vector3.Add(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Add(Vector3,Vector3)
  nameWithType: Vector3.Add(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Add(Vector3,Vector3)
- uid: System.Numerics.Vector3.Clamp(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Clamp(Vector3,Vector3,Vector3)
  nameWithType: Vector3.Clamp(Vector3,Vector3,Vector3)
  fullName: System.Numerics.Vector3.Clamp(Vector3,Vector3,Vector3)
- uid: System.Numerics.Vector3.CopyTo(System.Single[])
  parent: System.Numerics.Vector3
  isExternal: false
  name: CopyTo(Single[])
  nameWithType: Vector3.CopyTo(Single[])
  fullName: System.Numerics.Vector3.CopyTo(Single[])
- uid: System.Single[]
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single[]
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: Single[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Numerics.Vector3.CopyTo(System.Single[],System.Int32)
  parent: System.Numerics.Vector3
  isExternal: false
  name: CopyTo(Single[],Int32)
  nameWithType: Vector3.CopyTo(Single[],Int32)
  fullName: System.Numerics.Vector3.CopyTo(Single[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Numerics.Vector3.Cross(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Cross(Vector3,Vector3)
  nameWithType: Vector3.Cross(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Cross(Vector3,Vector3)
- uid: System.Numerics.Vector3.Distance(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Distance(Vector3,Vector3)
  nameWithType: Vector3.Distance(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Distance(Vector3,Vector3)
- uid: System.Numerics.Vector3.DistanceSquared(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: DistanceSquared(Vector3,Vector3)
  nameWithType: Vector3.DistanceSquared(Vector3,Vector3)
  fullName: System.Numerics.Vector3.DistanceSquared(Vector3,Vector3)
- uid: System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Divide(Vector3,Vector3)
  nameWithType: Vector3.Divide(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Divide(Vector3,Vector3)
- uid: System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Divide(Vector3,Single)
  nameWithType: Vector3.Divide(Vector3,Single)
  fullName: System.Numerics.Vector3.Divide(Vector3,Single)
- uid: System.Numerics.Vector3.Dot(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Dot(Vector3,Vector3)
  nameWithType: Vector3.Dot(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Dot(Vector3,Vector3)
- uid: System.Numerics.Vector3.Equals(System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Equals(Vector3)
  nameWithType: Vector3.Equals(Vector3)
  fullName: System.Numerics.Vector3.Equals(Vector3)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Numerics.Vector3.Equals(System.Object)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Equals(Object)
  nameWithType: Vector3.Equals(Object)
  fullName: System.Numerics.Vector3.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Numerics.Vector3.GetHashCode
  parent: System.Numerics.Vector3
  isExternal: false
  name: GetHashCode()
  nameWithType: Vector3.GetHashCode()
  fullName: System.Numerics.Vector3.GetHashCode()
- uid: System.Numerics.Vector3.Length
  parent: System.Numerics.Vector3
  isExternal: false
  name: Length()
  nameWithType: Vector3.Length()
  fullName: System.Numerics.Vector3.Length()
- uid: System.Numerics.Vector3.LengthSquared
  parent: System.Numerics.Vector3
  isExternal: false
  name: LengthSquared()
  nameWithType: Vector3.LengthSquared()
  fullName: System.Numerics.Vector3.LengthSquared()
- uid: System.Numerics.Vector3.Lerp(System.Numerics.Vector3,System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Lerp(Vector3,Vector3,Single)
  nameWithType: Vector3.Lerp(Vector3,Vector3,Single)
  fullName: System.Numerics.Vector3.Lerp(Vector3,Vector3,Single)
- uid: System.Numerics.Vector3.Max(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Max(Vector3,Vector3)
  nameWithType: Vector3.Max(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Max(Vector3,Vector3)
- uid: System.Numerics.Vector3.Min(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Min(Vector3,Vector3)
  nameWithType: Vector3.Min(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Min(Vector3,Vector3)
- uid: System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Multiply(Vector3,Vector3)
  nameWithType: Vector3.Multiply(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Multiply(Vector3,Vector3)
- uid: System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Multiply(Vector3,Single)
  nameWithType: Vector3.Multiply(Vector3,Single)
  fullName: System.Numerics.Vector3.Multiply(Vector3,Single)
- uid: System.Numerics.Vector3.Multiply(System.Single,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Multiply(Single,Vector3)
  nameWithType: Vector3.Multiply(Single,Vector3)
  fullName: System.Numerics.Vector3.Multiply(Single,Vector3)
- uid: System.Numerics.Vector3.Negate(System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Negate(Vector3)
  nameWithType: Vector3.Negate(Vector3)
  fullName: System.Numerics.Vector3.Negate(Vector3)
- uid: System.Numerics.Vector3.Normalize(System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Normalize(Vector3)
  nameWithType: Vector3.Normalize(Vector3)
  fullName: System.Numerics.Vector3.Normalize(Vector3)
- uid: System.Numerics.Vector3.One
  parent: System.Numerics.Vector3
  isExternal: false
  name: One
  nameWithType: Vector3.One
  fullName: System.Numerics.Vector3.One
- uid: System.Numerics.Vector3.op_Addition(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Addition(Vector3,Vector3)
  nameWithType: Vector3.op_Addition(Vector3,Vector3)
  fullName: System.Numerics.Vector3.op_Addition(Vector3,Vector3)
- uid: System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Division(Vector3,Vector3)
  nameWithType: Vector3.op_Division(Vector3,Vector3)
  fullName: System.Numerics.Vector3.op_Division(Vector3,Vector3)
- uid: System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Division(Vector3,Single)
  nameWithType: Vector3.op_Division(Vector3,Single)
  fullName: System.Numerics.Vector3.op_Division(Vector3,Single)
- uid: System.Numerics.Vector3.op_Equality(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Equality(Vector3,Vector3)
  nameWithType: Vector3.op_Equality(Vector3,Vector3)
  fullName: System.Numerics.Vector3.op_Equality(Vector3,Vector3)
- uid: System.Numerics.Vector3.op_Inequality(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Inequality(Vector3,Vector3)
  nameWithType: Vector3.op_Inequality(Vector3,Vector3)
  fullName: System.Numerics.Vector3.op_Inequality(Vector3,Vector3)
- uid: System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Multiply(Vector3,Vector3)
  nameWithType: Vector3.op_Multiply(Vector3,Vector3)
  fullName: System.Numerics.Vector3.op_Multiply(Vector3,Vector3)
- uid: System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Multiply(Vector3,Single)
  nameWithType: Vector3.op_Multiply(Vector3,Single)
  fullName: System.Numerics.Vector3.op_Multiply(Vector3,Single)
- uid: System.Numerics.Vector3.op_Multiply(System.Single,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Multiply(Single,Vector3)
  nameWithType: Vector3.op_Multiply(Single,Vector3)
  fullName: System.Numerics.Vector3.op_Multiply(Single,Vector3)
- uid: System.Numerics.Vector3.op_Subtraction(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Subtraction(Vector3,Vector3)
  nameWithType: Vector3.op_Subtraction(Vector3,Vector3)
  fullName: System.Numerics.Vector3.op_Subtraction(Vector3,Vector3)
- uid: System.Numerics.Vector3.op_UnaryNegation(System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_UnaryNegation(Vector3)
  nameWithType: Vector3.op_UnaryNegation(Vector3)
  fullName: System.Numerics.Vector3.op_UnaryNegation(Vector3)
- uid: System.Numerics.Vector3.Reflect(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Reflect(Vector3,Vector3)
  nameWithType: Vector3.Reflect(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Reflect(Vector3,Vector3)
- uid: System.Numerics.Vector3.SquareRoot(System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: SquareRoot(Vector3)
  nameWithType: Vector3.SquareRoot(Vector3)
  fullName: System.Numerics.Vector3.SquareRoot(Vector3)
- uid: System.Numerics.Vector3.Subtract(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Subtract(Vector3,Vector3)
  nameWithType: Vector3.Subtract(Vector3,Vector3)
  fullName: System.Numerics.Vector3.Subtract(Vector3,Vector3)
- uid: System.Numerics.Vector3.ToString
  parent: System.Numerics.Vector3
  isExternal: false
  name: ToString()
  nameWithType: Vector3.ToString()
  fullName: System.Numerics.Vector3.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Numerics.Vector3.ToString(System.String)
  parent: System.Numerics.Vector3
  isExternal: false
  name: ToString(String)
  nameWithType: Vector3.ToString(String)
  fullName: System.Numerics.Vector3.ToString(String)
- uid: System.Numerics.Vector3.ToString(System.String,System.IFormatProvider)
  parent: System.Numerics.Vector3
  isExternal: false
  name: ToString(String,IFormatProvider)
  nameWithType: Vector3.ToString(String,IFormatProvider)
  fullName: System.Numerics.Vector3.ToString(String,IFormatProvider)
- uid: System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Transform(Vector3,Matrix4x4)
  nameWithType: Vector3.Transform(Vector3,Matrix4x4)
  fullName: System.Numerics.Vector3.Transform(Vector3,Matrix4x4)
- uid: System.Numerics.Matrix4x4
  parent: System.Numerics
  isExternal: false
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: System.Numerics.Matrix4x4
- uid: System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)
  parent: System.Numerics.Vector3
  isExternal: false
  name: Transform(Vector3,Quaternion)
  nameWithType: Vector3.Transform(Vector3,Quaternion)
  fullName: System.Numerics.Vector3.Transform(Vector3,Quaternion)
- uid: System.Numerics.Quaternion
  parent: System.Numerics
  isExternal: false
  name: Quaternion
  nameWithType: Quaternion
  fullName: System.Numerics.Quaternion
- uid: System.Numerics.Vector3.TransformNormal(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector3
  isExternal: false
  name: TransformNormal(Vector3,Matrix4x4)
  nameWithType: Vector3.TransformNormal(Vector3,Matrix4x4)
  fullName: System.Numerics.Vector3.TransformNormal(Vector3,Matrix4x4)
- uid: System.Numerics.Vector3.UnitX
  parent: System.Numerics.Vector3
  isExternal: false
  name: UnitX
  nameWithType: Vector3.UnitX
  fullName: System.Numerics.Vector3.UnitX
- uid: System.Numerics.Vector3.UnitY
  parent: System.Numerics.Vector3
  isExternal: false
  name: UnitY
  nameWithType: Vector3.UnitY
  fullName: System.Numerics.Vector3.UnitY
- uid: System.Numerics.Vector3.UnitZ
  parent: System.Numerics.Vector3
  isExternal: false
  name: UnitZ
  nameWithType: Vector3.UnitZ
  fullName: System.Numerics.Vector3.UnitZ
- uid: System.Numerics.Vector3.X
  parent: System.Numerics.Vector3
  isExternal: false
  name: X
  nameWithType: Vector3.X
  fullName: System.Numerics.Vector3.X
- uid: System.Numerics.Vector3.Y
  parent: System.Numerics.Vector3
  isExternal: false
  name: Y
  nameWithType: Vector3.Y
  fullName: System.Numerics.Vector3.Y
- uid: System.Numerics.Vector3.Z
  parent: System.Numerics.Vector3
  isExternal: false
  name: Z
  nameWithType: Vector3.Z
  fullName: System.Numerics.Vector3.Z
- uid: System.Numerics.Vector3.Zero
  parent: System.Numerics.Vector3
  isExternal: false
  name: Zero
  nameWithType: Vector3.Zero
  fullName: System.Numerics.Vector3.Zero
- uid: System.Numerics.Vector3.#ctor*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Vector3
  nameWithType: Vector3.Vector3
- uid: System.Numerics.Vector3.Abs*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Abs
  nameWithType: Vector3.Abs
- uid: System.Numerics.Vector3.Add*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Add
  nameWithType: Vector3.Add
- uid: System.Numerics.Vector3.Clamp*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Clamp
  nameWithType: Vector3.Clamp
- uid: System.Numerics.Vector3.CopyTo*
  parent: System.Numerics.Vector3
  isExternal: false
  name: CopyTo
  nameWithType: Vector3.CopyTo
- uid: System.Numerics.Vector3.Cross*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Cross
  nameWithType: Vector3.Cross
- uid: System.Numerics.Vector3.Distance*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Distance
  nameWithType: Vector3.Distance
- uid: System.Numerics.Vector3.DistanceSquared*
  parent: System.Numerics.Vector3
  isExternal: false
  name: DistanceSquared
  nameWithType: Vector3.DistanceSquared
- uid: System.Numerics.Vector3.Divide*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Divide
  nameWithType: Vector3.Divide
- uid: System.Numerics.Vector3.Dot*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Dot
  nameWithType: Vector3.Dot
- uid: System.Numerics.Vector3.Equals*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Equals
  nameWithType: Vector3.Equals
- uid: System.Numerics.Vector3.GetHashCode*
  parent: System.Numerics.Vector3
  isExternal: false
  name: GetHashCode
  nameWithType: Vector3.GetHashCode
- uid: System.Numerics.Vector3.Length*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Length
  nameWithType: Vector3.Length
- uid: System.Numerics.Vector3.LengthSquared*
  parent: System.Numerics.Vector3
  isExternal: false
  name: LengthSquared
  nameWithType: Vector3.LengthSquared
- uid: System.Numerics.Vector3.Lerp*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Lerp
  nameWithType: Vector3.Lerp
- uid: System.Numerics.Vector3.Max*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Max
  nameWithType: Vector3.Max
- uid: System.Numerics.Vector3.Min*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Min
  nameWithType: Vector3.Min
- uid: System.Numerics.Vector3.Multiply*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Multiply
  nameWithType: Vector3.Multiply
- uid: System.Numerics.Vector3.Negate*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Negate
  nameWithType: Vector3.Negate
- uid: System.Numerics.Vector3.Normalize*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Normalize
  nameWithType: Vector3.Normalize
- uid: System.Numerics.Vector3.One*
  parent: System.Numerics.Vector3
  isExternal: false
  name: One
  nameWithType: Vector3.One
- uid: System.Numerics.Vector3.op_Addition*
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Addition
  nameWithType: Vector3.op_Addition
- uid: System.Numerics.Vector3.op_Division*
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Division
  nameWithType: Vector3.op_Division
- uid: System.Numerics.Vector3.op_Equality*
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Equality
  nameWithType: Vector3.op_Equality
- uid: System.Numerics.Vector3.op_Inequality*
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Inequality
  nameWithType: Vector3.op_Inequality
- uid: System.Numerics.Vector3.op_Multiply*
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Multiply
  nameWithType: Vector3.op_Multiply
- uid: System.Numerics.Vector3.op_Subtraction*
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_Subtraction
  nameWithType: Vector3.op_Subtraction
- uid: System.Numerics.Vector3.op_UnaryNegation*
  parent: System.Numerics.Vector3
  isExternal: false
  name: op_UnaryNegation
  nameWithType: Vector3.op_UnaryNegation
- uid: System.Numerics.Vector3.Reflect*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Reflect
  nameWithType: Vector3.Reflect
- uid: System.Numerics.Vector3.SquareRoot*
  parent: System.Numerics.Vector3
  isExternal: false
  name: SquareRoot
  nameWithType: Vector3.SquareRoot
- uid: System.Numerics.Vector3.Subtract*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Subtract
  nameWithType: Vector3.Subtract
- uid: System.Numerics.Vector3.ToString*
  parent: System.Numerics.Vector3
  isExternal: false
  name: ToString
  nameWithType: Vector3.ToString
- uid: System.Numerics.Vector3.Transform*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Transform
  nameWithType: Vector3.Transform
- uid: System.Numerics.Vector3.TransformNormal*
  parent: System.Numerics.Vector3
  isExternal: false
  name: TransformNormal
  nameWithType: Vector3.TransformNormal
- uid: System.Numerics.Vector3.UnitX*
  parent: System.Numerics.Vector3
  isExternal: false
  name: UnitX
  nameWithType: Vector3.UnitX
- uid: System.Numerics.Vector3.UnitY*
  parent: System.Numerics.Vector3
  isExternal: false
  name: UnitY
  nameWithType: Vector3.UnitY
- uid: System.Numerics.Vector3.UnitZ*
  parent: System.Numerics.Vector3
  isExternal: false
  name: UnitZ
  nameWithType: Vector3.UnitZ
- uid: System.Numerics.Vector3.Zero*
  parent: System.Numerics.Vector3
  isExternal: false
  name: Zero
  nameWithType: Vector3.Zero
