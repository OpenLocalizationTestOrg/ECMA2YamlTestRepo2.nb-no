### YamlMime:ManagedReference
items:
- uid: System.Web.ApplicationServices.RoleService
  id: RoleService
  children:
  - System.Web.ApplicationServices.RoleService.#ctor
  - System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser
  - System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)
  - System.Web.ApplicationServices.RoleService.SelectingProvider
  langs:
  - csharp
  name: RoleService
  nameWithType: RoleService
  fullName: System.Web.ApplicationServices.RoleService
  type: Class
  summary: "Aktiverer tilgang til ASP.NET-rolleleverandør som en WCF-webtjenesten."
  remarks: "Objektet RoleService kan du lese brukerroller via en Windows Communication Foundation (WCF). For å bruke rolletjenesten, må du aktivere role-tjenesten på en nettserver og koble deretter et klientprogram WCF-kompatibelt med webtjenesten. For informasjon om hvordan du konfigurerer rolletjenesten, kan du se [slik: aktivere WCF rolletjenesten](~/add/includes/ajax-current-ext-md.md).       Brukeren må godkjennes for å lese brukerens roller. Rolletjenesten fungerer med alle typer ASP.NET-godkjenning. For informasjon om hvordan du logger brukere i via en WCF-tjenesten, kan du se [tjenesteoversikt for Windows Communication Foundation godkjenning](~/add/includes/ajax-current-ext-md.md).       Klassen RoleService viser metodene som skal ha tilgang til bare via en WCF-tjenesten: den <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A>metoden og <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>metode.</xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> </xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> Den <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A>metoden returnerer alle roller for den påloggede brukeren.</xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> Den <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>metoden bestemmer om brukeren er i en bestemt rolle.</xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>       Opphøyer RoleService objektet i <xref:System.Web.ApplicationServices.RoleService.SelectingProvider>hendelsen.</xref:System.Web.ApplicationServices.RoleService.SelectingProvider> Du oppretter en hendelsesbehandling for den <xref:System.Web.ApplicationServices.RoleService.SelectingProvider>hendelse for å velge hvilken rolleleverandør som skal brukes under kjøring.</xref:System.Web.ApplicationServices.RoleService.SelectingProvider>       Et eksempel på hvordan du bruker tjenesten WCF rollen fra en applikasjon i konsollen, kan du se [gjennomgang: ved hjelp av ASP.NET programtjenester](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)]

      [System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")]

      [System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")]

      public class RoleService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.#ctor
  id: '#ctor'
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: RoleService()
  nameWithType: RoleService.RoleService()
  fullName: System.Web.ApplicationServices.RoleService.RoleService()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.ApplicationServices.RoleService&quot;> </xref> klasse."
  syntax:
    content: public RoleService ();
    parameters: []
  overload: System.Web.ApplicationServices.RoleService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser
  id: GetRolesForCurrentUser
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: GetRolesForCurrentUser()
  nameWithType: RoleService.GetRolesForCurrentUser()
  fullName: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Returnerer alle roller for den påloggede brukeren."
  remarks: "Metoden GetRolesForCurrentUser returnerer alle roller for brukeren. Du bruker metoden GetRolesForCurrentUser når må du kontrollere eller beholde alle brukerens roller for å finne ut hvilke ressurser som er tilgjengelige for brukeren. Du kan bruke denne metoden for å unngå flere kall til den <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>metoden.</xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>       Kaller metoden GetRolesForCurrentUser opphøyer den <xref:System.Web.ApplicationServices.RoleService.SelectingProvider>hendelsen.</xref:System.Web.ApplicationServices.RoleService.SelectingProvider>      > [!NOTE] > Ikke kalle metoden GetRolesForCurrentUser fra kode som kjører på nettserveren. Du kalle metoden GetRolesForCurrentUser bare som en del av en WCF-tjenesten. Hvis du vil ha mer informasjon om hvordan du lese brukerroller i koden som kjører på nettserveren, se den <xref:System.Web.Security.Roles.GetRolesForUser%2A>metoden.</xref:System.Web.Security.Roles.GetRolesForUser%2A>"
  syntax:
    content: public string[] GetRolesForCurrentUser ();
    parameters: []
    return:
      type: System.String[]
      description: "En matrise med navnene på roller som brukeren tilhører."
  overload: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Rollebehandling er ikke aktivert."
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)
  id: IsCurrentUserInRole(System.String)
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: IsCurrentUserInRole(String)
  nameWithType: RoleService.IsCurrentUserInRole(String)
  fullName: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Bestemmer om den påloggede brukeren hører til den angitte rollen."
  remarks: "Metoden IsCurrentUserInRole kontrollerer om den påloggede brukeren hører til den angitte rollen. Metoden IsCurrentUserInRole opphøyer den <xref:System.Web.ApplicationServices.RoleService.SelectingProvider>hendelsen.</xref:System.Web.ApplicationServices.RoleService.SelectingProvider>      > [!NOTE] > Ikke kalle metoden IsCurrentUserInRole fra kode som kjører på nettserveren. Du kalle metoden IsCurrentUserInRole bare som en del av en WCF-tjenesten. Hvis du vil ha mer informasjon om hvordan du kontrollerer om en brukeren hører til den angitte gruppen fra koden som kjører på nettserveren, se den <xref:System.Web.Security.Roles.IsUserInRole%2A>metoden.</xref:System.Web.Security.Roles.IsUserInRole%2A>"
  syntax:
    content: public bool IsCurrentUserInRole (string role);
    parameters:
    - id: role
      type: System.String
      description: "Navnet på rollen til å kontrollere."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis brukeren er i den angitte rollen; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>role</code>er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller brukeren er ikke logget på."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Rollebehandling er ikke aktivert."
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.SelectingProvider
  id: SelectingProvider
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: SelectingProvider
  nameWithType: RoleService.SelectingProvider
  fullName: System.Web.ApplicationServices.RoleService.SelectingProvider
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Forekommer når en <xref href=&quot;System.Web.ApplicationServices.RoleService&quot;> </xref> forekomsten bestemmer hvilken rolleleverandør skal brukes for å kontrollere brukerens roller."
  remarks: "Den <xref:System.Web.ApplicationServices.RoleService>klassen opphøyer hendelsen SelectingProvider å fastsette som rolleleverandør som skal brukes for å hente brukerens roller.</xref:System.Web.ApplicationServices.RoleService> Du kan opprette en hendelsesbehandling for hendelsen SelectingProvider velge som rolleleverandør som skal brukes under kjøring."
  example:
  - "The following example shows how to bind an event handler to the SelectingProvider event in the Global.asax file. The event handler determines at run time which role provider to use, based on the user name.  \n  \n [!code-vb[System.Web.Security.SelectingProviderEventHandler#1](~/add/codesnippet/visualbasic/e-system.web.application_3_1.asax)]\n [!code-cs[System.Web.Security.SelectingProviderEventHandler#1](~/add/codesnippet/csharp/e-system.web.application_3_1.asax)]"
  syntax:
    content: public static event EventHandler<System.Web.ApplicationServices.SelectingProviderEventArgs> SelectingProvider;
    return:
      type: System.EventHandler{System.Web.ApplicationServices.SelectingProviderEventArgs}
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.ApplicationServices.RoleService.#ctor
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: RoleService()
  nameWithType: RoleService.RoleService()
  fullName: System.Web.ApplicationServices.RoleService.RoleService()
- uid: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: GetRolesForCurrentUser()
  nameWithType: RoleService.GetRolesForCurrentUser()
  fullName: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: IsCurrentUserInRole(String)
  nameWithType: RoleService.IsCurrentUserInRole(String)
  fullName: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ApplicationServices.RoleService.SelectingProvider
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: SelectingProvider
  nameWithType: RoleService.SelectingProvider
  fullName: System.Web.ApplicationServices.RoleService.SelectingProvider
- uid: System.EventHandler{System.Web.ApplicationServices.SelectingProviderEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SelectingProviderEventArgs>
  nameWithType: EventHandler<SelectingProviderEventArgs>
  fullName: System.EventHandler<System.Web.ApplicationServices.SelectingProviderEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.ApplicationServices.SelectingProviderEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ApplicationServices.SelectingProviderEventArgs
    name: SelectingProviderEventArgs
    nameWithType: SelectingProviderEventArgs
    fullName: SelectingProviderEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ApplicationServices.RoleService.#ctor*
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: RoleService
  nameWithType: RoleService.RoleService
- uid: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser*
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: GetRolesForCurrentUser
  nameWithType: RoleService.GetRolesForCurrentUser
- uid: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole*
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: IsCurrentUserInRole
  nameWithType: RoleService.IsCurrentUserInRole
