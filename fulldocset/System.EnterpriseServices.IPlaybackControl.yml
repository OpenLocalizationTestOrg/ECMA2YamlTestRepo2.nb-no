### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.IPlaybackControl
  id: IPlaybackControl
  children:
  - System.EnterpriseServices.IPlaybackControl.FinalClientRetry
  - System.EnterpriseServices.IPlaybackControl.FinalServerRetry
  langs:
  - csharp
  name: IPlaybackControl
  nameWithType: IPlaybackControl
  fullName: System.EnterpriseServices.IPlaybackControl
  type: Interface
  summary: "Funksjoner i komponenter i kø på unormal håndtering av serversiden avspilling feil og klientsiden feil Message Queuing levering mekanisme."
  remarks: "Unntaksklasse som er definert for komponenten i COM +-katalogen implementerer både IPlaybackControl og grensesnittet for opprinnelige klassen. Metoden implementeringer av grensesnittet klassen brukes til å utføre unntaksbehandling mislykket metodene i selve klassen. De vil kalles etter <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>eller <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>til å behandle unntak for metoden kalles opprinnelig.</xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> </xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>       Hver spiller i kø komponenter kaller metodene IPlaybackControl å informere unntak behandlingsprogrammet-objektet som en melding skal plasseres på den siste holde eller blindkø kø. Hver spiller i kø komponenter kaller deretter på samme måte i unntak behandlingsprogrammet-objektet som har mislyktes i det opprinnelige metodekallet. Unntak behandlingsprogrammet-objektet kan implementere et alternativ, for eksempel ved innsamling problemet diagnoseinformasjon eller generering av et objekt eller en melding om klienten om problemet. Hvis programmet ikke implementerer IPlaybackControl, plasseres i Giftmelding for endelig holde eller blindkø køen når i kø komponenter Player bruker opp alle gjentatte forsøk.       En giftmelding er en melding som ikke kan behandles på grunn av noen kanskje på grunn av et problem med serveren eller queuing system. Transaksjonen er rullet tilbake, og Giftmelding går til toppen av køen. Når meldingen er tatt ut av kø på nytt, oppstår det samme betingelse. Meldingen kan fortsette løkker helt til noe gjøres for å løse problemet. Lytteobjektet for komponenter-tjenesten behandler Giftmelding ved hjelp av en rekke nye forsøk. Meldingen er flyttet til en endelig vannrett kø etter gjentatte mislykkede forsøk. Poison meldinger blir værende i vannrett køen før flyttet manuelt ved hjelp av verktøyet i kø komponenter meldingen Tuppelkilden.       Giftmelding situasjonen kan også løses programmatisk, ved hjelp av den <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>metode, som forteller forfatteren av serversiden komponent som alle forsøk på å spille av utsatt aktiveringen mislyktes.</xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>       Hvis du oppdager en giftmelding, kan du kanskje løse underliggende årsaken til problemet raskt. Hvis serveren var frakoblet på grunn noen, kan du for eksempel få tilgjengelig igjen. Hvis du ikke å løse problemet raskt, kan du automatisk generere en annen transaksjon som varsler anmoder transaksjonen ikke forekomme i distribusjonsdatabasen. Personen som sendte forespørselen kan gjøre en kompenserende transaksjon som reverserer effekten av en transaksjon som allerede er utført."
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("51372AFD-CAE7-11CF-BE81-00AA00A2FA25")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IPlaybackControl
  implements: []
  platform:
  - net462
- uid: System.EnterpriseServices.IPlaybackControl.FinalClientRetry
  id: FinalClientRetry
  parent: System.EnterpriseServices.IPlaybackControl
  langs:
  - csharp
  name: FinalClientRetry()
  nameWithType: IPlaybackControl.FinalClientRetry()
  fullName: System.EnterpriseServices.IPlaybackControl.FinalClientRetry()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Informerer klientsiden unntaksbehandling komponenten at alle Message Queuing forsøk på å levere meldingen til serveren ble avvist, og meldingen havnet på klientsiden Xact blindkøen."
  remarks: "Når meldinger som ankommer i Xact blindkøen, forsøker COM + å starte en klientsiden unntak behandlingsprogrammet som er relatert til server klassen for å levere denne meldingen. Dette gjøres ved første kall til FinalClientRetry og kaller unntaksbehandling versjonen av metoden mislyktes i unntak behandlingsprogrammet-objektet. Denne metoden for unntaket kan da et unntak, for eksempel registrere feilen, sender en e-postmelding til systemansvarlig eller tar klientsiden kompenseringshandling (tilbakeføring effekten av en tidligere transaksjon). Hvis metoden unntak ikke lykkes, værende meldingen på Xact blindkøen.       Xact blindkøen kan vises i Microsoft Message Queue (MSMQ) Explorer."
  syntax:
    content: public void FinalClientRetry ();
    parameters: []
  overload: System.EnterpriseServices.IPlaybackControl.FinalClientRetry*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.IPlaybackControl.FinalServerRetry
  id: FinalServerRetry
  parent: System.EnterpriseServices.IPlaybackControl
  langs:
  - csharp
  name: FinalServerRetry()
  nameWithType: IPlaybackControl.FinalServerRetry()
  fullName: System.EnterpriseServices.IPlaybackControl.FinalServerRetry()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Informerer serversiden unntak klassen implementeringen at alle forsøk på å spille av utsatt aktiveringen til serveren mislyktes, og meldingen til å flytte til den endelige vannrett kø."
  remarks: "Når meldinger mottas på Xact blindkøen, forsøker COM + å starte et behandlingsprogram for serverside unntak relatert til server klassen for å levere denne meldingen. Dette gjøres ved først å kalle FinalServerRetry og kaller unntaksbehandling versjon av metoden mislyktes i unntak behandlingsprogrammet objektet. Denne metoden for unntaket kan da et unntak, for eksempel registrere feilen, sender en e-postmelding til systemansvarlig eller tar klientsiden kompenseringshandling (tilbakeføring effekten av en tidligere transaksjon). Serverobjektet må du kontrollere god fullført denne transaksjonen. Ellers for manuell inngripen å behandle meldingen på nytt. Hvis metoden unntak ikke lykkes, flyttes meldingen til den endelige vannrett køen."
  syntax:
    content: public void FinalServerRetry ();
    parameters: []
  overload: System.EnterpriseServices.IPlaybackControl.FinalServerRetry*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EnterpriseServices.IPlaybackControl.FinalClientRetry
  parent: System.EnterpriseServices.IPlaybackControl
  isExternal: false
  name: FinalClientRetry()
  nameWithType: IPlaybackControl.FinalClientRetry()
  fullName: System.EnterpriseServices.IPlaybackControl.FinalClientRetry()
- uid: System.EnterpriseServices.IPlaybackControl.FinalServerRetry
  parent: System.EnterpriseServices.IPlaybackControl
  isExternal: false
  name: FinalServerRetry()
  nameWithType: IPlaybackControl.FinalServerRetry()
  fullName: System.EnterpriseServices.IPlaybackControl.FinalServerRetry()
- uid: System.EnterpriseServices.IPlaybackControl.FinalClientRetry*
  parent: System.EnterpriseServices.IPlaybackControl
  isExternal: false
  name: FinalClientRetry
  nameWithType: IPlaybackControl.FinalClientRetry
- uid: System.EnterpriseServices.IPlaybackControl.FinalServerRetry*
  parent: System.EnterpriseServices.IPlaybackControl
  isExternal: false
  name: FinalServerRetry
  nameWithType: IPlaybackControl.FinalServerRetry
