### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey
  id: SymmetricSecurityKey
  children:
  - System.IdentityModel.Tokens.SymmetricSecurityKey.#ctor
  - System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)
  - System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])
  - System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])
  - System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)
  - System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)
  - System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)
  - System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey
  langs:
  - csharp
  name: SymmetricSecurityKey
  nameWithType: SymmetricSecurityKey
  fullName: System.IdentityModel.Tokens.SymmetricSecurityKey
  type: Class
  summary: "Representerer abstrakt basisklasse for alle nøkler som genereres ved hjelp av symmetriske algoritmer."
  remarks: "Vanligvis brukes denne klassen av infrastrukturen til transformeringen XML ved hjelp av en symmetrisk nøkkel."
  syntax:
    content: 'public abstract class SymmetricSecurityKey : System.IdentityModel.Tokens.SecurityKey'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityKey
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])
  - System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])
  - System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)
  - System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)
  - System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)
  - System.IdentityModel.Tokens.SecurityKey.KeySize
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SymmetricSecurityKey
  langs:
  - csharp
  name: SymmetricSecurityKey()
  nameWithType: SymmetricSecurityKey.SymmetricSecurityKey()
  fullName: System.IdentityModel.Tokens.SymmetricSecurityKey.SymmetricSecurityKey()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.IdentityModel.Tokens.SymmetricSecurityKey&quot;> </xref> klasse."
  syntax:
    content: protected SymmetricSecurityKey ();
    parameters: []
  overload: System.IdentityModel.Tokens.SymmetricSecurityKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)
  id: GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)
  parent: System.IdentityModel.Tokens.SymmetricSecurityKey
  langs:
  - csharp
  name: GenerateDerivedKey(String,Byte[],Byte[],Int32,Int32)
  nameWithType: SymmetricSecurityKey.GenerateDerivedKey(String,Byte[],Byte[],Int32,Int32)
  fullName: System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(String,Byte[],Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Når overstyrt i en avledet klasse, genererer en avledet nøkkel ved hjelp av angitte kryptografisk algoritme og parametere for gjeldende nøkkel."
  remarks: "Hvis du vil angi P SHA1 som algoritmen kryptografisk, kan du bruke den <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation>felt.</xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation>"
  syntax:
    content: public abstract byte[] GenerateDerivedKey (string algorithm, byte[] label, byte[] nonce, int derivedKeyLength, int offset);
    parameters:
    - id: algorithm
      type: System.String
      description: "URIEN som representerer kryptografiske algoritmen som skal brukes til å generere nøkkelen avledede."
    - id: label
      type: System.Byte[]
      description: "En matrise av <xref:System.Byte>som inneholder etikettparameteren for kryptografisk algoritmen.</xref:System.Byte>"
    - id: nonce
      type: System.Byte[]
      description: "En matrise av <xref:System.Byte>som inneholder den midlertidige IDen som brukes til å opprette en avledet nøkkel.</xref:System.Byte>"
    - id: derivedKeyLength
      type: System.Int32
      description: "Størrelsen på avledede nøkkelen."
    - id: offset
      type: System.Int32
      description: "Posisjonen avledede nøkkelen er plassert i bytematrise som er returnert fra denne metoden."
    return:
      type: System.Byte[]
      description: "En matrise av <xref:System.Byte>som inneholder den avledede nøkkelen.</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])
  id: GetDecryptionTransform(System.String,System.Byte[])
  parent: System.IdentityModel.Tokens.SymmetricSecurityKey
  langs:
  - csharp
  name: GetDecryptionTransform(String,Byte[])
  nameWithType: SymmetricSecurityKey.GetDecryptionTransform(String,Byte[])
  fullName: System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(String,Byte[])
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Når overstyrt i en avledet klasse, cipher henter en transformering dekrypterer tekst ved hjelp av den angitte kryptografiske algoritmen."
  remarks: "Bruk feltene som representerer dekryptering algoritmer i den <xref:System.IdentityModel.Tokens.SecurityAlgorithms>klassen for å angi algoritme.</xref:System.IdentityModel.Tokens.SecurityAlgorithms>"
  syntax:
    content: public abstract System.Security.Cryptography.ICryptoTransform GetDecryptionTransform (string algorithm, byte[] iv);
    parameters:
    - id: algorithm
      type: System.String
      description: "En kryptografisk algoritme dekrypterer cipher tekst, som kryptert XML."
    - id: iv
      type: System.Byte[]
      description: "En matrise av <xref:System.Byte>som inneholder Initialiseringsvektoren (<xref uid=&quot;langword_csharp_IV&quot; name=&quot;IV&quot; href=&quot;&quot;></xref>) for den angitte algoritmen.</xref:System.Byte>"
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "En <xref href=&quot;System.Security.Cryptography.ICryptoTransform&quot;> </xref> som representerer dekrypteringstransformering."
  overload: System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])
  id: GetEncryptionTransform(System.String,System.Byte[])
  parent: System.IdentityModel.Tokens.SymmetricSecurityKey
  langs:
  - csharp
  name: GetEncryptionTransform(String,Byte[])
  nameWithType: SymmetricSecurityKey.GetEncryptionTransform(String,Byte[])
  fullName: System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(String,Byte[])
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Henter en overføring som krypterer XML med den angitte kryptografiske algoritmen når overstyres i en avledet klasse."
  remarks: "Bruk feltene som representerer dekryptering algoritmer i den <xref:System.IdentityModel.Tokens.SecurityAlgorithms>klassen for å angi algoritme.</xref:System.IdentityModel.Tokens.SecurityAlgorithms>"
  syntax:
    content: public abstract System.Security.Cryptography.ICryptoTransform GetEncryptionTransform (string algorithm, byte[] iv);
    parameters:
    - id: algorithm
      type: System.String
      description: "En kryptografisk algoritme som krypterer XML."
    - id: iv
      type: System.Byte[]
      description: "En matrise av <xref:System.Byte>som inneholder Initialiseringsvektoren (<xref uid=&quot;langword_csharp_IV&quot; name=&quot;IV&quot; href=&quot;&quot;></xref>) for den angitte algoritmen.</xref:System.Byte>"
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "En <xref href=&quot;System.Security.Cryptography.ICryptoTransform&quot;> </xref> som representerer transformeringen kryptering."
  overload: System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)
  id: GetIVSize(System.String)
  parent: System.IdentityModel.Tokens.SymmetricSecurityKey
  langs:
  - csharp
  name: GetIVSize(String)
  nameWithType: SymmetricSecurityKey.GetIVSize(String)
  fullName: System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Når overstyrt i en avledet klasse, henter størrelsen, i biter med Initialiseringsvektoren (<xref uid=&quot;langword_csharp_IV&quot; name=&quot;IV&quot; href=&quot;&quot;></xref>) som kreves for den angitte kryptografiske algoritmen."
  syntax:
    content: public abstract int GetIVSize (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Kryptografiske algoritmen størrelsen på Initialiseringsvektoren (<xref uid=&quot;langword_csharp_IV&quot; name=&quot;IV&quot; href=&quot;&quot;></xref>)."
    return:
      type: System.Int32
      description: "Størrelsen, i biter med Initialiseringsvektoren (<xref uid=&quot;langword_csharp_IV&quot; name=&quot;IV&quot; href=&quot;&quot;></xref>) som kreves for kryptografisk algoritmen som er angitt i den <code> algorithm </code> parameteren."
  overload: System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)
  id: GetKeyedHashAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.SymmetricSecurityKey
  langs:
  - csharp
  name: GetKeyedHashAlgorithm(String)
  nameWithType: SymmetricSecurityKey.GetKeyedHashAlgorithm(String)
  fullName: System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Henter en forekomst av den angitte kodede nummeralgoritmen når overstyres i en avledet klasse."
  remarks: "Bruk feltene som representerer kodede hash-algoritmer i den <xref:System.IdentityModel.Tokens.SecurityAlgorithms>klassen for å angi algoritme.</xref:System.IdentityModel.Tokens.SecurityAlgorithms>"
  syntax:
    content: public abstract System.Security.Cryptography.KeyedHashAlgorithm GetKeyedHashAlgorithm (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Kodede nummeralgoritmen å hente en forekomst av."
    return:
      type: System.Security.Cryptography.KeyedHashAlgorithm
      description: "En <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> som representerer kodede hash-algoritmen."
  overload: System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)
  id: GetSymmetricAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.SymmetricSecurityKey
  langs:
  - csharp
  name: GetSymmetricAlgorithm(String)
  nameWithType: SymmetricSecurityKey.GetSymmetricAlgorithm(String)
  fullName: System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Henter en forekomst av den angitte symmetriske algoritmen når overstyres i en avledet klasse."
  remarks: "Bruk feltene som representerer symmetriske algoritmer i den <xref:System.IdentityModel.Tokens.SecurityAlgorithms>klassen for å angi algoritme.</xref:System.IdentityModel.Tokens.SecurityAlgorithms>"
  syntax:
    content: public abstract System.Security.Cryptography.SymmetricAlgorithm GetSymmetricAlgorithm (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Symmetriske algoritmen for å hente en forekomst av."
    return:
      type: System.Security.Cryptography.SymmetricAlgorithm
      description: "En <xref href=&quot;System.Security.Cryptography.SymmetricAlgorithm&quot;> </xref> som representerer den symmetriske algoritmen."
  overload: System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey
  id: GetSymmetricKey
  parent: System.IdentityModel.Tokens.SymmetricSecurityKey
  langs:
  - csharp
  name: GetSymmetricKey()
  nameWithType: SymmetricSecurityKey.GetSymmetricKey()
  fullName: System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Når overstyrt i en avledet klasse, henter byte som representerer den symmetriske nøkkelen."
  syntax:
    content: public abstract byte[] GetSymmetricKey ();
    parameters: []
    return:
      type: System.Byte[]
      description: "En matrise av <xref:System.Byte>som inneholder den symmetriske nøkkelen.</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityKey
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey.#ctor
  parent: System.IdentityModel.Tokens.SymmetricSecurityKey
  isExternal: false
  name: SymmetricSecurityKey()
  nameWithType: SymmetricSecurityKey.SymmetricSecurityKey()
  fullName: System.IdentityModel.Tokens.SymmetricSecurityKey.SymmetricSecurityKey()
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)
  parent: System.IdentityModel.Tokens.SymmetricSecurityKey
  isExternal: false
  name: GenerateDerivedKey(String,Byte[],Byte[],Int32,Int32)
  nameWithType: SymmetricSecurityKey.GenerateDerivedKey(String,Byte[],Byte[],Int32,Int32)
  fullName: System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(String,Byte[],Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])
  parent: System.IdentityModel.Tokens.SymmetricSecurityKey
  isExternal: false
  name: GetDecryptionTransform(String,Byte[])
  nameWithType: SymmetricSecurityKey.GetDecryptionTransform(String,Byte[])
  fullName: System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(String,Byte[])
- uid: System.Security.Cryptography.ICryptoTransform
  parent: System.Security.Cryptography
  isExternal: false
  name: ICryptoTransform
  nameWithType: ICryptoTransform
  fullName: System.Security.Cryptography.ICryptoTransform
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])
  parent: System.IdentityModel.Tokens.SymmetricSecurityKey
  isExternal: false
  name: GetEncryptionTransform(String,Byte[])
  nameWithType: SymmetricSecurityKey.GetEncryptionTransform(String,Byte[])
  fullName: System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(String,Byte[])
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)
  parent: System.IdentityModel.Tokens.SymmetricSecurityKey
  isExternal: false
  name: GetIVSize(String)
  nameWithType: SymmetricSecurityKey.GetIVSize(String)
  fullName: System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(String)
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.SymmetricSecurityKey
  isExternal: false
  name: GetKeyedHashAlgorithm(String)
  nameWithType: SymmetricSecurityKey.GetKeyedHashAlgorithm(String)
  fullName: System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(String)
- uid: System.Security.Cryptography.KeyedHashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: KeyedHashAlgorithm
  nameWithType: KeyedHashAlgorithm
  fullName: System.Security.Cryptography.KeyedHashAlgorithm
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.SymmetricSecurityKey
  isExternal: false
  name: GetSymmetricAlgorithm(String)
  nameWithType: SymmetricSecurityKey.GetSymmetricAlgorithm(String)
  fullName: System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(String)
- uid: System.Security.Cryptography.SymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: SymmetricAlgorithm
  nameWithType: SymmetricAlgorithm
  fullName: System.Security.Cryptography.SymmetricAlgorithm
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey
  parent: System.IdentityModel.Tokens.SymmetricSecurityKey
  isExternal: false
  name: GetSymmetricKey()
  nameWithType: SymmetricSecurityKey.GetSymmetricKey()
  fullName: System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey()
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey.#ctor*
  parent: System.IdentityModel.Tokens.SymmetricSecurityKey
  isExternal: false
  name: SymmetricSecurityKey
  nameWithType: SymmetricSecurityKey.SymmetricSecurityKey
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey*
  parent: System.IdentityModel.Tokens.SymmetricSecurityKey
  isExternal: false
  name: GenerateDerivedKey
  nameWithType: SymmetricSecurityKey.GenerateDerivedKey
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform*
  parent: System.IdentityModel.Tokens.SymmetricSecurityKey
  isExternal: false
  name: GetDecryptionTransform
  nameWithType: SymmetricSecurityKey.GetDecryptionTransform
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform*
  parent: System.IdentityModel.Tokens.SymmetricSecurityKey
  isExternal: false
  name: GetEncryptionTransform
  nameWithType: SymmetricSecurityKey.GetEncryptionTransform
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize*
  parent: System.IdentityModel.Tokens.SymmetricSecurityKey
  isExternal: false
  name: GetIVSize
  nameWithType: SymmetricSecurityKey.GetIVSize
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm*
  parent: System.IdentityModel.Tokens.SymmetricSecurityKey
  isExternal: false
  name: GetKeyedHashAlgorithm
  nameWithType: SymmetricSecurityKey.GetKeyedHashAlgorithm
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm*
  parent: System.IdentityModel.Tokens.SymmetricSecurityKey
  isExternal: false
  name: GetSymmetricAlgorithm
  nameWithType: SymmetricSecurityKey.GetSymmetricAlgorithm
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey*
  parent: System.IdentityModel.Tokens.SymmetricSecurityKey
  isExternal: false
  name: GetSymmetricKey
  nameWithType: SymmetricSecurityKey.GetSymmetricKey
