### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Strings
  id: Strings
  children:
  - Microsoft.VisualBasic.Strings.Asc(System.Char)
  - Microsoft.VisualBasic.Strings.Asc(System.String)
  - Microsoft.VisualBasic.Strings.AscW(System.Char)
  - Microsoft.VisualBasic.Strings.AscW(System.String)
  - Microsoft.VisualBasic.Strings.Chr(System.Int32)
  - Microsoft.VisualBasic.Strings.ChrW(System.Int32)
  - Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)
  - Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)
  - Microsoft.VisualBasic.Strings.Format(System.Object,System.String)
  - Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)
  - Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)
  - Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)
  - Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)
  - Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)
  - Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  - Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  - Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)
  - Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)
  - Microsoft.VisualBasic.Strings.Join(System.String[],System.String)
  - Microsoft.VisualBasic.Strings.LCase(System.Char)
  - Microsoft.VisualBasic.Strings.LCase(System.String)
  - Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)
  - Microsoft.VisualBasic.Strings.Len(System.Boolean)
  - Microsoft.VisualBasic.Strings.Len(System.Byte)
  - Microsoft.VisualBasic.Strings.Len(System.Char)
  - Microsoft.VisualBasic.Strings.Len(System.DateTime)
  - Microsoft.VisualBasic.Strings.Len(System.Decimal)
  - Microsoft.VisualBasic.Strings.Len(System.Double)
  - Microsoft.VisualBasic.Strings.Len(System.Int16)
  - Microsoft.VisualBasic.Strings.Len(System.Int32)
  - Microsoft.VisualBasic.Strings.Len(System.Int64)
  - Microsoft.VisualBasic.Strings.Len(System.Object)
  - Microsoft.VisualBasic.Strings.Len(System.SByte)
  - Microsoft.VisualBasic.Strings.Len(System.Single)
  - Microsoft.VisualBasic.Strings.Len(System.String)
  - Microsoft.VisualBasic.Strings.Len(System.UInt16)
  - Microsoft.VisualBasic.Strings.Len(System.UInt32)
  - Microsoft.VisualBasic.Strings.Len(System.UInt64)
  - Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)
  - Microsoft.VisualBasic.Strings.LTrim(System.String)
  - Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)
  - Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)
  - Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)
  - Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)
  - Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)
  - Microsoft.VisualBasic.Strings.RTrim(System.String)
  - Microsoft.VisualBasic.Strings.Space(System.Int32)
  - Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)
  - Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  - Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)
  - Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)
  - Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)
  - Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)
  - Microsoft.VisualBasic.Strings.StrReverse(System.String)
  - Microsoft.VisualBasic.Strings.Trim(System.String)
  - Microsoft.VisualBasic.Strings.UCase(System.Char)
  - Microsoft.VisualBasic.Strings.UCase(System.String)
  langs:
  - csharp
  name: Strings
  nameWithType: Strings
  fullName: Microsoft.VisualBasic.Strings
  type: Class
  summary: "Den <xref uid=&quot;langword_csharp_Strings&quot; name=&quot;Strings&quot; href=&quot;&quot;> </xref> modulen inneholder prosedyrer som brukes til å utføre strengoperasjoner."
  remarks: "Denne modulen støtter nøkkelord i Visual Basic språk og kjøretid biblioteket medlemmer som endre strenger."
  example:
  - "The following example demonstrates how to split a string at its spaces.  \n  \n [!code-vb[VbVbalrStrings#13](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._6_1.vb)]"
  syntax:
    content: >-
      [Microsoft.VisualBasic.CompilerServices.StandardModule]

      public sealed class Strings
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Asc(System.Char)
  id: Asc(System.Char)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Asc(Char)
  nameWithType: Strings.Asc(Char)
  fullName: Microsoft.VisualBasic.Strings.Asc(Char)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> verdien som representerer tegnkoden som tilsvarer et tegn."
  remarks: "`Asc`Returnerer den *kodepunkt*, eller tegnkoden for det angitte tegnet. Dette kan være 0 og 255 for én byte tegnverdier sett (OMVENDT) og-32768 og 32 767 for double-byte character set (DBCS) verdier.       `AscW`Returnerer Unicode-kodepunkt for det angitte tegnet. Dette kan være 0 og 65535. Den returnerte verdien er uavhengig av kulturen og kode innstillingene for gjeldende tråd.      > [!NOTE] > I `AscB` i tidligere versjoner av Visual Basic-funksjonen returnerer en kode for en byte i stedet for et tegn. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle Visual Basic 2005-strengene er i Unicode og `AscB` støttes ikke lenger."
  example:
  - "The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.  \n  \n [!code-vb[VbVbalrFunctions#19](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._55_1.vb)]"
  syntax:
    content: public static int Asc (char String);
    parameters:
    - id: String
      type: System.Char
      description: "Kreves. Et gyldig <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> eller <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk. Hvis `String` er en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykket det første tegnet i strengen brukes for inndata. Hvis `String` er <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller inneholder ingen tegn, en <xref:System.ArgumentException>feilen oppstår.</xref:System.ArgumentException>"
    return:
      type: System.Int32
      description: "Returnerer en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> verdien som representerer tegnkoden som tilsvarer et tegn."
  overload: Microsoft.VisualBasic.Strings.Asc*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Asc(System.String)
  id: Asc(System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Asc(String)
  nameWithType: Strings.Asc(String)
  fullName: Microsoft.VisualBasic.Strings.Asc(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> verdien som representerer tegnkoden som tilsvarer et tegn."
  remarks: "`Asc`Returnerer den *kodepunkt*, eller tegnkoden for det angitte tegnet. Dette kan være 0 og 255 for én byte tegnverdier sett (OMVENDT) og-32768 og 32 767 for double-byte character set (DBCS) verdier.       `AscW`Returnerer Unicode-kodepunkt for det angitte tegnet. Dette kan være 0 og 65535. Den returnerte verdien er uavhengig av kulturen og kode innstillingene for gjeldende tråd.      > [!NOTE] > I `AscB` i tidligere versjoner av Visual Basic-funksjonen returnerer en kode for en byte i stedet for et tegn. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle Visual Basic 2005-strengene er i Unicode og `AscB` støttes ikke lenger."
  example:
  - "The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.  \n  \n [!code-vb[VbVbalrFunctions#19](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._249_1.vb)]"
  syntax:
    content: public static int Asc (string String);
    parameters:
    - id: String
      type: System.String
      description: "Kreves. Et gyldig <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> eller <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk. Hvis `String` er en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykket det første tegnet i strengen brukes for inndata. Hvis `String` er <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller inneholder ingen tegn, en <xref:System.ArgumentException>feilen oppstår.</xref:System.ArgumentException>"
    return:
      type: System.Int32
      description: "Returnerer en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> verdien som representerer tegnkoden som tilsvarer et tegn."
  overload: Microsoft.VisualBasic.Strings.Asc*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.AscW(System.Char)
  id: AscW(System.Char)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: AscW(Char)
  nameWithType: Strings.AscW(Char)
  fullName: Microsoft.VisualBasic.Strings.AscW(Char)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> verdien som representerer tegnkoden som tilsvarer et tegn."
  remarks: "`Asc`Returnerer den *kodepunkt*, eller tegnkoden for det angitte tegnet. Dette kan være 0 og 255 for én byte tegnverdier sett (OMVENDT) og-32768 og 32 767 for double-byte character set (DBCS) verdier.       `AscW`Returnerer Unicode-kodepunkt for det angitte tegnet. Dette kan være 0 og 65535. Den returnerte verdien er uavhengig av kulturen og kode innstillingene for gjeldende tråd.      > [!NOTE] > I `AscB` i tidligere versjoner av Visual Basic-funksjonen returnerer en kode for en byte i stedet for et tegn. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle Visual Basic 2005-strengene er i Unicode og `AscB` støttes ikke lenger."
  example:
  - "The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.  \n  \n [!code-vb[VbVbalrFunctions#19](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._18_1.vb)]"
  syntax:
    content: public static int AscW (char String);
    parameters:
    - id: String
      type: System.Char
      description: "Kreves. Et gyldig <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> eller <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk. Hvis `String` er en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykket det første tegnet i strengen brukes for inndata. Hvis `String` er <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller inneholder ingen tegn, en <xref:System.ArgumentException>feilen oppstår.</xref:System.ArgumentException>"
    return:
      type: System.Int32
      description: "Returnerer en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> verdien som representerer tegnkoden som tilsvarer et tegn."
  overload: Microsoft.VisualBasic.Strings.AscW*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.AscW(System.String)
  id: AscW(System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: AscW(String)
  nameWithType: Strings.AscW(String)
  fullName: Microsoft.VisualBasic.Strings.AscW(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> verdien som representerer tegnkoden som tilsvarer et tegn."
  remarks: "`Asc`Returnerer den *kodepunkt*, eller tegnkoden for det angitte tegnet. Dette kan være 0 og 255 for én byte tegnverdier sett (OMVENDT) og-32768 og 32 767 for double-byte character set (DBCS) verdier.       `AscW`Returnerer Unicode-kodepunkt for det angitte tegnet. Dette kan være 0 og 65535. Den returnerte verdien er uavhengig av kulturen og kode innstillingene for gjeldende tråd.      > [!NOTE] > I `AscB` i tidligere versjoner av Visual Basic-funksjonen returnerer en kode for en byte i stedet for et tegn. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle Visual Basic 2005-strengene er i Unicode og `AscB` støttes ikke lenger."
  example:
  - "The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.  \n  \n [!code-vb[VbVbalrFunctions#19](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._205_1.vb)]"
  syntax:
    content: public static int AscW (string String);
    parameters:
    - id: String
      type: System.String
      description: "Kreves. Et gyldig <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> eller <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk. Hvis `String` er en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykket det første tegnet i strengen brukes for inndata. Hvis `String` er <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller inneholder ingen tegn, en <xref:System.ArgumentException>feilen oppstår.</xref:System.ArgumentException>"
    return:
      type: System.Int32
      description: "Returnerer en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> verdien som representerer tegnkoden som tilsvarer et tegn."
  overload: Microsoft.VisualBasic.Strings.AscW*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Chr(System.Int32)
  id: Chr(System.Int32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Chr(Int32)
  nameWithType: Strings.Chr(Int32)
  fullName: Microsoft.VisualBasic.Strings.Chr(Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer tegnet som er knyttet til den angitte tegnkoden."
  remarks: "Asymmetriske området godtatt for `CharCode` kompenserer for lagring forskjeller i `Short` og `Integer`. -29183 er for eksempel en `Short` men +36353 er en `Integer`. Dette muliggjør også kompatibilitet med Visual Basic 6.0.       `Chr`bruker den <xref:System.Text.Encoding>klasse i den <xref:System.Text?displayProperty=fullName>navneområde for å fastslå om gjeldende tråd bruker en én-tegnsett (OMVENDT) eller en double-byte character angitt (DBCS).</xref:System.Text?displayProperty=fullName> </xref:System.Text.Encoding> Deretter tar `CharCode` peke i riktig settet som en kode. Området kan være 0 og 255 for OMVENDT tegn og-32768 til 65535 for DBCS-tegn.       Den returnerte verdien er avhengig av tegntabellen for gjeldende tråd som ligger i den <xref:System.Globalization.TextInfo.ANSICodePage%2A>for den <xref:System.Globalization.TextInfo>klasse i den <xref:System.Globalization>navneområde.</xref:System.Globalization> </xref:System.Globalization.TextInfo> </xref:System.Globalization.TextInfo.ANSICodePage%2A> Du kan få <xref:System.Globalization.TextInfo.ANSICodePage%2A>ved å angi `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</xref:System.Globalization.TextInfo.ANSICodePage%2A>       `ChrW`tar `CharCode` som en Unicode-kodepunkt. Området er uavhengig av kulturen og kode innstillingene for gjeldende tråd. Verdier mellom-32768 til-1 er behandlet den samme som verdiene i området +32768 via +65535.       Tall fra 0 til 31 er den samme som standard hvilket ASCII-koder. For eksempel `Chr(10)` returnerer en linje feeden tegn.      > [!NOTE] > I `ChrB` i tidligere versjoner av Visual Basic-funksjonen returnerer en enkelt byte. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle strenger i Visual Basic og .NET Framework er i Unicode, og `ChrB` støttes ikke lenger."
  example:
  - "The following example uses the `Chr` function to return the character associated with the specified character code.  \n  \n [!code-vb[VbVbalrStrings#7](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._105_1.vb)]"
  syntax:
    content: public static char Chr (int CharCode);
    parameters:
    - id: CharCode
      type: System.Int32
      description: "Kreves. En <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> uttrykk som representerer den `code point`, eller tegnkoden for tegnet."
    return:
      type: System.Char
      description: "Returnerer tegnet som er knyttet til den angitte tegnkoden."
  overload: Microsoft.VisualBasic.Strings.Chr*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>CharCode</code>&lt; 0 or &gt; 255 for <xref uid=&quot;langword_csharp_Chr&quot; name=&quot;Chr&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.ChrW(System.Int32)
  id: ChrW(System.Int32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: ChrW(Int32)
  nameWithType: Strings.ChrW(Int32)
  fullName: Microsoft.VisualBasic.Strings.ChrW(Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer tegnet som er knyttet til den angitte tegnkoden."
  remarks: "Asymmetriske området godtatt for `CharCode` kompenserer for lagring forskjeller i `Short` og `Integer`. -29183 er for eksempel en `Short` men +36353 er en `Integer`. Dette muliggjør også kompatibilitet med Visual Basic 6.0.       `Chr`bruker den <xref:System.Text.Encoding>klasse i den <xref:System.Text?displayProperty=fullName>navneområde for å fastslå om gjeldende tråd bruker en én-tegnsett (OMVENDT) eller en double-byte character angitt (DBCS).</xref:System.Text?displayProperty=fullName> </xref:System.Text.Encoding> Deretter tar `CharCode` peke i riktig settet som en kode. Området kan være 0 og 255 for OMVENDT tegn og-32768 til 65535 for DBCS-tegn.       Den returnerte verdien er avhengig av tegntabellen for gjeldende tråd som ligger i den <xref:System.Globalization.TextInfo.ANSICodePage%2A>for den <xref:System.Globalization.TextInfo>klasse i den <xref:System.Globalization>navneområde.</xref:System.Globalization> </xref:System.Globalization.TextInfo> </xref:System.Globalization.TextInfo.ANSICodePage%2A> Du kan få <xref:System.Globalization.TextInfo.ANSICodePage%2A>ved å angi `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</xref:System.Globalization.TextInfo.ANSICodePage%2A>       `ChrW`tar `CharCode` som en Unicode-kodepunkt. Området er uavhengig av kulturen og kode innstillingene for gjeldende tråd. Verdier mellom-32768 til-1 er behandlet den samme som verdiene i området +32768 via +65535.       Tall fra 0 til 31 er den samme som standard hvilket ASCII-koder. For eksempel `Chr(10)` returnerer en linje feeden tegn.      > [!NOTE] > I `ChrB` i tidligere versjoner av Visual Basic-funksjonen returnerer en enkelt byte. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle strenger i Visual Basic og .NET Framework er i Unicode, og `ChrB` støttes ikke lenger."
  example:
  - "The following example uses the `Chr` function to return the character associated with the specified character code.  \n  \n [!code-vb[VbVbalrStrings#7](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._45_1.vb)]"
  syntax:
    content: public static char ChrW (int CharCode);
    parameters:
    - id: CharCode
      type: System.Int32
      description: "Kreves. En <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> uttrykk som representerer den `code point`, eller tegnkoden for tegnet."
    return:
      type: System.Char
      description: "Returnerer tegnet som er knyttet til den angitte tegnkoden."
  overload: Microsoft.VisualBasic.Strings.ChrW*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>CharCode</code>&lt; -32768 or &gt; 65535 for <xref uid=&quot;langword_csharp_ChrW&quot; name=&quot;ChrW&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)
  id: Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Filter(Object[],String,Boolean,CompareMethod)
  nameWithType: Strings.Filter(Object[],String,Boolean,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.Filter(Object[],String,Boolean,CompareMethod)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en nullbasert matrise som inneholder et delsett av en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> matrise basert på angitte filtervilkår."
  remarks: "Hvis ingen forekomster av `Match` finnes i `Source`, `Filter` -funksjonen returnerer en tom matrise. Oppstår en feil hvis `Source` er satt til `Nothing` eller er ikke en endimensjonal matrise.       Matrisen som returneres av den `Filter` funksjonen inneholder bare nok elementer til å inneholde antallet samsvarende elementer.       Den `Compare` argumentet kan ha følgende verdier.      |||   |-|-|   | Konstant | Beskrivelse |   | `CompareMethod.Binary`| Sammenligner binært |   | `CompareMethod.Text`| Utfører en tekstform sammenligning |"
  example:
  - "This example demonstrates the use of the `Filter` function.  \n  \n [!code-vb[VbVbalrStrings#24](~/add/codesnippet/visualbasic/bfb6d7a4-ec2d-49ca-96ad-_1.vb)]"
  syntax:
    content: public static string[] Filter (object[] Source, string Match, bool Include = true, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);
    parameters:
    - id: Source
      type: System.Object[]
      description: "Kreves. Endimensjonal matrise av strenger for å søke."
    - id: Match
      type: System.String
      description: "Kreves. Streng til å søke etter."
    - id: Include
      type: System.Boolean
      description: "Valgfritt. <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>verdi som angir om å returnere delstrenger som inkludere eller ekskludere `Match`. Hvis `Include` er <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Filter&quot; name=&quot;Filter&quot; href=&quot;&quot;> </xref> -funksjonen returnerer delsettet med matrise som inneholder `Match` som en delstreng. Hvis `Include` er <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Filter&quot; name=&quot;Filter&quot; href=&quot;&quot;> </xref> -funksjonen returnerer delsettet med matrisen som ikke inneholder `Match` som en delstreng."
    - id: Compare
      type: Microsoft.VisualBasic.CompareMethod
      description: "Valgfritt. Numerisk verdi som angir hvilken type strengsammenligning skal brukes. Se &quot;innstillinger-verdier."
    return:
      type: System.String[]
      description: "Returnerer en nullbasert matrise som inneholder et delsett av en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> matrise basert på angitte filtervilkår."
  overload: Microsoft.VisualBasic.Strings.Filter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Source</code>er <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller er ikke en endimensjonal matrise."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)
  id: Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Filter(String[],String,Boolean,CompareMethod)
  nameWithType: Strings.Filter(String[],String,Boolean,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.Filter(String[],String,Boolean,CompareMethod)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en nullbasert matrise som inneholder et delsett av en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> matrise basert på angitte filtervilkår."
  remarks: "Hvis ingen forekomster av `Match` finnes i `Source`, `Filter` -funksjonen returnerer en tom matrise. Oppstår en feil hvis `Source` er satt til `Nothing` eller er ikke en endimensjonal matrise.       Matrisen som returneres av den `Filter` funksjonen inneholder bare nok elementer til å inneholde antallet samsvarende elementer.       Den `Compare` argumentet kan ha følgende verdier.      |||   |-|-|   | Konstant | Beskrivelse |   | `CompareMethod.Binary`| Sammenligner binært |   | `CompareMethod.Text`| Utfører en tekstform sammenligning |"
  example:
  - "This example demonstrates the use of the `Filter` function.  \n  \n [!code-vb[VbVbalrStrings#24](~/add/codesnippet/visualbasic/a4b278ef-f791-4808-8a23-_1.vb)]"
  syntax:
    content: public static string[] Filter (string[] Source, string Match, bool Include = true, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);
    parameters:
    - id: Source
      type: System.String[]
      description: "Kreves. Endimensjonal matrise av strenger for å søke."
    - id: Match
      type: System.String
      description: "Kreves. Streng til å søke etter."
    - id: Include
      type: System.Boolean
      description: "Valgfritt. <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>verdi som angir om å returnere delstrenger som inkludere eller ekskludere `Match`. Hvis `Include` er <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Filter&quot; name=&quot;Filter&quot; href=&quot;&quot;> </xref> -funksjonen returnerer delsettet med matrise som inneholder `Match` som en delstreng. Hvis `Include` er <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Filter&quot; name=&quot;Filter&quot; href=&quot;&quot;> </xref> -funksjonen returnerer delsettet med matrisen som ikke inneholder `Match` som en delstreng."
    - id: Compare
      type: Microsoft.VisualBasic.CompareMethod
      description: "Valgfritt. Numerisk verdi som angir hvilken type strengsammenligning skal brukes. Se &quot;innstillinger-verdier."
    return:
      type: System.String[]
      description: "Returnerer en nullbasert matrise som inneholder et delsett av en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> matrise basert på angitte filtervilkår."
  overload: Microsoft.VisualBasic.Strings.Filter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Source</code>er <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller er ikke en endimensjonal matrise."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Format(System.Object,System.String)
  id: Format(System.Object,System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Format(Object,String)
  nameWithType: Strings.Format(Object,String)
  fullName: Microsoft.VisualBasic.Strings.Format(Object,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en streng som er formatert i henhold til instruksjoner i et format <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk."
  remarks: "The <xref:System.String.Format%2A?displayProperty=fullName> method also provides similar functionality.  \n  \n If you are formatting a nonlocalized numeric string, you should use a user-defined numeric format to ensure that you get the look you want.  \n  \n If you try to format a number without specifying `Style`, the `Format` function provides functionality similar to the `Str` function, although it is internationally aware. However, positive numbers formatted as strings using the `Format` function don't include a leading space reserved for the sign of the value; those converted using the `Str` function retain the leading space.  \n  \n## Different Formats for Different Numeric Values  \n A user-defined format expression for numbers can have from one to three sections separated by semicolons. If the `Style` argument of the `Format` function contains one of the predefined numeric formats, only one section is allowed.  \n  \n|||  \n|-|-|  \n|If you use|This is the result|  \n|One section only|The format expression applies to all values.|  \n|Two sections|The first section applies to positive values and zeros; the second applies to negative values.|  \n|Three sections|The first section applies to positive values, the second applies to negative values, and the third applies to zeros.|  \n  \n The following example has two sections: the first defines the format for positive values and zeros; the second section defines the format for negative values. Since the `Style` argument of the `Format` function takes a string, it is enclosed by quotation marks.  \n  \n [!code-vb[VbVbalrStrings#18](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._134_1.vb)]  \n  \n If you include semicolons with nothing between them, the missing section is printed using the format of the positive value. For example, the following format displays positive and negative values using the format in the first section and displays `Zero` if the value is zero.  \n  \n [!code-vb[VbVbalrStrings#19](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._134_2.vb)]  \n  \n## Predefined Numeric Formats  \n The following table identifies the predefined numeric format names. These may be used by name as the `Style` argument for the `Format` function:  \n  \n|||  \n|-|-|  \n|Format name|Description|  \n|`General Number`, `G`, or `g`|Displays number with no thousand separator.<br /><br /> For example, `Format(&H3FA, \"g\")` returns `1018`.|  \n|`Currency`, `C`, or `c`|Displays number with thousand separator, if appropriate; displays two digits to the right of the decimal separator. Output is based on system locale settings.<br /><br /> For example, `Format(1234567, \"c\")` returns `$1,234,567.00`.|  \n|`Fixed`, `F`, or `f`|Displays at least one digit to the left and two digits to the right of the decimal separator.<br /><br /> For example, `Format(1234567, \"f\")` returns `1234567.00`.|  \n|`Standard`, `N`, or `n`|Displays number with thousand separator, at least one digit to the left and two digits to the right of the decimal separator.<br /><br /> For example, `Format(1234567, \"n\")` returns `1,234,567.00`.|  \n|`Percent`|Displays number multiplied by 100 with a percent sign (%) appended immediately to the right; always displays two digits to the right of the decimal separator.<br /><br /> For example, `Format(0.4744, \"Percent\")` returns `47.44%`.|  \n|`P`, or `p`|Displays number with thousandths separator multiplied by 100 with a percent sign (%) appended to the right and separated by a single space; always displays two digits to the right of the decimal separator.<br /><br /> For example, `Format(0.80345, \"p\")` returns `80.35 %`.|  \n|`Scientific`|Uses standard scientific notation, providing two significant digits.<br /><br /> For example, `Format(1234567, \"Scientific\")` returns `1.23E+06`.|  \n|`E`, or `e`|Uses standard scientific notation, providing six significant digits.<br /><br /> For example, `Format(1234567, \"e\")` returns `1.234567e+006`.|  \n|`D`, or `d`|Displays number as a string that contains the value of the number in Decimal (base 10) format. This option is supported for integral types (`Byte`, `Short`, `Integer`, `Long`) only.<br /><br /> For example, `Format(&H7F, \"d\")` returns `127`.|  \n|`X`, or `x`|Displays number as a string that contains the value of the number in Hexadecimal (base 16) format. This option is supported for integral types (`Byte`, `Short`, `Integer`, `Long`) only.<br /><br /> For example, `Format(127, \"x\")` returns `7f`.|  \n|`Yes/No`|Displays `No` if number is 0; otherwise, displays `Yes`.<br /><br /> For example, `Format(0, \"Yes/No\")` returns `No`.|  \n|`True/False`|Displays `False` if number is 0; otherwise, displays `True`.<br /><br /> For example, `Format(1, \"True/False\")` returns `True`.|  \n|`On/Off`|Displays `Off` if number is 0; otherwise, displays `On`.<br /><br /> For example, `Format(1, \"On/Off\")` returns `On`.|  \n  \n### Smart Device Developer Notes  \n The `Yes/No`, `True/False`, and `On/Off` formats are not supported.  \n  \n## User-Defined Numeric Formats  \n The following table identifies characters you can use to create user-defined number formats. These may be used to build the `Style` argument for the `Format` function:  \n  \n|||  \n|-|-|  \n|Character|Description|  \n|None|Displays the number with no formatting.|  \n|(`0`)|Digit placeholder. Displays a digit or a zero. If the expression has a digit in the position where the zero appears in the format string, display it; otherwise, displays a zero in that position.<br /><br /> If the number has fewer digits than there are zeros (on either side of the decimal) in the format expression, displays leading or trailing zeros. If the number has more digits to the right of the decimal separator than there are zeros to the right of the decimal separator in the format expression, rounds the number to as many decimal places as there are zeros. If the number has more digits to the left of the decimal separator than there are zeros to the left of the decimal separator in the format expression, displays the extra digits without modification.|  \n|(`#`)|Digit placeholder. Displays a digit or nothing. If the expression has a digit in the position where the `#` character appears in the format string, displays it; otherwise, displays nothing in that position.<br /><br /> This symbol works like the `0` digit placeholder, except that leading and trailing zeros aren't displayed if the number has fewer digits than there are `#` characters on either side of the decimal separator in the format expression.|  \n|(`.`)|Decimal placeholder. The decimal placeholder determines how many digits are displayed to the left and right of the decimal separator. If the format expression contains only `#` characters to the left of this symbol; numbers smaller than 1 begin with a decimal separator. To display a leading zero displayed with fractional numbers, use zero as the first digit placeholder to the left of the decimal separator. In some locales, a comma is used as the decimal separator. The actual character used as a decimal placeholder in the formatted output depends on the number format recognized by your system. Thus, you should use the period as the decimal placeholder in your formats even if you are in a locale that uses a comma as a decimal placeholder. The formatted string will appear in the format correct for the locale.|  \n|(`%`)|Percent placeholder. Multiplies the expression by 100. The percent character (`%`) is inserted in the position where it appears in the format string.|  \n|(`,`)|Thousand separator. The thousand separator separates thousands from hundreds within a number that has four or more places to the left of the decimal separator. Standard use of the thousand separator is specified if the format contains a thousand separator surrounded by digit placeholders (`0` or `#`).<br /><br /> A thousand separator immediately to the left of the decimal separator (whether or not a decimal is specified) or as the rightmost character in the string means \"scale the number by dividing it by 1,000, rounding as needed.\" Numbers smaller than 1,000 but greater or equal to 500 are displayed as `1`, and numbers smaller than 500 are displayed as `0`. Two adjacent thousand separators in this position scale by a factor of 1 million, and an additional factor of 1,000 for each additional separator.<br /><br /> Multiple separators in any position other than immediately to the left of the decimal separator or the rightmost position in the string are treated simply as specifying the use of a thousand separator. In some locales, a period is used as a thousand separator. The actual character used as the thousand separator in the formatted output depends on the Number Format recognized by your system. Thus, you should use the comma as the thousand separator in your formats even if you are in a locale that uses a period as a thousand separator. The formatted string will appear in the format correct for the locale.<br /><br /> For example, consider the three following format strings:<br /><br /> -   `\"#,0.\"`, which uses the thousands separator to format the number 100 million as the string \"100,000,000\".<br />-   `\"#0,.\"`, which uses scaling by a factor of one thousand to format the number 100 million as the string \"100000\".<br />-   `\"#,0,.\"`, which uses the thousands separator and scaling by one thousand to format the number 100 million as the string \"100,000\".|  \n|(`:`)|Time separator. In some locales, other characters may be used to represent the time separator. The time separator separates hours, minutes, and seconds when time values are formatted. The actual character used as the time separator in formatted output is determined by your system settings.|  \n|(`/`)|Date separator. In some locales, other characters may be used to represent the date separator. The date separator separates the day, month, and year when date values are formatted. The actual character used as the date separator in formatted output is determined by your system settings.|  \n|(`E-``E+``e-``e+`)|Scientific format. If the format expression contains at least one digit placeholder (`0` or `#`) to the left of `E-`, `E+`, `e-`, or `e+`, the number is displayed in scientific format and `E` or `e` is inserted between the number and its exponent. The number of digit placeholders to the left determines the number of digits in the exponent. Use `E-` or `e-` to place a minus sign next to negative exponents. Use `E+` or `e+` to place a minus sign next to negative exponents and a plus sign next to positive exponents. You must also include digit placeholders to the right of this symbol to get correct formatting.|  \n|`-` `+` `$` ( )|Literal characters. These characters are displayed exactly as typed in the format string. To display a character other than one of those listed, precede it with a backslash (`\\`) or enclose it in double quotation marks (\" \").|  \n|(`\\`)|Displays the next character in the format string. To display a character that has special meaning as a literal character, precede it with a backslash (`\\`). The backslash itself isn't displayed. Using a backslash is the same as enclosing the next character in double quotation marks. To display a backslash, use two backslashes (`\\\\`).<br /><br /> Examples of characters that can't be displayed as literal characters are the date-formatting and time-formatting characters (`a`, `c`, `d`, `h`, `m`, `n`, `p`, `q`, `s`, `t`, `w`, `y`, `/`, and `:`), the numeric-formatting characters (`#`, `0`, `%`, `E`, `e`, comma, and period), and the string-formatting characters (`@`, `&`, `<`, `>`, and `!`).|  \n|(`\"``ABC``\"`)|Displays the string inside the double quotation marks (\" \"). To include a string in the style argument from within code, you must use `Chr(34)` to enclose the text (`34` is the character code for a quotation mark (\")).|  \n  \n### Legacy Code Example  \n The following table contains some sample format expressions for numbers. (These examples all assume that your system's locale setting is English-U.S.) The first column contains the format strings for the `Style` argument of the `Format` function; the other columns contain the resulting output if the formatted data has the value given in the column headings.  \n  \n|||||  \n|-|-|-|-|  \n|Format (`Style`)|\"5\" formatted as|\"-5\" formatted as|\"0.5\" formatted as|  \n|`Zero-length string (\"\")`|`5`|`-5`|`0.5`|  \n|`0`|`5`|`-5`|`1`|  \n|`0.00`|`5.00`|`-5.00`|`0.50`|  \n|`#,##0`|`5`|`-5`|`1`|  \n|`$#,##0;($#,##0)`|`$5`|`($5)`|`$1`|  \n|`$#,##0.00;($#,##0.00)`|`$5.00`|`($5.00)`|`$0.50`|  \n|`0%`|`500%`|`-500%`|`50%`|  \n|`0.00%`|`500.00%`|`-500.00%`|`50.00%`|  \n|`0.00E+00`|`5.00E+00`|`-5.00E+00`|`5.00E-01`|  \n|`0.00E-00`|`5.00E00`|`-5.00E00`|`5.00E-01`|  \n  \n## Predefined Date/Time Formats  \n The following table identifies the predefined date and time format names. These may be used by name as the style argument for the `Format` function:  \n  \n|||  \n|-|-|  \n|Format Name|Description|  \n|`General Date`, or `G`|Displays a date and/or time. For example, `3/12/2008 11:07:31 AM`. Date display is determined by your application's current culture value.|  \n|`Long Date`, `Medium Date`, or `D`|Displays a date according to your current culture's long date format. For example, `Wednesday, March 12, 2008`.|  \n|`Short Date`, or `d`|Displays a date using your current culture's short date format. For example, `3/12/2008`.<br /><br /> The `d` character displays the day in a user-defined date format.|  \n|`Long Time`, `Medium Time`, or `T`|Displays a time using your current culture's long time format; typically includes hours, minutes, seconds. For example, `11:07:31 AM`.|  \n|`Short Time` or `t`|Displays a time using your current culture's short time format. For example, `11:07 AM`.<br /><br /> The `t` character displays `AM` or `PM` values for locales that use a 12-hour clock in a user-defined time format.|  \n|`f`|Displays the long date and short time according to your current culture's format. For example, `Wednesday, March 12, 2008 11:07 AM`.|  \n|`F`|Displays the long date and long time according to your current culture's format. For example, `Wednesday, March 12, 2008 11:07:31 AM`.|  \n|`g`|Displays the short date and short time according to your current culture's format. For example, `3/12/2008 11:07 AM`.|  \n|`M`, `m`|Displays the month and the day of a date. For example, `March 12`.<br /><br /> The `M` character displays the month in a user-defined date format. The `m` character displays the minutes in a user-defined time format.|  \n|`R`, `r`|Formats the date according to the <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A> property. For example, `Wed, 12 Mar 2008 11:07:31 GMT`. The formatted date does not adjust the value of the date and time. You must adjust the Date/Time value to GMT before calling the `Format` function.|  \n|`s`|Formats the date and time as a sortable index. For example, `2008-03-12T11:07:31`.<br /><br /> The `s` character displays the seconds in a user-defined time format.|  \n|`u`|Formats the date and time as a GMT sortable index. For example, `2008-03-12 11:07:31Z`.|  \n|`U`|Formats the date and time with the long date and long time as GMT. For example, `Wednesday, March 12, 2008 6:07:31 PM`.|  \n|`Y`, `y`|Formats the date as the year and month. For example, `March, 2008`.<br /><br /> The `Y` and `y` characters display the year in a user-defined date format.|  \n  \n For more information about the application's current culture information, see [How Culture Affects Strings in Visual Basic](~/add/includes/ajax-current-ext-md.md).  \n  \n## User-Defined Date/Time Formats  \n The following table shows characters you can use to create user-defined date/time formats. Unlike in earlier versions of [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], these format characters are case-sensitive.  \n  \n|||  \n|-|-|  \n|Character|Description|  \n|(`:`)|Time separator. In some locales, other characters may be used to represent the time separator. The time separator separates hours, minutes, and seconds when time values are formatted. The actual character that is used as the time separator in formatted output is determined by your application's current culture value.|  \n|(`/`)|Date separator. In some locales, other characters may be used to represent the date separator. The date separator separates the day, month, and year when date values are formatted. The actual character that is used as the date separator in formatted output is determined by your application's current culture.|  \n|(`%`)|Used to indicate that the following character should be read as a single-letter format without regard to any trailing letters. Also used to indicate that a single-letter format is read as a user-defined format. See what follows for additional details.|  \n|`d`|Displays the day as a number without a leading zero (for example, `1`). Use `%d` if this is the only character in your user-defined numeric format.|  \n|`dd`|Displays the day as a number with a leading zero (for example, `01`).|  \n|`ddd`|Displays the day as an abbreviation (for example, `Sun`).|  \n|`dddd`|Displays the day as a full name (for example, `Sunday`).|  \n|`M`|Displays the month as a number without a leading zero (for example, January is represented as `1`). Use `%M` if this is the only character in your user-defined numeric format.|  \n|`MM`|Displays the month as a number with a leading zero (for example, `01/12/01`).|  \n|`MMM`|Displays the month as an abbreviation (for example, `Jan`).|  \n|`MMMM`|Displays the month as a full month name (for example, `January`).|  \n|`gg`|Displays the period/era string (for example, `A.D.`).|  \n|`h`|Displays the hour as a number without leading zeros using the 12-hour clock (for example, `1:15:15 PM`). Use `%h` if this is the only character in your user-defined numeric format.|  \n|`hh`|Displays the hour as a number with leading zeros using the 12-hour clock (for example, `01:15:15 PM`).|  \n|`H`|Displays the hour as a number without leading zeros using the 24-hour clock (for example, `1:15:15`). Use `%H` if this is the only character in your user-defined numeric format.|  \n|`HH`|Displays the hour as a number with leading zeros using the 24-hour clock (for example, `01:15:15`).|  \n|`m`|Displays the minute as a number without leading zeros (for example, `12:1:15`). Use `%m` if this is the only character in your user-defined numeric format.|  \n|`mm`|Displays the minute as a number with leading zeros (for example, `12:01:15`).|  \n|`s`|Displays the second as a number without leading zeros (for example, `12:15:5`). Use `%s` if this is the only character in your user-defined numeric format.|  \n|`ss`|Displays the second as a number with leading zeros (for example, `12:15:05`).|  \n|`f`|Displays fractions of seconds. For example `ff` displays hundredths of seconds, whereas `ffff` displays ten-thousandths of seconds. You may use up to seven `f` symbols in your user-defined format. Use `%f` if this is the only character in your user-defined numeric format.|  \n|`t`|Uses the 12-hour clock and displays an uppercase `A` for any hour before noon; displays an uppercase `P` for any hour between noon and 11:59 P.M. Use `%t` if this is the only character in your user-defined numeric format.|  \n|`tt`|For locales that use a 12-hour clock, displays an uppercase `AM` with any hour before noon; displays an uppercase `PM` with any hour between noon and 11:59 P.M.<br /><br /> For locales that use a 24-hour clock, displays nothing.|  \n|`y`|Displays the year number (0-9) without leading zeros. Use `%y` if this is the only character in your user-defined numeric format.|  \n|`yy`|Displays the year in two-digit numeric format with a leading zero, if applicable.|  \n|`yyy`|Displays the year in four-digit numeric format.|  \n|`yyyy`|Displays the year in four-digit numeric format.|  \n|`z`|Displays the timezone offset without a leading zero (for example, `-8`). Use `%z` if this is the only character in your user-defined numeric format.|  \n|`zz`|Displays the timezone offset with a leading zero (for example, `-08`)|  \n|`zzz`|Displays the full timezone offset (for example, `-08:00`)|  \n  \n### Legacy Code Example  \n The following are examples of user-defined date and time formats for `December 7, 1958, 8:50 PM, 35 seconds`:  \n  \n|||  \n|-|-|  \n|Format|Displays|  \n|`M/d/yy`|`12/7/58`|  \n|`d-MMM`|`7-Dec`|  \n|`d-MMMM-yy`|`7-December-58`|  \n|`d MMMM`|`7 December`|  \n|`MMMM yy`|`December 58`|  \n|`hh:mm tt`|`08:50 PM`|  \n|`h:mm:ss t`|`8:50:35 P`|  \n|`H:mm`|`20:50`|  \n|`H:mm:ss`|`20:50:35`|  \n|`M/d/yyyy H:mm`|`12/7/1958 20:50`|  \n  \n### Smart Device Developer Notes  \n The minimum time resolution for a device is determined by the manufacturer of the device. If the time resolution for the device is coarse enough, the `f` format character returns 0 when run on that device."
  example:
  - "This example shows various uses of the `Format` function to format values using both `String` formats and user-defined formats. For the date separator (`/`), time separator (`:`), and the AM/PM indicators (`t` and `tt`), the actual formatted output displayed by your system depends on the locale settings the code is using. When times and dates are displayed in the development environment, the short time format and short date format of the code locale are used.  \n  \n> [!NOTE]\n>  For locales that use a 24-hour clock, the AM/PM indicators (`t` and `tt`) display nothing.  \n  \n [!code-vb[VbVbalrStrings#27](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._134_3.vb)]"
  syntax:
    content: public static string Format (object Expression, string Style = "");
    parameters:
    - id: Expression
      type: System.Object
      description: "Kreves. Et gyldig uttrykk."
    - id: Style
      type: System.String
      description: "Valgfritt. Et gyldig format for med navngitte eller en brukerdefinert <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk."
    return:
      type: System.String
      description: "Returnerer en streng som er formatert i henhold til instruksjoner i et format <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk."
  overload: Microsoft.VisualBasic.Strings.Format*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)
  id: FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: FormatCurrency(Object,Int32,TriState,TriState,TriState)
  nameWithType: Strings.FormatCurrency(Object,Int32,TriState,TriState,TriState)
  fullName: Microsoft.VisualBasic.Strings.FormatCurrency(Object,Int32,TriState,TriState,TriState)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer et uttrykk formatert som en valutaverdi som bruker valutasymbolet angitt i Kontrollpanel på systemet."
  remarks: "Når én eller flere valgfrie argumenter utelates, brukes datamaskinens samsvarende region innstillinger verdier i stedet.       Plasseringen av valutasymbolet i forhold til valutaverdien avgjøres av systemets regionale innstillinger.      > [!NOTE] > Alle innstillingsinformasjon kommer fra den nasjonale innstillingen for applikasjonen. Som standard blir som de regionale innstillingene i Kontrollpanel. Men det kan endres programmatisk ved hjelp av .NET Framework, bortsett fra null, som kommer fra det `Number` kategorien.       Den `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, og `GroupDigits` argumenter ta følgende TriState opplisting verdier.      |||   |-|-|   | Verdien | Beskrivelse |   | `TriState.True`| True |   | `TriState.False`| False |   | `TriState.UseDefault`| Datamaskinens regionale innstillinger |"
  example:
  - "The following example illustrates the use of the `FormatCurrency` function.  \n  \n [!code-vb[VbVbalrStrings#32](~/add/codesnippet/visualbasic/c6b3af93-c0fc-4dd7-8b87-_1.vb)]"
  syntax:
    content: public static string FormatCurrency (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);
    parameters:
    - id: Expression
      type: System.Object
      description: "Kreves. Uttrykket som skal formateres."
    - id: NumDigitsAfterDecimal
      type: System.Int32
      description: "Valgfritt. Numerisk verdi som angir hvor mange steder vises til høyre for desimaltegnet. Standardverdi er&1;, som angir at datamaskinens regionale innstillinger brukes."
    - id: IncludeLeadingDigit
      type: Microsoft.VisualBasic.TriState
      description: "Valgfritt. <xref href=&quot;Microsoft.VisualBasic.TriState&quot;></xref>opplisting som angir om en null vises for brøkdelen verdier. Se &quot;Merknader&quot; for verdier."
    - id: UseParensForNegativeNumbers
      type: Microsoft.VisualBasic.TriState
      description: "Valgfritt. <xref href=&quot;Microsoft.VisualBasic.TriState&quot;></xref>opplisting som angir om det skal plasseres negative verdier i parentes. Se &quot;Merknader&quot; for verdier."
    - id: GroupDigits
      type: Microsoft.VisualBasic.TriState
      description: "Valgfritt. <xref href=&quot;Microsoft.VisualBasic.TriState&quot;></xref>opplisting som angir om tall grupperes med gruppen skilletegn er angitt i regionale innstillinger for den datamaskinen. Se &quot;Merknader&quot; for verdier."
    return:
      type: System.String
      description: "Returnerer et uttrykk formatert som en valutaverdi som bruker valutasymbolet angitt i Kontrollpanel på systemet."
  overload: Microsoft.VisualBasic.Strings.FormatCurrency*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Antall sifre etter desimalpunktet er større enn 99."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Typen er numeriske."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)
  id: FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: FormatDateTime(DateTime,DateFormat)
  nameWithType: Strings.FormatDateTime(DateTime,DateFormat)
  fullName: Microsoft.VisualBasic.Strings.FormatDateTime(DateTime,DateFormat)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer et strenguttrykk som representerer en dato/klokkeslett-verdi."
  remarks: "Den `Date` datatypen alltid inneholder informasjon om både dato og klokkeslett. I forbindelse med typekonvertering vurderer Visual Basic 1/1/1 (januar 1 i året 1) er en nøytral verdi for dato og 00:00:00 (midnatt) er en nøytral verdi for tiden. Hvis du formaterer en `Date` verdien som en dato/klokkeslett-streng `FormatDateTime` inkluderer ikke nøytral verdier i Resultatstrengen. Hvis du konvertere #1/1/0001 for eksempel 9:30:&#00; til en streng, resultatet er &quot;9:30:00 AM&quot;; datoinformasjonen er deaktivert. Datoinformasjonen er imidlertid fortsatt finnes i opprinnelige `Date` verdi og kan gjenopprettes med funksjoner som `DatePart`.      > [!NOTE] > Hvis du sender den `Expression` argumentet som en `String` litteral, `FormatDateTime` tolker den i henhold til den <xref:System.Globalization.CultureInfo.CurrentCulture%2A>at programmet.</xref:System.Globalization.CultureInfo.CurrentCulture%2A> Imidlertid Hvis du sender den som en `Date` litteral, Bruk formatet #mm/dd/åååå # fordi `FormatDateTime` tolker alltid en `Date` litteral i henhold til engelsk (USA)-kultur. Dette er nødvendig, hvis et program som er utviklet og kodet ved hjelp av `Date` litteraler blant utføres, men deretter kjøres på en plattform med en annen kultur den `Date` litteraler kan analysere feil.       Den `NamedFormat` argument har følgende innstillinger.      |||   |-|-|   | Konstant | Beskrivelse |   | `DateFormat.GeneralDate`| Vis en dato og/eller klokkeslett. Vis en datodel som en kort dato. Hvis det er en time-del, kan du vise den som lang tid. Hvis den finnes, vise begge deler. |   | `DateFormat.LongDate`| Vise en dato ved hjelp av det lange datoformatet som er angitt i regionale innstillinger for datamaskinens. |   | `DateFormat.ShortDate`| Vis en dato med det korte datoformatet som er angitt i regionale innstillinger for datamaskinens. |   | `DateFormat.LongTime`| Vis et klokkeslett med klokkeslettformat som er angitt i regionale innstillinger for datamaskinens. |   | `DateFormat.ShortTime`| Et klokkeslett i 24-timers format (tt: mm). |"
  example:
  - "This example demonstrates the use of the `FormatDateTime` function.  \n  \n [!code-vb[VbVbalrStrings#3](~/add/codesnippet/visualbasic/12ae27ca-4a0f-4ea2-855e-_1.vb)]"
  syntax:
    content: public static string FormatDateTime (DateTime Expression, Microsoft.VisualBasic.DateFormat NamedFormat = Microsoft.VisualBasic.DateFormat.GeneralDate);
    parameters:
    - id: Expression
      type: System.DateTime
      description: "Kreves. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>uttrykket som skal formateres."
    - id: NamedFormat
      type: Microsoft.VisualBasic.DateFormat
      description: "Valgfritt. Numerisk verdi som angir dato/klokkeslett-format brukes. Hvis den utelates, <xref uid=&quot;langword_csharp_DateFormat.GeneralDate&quot; name=&quot;DateFormat.GeneralDate&quot; href=&quot;&quot;> </xref> brukes."
    return:
      type: System.String
      description: "Returnerer et strenguttrykk som representerer en dato/klokkeslett-verdi."
  overload: Microsoft.VisualBasic.Strings.FormatDateTime*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>NamedFormat</code>innstillingen er ikke gyldig."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)
  id: FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: FormatNumber(Object,Int32,TriState,TriState,TriState)
  nameWithType: Strings.FormatNumber(Object,Int32,TriState,TriState,TriState)
  fullName: Microsoft.VisualBasic.Strings.FormatNumber(Object,Int32,TriState,TriState,TriState)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer et uttrykk formatert som et tall."
  remarks: "Når én eller flere valgfrie argumenter utelates er verdiene for utelatte argumenter angitt av de nasjonale innstillingene.      > [!NOTE] > Alle innstillingsinformasjon kommer fra den nasjonale innstillingen for applikasjonen. Som standard blir som de regionale innstillingene i Kontrollpanel. Men kan det endres programmatisk ved hjelp av .NET Framework.       Den `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, og `GroupDigits` har følgende innstillinger.      |||   |-|-|   | Konstant | Beskrivelse |   | `TriState.True`| True |   | `TriState.False`| False |   | `TriState.UseDefault`| Datamaskinens regionale innstillinger |"
  example:
  - "This example demonstrates the `FormatNumber` function.  \n  \n [!code-vb[VbVbalrStrings#15](~/add/codesnippet/visualbasic/4c7d3c11-69f8-405b-a033-_1.vb)]"
  syntax:
    content: public static string FormatNumber (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);
    parameters:
    - id: Expression
      type: System.Object
      description: "Kreves. Uttrykket som skal formateres."
    - id: NumDigitsAfterDecimal
      type: System.Int32
      description: "Valgfritt. Numerisk verdi som angir hvor mange steder vises til høyre for desimaltegnet. Standardverdien er&1;, som angir at datamaskinens regionale innstillinger brukes."
    - id: IncludeLeadingDigit
      type: Microsoft.VisualBasic.TriState
      description: "Valgfritt. <xref href=&quot;Microsoft.VisualBasic.TriState&quot;></xref>konstant som angir om innledende 0 vises for brøkdelen verdier. Se &quot;innstillinger-verdier."
    - id: UseParensForNegativeNumbers
      type: Microsoft.VisualBasic.TriState
      description: "Valgfritt. <xref href=&quot;Microsoft.VisualBasic.TriState&quot;></xref>konstant som angir om å plassere negative verdier i parentes. Se &quot;innstillinger-verdier."
    - id: GroupDigits
      type: Microsoft.VisualBasic.TriState
      description: "Valgfritt. <xref href=&quot;Microsoft.VisualBasic.TriState&quot;></xref>konstant som angir om tall grupperes med gruppen skilletegn er angitt i de nasjonale innstillingene. Se &quot;innstillinger-verdier."
    return:
      type: System.String
      description: "Returnerer et uttrykk formatert som et tall."
  overload: Microsoft.VisualBasic.Strings.FormatNumber*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Typen er numeriske."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)
  id: FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: FormatPercent(Object,Int32,TriState,TriState,TriState)
  nameWithType: Strings.FormatPercent(Object,Int32,TriState,TriState,TriState)
  fullName: Microsoft.VisualBasic.Strings.FormatPercent(Object,Int32,TriState,TriState,TriState)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer et uttrykk formatert som en prosentverdi (det er, multiplisert med 100) med et etterfølgende %-tegn."
  remarks: "Når én eller flere valgfrie argumenter er utelatt, blir verdiene for utelatte argumenter angitt av de nasjonale innstillingene.      > [!NOTE] > Alle innstillingsinformasjon kommer fra den nasjonale innstillingen for applikasjonen. Som standard blir som de regionale innstillingene i Kontrollpanel. Men kan det endres programmatisk ved hjelp av .NET Framework.       Den `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, og `GroupDigits` har følgende innstillinger.      |||   |-|-|   | Konstant | Beskrivelse |   | `TriState.True`| True |   | `TriState.False`| False |   | `TriState.Default`| Datamaskinens regionale innstillinger |"
  example:
  - "This example illustrates the use of the `FormatPercent` function.  \n  \n [!code-vb[VbVbalrStrings#28](~/add/codesnippet/visualbasic/699b6dbf-5eeb-4a3e-a4b1-_1.vb)]"
  syntax:
    content: public static string FormatPercent (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);
    parameters:
    - id: Expression
      type: System.Object
      description: "Kreves. Uttrykket som skal formateres."
    - id: NumDigitsAfterDecimal
      type: System.Int32
      description: "Valgfritt. Numerisk verdi som angir hvor mange Plasser til høyre for desimaltegnet vises. Standardverdi er&1;, som angir de nasjonale innstillingene brukes."
    - id: IncludeLeadingDigit
      type: Microsoft.VisualBasic.TriState
      description: "Valgfritt. <xref href=&quot;Microsoft.VisualBasic.TriState&quot;></xref>konstant som indikerer om en null vises for brøkdelen verdier. Se &quot;innstillinger-verdier."
    - id: UseParensForNegativeNumbers
      type: Microsoft.VisualBasic.TriState
      description: "Valgfritt. <xref href=&quot;Microsoft.VisualBasic.TriState&quot;></xref>konstant som angir om det skal plasseres negative verdier i parentes. Se &quot;innstillinger-verdier."
    - id: GroupDigits
      type: Microsoft.VisualBasic.TriState
      description: "Valgfritt. <xref href=&quot;Microsoft.VisualBasic.TriState&quot;></xref>konstant som angir om tall grupperes med gruppen skilletegn er angitt i de nasjonale innstillingene. Se &quot;innstillinger-verdier."
    return:
      type: System.String
      description: "Returnerer et uttrykk formatert som en prosentverdi (det er, multiplisert med 100) med et etterfølgende %-tegn."
  overload: Microsoft.VisualBasic.Strings.FormatPercent*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Typen er numeriske."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)
  id: GetChar(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: GetChar(String,Int32)
  nameWithType: Strings.GetChar(String,Int32)
  fullName: Microsoft.VisualBasic.Strings.GetChar(String,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> verdien som representerer tegnet fra den angitte indeksen i den angitte strengen."
  remarks: "Hvis `Index` er mindre enn 1 eller større enn indeksen for det siste tegnet i `str`, en `ArgumentException` er et."
  example:
  - "This example shows how to use the `GetChar` function to return a character from a specified index in a `String`.  \n  \n [!code-vb[VbVbalrStrings#23](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._0_1.vb)]"
  syntax:
    content: public static char GetChar (string str, int Index);
    parameters:
    - id: str
      type: System.String
      description: "Kreves. Et gyldig <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk."
    - id: Index
      type: System.Int32
      description: "Kreves. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>uttrykket. Indeksen (1-baserte) tegn i `str` som skal returneres."
    return:
      type: System.Char
      description: "<xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;></xref>verdien som representerer tegnet fra den angitte indeksen i den angitte strengen."
  overload: Microsoft.VisualBasic.Strings.GetChar*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>str</code>er <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>, <code>Index</code> &lt; 1, eller <code>Index</code> er større enn indeksen for siste tegnet i <code>str</code>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  id: InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: InStr(String,String,CompareMethod)
  nameWithType: Strings.InStr(String,String,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.InStr(String,String,CompareMethod)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer et heltall som angir startplasseringen for den første forekomsten av én streng i en annen."
  remarks: "Vanligvis av `InStr` -funksjonen brukes under analysering av strenger.      > [!NOTE] > I `InStrB` i tidligere versjoner av Visual Basic-funksjonen returnerer et antall byte i stedet for en tegnposisjonen. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle Visual Basic 2005-strengene er i Unicode og `InStrB` støttes ikke lenger.       Den `Compare` innstillingene-argumentet er: |||   |-|-|-|   | Konstant | Verdien | Beskrivelse |   | `Binary`|0| Sammenligner binært |   | `Text`|1| Utfører en text-sammenligning |"
  example:
  - "This example uses the `InStr` function to return the position of the first occurrence of one string within another.  \n  \n [!code-vb[VbVbalrStrings#8](~/add/codesnippet/visualbasic/f1b47808-d5f4-408b-b1fc-_1.vb)]"
  syntax:
    content: public static int InStr (string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);
    parameters:
    - id: String1
      type: System.String
      description: "Kreves. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>uttrykket som det søkes etter."
    - id: String2
      type: System.String
      description: "Kreves. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>uttrykket søkes etter."
    - id: Compare
      type: Microsoft.VisualBasic.CompareMethod
      description: "Valgfritt. Angir typen strengsammenligning. Hvis `Compare` utelates, den <xref uid=&quot;langword_csharp_Option Compare&quot; name=&quot;Option Compare&quot; href=&quot;&quot;> </xref> innstillingen bestemmer typen sammenligning."
    return:
      type: System.Int32
      description: "<table><tbody><tr><td> Hvis       </td><td> Returnerer InStr       </td></tr><tr><td>           <code>String1</code>er nullengde eller<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref></td><td> 0       </td></tr><tr><td>           <code>String2</code>er nullengde eller<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref></td><td> Startposisjonen for søket, som har standardverdien det en feil.       </td></tr><tr><td>           <code>String2</code>Finner ikke       </td><td> 0       </td></tr><tr><td>           <code>String2</code>ikke finnes i<code>String1</code></td><td> Posisjonen der samsvarer begynner       </td></tr><tr><td></td><td></td></tr></tbody></table>"
  overload: Microsoft.VisualBasic.Strings.InStr*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  id: InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: InStr(Int32,String,String,CompareMethod)
  nameWithType: Strings.InStr(Int32,String,String,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.InStr(Int32,String,String,CompareMethod)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer et heltall som angir startplasseringen for den første forekomsten av én streng i en annen."
  remarks: "Vanligvis av `InStr` -funksjonen brukes under analysering av strenger.      > [!NOTE] > I `InStrB` i tidligere versjoner av Visual Basic-funksjonen returnerer et antall byte i stedet for en tegnposisjonen. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle Visual Basic 2005-strengene er i Unicode og `InStrB` støttes ikke lenger.       Den `Compare` innstillingene-argumentet er: |||   |-|-|-|   | Konstant | Verdien | Beskrivelse |   | `Binary`|0| Sammenligner binært |   | `Text`|1| Utfører en text-sammenligning |"
  example:
  - "This example uses the `InStr` function to return the position of the first occurrence of one string within another.  \n  \n [!code-vb[VbVbalrStrings#8](~/add/codesnippet/visualbasic/087e182b-78be-4d9a-be91-_1.vb)]"
  syntax:
    content: public static int InStr (int Start, string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);
    parameters:
    - id: Start
      type: System.Int32
      description: "Valgfritt. Numerisk uttrykk som angir startplasseringen for hvert søk. Hvis den utelates, starter Søk på det en feil. Startindeksen er basert på 1."
    - id: String1
      type: System.String
      description: "Kreves. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>uttrykket som det søkes etter."
    - id: String2
      type: System.String
      description: "Kreves. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>uttrykket søkes etter."
    - id: Compare
      type: Microsoft.VisualBasic.CompareMethod
      description: "Valgfritt. Angir typen strengsammenligning. Hvis `Compare` utelates, den <xref uid=&quot;langword_csharp_Option Compare&quot; name=&quot;Option Compare&quot; href=&quot;&quot;> </xref> innstillingen bestemmer typen sammenligning."
    return:
      type: System.Int32
      description: "<table><tbody><tr><td> Hvis       </td><td> Returnerer InStr       </td></tr><tr><td>           <code>String1</code>er nullengde eller<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref></td><td> 0       </td></tr><tr><td>           <code>String2</code>er nullengde eller<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref></td><td>           <code>start</code>         </td></tr><tr><td>           <code>String2</code>Finner ikke       </td><td> 0       </td></tr><tr><td>           <code>String2</code>ikke finnes i<code>String1</code></td><td> Posisjonen der samsvarer begynner       </td></tr><tr><td>           <code>Start</code>&gt; lengden på<code>String1</code></td><td> 0       </td></tr></tbody></table>"
  overload: Microsoft.VisualBasic.Strings.InStr*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Start</code> &lt; 1."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)
  id: InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: InStrRev(String,String,Int32,CompareMethod)
  nameWithType: Strings.InStrRev(String,String,Int32,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.InStrRev(String,String,Int32,CompareMethod)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer posisjonen for den første forekomsten av én streng i en annen, fra høyre side av strengen."
  remarks: "Legg merke til at syntaksen for den `InStrRev` funksjonen er ikke identisk med syntaksen for den `InStr` funksjonen.       Den `Compare` argumentet kan ha følgende verdier.      |||   |-|-|   | Konstant | Beskrivelse |   | `Binary`| Sammenligner binært. |   | `Text`| Utfører en tekstform sammenligning. |"
  example:
  - "This example demonstrates the use of the `InStrRev` function.  \n  \n [!code-vb[VbVbalrStrings#26](~/add/codesnippet/visualbasic/ee8ba742-f981-4eca-b754-_1.vb)]"
  syntax:
    content: public static int InStrRev (string StringCheck, string StringMatch, int Start = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);
    parameters:
    - id: StringCheck
      type: System.String
      description: "Kreves. Strenguttrykk det søkes etter."
    - id: StringMatch
      type: System.String
      description: "Kreves. Strenguttrykk det søkes etter."
    - id: Start
      type: System.Int32
      description: "Valgfritt. Angi engangsbaserte startplasseringen for hvert søk starter fra venstre side av strengen numerisk uttrykk. Hvis `Start` er utelatt deretter brukes-1, betyr søket starter på den siste tegnposisjonen. Søk fortsetter deretter fra høyre mot venstre."
    - id: Compare
      type: Microsoft.VisualBasic.CompareMethod
      description: "Valgfritt. Numerisk verdi som angir hvilken type sammenligning skal brukes under evaluering av delstrenger. Hvis den utelates, utføres binært. Se innstillinger for verdier."
    return:
      type: System.Int32
      description: "<table><tbody><tr><td> Hvis       </td><td> Returnerer InStrRev       </td></tr><tr><td>           <code>StringCheck</code>er en tom streng       </td><td> 0       </td></tr><tr><td>           <code>StringMatch</code>er en tom streng       </td><td>           <code>Start</code>         </td></tr><tr><td>           <code>StringMatch</code>Finner ikke       </td><td> 0       </td></tr><tr><td>           <code>StringMatch</code>ikke finnes i<code>StringCheck</code></td><td> Posisjonen der den første forekomsten er funnet, starter på høyre side av strengen.       </td></tr><tr><td>           <code>Start</code>er større enn lengden på<code>StringMatch</code></td><td> 0       </td></tr></tbody></table>"
  overload: Microsoft.VisualBasic.Strings.InStrRev*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Start</code>= 0 or <code>Start</code> &lt; -1."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)
  id: Join(System.Object[],System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Join(Object[],String)
  nameWithType: Strings.Join(Object[],String)
  fullName: Microsoft.VisualBasic.Strings.Join(Object[],String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en streng som opprettes ved å koble sammen en rekke understrenger i en matrise."
  remarks: "Det er en paritet mellom den `Join` og `Split` funksjoner. Den `Join` funksjonen tar en matrise av strenger, og slår dem ved hjelp av en skilletegn streng, for å returnere en enkelt streng. Den `Split` funksjonen tar en streng, og skiller på skilletegn, som returnerer en matrise med strenger. En viktig forskjell er imidlertid som `Join` kan koble sammen strenger med alle skilletegn strenger `Split` kan bare skille strenger med et enkelttegn skilletegn."
  example:
  - "The following example demonstrates how to use the `Join` function to create a list from several strings.  \n  \n [!code-vb[VbVbalrStrings#10](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._160_1.vb)]"
  syntax:
    content: public static string Join (object[] SourceArray, string Delimiter = " ");
    parameters:
    - id: SourceArray
      type: System.Object[]
      description: "Kreves. Endimensjonal matrise som inneholder delstrenger som skal føyes sammen."
    - id: Delimiter
      type: System.String
      description: "Valgfritt. En streng, som brukes til å skille understrenger i den returnerte strengen. Hvis den utelates, mellomromstegnet (&quot;&quot;) er brukt. Hvis `Delimiter` er en tom streng (&quot;&quot;) eller <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>, alle elementer i listen er satt sammen uten skilletegn."
    return:
      type: System.String
      description: "Returnerer en streng som opprettes ved å koble sammen en rekke understrenger i en matrise."
  overload: Microsoft.VisualBasic.Strings.Join*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>SourceArray</code>er ikke en filterkontekstens."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Join(System.String[],System.String)
  id: Join(System.String[],System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Join(String[],String)
  nameWithType: Strings.Join(String[],String)
  fullName: Microsoft.VisualBasic.Strings.Join(String[],String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en streng som opprettes ved å koble sammen en rekke understrenger i en matrise."
  remarks: "Det er en paritet mellom den `Join` og `Split` funksjoner. Den `Join` funksjonen tar en matrise av strenger, og slår dem ved hjelp av en skilletegn streng, for å returnere en enkelt streng. Den `Split` funksjonen tar en streng, og skiller på skilletegn, som returnerer en matrise med strenger. En viktig forskjell er imidlertid som `Join` kan koble sammen strenger med alle skilletegn strenger `Split` kan bare skille strenger med et enkelttegn skilletegn."
  example:
  - "The following example demonstrates how to use the `Join` function to create a list from several strings.  \n  \n [!code-vb[VbVbalrStrings#10](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._124_1.vb)]"
  syntax:
    content: public static string Join (string[] SourceArray, string Delimiter = " ");
    parameters:
    - id: SourceArray
      type: System.String[]
      description: "Kreves. Endimensjonal matrise som inneholder delstrenger som skal føyes sammen."
    - id: Delimiter
      type: System.String
      description: "Valgfritt. En streng, som brukes til å skille understrenger i den returnerte strengen. Hvis den utelates, mellomromstegnet (&quot;&quot;) er brukt. Hvis `Delimiter` er en tom streng (&quot;&quot;) eller <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>, alle elementer i listen er satt sammen uten skilletegn."
    return:
      type: System.String
      description: "Returnerer en streng som opprettes ved å koble sammen en rekke understrenger i en matrise."
  overload: Microsoft.VisualBasic.Strings.Join*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>SourceArray</code>er ikke en filterkontekstens."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.LCase(System.Char)
  id: LCase(System.Char)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: LCase(Char)
  nameWithType: Strings.LCase(Char)
  fullName: Microsoft.VisualBasic.Strings.LCase(Char)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en streng eller et tegn som er konvertert til små bokstaver."
  remarks: "Bare store bokstaver er konvertert til små bokstaver. alle små bokstaver og tegn endres ikke.       Denne funksjonen bruker programmets kultur informasjonen når du redigerer strengen slik at små endringene er nødvendig for den nasjonale innstillingen programmet er i bruk.      > [!IMPORTANT] > Hvis programmet gjør sikkerhet avgjørelsene som er basert på resultatet av en sammenligning eller tilfelle endre operasjon, og deretter operasjonen skal bruke den <xref:System.String.Compare%2A?displayProperty=fullName>metoden og pass <xref:System.StringComparison>eller <xref:System.StringComparison>for den `comparisonType` argument.</xref:System.StringComparison> </xref:System.StringComparison> </xref:System.String.Compare%2A?displayProperty=fullName> Hvis du vil ha mer informasjon, se [hvordan kultur påvirker strenger i Visual Basic](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This example uses the `LCase` function to return a lowercase version of a string.  \n  \n [!code-vb[VbVbalrStrings#12](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._236_1.vb)]"
  syntax:
    content: public static char LCase (char Value);
    parameters:
    - id: Value
      type: System.Char
      description: "Kreves. Et gyldig <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> eller <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> uttrykk."
    return:
      type: System.Char
      description: "Returnerer en streng eller et tegn som er konvertert til små bokstaver."
  overload: Microsoft.VisualBasic.Strings.LCase*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.LCase(System.String)
  id: LCase(System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: LCase(String)
  nameWithType: Strings.LCase(String)
  fullName: Microsoft.VisualBasic.Strings.LCase(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en streng eller et tegn som er konvertert til små bokstaver."
  remarks: "Bare store bokstaver er konvertert til små bokstaver. alle små bokstaver og tegn endres ikke.       Denne funksjonen bruker programmets kultur informasjonen når du redigerer strengen slik at små endringene er nødvendig for den nasjonale innstillingen programmet er i bruk.      > [!IMPORTANT] > Hvis programmet gjør sikkerhet avgjørelsene som er basert på resultatet av en sammenligning eller tilfelle endre operasjon, og deretter operasjonen skal bruke den <xref:System.String.Compare%2A?displayProperty=fullName>metoden og pass <xref:System.StringComparison>eller <xref:System.StringComparison>for den `comparisonType` argument.</xref:System.StringComparison> </xref:System.StringComparison> </xref:System.String.Compare%2A?displayProperty=fullName> Hvis du vil ha mer informasjon, se [hvordan kultur påvirker strenger i Visual Basic](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This example uses the `LCase` function to return a lowercase version of a string.  \n  \n [!code-vb[VbVbalrStrings#12](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._214_1.vb)]"
  syntax:
    content: public static string LCase (string Value);
    parameters:
    - id: Value
      type: System.String
      description: "Kreves. Et gyldig <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> eller <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> uttrykk."
    return:
      type: System.String
      description: "Returnerer en streng eller et tegn som er konvertert til små bokstaver."
  overload: Microsoft.VisualBasic.Strings.LCase*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)
  id: Left(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Left(String,Int32)
  nameWithType: Strings.Left(String,Int32)
  fullName: Microsoft.VisualBasic.Strings.Left(String,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en streng som inneholder et angitt antall tegn fra venstre side av en streng."
  remarks: "Antall tegn i `str`, bruker du `Len` funksjonen. Hvis det brukes i et Windows Forms-program, eller andre klasse som ikke har en `Left` -egenskapen, må du fullstendig kvalifisert funksjonen med `Microsoft.VisualBasic.Left`.      > [!NOTE] > I `LeftB` i tidligere versjoner av Visual Basic-funksjonen returnerer en streng i byte i stedet for tegn. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle gjeldende Visual Basic strengene er i Unicode og `LeftB` støttes ikke lenger."
  example:
  - "This example demonstrates the use of the `Left` function to return a substring of a given `String`. In a class that has a `Left` property, it may be necessary to fully qualify the `Left` function.  \n  \n [!code-vb[VbVbalrStrings#20](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._139_1.vb)]"
  syntax:
    content: public static string Left (string str, int Length);
    parameters:
    - id: str
      type: System.String
      description: "Kreves. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>uttrykk som inneholder lengst til venstre, returneres."
    - id: Length
      type: System.Int32
      description: "Kreves. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>uttrykket. Numerisk uttrykk som angir hvor mange tegn som skal returneres. 0 betyr en tom streng (&quot;&quot;), returneres. Hvis større enn eller lik antallet tegn i `str`, returneres hele strengen."
    return:
      type: System.String
      description: "Returnerer en streng som inneholder et angitt antall tegn fra venstre side av en streng."
  overload: Microsoft.VisualBasic.Strings.Left*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Length</code> &lt; 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.Boolean)
  id: Len(System.Boolean)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(Boolean)
  nameWithType: Strings.Len(Boolean)
  fullName: Microsoft.VisualBasic.Strings.Len(Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  remarks: "Med brukerdefinerte typer og `Object` variabler i `Len` -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den `FilePut` funksjonen. Hvis en `Object` inneholder en `String`, returneres lengden på strengen. Hvis en `Object` inneholder en annen type, returneres størrelsen på objektet som skrives til filen av den `FilePut` funksjonen.       Den `VBFixedString` attributtet kan brukes til streng feltene i objekter som viser størrelsen på streng, i byte når skrevet til disken. Den `Len` funksjonen bruker den `VBFixedString` attributt hvis den er tilgjengelig når størrelsen på `Object` variabler.      > [!NOTE] > Den `Len` funksjonen kan ikke fastsette faktisk antall lagrede byte som kreves når det brukes med variabel lengde strenger i brukerdefinerte datatyper.      > [!NOTE] > I `LenB` i tidligere versjoner av Visual Basic-funksjonen returnerer antall byte i en streng i stedet for tegn. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle gjeldende Visual Basic strengene er i Unicode og `LenB` støttes ikke lenger.      ## Smart enheten Utviklermerknader den `Len` funksjonen godtar bare `String` og `Object` variabler som parametere. Hvis en `Object` inneholder en `String`, returneres lengden på den `String`. Hvis parameteren er NULL `Object` -referanse, returnerer funksjonen null. Hvis en `Object` inneholder en annen type, et unntak."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._155_1.vb)]"
  syntax:
    content: public static int Len (bool Expression);
    parameters:
    - id: Expression
      type: System.Boolean
      description: "Et gyldig <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk eller en variabel navn. Hvis `Expression` er av typen <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> funksjonen."
    return:
      type: System.Int32
      description: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.Byte)
  id: Len(System.Byte)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(Byte)
  nameWithType: Strings.Len(Byte)
  fullName: Microsoft.VisualBasic.Strings.Len(Byte)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  remarks: "Med brukerdefinerte typer og `Object` variabler i `Len` -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den `FilePut` funksjonen. Hvis en `Object` inneholder en `String`, returneres lengden på strengen. Hvis en `Object` inneholder en annen type, returneres størrelsen på objektet som skrives til filen av den `FilePut` funksjonen.       Den `VBFixedString` attributtet kan brukes til streng feltene i objekter som viser størrelsen på streng, i byte når skrevet til disken. Den `Len` funksjonen bruker den `VBFixedString` attributt hvis den er tilgjengelig når størrelsen på `Object` variabler.      > [!NOTE] > Den `Len` funksjonen kan ikke fastsette faktisk antall lagrede byte som kreves når det brukes med variabel lengde strenger i brukerdefinerte datatyper.      > [!NOTE] > I `LenB` i tidligere versjoner av Visual Basic-funksjonen returnerer antall byte i en streng i stedet for tegn. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle gjeldende Visual Basic strengene er i Unicode og `LenB` støttes ikke lenger.      ## Smart enheten Utviklermerknader den `Len` funksjonen godtar bare `String` og `Object` variabler som parametere. Hvis en `Object` inneholder en `String`, returneres lengden på den `String`. Hvis parameteren er NULL `Object` -referanse, returnerer funksjonen null. Hvis en `Object` inneholder en annen type, et unntak."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._157_1.vb)]"
  syntax:
    content: public static int Len (byte Expression);
    parameters:
    - id: Expression
      type: System.Byte
      description: "Et gyldig <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk eller en variabel navn. Hvis `Expression` er av typen <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> funksjonen."
    return:
      type: System.Int32
      description: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.Char)
  id: Len(System.Char)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(Char)
  nameWithType: Strings.Len(Char)
  fullName: Microsoft.VisualBasic.Strings.Len(Char)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  remarks: "Med brukerdefinerte typer og `Object` variabler i `Len` -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den `FilePut` funksjonen. Hvis en `Object` inneholder en `String`, returneres lengden på strengen. Hvis en `Object` inneholder en annen type, returneres størrelsen på objektet som skrives til filen av den `FilePut` funksjonen.       Den `VBFixedString` attributtet kan brukes til streng feltene i objekter som viser størrelsen på streng, i byte når skrevet til disken. Den `Len` funksjonen bruker den `VBFixedString` attributt hvis den er tilgjengelig når størrelsen på `Object` variabler.      > [!NOTE] > Den `Len` funksjonen kan ikke fastsette faktisk antall lagrede byte som kreves når det brukes med variabel lengde strenger i brukerdefinerte datatyper.      > [!NOTE] > I `LenB` i tidligere versjoner av Visual Basic-funksjonen returnerer antall byte i en streng i stedet for tegn. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle gjeldende Visual Basic strengene er i Unicode og `LenB` støttes ikke lenger.      ## Smart enheten Utviklermerknader den `Len` funksjonen godtar bare `String` og `Object` variabler som parametere. Hvis en `Object` inneholder en `String`, returneres lengden på den `String`. Hvis parameteren er NULL `Object` -referanse, returnerer funksjonen null. Hvis en `Object` inneholder en annen type, et unntak."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._159_1.vb)]"
  syntax:
    content: public static int Len (char Expression);
    parameters:
    - id: Expression
      type: System.Char
      description: "Et gyldig <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk eller en variabel navn. Hvis `Expression` er av typen <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> funksjonen."
    return:
      type: System.Int32
      description: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.DateTime)
  id: Len(System.DateTime)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(DateTime)
  nameWithType: Strings.Len(DateTime)
  fullName: Microsoft.VisualBasic.Strings.Len(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  remarks: "Med brukerdefinerte typer og `Object` variabler i `Len` -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den `FilePut` funksjonen. Hvis en `Object` inneholder en `String`, returneres lengden på strengen. Hvis en `Object` inneholder en annen type, returneres størrelsen på objektet som skrives til filen av den `FilePut` funksjonen.       Den `VBFixedString` attributtet kan brukes til streng feltene i objekter som viser størrelsen på streng, i byte når skrevet til disken. Den `Len` funksjonen bruker den `VBFixedString` attributt hvis den er tilgjengelig når størrelsen på `Object` variabler.      > [!NOTE] > Den `Len` funksjonen kan ikke fastsette faktisk antall lagrede byte som kreves når det brukes med variabel lengde strenger i brukerdefinerte datatyper.      > [!NOTE] > I `LenB` i tidligere versjoner av Visual Basic-funksjonen returnerer antall byte i en streng i stedet for tegn. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle gjeldende Visual Basic strengene er i Unicode og `LenB` støttes ikke lenger.      ## Smart enheten Utviklermerknader den `Len` funksjonen godtar bare `String` og `Object` variabler som parametere. Hvis en `Object` inneholder en `String`, returneres lengden på den `String`. Hvis parameteren er NULL `Object` -referanse, returnerer funksjonen null. Hvis en `Object` inneholder en annen type, et unntak."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._5_1.vb)]"
  syntax:
    content: public static int Len (DateTime Expression);
    parameters:
    - id: Expression
      type: System.DateTime
      description: "Et gyldig <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk eller en variabel navn. Hvis `Expression` er av typen <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> funksjonen."
    return:
      type: System.Int32
      description: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.Decimal)
  id: Len(System.Decimal)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(Decimal)
  nameWithType: Strings.Len(Decimal)
  fullName: Microsoft.VisualBasic.Strings.Len(Decimal)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  remarks: "Med brukerdefinerte typer og `Object` variabler i `Len` -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den `FilePut` funksjonen. Hvis en `Object` inneholder en `String`, returneres lengden på strengen. Hvis en `Object` inneholder en annen type, returneres størrelsen på objektet som skrives til filen av den `FilePut` funksjonen.       Den `VBFixedString` attributtet kan brukes til streng feltene i objekter som viser størrelsen på streng, i byte når skrevet til disken. Den `Len` funksjonen bruker den `VBFixedString` attributt hvis den er tilgjengelig når størrelsen på `Object` variabler.      > [!NOTE] > Den `Len` funksjonen kan ikke fastsette faktisk antall lagrede byte som kreves når det brukes med variabel lengde strenger i brukerdefinerte datatyper.      > [!NOTE] > I `LenB` i tidligere versjoner av Visual Basic-funksjonen returnerer antall byte i en streng i stedet for tegn. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle gjeldende Visual Basic strengene er i Unicode og `LenB` støttes ikke lenger.      ## Smart enheten Utviklermerknader den `Len` funksjonen godtar bare `String` og `Object` variabler som parametere. Hvis en `Object` inneholder en `String`, returneres lengden på den `String`. Hvis parameteren er NULL `Object` -referanse, returnerer funksjonen null. Hvis en `Object` inneholder en annen type, et unntak."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._30_1.vb)]"
  syntax:
    content: public static int Len (decimal Expression);
    parameters:
    - id: Expression
      type: System.Decimal
      description: "Et gyldig <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk eller en variabel navn. Hvis `Expression` er av typen <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> funksjonen."
    return:
      type: System.Int32
      description: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.Double)
  id: Len(System.Double)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(Double)
  nameWithType: Strings.Len(Double)
  fullName: Microsoft.VisualBasic.Strings.Len(Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  remarks: "Med brukerdefinerte typer og `Object` variabler i `Len` -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den `FilePut` funksjonen. Hvis en `Object` inneholder en `String`, returneres lengden på strengen. Hvis en `Object` inneholder en annen type, returneres størrelsen på objektet som skrives til filen av den `FilePut` funksjonen.       Den `VBFixedString` attributtet kan brukes til streng feltene i objekter som viser størrelsen på streng, i byte når skrevet til disken. Den `Len` funksjonen bruker den `VBFixedString` attributt hvis den er tilgjengelig når størrelsen på `Object` variabler.      > [!NOTE] > Den `Len` funksjonen kan ikke fastsette faktisk antall lagrede byte som kreves når det brukes med variabel lengde strenger i brukerdefinerte datatyper.      > [!NOTE] > I `LenB` i tidligere versjoner av Visual Basic-funksjonen returnerer antall byte i en streng i stedet for tegn. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle gjeldende Visual Basic strengene er i Unicode og `LenB` støttes ikke lenger.      ## Smart enheten Utviklermerknader den `Len` funksjonen godtar bare `String` og `Object` variabler som parametere. Hvis en `Object` inneholder en `String`, returneres lengden på den `String`. Hvis parameteren er NULL `Object` -referanse, returnerer funksjonen null. Hvis en `Object` inneholder en annen type, et unntak."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._173_1.vb)]"
  syntax:
    content: public static int Len (double Expression);
    parameters:
    - id: Expression
      type: System.Double
      description: "Et gyldig <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk eller en variabel navn. Hvis `Expression` er av typen <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> funksjonen."
    return:
      type: System.Int32
      description: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.Int16)
  id: Len(System.Int16)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(Int16)
  nameWithType: Strings.Len(Int16)
  fullName: Microsoft.VisualBasic.Strings.Len(Int16)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  remarks: "Med brukerdefinerte typer og `Object` variabler i `Len` -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den `FilePut` funksjonen. Hvis en `Object` inneholder en `String`, returneres lengden på strengen. Hvis en `Object` inneholder en annen type, returneres størrelsen på objektet som skrives til filen av den `FilePut` funksjonen.       Den `VBFixedString` attributtet kan brukes til streng feltene i objekter som viser størrelsen på streng, i byte når skrevet til disken. Den `Len` funksjonen bruker den `VBFixedString` attributt hvis den er tilgjengelig når størrelsen på `Object` variabler.      > [!NOTE] > Den `Len` funksjonen kan ikke fastsette faktisk antall lagrede byte som kreves når det brukes med variabel lengde strenger i brukerdefinerte datatyper.      > [!NOTE] > I `LenB` i tidligere versjoner av Visual Basic-funksjonen returnerer antall byte i en streng i stedet for tegn. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle gjeldende Visual Basic strengene er i Unicode og `LenB` støttes ikke lenger.      ## Smart enheten Utviklermerknader den `Len` funksjonen godtar bare `String` og `Object` variabler som parametere. Hvis en `Object` inneholder en `String`, returneres lengden på den `String`. Hvis parameteren er NULL `Object` -referanse, returnerer funksjonen null. Hvis en `Object` inneholder en annen type, et unntak."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._198_1.vb)]"
  syntax:
    content: public static int Len (short Expression);
    parameters:
    - id: Expression
      type: System.Int16
      description: "Et gyldig <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk eller en variabel navn. Hvis `Expression` er av typen <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> funksjonen."
    return:
      type: System.Int32
      description: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.Int32)
  id: Len(System.Int32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(Int32)
  nameWithType: Strings.Len(Int32)
  fullName: Microsoft.VisualBasic.Strings.Len(Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  remarks: "Med brukerdefinerte typer og `Object` variabler i `Len` -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den `FilePut` funksjonen. Hvis en `Object` inneholder en `String`, returneres lengden på strengen. Hvis en `Object` inneholder en annen type, returneres størrelsen på objektet som skrives til filen av den `FilePut` funksjonen.       Den `VBFixedString` attributtet kan brukes til streng feltene i objekter som viser størrelsen på streng, i byte når skrevet til disken. Den `Len` funksjonen bruker den `VBFixedString` attributt hvis den er tilgjengelig når størrelsen på `Object` variabler.      > [!NOTE] > Den `Len` funksjonen kan ikke fastsette faktisk antall lagrede byte som kreves når det brukes med variabel lengde strenger i brukerdefinerte datatyper.      > [!NOTE] > I `LenB` i tidligere versjoner av Visual Basic-funksjonen returnerer antall byte i en streng i stedet for tegn. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle gjeldende Visual Basic strengene er i Unicode og `LenB` støttes ikke lenger.      ## Smart enheten Utviklermerknader den `Len` funksjonen godtar bare `String` og `Object` variabler som parametere. Hvis en `Object` inneholder en `String`, returneres lengden på den `String`. Hvis parameteren er NULL `Object` -referanse, returnerer funksjonen null. Hvis en `Object` inneholder en annen type, et unntak."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._99_1.vb)]"
  syntax:
    content: public static int Len (int Expression);
    parameters:
    - id: Expression
      type: System.Int32
      description: "Et gyldig <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk eller en variabel navn. Hvis `Expression` er av typen <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> funksjonen."
    return:
      type: System.Int32
      description: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.Int64)
  id: Len(System.Int64)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(Int64)
  nameWithType: Strings.Len(Int64)
  fullName: Microsoft.VisualBasic.Strings.Len(Int64)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  remarks: "Med brukerdefinerte typer og `Object` variabler i `Len` -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den `FilePut` funksjonen. Hvis en `Object` inneholder en `String`, returneres lengden på strengen. Hvis en `Object` inneholder en annen type, returneres størrelsen på objektet som skrives til filen av den `FilePut` funksjonen.       Den `VBFixedString` attributtet kan brukes til streng feltene i objekter som viser størrelsen på streng, i byte når skrevet til disken. Den `Len` funksjonen bruker den `VBFixedString` attributt hvis den er tilgjengelig når størrelsen på `Object` variabler.      > [!NOTE] > Den `Len` funksjonen kan ikke fastsette faktisk antall lagrede byte som kreves når det brukes med variabel lengde strenger i brukerdefinerte datatyper.      > [!NOTE] > I `LenB` i tidligere versjoner av Visual Basic-funksjonen returnerer antall byte i en streng i stedet for tegn. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle gjeldende Visual Basic strengene er i Unicode og `LenB` støttes ikke lenger.      ## Smart enheten Utviklermerknader den `Len` funksjonen godtar bare `String` og `Object` variabler som parametere. Hvis en `Object` inneholder en `String`, returneres lengden på den `String`. Hvis parameteren er NULL `Object` -referanse, returnerer funksjonen null. Hvis en `Object` inneholder en annen type, et unntak."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._162_1.vb)]"
  syntax:
    content: public static int Len (long Expression);
    parameters:
    - id: Expression
      type: System.Int64
      description: "Et gyldig <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk eller en variabel navn. Hvis `Expression` er av typen <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> funksjonen."
    return:
      type: System.Int32
      description: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.Object)
  id: Len(System.Object)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(Object)
  nameWithType: Strings.Len(Object)
  fullName: Microsoft.VisualBasic.Strings.Len(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  remarks: "Med brukerdefinerte typer og `Object` variabler i `Len` -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den `FilePut` funksjonen. Hvis en `Object` inneholder en `String`, returneres lengden på strengen. Hvis en `Object` inneholder en annen type, returneres størrelsen på objektet som skrives til filen av den `FilePut` funksjonen.       Den `VBFixedString` attributtet kan brukes til streng feltene i objekter som viser størrelsen på streng, i byte når skrevet til disken. Den `Len` funksjonen bruker den `VBFixedString` attributt hvis den er tilgjengelig når størrelsen på `Object` variabler.      > [!NOTE] > Den `Len` funksjonen kan ikke fastsette faktisk antall lagrede byte som kreves når det brukes med variabel lengde strenger i brukerdefinerte datatyper.      > [!NOTE] > I `LenB` i tidligere versjoner av Visual Basic-funksjonen returnerer antall byte i en streng i stedet for tegn. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle gjeldende Visual Basic strengene er i Unicode og `LenB` støttes ikke lenger.      ## Smart enheten Utviklermerknader den `Len` funksjonen godtar bare `String` og `Object` variabler som parametere. Hvis en `Object` inneholder en `String`, returneres lengden på den `String`. Hvis parameteren er NULL `Object` -referanse, returnerer funksjonen null. Hvis en `Object` inneholder en annen type, et unntak."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._193_1.vb)]"
  syntax:
    content: public static int Len (object Expression);
    parameters:
    - id: Expression
      type: System.Object
      description: "Et gyldig <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk eller en variabel navn. Hvis `Expression` er av typen <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> funksjonen."
    return:
      type: System.Int32
      description: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.SByte)
  id: Len(System.SByte)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(SByte)
  nameWithType: Strings.Len(SByte)
  fullName: Microsoft.VisualBasic.Strings.Len(SByte)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  remarks: "Med brukerdefinerte typer og `Object` variabler i `Len` -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den `FilePut` funksjonen. Hvis en `Object` inneholder en `String`, returneres lengden på strengen. Hvis en `Object` inneholder en annen type, returneres størrelsen på objektet som skrives til filen av den `FilePut` funksjonen.       Den `VBFixedString` attributtet kan brukes til streng feltene i objekter som viser størrelsen på streng, i byte når skrevet til disken. Den `Len` funksjonen bruker den `VBFixedString` attributt hvis den er tilgjengelig når størrelsen på `Object` variabler.      > [!NOTE] > Den `Len` funksjonen kan ikke fastsette faktisk antall lagrede byte som kreves når det brukes med variabel lengde strenger i brukerdefinerte datatyper.      > [!NOTE] > I `LenB` i tidligere versjoner av Visual Basic-funksjonen returnerer antall byte i en streng i stedet for tegn. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle gjeldende Visual Basic strengene er i Unicode og `LenB` støttes ikke lenger.      ## Smart enheten Utviklermerknader den `Len` funksjonen godtar bare `String` og `Object` variabler som parametere. Hvis en `Object` inneholder en `String`, returneres lengden på den `String`. Hvis parameteren er NULL `Object` -referanse, returnerer funksjonen null. Hvis en `Object` inneholder en annen type, et unntak."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._171_1.vb)]"
  syntax:
    content: public static int Len (sbyte Expression);
    parameters:
    - id: Expression
      type: System.SByte
      description: "Et gyldig <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk eller en variabel navn. Hvis `Expression` er av typen <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> funksjonen."
    return:
      type: System.Int32
      description: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.Single)
  id: Len(System.Single)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(Single)
  nameWithType: Strings.Len(Single)
  fullName: Microsoft.VisualBasic.Strings.Len(Single)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  remarks: "Med brukerdefinerte typer og `Object` variabler i `Len` -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den `FilePut` funksjonen. Hvis en `Object` inneholder en `String`, returneres lengden på strengen. Hvis en `Object` inneholder en annen type, returneres størrelsen på objektet som skrives til filen av den `FilePut` funksjonen.       Den `VBFixedString` attributtet kan brukes til streng feltene i objekter som viser størrelsen på streng, i byte når skrevet til disken. Den `Len` funksjonen bruker den `VBFixedString` attributt hvis den er tilgjengelig når størrelsen på `Object` variabler.      > [!NOTE] > Den `Len` funksjonen kan ikke fastsette faktisk antall lagrede byte som kreves når det brukes med variabel lengde strenger i brukerdefinerte datatyper.      > [!NOTE] > I `LenB` i tidligere versjoner av Visual Basic-funksjonen returnerer antall byte i en streng i stedet for tegn. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle gjeldende Visual Basic strengene er i Unicode og `LenB` støttes ikke lenger.      ## Smart enheten Utviklermerknader den `Len` funksjonen godtar bare `String` og `Object` variabler som parametere. Hvis en `Object` inneholder en `String`, returneres lengden på den `String`. Hvis parameteren er NULL `Object` -referanse, returnerer funksjonen null. Hvis en `Object` inneholder en annen type, et unntak."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._21_1.vb)]"
  syntax:
    content: public static int Len (float Expression);
    parameters:
    - id: Expression
      type: System.Single
      description: "Et gyldig <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk eller en variabel navn. Hvis `Expression` er av typen <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> funksjonen."
    return:
      type: System.Int32
      description: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.String)
  id: Len(System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(String)
  nameWithType: Strings.Len(String)
  fullName: Microsoft.VisualBasic.Strings.Len(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  remarks: "Med brukerdefinerte typer og `Object` variabler i `Len` -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den `FilePut` funksjonen. Hvis en `Object` inneholder en `String`, returneres lengden på strengen. Hvis en `Object` inneholder en annen type, returneres størrelsen på objektet som skrives til filen av den `FilePut` funksjonen.       Den `VBFixedString` attributtet kan brukes til streng feltene i objekter som viser størrelsen på streng, i byte når skrevet til disken. Den `Len` funksjonen bruker den `VBFixedString` attributt hvis den er tilgjengelig når størrelsen på `Object` variabler.      > [!NOTE] > Den `Len` funksjonen kan ikke fastsette faktisk antall lagrede byte som kreves når det brukes med variabel lengde strenger i brukerdefinerte datatyper.      > [!NOTE] > I `LenB` i tidligere versjoner av Visual Basic-funksjonen returnerer antall byte i en streng i stedet for tegn. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle gjeldende Visual Basic strengene er i Unicode og `LenB` støttes ikke lenger.      ## Smart enheten Utviklermerknader den `Len` funksjonen godtar bare `String` og `Object` variabler som parametere. Hvis en `Object` inneholder en `String`, returneres lengden på den `String`. Hvis parameteren er NULL `Object` -referanse, returnerer funksjonen null. Hvis en `Object` inneholder en annen type, et unntak."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._72_1.vb)]"
  syntax:
    content: public static int Len (string Expression);
    parameters:
    - id: Expression
      type: System.String
      description: "Et gyldig <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk eller en variabel navn. Hvis `Expression` er av typen <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> funksjonen."
    return:
      type: System.Int32
      description: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.UInt16)
  id: Len(System.UInt16)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(UInt16)
  nameWithType: Strings.Len(UInt16)
  fullName: Microsoft.VisualBasic.Strings.Len(UInt16)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  remarks: "Med brukerdefinerte typer og `Object` variabler i `Len` -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den `FilePut` funksjonen. Hvis en `Object` inneholder en `String`, returneres lengden på strengen. Hvis en `Object` inneholder en annen type, returneres størrelsen på objektet som skrives til filen av den `FilePut` funksjonen.       Den `VBFixedString` attributtet kan brukes til streng feltene i objekter som viser størrelsen på streng, i byte når skrevet til disken. Den `Len` funksjonen bruker den `VBFixedString` attributt hvis den er tilgjengelig når størrelsen på `Object` variabler.      > [!NOTE] > Den `Len` funksjonen kan ikke fastsette faktisk antall lagrede byte som kreves når det brukes med variabel lengde strenger i brukerdefinerte datatyper.      > [!NOTE] > I `LenB` i tidligere versjoner av Visual Basic-funksjonen returnerer antall byte i en streng i stedet for tegn. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle gjeldende Visual Basic strengene er i Unicode og `LenB` støttes ikke lenger.      ## Smart enheten Utviklermerknader den `Len` funksjonen godtar bare `String` og `Object` variabler som parametere. Hvis en `Object` inneholder en `String`, returneres lengden på den `String`. Hvis parameteren er NULL `Object` -referanse, returnerer funksjonen null. Hvis en `Object` inneholder en annen type, et unntak."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._211_1.vb)]"
  syntax:
    content: public static int Len (ushort Expression);
    parameters:
    - id: Expression
      type: System.UInt16
      description: "Et gyldig <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk eller en variabel navn. Hvis `Expression` er av typen <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> funksjonen."
    return:
      type: System.Int32
      description: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.UInt32)
  id: Len(System.UInt32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(UInt32)
  nameWithType: Strings.Len(UInt32)
  fullName: Microsoft.VisualBasic.Strings.Len(UInt32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  remarks: "Med brukerdefinerte typer og `Object` variabler i `Len` -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den `FilePut` funksjonen. Hvis en `Object` inneholder en `String`, returneres lengden på strengen. Hvis en `Object` inneholder en annen type, returneres størrelsen på objektet som skrives til filen av den `FilePut` funksjonen.       Den `VBFixedString` attributtet kan brukes til streng feltene i objekter som viser størrelsen på streng, i byte når skrevet til disken. Den `Len` funksjonen bruker den `VBFixedString` attributt hvis den er tilgjengelig når størrelsen på `Object` variabler.      > [!NOTE] > Den `Len` funksjonen kan ikke fastsette faktisk antall lagrede byte som kreves når det brukes med variabel lengde strenger i brukerdefinerte datatyper.      > [!NOTE] > I `LenB` i tidligere versjoner av Visual Basic-funksjonen returnerer antall byte i en streng i stedet for tegn. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle gjeldende Visual Basic strengene er i Unicode og `LenB` støttes ikke lenger.      ## Smart enheten Utviklermerknader den `Len` funksjonen godtar bare `String` og `Object` variabler som parametere. Hvis en `Object` inneholder en `String`, returneres lengden på den `String`. Hvis parameteren er NULL `Object` -referanse, returnerer funksjonen null. Hvis en `Object` inneholder en annen type, et unntak."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._150_1.vb)]"
  syntax:
    content: public static int Len (uint Expression);
    parameters:
    - id: Expression
      type: System.UInt32
      description: "Et gyldig <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk eller en variabel navn. Hvis `Expression` er av typen <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> funksjonen."
    return:
      type: System.Int32
      description: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.UInt64)
  id: Len(System.UInt64)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(UInt64)
  nameWithType: Strings.Len(UInt64)
  fullName: Microsoft.VisualBasic.Strings.Len(UInt64)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  remarks: "Med brukerdefinerte typer og `Object` variabler i `Len` -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den `FilePut` funksjonen. Hvis en `Object` inneholder en `String`, returneres lengden på strengen. Hvis en `Object` inneholder en annen type, returneres størrelsen på objektet som skrives til filen av den `FilePut` funksjonen.       Den `VBFixedString` attributtet kan brukes til streng feltene i objekter som viser størrelsen på streng, i byte når skrevet til disken. Den `Len` funksjonen bruker den `VBFixedString` attributt hvis den er tilgjengelig når størrelsen på `Object` variabler.      > [!NOTE] > Den `Len` funksjonen kan ikke fastsette faktisk antall lagrede byte som kreves når det brukes med variabel lengde strenger i brukerdefinerte datatyper.      > [!NOTE] > I `LenB` i tidligere versjoner av Visual Basic-funksjonen returnerer antall byte i en streng i stedet for tegn. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle gjeldende Visual Basic strengene er i Unicode og `LenB` støttes ikke lenger.      ## Smart enheten Utviklermerknader den `Len` funksjonen godtar bare `String` og `Object` variabler som parametere. Hvis en `Object` inneholder en `String`, returneres lengden på den `String`. Hvis parameteren er NULL `Object` -referanse, returnerer funksjonen null. Hvis en `Object` inneholder en annen type, et unntak."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._37_1.vb)]"
  syntax:
    content: public static int Len (ulong Expression);
    parameters:
    - id: Expression
      type: System.UInt64
      description: "Et gyldig <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk eller en variabel navn. Hvis `Expression` er av typen <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> -funksjonen returnerer størrelsen slik at den blir skrevet til filen av den <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> funksjonen."
    return:
      type: System.Int32
      description: "Returnerer et heltall som inneholder antallet tegn i en streng eller nominell antall byte som kreves for å lagre en variabel."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)
  id: LSet(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: LSet(String,Int32)
  nameWithType: Strings.LSet(String,Int32)
  fullName: Microsoft.VisualBasic.Strings.LSet(String,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en venstrejustert streng som inneholder den angitte strengen justert i forhold til den angitte lengden."
  remarks: "Hvis den angitte strengen er lengre enn den angitte lengden, forkortet returneres strengen til den angitte lengden. Hvis den angitte strengen er kortere enn den angitte lengden, legges mellomrom til høyre ende av den returnerte strengen til å produsere hvor riktig."
  example:
  - "This example demonstrates the use of the `LSet` function.  \n  \n [!code-vb[VbVbalrStrings#11](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._168_1.vb)]"
  syntax:
    content: public static string LSet (string Source, int Length);
    parameters:
    - id: Source
      type: System.String
      description: "Kreves. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>uttrykket. Navnet på strengvariabel."
    - id: Length
      type: System.Int32
      description: "Kreves. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>uttrykket. Lengden på returnerte strengen."
    return:
      type: System.String
      description: "Returnerer en venstrejustert streng som inneholder den angitte strengen justert i forhold til den angitte lengden."
  overload: Microsoft.VisualBasic.Strings.LSet*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.LTrim(System.String)
  id: LTrim(System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: LTrim(String)
  nameWithType: Strings.LTrim(String)
  fullName: Microsoft.VisualBasic.Strings.LTrim(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en streng som inneholder en kopi av en angitt streng uten innledende mellomrom (<xref uid=&quot;langword_csharp_LTrim&quot; name=&quot;LTrim&quot; href=&quot;&quot;></xref>), uten avsluttende mellomrom (<xref uid=&quot;langword_csharp_RTrim&quot; name=&quot;RTrim&quot; href=&quot;&quot;></xref>), uten innledende eller avsluttende mellomrom (<xref uid=&quot;langword_csharp_Trim&quot; name=&quot;Trim&quot; href=&quot;&quot;></xref>)."
  remarks: "Den `LTrim`, `RTrim`, og `Trim` funksjoner fjerne mellomrom fra slutten av strenger."
  example:
  - "This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable. It uses the `Trim` function to strip both types of spaces.  \n  \n [!code-vb[VbVbalrStrings#25](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._110_1.vb)]"
  syntax:
    content: public static string LTrim (string str);
    parameters:
    - id: str
      type: System.String
      description: "Kreves. Et gyldig <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk."
    return:
      type: System.String
      description: "Returnerer en streng som inneholder en kopi av en angitt streng uten innledende mellomrom (<xref uid=&quot;langword_csharp_LTrim&quot; name=&quot;LTrim&quot; href=&quot;&quot;></xref>), uten avsluttende mellomrom (<xref uid=&quot;langword_csharp_RTrim&quot; name=&quot;RTrim&quot; href=&quot;&quot;></xref>), uten innledende eller avsluttende mellomrom (<xref uid=&quot;langword_csharp_Trim&quot; name=&quot;Trim&quot; href=&quot;&quot;></xref>)."
  overload: Microsoft.VisualBasic.Strings.LTrim*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)
  id: Mid(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Mid(String,Int32)
  nameWithType: Strings.Mid(String,Int32)
  fullName: Microsoft.VisualBasic.Strings.Mid(String,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en streng som inneholder alle tegnene fra den angitte posisjonen i en streng."
  remarks: "Antall tegn i `str`, bruker du `Len` funksjonen.       Visual Basic har en `Mid` funksjon og en `Mid` setningen. Disse elementene begge fungerer på et angitt antall tegn i en streng, men `Mid` -funksjonen returnerer tegnene under den `Mid` setningen erstatter tegnene. Hvis du vil ha mer informasjon, se [Mid setningen](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > I `MidB` i tidligere versjoner av Visual Basic-funksjonen returnerer en streng i byte i stedet for tegn. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle Visual Basic strengene er i Unicode og `MidB` støttes ikke lenger."
  example:
  - "The last line in this example uses this overload of the `Mid` function to return the fifth and subsequent characters from a string.  \n  \n [!code-vb[VbVbalrStrings#17](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._67_1.vb)]"
  syntax:
    content: public static string Mid (string str, int Start);
    parameters:
    - id: str
      type: System.String
      description: "Kreves. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>uttrykket, returneres."
    - id: Start
      type: System.Int32
      description: "Kreves. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>uttrykket. Startposisjonen av tegn som skal returneres. Hvis `Start` er større enn antallet tegn i `str`, <xref uid=&quot;langword_csharp_Mid&quot; name=&quot;Mid&quot; href=&quot;&quot;> </xref> -funksjonen returnerer en tom streng (&quot;&quot;). `Start`er engangsbaserte."
    return:
      type: System.String
      description: "En streng som består av alle tegnene fra den angitte posisjonen i strengen."
  overload: Microsoft.VisualBasic.Strings.Mid*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Start</code>&lt;= 0 or <code>Length</code> &lt; 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)
  id: Mid(System.String,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Mid(String,Int32,Int32)
  nameWithType: Strings.Mid(String,Int32,Int32)
  fullName: Microsoft.VisualBasic.Strings.Mid(String,Int32,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en streng som inneholder et angitt antall tegn med Start fra den angitte posisjonen i en streng."
  remarks: "Antall tegn i `str`, bruker du `Len` funksjonen.       Visual Basic har en `Mid` funksjon og en `Mid` setningen. Disse elementene begge fungerer på et angitt antall tegn i en streng, men `Mid` -funksjonen returnerer tegnene under den `Mid` setningen erstatter tegnene. Hvis du vil ha mer informasjon, se [Mid setningen](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > I `MidB` i tidligere versjoner av Visual Basic-funksjonen returnerer en streng i byte i stedet for tegn. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle Visual Basic strengene er i Unicode og `MidB` støttes ikke lenger."
  example:
  - "The first two `Mid` functions in this example return the specified number of characters from a string, starting from the given positions. (The last function illustrates the <xref:Microsoft.VisualBasic.Strings.Mid%28System.String%2CSystem.Int32%29> overload and only specifies the starting point for the string extraction.)  \n  \n [!code-vb[VbVbalrStrings#17](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._33_1.vb)]"
  syntax:
    content: public static string Mid (string str, int Start, int Length);
    parameters:
    - id: str
      type: System.String
      description: "Kreves. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>uttrykket, returneres."
    - id: Start
      type: System.Int32
      description: "Kreves. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>uttrykket. Startposisjonen av tegn som skal returneres. Hvis `Start` er større enn antallet tegn i `str`, <xref uid=&quot;langword_csharp_Mid&quot; name=&quot;Mid&quot; href=&quot;&quot;> </xref> -funksjonen returnerer en tom streng (&quot;&quot;). `Start`en basert."
    - id: Length
      type: System.Int32
      description: "Valgfritt. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>uttrykket. Antallet tegn som skal returneres. Hvis det utelates, eller det er mindre enn `Length` tegn i teksten (inkludert tegnet i posisjon `Start`), returneres alle tegn fra startposisjonen til slutten av strengen."
    return:
      type: System.String
      description: "En streng som består av det angitte antallet tegn med Start fra den angitte posisjonen i strengen."
  overload: Microsoft.VisualBasic.Strings.Mid*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Start</code>&lt;= 0 or <code>Length</code> &lt; 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)
  id: Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Replace(String,String,String,Int32,Int32,CompareMethod)
  nameWithType: Strings.Replace(String,String,String,Int32,Int32,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.Replace(String,String,String,Int32,Int32,CompareMethod)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en streng der en angitt understreng er erstattet med en annen understreng et angitt antall ganger."
  remarks: "Verdien som returneres av den `Replace` funksjonen er en streng som begynner på plasseringen angitt av `Start` avsluttes på slutten av den `Expression` streng, med erstatninger utføres som angitt av den `Find` og `Replace` verdier.       Den `Compare` argumentet kan ha følgende verdier.      |||   |-|-|   | Konstant | Beskrivelse |   | `Binary`| Sammenligner binært |   | `Text`| Utfører en tekstform sammenligning |"
  example:
  - "This example demonstrates the `Replace` function.  \n  \n```vb#  \nDim TestString As String = \"Shopping List\"  \n' Returns \"Shipping List\".  \nDim aString As String = Replace(TestString, \"o\", \"i\")  \n```"
  syntax:
    content: public static string Replace (string Expression, string Find, string Replacement, int Start = 1, int Count = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);
    parameters:
    - id: Expression
      type: System.String
      description: "Kreves. Strenguttrykk som inneholder delstrengen skal erstatte."
    - id: Find
      type: System.String
      description: "Kreves. Delstrengen det søkes etter."
    - id: Replacement
      type: System.String
      description: "Kreves. Den nye delstrengen."
    - id: Start
      type: System.Int32
      description: "Valgfritt. Plasser innenfor `Expression` som starter en delstreng brukes for erstatning. Verdien som returneres av <xref uid=&quot;langword_csharp_Replace&quot; name=&quot;Replace&quot; href=&quot;&quot;> </xref> er en streng som starter på `Start`, med nødvendige endringer. Hvis den utelates, brukes 1."
    - id: Count
      type: System.Int32
      description: "Valgfritt. Antallet delstrengerstatninger til å utføre. Hvis den utelates, er brukes standardverdien&1;, som betyr &quot;gjøre alle mulige erstatninger.&quot;"
    - id: Compare
      type: Microsoft.VisualBasic.CompareMethod
      description: "Valgfritt. Numerisk verdi som angir hvilken type sammenligning skal brukes under evaluering av delstrenger. Se innstillinger for verdier."
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_Replace&quot; name=&quot;Replace&quot; href=&quot;&quot;></xref>returnerer følgende verdier.       <table><tbody><tr><td> Hvis       </td><td> Erstatt returnerer       </td></tr><tr><td><code>Find</code>er en tom streng eller<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref></td><td> Kopi av<code>Expression</code></td></tr><tr><td><code>Replace</code>er en tom streng       </td><td> Kopier av <code> Expression </code> med noen forekomster av<code>Find</code></td></tr><tr><td><code>Expression</code>er en tom streng eller <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>, eller <code> Start </code> er større enn lengden på<code>Expression</code></td><td><xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref></td></tr><tr><td><code>Count</code>0       </td><td> Kopi av<code>Expression</code></td></tr></tbody></table>"
  overload: Microsoft.VisualBasic.Strings.Replace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Count</code>&lt; -1 or <code>Start</code> &lt;= 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)
  id: Right(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Right(String,Int32)
  nameWithType: Strings.Right(String,Int32)
  fullName: Microsoft.VisualBasic.Strings.Right(String,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en streng som inneholder et angitt antall tegn fra høyre side av en streng."
  remarks: "Antall tegn i `str`, bruker du `Len` funksjonen. Hvis det brukes i et Windows-skjema eller andre klasse som ikke har en `Right` -egenskapen, må du fullstendig kvalifisert funksjonen med `Microsoft.VisualBasic.Strings.Right`.      > [!NOTE] > I `RightB` i tidligere versjoner av Visual Basic-funksjonen returnerer en streng i byte, i stedet for tegn. Det brukes først og fremst for å konvertere strenger i double-byte character set (DBCS) programmer. Alle gjeldende Visual Basic strengene er i Unicode og `RightB` støttes ikke lenger."
  example:
  - "This example demonstrates the use of the `Right` function to return a substring of a given `String`. In a class that has a `Right` property, it may be necessary to fully qualify the `Right` function.  \n  \n [!code-vb[VbVbalrStrings#21](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._221_1.vb)]"
  syntax:
    content: public static string Right (string str, int Length);
    parameters:
    - id: str
      type: System.String
      description: "Kreves. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>uttrykk som inneholder lengst til høyre, returneres."
    - id: Length
      type: System.Int32
      description: "Kreves. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. Numerisk uttrykk som angir hvor mange tegn som skal returneres. 0 betyr en tom streng (&quot;&quot;), returneres. Hvis større enn eller lik antallet tegn i `str`, returneres hele strengen."
    return:
      type: System.String
      description: "Returnerer en streng som inneholder et angitt antall tegn fra høyre side av en streng."
  overload: Microsoft.VisualBasic.Strings.Right*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Length</code> &lt; 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)
  id: RSet(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: RSet(String,Int32)
  nameWithType: Strings.RSet(String,Int32)
  fullName: Microsoft.VisualBasic.Strings.RSet(String,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en høyrejustert streng som inneholder den angitte strengen justert i forhold til den angitte lengden."
  remarks: "Hvis `Source` er lengre enn `Length`, `RSet` plasserer bare lengst til venstre tegnene, opptil lengden på `Source`, i den returnerte strengen. Hvis den angitte strengen er kortere enn den angitte lengden, er mellomrom lagt til venstre ende av strengen som produserer hvor riktig. Hvis den angitte strengen er lengre enn den angitte lengden, forkortet den til den angitte lengden."
  example:
  - "This example demonstrates the use of the `RSet` function.  \n  \n [!code-vb[VbVbalrStrings#9](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._218_1.vb)]"
  syntax:
    content: public static string RSet (string Source, int Length);
    parameters:
    - id: Source
      type: System.String
      description: "Kreves. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>uttrykket. Navnet på strengvariabel."
    - id: Length
      type: System.Int32
      description: "Kreves. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>uttrykket. Lengden på returnerte strengen."
    return:
      type: System.String
      description: "Returnerer en høyrejustert streng som inneholder den angitte strengen justert i forhold til den angitte lengden."
  overload: Microsoft.VisualBasic.Strings.RSet*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.RTrim(System.String)
  id: RTrim(System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: RTrim(String)
  nameWithType: Strings.RTrim(String)
  fullName: Microsoft.VisualBasic.Strings.RTrim(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en streng som inneholder en kopi av en angitt streng uten innledende mellomrom (<xref uid=&quot;langword_csharp_LTrim&quot; name=&quot;LTrim&quot; href=&quot;&quot;></xref>), uten avsluttende mellomrom (<xref uid=&quot;langword_csharp_RTrim&quot; name=&quot;RTrim&quot; href=&quot;&quot;></xref>), uten innledende eller avsluttende mellomrom (<xref uid=&quot;langword_csharp_Trim&quot; name=&quot;Trim&quot; href=&quot;&quot;></xref>)."
  remarks: "Den `LTrim`, `RTrim`, og `Trim` funksjoner fjerne mellomrom fra slutten av strenger."
  example:
  - "This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable. It uses the `Trim` function to strip both types of spaces.  \n  \n [!code-vb[VbVbalrStrings#25](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._143_1.vb)]"
  syntax:
    content: public static string RTrim (string str);
    parameters:
    - id: str
      type: System.String
      description: "Kreves. Et gyldig <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk."
    return:
      type: System.String
      description: "Returnerer en streng som inneholder en kopi av en angitt streng uten innledende mellomrom (<xref uid=&quot;langword_csharp_LTrim&quot; name=&quot;LTrim&quot; href=&quot;&quot;></xref>), uten avsluttende mellomrom (<xref uid=&quot;langword_csharp_RTrim&quot; name=&quot;RTrim&quot; href=&quot;&quot;></xref>), uten innledende eller avsluttende mellomrom (<xref uid=&quot;langword_csharp_Trim&quot; name=&quot;Trim&quot; href=&quot;&quot;></xref>)."
  overload: Microsoft.VisualBasic.Strings.RTrim*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Space(System.Int32)
  id: Space(System.Int32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Space(Int32)
  nameWithType: Strings.Space(Int32)
  fullName: Microsoft.VisualBasic.Strings.Space(Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en streng som består av det angitte antallet mellomrom."
  remarks: "Den `Space` funksjonen er nyttig for å formatere utdata og fjerne data i strenger med fast lengde."
  example:
  - "This example uses the `Space` function to return a string consisting of a specified number of spaces.  \n  \n [!code-vb[VbVbalrStrings#2](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._154_1.vb)]"
  syntax:
    content: public static string Space (int Number);
    parameters:
    - id: Number
      type: System.Int32
      description: "Kreves. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>uttrykket. Antall mellomrom du vil i strengen."
    return:
      type: System.String
      description: "Returnerer en streng som består av det angitte antallet mellomrom."
  overload: Microsoft.VisualBasic.Strings.Space*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Number</code> &lt; 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)
  id: Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Split(String,String,Int32,CompareMethod)
  nameWithType: Strings.Split(String,String,Int32,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.Split(String,String,Int32,CompareMethod)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en nullbasert, endimensjonal matrise som inneholder et angitt antall understrenger."
  remarks: "Som standard, eller når `Limit` er lik -1, den `Split` funksjonen deler Inndatastrengen ved hver forekomst av skilletegnet strengen, og returnerer understrengene i en matrise. Når den `Limit` parameteren er større enn null, i `Split` funksjonen deler strengen ved første `Limit`-1 forekomster av skilletegn, og returnerer en matrise med de resulterende delstrengene. For eksempel `Split(&quot;a:b:c&quot;, &quot;:&quot;)` returnerer matrisen `{&quot;a&quot;, &quot;b&quot;, &quot;c&quot;}`, mens `Split(&quot;a:b:c&quot;, &quot;:&quot;, 2)` returnerer matrisen `{&quot;a&quot;, &quot;b:c&quot;}`.       Når den `Split` funksjonen støter to skilletegn i en rad, eller et skilletegn i begynnelsen eller slutten av strengen, den tolker dem som omgir en tom streng (&quot;&quot;). For eksempel `Split(&quot;xx&quot;, &quot;x&quot;)` returnerer matrise som inneholder tre tomme strenger: en mellom begynnelsen av strengen og første &quot;x&quot;, en mellom de to &quot;strenger x&quot;, og én mellom den siste &quot;x&quot; og slutten av strengen.       Denne tabellen viser hvordan den valgfrie `Delimiter`, `Limit`, og `Compare` parametere kan endre virkemåten for den `Split` funksjonen.      |||   |-|-|   | Del kall | Returverdi |   | `Split(&quot;42, 12, 19&quot;)`| {&quot;42,&quot;, &quot;12&quot;, &quot;19&quot;} |   | `Split(&quot;42, 12, 19&quot;, &quot;, &quot;)`| {&quot;42&quot;, &quot;12&quot;, &quot;19&quot;} |   | `Split(&quot;42, 12, 19&quot;, &quot;, &quot;, 2)`| {&quot;42&quot;, &quot;12, 19&quot;} |   | `Split(&quot;192.168.0.1&quot;, &quot;.&quot;)`| {&quot;192&quot;, &quot;168&quot;, &quot;0&quot;, &quot;1&quot;} |   | `Split(&quot;Alice and Bob&quot;, &quot; AND &quot;)`| {&quot;Alice og Bob&quot;} |   | `Split(&quot;Alice and Bob&quot;, &quot; AND &quot;, ,CompareMethod.Text)`| {&quot;Alice&quot;, &quot;Anders&quot;} |   | `Split(&quot;someone@example.com&quot;, &quot;@&quot;,1)`| {&quot;someone@example.com&quot;}|   | `Split(&quot;someone@example.com&quot;, &quot;@&quot;,2)`| {&quot;noen&quot;, &quot;example.com&quot;}|       Den `Compare` argumentet kan ha følgende verdier.      ||||   |-|-|-|   | Konstant | Beskrivelse | Verdien |   | `CompareMethod.Binary`| Sammenligner binært |&0; |   | `CompareMethod.Text`| Utfører en tekstform sammenligning |&1; |"
  example:
  - "The following example demonstrates how to split a string at its spaces.  \n  \n [!code-vb[VbVbalrStrings#13](~/add/codesnippet/visualbasic/6fd442c5-62bb-40f5-92c0-_1.vb)]  \n  \n The following example demonstrates how to split strings with multiple delimiters in a row and filter out the empty strings.  \n  \n [!code-vb[VbVbalrStrings#14](~/add/codesnippet/visualbasic/6fd442c5-62bb-40f5-92c0-_2.vb)]"
  syntax:
    content: public static string[] Split (string Expression, string Delimiter = " ", int Limit = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);
    parameters:
    - id: Expression
      type: System.String
      description: "Kreves. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>uttrykk som inneholder delstrenger og skilletegn."
    - id: Delimiter
      type: System.String
      description: "Valgfritt. Enkelttegn brukes til å identifisere delstrenggrenser. Hvis `Delimiter` er utelatt, mellomromstegnet (&quot;&quot;) antas skilletegnet."
    - id: Limit
      type: System.Int32
      description: "Valgfritt. Maksimalt antall understrenger som Inndatastrengen skal deles. Standard –&1;, indikerer at inndatastrengen skal deles ved hver forekomst av den `Delimiter` streng."
    - id: Compare
      type: Microsoft.VisualBasic.CompareMethod
      description: "Valgfritt. Numerisk verdi som angir sammenligningen skal brukes under evaluering av delstrenger. Se &quot;innstillinger-verdier."
    return:
      type: System.String[]
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>matrise. Hvis <code> Expression </code> er en tom streng (&quot;&quot;), <xref uid=&quot;langword_csharp_Split&quot; name=&quot;Split&quot; href=&quot;&quot;> </xref> returnerer en matrise med ett element som inneholder en tom streng. Hvis <code> Delimiter </code> er en tom streng, eller hvis det ikke vises hvor som helst i <code> Expression </code>, <xref uid=&quot;langword_csharp_Split&quot; name=&quot;Split&quot; href=&quot;&quot;> </xref> returnerer en matrise med ett element som inneholder hele <code> Expression </code> streng."
  overload: Microsoft.VisualBasic.Strings.Split*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  id: StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: StrComp(String,String,CompareMethod)
  nameWithType: Strings.StrComp(String,String,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.StrComp(String,String,CompareMethod)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer -1, 0 eller 1, basert på resultatet av en strengsammenligning."
  remarks: "Strengene sammenlignes ved alfanumerisk sortering verdier som starter med det første tegnet. For mer informasjon om binær sammenligninger, tekstbaserte sammenligninger og sorteringsrekkefølgen, kan du se [alternativet sammenligne setningen](~/add/includes/ajax-current-ext-md.md).       Den `Compare` innstillingene-argumentet er: |||   |-|-|   | Konstant | Beskrivelse |   | `Binary`| Sammenligner binært, basert på en sorteringsrekkefølge som er avledet fra interne binære gjengivelsene av tegn. |   | `Text`| Utfører en text-sammenligning basert på en samlingstype teksten sorteringsrekkefølge henhold systemets `LocaleID` verdi. |"
  example:
  - "This example uses the `StrComp` function to return the results of a string comparison.  \n  \n [!code-vb[VbVbalrStrings#22](~/add/codesnippet/visualbasic/40cb6ac0-98a9-4acc-9cbf-_1.vb)]"
  syntax:
    content: public static int StrComp (string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);
    parameters:
    - id: String1
      type: System.String
      description: "Kreves. Et gyldig <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk."
    - id: String2
      type: System.String
      description: "Kreves. Et gyldig <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk."
    - id: Compare
      type: Microsoft.VisualBasic.CompareMethod
      description: "Valgfritt. Angir typen strengsammenligning. Hvis `Compare` utelates, den <xref uid=&quot;langword_csharp_Option Compare&quot; name=&quot;Option Compare&quot; href=&quot;&quot;> </xref> innstillingen bestemmer typen sammenligning."
    return:
      type: System.Int32
      description: "Den <xref uid=&quot;langword_csharp_StrComp&quot; name=&quot;StrComp&quot; href=&quot;&quot;> </xref> funksjonen har følgende returverdier.       <table><tbody><tr><td> Hvis       </td><td> Returnerer StrComp       </td></tr><tr><td><code>String1</code>Sorterer foran<code>String2</code></td><td> -1       </td></tr><tr><td><code>String1</code>er lik<code>String2</code></td><td> 0       </td></tr><tr><td><code>String1</code>Sorterer etter<code>String2</code></td><td> 1       </td></tr></tbody></table>"
  overload: Microsoft.VisualBasic.Strings.StrComp*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Compare</code>verdien er ikke gyldig."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)
  id: StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: StrConv(String,VbStrConv,Int32)
  nameWithType: Strings.StrConv(String,VbStrConv,Int32)
  fullName: Microsoft.VisualBasic.Strings.StrConv(String,VbStrConv,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en streng som er konvertert som angitt."
  remarks: "Konstantene `VbStrConv.Wide`, `VbStrConv.Narrow`, `VbStrConv.SimplifiedChinese`, `VbStrConv.TraditionalChinese`, `VbStrConv.Katakana`, og `VbStrConv.Hiragana` kan føre til at kjøretidsfeil ved bruk i land der de ikke gjelder, men ikke alltid: konstantene `VbStrConv.Katakana` og `VbStrConv.Hiragana` kan bare brukes i et ikke-japansk system med japansk som er installert. I tillegg bruke konstantene `VbStrConv.Wide` og `VbStrConv.Narrow` støttes på alle systemer med et østasiatisk språk som er installert.       Denne funksjonen bruker programmets kultur informasjonen når du redigerer strengen slik at små endringene er nødvendig for den nasjonale innstillingen programmet er i bruk.      > [!IMPORTANT] > Hvis programmet gjør sikkerhet avgjørelsene som er basert på resultatet av en sammenligning eller tilfelle endre operasjon, og deretter operasjonen skal bruke den <xref:System.String.Compare%2A?displayProperty=fullName>metoden og pass <xref:System.StringComparison>eller <xref:System.StringComparison>for den `comparisonType` argument.</xref:System.StringComparison> </xref:System.StringComparison> </xref:System.String.Compare%2A?displayProperty=fullName> Hvis du vil ha mer informasjon, se [hvordan kultur påvirker strenger i Visual Basic](~/add/includes/ajax-current-ext-md.md).       Den `Conversion` innstillingene-argumentet er: |||   |-|-|   | Opplisting medlem | Beskrivelse |   | `VbStrConv.None`| Utfører ingen konvertering |   | `VbStrConv.LinguisticCasing`| Bruker linguistic regler for små og i stedet for filsystemet (standard). Ugyldig med `VbStrConv.UpperCase` og `VbStrConv.LowerCase` bare. |   | `VbStrConv.UpperCase`| Konverterer strengen til store bokstaver. |   | `VbStrConv.LowerCase`| Konverterer en streng til små bokstaver. |   | `VbStrConv.ProperCase`| Konverterer den første bokstaven i hvert ord i strengen til store bokstaver. |   | `VbStrConv.Wide` <sup>*</sup>| Konverterer minske (halv bredde) tegn i strengen bredt (full bredde) tegn. |   | `VbStrConv.Narrow` <sup>*</sup>| Konverterer bredt (full bredde) tegn i strengen for å begrense (halv bredde) tegn. |   | `VbStrConv.Katakana` <sup>**</sup>| Konverterer hiraganategn i strengen til katakanategn. |   | `VbStrConv.Hiragana` <sup>**</sup>| Konverterer katakanategn i strengen til hiraganategn. |   | `VbStrConv.SimplifiedChinese` <sup>*</sup>| Konverterer tradisjonell kinesisk tegn til kinesisk (forenklet). |   | `VbStrConv.TraditionalChinese` <sup>*</sup>| Konverterer forenklet kinesisk tegn til kinesisk (tradisjonell). |       <sup> * </sup> Gjelder asiatiske nasjonale innstillingene.       <sup>**</sup>Gjelder bare for Japan.      > [!NOTE] > Disse konstantene er angitt i .NET Framework common language runtime. Resultatet kan de brukes hvor som helst i koden i stedet for de faktiske verdiene. Du kan kombinere mest (for eksempel `UpperCase + Wide`), bortsett fra når de utelukker (for eksempel `VbStrConv.Wide + VbStrConv.Narrow`).       Følgende er gyldig word skilletegn for riktig små og: Null (`Chr$(0)`), vannrette kategorien (`Chr$(9)`), linjeskift (`Chr$(10)`), vertikal tabulator (`Chr$(11)`), utgjør feeden (`Chr$(12)`), returtegn (`Chr$(13)`), mellomrom (én byte character set) (`Chr$(32)`). Den faktiske verdien for et mellomrom, som kan være full eller halvbrede, varierer etter land/område for østasiatiske kulturer."
  example:
  - "This example converts text into all lowercase letters.  \n  \n [!code-vb[VbVbalrStrings#6](~/add/codesnippet/visualbasic/834dd6b9-b57e-4455-8085-_1.vb)]"
  syntax:
    content: public static string StrConv (string str, Microsoft.VisualBasic.VbStrConv Conversion, int LocaleID = 0);
    parameters:
    - id: str
      type: System.String
      description: "Kreves. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>uttrykket som skal konverteres."
    - id: Conversion
      type: Microsoft.VisualBasic.VbStrConv
      description: "Kreves. <xref href=&quot;Microsoft.VisualBasic.VbStrConv&quot;></xref>medlem. Opplistingsverdien angir typen konvertering som skal utføres."
    - id: LocaleID
      type: System.Int32
      description: "Valgfritt. Den <xref uid=&quot;langword_csharp_LocaleID&quot; name=&quot;LocaleID&quot; href=&quot;&quot;> </xref> verdi forskjellig fra systemet <xref uid=&quot;langword_csharp_LocaleID&quot; name=&quot;LocaleID&quot; href=&quot;&quot;> </xref> verdi. (Systemet <xref uid=&quot;langword_csharp_LocaleID&quot; name=&quot;LocaleID&quot; href=&quot;&quot;> </xref> verdi som er standard.)"
    return:
      type: System.String
      description: "Returnerer en streng som er konvertert som angitt."
  overload: Microsoft.VisualBasic.Strings.StrConv*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Ustøttet <code> LocaleID </code>, <code> Conversion </code> &lt; 0 eller &gt; konverteringen 2048 eller støttes ikke for angitte nasjonale innstillingene."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)
  id: StrDup(System.Int32,System.Char)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: StrDup(Int32,Char)
  nameWithType: Strings.StrDup(Int32,Char)
  fullName: Microsoft.VisualBasic.Strings.StrDup(Int32,Char)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en streng eller et objekt som består av det angitte tegnet, gjentatt det angitte antallet ganger."
  remarks: "Denne funksjonen returnerer en `String` består av gjentatte tegn. Tegnet som utgjør strengen er det første tegnet i den `Character` argumentet, og den er duplisert `Number` antall ganger."
  example:
  - "This example uses the `StrDup` function to return a string of duplicated characters.  \n  \n [!code-vb[VbVbalrStrings#34](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._197_1.vb)]"
  syntax:
    content: public static string StrDup (int Number, char Character);
    parameters:
    - id: Number
      type: System.Int32
      description: "Kreves. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>uttrykket. Lengden strengen som skal returneres."
    - id: Character
      type: System.Char
      description: "Kreves. Any valid <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref> expression. Det første tegnet i uttrykket som skal brukes. Hvis tegnet er av typen <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, må den inneholde enten en <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> eller <xref uid=&quot;langword_csharp_String &quot; name=&quot;String &quot; href=&quot;&quot;> </xref>verdi."
    return:
      type: System.String
      description: "Returnerer en streng eller et objekt som består av det angitte tegnet, gjentatt det angitte antallet ganger."
  overload: Microsoft.VisualBasic.Strings.StrDup*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Number</code>er mindre enn 0 eller <code>Character</code> er ikke gyldig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>Character</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)
  id: StrDup(System.Int32,System.Object)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: StrDup(Int32,Object)
  nameWithType: Strings.StrDup(Int32,Object)
  fullName: Microsoft.VisualBasic.Strings.StrDup(Int32,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en streng eller et objekt som består av det angitte tegnet, gjentatt det angitte antallet ganger."
  remarks: "Denne funksjonen returnerer en `String` består av gjentatte tegn. Tegnet som utgjør strengen er det første tegnet i den `Character` argumentet, og den er duplisert `Number` antall ganger."
  example:
  - "This example uses the `StrDup` function to return a string of duplicated characters.  \n  \n [!code-vb[VbVbalrStrings#34](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._63_1.vb)]"
  syntax:
    content: public static object StrDup (int Number, object Character);
    parameters:
    - id: Number
      type: System.Int32
      description: "Kreves. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>uttrykket. Lengden strengen som skal returneres."
    - id: Character
      type: System.Object
      description: "Kreves. Any valid <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref> expression. Det første tegnet i uttrykket som skal brukes. Hvis tegnet er av typen <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, må den inneholde enten en <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> eller <xref uid=&quot;langword_csharp_String &quot; name=&quot;String &quot; href=&quot;&quot;> </xref>verdi."
    return:
      type: System.Object
      description: "Returnerer en streng eller et objekt som består av det angitte tegnet, gjentatt det angitte antallet ganger."
  overload: Microsoft.VisualBasic.Strings.StrDup*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Number</code>er mindre enn 0 eller <code>Character</code> er ikke gyldig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>Character</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)
  id: StrDup(System.Int32,System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: StrDup(Int32,String)
  nameWithType: Strings.StrDup(Int32,String)
  fullName: Microsoft.VisualBasic.Strings.StrDup(Int32,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en streng eller et objekt som består av det angitte tegnet, gjentatt det angitte antallet ganger."
  remarks: "Denne funksjonen returnerer en `String` består av gjentatte tegn. Tegnet som utgjør strengen er det første tegnet i den `Character` argumentet, og den er duplisert `Number` antall ganger."
  example:
  - "This example uses the `StrDup` function to return a string of duplicated characters.  \n  \n [!code-vb[VbVbalrStrings#34](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._148_1.vb)]"
  syntax:
    content: public static string StrDup (int Number, string Character);
    parameters:
    - id: Number
      type: System.Int32
      description: "Kreves. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>uttrykket. Lengden strengen som skal returneres."
    - id: Character
      type: System.String
      description: "Kreves. Any valid <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref> expression. Det første tegnet i uttrykket som skal brukes. Hvis tegnet er av typen <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, må den inneholde enten en <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> eller <xref uid=&quot;langword_csharp_String &quot; name=&quot;String &quot; href=&quot;&quot;> </xref>verdi."
    return:
      type: System.String
      description: "Returnerer en streng eller et objekt som består av det angitte tegnet, gjentatt det angitte antallet ganger."
  overload: Microsoft.VisualBasic.Strings.StrDup*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Number</code>er mindre enn 0 eller <code>Character</code> er ikke gyldig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>Character</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.StrReverse(System.String)
  id: StrReverse(System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: StrReverse(String)
  nameWithType: Strings.StrReverse(String)
  fullName: Microsoft.VisualBasic.Strings.StrReverse(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en streng der tegnrekkefølgen for en angitt streng er reversert."
  remarks: "Den `StrReverse` -funksjonen returnerer en streng som inneholder samme tegn som `Expression`, men i motsatt rekkefølge."
  example:
  - '[!code-vb[VbVbalrStrings#29](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._7_1.vb)]'
  syntax:
    content: public static string StrReverse (string Expression);
    parameters:
    - id: Expression
      type: System.String
      description: "Kreves. Strengeuttrykk som inneholder tegn som skal reverseres. Hvis `Expression` er en tom streng (&quot;&quot;), returneres en tom streng."
    return:
      type: System.String
      description: "Returnerer en streng der tegnrekkefølgen for en angitt streng er reversert."
  overload: Microsoft.VisualBasic.Strings.StrReverse*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Trim(System.String)
  id: Trim(System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Trim(String)
  nameWithType: Strings.Trim(String)
  fullName: Microsoft.VisualBasic.Strings.Trim(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en streng som inneholder en kopi av en angitt streng uten innledende mellomrom (<xref uid=&quot;langword_csharp_LTrim&quot; name=&quot;LTrim&quot; href=&quot;&quot;></xref>), uten avsluttende mellomrom (<xref uid=&quot;langword_csharp_RTrim&quot; name=&quot;RTrim&quot; href=&quot;&quot;></xref>), uten innledende eller avsluttende mellomrom (<xref uid=&quot;langword_csharp_Trim&quot; name=&quot;Trim&quot; href=&quot;&quot;></xref>)."
  remarks: "Den `LTrim`, `RTrim`, og `Trim` funksjoner fjerne mellomrom fra slutten av strenger."
  example:
  - "This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable. It uses the `Trim` function to strip both types of spaces.  \n  \n [!code-vb[VbVbalrStrings#25](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._87_1.vb)]"
  syntax:
    content: public static string Trim (string str);
    parameters:
    - id: str
      type: System.String
      description: "Kreves. Et gyldig <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttrykk."
    return:
      type: System.String
      description: "Returnerer en streng som inneholder en kopi av en angitt streng uten innledende mellomrom (<xref uid=&quot;langword_csharp_LTrim&quot; name=&quot;LTrim&quot; href=&quot;&quot;></xref>), uten avsluttende mellomrom (<xref uid=&quot;langword_csharp_RTrim&quot; name=&quot;RTrim&quot; href=&quot;&quot;></xref>), uten innledende eller avsluttende mellomrom (<xref uid=&quot;langword_csharp_Trim&quot; name=&quot;Trim&quot; href=&quot;&quot;></xref>)."
  overload: Microsoft.VisualBasic.Strings.Trim*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.UCase(System.Char)
  id: UCase(System.Char)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: UCase(Char)
  nameWithType: Strings.UCase(Char)
  fullName: Microsoft.VisualBasic.Strings.UCase(Char)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en streng eller et tegn som inneholder den angitte strengen konvertert til store bokstaver."
  remarks: "Bare små bokstaver er konvertert til store bokstaver. alle store bokstaver og tegn endres ikke.       Denne funksjonen bruker programmets kultur informasjonen når du redigerer strengen slik at små endringene er nødvendig for den nasjonale innstillingen programmet er i bruk.      > [!IMPORTANT] > Hvis programmet gjør sikkerhet avgjørelsene som er basert på resultatet av en sammenligning eller tilfelle endre operasjon, og deretter operasjonen skal bruke den <xref:System.String.Compare%2A?displayProperty=fullName>metoden og pass <xref:System.StringComparison>eller <xref:System.StringComparison>for den `comparisonType` argument.</xref:System.StringComparison> </xref:System.StringComparison> </xref:System.String.Compare%2A?displayProperty=fullName> Hvis du vil ha mer informasjon, se [hvordan kultur påvirker strenger i Visual Basic](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This example uses the `UCase` function to return an uppercase version of a string.  \n  \n [!code-vb[VbVbalrStrings#31](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._201_1.vb)]"
  syntax:
    content: public static char UCase (char Value);
    parameters:
    - id: Value
      type: System.Char
      description: "Kreves. Et gyldig <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> eller <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> uttrykk."
    return:
      type: System.Char
      description: "Returnerer en streng eller et tegn som inneholder den angitte strengen konvertert til store bokstaver."
  overload: Microsoft.VisualBasic.Strings.UCase*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.UCase(System.String)
  id: UCase(System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: UCase(String)
  nameWithType: Strings.UCase(String)
  fullName: Microsoft.VisualBasic.Strings.UCase(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerer en streng eller et tegn som inneholder den angitte strengen konvertert til store bokstaver."
  remarks: "Bare små bokstaver er konvertert til store bokstaver. alle store bokstaver og tegn endres ikke.       Denne funksjonen bruker programmets kultur informasjonen når du redigerer strengen slik at små endringene er nødvendig for den nasjonale innstillingen programmet er i bruk.      > [!IMPORTANT] > Hvis programmet gjør sikkerhet avgjørelsene som er basert på resultatet av en sammenligning eller tilfelle endre operasjon, og deretter operasjonen skal bruke den <xref:System.String.Compare%2A?displayProperty=fullName>metoden og pass <xref:System.StringComparison>eller <xref:System.StringComparison>for den `comparisonType` argument.</xref:System.StringComparison> </xref:System.StringComparison> </xref:System.String.Compare%2A?displayProperty=fullName> Hvis du vil ha mer informasjon, se [hvordan kultur påvirker strenger i Visual Basic](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This example uses the `UCase` function to return an uppercase version of a string.  \n  \n [!code-vb[VbVbalrStrings#31](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._23_1.vb)]"
  syntax:
    content: public static string UCase (string Value);
    parameters:
    - id: Value
      type: System.String
      description: "Kreves. Et gyldig <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> eller <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> uttrykk."
    return:
      type: System.String
      description: "Returnerer en streng eller et tegn som inneholder den angitte strengen konvertert til store bokstaver."
  overload: Microsoft.VisualBasic.Strings.UCase*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: Microsoft.VisualBasic.Strings.Asc(System.Char)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Asc(Char)
  nameWithType: Strings.Asc(Char)
  fullName: Microsoft.VisualBasic.Strings.Asc(Char)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: Microsoft.VisualBasic.Strings.Asc(System.String)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Asc(String)
  nameWithType: Strings.Asc(String)
  fullName: Microsoft.VisualBasic.Strings.Asc(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Strings.AscW(System.Char)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: AscW(Char)
  nameWithType: Strings.AscW(Char)
  fullName: Microsoft.VisualBasic.Strings.AscW(Char)
- uid: Microsoft.VisualBasic.Strings.AscW(System.String)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: AscW(String)
  nameWithType: Strings.AscW(String)
  fullName: Microsoft.VisualBasic.Strings.AscW(String)
- uid: Microsoft.VisualBasic.Strings.Chr(System.Int32)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Chr(Int32)
  nameWithType: Strings.Chr(Int32)
  fullName: Microsoft.VisualBasic.Strings.Chr(Int32)
- uid: Microsoft.VisualBasic.Strings.ChrW(System.Int32)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: ChrW(Int32)
  nameWithType: Strings.ChrW(Int32)
  fullName: Microsoft.VisualBasic.Strings.ChrW(Int32)
- uid: Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Filter(Object[],String,Boolean,CompareMethod)
  nameWithType: Strings.Filter(Object[],String,Boolean,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.Filter(Object[],String,Boolean,CompareMethod)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.CompareMethod
  parent: Microsoft.VisualBasic
  isExternal: false
  name: CompareMethod
  nameWithType: CompareMethod
  fullName: Microsoft.VisualBasic.CompareMethod
- uid: Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Filter(String[],String,Boolean,CompareMethod)
  nameWithType: Strings.Filter(String[],String,Boolean,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.Filter(String[],String,Boolean,CompareMethod)
- uid: Microsoft.VisualBasic.Strings.Format(System.Object,System.String)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Format(Object,String)
  nameWithType: Strings.Format(Object,String)
  fullName: Microsoft.VisualBasic.Strings.Format(Object,String)
- uid: Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: FormatCurrency(Object,Int32,TriState,TriState,TriState)
  nameWithType: Strings.FormatCurrency(Object,Int32,TriState,TriState,TriState)
  fullName: Microsoft.VisualBasic.Strings.FormatCurrency(Object,Int32,TriState,TriState,TriState)
- uid: Microsoft.VisualBasic.TriState
  parent: Microsoft.VisualBasic
  isExternal: false
  name: TriState
  nameWithType: TriState
  fullName: Microsoft.VisualBasic.TriState
- uid: Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: FormatDateTime(DateTime,DateFormat)
  nameWithType: Strings.FormatDateTime(DateTime,DateFormat)
  fullName: Microsoft.VisualBasic.Strings.FormatDateTime(DateTime,DateFormat)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.VisualBasic.DateFormat
  parent: Microsoft.VisualBasic
  isExternal: false
  name: DateFormat
  nameWithType: DateFormat
  fullName: Microsoft.VisualBasic.DateFormat
- uid: Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: FormatNumber(Object,Int32,TriState,TriState,TriState)
  nameWithType: Strings.FormatNumber(Object,Int32,TriState,TriState,TriState)
  fullName: Microsoft.VisualBasic.Strings.FormatNumber(Object,Int32,TriState,TriState,TriState)
- uid: Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: FormatPercent(Object,Int32,TriState,TriState,TriState)
  nameWithType: Strings.FormatPercent(Object,Int32,TriState,TriState,TriState)
  fullName: Microsoft.VisualBasic.Strings.FormatPercent(Object,Int32,TriState,TriState,TriState)
- uid: Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: GetChar(String,Int32)
  nameWithType: Strings.GetChar(String,Int32)
  fullName: Microsoft.VisualBasic.Strings.GetChar(String,Int32)
- uid: Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: InStr(String,String,CompareMethod)
  nameWithType: Strings.InStr(String,String,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.InStr(String,String,CompareMethod)
- uid: Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: InStr(Int32,String,String,CompareMethod)
  nameWithType: Strings.InStr(Int32,String,String,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.InStr(Int32,String,String,CompareMethod)
- uid: Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: InStrRev(String,String,Int32,CompareMethod)
  nameWithType: Strings.InStrRev(String,String,Int32,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.InStrRev(String,String,Int32,CompareMethod)
- uid: Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Join(Object[],String)
  nameWithType: Strings.Join(Object[],String)
  fullName: Microsoft.VisualBasic.Strings.Join(Object[],String)
- uid: Microsoft.VisualBasic.Strings.Join(System.String[],System.String)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Join(String[],String)
  nameWithType: Strings.Join(String[],String)
  fullName: Microsoft.VisualBasic.Strings.Join(String[],String)
- uid: Microsoft.VisualBasic.Strings.LCase(System.Char)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: LCase(Char)
  nameWithType: Strings.LCase(Char)
  fullName: Microsoft.VisualBasic.Strings.LCase(Char)
- uid: Microsoft.VisualBasic.Strings.LCase(System.String)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: LCase(String)
  nameWithType: Strings.LCase(String)
  fullName: Microsoft.VisualBasic.Strings.LCase(String)
- uid: Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Left(String,Int32)
  nameWithType: Strings.Left(String,Int32)
  fullName: Microsoft.VisualBasic.Strings.Left(String,Int32)
- uid: Microsoft.VisualBasic.Strings.Len(System.Boolean)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(Boolean)
  nameWithType: Strings.Len(Boolean)
  fullName: Microsoft.VisualBasic.Strings.Len(Boolean)
- uid: Microsoft.VisualBasic.Strings.Len(System.Byte)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(Byte)
  nameWithType: Strings.Len(Byte)
  fullName: Microsoft.VisualBasic.Strings.Len(Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Microsoft.VisualBasic.Strings.Len(System.Char)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(Char)
  nameWithType: Strings.Len(Char)
  fullName: Microsoft.VisualBasic.Strings.Len(Char)
- uid: Microsoft.VisualBasic.Strings.Len(System.DateTime)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(DateTime)
  nameWithType: Strings.Len(DateTime)
  fullName: Microsoft.VisualBasic.Strings.Len(DateTime)
- uid: Microsoft.VisualBasic.Strings.Len(System.Decimal)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(Decimal)
  nameWithType: Strings.Len(Decimal)
  fullName: Microsoft.VisualBasic.Strings.Len(Decimal)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: Microsoft.VisualBasic.Strings.Len(System.Double)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(Double)
  nameWithType: Strings.Len(Double)
  fullName: Microsoft.VisualBasic.Strings.Len(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.VisualBasic.Strings.Len(System.Int16)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(Int16)
  nameWithType: Strings.Len(Int16)
  fullName: Microsoft.VisualBasic.Strings.Len(Int16)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: Microsoft.VisualBasic.Strings.Len(System.Int32)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(Int32)
  nameWithType: Strings.Len(Int32)
  fullName: Microsoft.VisualBasic.Strings.Len(Int32)
- uid: Microsoft.VisualBasic.Strings.Len(System.Int64)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(Int64)
  nameWithType: Strings.Len(Int64)
  fullName: Microsoft.VisualBasic.Strings.Len(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.Strings.Len(System.Object)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(Object)
  nameWithType: Strings.Len(Object)
  fullName: Microsoft.VisualBasic.Strings.Len(Object)
- uid: Microsoft.VisualBasic.Strings.Len(System.SByte)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(SByte)
  nameWithType: Strings.Len(SByte)
  fullName: Microsoft.VisualBasic.Strings.Len(SByte)
- uid: System.SByte
  parent: System
  isExternal: true
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: Microsoft.VisualBasic.Strings.Len(System.Single)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(Single)
  nameWithType: Strings.Len(Single)
  fullName: Microsoft.VisualBasic.Strings.Len(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.VisualBasic.Strings.Len(System.String)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(String)
  nameWithType: Strings.Len(String)
  fullName: Microsoft.VisualBasic.Strings.Len(String)
- uid: Microsoft.VisualBasic.Strings.Len(System.UInt16)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(UInt16)
  nameWithType: Strings.Len(UInt16)
  fullName: Microsoft.VisualBasic.Strings.Len(UInt16)
- uid: System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: Microsoft.VisualBasic.Strings.Len(System.UInt32)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(UInt32)
  nameWithType: Strings.Len(UInt32)
  fullName: Microsoft.VisualBasic.Strings.Len(UInt32)
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Microsoft.VisualBasic.Strings.Len(System.UInt64)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(UInt64)
  nameWithType: Strings.Len(UInt64)
  fullName: Microsoft.VisualBasic.Strings.Len(UInt64)
- uid: System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: LSet(String,Int32)
  nameWithType: Strings.LSet(String,Int32)
  fullName: Microsoft.VisualBasic.Strings.LSet(String,Int32)
- uid: Microsoft.VisualBasic.Strings.LTrim(System.String)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: LTrim(String)
  nameWithType: Strings.LTrim(String)
  fullName: Microsoft.VisualBasic.Strings.LTrim(String)
- uid: Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Mid(String,Int32)
  nameWithType: Strings.Mid(String,Int32)
  fullName: Microsoft.VisualBasic.Strings.Mid(String,Int32)
- uid: Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Mid(String,Int32,Int32)
  nameWithType: Strings.Mid(String,Int32,Int32)
  fullName: Microsoft.VisualBasic.Strings.Mid(String,Int32,Int32)
- uid: Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Replace(String,String,String,Int32,Int32,CompareMethod)
  nameWithType: Strings.Replace(String,String,String,Int32,Int32,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.Replace(String,String,String,Int32,Int32,CompareMethod)
- uid: Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Right(String,Int32)
  nameWithType: Strings.Right(String,Int32)
  fullName: Microsoft.VisualBasic.Strings.Right(String,Int32)
- uid: Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: RSet(String,Int32)
  nameWithType: Strings.RSet(String,Int32)
  fullName: Microsoft.VisualBasic.Strings.RSet(String,Int32)
- uid: Microsoft.VisualBasic.Strings.RTrim(System.String)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: RTrim(String)
  nameWithType: Strings.RTrim(String)
  fullName: Microsoft.VisualBasic.Strings.RTrim(String)
- uid: Microsoft.VisualBasic.Strings.Space(System.Int32)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Space(Int32)
  nameWithType: Strings.Space(Int32)
  fullName: Microsoft.VisualBasic.Strings.Space(Int32)
- uid: Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Split(String,String,Int32,CompareMethod)
  nameWithType: Strings.Split(String,String,Int32,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.Split(String,String,Int32,CompareMethod)
- uid: Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: StrComp(String,String,CompareMethod)
  nameWithType: Strings.StrComp(String,String,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.StrComp(String,String,CompareMethod)
- uid: Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: StrConv(String,VbStrConv,Int32)
  nameWithType: Strings.StrConv(String,VbStrConv,Int32)
  fullName: Microsoft.VisualBasic.Strings.StrConv(String,VbStrConv,Int32)
- uid: Microsoft.VisualBasic.VbStrConv
  parent: Microsoft.VisualBasic
  isExternal: false
  name: VbStrConv
  nameWithType: VbStrConv
  fullName: Microsoft.VisualBasic.VbStrConv
- uid: Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: StrDup(Int32,Char)
  nameWithType: Strings.StrDup(Int32,Char)
  fullName: Microsoft.VisualBasic.Strings.StrDup(Int32,Char)
- uid: Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: StrDup(Int32,Object)
  nameWithType: Strings.StrDup(Int32,Object)
  fullName: Microsoft.VisualBasic.Strings.StrDup(Int32,Object)
- uid: Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: StrDup(Int32,String)
  nameWithType: Strings.StrDup(Int32,String)
  fullName: Microsoft.VisualBasic.Strings.StrDup(Int32,String)
- uid: Microsoft.VisualBasic.Strings.StrReverse(System.String)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: StrReverse(String)
  nameWithType: Strings.StrReverse(String)
  fullName: Microsoft.VisualBasic.Strings.StrReverse(String)
- uid: Microsoft.VisualBasic.Strings.Trim(System.String)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Trim(String)
  nameWithType: Strings.Trim(String)
  fullName: Microsoft.VisualBasic.Strings.Trim(String)
- uid: Microsoft.VisualBasic.Strings.UCase(System.Char)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: UCase(Char)
  nameWithType: Strings.UCase(Char)
  fullName: Microsoft.VisualBasic.Strings.UCase(Char)
- uid: Microsoft.VisualBasic.Strings.UCase(System.String)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: UCase(String)
  nameWithType: Strings.UCase(String)
  fullName: Microsoft.VisualBasic.Strings.UCase(String)
- uid: Microsoft.VisualBasic.Strings.Asc*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Asc
  nameWithType: Strings.Asc
- uid: Microsoft.VisualBasic.Strings.AscW*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: AscW
  nameWithType: Strings.AscW
- uid: Microsoft.VisualBasic.Strings.Chr*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Chr
  nameWithType: Strings.Chr
- uid: Microsoft.VisualBasic.Strings.ChrW*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: ChrW
  nameWithType: Strings.ChrW
- uid: Microsoft.VisualBasic.Strings.Filter*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Filter
  nameWithType: Strings.Filter
- uid: Microsoft.VisualBasic.Strings.Format*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Format
  nameWithType: Strings.Format
- uid: Microsoft.VisualBasic.Strings.FormatCurrency*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: FormatCurrency
  nameWithType: Strings.FormatCurrency
- uid: Microsoft.VisualBasic.Strings.FormatDateTime*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: FormatDateTime
  nameWithType: Strings.FormatDateTime
- uid: Microsoft.VisualBasic.Strings.FormatNumber*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: FormatNumber
  nameWithType: Strings.FormatNumber
- uid: Microsoft.VisualBasic.Strings.FormatPercent*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: FormatPercent
  nameWithType: Strings.FormatPercent
- uid: Microsoft.VisualBasic.Strings.GetChar*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: GetChar
  nameWithType: Strings.GetChar
- uid: Microsoft.VisualBasic.Strings.InStr*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: InStr
  nameWithType: Strings.InStr
- uid: Microsoft.VisualBasic.Strings.InStrRev*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: InStrRev
  nameWithType: Strings.InStrRev
- uid: Microsoft.VisualBasic.Strings.Join*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Join
  nameWithType: Strings.Join
- uid: Microsoft.VisualBasic.Strings.LCase*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: LCase
  nameWithType: Strings.LCase
- uid: Microsoft.VisualBasic.Strings.Left*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Left
  nameWithType: Strings.Left
- uid: Microsoft.VisualBasic.Strings.Len*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len
  nameWithType: Strings.Len
- uid: Microsoft.VisualBasic.Strings.LSet*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: LSet
  nameWithType: Strings.LSet
- uid: Microsoft.VisualBasic.Strings.LTrim*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: LTrim
  nameWithType: Strings.LTrim
- uid: Microsoft.VisualBasic.Strings.Mid*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Mid
  nameWithType: Strings.Mid
- uid: Microsoft.VisualBasic.Strings.Replace*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Replace
  nameWithType: Strings.Replace
- uid: Microsoft.VisualBasic.Strings.Right*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Right
  nameWithType: Strings.Right
- uid: Microsoft.VisualBasic.Strings.RSet*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: RSet
  nameWithType: Strings.RSet
- uid: Microsoft.VisualBasic.Strings.RTrim*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: RTrim
  nameWithType: Strings.RTrim
- uid: Microsoft.VisualBasic.Strings.Space*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Space
  nameWithType: Strings.Space
- uid: Microsoft.VisualBasic.Strings.Split*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Split
  nameWithType: Strings.Split
- uid: Microsoft.VisualBasic.Strings.StrComp*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: StrComp
  nameWithType: Strings.StrComp
- uid: Microsoft.VisualBasic.Strings.StrConv*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: StrConv
  nameWithType: Strings.StrConv
- uid: Microsoft.VisualBasic.Strings.StrDup*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: StrDup
  nameWithType: Strings.StrDup
- uid: Microsoft.VisualBasic.Strings.StrReverse*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: StrReverse
  nameWithType: Strings.StrReverse
- uid: Microsoft.VisualBasic.Strings.Trim*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Trim
  nameWithType: Strings.Trim
- uid: Microsoft.VisualBasic.Strings.UCase*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: UCase
  nameWithType: Strings.UCase
