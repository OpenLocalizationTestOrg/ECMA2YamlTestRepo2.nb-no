### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.ECDiffieHellmanCng
  id: ECDiffieHellmanCng
  children:
  - System.Security.Cryptography.ECDiffieHellmanCng.#ctor
  - System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)
  - System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)
  - System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])
  - System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])
  - System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)
  - System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)
  - System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])
  - System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)
  - System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)
  - System.Security.Cryptography.ECDiffieHellmanCng.Dispose(System.Boolean)
  - System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)
  - System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)
  - System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm
  - System.Security.Cryptography.ECDiffieHellmanCng.HmacKey
  - System.Security.Cryptography.ECDiffieHellmanCng.Key
  - System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction
  - System.Security.Cryptography.ECDiffieHellmanCng.Label
  - System.Security.Cryptography.ECDiffieHellmanCng.PublicKey
  - System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend
  - System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend
  - System.Security.Cryptography.ECDiffieHellmanCng.Seed
  - System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)
  - System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)
  - System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey
  langs:
  - csharp
  name: ECDiffieHellmanCng
  nameWithType: ECDiffieHellmanCng
  fullName: System.Security.Cryptography.ECDiffieHellmanCng
  type: Class
  summary: "Inneholder en kryptografi neste generasjon (CNG) implementering av algoritmen Elliptic kurve Diffie-Hellman (ECDH). Denne klassen brukes til å utføre kryptografiske operasjoner."
  remarks: "Klassen ECDiffieHellmanCng aktiverer to parter til exchange private nøkkelen materiale selv om de kommuniserer via en offentlig kanal.  Begge parter kan beregne samme hemmelige-verdien som er referert til som den *hemmelig avtale* i forvaltet Diffie-Hellman klassene. Hemmelig avtale kan deretter brukes for en rekke formål, inkludert som en symmetrisk nøkkel. I stedet for at hemmelig avtale direkte, støtter klassen ECDiffieHellmanCng noen etterbehandling i avtalen før du oppgir verdien. Denne etterbehandling kalles i *for utledning-funksjonen (KDF)*; du kan velge hvilken KDF du vil bruke, og angi parameterne gjennom et sett med egenskaper for forekomsten av Diffie-Hellman-objektet.      | Nøkkel utleding funksjonen | Egenskaper |   |-----------------------------|----------------|   | <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>| <xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A>-Hash-algoritmen som brukes til å behandle hemmelig avtale.</xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A> </xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction><br /><br /> <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>– En valgfri bytematrise til sikkerhetskopifilnavnene hemmelige avtalen før nummer den.</xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A><br /><br /> <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A>– En valgfri bytematrise skal føyes til den hemmelige avtalen før nummer det. |   | <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>| <xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A>-Hash-algoritmen som brukes til å behandle hemmelig avtale.</xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A> </xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction></xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A><br /><br /> <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>– En valgfri bytematrise til sikkerhetskopifilnavnene hemmelige avtalen før nummer den.</xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A><br /><br /> <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A>– En valgfri bytematrise skal føyes til den hemmelige avtalen før nummer det. |   | <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>| <xref:System.Security.Cryptography.ECDiffieHellmanCng.Label%2A>-Etiketten for nøkkelen utledning.</xref:System.Security.Cryptography.ECDiffieHellmanCng.Label%2A> </xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction></xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A><br /><br /> <xref:System.Security.Cryptography.ECDiffieHellmanCng.Seed%2A>-Seed for nøkkelen utledning. |       Resultatet av Kast hemmelig avtale via key utledning-funksjonen er en bytematrise som kan brukes som nøkkel materiale for programmet.</xref:System.Security.Cryptography.ECDiffieHellmanCng.Seed%2A> Antall byte oppbygning key generert er avhengig av key utledning-funksjonen. for eksempel genererer SHA-256 256 biter key materiale, mens SHA 512 genererer 512 biter key oppbygning. Basic flyten av en ECDH nøkkelens utvekslingsnøkkel er som følger: 1.  Anne og Bob kan du opprette et nøkkelpar skal brukes for Diffie-Hellman nøkkelutvekslingen operasjonen 2.  Anne og Bob Konfigurer KDF ved hjelp av godtatt parametere på.      3.  Anne sender Bob fellesnøkkelen hennes.      4.  BOB sender Alice sin fellesnøkkel.      5.  Anne Bob Bruk hverandre fellesnøkler til å generere hemmelige avtalen og bruke KDF hemmelige avtalen for å generere nøkkelen materiale."
  example:
  - "The following example shows how to use the ECDiffieHellmanCng class to establish a key exchange and how to use that key to encrypt a message that can be sent over a public channel and decrypted by the receiver.  \n  \n [!code-vb[ECDiffieHellmanCng#1](~/add/codesnippet/visualbasic/t-system.security.crypto_88_1.vb)]\n [!code-cs[ECDiffieHellmanCng#1](~/add/codesnippet/csharp/t-system.security.crypto_88_1.cs)]"
  syntax:
    content: 'public sealed class ECDiffieHellmanCng : System.Security.Cryptography.ECDiffieHellman'
  inheritance:
  - System.Object
  - System.Security.Cryptography.AsymmetricAlgorithm
  - System.Security.Cryptography.ECDiffieHellman
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.AsymmetricAlgorithm.Clear
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.ECDiffieHellman.Create
  - System.Security.Cryptography.ECDiffieHellman.Create(System.String)
  - System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[])
  - System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm
  - System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: ECDiffieHellmanCng()
  nameWithType: ECDiffieHellmanCng.ECDiffieHellmanCng()
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ECDiffieHellmanCng()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanCng&quot;> </xref> klassen med et tilfeldig nøkkelpar."
  remarks: "Tilfeldig nøkkelparet har en standard offentlig nøkkellengde på 521 biter."
  syntax:
    content: public ECDiffieHellmanCng ();
    parameters: []
  overload: System.Security.Cryptography.ECDiffieHellmanCng.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: ECDiffieHellmanCng(Int32)
  nameWithType: ECDiffieHellmanCng.ECDiffieHellmanCng(Int32)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ECDiffieHellmanCng(Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanCng&quot;> </xref> klassen med et tilfeldig nøkkelpar, ved hjelp av den angitte nøkkelstørrelsen."
  remarks: "Tilfeldig nøkkelparet får offentlige nøkkellengden er definert av den `keySize` parameteren."
  syntax:
    content: public ECDiffieHellmanCng (int keySize);
    parameters:
    - id: keySize
      type: System.Int32
      description: "Størrelsen på nøkkelen. Ugyldig er nøkkel 256, 384 og 521 biter."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>keySize</code>angir en ugyldig lengde."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Kryptografi neste generasjon (CNG) klasser støttes ikke på dette systemet."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)
  id: '#ctor(System.Security.Cryptography.CngKey)'
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: ECDiffieHellmanCng(CngKey)
  nameWithType: ECDiffieHellmanCng.ECDiffieHellmanCng(CngKey)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ECDiffieHellmanCng(CngKey)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanCng&quot;> </xref> klassen ved hjelp av den angitte <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> objektet."
  syntax:
    content: public ECDiffieHellmanCng (System.Security.Cryptography.CngKey key);
    parameters:
    - id: key
      type: System.Security.Cryptography.CngKey
      description: "Nøkkelen som brukes som inndata til de kryptografiske operasjonene som utføres av det gjeldende objektet."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>key</code>angir ikke en elliptisk kurve Diffie-Hellman (ECDH) algoritmen gruppe."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Kryptografi neste generasjon (CNG) klasser støttes ikke på dette systemet."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])
  id: DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])
  nameWithType: ECDiffieHellmanCng.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Utleder byte som kan brukes som en nøkkel med en hash-funksjonen gitt en tredjepart fellesnøkkel, hash-algoritmen navn, en prepend verdi og en append-verdi."
  remarks: "Hvis verdien for `secretPrepend` eller `secretAppend` er `null`, behandles de som tom matriser."
  syntax:
    content: public override byte[] DeriveKeyFromHash (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, byte[] secretPrepend, byte[] secretAppend);
    parameters:
    - id: otherPartyPublicKey
      type: System.Security.Cryptography.ECDiffieHellmanPublicKey
      description: "Den andres fellesnøkkel."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "Hash-algoritmen til å bruke avledes key materiale."
    - id: secretPrepend
      type: System.Byte[]
      description: "En verdi som sikkerhetskopifilnavnene avledede hemmeligheten før nummer."
    - id: secretAppend
      type: System.Byte[]
      description: "En verdi som skal føyes til den utledede hemmeligheten før nummer."
    return:
      type: System.Byte[]
      description: "Nøkkelen materiale fra nøkkelutvekslingen med en annen krever fellesnøkkel."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>otherPartyPublicKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>otherPartyPublicKey</code>er ikke en ECDH nøkkel, eller det er ikke riktig størrelse.       -or-       <code>hashAlgorithm</code>.<xref:System.Security.Cryptography.HashAlgorithmName.Name*> er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Alle andre feil."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])
  id: DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])
  nameWithType: ECDiffieHellmanCng.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Utleder byte som kan brukes som en nøkkel med en Hash-baserte Message Authentication Code (HMAC)."
  remarks: "Hvis verdien for `secretPrepend` eller `secretAppend` er `null`, behandles de som tom matriser. Hvis verdien for `hmacKey` er `null`, resultatet av algoritmen Elliptic kurve Diffie-Hellman (ECDH) brukes som nøkkelen for HMAC."
  syntax:
    content: public override byte[] DeriveKeyFromHmac (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, byte[] hmacKey, byte[] secretPrepend, byte[] secretAppend);
    parameters:
    - id: otherPartyPublicKey
      type: System.Security.Cryptography.ECDiffieHellmanPublicKey
      description: "Den andres fellesnøkkel."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "Hash-algoritmen til å bruke avledes key materiale."
    - id: hmacKey
      type: System.Byte[]
      description: "Nøkkelen for HMAC."
    - id: secretPrepend
      type: System.Byte[]
      description: "En verdi som sikkerhetskopifilnavnene avledede hemmeligheten før nummer."
    - id: secretAppend
      type: System.Byte[]
      description: "En verdi som skal føyes til den utledede hemmeligheten før nummer."
    return:
      type: System.Byte[]
      description: "Nøkkelen materiale fra nøkkelutvekslingen med en annen krever fellesnøkkel."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>otherPartyPublicKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>otherPartyPublicKey</code>er ikke en ECDH nøkkel, eller det er ikke riktig størrelse.       -or-       <code>hashAlgorithm</code>.<xref:System.Security.Cryptography.HashAlgorithmName.Name*> er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Alle andre feil."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)
  id: DeriveKeyMaterial(System.Security.Cryptography.CngKey)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: DeriveKeyMaterial(CngKey)
  nameWithType: ECDiffieHellmanCng.DeriveKeyMaterial(CngKey)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(CngKey)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Avledes key materiale som er generert fra hemmelig avtale mellom to parter gitt en <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> objekt som inneholder den andre tredjeparter fellesnøkkel."
  syntax:
    content: public byte[] DeriveKeyMaterial (System.Security.Cryptography.CngKey otherPartyPublicKey);
    parameters:
    - id: otherPartyPublicKey
      type: System.Security.Cryptography.CngKey
      description: "Et objekt som inneholder den offentlige delen av elliptisk kurve Diffie-Hellman (ECDH)-nøkkelen fra motparten i nøkkelutvekslingen."
    return:
      type: System.Byte[]
      description: "En bytematrise som inneholder key materiale. Denne informasjonen blir generert fra hemmelige avtalen som beregnes fra det gjeldende objektet privat nøkkel og angitte fellesnøkkelen."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>otherPartyPublicKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>otherPartyPublicKey</code>er ugyldig. Enten den <xref:System.Security.Cryptography.CngKey.AlgorithmGroup*> egenskapen er ikke angitt <xref:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman*> eller dens nøkkelstørrelsen samsvarer ikke med nøkkelstørrelsen på denne forekomsten."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Dette objektet <> </> *> egenskapen angir de <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction&quot;> </xref> key utledning-funksjonen, men enten <> </> *> eller <xref:System.Security.Cryptography.ECDiffieHellmanCng.Seed*>er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.ECDiffieHellmanCng.Seed*>"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Alle andre feil."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)
  id: DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: DeriveKeyMaterial(ECDiffieHellmanPublicKey)
  nameWithType: ECDiffieHellmanCng.DeriveKeyMaterial(ECDiffieHellmanPublicKey)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(ECDiffieHellmanPublicKey)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Avledes key materiale som er generert fra hemmelig avtale mellom to parter gitt en <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanPublicKey&quot;> </xref> objekt som inneholder den andre tredjeparter fellesnøkkel."
  syntax:
    content: public override byte[] DeriveKeyMaterial (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey);
    parameters:
    - id: otherPartyPublicKey
      type: System.Security.Cryptography.ECDiffieHellmanPublicKey
      description: "Fellesnøkkel fra motparten i nøkkelutvekslingen."
    return:
      type: System.Byte[]
      description: "En bytematrise som inneholder key materiale. Denne informasjonen blir generert fra hemmelige avtalen som beregnes fra det gjeldende objektet privat nøkkel og angitte fellesnøkkelen."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>otherPartyPublicKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>otherPartyPublicKey</code>er ikke en <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanCngPublicKey&quot;> </xref> nøkkel."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])
  id: DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])
  nameWithType: ECDiffieHellmanCng.DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Utleder byte som kan brukes som en nøkkel med en sikkerhet TLS (Transport Layer) Pseudo-Random funksjonen (PRF) utledning algoritmen."
  syntax:
    content: public override byte[] DeriveKeyTls (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, byte[] prfLabel, byte[] prfSeed);
    parameters:
    - id: otherPartyPublicKey
      type: System.Security.Cryptography.ECDiffieHellmanPublicKey
      description: "Den andres fellesnøkkel."
    - id: prfLabel
      type: System.Byte[]
      description: "ASCII-kodet PRF etiketten."
    - id: prfSeed
      type: System.Byte[]
      description: "64-byte PRF utgangsverdi."
    return:
      type: System.Byte[]
      description: "Nøkkelen materiale fra nøkkelutvekslingen med en annen krever fellesnøkkel."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>otherPartyPublicKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>prfLabel</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>prfSeed</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>otherPartyPublicKey</code>er ikke en ECDH nøkkel, eller det er ikke riktig størrelse."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>prfSeed</code>er ikke nøyaktig 64 byte.       - eller andre kryptografisk feil."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)
  id: DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: DeriveSecretAgreementHandle(CngKey)
  nameWithType: ECDiffieHellmanCng.DeriveSecretAgreementHandle(CngKey)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(CngKey)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Henter en referanse til hemmelig avtale generert mellom to parter gitt en <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> objekt som inneholder den andre tredjeparter fellesnøkkel."
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle DeriveSecretAgreementHandle (System.Security.Cryptography.CngKey otherPartyPublicKey);
    parameters:
    - id: otherPartyPublicKey
      type: System.Security.Cryptography.CngKey
      description: "Et objekt som inneholder den offentlige delen av elliptisk kurve Diffie-Hellman (ECDH)-nøkkelen fra motparten i nøkkelutvekslingen."
    return:
      type: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle
      description: "En referanse til hemmelig avtale. Denne informasjonen beregnes fra det gjeldende objektet privat nøkkel og angitte fellesnøkkelen."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>otherPartyPublicKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>otherPartyPublicKey</code>er ikke en ECDH nøkkel, eller det er ikke riktig størrelse."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Alle andre feil."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)
  id: DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: DeriveSecretAgreementHandle(ECDiffieHellmanPublicKey)
  nameWithType: ECDiffieHellmanCng.DeriveSecretAgreementHandle(ECDiffieHellmanPublicKey)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(ECDiffieHellmanPublicKey)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Henter en referanse til hemmelig avtale generert mellom to parter gitt en <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanPublicKey&quot;> </xref> objekt som inneholder den andre tredjeparter fellesnøkkel."
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle DeriveSecretAgreementHandle (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey);
    parameters:
    - id: otherPartyPublicKey
      type: System.Security.Cryptography.ECDiffieHellmanPublicKey
      description: "Fellesnøkkel fra motparten i nøkkelutvekslingen."
    return:
      type: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle
      description: "En referanse til hemmelig avtale. Denne informasjonen beregnes fra det gjeldende objektet privat nøkkel og angitte fellesnøkkelen."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>otherPartyPublicKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>otherPartyPublicKey</code>er ikke en <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanPublicKey&quot;> </xref> nøkkel."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ECDiffieHellmanCng.Dispose(Boolean)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Som skal legges til."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)
  id: FromXmlString(System.String)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: FromXmlString(String)
  nameWithType: ECDiffieHellmanCng.FromXmlString(String)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Denne metoden er ikke implementert."
  remarks: "Hvis du vil deserialisere en XML-nøkkel, kan du bruke den <xref:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29>overbelaste i stedet.</xref:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29>"
  syntax:
    content: public override void FromXmlString (string xmlString);
    parameters:
    - id: xmlString
      type: System.String
      description: "I XML-baserte nøkkelinformasjon deserialiseres."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "Denne metoden er ikke overstyres for denne forekomsten."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)
  id: FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: FromXmlString(String,ECKeyXmlFormat)
  nameWithType: ECDiffieHellmanCng.FromXmlString(String,ECKeyXmlFormat)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(String,ECKeyXmlFormat)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Deserializes nøkkelinformasjon fra en XML-strengen ved hjelp av angitt format."
  syntax:
    content: public void FromXmlString (string xml, System.Security.Cryptography.ECKeyXmlFormat format);
    parameters:
    - id: xml
      type: System.String
      description: "I XML-baserte nøkkelinformasjon deserialiseres."
    - id: format
      type: System.Security.Cryptography.ECKeyXmlFormat
      description: "En av verdiene for enumeration som angir formatet for XML-strengen. Den eneste som er godkjent formatet <xref href=&quot;System.Security.Cryptography.ECKeyXmlFormat&quot;> </xref>."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xml</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>xml</code>har feil format."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>format</code>angir et ugyldig format. Den eneste aksepterte verdien er <xref href=&quot;System.Security.Cryptography.ECKeyXmlFormat&quot;> </xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Alle andre feil."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm
  id: HashAlgorithm
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: HashAlgorithm
  nameWithType: ECDiffieHellmanCng.HashAlgorithm
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Henter eller angir nummeralgoritmen skal brukes ved generering key materiale."
  remarks: "Denne egenskapen brukes bare hvis for kryptografi neste generasjon (CNG) objekter i <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>eller <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>verdi er angitt i den <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A>egenskapen.</xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> </xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> </xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>       Egenskapen godtar følgende algoritmer: <xref:System.Security.Cryptography.CngAlgorithm.MD5%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A>, og <xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A>.</xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A> </xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A> </xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A> </xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A> </xref:System.Security.Cryptography.CngAlgorithm.MD5%2A>       Andre tilpassede hash-algoritmer kan også brukes.       Standard-algoritmen er <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>.</xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>"
  syntax:
    content: public System.Security.Cryptography.CngAlgorithm HashAlgorithm { get; set; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "Et objekt som angir hash-algoritmen."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Verdien er<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.HmacKey
  id: HmacKey
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: HmacKey
  nameWithType: ECDiffieHellmanCng.HmacKey
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.HmacKey
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Henter eller angir Hash-baserte Message Authentication Code (HMAC)-nøkkelen som brukes når det avledes key materiale."
  remarks: "Denne egenskapen gjelder bare når den <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>verdi er angitt i den <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A>egenskapen og <xref:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey%2A>egenskapen `false`.</xref:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey%2A> </xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> </xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> Verdien er som standard `null`."
  syntax:
    content: public byte[] HmacKey { get; set; }
    return:
      type: System.Byte[]
      description: "Hash-baserte Message Authentication Code (HMAC)-nøkkelen som brukes når det avledes key materiale."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.HmacKey*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.Key
  id: Key
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: Key
  nameWithType: ECDiffieHellmanCng.Key
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.Key
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Angir den <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> som brukes av gjeldende objekt for kryptografiske operasjoner."
  syntax:
    content: public System.Security.Cryptography.CngKey Key { get; }
    return:
      type: System.Security.Cryptography.CngKey
      description: "Nøkkelparet brukes av dette objektet til å utføre kryptografiske operasjoner."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.Key*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction
  id: KeyDerivationFunction
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: KeyDerivationFunction
  nameWithType: ECDiffieHellmanCng.KeyDerivationFunction
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Henter eller angir funksjonen key utledning for den <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanCng&quot;> </xref> klasse."
  remarks: "Egenskapen angir key utledning-funksjonen, som brukes til å transformere hemmelig avtale i nøkkelen materiale."
  syntax:
    content: public System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction KeyDerivationFunction { get; set; }
    return:
      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
      description: 'One of the <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction&quot;></xref> enumeration values: <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction&quot;></xref>, <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction&quot;></xref>, or <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction&quot;></xref>. Standardverdien er <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction&quot;> </xref>.'
  overload: System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Opplistingsverdien er utenfor området."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.Label
  id: Label
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: Label
  nameWithType: ECDiffieHellmanCng.Label
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.Label
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Henter eller angir etikettverdien som brukes til viktige utledning."
  remarks: "Denne verdien brukes for nøkkelen utledning hvis den <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>verdi er angitt i den <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A>egenskapen.</xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> </xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> Som standard er det `null`."
  syntax:
    content: public byte[] Label { get; set; }
    return:
      type: System.Byte[]
      description: "Etikettverdien."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.Label*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.PublicKey
  id: PublicKey
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: PublicKey
  nameWithType: ECDiffieHellmanCng.PublicKey
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.PublicKey
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Henter fellesnøkkelen som kan brukes av en annen <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanCng&quot;> </xref> objektet til å generere en delt hemmelig avtale."
  syntax:
    content: public override System.Security.Cryptography.ECDiffieHellmanPublicKey PublicKey { get; }
    return:
      type: System.Security.Cryptography.ECDiffieHellmanPublicKey
      description: "Fellesnøkkelen som er knyttet til denne forekomsten av den <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanCng&quot;> </xref> objektet."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.PublicKey*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend
  id: SecretAppend
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: SecretAppend
  nameWithType: ECDiffieHellmanCng.SecretAppend
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Henter eller angir en verdi som legges til hemmelig avtale ved generering av nøkkelen materiale."
  remarks: "Denne verdien brukes for nøkkelen utledning hvis den <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>eller <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>key utledning-funksjonen (KDF).</xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> </xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> Verdien som skal legges til i hemmelig avtale, og den kombinerte verdien som er sendt til KDF til å generere nøkkelen materiale. Verdien er som standard `null`."
  syntax:
    content: public byte[] SecretAppend { get; set; }
    return:
      type: System.Byte[]
      description: "Verdien som skal legges til hemmelig avtale."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend
  id: SecretPrepend
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: SecretPrepend
  nameWithType: ECDiffieHellmanCng.SecretPrepend
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Henter eller angir en verdi som legges til starten av hemmelig avtale når det avledes key materiale."
  remarks: "Denne verdien brukes for nøkkelen utledning hvis den <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A>egenskapen settes til én av følgende verdier:- <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>- <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>verdien som er foran hemmelig avtale, og den kombinerte verdien som er sendt til funksjonen key utledning (KDF) til å generere nøkkelen materiale.</xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> </xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> </xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> Verdien er som standard `null`."
  syntax:
    content: public byte[] SecretPrepend { get; set; }
    return:
      type: System.Byte[]
      description: "Verdien som skal legges til starten av den hemmelige avtalen under key utledning."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.Seed
  id: Seed
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: Seed
  nameWithType: ECDiffieHellmanCng.Seed
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.Seed
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Henter eller angir seedverdi som skal brukes når det avledes key materiale."
  remarks: "Denne verdien brukes for nøkkelen utledning Hvis <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A>egenskapen er satt til <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>.</xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> </xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> Verdien er som standard `null`."
  syntax:
    content: public byte[] Seed { get; set; }
    return:
      type: System.Byte[]
      description: "Seedverdi."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.Seed*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)
  id: ToXmlString(System.Boolean)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: ToXmlString(Boolean)
  nameWithType: ECDiffieHellmanCng.ToXmlString(Boolean)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Denne metoden er ikke implementert."
  remarks: "Bruk til å konvertere gjeldende nøkkel til en XML-representasjon av <xref:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29>overbelaste i stedet.</xref:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29>"
  syntax:
    content: public override string ToXmlString (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>inkludere private parametere; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Gjelder ikke."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "Denne metoden er ikke overstyres for denne forekomsten."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)
  id: ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: ToXmlString(ECKeyXmlFormat)
  nameWithType: ECDiffieHellmanCng.ToXmlString(ECKeyXmlFormat)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(ECKeyXmlFormat)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Serializes nøkkelinformasjon til en XML-strengen ved hjelp av angitt format."
  syntax:
    content: public string ToXmlString (System.Security.Cryptography.ECKeyXmlFormat format);
    parameters:
    - id: format
      type: System.Security.Cryptography.ECKeyXmlFormat
      description: "En av verdiene for enumeration som angir formatet for XML-strengen. Den eneste som er godkjent formatet <xref href=&quot;System.Security.Cryptography.ECKeyXmlFormat&quot;> </xref>."
    return:
      type: System.String
      description: "Strengobjekt som inneholder nøkkelinformasjon serialisert til en XML-streng, i henhold til det forespurte formatet."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>format</code>angir et ugyldig format. Den eneste aksepterte verdien er <xref href=&quot;System.Security.Cryptography.ECKeyXmlFormat&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey
  id: UseSecretAgreementAsHmacKey
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: UseSecretAgreementAsHmacKey
  nameWithType: ECDiffieHellmanCng.UseSecretAgreementAsHmacKey
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Henter en verdi som angir om den hemmelige avtalen brukes som en Hash-baserte Message Authentication Code (HMAC) nøkkel avledes key materiale."
  remarks: '-Denne verdien brukes for nøkkelen utledning Hvis <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A>egenskapen er satt til <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>.</xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> </xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> Verdien er som standard `false`.'
  syntax:
    content: public bool UseSecretAgreementAsHmacKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den hemmelige avtalen brukes som en nøkkel for HMAC avledes key materiale; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.ECDiffieHellman
  isExternal: false
  name: System.Security.Cryptography.ECDiffieHellman
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotImplementedException
  isExternal: true
  name: System.NotImplementedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.ECDiffieHellmanCng.#ctor
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: ECDiffieHellmanCng()
  nameWithType: ECDiffieHellmanCng.ECDiffieHellmanCng()
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ECDiffieHellmanCng()
- uid: System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: ECDiffieHellmanCng(Int32)
  nameWithType: ECDiffieHellmanCng.ECDiffieHellmanCng(Int32)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ECDiffieHellmanCng(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: ECDiffieHellmanCng(CngKey)
  nameWithType: ECDiffieHellmanCng.ECDiffieHellmanCng(CngKey)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ECDiffieHellmanCng(CngKey)
- uid: System.Security.Cryptography.CngKey
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKey
  nameWithType: CngKey
  fullName: System.Security.Cryptography.CngKey
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])
  nameWithType: ECDiffieHellmanCng.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey
  parent: System.Security.Cryptography
  isExternal: false
  name: ECDiffieHellmanPublicKey
  nameWithType: ECDiffieHellmanPublicKey
  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])
  nameWithType: ECDiffieHellmanCng.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: DeriveKeyMaterial(CngKey)
  nameWithType: ECDiffieHellmanCng.DeriveKeyMaterial(CngKey)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(CngKey)
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: DeriveKeyMaterial(ECDiffieHellmanPublicKey)
  nameWithType: ECDiffieHellmanCng.DeriveKeyMaterial(ECDiffieHellmanPublicKey)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(ECDiffieHellmanPublicKey)
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])
  nameWithType: ECDiffieHellmanCng.DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: DeriveSecretAgreementHandle(CngKey)
  nameWithType: ECDiffieHellmanCng.DeriveSecretAgreementHandle(CngKey)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(CngKey)
- uid: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeNCryptSecretHandle
  nameWithType: SafeNCryptSecretHandle
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: DeriveSecretAgreementHandle(ECDiffieHellmanPublicKey)
  nameWithType: ECDiffieHellmanCng.DeriveSecretAgreementHandle(ECDiffieHellmanPublicKey)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(ECDiffieHellmanPublicKey)
- uid: System.Security.Cryptography.ECDiffieHellmanCng.Dispose(System.Boolean)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ECDiffieHellmanCng.Dispose(Boolean)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: FromXmlString(String)
  nameWithType: ECDiffieHellmanCng.FromXmlString(String)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: FromXmlString(String,ECKeyXmlFormat)
  nameWithType: ECDiffieHellmanCng.FromXmlString(String,ECKeyXmlFormat)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(String,ECKeyXmlFormat)
- uid: System.Security.Cryptography.ECKeyXmlFormat
  parent: System.Security.Cryptography
  isExternal: false
  name: ECKeyXmlFormat
  nameWithType: ECKeyXmlFormat
  fullName: System.Security.Cryptography.ECKeyXmlFormat
- uid: System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: HashAlgorithm
  nameWithType: ECDiffieHellmanCng.HashAlgorithm
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm
- uid: System.Security.Cryptography.CngAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithm
  nameWithType: CngAlgorithm
  fullName: System.Security.Cryptography.CngAlgorithm
- uid: System.Security.Cryptography.ECDiffieHellmanCng.HmacKey
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: HmacKey
  nameWithType: ECDiffieHellmanCng.HmacKey
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.HmacKey
- uid: System.Security.Cryptography.ECDiffieHellmanCng.Key
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: Key
  nameWithType: ECDiffieHellmanCng.Key
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.Key
- uid: System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: KeyDerivationFunction
  nameWithType: ECDiffieHellmanCng.KeyDerivationFunction
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  parent: System.Security.Cryptography
  isExternal: false
  name: ECDiffieHellmanKeyDerivationFunction
  nameWithType: ECDiffieHellmanKeyDerivationFunction
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
- uid: System.Security.Cryptography.ECDiffieHellmanCng.Label
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: Label
  nameWithType: ECDiffieHellmanCng.Label
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.Label
- uid: System.Security.Cryptography.ECDiffieHellmanCng.PublicKey
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: PublicKey
  nameWithType: ECDiffieHellmanCng.PublicKey
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.PublicKey
- uid: System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: SecretAppend
  nameWithType: ECDiffieHellmanCng.SecretAppend
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend
- uid: System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: SecretPrepend
  nameWithType: ECDiffieHellmanCng.SecretPrepend
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend
- uid: System.Security.Cryptography.ECDiffieHellmanCng.Seed
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: Seed
  nameWithType: ECDiffieHellmanCng.Seed
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.Seed
- uid: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: ToXmlString(Boolean)
  nameWithType: ECDiffieHellmanCng.ToXmlString(Boolean)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(Boolean)
- uid: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: ToXmlString(ECKeyXmlFormat)
  nameWithType: ECDiffieHellmanCng.ToXmlString(ECKeyXmlFormat)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(ECKeyXmlFormat)
- uid: System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: UseSecretAgreementAsHmacKey
  nameWithType: ECDiffieHellmanCng.UseSecretAgreementAsHmacKey
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey
- uid: System.Security.Cryptography.ECDiffieHellmanCng.#ctor*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: ECDiffieHellmanCng
  nameWithType: ECDiffieHellmanCng.ECDiffieHellmanCng
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: DeriveKeyFromHash
  nameWithType: ECDiffieHellmanCng.DeriveKeyFromHash
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: DeriveKeyFromHmac
  nameWithType: ECDiffieHellmanCng.DeriveKeyFromHmac
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: DeriveKeyMaterial
  nameWithType: ECDiffieHellmanCng.DeriveKeyMaterial
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: DeriveKeyTls
  nameWithType: ECDiffieHellmanCng.DeriveKeyTls
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: DeriveSecretAgreementHandle
  nameWithType: ECDiffieHellmanCng.DeriveSecretAgreementHandle
- uid: System.Security.Cryptography.ECDiffieHellmanCng.Dispose*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: Dispose
  nameWithType: ECDiffieHellmanCng.Dispose
- uid: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: FromXmlString
  nameWithType: ECDiffieHellmanCng.FromXmlString
- uid: System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: HashAlgorithm
  nameWithType: ECDiffieHellmanCng.HashAlgorithm
- uid: System.Security.Cryptography.ECDiffieHellmanCng.HmacKey*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: HmacKey
  nameWithType: ECDiffieHellmanCng.HmacKey
- uid: System.Security.Cryptography.ECDiffieHellmanCng.Key*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: Key
  nameWithType: ECDiffieHellmanCng.Key
- uid: System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: KeyDerivationFunction
  nameWithType: ECDiffieHellmanCng.KeyDerivationFunction
- uid: System.Security.Cryptography.ECDiffieHellmanCng.Label*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: Label
  nameWithType: ECDiffieHellmanCng.Label
- uid: System.Security.Cryptography.ECDiffieHellmanCng.PublicKey*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: PublicKey
  nameWithType: ECDiffieHellmanCng.PublicKey
- uid: System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: SecretAppend
  nameWithType: ECDiffieHellmanCng.SecretAppend
- uid: System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: SecretPrepend
  nameWithType: ECDiffieHellmanCng.SecretPrepend
- uid: System.Security.Cryptography.ECDiffieHellmanCng.Seed*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: Seed
  nameWithType: ECDiffieHellmanCng.Seed
- uid: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: ToXmlString
  nameWithType: ECDiffieHellmanCng.ToXmlString
- uid: System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: UseSecretAgreementAsHmacKey
  nameWithType: ECDiffieHellmanCng.UseSecretAgreementAsHmacKey
