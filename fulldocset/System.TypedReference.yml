### YamlMime:ManagedReference
items:
- uid: System.TypedReference
  id: TypedReference
  children:
  - System.TypedReference.Equals(System.Object)
  - System.TypedReference.GetHashCode
  - System.TypedReference.GetTargetType(System.TypedReference)
  - System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])
  - System.TypedReference.SetTypedReference(System.TypedReference,System.Object)
  - System.TypedReference.TargetTypeToken(System.TypedReference)
  - System.TypedReference.ToObject(System.TypedReference)
  langs:
  - csharp
  name: TypedReference
  nameWithType: TypedReference
  fullName: System.TypedReference
  type: Struct
  summary: "Beskriver objekter som inneholder både en administrert peker til en plassering og en runtime visning av typen som er lagret på denne plasseringen."
  remarks: "En typeangitt referansen er en kombinasjon av/brukes for varargs og andre støtte. `TypedReference`er en innebygd verditype som kan brukes for parametere og lokale variabler.       Matriser med `TypedReference` kan ikke opprettes. For eksempel følgende kall er ugyldig: [!code-cs [System.TypedReference#1](~/add/codesnippet/csharp/t-system.typedreference_1.cs)][!code-cpp[System.TypedReference#1](~/add/codesnippet/cpp/t-system.typedreference_1.cpp)][!code-vb[System.TypedReference#1    ](~/add/codesnippet/visualbasic/t-system.typedreference_1.vb)]"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public struct TypedReference
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.TypedReference.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.TypedReference
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: TypedReference.Equals(Object)
  fullName: System.TypedReference.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Kontrollerer om dette objektet er lik det angitte objektet."
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Objektet som skal sammenlignes det gjeldende objektet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis dette objektet er lik det angitte objektet. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.TypedReference.Equals*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Denne metoden er ikke implementert."
  platform:
  - net462
- uid: System.TypedReference.GetHashCode
  id: GetHashCode
  parent: System.TypedReference
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: TypedReference.GetHashCode()
  fullName: System.TypedReference.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Returnerer hashkoden for dette objektet."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Hash-koden for dette objektet."
  overload: System.TypedReference.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.TypedReference.GetTargetType(System.TypedReference)
  id: GetTargetType(System.TypedReference)
  parent: System.TypedReference
  langs:
  - csharp
  name: GetTargetType(TypedReference)
  nameWithType: TypedReference.GetTargetType(TypedReference)
  fullName: System.TypedReference.GetTargetType(TypedReference)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Returnerer typen for målet for den angitte <xref uid=&quot;langword_csharp_TypedReference&quot; name=&quot;TypedReference&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public static Type GetTargetType (TypedReference value);
    parameters:
    - id: value
      type: System.TypedReference
      description: "Verdien som måltypen som skal returneres."
    return:
      type: System.Type
      description: "Hva slags målet for den angitte <xref uid=&quot;langword_csharp_TypedReference&quot; name=&quot;TypedReference&quot; href=&quot;&quot;> </xref>."
  overload: System.TypedReference.GetTargetType*
  exceptions: []
  platform:
  - net462
- uid: System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])
  id: MakeTypedReference(System.Object,System.Reflection.FieldInfo[])
  parent: System.TypedReference
  langs:
  - csharp
  name: MakeTypedReference(Object,FieldInfo[])
  nameWithType: TypedReference.MakeTypedReference(Object,FieldInfo[])
  fullName: System.TypedReference.MakeTypedReference(Object,FieldInfo[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Gjør en <xref uid=&quot;langword_csharp_TypedReference&quot; name=&quot;TypedReference&quot; href=&quot;&quot;> </xref> for et felt som identifiseres av det angitte objektet og liste med beskrivelser."
  remarks: "Metoden MakeTypedReference returnerer en typeangitt referanse til en terminal felt, der den `target` parameteren inneholder feltet beskrevet av det første elementet i `flds`, feltet beskrevet av det første elementet i `flds` inneholder feltet beskrevet av det andre elementet i `flds`, og så videre til feltet terminal er nådd.      > [!NOTE] > Med start av [!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)], denne metoden kan brukes til å få tilgang til ikke-offentlig medlemmer hvis oppkalleren har fått <xref:System.Security.Permissions.ReflectionPermission>med den <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName>flagget og hvis gi settet med medlemmer for ikke-offentlig er begrenset til oppkallerens gi settet, eller et delsett av disse.</xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.ReflectionPermission> (Se [sikkerhetshensyn for gjenspeiling](~/add/includes/ajax-current-ext-md.md).)   >> Programmet må mål for å bruke denne funksjonen, den [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)] eller senere."
  syntax:
    content: public static TypedReference MakeTypedReference (object target, System.Reflection.FieldInfo[] flds);
    parameters:
    - id: target
      type: System.Object
      description: "Et objekt som inneholder feltet beskrevet av det første elementet i `flds`."
    - id: flds
      type: System.Reflection.FieldInfo[]
      description: "En liste med beskrivelser der hvert element beskriver et felt som inneholder feltet beskrevet av etterfølgende elementet. Hvert beskrevet felt må ha en verditype. Feltbeskrivelser må være <xref uid=&quot;langword_csharp_RuntimeFieldInfo&quot; name=&quot;RuntimeFieldInfo&quot; href=&quot;&quot;> </xref> objekter som er angitt av typen-systemet."
    return:
      type: System.TypedReference
      description: "En <xref href=&quot;System.TypedReference&quot;> </xref> for feltet beskrevet av det siste elementet i <code> flds </code>."
  overload: System.TypedReference.MakeTypedReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>target</code>or <code>flds</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - et element av <code>flds</code> er <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> flds </code> matrise har ingen elementer.       - eller - et element av <code> flds </code> er ikke en <xref uid=&quot;langword_csharp_RuntimeFieldInfo&quot; name=&quot;RuntimeFieldInfo&quot; href=&quot;&quot;> </xref> objektet.       -or-       The <>*> or <>*> property of an element of <code>flds</code> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  - type: System.MissingMemberException
    commentId: T:System.MissingMemberException
    description: "Parameteren <code> target </code> inneholder ikke feltet som er beskrevet av det første elementet i <code> flds </code>, eller et element av <code> flds </code> beskriver et felt som ikke finnes i feltet beskrevet av elementet etterfølgende i <code> flds </code>.       - eller - feltet beskrevet av et element av <code> flds </code> er ikke en verditype."
  platform:
  - net462
- uid: System.TypedReference.SetTypedReference(System.TypedReference,System.Object)
  id: SetTypedReference(System.TypedReference,System.Object)
  parent: System.TypedReference
  langs:
  - csharp
  name: SetTypedReference(TypedReference,Object)
  nameWithType: TypedReference.SetTypedReference(TypedReference,Object)
  fullName: System.TypedReference.SetTypedReference(TypedReference,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Konverterer den angitte verdien til en <xref uid=&quot;langword_csharp_TypedReference&quot; name=&quot;TypedReference&quot; href=&quot;&quot;> </xref>. Denne metoden støttes ikke."
  remarks: "Denne metoden oppstår alltid <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  syntax:
    content: public static void SetTypedReference (TypedReference target, object value);
    parameters:
    - id: target
      type: System.TypedReference
      description: "Målet for konverteringen."
    - id: value
      type: System.Object
      description: "Verdien som skal konverteres."
  overload: System.TypedReference.SetTypedReference*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "I alle tilfeller."
  platform:
  - net462
- uid: System.TypedReference.TargetTypeToken(System.TypedReference)
  id: TargetTypeToken(System.TypedReference)
  parent: System.TypedReference
  langs:
  - csharp
  name: TargetTypeToken(TypedReference)
  nameWithType: TypedReference.TargetTypeToken(TypedReference)
  fullName: System.TypedReference.TargetTypeToken(TypedReference)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Returnerer den interne metadata Typereferansen for den angitte <xref uid=&quot;langword_csharp_TypedReference&quot; name=&quot;TypedReference&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public static RuntimeTypeHandle TargetTypeToken (TypedReference value);
    parameters:
    - id: value
      type: System.TypedReference
      description: "Den <xref uid=&quot;langword_csharp_TypedReference&quot; name=&quot;TypedReference&quot; href=&quot;&quot;> </xref> for typen håndtaket forespørres."
    return:
      type: System.RuntimeTypeHandle
      description: "Den interne metadata Typereferansen for den angitte <xref uid=&quot;langword_csharp_TypedReference&quot; name=&quot;TypedReference&quot; href=&quot;&quot;> </xref>."
  overload: System.TypedReference.TargetTypeToken*
  exceptions: []
  platform:
  - net462
- uid: System.TypedReference.ToObject(System.TypedReference)
  id: ToObject(System.TypedReference)
  parent: System.TypedReference
  langs:
  - csharp
  name: ToObject(TypedReference)
  nameWithType: TypedReference.ToObject(TypedReference)
  fullName: System.TypedReference.ToObject(TypedReference)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Konverterer angitt <xref uid=&quot;langword_csharp_TypedReference&quot; name=&quot;TypedReference&quot; href=&quot;&quot;> </xref> til en <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>."
  remarks: "Dette kan være en operasjon for land."
  syntax:
    content: public static object ToObject (TypedReference value);
    parameters:
    - id: value
      type: System.TypedReference
      description: "Den <xref uid=&quot;langword_csharp_TypedReference&quot; name=&quot;TypedReference&quot; href=&quot;&quot;> </xref> som skal konverteres."
    return:
      type: System.Object
      description: "En <xref:System.Object>konverteres fra en <xref uid=&quot;langword_csharp_TypedReference&quot; name=&quot;TypedReference&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.TypedReference.ToObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.MissingMemberException
  isExternal: true
  name: System.MissingMemberException
- uid: System.TypedReference.Equals(System.Object)
  parent: System.TypedReference
  isExternal: false
  name: Equals(Object)
  nameWithType: TypedReference.Equals(Object)
  fullName: System.TypedReference.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.TypedReference.GetHashCode
  parent: System.TypedReference
  isExternal: false
  name: GetHashCode()
  nameWithType: TypedReference.GetHashCode()
  fullName: System.TypedReference.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.TypedReference.GetTargetType(System.TypedReference)
  parent: System.TypedReference
  isExternal: false
  name: GetTargetType(TypedReference)
  nameWithType: TypedReference.GetTargetType(TypedReference)
  fullName: System.TypedReference.GetTargetType(TypedReference)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.TypedReference
  parent: System
  isExternal: false
  name: TypedReference
  nameWithType: TypedReference
  fullName: System.TypedReference
- uid: System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])
  parent: System.TypedReference
  isExternal: false
  name: MakeTypedReference(Object,FieldInfo[])
  nameWithType: TypedReference.MakeTypedReference(Object,FieldInfo[])
  fullName: System.TypedReference.MakeTypedReference(Object,FieldInfo[])
- uid: System.Reflection.FieldInfo[]
  parent: System.Reflection
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo[]
  spec.csharp:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: FieldInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.TypedReference.SetTypedReference(System.TypedReference,System.Object)
  parent: System.TypedReference
  isExternal: false
  name: SetTypedReference(TypedReference,Object)
  nameWithType: TypedReference.SetTypedReference(TypedReference,Object)
  fullName: System.TypedReference.SetTypedReference(TypedReference,Object)
- uid: System.TypedReference.TargetTypeToken(System.TypedReference)
  parent: System.TypedReference
  isExternal: false
  name: TargetTypeToken(TypedReference)
  nameWithType: TypedReference.TargetTypeToken(TypedReference)
  fullName: System.TypedReference.TargetTypeToken(TypedReference)
- uid: System.RuntimeTypeHandle
  parent: System
  isExternal: true
  name: RuntimeTypeHandle
  nameWithType: RuntimeTypeHandle
  fullName: System.RuntimeTypeHandle
- uid: System.TypedReference.ToObject(System.TypedReference)
  parent: System.TypedReference
  isExternal: false
  name: ToObject(TypedReference)
  nameWithType: TypedReference.ToObject(TypedReference)
  fullName: System.TypedReference.ToObject(TypedReference)
- uid: System.TypedReference.Equals*
  parent: System.TypedReference
  isExternal: false
  name: Equals
  nameWithType: TypedReference.Equals
- uid: System.TypedReference.GetHashCode*
  parent: System.TypedReference
  isExternal: false
  name: GetHashCode
  nameWithType: TypedReference.GetHashCode
- uid: System.TypedReference.GetTargetType*
  parent: System.TypedReference
  isExternal: false
  name: GetTargetType
  nameWithType: TypedReference.GetTargetType
- uid: System.TypedReference.MakeTypedReference*
  parent: System.TypedReference
  isExternal: false
  name: MakeTypedReference
  nameWithType: TypedReference.MakeTypedReference
- uid: System.TypedReference.SetTypedReference*
  parent: System.TypedReference
  isExternal: false
  name: SetTypedReference
  nameWithType: TypedReference.SetTypedReference
- uid: System.TypedReference.TargetTypeToken*
  parent: System.TypedReference
  isExternal: false
  name: TargetTypeToken
  nameWithType: TypedReference.TargetTypeToken
- uid: System.TypedReference.ToObject*
  parent: System.TypedReference
  isExternal: false
  name: ToObject
  nameWithType: TypedReference.ToObject
