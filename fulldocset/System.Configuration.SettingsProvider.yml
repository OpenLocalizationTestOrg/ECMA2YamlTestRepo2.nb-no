### YamlMime:ManagedReference
items:
- uid: System.Configuration.SettingsProvider
  id: SettingsProvider
  children:
  - System.Configuration.SettingsProvider.#ctor
  - System.Configuration.SettingsProvider.ApplicationName
  - System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  - System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  langs:
  - csharp
  name: SettingsProvider
  nameWithType: SettingsProvider
  fullName: System.Configuration.SettingsProvider
  type: Class
  summary: "Fungerer som en basisklasse for avledes egendefinerte innstillinger leverandører i appen innstillinger arkitekturen."
  remarks: "Innstillingsleverandør definerer mekanisme for lagring av konfigurasjonsdata brukt i appen innstillinger arkitekturen. .NET Framework inneholder en enkelt innstillinger standardleverandøren, <xref:System.Configuration.LocalFileSettingsProvider>, som lagrer konfigurasjonsdata til det lokale filsystemet.</xref:System.Configuration.LocalFileSettingsProvider> Du kan imidlertid opprette alternative lagring mekanismer ved avledes fra abstract SettingsProvider klasse. Leverandøren som bruker en wrapperklasse avgjøres av decorating wrapper klassen med <xref:System.Configuration.SettingsProviderAttribute>.</xref:System.Configuration.SettingsProviderAttribute> Hvis dette attributtet ikke er angitt, standard, <xref:System.Configuration.LocalFileSettingsProvider>, brukes.</xref:System.Configuration.LocalFileSettingsProvider>       Når du oppretter en leverandør av egendefinerte innstillinger, minimum, må du angi implementeringer for tre metoder av denne klassen: <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>, <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>og <xref:System.Configuration.SettingsProvider.ApplicationName%2A>.</xref:System.Configuration.SettingsProvider.ApplicationName%2A> </xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> </xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>       Klientprogrammer, kan du legge til flere standard funksjonaliteten til en egendefinert leverandør ved å implementere også den <xref:System.Configuration.IApplicationSettingsProvider>grensesnittet.</xref:System.Configuration.IApplicationSettingsProvider> Dette grensesnittet gjenspeiler metoder som finnes i den <xref:System.Configuration.ApplicationSettingsBase>klassen som hovedsakelig muliggjør støtte for versjonskontroll.</xref:System.Configuration.ApplicationSettingsBase>       Du bør vanligvis utforme innstillinger leverandører skal være én instanced unngå lagring ressursen konflikten. Leverandører må også være sikker fordi de kan bare kalles samtidig fra flere forekomster av wrapper i et enkelt program-domene eller flere applikasjoner i forskjellige domener.       Minimum må Innstillingsleverandør gjenkjenne tre attributtene –<xref:System.Configuration.ApplicationScopedSettingAttribute>, <xref:System.Configuration.UserScopedSettingAttribute>, og <xref:System.Configuration.DefaultSettingValueAttribute>.</xref:System.Configuration.DefaultSettingValueAttribute> </xref:System.Configuration.UserScopedSettingAttribute> </xref:System.Configuration.ApplicationScopedSettingAttribute> En fullstendig liste over attributter som kan brukes i programinnstillinger, kan du se [innstillinger attributtene](~/add/includes/ajax-current-ext-md.md). En egendefinert innstilling leverandør bør løse attributter brukes innstillinger på følgende måte: 1.  Hvis leverandøren kan fullføre forespørselen er angitt av attributtet, skal selvsagt den gjøre det.      2.  Hvis leverandøren ikke kan fullføre forespørselen, skal den ignorere den stille.      3.  Hvis to eller flere egenskaper er i konflikt; for eksempel en egenskap som dekorert med både <xref:System.Configuration.ApplicationScopedSettingAttribute>og <xref:System.Configuration.UserScopedSettingAttribute>; leverandøren bør iverksette <xref:System.Configuration.ConfigurationException>.</xref:System.Configuration.ConfigurationException> </xref:System.Configuration.UserScopedSettingAttribute> </xref:System.Configuration.ApplicationScopedSettingAttribute>"
  syntax:
    content: 'public abstract class SettingsProvider : System.Configuration.Provider.ProviderBase'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Configuration.SettingsProvider.#ctor
  id: '#ctor'
  parent: System.Configuration.SettingsProvider
  langs:
  - csharp
  name: SettingsProvider()
  nameWithType: SettingsProvider.SettingsProvider()
  fullName: System.Configuration.SettingsProvider.SettingsProvider()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Initialiserer en forekomst av den <xref href=&quot;System.Configuration.SettingsProvider&quot;> </xref> klasse."
  remarks: "Dette er denne beskyttede standardkonstruktør for denne abstrakt klasse. Avledede egendefinerte innstillinger leverandører kreves ikke for å angi en eksplisitt konstruktør fordi den <xref:System.Configuration.Provider.ProviderBase.Initialize%2A>metoden utfører vanligvis alle initialisering.</xref:System.Configuration.Provider.ProviderBase.Initialize%2A>       Klientkoden vanligvis ikke direkte starte Innstillingsleverandør; du bruker fremgangsmåten nedenfor til å finne en leverandør av innstillingene for en egenskap for bestemte innstillinger: 1.  Kalle <xref:System.ComponentModel.Component.GetService%2A>metoden i den gjeldende <xref:System.ComponentModel.Component>eller <xref:System.ComponentModel.ISite>en referanse til gjeldende <xref:System.Configuration.ISettingsProviderService>.</xref:System.Configuration.ISettingsProviderService> returneres</xref:System.ComponentModel.ISite> </xref:System.ComponentModel.Component> </xref:System.ComponentModel.Component.GetService%2A>      2.  Kall den <xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A>metoden for den <xref:System.Configuration.ISettingsProviderService>hentes i det første trinnet å returnere innstillinger for leverandøren.</xref:System.Configuration.ISettingsProviderService> </xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A>"
  syntax:
    content: protected SettingsProvider ();
    parameters: []
  overload: System.Configuration.SettingsProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsProvider.ApplicationName
  id: ApplicationName
  parent: System.Configuration.SettingsProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: SettingsProvider.ApplicationName
  fullName: System.Configuration.SettingsProvider.ApplicationName
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Henter eller angir navnet på programmet som for øyeblikket kjører."
  remarks: "ApplicationName og <xref:System.Configuration.Provider.ProviderBase.Name%2A>Egenskaper bidra til å oppheve tvetydigheten på samme måte navngitt angi egenskaper i ulike applikasjoner.</xref:System.Configuration.Provider.ProviderBase.Name%2A>"
  syntax:
    content: public abstract string ApplicationName { get; set; }
    return:
      type: System.String
      description: "En <xref:System.String>som inneholder programmets forkortet navn, som ikke inneholder en fullstendig bane eller utvidelsen, for eksempel, `SimpleAppSettings`.</xref:System.String>"
  overload: System.Configuration.SettingsProvider.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  id: GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.SettingsProvider
  langs:
  - csharp
  name: GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  nameWithType: SettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.SettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Returnerer samling av innstillinger egenskapsverdier for den angitte forekomsten og innstillinger egenskapen programproxygruppen."
  remarks: "Metoden GetPropertyValues må implementeres for å håndtere spesielle innstillinger, de som er merket med <xref:System.Configuration.SpecialSettingAttribute>, i tillegg til å avstemme programmer og brukerinnstillinger.</xref:System.Configuration.SpecialSettingAttribute>"
  syntax:
    content: public abstract System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection collection);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "En <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> som beskriver gjeldende kjøring."
    - id: collection
      type: System.Configuration.SettingsPropertyCollection
      description: "En <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref> som inneholder innstillinger for egenskapsgruppe som inneholder verdiene som skal hentes."
    return:
      type: System.Configuration.SettingsPropertyValueCollection
      description: "En <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref> som inneholder verdier for egenskapsgruppen angitte innstillingene."
  overload: System.Configuration.SettingsProvider.GetPropertyValues*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  id: SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  parent: System.Configuration.SettingsProvider
  langs:
  - csharp
  name: SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  nameWithType: SettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  fullName: System.Configuration.SettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Angir verdiene i den angitte gruppen på innstillinger for."
  remarks: "<xref:System.Configuration.ApplicationSettingsBase>inneholder den <xref:System.Configuration.ApplicationSettingsBase.Save%2A>metoden blir bedt om å beholde verdiene for alle egenskapene innstillinger.</xref:System.Configuration.ApplicationSettingsBase.Save%2A></xref:System.Configuration.ApplicationSettingsBase> Denne metoden nummererer gjennom alle leverandørene innstillinger knyttet egenskapene innstillinger og kaller SetPropertyValues-metoden for hver <xref:System.Configuration.SettingsProvider>til å utføre operasjonen faktiske serialisering.</xref:System.Configuration.SettingsProvider>       SetPropertyValues-metoden må være implementert med tanke på sikkerhet: – bare fullstendig klarerte koden skal være tillatt å oppdatere applikasjonsinnstillingene. Delvis klarert kode skal være tillatt å oppdatere bare brukerinnstillinger programmet. Uklarerte kode er vanligvis kan ikke oppdatere applikasjonsinnstillingene.      -Bruk opp anses å beskytte mot ressursen angrep av delvis klarerte programmer."
  syntax:
    content: public abstract void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection collection);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "En <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> som beskriver gjeldende programmet."
    - id: collection
      type: System.Configuration.SettingsPropertyValueCollection
      description: "En <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref> som representerer gruppen skal angis."
  overload: System.Configuration.SettingsProvider.SetPropertyValues*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: System.Configuration.Provider.ProviderBase
- uid: System.Configuration.SettingsProvider.#ctor
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: SettingsProvider()
  nameWithType: SettingsProvider.SettingsProvider()
  fullName: System.Configuration.SettingsProvider.SettingsProvider()
- uid: System.Configuration.SettingsProvider.ApplicationName
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SettingsProvider.ApplicationName
  fullName: System.Configuration.SettingsProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  nameWithType: SettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.SettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
- uid: System.Configuration.SettingsPropertyValueCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValueCollection
  nameWithType: SettingsPropertyValueCollection
  fullName: System.Configuration.SettingsPropertyValueCollection
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  nameWithType: SettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  fullName: System.Configuration.SettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
- uid: System.Configuration.SettingsProvider.#ctor*
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: SettingsProvider
  nameWithType: SettingsProvider.SettingsProvider
- uid: System.Configuration.SettingsProvider.ApplicationName*
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SettingsProvider.ApplicationName
- uid: System.Configuration.SettingsProvider.GetPropertyValues*
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: GetPropertyValues
  nameWithType: SettingsProvider.GetPropertyValues
- uid: System.Configuration.SettingsProvider.SetPropertyValues*
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: SetPropertyValues
  nameWithType: SettingsProvider.SetPropertyValues
