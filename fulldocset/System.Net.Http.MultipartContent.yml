### YamlMime:ManagedReference
items:
- uid: System.Net.Http.MultipartContent
  id: MultipartContent
  children:
  - System.Net.Http.MultipartContent.#ctor
  - System.Net.Http.MultipartContent.#ctor(System.String)
  - System.Net.Http.MultipartContent.#ctor(System.String,System.String)
  - System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)
  - System.Net.Http.MultipartContent.Dispose(System.Boolean)
  - System.Net.Http.MultipartContent.GetEnumerator
  - System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  - System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator
  - System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)
  langs:
  - csharp
  name: MultipartContent
  nameWithType: MultipartContent
  fullName: System.Net.Http.MultipartContent
  type: Class
  summary: "Inneholder en samling <xref href=&quot;System.Net.Http.HttpContent&quot;> </xref> objekter som få serialisert ved hjelp av multipart / * innhold typespesifikasjonen."
  syntax:
    content: 'public class MultipartContent : System.Net.Http.HttpContent, System.Collections.Generic.IEnumerable<System.Net.Http.HttpContent>'
  inheritance:
  - System.Object
  - System.Net.Http.HttpContent
  implements:
  - System.Collections.Generic.IEnumerable<System.Net.Http.HttpContent>
  inheritedMembers:
  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)
  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)
  - System.Net.Http.HttpContent.CreateContentReadStreamAsync
  - System.Net.Http.HttpContent.Dispose
  - System.Net.Http.HttpContent.Headers
  - System.Net.Http.HttpContent.LoadIntoBufferAsync
  - System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)
  - System.Net.Http.HttpContent.ReadAsByteArrayAsync
  - System.Net.Http.HttpContent.ReadAsStreamAsync
  - System.Net.Http.HttpContent.ReadAsStringAsync
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.#ctor
  id: '#ctor'
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: MultipartContent()
  nameWithType: MultipartContent.MultipartContent()
  fullName: System.Net.Http.MultipartContent.MultipartContent()
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Oppretter en ny forekomst av den <xref href=&quot;System.Net.Http.MultipartContent&quot;> </xref> klasse."
  syntax:
    content: public MultipartContent ();
    parameters: []
  overload: System.Net.Http.MultipartContent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: MultipartContent(String)
  nameWithType: MultipartContent.MultipartContent(String)
  fullName: System.Net.Http.MultipartContent.MultipartContent(String)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Oppretter en ny forekomst av den <xref href=&quot;System.Net.Http.MultipartContent&quot;> </xref> klasse."
  syntax:
    content: public MultipartContent (string subtype);
    parameters:
    - id: subtype
      type: System.String
      description: "Undertype av multipart innholdet."
  overload: System.Net.Http.MultipartContent.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> subtype </code> ble <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller inneholder bare mellomrom."
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: MultipartContent(String,String)
  nameWithType: MultipartContent.MultipartContent(String,String)
  fullName: System.Net.Http.MultipartContent.MultipartContent(String,String)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Oppretter en ny forekomst av den <xref href=&quot;System.Net.Http.MultipartContent&quot;> </xref> klasse."
  syntax:
    content: public MultipartContent (string subtype, string boundary);
    parameters:
    - id: subtype
      type: System.String
      description: "Undertype av multipart innholdet."
    - id: boundary
      type: System.String
      description: "Strengen grense for multipart innhold."
  overload: System.Net.Http.MultipartContent.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> subtype </code> ble <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en tom streng.       Den <code> boundary </code> ble <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller inneholder bare mellomrom.       - eller - <code> boundary </code> slutter med et mellomrom."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Lengden på den <code> boundary </code> var større enn 70."
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)
  id: Add(System.Net.Http.HttpContent)
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: Add(HttpContent)
  nameWithType: MultipartContent.Add(HttpContent)
  fullName: System.Net.Http.MultipartContent.Add(HttpContent)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Legge til flere deler HTTP-innhold i en samling av <xref href=&quot;System.Net.Http.HttpContent&quot;> </xref> objekter som få serialisert ved hjelp av multipart / * innhold typespesifikasjonen."
  syntax:
    content: public virtual void Add (System.Net.Http.HttpContent content);
    parameters:
    - id: content
      type: System.Net.Http.HttpContent
      description: "HTTP-innhold som skal legges til i samlingen."
  overload: System.Net.Http.MultipartContent.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>content</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: MultipartContent.Dispose(Boolean)
  fullName: System.Net.Http.MultipartContent.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Frigir uforvaltede ressursene som brukes av den <xref href=&quot;System.Net.Http.MultipartContent&quot;> </xref> og eventuelt disposes med administrerte ressurser."
  remarks: "Denne metoden kalles av offentlig `Dispose()` metoden og <xref:System.Object.Finalize%2A>metode.</xref:System.Object.Finalize%2A> `Dispose()`Aktiverer den beskyttede `Dispose(Boolean)` metoden med den `disposing` parameteren satt til `true`. <xref:System.Object.Finalize%2A>aktiverer `Dispose` med `disposing` satt til `false`. Når den `disposing` parameteren er `true`, denne metoden Frigjør alle ressurser holdes av administrerte objekter som denne <xref:System.Net.Http.MultipartContent>referanser.</xref:System.Net.Http.MultipartContent></xref:System.Object.Finalize%2A> Denne metoden starter den `Dispose()` metode for hver referert objekt."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>å frigjøre både administrerte og uforvaltede ressurser. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> for utgivelser bare uforvaltet ressurser."
  overload: System.Net.Http.MultipartContent.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.GetEnumerator
  id: GetEnumerator
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: MultipartContent.GetEnumerator()
  fullName: System.Net.Http.MultipartContent.GetEnumerator()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Returnerer en opplisting som går gjennom samlingen av <xref href=&quot;System.Net.Http.HttpContent&quot;> </xref> objekter som få serialisert ved hjelp av multipart / * innhold typespesifikasjonen.."
  remarks: "Foreach-setning med C# språket (For hvert i Visual Basic) skjuler av hvor komplekse enumeratorene. Derfor anbefales foreach bruker, i stedet for direkte manipulering enumeratoren.       Enumeratorene kan brukes til å lese data i samlingen, men de kan ikke brukes til å endre den underliggende samlingen.       I utgangspunktet er enumeratoren plassert før det første elementet i samlingen."
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.Net.Http.HttpContent> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Net.Http.HttpContent}
      description: "Et objekt som kan brukes til å gå gjennom samlingen."
  overload: System.Net.Http.MultipartContent.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  id: SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: SerializeToStreamAsync(Stream,TransportContext)
  nameWithType: MultipartContent.SerializeToStreamAsync(Stream,TransportContext)
  fullName: System.Net.Http.MultipartContent.SerializeToStreamAsync(Stream,TransportContext)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Serialisere multipart HTTP innholdet til en dataflyt som en asynkron operasjon."
  remarks: "Denne operasjonen blokkere ikke. Det returnerte <xref:System.Threading.Tasks.Task%601>objektet fullfører etter alt innholdet har blitt serialisert til mål-dataflyt.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: protected override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Target-dataflyten."
    - id: context
      type: System.Net.TransportContext
      description: "Informasjon om transport (kanal binding tokenet, for eksempel). Denne parameteren kan være <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Threading.Tasks.Task
      description: "Oppgaveobjektet som representerer den asynkrone operasjonen."
  overload: System.Net.Http.MultipartContent.SerializeToStreamAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: MultipartContent.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.Http.MultipartContent.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Eksplisitt implementeringen av den <xref:System.Net.Http.MultipartContent.GetEnumerator*>metoden.</xref:System.Net.Http.MultipartContent.GetEnumerator*>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Et objekt som kan brukes til å gå gjennom samlingen."
  overload: System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)
  id: TryComputeLength(System.Int64@)
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: TryComputeLength(Int64)
  nameWithType: MultipartContent.TryComputeLength(Int64)
  fullName: System.Net.Http.MultipartContent.TryComputeLength(Int64)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Bestemmer om HTTP multipart innholdet har en ugyldig lengde i byte."
  remarks: "Metoden TryComputeLength kan HTTP multipart innhold til å beregne innholdslengden. Dette er nyttig for innholdstyper som du vil beregne enkelt innholdslengden. Hvis databehandling innholdslengden er ikke mulig eller kostbar (krever at systemet buffer hele innholdet der serialisering vil være kostbar eller til å tildele mye minne), denne metoden kan returnere `false`. Hvis denne metoden returnerer `false`, dette innebærer at delvis overføring er nødvendig, eller innholdet må få bufret før sendes til serveren."
  syntax:
    content: protected override bool TryComputeLength (out long length);
    parameters:
    - id: length
      type: System.Int64
      description: "Lang i byte HHTP-innhold."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <code> length </code> er en ugyldig lengde; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.MultipartContent.TryComputeLength*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Net.Http.HttpContent
  isExternal: false
  name: System.Net.Http.HttpContent
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.Http.MultipartContent.#ctor
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: MultipartContent()
  nameWithType: MultipartContent.MultipartContent()
  fullName: System.Net.Http.MultipartContent.MultipartContent()
- uid: System.Net.Http.MultipartContent.#ctor(System.String)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: MultipartContent(String)
  nameWithType: MultipartContent.MultipartContent(String)
  fullName: System.Net.Http.MultipartContent.MultipartContent(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.MultipartContent.#ctor(System.String,System.String)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: MultipartContent(String,String)
  nameWithType: MultipartContent.MultipartContent(String,String)
  fullName: System.Net.Http.MultipartContent.MultipartContent(String,String)
- uid: System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: Add(HttpContent)
  nameWithType: MultipartContent.Add(HttpContent)
  fullName: System.Net.Http.MultipartContent.Add(HttpContent)
- uid: System.Net.Http.MultipartContent.Dispose(System.Boolean)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: MultipartContent.Dispose(Boolean)
  fullName: System.Net.Http.MultipartContent.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.MultipartContent.GetEnumerator
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: GetEnumerator()
  nameWithType: MultipartContent.GetEnumerator()
  fullName: System.Net.Http.MultipartContent.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Net.Http.HttpContent}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<HttpContent>
  nameWithType: IEnumerator<HttpContent>
  fullName: System.Collections.Generic.IEnumerator<System.Net.Http.HttpContent>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Net.Http.HttpContent>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: HttpContent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: SerializeToStreamAsync(Stream,TransportContext)
  nameWithType: MultipartContent.SerializeToStreamAsync(Stream,TransportContext)
  fullName: System.Net.Http.MultipartContent.SerializeToStreamAsync(Stream,TransportContext)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.TransportContext
  parent: System.Net
  isExternal: true
  name: TransportContext
  nameWithType: TransportContext
  fullName: System.Net.TransportContext
- uid: System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: MultipartContent.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.Http.MultipartContent.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: TryComputeLength(Int64)
  nameWithType: MultipartContent.TryComputeLength(Int64)
  fullName: System.Net.Http.MultipartContent.TryComputeLength(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Http.MultipartContent.#ctor*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: MultipartContent
  nameWithType: MultipartContent.MultipartContent
- uid: System.Net.Http.MultipartContent.Add*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: Add
  nameWithType: MultipartContent.Add
- uid: System.Net.Http.MultipartContent.Dispose*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: Dispose
  nameWithType: MultipartContent.Dispose
- uid: System.Net.Http.MultipartContent.GetEnumerator*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: GetEnumerator
  nameWithType: MultipartContent.GetEnumerator
- uid: System.Net.Http.MultipartContent.SerializeToStreamAsync*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: SerializeToStreamAsync
  nameWithType: MultipartContent.SerializeToStreamAsync
- uid: System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: MultipartContent.System.Collections.IEnumerable.GetEnumerator
- uid: System.Net.Http.MultipartContent.TryComputeLength*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: TryComputeLength
  nameWithType: MultipartContent.TryComputeLength
