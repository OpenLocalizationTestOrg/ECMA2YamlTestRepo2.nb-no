### YamlMime:ManagedReference
items:
- uid: System.Windows.FrameworkPropertyMetadata
  id: FrameworkPropertyMetadata
  children:
  - System.Windows.FrameworkPropertyMetadata.#ctor
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Object)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)
  - System.Windows.FrameworkPropertyMetadata.AffectsArrange
  - System.Windows.FrameworkPropertyMetadata.AffectsMeasure
  - System.Windows.FrameworkPropertyMetadata.AffectsParentArrange
  - System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure
  - System.Windows.FrameworkPropertyMetadata.AffectsRender
  - System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault
  - System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger
  - System.Windows.FrameworkPropertyMetadata.Inherits
  - System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed
  - System.Windows.FrameworkPropertyMetadata.IsNotDataBindable
  - System.Windows.FrameworkPropertyMetadata.Journal
  - System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)
  - System.Windows.FrameworkPropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)
  - System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior
  - System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender
  langs:
  - csharp
  name: FrameworkPropertyMetadata
  nameWithType: FrameworkPropertyMetadata
  fullName: System.Windows.FrameworkPropertyMetadata
  type: Class
  summary: "Rapporter eller gjelder metadata for en avhengighetsegenskapen, spesielt tillegging av framework-spesifikke egenskapen system egenskaper."
  remarks: "Denne klassen er avledet fra <xref:System.Windows.PropertyMetadata>(via <xref:System.Windows.UIPropertyMetadata>).</xref:System.Windows.UIPropertyMetadata> </xref:System.Windows.PropertyMetadata> For de fleste WPF framework program programutvikling er FrameworkPropertyMetadata brukt for avhengighet egenskapmetadata i stedet base metadataene typer <xref:System.Windows.PropertyMetadata>eller <xref:System.Windows.UIPropertyMetadata>.</xref:System.Windows.UIPropertyMetadata> </xref:System.Windows.PropertyMetadata> Dette gjelder for eksisterende avhengighetsegenskaper og for de fleste tilfeller for egendefinert avhengighet-egenskapen.       Medlemmer som er deklarert av denne klassen som tillegget av <xref:System.Windows.PropertyMetadata>basisklassen inkluderer ulike boolske egenskaper som angir eller rapportere WPF framework nivå system egenskap for eksempel egenskapsarv, databinding og oppsett.</xref:System.Windows.PropertyMetadata>       Flere konstruktøren signaturer for å opprette en forekomst av FrameworkPropertyMetadata ta en <xref:System.Windows.FrameworkPropertyMetadataOptions>parameter.</xref:System.Windows.FrameworkPropertyMetadataOptions> Den <xref:System.Windows.FrameworkPropertyMetadataOptions>nummerering brukes bare til å angi første virkemåte i konstruktøren, og ellers vises ikke når FrameworkPropertyMetadata bygges.</xref:System.Windows.FrameworkPropertyMetadataOptions> Du kan hente eller angi den tilsvarende informasjonen til ulike egenskaper som deler navnet på opplistingsverdiene som brukes i konstruktøren kallet fra en konstruerte forekomsten.      <a name=&quot;xamlTextUsage_FrameworkPropertyMetadata&quot;></a>## XAML teksten Bruk som denne klassen ikke brukes vanligvis i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following example gets metadata for a dependency property on a particular owner as the initial base <xref:System.Windows.PropertyMetadata> type. That metadata is cast to FrameworkPropertyMetadata. If the cast returned a valid FrameworkPropertyMetadata, then various FrameworkPropertyMetadata property values are reported through a simple UI (not shown).  \n  \n [!code-cs[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]\n [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  \n[!code-cs[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#fpmproperties)]\n[!code-vb[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]"
  syntax:
    content: 'public class FrameworkPropertyMetadata : System.Windows.UIPropertyMetadata'
  inheritance:
  - System.Object
  - System.Windows.PropertyMetadata
  - System.Windows.UIPropertyMetadata
  implements: []
  inheritedMembers:
  - System.Windows.PropertyMetadata.CoerceValueCallback
  - System.Windows.PropertyMetadata.DefaultValue
  - System.Windows.PropertyMetadata.IsSealed
  - System.Windows.PropertyMetadata.PropertyChangedCallback
  - System.Windows.UIPropertyMetadata.IsAnimationProhibited
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor
  id: '#ctor'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata()
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata()
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> klasse."
  remarks: "Denne signaturen initialiserer alle verdier i FrameworkPropertyMetadata til standardverdiene egenskapen. <xref:System.Windows.PropertyMetadata.DefaultValue%2A>blir `null`, og de ulike <xref:System.Windows.FrameworkPropertyMetadata>boolske egenskaper blir `false`.</xref:System.Windows.FrameworkPropertyMetadata></xref:System.Windows.PropertyMetadata.DefaultValue%2A>"
  syntax:
    content: public FrameworkPropertyMetadata ();
    parameters: []
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(Object)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> klassen med en angitt standardverdi."
  remarks: "Typen for den angitte verdien for `defaultValue` må samsvare med eller være knyttet til typen som er angitt i den opprinnelige registreringen av avhengighetsegenskapen disse metadataene vil gjelde for. Manglende samsvar mellom metadata standardverditype og typen avhengighetsegenskapen det blir brukt på kan være vanskelig å feilsøke, fordi det manglende samsvaret ikke er en under kompilering. Egenskapen systemet kan ikke evalueres den gjeldende verdien til kjøretid, slik at resultatet av en type-egenskapen for Typekonflikt for standard er en kjøretidsfeil.       Verdien <xref:System.Windows.DependencyProperty.UnsetValue>har en spesialbetydning i egenskapen systemet, og kan ikke brukes som en avhengighet standard egenskapsverdi.</xref:System.Windows.DependencyProperty.UnsetValue>"
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor1param](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor1param)]"
  syntax:
    content: public FrameworkPropertyMetadata (object defaultValue);
    parameters:
    - id: defaultValue
      type: System.Object
      description: "Standardverdien for avhengighetsegenskapen, vanligvis angitt som en verdi for en spesifikk type."
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>defaultValue</code>er satt til <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>; se kommentarer."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)
  id: '#ctor(System.Windows.PropertyChangedCallback)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(PropertyChangedCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(PropertyChangedCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(PropertyChangedCallback)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> klassen med den angitte <xref href=&quot;System.Windows.PropertyChangedCallback&quot;> </xref> tilbakeringing."
  remarks: ''
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor1paramcallback](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor1paramcallback)]"
  syntax:
    content: public FrameworkPropertyMetadata (System.Windows.PropertyChangedCallback propertyChangedCallback);
    parameters:
    - id: propertyChangedCallback
      type: System.Windows.PropertyChangedCallback
      description: "En referanse til et behandlingsprogram implementering som kaller egenskapen systemet når gjeldende verdi for egenskapen endres."
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)
  id: '#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> klasse framework nivå metadata alternativer og angitt standardverdi."
  remarks: "Typen for den angitte verdien for `defaultValue` må samsvare med eller være knyttet til typen som er angitt i den opprinnelige registreringen av avhengighetsegenskapen disse metadataene vil gjelde for. Manglende samsvar mellom metadata standardverditype og typen avhengighetsegenskapen det blir brukt på kan være vanskelig å feilsøke, fordi det manglende samsvaret ikke er en under kompilering. Egenskapen systemet kan ikke evalueres den gjeldende verdien til kjøretid, slik at resultatet av en type-egenskapen for Typekonflikt for standard er en kjøretidsfeil.       Verdien <xref:System.Windows.DependencyProperty.UnsetValue>har en spesialbetydning i egenskapen systemet, og kan ikke brukes som en avhengighet standard egenskapsverdi.</xref:System.Windows.DependencyProperty.UnsetValue>       Verdier som er merket som sett flaggene i den `flags` parameteren vil angi den boolske verdien av <xref:System.Windows.FrameworkPropertyMetadata>Egenskaper som samsvarer med <xref:System.Windows.FrameworkPropertyMetadataOptions>for navnet `true`.</xref:System.Windows.FrameworkPropertyMetadataOptions> </xref:System.Windows.FrameworkPropertyMetadata> Du kan deretter endre verdier for egenskapene i metadata, så lenge Metadataene ikke er ennå brukt på en bestemt egenskap systemoperasjon."
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor_DV_FPMO](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor_dv_fpmo)]"
  syntax:
    content: public FrameworkPropertyMetadata (object defaultValue, System.Windows.FrameworkPropertyMetadataOptions flags);
    parameters:
    - id: defaultValue
      type: System.Object
      description: "Standardverdien for avhengighetsegenskapen, vanligvis angitt som en verdi for en spesifikk type."
    - id: flags
      type: System.Windows.FrameworkPropertyMetadataOptions
      description: "Metadata alternativet flaggene (en kombinasjon av <xref href=&quot;System.Windows.FrameworkPropertyMetadataOptions&quot;> </xref> verdier). Disse alternativene angi egenskaper for avhengighetsegenskapen som samhandler med systemer som oppsettet eller databinding."
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>defaultValue</code>er satt til <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>; se kommentarer."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)
  id: '#ctor(System.Object,System.Windows.PropertyChangedCallback)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(Object,PropertyChangedCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,PropertyChangedCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,PropertyChangedCallback)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> klasse med en angitt standardverdi og angitt <xref href=&quot;System.Windows.PropertyChangedCallback&quot;> </xref> tilbakeringing."
  remarks: "Typen for den angitte verdien for `defaultValue` må samsvare med eller være knyttet til typen som er angitt i den opprinnelige registreringen av avhengighetsegenskapen disse metadataene vil gjelde for. Manglende samsvar mellom metadata standardverditype og typen avhengighetsegenskapen det blir brukt på kan være vanskelig å feilsøke, fordi det manglende samsvaret ikke er en under kompilering. Egenskapen systemet kan ikke evalueres den gjeldende verdien til kjøretid, slik at resultatet av en type-egenskapen for Typekonflikt for standard er en kjøretidsfeil.       Verdien <xref:System.Windows.DependencyProperty.UnsetValue>har en spesialbetydning i egenskapen systemet, og kan ikke brukes som en avhengighet standard egenskapsverdi.</xref:System.Windows.DependencyProperty.UnsetValue>"
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor2param](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor2param)]"
  syntax:
    content: public FrameworkPropertyMetadata (object defaultValue, System.Windows.PropertyChangedCallback propertyChangedCallback);
    parameters:
    - id: defaultValue
      type: System.Object
      description: "Standardverdien for avhengighetsegenskapen, vanligvis angitt som en verdi for en spesifikk type."
    - id: propertyChangedCallback
      type: System.Windows.PropertyChangedCallback
      description: "En referanse til et behandlingsprogram implementering som kaller egenskapen systemet når gjeldende verdi for egenskapen endres."
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>defaultValue</code>er satt til <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>; se kommentarer."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  id: '#ctor(System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(PropertyChangedCallback,CoerceValueCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(PropertyChangedCallback,CoerceValueCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(PropertyChangedCallback,CoerceValueCallback)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> klassen med de angitte tilbakeringinger."
  remarks: "Denne implementeringen kaller base initialisering og deretter legger til den `coerceValueCallback` ved å sette egenskapen på basis-forekomsten."
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor_PCC_CVC](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor_pcc_cvc)]"
  syntax:
    content: public FrameworkPropertyMetadata (System.Windows.PropertyChangedCallback propertyChangedCallback, System.Windows.CoerceValueCallback coerceValueCallback);
    parameters:
    - id: propertyChangedCallback
      type: System.Windows.PropertyChangedCallback
      description: "En referanse til et behandlingsprogram implementering som kaller egenskapen systemet når gjeldende verdi for egenskapen endres."
    - id: coerceValueCallback
      type: System.Windows.CoerceValueCallback
      description: "En referanse til et behandlingsprogram implementering kalles når egenskapen systemet kaller <xref:System.Windows.DependencyObject.CoerceValue*>for denne avhengighetsegenskapen.</xref:System.Windows.DependencyObject.CoerceValue*>"
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)
  id: '#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> klasse med de angitte verdien og framework metadata standardalternativene og angitt <xref href=&quot;System.Windows.PropertyChangedCallback&quot;> </xref> tilbakeringing."
  remarks: "Typen for den angitte verdien for `defaultValue` må samsvare med eller være knyttet til typen som er angitt i den opprinnelige registreringen av avhengighetsegenskapen disse metadataene vil gjelde for. Manglende samsvar mellom metadata standardverditype og typen avhengighetsegenskapen det blir brukt på kan være vanskelig å feilsøke, fordi det manglende samsvaret ikke er en under kompilering. Egenskapen systemet kan ikke evalueres den gjeldende verdien til kjøretid, slik at resultatet av en type-egenskapen for Typekonflikt for standard er en kjøretidsfeil.       Verdien <xref:System.Windows.DependencyProperty.UnsetValue>har en spesialbetydning i egenskapen systemet, og kan ikke brukes som en avhengighet standard egenskapsverdi.</xref:System.Windows.DependencyProperty.UnsetValue>       Verdier som er merket som sett flaggene i den `flags` parameteren vil angi den boolske verdien av <xref:System.Windows.FrameworkPropertyMetadata>Egenskaper som samsvarer med <xref:System.Windows.FrameworkPropertyMetadataOptions>for navnet `true`.</xref:System.Windows.FrameworkPropertyMetadataOptions> </xref:System.Windows.FrameworkPropertyMetadata> Du kan fortsatt endre verdier for egenskapene i metadata, så lenge Metadataene ikke er ennå brukt på en bestemt egenskap systemoperasjon."
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor_DV_FPMO_PCC](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor_dv_fpmo_pcc)]"
  syntax:
    content: public FrameworkPropertyMetadata (object defaultValue, System.Windows.FrameworkPropertyMetadataOptions flags, System.Windows.PropertyChangedCallback propertyChangedCallback);
    parameters:
    - id: defaultValue
      type: System.Object
      description: "Standardverdien for avhengighetsegenskapen, vanligvis angitt som en verdi for en spesifikk type."
    - id: flags
      type: System.Windows.FrameworkPropertyMetadataOptions
      description: "Metadata alternativet flaggene (en kombinasjon av <xref href=&quot;System.Windows.FrameworkPropertyMetadataOptions&quot;> </xref> verdier). Disse alternativene angi egenskaper for avhengighetsegenskapen som samhandler med systemer som oppsettet eller databinding."
    - id: propertyChangedCallback
      type: System.Windows.PropertyChangedCallback
      description: "En referanse til et behandlingsprogram implementering som kaller egenskapen systemet når gjeldende verdi for egenskapen endres."
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>defaultValue</code>er satt til <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>; se kommentarer."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  id: '#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(Object,PropertyChangedCallback,CoerceValueCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,PropertyChangedCallback,CoerceValueCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,PropertyChangedCallback,CoerceValueCallback)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> klassen med den angitte standardverdien og angitte tilbakeringinger."
  remarks: "Typen for den angitte verdien for `defaultValue` må samsvare med eller være knyttet til typen som er angitt i den opprinnelige registreringen av avhengighetsegenskapen disse metadataene vil gjelde for. Manglende samsvar mellom metadata standardverditype og typen avhengighetsegenskapen det blir brukt på kan være vanskelig å feilsøke, fordi det manglende samsvaret ikke er en under kompilering. Egenskapen systemet kan ikke evalueres den gjeldende verdien til kjøretid, slik at resultatet av en type-egenskapen for Typekonflikt for standard er en kjøretidsfeil.       Verdien <xref:System.Windows.DependencyProperty.UnsetValue>har en spesialbetydning i egenskapen systemet, og kan ikke brukes som en avhengighet standard egenskapsverdi.</xref:System.Windows.DependencyProperty.UnsetValue>"
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor3param](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor3param)]"
  syntax:
    content: public FrameworkPropertyMetadata (object defaultValue, System.Windows.PropertyChangedCallback propertyChangedCallback, System.Windows.CoerceValueCallback coerceValueCallback);
    parameters:
    - id: defaultValue
      type: System.Object
      description: "Standardverdien for avhengighetsegenskapen, vanligvis angitt som en spesifikk type."
    - id: propertyChangedCallback
      type: System.Windows.PropertyChangedCallback
      description: "En referanse til et behandlingsprogram implementering som kaller egenskapen systemet når gjeldende verdi for egenskapen endres."
    - id: coerceValueCallback
      type: System.Windows.CoerceValueCallback
      description: "En referanse til en behandlingsprogrammet implementering kalles når egenskapen systemet kaller <xref:System.Windows.DependencyObject.CoerceValue*>for denne avhengighetsegenskapen.</xref:System.Windows.DependencyObject.CoerceValue*>"
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>defaultValue</code>er satt til <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>; se kommentarer."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  id: '#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> klasse angitte standardverdien og framework metadata alternativene og angitte tilbakeringinger."
  remarks: "Typen for den angitte verdien for `defaultValue` må samsvare med eller være knyttet til typen som er angitt i den opprinnelige registreringen av avhengighetsegenskapen disse metadataene vil gjelde for. Manglende samsvar mellom metadata standardverditype og typen avhengighetsegenskapen det blir brukt på kan være vanskelig å feilsøke, fordi det manglende samsvaret ikke er en under kompilering. Egenskapen systemet kan ikke evalueres den gjeldende verdien til kjøretid, slik at resultatet av en type-egenskapen for Typekonflikt for standard er en kjøretidsfeil.       Verdien <xref:System.Windows.DependencyProperty.UnsetValue>har en spesialbetydning i egenskapen systemet, og kan ikke brukes som en avhengighet standard egenskapsverdi.</xref:System.Windows.DependencyProperty.UnsetValue>       Verdier som er merket som sett flaggene i den `flags` parameteren vil angi den boolske verdien av <xref:System.Windows.FrameworkPropertyMetadata>Egenskaper som samsvarer med <xref:System.Windows.FrameworkPropertyMetadataOptions>for navnet `true`.</xref:System.Windows.FrameworkPropertyMetadataOptions> </xref:System.Windows.FrameworkPropertyMetadata> Du kan fortsatt endre verdier for egenskapene i metadata, så lenge Metadataene ikke er ennå brukt på en bestemt egenskap systemoperasjon."
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor_DV_FPMO_PCC_CVC](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor_dv_fpmo_pcc_cvc)]"
  syntax:
    content: public FrameworkPropertyMetadata (object defaultValue, System.Windows.FrameworkPropertyMetadataOptions flags, System.Windows.PropertyChangedCallback propertyChangedCallback, System.Windows.CoerceValueCallback coerceValueCallback);
    parameters:
    - id: defaultValue
      type: System.Object
      description: "Standardverdien for avhengighetsegenskapen, vanligvis angitt som en spesifikk type."
    - id: flags
      type: System.Windows.FrameworkPropertyMetadataOptions
      description: "Metadata alternativet flaggene (en kombinasjon av <xref href=&quot;System.Windows.FrameworkPropertyMetadataOptions&quot;> </xref> verdier). Disse alternativene angi egenskaper for avhengighetsegenskapen som samhandler med systemer som oppsettet eller databinding."
    - id: propertyChangedCallback
      type: System.Windows.PropertyChangedCallback
      description: "En referanse til et behandlingsprogram implementering som kaller egenskapen systemet når gjeldende verdi for egenskapen endres."
    - id: coerceValueCallback
      type: System.Windows.CoerceValueCallback
      description: "En referanse til en behandlingsprogrammet implementering kalles når egenskapen systemet kaller <xref:System.Windows.DependencyObject.CoerceValue*>mot denne egenskapen.</xref:System.Windows.DependencyObject.CoerceValue*>"
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>defaultValue</code>er satt til <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>; se kommentarer."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)
  id: '#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> klassen med de angitte verdien og framework metadata standardalternativene angitte tilbakeringinger og en boolsk verdi som kan brukes til å forhindre animasjonen for egenskapen."
  remarks: "Typen for den angitte verdien for `defaultValue` må samsvare med eller være knyttet til typen som er angitt i den opprinnelige registreringen av avhengighetsegenskapen disse metadataene vil gjelde for. Manglende samsvar mellom metadata standardverditype og typen avhengighetsegenskapen det blir brukt på kan være vanskelig å feilsøke, fordi det manglende samsvaret ikke er en under kompilering. Egenskapen systemet kan ikke evalueres den gjeldende verdien til kjøretid, slik at resultatet av en type-egenskapen for Typekonflikt for standard er en kjøretidsfeil.       Verdien <xref:System.Windows.DependencyProperty.UnsetValue>har en spesialbetydning i egenskapen systemet, og kan ikke brukes som en avhengighet standard egenskapsverdi.</xref:System.Windows.DependencyProperty.UnsetValue>       Den `isAnimationProhibited` parameteren angir startverdien for <xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A>egenskapen deklarert av umiddelbar base <xref:System.Windows.UIPropertyMetadata>klasse.</xref:System.Windows.UIPropertyMetadata> </xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A>       Verdier som er merket som sett flaggene i den `flags` parameteren vil angi den boolske verdien av <xref:System.Windows.FrameworkPropertyMetadata>Egenskaper som samsvarer med <xref:System.Windows.FrameworkPropertyMetadataOptions>for navnet `true`.</xref:System.Windows.FrameworkPropertyMetadataOptions> </xref:System.Windows.FrameworkPropertyMetadata> Du kan fortsatt endre verdier for egenskapene i metadata, så lenge Metadataene ikke er ennå brukt på en bestemt egenskap systemoperasjon."
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor_DV_FPMO_PCC_CVC_IAP](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor_dv_fpmo_pcc_cvc_iap)]"
  syntax:
    content: public FrameworkPropertyMetadata (object defaultValue, System.Windows.FrameworkPropertyMetadataOptions flags, System.Windows.PropertyChangedCallback propertyChangedCallback, System.Windows.CoerceValueCallback coerceValueCallback, bool isAnimationProhibited);
    parameters:
    - id: defaultValue
      type: System.Object
      description: "Standardverdien for avhengighetsegenskapen, vanligvis angitt som en spesifikk type."
    - id: flags
      type: System.Windows.FrameworkPropertyMetadataOptions
      description: "Metadata alternativet flaggene (en kombinasjon av <xref href=&quot;System.Windows.FrameworkPropertyMetadataOptions&quot;> </xref> verdier). Disse alternativene angi egenskaper for avhengighetsegenskapen som samhandler med systemer som oppsettet eller databinding."
    - id: propertyChangedCallback
      type: System.Windows.PropertyChangedCallback
      description: "En referanse til et behandlingsprogram implementering som kaller egenskapen systemet når gjeldende verdi for egenskapen endres."
    - id: coerceValueCallback
      type: System.Windows.CoerceValueCallback
      description: "En referanse til en behandlingsprogrammet implementering kalles når egenskapen systemet kaller <xref:System.Windows.DependencyObject.CoerceValue*>på denne avhengighetsegenskapen.</xref:System.Windows.DependencyObject.CoerceValue*>"
    - id: isAnimationProhibited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>å hindre at systemet egenskapen animere egenskapen som disse metadataene er brukt. Egenskaper eksempel opphøyer et kjøretid unntak som stammer fra egenskapen systemet animasjoner av dem blir forsøkt. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Tillat animere egenskapen. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>defaultValue</code>er satt til <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>; se kommentarer."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)
  id: '#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean,UpdateSourceTrigger)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean,UpdateSourceTrigger)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean,UpdateSourceTrigger)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> klassen med de angitte standard verdi og framework metadataene alternativene, angitte tilbakeringinger en boolsk verdi som kan brukes til å forhindre animasjonen av egenskapen og standard databinding update-utløser."
  remarks: "Typen for den angitte verdien for `defaultValue` må samsvare med eller være knyttet til typen som er angitt i den opprinnelige registreringen av avhengighetsegenskapen disse metadataene vil gjelde for. Manglende samsvar mellom metadata standardverditype og typen avhengighetsegenskapen det blir brukt på kan være vanskelig å feilsøke, fordi det manglende samsvaret ikke er en under kompilering. Egenskapen systemet kan ikke evalueres den gjeldende verdien til kjøretid, slik at resultatet av en type-egenskapen for Typekonflikt for standard er en kjøretidsfeil.       Verdien <xref:System.Windows.DependencyProperty.UnsetValue>har en spesialbetydning i egenskapen systemet, og kan ikke brukes som en avhengighet standard egenskapsverdi.</xref:System.Windows.DependencyProperty.UnsetValue>       Den `isAnimationProhibited` parameteren angir startverdien for <xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A>egenskapen deklarert av umiddelbar base <xref:System.Windows.UIPropertyMetadata>klasse.</xref:System.Windows.UIPropertyMetadata> </xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A>       Du finner mer informasjon om oppdateringen kilde virkemåten for bindinger [Data Binding oversikt over](~/add/includes/ajax-current-ext-md.md).       Verdier som er merket som sett flaggene i den `flags` parameteren vil angi den boolske verdien av <xref:System.Windows.FrameworkPropertyMetadata>Egenskaper som samsvarer med <xref:System.Windows.FrameworkPropertyMetadataOptions>for navnet `true`.</xref:System.Windows.FrameworkPropertyMetadataOptions> </xref:System.Windows.FrameworkPropertyMetadata> Du kan fortsatt endre verdier for egenskapene i metadata, så lenge Metadataene ikke er ennå brukt på en bestemt egenskap systemoperasjon."
  example:
  - "[!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor_DV_FPMO_PCC_CVC_IAP_DUST](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor_dv_fpmo_pcc_cvc_iap_dust)]"
  syntax:
    content: public FrameworkPropertyMetadata (object defaultValue, System.Windows.FrameworkPropertyMetadataOptions flags, System.Windows.PropertyChangedCallback propertyChangedCallback, System.Windows.CoerceValueCallback coerceValueCallback, bool isAnimationProhibited, System.Windows.Data.UpdateSourceTrigger defaultUpdateSourceTrigger);
    parameters:
    - id: defaultValue
      type: System.Object
      description: "Standardverdien for avhengighetsegenskapen, vanligvis angitt som en spesifikk type."
    - id: flags
      type: System.Windows.FrameworkPropertyMetadataOptions
      description: "Metadata alternativet flaggene (en kombinasjon av <xref href=&quot;System.Windows.FrameworkPropertyMetadataOptions&quot;> </xref> verdier). Disse alternativene angi egenskaper for avhengighetsegenskapen som samhandler med systemer som oppsettet eller databinding."
    - id: propertyChangedCallback
      type: System.Windows.PropertyChangedCallback
      description: "En referanse til et behandlingsprogram implementering som kaller egenskapen systemet når gjeldende verdi for egenskapen endres."
    - id: coerceValueCallback
      type: System.Windows.CoerceValueCallback
      description: "En referanse til en behandlingsprogrammet implementering kalles når egenskapen systemet kaller <xref:System.Windows.DependencyObject.CoerceValue*>mot denne egenskapen.</xref:System.Windows.DependencyObject.CoerceValue*>"
    - id: isAnimationProhibited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>å hindre at systemet egenskapen animere egenskapen som disse metadataene er brukt. Egenskaper eksempel opphøyer et kjøretid unntak som stammer fra egenskapen systemet animasjoner av dem blir forsøkt. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: defaultUpdateSourceTrigger
      type: System.Windows.Data.UpdateSourceTrigger
      description: "Den <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref> skal brukes når bindinger for denne egenskapen brukes som har de <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref> satt til <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>defaultValue</code>er satt til <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>; se kommentarer."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.AffectsArrange
  id: AffectsArrange
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: AffectsArrange
  nameWithType: FrameworkPropertyMetadata.AffectsArrange
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsArrange
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Henter eller angir en verdi som angir om en avhengighet potensielt påvirker ordne pass under Oppsett motoren operasjoner."
  remarks: "<xref:System.Windows.FrameworkElement>og <xref:System.Windows.FrameworkContentElement>inkluderer en implementering av <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A>som overvåker effektiv endringer i alle avhengighetsegenskaper som finnes på et element.</xref:System.Windows.FrameworkElement.OnPropertyChanged%2A> </xref:System.Windows.FrameworkContentElement></xref:System.Windows.FrameworkElement> Som en del av denne logic avhengighet som endre effektive ikke og har metadata med AffectsArrange egenskapene til `true` vil starte en utsatt forespørsel om å gjøre de visuelle effektene for dette elementet (et kall til <xref:System.Windows.UIElement.InvalidateArrange%2A>).</xref:System.Windows.UIElement.InvalidateArrange%2A> Fordi denne WPF framework nivå implementeringen er allerede på plass, trenger du vanligvis ikke å søke etter avhengighetsegenskaper med AffectsArrange før du betydelig erstatte eller endrer WPF framework nivå oppsettet virkemåte.       Egendefinert <xref:System.Windows.DependencyObject.OnPropertyChanged%2A>implementeringer kan velge å ha lignende virkemåte for avhengighet egenskapsendringer der AffectsArrange er `true`.</xref:System.Windows.DependencyObject.OnPropertyChanged%2A>       Med egenskapene i avledede klasser for <xref:System.Windows.PropertyMetadata>defineres vanligvis i objektmodellen med lese-og skrivetilgang.</xref:System.Windows.PropertyMetadata> Dette er slik at de kan bli justert etter initialisering av forekomsten. Imidlertid etter at metadataene forbrukes som en del av et kall til <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, eller <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>egenskapen systemet vil lukke den metadata forekomsten og egenskaper som formidler informasjon metadataene regnes nå uforanderlig.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Forsøk på å angi denne egenskapen etter <xref:System.Windows.PropertyMetadata.IsSealed%2A>er `true` forekomsten vil utløse et unntak i metadataene.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_AffectsArrange&quot;></a>## XAML teksten Bruk medlemmer av denne klassen er enten ikke vanligvis brukt i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following example obtains the default metadata from various dependency property fields, queries the value of various <xref:System.Windows.FrameworkPropertyMetadata> properties on it, and uses the information to populate a table to implement a \"metadata browser\".  \n  \n [!code-cs[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]\n [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  \n[!code-cs[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#fpmproperties)]\n[!code-vb[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]"
  syntax:
    content: public bool AffectsArrange { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis avhengighetsegenskapen som disse metadataene finnes potensielt påvirker ordne pass; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.AffectsArrange*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metadataene er allerede brukt til en avhengighet egenskapen operasjon, slik at metadataene er lukket og kan ikke angi egenskaper i metadataene."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.AffectsMeasure
  id: AffectsMeasure
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: AffectsMeasure
  nameWithType: FrameworkPropertyMetadata.AffectsMeasure
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsMeasure
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Henter eller angir en verdi som angir om en avhengighet potensielt påvirker målet pass under Oppsett motoren operasjoner."
  remarks: "<xref:System.Windows.FrameworkElement>og <xref:System.Windows.FrameworkContentElement>inkluderer en implementering av <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A>som overvåker effektiv endringer i alle avhengighetsegenskaper som finnes på et element.</xref:System.Windows.FrameworkElement.OnPropertyChanged%2A> </xref:System.Windows.FrameworkContentElement></xref:System.Windows.FrameworkElement> Som en del av denne logic avhengighet som endre effektive ikke og har metadata med AffectsMeasure egenskapene til `true` vil starte en utsatt forespørsel om å gjøre de visuelle effektene for dette elementet. Fordi denne WPF framework nivå implementeringen er allerede på plass, trenger du vanligvis ikke å søke etter avhengighetsegenskaper med AffectsMeasure før du betydelig erstatte eller endrer WPF framework nivå oppsettet virkemåte.       Egendefinert <xref:System.Windows.DependencyObject.OnPropertyChanged%2A>implementeringer kan velge å ha lignende virkemåte for avhengighet egenskapsendringer der AffectsMeasure er `true`.</xref:System.Windows.DependencyObject.OnPropertyChanged%2A>       Med egenskapene i avledede klasser for <xref:System.Windows.PropertyMetadata>defineres vanligvis i objektmodellen med lese-og skrivetilgang.</xref:System.Windows.PropertyMetadata> Dette er slik at de kan bli justert etter initialisering av forekomsten. Imidlertid etter at metadataene forbrukes som en del av et kall til <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, eller <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>egenskapen systemet vil lukke den metadata forekomsten og egenskaper som formidler informasjon metadataene regnes nå uforanderlig.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Forsøk på å angi denne egenskapen etter <xref:System.Windows.PropertyMetadata.IsSealed%2A>er `true` forekomsten vil utløse et unntak i metadataene.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_AffectsMeasure&quot;></a>## XAML teksten Bruk medlemmer av denne klassen er vanligvis ikke brukes i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following example obtains the default metadata from various dependency property fields, queries the value of various <xref:System.Windows.FrameworkPropertyMetadata> properties on it, and uses the information to populate a table to implement a \"metadata browser\".  \n  \n [!code-cs[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]\n [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  \n[!code-cs[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#fpmproperties)]\n[!code-vb[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]"
  syntax:
    content: public bool AffectsMeasure { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis avhengighetsegenskapen som disse metadataene finnes potensielt påvirker målet pass; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.AffectsMeasure*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metadataene er allerede brukt til en avhengighet egenskapen operasjon, slik at metadataene er lukket og kan ikke angi egenskaper i metadataene."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.AffectsParentArrange
  id: AffectsParentArrange
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: AffectsParentArrange
  nameWithType: FrameworkPropertyMetadata.AffectsParentArrange
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsParentArrange
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Henter eller angir en verdi som angir om en avhengighet potensielt påvirker ordne pass på det overordnede elementets oppsettet under Oppsett motoren operasjoner."
  remarks: "<xref:System.Windows.FrameworkElement>og <xref:System.Windows.FrameworkContentElement>inkluderer en implementering av <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A>som overvåker effektiv endringer i alle avhengighetsegenskaper som finnes på et element.</xref:System.Windows.FrameworkElement.OnPropertyChanged%2A> </xref:System.Windows.FrameworkContentElement></xref:System.Windows.FrameworkElement> Som en del av denne logic avhengighet som endre effektive ikke og har metadata med AffectsParentArrange egenskapene til `true` vil starte en utsatt forespørsel om å gjøre de visuelle effektene for det overordnede elementet.       Vanligvis du trenger ikke å rapportere endringer i en <xref:System.Windows.FrameworkElement>egenskapen til en overordnet element med AffectsParentArrange fordi elementet selve vil allerede har et eget <xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A>som `true`.</xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A> </xref:System.Windows.FrameworkElement> Dette er vanligvis tilstrekkelig, fordi endringer i det underordnede elementet vanligvis starte overordnet ordne om nødvendig. AffectsParentArrange brukes noen ganger til et <xref:System.Windows.FrameworkContentElement>avledet klasse.</xref:System.Windows.FrameworkContentElement> I dette tilfellet underordnet element angir en egenskap, men en <xref:System.Windows.FrameworkContentElement>utledede klassen kontrollerer ikke sin egen gjengivelse.</xref:System.Windows.FrameworkContentElement> Håndteres gjengivelse av en <xref:System.Windows.FrameworkElement>overordnede elementet som fungerer som innhold verten.</xref:System.Windows.FrameworkElement> For eksempel en endring i verdien for den <xref:System.Windows.Documents.FixedPage.Left%2A?displayProperty=fullName>vedlagte egenskapen av et underordnet element ugyldiggjøres ordne av overordnet fordi posisjonen til underordnet i overordnet må endres.</xref:System.Windows.Documents.FixedPage.Left%2A?displayProperty=fullName> Derfor den <xref:System.Windows.Documents.FixedPage.Left%2A?displayProperty=fullName>vedlagte egenskapen har metadata der AffectsParentArrange er `true`.</xref:System.Windows.Documents.FixedPage.Left%2A?displayProperty=fullName> Et annet eksempel er <xref:System.Windows.Controls.Control.Padding%2A>; Når denne egenskapsendringer kan overordnet endre plasseringen av barnet, avhengig av tilgjengelig plass.</xref:System.Windows.Controls.Control.Padding%2A>       Fordi denne WPF framework nivå implementeringen er allerede på plass, trenger du vanligvis ikke å søke etter avhengighetsegenskaper med AffectsParentArrange før du betydelig erstatte eller endrer WPF framework nivå oppsettet virkemåte.       Egendefinert <xref:System.Windows.DependencyObject.OnPropertyChanged%2A>implementeringer kan velge å ha lignende virkemåte for avhengighet egenskapsendringer der AffectsParentArrange er `true`.</xref:System.Windows.DependencyObject.OnPropertyChanged%2A>       Egenskaper for noen avledede klasser for <xref:System.Windows.PropertyMetadata>defineres vanligvis i objektmodellen med lese-og skrivetilgang.</xref:System.Windows.PropertyMetadata> Dette er slik at de kan bli justert etter initialisering av forekomsten. Imidlertid etter at metadataene forbrukes som en del av et kall til <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, eller <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>egenskapen systemet vil lukke den metadata forekomsten og egenskaper som formidler informasjon metadataene regnes nå uforanderlig.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Forsøk på å angi denne egenskapen etter <xref:System.Windows.PropertyMetadata.IsSealed%2A>er `true` forekomsten vil utløse et unntak i metadataene.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_AffectsParentArrange&quot;></a>## XAML teksten Bruk medlemmer av denne klassen er vanligvis ikke brukes i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public bool AffectsParentArrange { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis avhengighetsegenskapen som disse metadataene finnes potensielt påvirker ordne pass på det overordnede elementet; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.AffectsParentArrange*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metadataene er allerede brukt til en avhengighet egenskapen operasjon, slik at metadataene er lukket og kan ikke angi egenskaper i metadataene."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure
  id: AffectsParentMeasure
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: AffectsParentMeasure
  nameWithType: FrameworkPropertyMetadata.AffectsParentMeasure
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Henter eller angir en verdi som angir om en avhengighet potensielt påvirker målet pass på det overordnede elementets oppsettet under Oppsett motoren operasjoner."
  remarks: "<xref:System.Windows.FrameworkElement>og <xref:System.Windows.FrameworkContentElement>inkluderer en implementering av <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A>som overvåker effektiv endringer i alle avhengighetsegenskaper som finnes på et element.</xref:System.Windows.FrameworkElement.OnPropertyChanged%2A> </xref:System.Windows.FrameworkContentElement></xref:System.Windows.FrameworkElement> Som en del av denne logic avhengighet som endre effektive ikke og har metadata med AffectsParentMeasure egenskapene til `true` vil starte en utsatt forespørsel om å gjøre de visuelle effektene for det overordnede elementet. Fordi denne WPF framework nivå implementeringen er allerede på plass, trenger du vanligvis ikke å søke etter avhengighetsegenskaper med AffectsParentMeasure før du betydelig erstatte eller endrer WPF framework nivå oppsettet virkemåte.       Vanligvis du trenger ikke å rapportere endringer i en <xref:System.Windows.FrameworkElement>egenskapen til en overordnet element med AffectsParentMeasure fordi elementet selve vil allerede har et eget <xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>som `true`.</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.FrameworkElement> Dette skyldes vanligvis tilstrekkelig endringer i det underordnede elementet vanligvis starte overordnede målet bestått om nødvendig. AffectsParentMeasure brukes noen ganger til et <xref:System.Windows.FrameworkContentElement>avledet klasse.</xref:System.Windows.FrameworkContentElement> I dette tilfellet underordnet element angir en egenskap, men en <xref:System.Windows.FrameworkContentElement>utledede klassen kontrollerer ikke sin egen gjengivelse.</xref:System.Windows.FrameworkContentElement> Håndteres gjengivelse av en <xref:System.Windows.FrameworkElement>overordnede elementet som fungerer som innhold verten.</xref:System.Windows.FrameworkElement> For eksempel en endring i verdien for den <xref:System.Windows.Documents.Paragraph.KeepWithNext%2A?displayProperty=fullName>ved et underordnet element ugyldiggjøres mål av overordnet fordi relativ avstanden mellom avsnitt kan endre og kan øke eller redusere størrelsen på innholdet verten.</xref:System.Windows.Documents.Paragraph.KeepWithNext%2A?displayProperty=fullName> Derfor den <xref:System.Windows.Documents.Paragraph.KeepWithNext%2A?displayProperty=fullName>egenskapen har metadata der AffectsParentMeasure er `true`.</xref:System.Windows.Documents.Paragraph.KeepWithNext%2A?displayProperty=fullName>       Innhold vert elementer også ofte søke etter endringer i avhengighetsegenskaper der AffectsParentMeasure er `true`, som en del av innhold vert gjengivelse logic. For eksempel den <xref:System.Windows.Controls.TextBox>elementet må svare til spesifikke endringer i tekst som kan kreve som avgrensende boksen for den <xref:System.Windows.Controls.TextBox>selve endres.</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.TextBox>       Egendefinert <xref:System.Windows.DependencyObject.OnPropertyChanged%2A>implementeringer kan velge å ha lignende virkemåte for avhengighet egenskapsendringer der AffectsParentMeasure er `true`.</xref:System.Windows.DependencyObject.OnPropertyChanged%2A>       Egenskaper for noen avledede klasser for <xref:System.Windows.PropertyMetadata>defineres vanligvis i objektmodellen med lese-og skrivetilgang.</xref:System.Windows.PropertyMetadata> Dette er slik at de kan bli justert etter initialisering av forekomsten. Imidlertid etter at metadataene forbrukes som en del av et kall til <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, eller <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>egenskapen systemet vil lukke den metadata forekomsten og egenskaper som formidler informasjon metadataene regnes nå uforanderlig.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Forsøk på å angi denne egenskapen etter <xref:System.Windows.PropertyMetadata.IsSealed%2A>er `true` forekomsten vil utløse et unntak i metadataene.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_AffectsParentMeasure&quot;></a>## XAML teksten Bruk medlemmer av denne klassen er vanligvis ikke brukes i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public bool AffectsParentMeasure { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis avhengighetsegenskapen som disse metadataene finnes potensielt påvirker målet pass på det overordnede elementet; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metadataene er allerede brukt til en avhengighet egenskapen operasjon, slik at metadataene er lukket og kan ikke angi egenskaper i metadataene."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.AffectsRender
  id: AffectsRender
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: AffectsRender
  nameWithType: FrameworkPropertyMetadata.AffectsRender
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsRender
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Henter eller angir en verdi som angir om en avhengighet potensielt påvirker generelle oppsettet på en måte som spesielt påvirker ikke sortering eller mål, men krever en tilbaketrekking."
  remarks: "<xref:System.Windows.FrameworkElement>og <xref:System.Windows.FrameworkContentElement>inkluderer en implementering av <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A>som overvåker effektiv endringer i alle avhengighetsegenskaper som finnes på et element.</xref:System.Windows.FrameworkElement.OnPropertyChanged%2A> </xref:System.Windows.FrameworkContentElement></xref:System.Windows.FrameworkElement> Som en del av denne logic avhengighet som endre effektive ikke og har metadata med AffectsRender egenskapene til `true` vil starte en utsatt forespørsel om å gjøre de visuelle effektene for dette elementet. Fordi denne WPF framework nivå implementeringen er allerede på plass, trenger du vanligvis ikke å søke etter avhengighetsegenskaper med AffectsRender før du betydelig erstatte eller endrer WPF framework nivå oppsettet virkemåte.       Egendefinert <xref:System.Windows.DependencyObject.OnPropertyChanged%2A>implementeringer kan velge å ha lignende virkemåte for avhengighet egenskapsendringer der AffectsRender er `true`.</xref:System.Windows.DependencyObject.OnPropertyChanged%2A>       Egenskaper for noen avledede klasser for <xref:System.Windows.PropertyMetadata>defineres vanligvis i objektmodellen med lese-og skrivetilgang.</xref:System.Windows.PropertyMetadata> Dette er slik at de kan bli justert etter initialisering av forekomsten. Imidlertid etter at metadataene forbrukes som en del av et kall til <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, eller <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>egenskapen systemet vil lukke den metadata forekomsten og egenskaper som formidler informasjon metadataene regnes nå uforanderlig.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Forsøk på å angi denne egenskapen etter <xref:System.Windows.PropertyMetadata.IsSealed%2A>er `true` forekomsten vil utløse et unntak i metadataene.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_AffectsRender&quot;></a>## XAML teksten Bruk medlemmer av denne klassen er vanligvis ikke brukes i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following example obtains the default metadata from various dependency property fields, queries the value of various <xref:System.Windows.FrameworkPropertyMetadata> properties on it, and uses the information to populate a table to implement a \"metadata browser\".  \n  \n [!code-cs[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]\n [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  \n[!code-cs[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#fpmproperties)]\n[!code-vb[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]"
  syntax:
    content: public bool AffectsRender { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis avhengighetsegenskapen som disse metadataene finnes påvirker gjengivelse; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.AffectsRender*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metadataene er allerede brukt til en avhengighet egenskapen operasjon, slik at metadataene er lukket og kan ikke angi egenskaper i metadataene."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault
  id: BindsTwoWayByDefault
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: BindsTwoWayByDefault
  nameWithType: FrameworkPropertyMetadata.BindsTwoWayByDefault
  fullName: System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Henter eller angir en verdi som angir om egenskapen binding toveis som standard."
  remarks: "Denne egenskapen blir ikke finnes `true`, binding oppdateringer er enveis som standard, basert på standard virkemåte for den <xref:System.Windows.Data.Binding>konstruktører eller tilsvarende [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] syntaks.</xref:System.Windows.Data.Binding>       I eksisterende elementer, vanligvis finner egenskapen satt til `true` i metadataene for avhengighetsegenskaper som rapporterer tilstand og kan endres ved handling, for eksempel <xref:System.Windows.Controls.Primitives.Selector.IsSelected%2A?displayProperty=fullName>.</xref:System.Windows.Controls.Primitives.Selector.IsSelected%2A?displayProperty=fullName>       Bare rapporter standard bindingen oppdatere egenskaper for avhengighetsegenskapen Generelt i denne egenskapen. En binding som er angitt for denne egenskapen til en forekomst lokalt kan angi den <xref:System.Windows.Data.Binding.Mode%2A>for bindingen og endre denne standarden.</xref:System.Windows.Data.Binding.Mode%2A>       Egenskaper for noen avledede klasser for <xref:System.Windows.PropertyMetadata>defineres vanligvis i objektmodellen med lese-og skrivetilgang.</xref:System.Windows.PropertyMetadata> Dette er slik at de kan bli justert etter initialisering av forekomsten. Imidlertid etter at metadataene forbrukes som en del av et kall til <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, eller <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>egenskapen systemet vil lukke den metadata forekomsten og egenskaper som formidler informasjon metadataene regnes nå uforanderlig.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Forsøk på å angi denne egenskapen etter <xref:System.Windows.PropertyMetadata.IsSealed%2A>er `true` forekomsten vil utløse et unntak i metadataene.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_BindsTwoWayByDefault&quot;></a>## XAML teksten Bruk medlemmer av denne klassen er vanligvis ikke brukes i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following example obtains the default metadata from various dependency property fields, queries the value of various <xref:System.Windows.FrameworkPropertyMetadata> properties on it, and uses the information to populate a table to implement a \"metadata browser\".  \n  \n [!code-cs[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]\n [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  \n[!code-cs[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#fpmproperties)]\n[!code-vb[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]"
  syntax:
    content: public bool BindsTwoWayByDefault { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis avhengighetsegenskapen som disse metadataene finnes binding toveis som standard. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metadataene er allerede brukt til en avhengighet egenskapen operasjon, slik at metadataene er lukket og kan ikke angi egenskaper i metadataene."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger
  id: DefaultUpdateSourceTrigger
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: DefaultUpdateSourceTrigger
  nameWithType: FrameworkPropertyMetadata.DefaultUpdateSourceTrigger
  fullName: System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Henter eller angir standarden for <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref> for å bruke bindinger for egenskapen med disse metadataene som brukes, som har de <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref> satt til <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>."
  remarks: "Med egenskapene i avledede klasser for <xref:System.Windows.PropertyMetadata>defineres vanligvis i objektmodellen med lese-og skrivetilgang.</xref:System.Windows.PropertyMetadata> Dette er slik at de kan bli justert etter initialisering av forekomsten. Imidlertid etter at metadataene forbrukes som en del av et kall til <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, eller <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>egenskapen systemet vil lukke den metadata forekomsten og egenskaper som formidler informasjon metadataene regnes nå uforanderlig.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Forsøk på å angi denne egenskapen etter <xref:System.Windows.PropertyMetadata.IsSealed%2A>er `true` forekomsten vil utløse et unntak i metadataene.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_DefaultUpdateSourceTrigger&quot;></a>## XAML teksten Bruk medlemmer av denne klassen er vanligvis ikke brukes i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public System.Windows.Data.UpdateSourceTrigger DefaultUpdateSourceTrigger { get; set; }
    return:
      type: System.Windows.Data.UpdateSourceTrigger
      description: "En verdi for opplisting enn <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Denne egenskapen er satt til <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>; verdien du angir skal bli standard når du ber om bindinger."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metadataene er allerede brukt til en avhengighet egenskapen operasjon, slik at metadataene er lukket og kan ikke angi egenskaper i metadataene."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.Inherits
  id: Inherits
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: Inherits
  nameWithType: FrameworkPropertyMetadata.Inherits
  fullName: System.Windows.FrameworkPropertyMetadata.Inherits
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Henter eller angir en verdi som angir om verdien for avhengighetsegenskapen er arvelig."
  remarks: "Egenskapen value arv er en funksjon i den [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] egenskapen systemet på WPF framework-nivå, der bestemte avhengighetsegenskaper kan angis lokalt for et element på eller nær roten av et [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] elementet tre, og deretter etter verdien arves av alle elementer i rotens logiske tre underordnede elementer som de har også egenskapen. Egenskapen value arv er ikke aktivert som standard, og å aktivere den har en ytelseskonsekvensene. Hvis du vil ha mer informasjon, se [egenskapen verdien arv](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Selv om egenskapen verdien arv kan vises til å fungere for ikke-vedlagt avhengighetsegenskaper, Arv virkemåten for ikke-vedlagt egenskapen via enkelte objekt fordelinger i treet runtime er ikke definert. Bruk alltid <xref:System.Windows.DependencyProperty.RegisterAttached%2A>til å registrere egenskapene der du angir Inherits i metadataene.</xref:System.Windows.DependencyProperty.RegisterAttached%2A>       Med egenskapene i avledede klasser for <xref:System.Windows.PropertyMetadata>defineres vanligvis i objektmodellen med lese-og skrivetilgang.</xref:System.Windows.PropertyMetadata> Dette er slik at de kan bli justert etter initialisering av forekomsten. Imidlertid etter at metadataene forbrukes som en del av et kall til <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, eller <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>egenskapen systemet vil lukke den metadata forekomsten og egenskaper som formidler informasjon metadataene regnes nå uforanderlig.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Forsøk på å angi denne egenskapen etter <xref:System.Windows.PropertyMetadata.IsSealed%2A>er `true` forekomsten vil utløse et unntak i metadataene.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_Inherits&quot;></a>## XAML teksten Bruk medlemmer av denne klassen er vanligvis ikke brukes i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following example obtains the default metadata from various dependency property fields, queries the value of various <xref:System.Windows.FrameworkPropertyMetadata> properties on it, and uses the information to populate a table to implement a \"metadata browser\".  \n  \n [!code-cs[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]\n [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  \n[!code-cs[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#fpmproperties)]\n[!code-vb[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]"
  syntax:
    content: public bool Inherits { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis egenskapsverdien er arvelig; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.Inherits*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metadataene er allerede brukt til en avhengighet egenskapen operasjon, slik at metadataene er lukket og kan ikke angi egenskaper i metadataene."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed
  id: IsDataBindingAllowed
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: IsDataBindingAllowed
  nameWithType: FrameworkPropertyMetadata.IsDataBindingAllowed
  fullName: System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Henter en verdi som angir om databinding støttes for avhengighetsegenskapen."
  remarks: "Denne egenskapen rapporterer `false` for en av to mulige årsaker: enten databinding til en avhengighetsegenskap er ikke tillatt fordi avhengighetsegenskapen er skrivebeskyttet (som rapporterte i avhengighet egenskapsidentifikator, ikke metadata), eller verdien for en annen metadataegenskapen <xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>, er satt til `true` i metadataene.</xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A> Denne egenskapen er eksponert som en tjeneste, slik at brukere ikke trenger å kontrollere begge <xref:System.Windows.DependencyProperty.ReadOnly%2A>og <xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>.</xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A> </xref:System.Windows.DependencyProperty.ReadOnly%2A>       Hvis du prøver å opprette metadataene som angir at en annen måte skrivetilgang-egenskap ikke må støtter databinding, angi flagget <xref:System.Windows.FrameworkPropertyMetadataOptions>(Vær oppmerksom på små naming convention forskjellen sammenlignet <xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>).</xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A> </xref:System.Windows.FrameworkPropertyMetadataOptions>      <a name=&quot;xamlTextUsage_IsDataBindingAllowed&quot;></a>## XAML teksten Bruk medlemmer av denne klassen er vanligvis ikke brukes i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following example obtains the default metadata from various dependency property fields, queries the value of various <xref:System.Windows.FrameworkPropertyMetadata> properties on it, and uses the information to populate a table to implement a \"metadata browser\".  \n  \n [!code-cs[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]\n [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  \n[!code-cs[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#fpmproperties)]\n[!code-vb[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]"
  syntax:
    content: public bool IsDataBindingAllowed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis databinding støttes på avhengighetsegenskapen disse metadataene gjelder for; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.IsNotDataBindable
  id: IsNotDataBindable
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: IsNotDataBindable
  nameWithType: FrameworkPropertyMetadata.IsNotDataBindable
  fullName: System.Windows.FrameworkPropertyMetadata.IsNotDataBindable
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Henter eller angir en verdi som angir om avhengighetsegenskapen støtter databinding."
  remarks: "Merk at denne metadataegenskapen er satt til `true` spesielt for egenskaper som ikke skal støtter databinding, selv om skrivetilgang egenskaper. Forventningen skyldes at i de fleste tilfeller der en avhengighetsegenskapen er deklarert databinding ønskes, databinding inngår i nøkkelen scenarioer der en avhengighet er nyttig. I motsetning til <xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, dette bare endrer ikke en standard senere kan endres på en spesifikk binding.</xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A> Angi denne egenskapen `true` i metadataene for en avhengighetsegenskapen metadata deaktiverer alle bindinger i å bruke verdiene i uttrykk som avhengighetsegenskapen.       Egenskaper for skrivebeskyttet avhengighet støtter ikke databinding (fordi de har ingen setter som kan bruke endrede verdier), men vil fortsatt rapporten `false` for IsNotDataBindable. Fordi egenskaper som samsvarer med en <xref:System.Windows.FrameworkPropertyMetadataOptions>verdier vil rapportere paritet med hvordan metadataene ble faktisk opprettet, i stedet for reporting alltid end resultatet virkemåten som navngivning av egenskapen kan gi inntrykk.</xref:System.Windows.FrameworkPropertyMetadataOptions> For å fastslå om en angitte avhengighetsegenskapen tillater databinding, bør du vanligvis kontrollere <xref:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed%2A>i stedet.</xref:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed%2A> <xref:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed%2A>er en tjeneste for kontroll av både <xref:System.Windows.DependencyProperty.ReadOnly%2A>og IsNotDataBindable som én enkelt operasjon, fører det forventede resultatet.</xref:System.Windows.DependencyProperty.ReadOnly%2A></xref:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed%2A>       Med egenskapene i avledede klasser for <xref:System.Windows.PropertyMetadata>defineres vanligvis i objektmodellen med lese-og skrivetilgang.</xref:System.Windows.PropertyMetadata> Dette er slik at de kan bli justert etter initialisering av forekomsten. Imidlertid etter at metadataene forbrukes som en del av et kall til <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, eller <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>egenskapen systemet vil lukke den metadata forekomsten og egenskaper som formidler informasjon metadataene regnes nå uforanderlig.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Forsøk på å angi denne egenskapen etter <xref:System.Windows.PropertyMetadata.IsSealed%2A>er `true` forekomsten vil utløse et unntak i metadataene.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_IsNotDataBindable&quot;></a>## XAML teksten Bruk medlemmer av denne klassen er vanligvis ikke brukes i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public bool IsNotDataBindable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis egenskapen ikke støtter databinding; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.IsNotDataBindable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metadataene er allerede brukt til en avhengighet egenskapen operasjon, slik at metadataene er lukket og kan ikke angi egenskaper i metadataene."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.Journal
  id: Journal
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: Journal
  nameWithType: FrameworkPropertyMetadata.Journal
  fullName: System.Windows.FrameworkPropertyMetadata.Journal
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Henter eller angir en verdi som angir om denne egenskapen inneholder loggføringsnivåene informasjon som programmer kan eller bør lagre som en del av en loggføringsnivåene implementering."
  remarks: "Med egenskapene i avledede klasser for <xref:System.Windows.PropertyMetadata>defineres vanligvis i objektmodellen med lese-og skrivetilgang.</xref:System.Windows.PropertyMetadata> Dette er slik at de kan bli justert etter initialisering av forekomsten. Imidlertid etter at metadataene forbrukes som en del av et kall til <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, eller <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>egenskapen systemet vil lukke den metadata forekomsten og egenskaper som formidler informasjon metadataene regnes nå uforanderlig.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Forsøk på å angi denne egenskapen etter <xref:System.Windows.PropertyMetadata.IsSealed%2A>er `true` forekomsten vil utløse et unntak i metadataene.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_Journal&quot;></a>## XAML teksten Bruk medlemmer av denne klassen er vanligvis ikke brukes i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public bool Journal { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis loggføringsnivåene må utføres på avhengighetsegenskapen disse metadataene gjelder; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.Journal*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metadataene er allerede brukt til en avhengighet egenskapen operasjon, slik at metadataene er lukket og kan ikke angi egenskaper i metadataene."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)
  id: Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: Merge(PropertyMetadata,DependencyProperty)
  nameWithType: FrameworkPropertyMetadata.Merge(PropertyMetadata,DependencyProperty)
  fullName: System.Windows.FrameworkPropertyMetadata.Merge(PropertyMetadata,DependencyProperty)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Aktiverer en sammenslåing av metadata for kilde med grunntallet metadata."
  remarks: "Denne metoden brukes internt når metadata overstyres."
  syntax:
    content: protected override void Merge (System.Windows.PropertyMetadata baseMetadata, System.Windows.DependencyProperty dp);
    parameters:
    - id: baseMetadata
      type: System.Windows.PropertyMetadata
      description: "Grunnleggende metadataene til å slå sammen."
    - id: dp
      type: System.Windows.DependencyProperty
      description: "Avhengighetsegenskapen disse metadataene brukes."
  overload: System.Windows.FrameworkPropertyMetadata.Merge*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)
  id: OnApply(System.Windows.DependencyProperty,System.Type)
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: OnApply(DependencyProperty,Type)
  nameWithType: FrameworkPropertyMetadata.OnApply(DependencyProperty,Type)
  fullName: System.Windows.FrameworkPropertyMetadata.OnApply(DependencyProperty,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Kalles når disse metadataene er brukt på en egenskap som indikerer at metadataene er blir lukket."
  remarks: "Mutability for datastrukturen for en <xref:System.Windows.FrameworkPropertyMetadata>forekomsten må være merket som uforanderlig når denne metoden startes.</xref:System.Windows.FrameworkPropertyMetadata>"
  syntax:
    content: protected override void OnApply (System.Windows.DependencyProperty dp, Type targetType);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "Avhengighetsegenskapen metadataene er brukt."
    - id: targetType
      type: System.Type
      description: "Typen som er tilknyttet denne metadata Hvis dette er typespesifikke metadata. Hvis dette er standard metadata, denne verdien kan være <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.OnApply*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior
  id: OverridesInheritanceBehavior
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: OverridesInheritanceBehavior
  nameWithType: FrameworkPropertyMetadata.OverridesInheritanceBehavior
  fullName: System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Henter eller angir en verdi som angir om egenskapen verdien arv evalueringen skal går over enkelte innhold grensene i det logiske treet elementer."
  remarks: "Disse metadataene rapporter endringer brukes sjelden egenskapen verdien arv virkemåten på tvers av spesielle overordnet element-underordnet element grenser. Eksemplet kanoniske for eksempel en grense er innholdet i en <xref:System.Windows.Controls.Frame>, der <xref:System.Windows.Controls.Frame>innhold kan komme inn på nytt uavhengig av forekomsten av <xref:System.Windows.Controls.Frame>.</xref:System.Windows.Controls.Frame> </xref:System.Windows.Controls.Frame> </xref:System.Windows.Controls.Frame> Den ønskede egenskap system virkemåten er at egenskapen verdien arv ikke skal går over til innholdet i den <xref:System.Windows.Controls.Frame>fordi disse innholdet kanskje elementer som programmet vert rammen ikke eier eller kontrollere.</xref:System.Windows.Controls.Frame> Angir metadataene med OverridesInheritanceBehavior satt til `true`, samt angivelse <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>som `true`, vil føre til at egenskapen hvor metadataene er aktivert for å være arvbare selv på tvers av <xref:System.Windows.Controls.Frame>grense eller lignende grensene.</xref:System.Windows.Controls.Frame> </xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>       Med egenskapene i avledede klasser for <xref:System.Windows.PropertyMetadata>defineres vanligvis i objektmodellen med lese-og skrivetilgang.</xref:System.Windows.PropertyMetadata> Dette er slik at de kan bli justert etter initialisering av forekomsten. Imidlertid etter at metadataene forbrukes som en del av et kall til <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, eller <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>egenskapen systemet vil lukke den metadata forekomsten og egenskaper som formidler informasjon metadataene regnes nå uforanderlig.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Forsøk på å angi denne egenskapen etter <xref:System.Windows.PropertyMetadata.IsSealed%2A>er `true` forekomsten vil utløse et unntak i metadataene.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_OverridesInheritanceBehavior&quot;></a>## XAML teksten Bruk medlemmer av denne klassen er vanligvis ikke brukes i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public bool OverridesInheritanceBehavior { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis egenskapen verdien arvingen må går over enkelte innhold grensene; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metadataene er allerede brukt til en avhengighet egenskapen operasjon, slik at metadataene er lukket og kan ikke angi egenskaper i metadataene."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender
  id: SubPropertiesDoNotAffectRender
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: SubPropertiesDoNotAffectRender
  nameWithType: FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender
  fullName: System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Henter eller angir en verdi som angir om ikke påvirker undertype egenskapene for avhengighetsegenskapen gjengivelse av det inneholdende objektet."
  remarks: "Dette alternativet for metadata er relevant for avhengighetsegenskaper referansetyper, der denne typen har egenskapsverdier for seg selv. Oppsettet system logikken er vanligvis anta at alle avhengighetsegenskapen med undertype egenskaper potensielt påvirker oppsettet, fordi kontrollerer alle underordnede egenskaper for endringer mer tid enn faktisk kjører et annet gjengi pass. Dette alternativet `true` er nyttig for å optimalisere ytelsen til WPF framework nivå oppsettet system implementeringen.       Med egenskapene i avledede klasser for <xref:System.Windows.PropertyMetadata>defineres vanligvis i objektmodellen med lese-og skrivetilgang.</xref:System.Windows.PropertyMetadata> Dette er slik at de kan bli justert etter initialisering av forekomsten. Imidlertid når metadataene forbrukes som en del av et kall til <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, eller <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>egenskapen systemet vil lukke den metadata forekomsten og egenskaper som formidler informasjon metadataene regnes nå uforanderlig.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Forsøk på å angi denne egenskapen etter <xref:System.Windows.PropertyMetadata.IsSealed%2A>er `true` forekomsten vil utløse et unntak i metadataene.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_SubPropertiesDoNotAffectRender&quot;></a>## XAML teksten Bruk medlemmer av denne klassen er vanligvis ikke brukes i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public bool SubPropertiesDoNotAffectRender { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis undertype egenskapsverdiene ikke påvirker gjengivelse hvis endret. Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metadataene er allerede brukt til en avhengighet egenskapen operasjon, slik at metadataene er lukket og kan ikke angi egenskaper i metadataene."
  platform:
  - net462
references:
- uid: System.Windows.UIPropertyMetadata
  isExternal: false
  name: System.Windows.UIPropertyMetadata
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.FrameworkPropertyMetadata.#ctor
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata()
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata()
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata()
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(Object)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(PropertyChangedCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(PropertyChangedCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(PropertyChangedCallback)
- uid: System.Windows.PropertyChangedCallback
  parent: System.Windows
  isExternal: false
  name: PropertyChangedCallback
  nameWithType: PropertyChangedCallback
  fullName: System.Windows.PropertyChangedCallback
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions)
- uid: System.Windows.FrameworkPropertyMetadataOptions
  parent: System.Windows
  isExternal: false
  name: FrameworkPropertyMetadataOptions
  nameWithType: FrameworkPropertyMetadataOptions
  fullName: System.Windows.FrameworkPropertyMetadataOptions
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(Object,PropertyChangedCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,PropertyChangedCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,PropertyChangedCallback)
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(PropertyChangedCallback,CoerceValueCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(PropertyChangedCallback,CoerceValueCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(PropertyChangedCallback,CoerceValueCallback)
- uid: System.Windows.CoerceValueCallback
  parent: System.Windows
  isExternal: false
  name: CoerceValueCallback
  nameWithType: CoerceValueCallback
  fullName: System.Windows.CoerceValueCallback
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback)
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(Object,PropertyChangedCallback,CoerceValueCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,PropertyChangedCallback,CoerceValueCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,PropertyChangedCallback,CoerceValueCallback)
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback)
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean,UpdateSourceTrigger)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean,UpdateSourceTrigger)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean,UpdateSourceTrigger)
- uid: System.Windows.Data.UpdateSourceTrigger
  parent: System.Windows.Data
  isExternal: false
  name: UpdateSourceTrigger
  nameWithType: UpdateSourceTrigger
  fullName: System.Windows.Data.UpdateSourceTrigger
- uid: System.Windows.FrameworkPropertyMetadata.AffectsArrange
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsArrange
  nameWithType: FrameworkPropertyMetadata.AffectsArrange
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsArrange
- uid: System.Windows.FrameworkPropertyMetadata.AffectsMeasure
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsMeasure
  nameWithType: FrameworkPropertyMetadata.AffectsMeasure
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsMeasure
- uid: System.Windows.FrameworkPropertyMetadata.AffectsParentArrange
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsParentArrange
  nameWithType: FrameworkPropertyMetadata.AffectsParentArrange
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsParentArrange
- uid: System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsParentMeasure
  nameWithType: FrameworkPropertyMetadata.AffectsParentMeasure
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure
- uid: System.Windows.FrameworkPropertyMetadata.AffectsRender
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsRender
  nameWithType: FrameworkPropertyMetadata.AffectsRender
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsRender
- uid: System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: BindsTwoWayByDefault
  nameWithType: FrameworkPropertyMetadata.BindsTwoWayByDefault
  fullName: System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault
- uid: System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: DefaultUpdateSourceTrigger
  nameWithType: FrameworkPropertyMetadata.DefaultUpdateSourceTrigger
  fullName: System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger
- uid: System.Windows.FrameworkPropertyMetadata.Inherits
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: Inherits
  nameWithType: FrameworkPropertyMetadata.Inherits
  fullName: System.Windows.FrameworkPropertyMetadata.Inherits
- uid: System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: IsDataBindingAllowed
  nameWithType: FrameworkPropertyMetadata.IsDataBindingAllowed
  fullName: System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed
- uid: System.Windows.FrameworkPropertyMetadata.IsNotDataBindable
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: IsNotDataBindable
  nameWithType: FrameworkPropertyMetadata.IsNotDataBindable
  fullName: System.Windows.FrameworkPropertyMetadata.IsNotDataBindable
- uid: System.Windows.FrameworkPropertyMetadata.Journal
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: Journal
  nameWithType: FrameworkPropertyMetadata.Journal
  fullName: System.Windows.FrameworkPropertyMetadata.Journal
- uid: System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: Merge(PropertyMetadata,DependencyProperty)
  nameWithType: FrameworkPropertyMetadata.Merge(PropertyMetadata,DependencyProperty)
  fullName: System.Windows.FrameworkPropertyMetadata.Merge(PropertyMetadata,DependencyProperty)
- uid: System.Windows.PropertyMetadata
  parent: System.Windows
  isExternal: false
  name: PropertyMetadata
  nameWithType: PropertyMetadata
  fullName: System.Windows.PropertyMetadata
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.FrameworkPropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: OnApply(DependencyProperty,Type)
  nameWithType: FrameworkPropertyMetadata.OnApply(DependencyProperty,Type)
  fullName: System.Windows.FrameworkPropertyMetadata.OnApply(DependencyProperty,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: OverridesInheritanceBehavior
  nameWithType: FrameworkPropertyMetadata.OverridesInheritanceBehavior
  fullName: System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior
- uid: System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: SubPropertiesDoNotAffectRender
  nameWithType: FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender
  fullName: System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender
- uid: System.Windows.FrameworkPropertyMetadata.#ctor*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata
- uid: System.Windows.FrameworkPropertyMetadata.AffectsArrange*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsArrange
  nameWithType: FrameworkPropertyMetadata.AffectsArrange
- uid: System.Windows.FrameworkPropertyMetadata.AffectsMeasure*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsMeasure
  nameWithType: FrameworkPropertyMetadata.AffectsMeasure
- uid: System.Windows.FrameworkPropertyMetadata.AffectsParentArrange*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsParentArrange
  nameWithType: FrameworkPropertyMetadata.AffectsParentArrange
- uid: System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsParentMeasure
  nameWithType: FrameworkPropertyMetadata.AffectsParentMeasure
- uid: System.Windows.FrameworkPropertyMetadata.AffectsRender*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsRender
  nameWithType: FrameworkPropertyMetadata.AffectsRender
- uid: System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: BindsTwoWayByDefault
  nameWithType: FrameworkPropertyMetadata.BindsTwoWayByDefault
- uid: System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: DefaultUpdateSourceTrigger
  nameWithType: FrameworkPropertyMetadata.DefaultUpdateSourceTrigger
- uid: System.Windows.FrameworkPropertyMetadata.Inherits*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: Inherits
  nameWithType: FrameworkPropertyMetadata.Inherits
- uid: System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: IsDataBindingAllowed
  nameWithType: FrameworkPropertyMetadata.IsDataBindingAllowed
- uid: System.Windows.FrameworkPropertyMetadata.IsNotDataBindable*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: IsNotDataBindable
  nameWithType: FrameworkPropertyMetadata.IsNotDataBindable
- uid: System.Windows.FrameworkPropertyMetadata.Journal*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: Journal
  nameWithType: FrameworkPropertyMetadata.Journal
- uid: System.Windows.FrameworkPropertyMetadata.Merge*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: Merge
  nameWithType: FrameworkPropertyMetadata.Merge
- uid: System.Windows.FrameworkPropertyMetadata.OnApply*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: OnApply
  nameWithType: FrameworkPropertyMetadata.OnApply
- uid: System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: OverridesInheritanceBehavior
  nameWithType: FrameworkPropertyMetadata.OverridesInheritanceBehavior
- uid: System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: SubPropertiesDoNotAffectRender
  nameWithType: FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender
