### YamlMime:ManagedReference
items:
- uid: System.Collections.ReadOnlyCollectionBase
  id: ReadOnlyCollectionBase
  children:
  - System.Collections.ReadOnlyCollectionBase.#ctor
  - System.Collections.ReadOnlyCollectionBase.Count
  - System.Collections.ReadOnlyCollectionBase.GetEnumerator
  - System.Collections.ReadOnlyCollectionBase.InnerList
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot
  langs:
  - csharp
  name: ReadOnlyCollectionBase
  nameWithType: ReadOnlyCollectionBase
  fullName: System.Collections.ReadOnlyCollectionBase
  type: Class
  summary: "Gir den <xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;> </xref> basisklasse for en forespørselsparameter av sterk type ikke generisk skrivebeskyttet samling."
  remarks: "En forekomst av ReadOnlyCollectionBase er alltid skrivebeskyttet. Se <xref:System.Collections.CollectionBase>etter en kan endres versjon av denne klassen.</xref:System.Collections.CollectionBase>"
  example:
  - "The following code example implements the ReadOnlyCollectionBase class.  \n  \n [!code-cpp[System.Collections.ReadOnlyCollectionBase#1](~/add/codesnippet/cpp/t-system.collections.rea_1.cpp)]\n [!code-cs[System.Collections.ReadOnlyCollectionBase#1](~/add/codesnippet/csharp/t-system.collections.rea_1.cs)]\n [!code-vb[System.Collections.ReadOnlyCollectionBase#1](~/add/codesnippet/visualbasic/t-system.collections.rea_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class ReadOnlyCollectionBase : System.Collections.ICollection
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.ReadOnlyCollectionBase.#ctor
  id: '#ctor'
  parent: System.Collections.ReadOnlyCollectionBase
  langs:
  - csharp
  name: ReadOnlyCollectionBase()
  nameWithType: ReadOnlyCollectionBase.ReadOnlyCollectionBase()
  fullName: System.Collections.ReadOnlyCollectionBase.ReadOnlyCollectionBase()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> klasse."
  remarks: "Denne konstruktøren, er en O(1)-operasjon."
  syntax:
    content: protected ReadOnlyCollectionBase ();
    parameters: []
  overload: System.Collections.ReadOnlyCollectionBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.ReadOnlyCollectionBase.Count
  id: Count
  parent: System.Collections.ReadOnlyCollectionBase
  langs:
  - csharp
  name: Count
  nameWithType: ReadOnlyCollectionBase.Count
  fullName: System.Collections.ReadOnlyCollectionBase.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Henter antallet elementer i den <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> forekomsten."
  remarks: ''
  example:
  - "The following code example implements the <xref:System.Collections.ReadOnlyCollectionBase> class.  \n  \n [!code-cpp[System.Collections.ReadOnlyCollectionBase#1](~/add/codesnippet/cpp/p-system.collections.rea_1_1.cpp)]\n [!code-cs[System.Collections.ReadOnlyCollectionBase#1](~/add/codesnippet/csharp/p-system.collections.rea_1_1.cs)]\n [!code-vb[System.Collections.ReadOnlyCollectionBase#1](~/add/codesnippet/visualbasic/p-system.collections.rea_1_1.vb)]"
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: "Antallet elementer i den <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> forekomsten.       Henting av verdien for denne egenskapen er en O(1)-operasjon."
  overload: System.Collections.ReadOnlyCollectionBase.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.ReadOnlyCollectionBase.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.ReadOnlyCollectionBase
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ReadOnlyCollectionBase.GetEnumerator()
  fullName: System.Collections.ReadOnlyCollectionBase.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Returnerer en opplisting som går gjennom den <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> forekomsten."
  remarks: "Den `foreach` -setningen for språket C# (`for each` i Visual Basic) skjuler av hvor komplekse enumeratorene.  Ved hjelp av derfor `foreach` anbefales, i stedet for direkte manipulering enumeratoren.       Enumeratorene kan brukes til å lese data i samlingen, men de kan ikke brukes til å endre den underliggende samlingen.       I utgangspunktet er enumeratoren plassert før det første elementet i samlingen. <xref:System.Collections.IEnumerator.Reset%2A>henter også enumeratoren tilbake til denne plasseringen.</xref:System.Collections.IEnumerator.Reset%2A>  På denne plasseringen <xref:System.Collections.IEnumerator.Current%2A>er udefinert.</xref:System.Collections.IEnumerator.Current%2A> Du må derfor kalle <xref:System.Collections.IEnumerator.MoveNext%2A>å flytte enumeratoren til det første elementet i samlingen før leser <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>Returnerer det samme objektet før enten <xref:System.Collections.IEnumerator.MoveNext%2A>eller <xref:System.Collections.IEnumerator.Reset%2A>kalles.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>angir <xref:System.Collections.IEnumerator.Current%2A>til neste element.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Hvis <xref:System.Collections.IEnumerator.MoveNext%2A>formidler slutten av samlingen enumeratoren er plassert etter det siste elementet i samlingen og <xref:System.Collections.IEnumerator.MoveNext%2A>returnerer `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Når enumeratoren er på denne plasseringen, etterfølgende kall til <xref:System.Collections.IEnumerator.MoveNext%2A>også returnere `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Hvis siste kall til <xref:System.Collections.IEnumerator.MoveNext%2A>returnerte `false`, <xref:System.Collections.IEnumerator.Current%2A>er udefinert.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Angi <xref:System.Collections.IEnumerator.Current%2A>til det første elementet i samlingen på nytt, kan du kalle <xref:System.Collections.IEnumerator.Reset%2A>etterfulgt av <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A>       En opplisting forblir gyldig så lenge samlingen forblir uendret. Hvis du endrer til samlingen, for eksempel å legge til, endre eller slette elementer, enumeratoren ugyldiggjøres, og virkemåten er ikke definert.       Enumeratoren har ikke eksklusiv tilgang til samlingen. lister opp i en samling er derfor gjelder ikke en sikker-prosedyre.  For å garantere tråd sikkerhetsnivået under opplisting, kan du låse samlingen under hele opplistingen.  Du må implementere din egen synkronisering for å tillate samlingen for å få tilgang til flere tråder for lesing og skriving.       Denne metoden er en O(1)-operasjon."
  example:
  - "The following code example implements the <xref:System.Collections.ReadOnlyCollectionBase> class.  \n  \n [!code-cpp[System.Collections.ReadOnlyCollectionBase#1](~/add/codesnippet/cpp/m-system.collections.rea_1.cpp)]\n [!code-cs[System.Collections.ReadOnlyCollectionBase#1](~/add/codesnippet/csharp/m-system.collections.rea_1.cs)]\n [!code-vb[System.Collections.ReadOnlyCollectionBase#1](~/add/codesnippet/visualbasic/m-system.collections.rea_1.vb)]"
  syntax:
    content: public virtual System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "En <xref:System.Collections.IEnumerator>for den <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> forekomsten.</xref:System.Collections.IEnumerator>"
  overload: System.Collections.ReadOnlyCollectionBase.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.ReadOnlyCollectionBase.InnerList
  id: InnerList
  parent: System.Collections.ReadOnlyCollectionBase
  langs:
  - csharp
  name: InnerList
  nameWithType: ReadOnlyCollectionBase.InnerList
  fullName: System.Collections.ReadOnlyCollectionBase.InnerList
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Henter listen over elementer i den <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> forekomsten."
  remarks: "Henting av verdien for denne egenskapen er en O(1)-operasjon."
  example:
  - "The following code example implements the <xref:System.Collections.ReadOnlyCollectionBase> class.  \n  \n [!code-cpp[System.Collections.ReadOnlyCollectionBase#1](~/add/codesnippet/cpp/p-system.collections.rea_0_1.cpp)]\n [!code-cs[System.Collections.ReadOnlyCollectionBase#1](~/add/codesnippet/csharp/p-system.collections.rea_0_1.cs)]\n [!code-vb[System.Collections.ReadOnlyCollectionBase#1](~/add/codesnippet/visualbasic/p-system.collections.rea_0_1.vb)]"
  syntax:
    content: protected System.Collections.ArrayList InnerList { get; }
    return:
      type: System.Collections.ArrayList
      description: "En <xref href=&quot;System.Collections.ArrayList&quot;> </xref> som representerer den <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> serverforekomsten seg selv."
  overload: System.Collections.ReadOnlyCollectionBase.InnerList*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Collections.ReadOnlyCollectionBase
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ReadOnlyCollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.ReadOnlyCollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Overfører hele <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> til en kompatibel endimensjonal <xref:System.Array>, med Start fra den angitte indeksen på Målmatrisen.</xref:System.Array>"
  remarks: "Den angitte matrisen må være kompatibelt.       Denne metoden bruker <xref:System.Array.Copy%2A?displayProperty=fullName>til elementer.</xref:System.Array.Copy%2A?displayProperty=fullName>       Denne metoden er en O (`n`) operasjonen, der `n` er <xref:System.Collections.ReadOnlyCollectionBase.Count%2A>.</xref:System.Collections.ReadOnlyCollectionBase.Count%2A>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Den endimensjonal <xref:System.Array>som er målet for elementene kopieres fra <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref>.</xref:System.Array> Den <xref:System.Array>må ha nullbasert indeksering.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Den nullbaserte indeksen i `array` som kopiering begynner."
  overload: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>er mindre enn null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>er flerdimensjonal.       - eller - antallet elementer i kilden <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> er større enn den tilgjengelige plassen fra <code>index</code> til slutten av målet <code>array</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Hva slags kilden <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> kan ikke endres automatisk til av målet <code> array </code>."
  platform:
  - net462
- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Collections.ReadOnlyCollectionBase
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ReadOnlyCollectionBase.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.ReadOnlyCollectionBase.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Henter en verdi som angir om tilgang til en <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> objektet synkroniseres (tråden trygt)."
  remarks: "En <xref:System.Collections.ReadOnlyCollectionBase>objektet er ikke synkronisert.</xref:System.Collections.ReadOnlyCollectionBase> Avledede klasser kan gi en synkroniserte versjon av den <xref:System.Collections.ReadOnlyCollectionBase>klasse ved hjelp av den <xref:System.Collections.ICollection.SyncRoot%2A>egenskapen.</xref:System.Collections.ICollection.SyncRoot%2A> </xref:System.Collections.ReadOnlyCollectionBase>       Lister opp i en samling vil si gjelder ikke sikker. Selv når en samling synkroniseres, kan andre tråder fortsatt endre samlingen, som fører til at enumeratoren til Iverksett et unntak. For å garantere tråd sikkerhetsnivået under opplisting, kan du låse samlingen under hele opplistingen eller opp unntak som er et resultat av endringer foretatt av andre tråder."
  example:
  - "The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.  \n  \n [!code-cpp[System.Collections.ReadOnlyCollectionBase#2](~/add/codesnippet/cpp/b4b4a174-5e26-4494-90e3-_1.cpp)]\n [!code-cs[System.Collections.ReadOnlyCollectionBase#2](~/add/codesnippet/csharp/b4b4a174-5e26-4494-90e3-_1.cs)]\n [!code-vb[System.Collections.ReadOnlyCollectionBase#2](~/add/codesnippet/visualbasic/b4b4a174-5e26-4494-90e3-_1.vb)]  \n  \n Retrieving the value of this property is an O(1) operation."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis tilgang til den <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> objektet synkroniseres (tråden trygt); ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standard <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Collections.ReadOnlyCollectionBase
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ReadOnlyCollectionBase.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.ReadOnlyCollectionBase.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Henter et objekt som kan brukes til å synkronisere tilgang til en <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> objektet."
  remarks: "Avledede klasser kan gi sin egen synkroniserte versjon av den <xref:System.Collections.ReadOnlyCollectionBase>klasse ved hjelp av den <xref:System.Collections.ICollection.SyncRoot%2A>egenskapen.</xref:System.Collections.ICollection.SyncRoot%2A> </xref:System.Collections.ReadOnlyCollectionBase> Synkronisering koden må utføre operasjoner på den <xref:System.Collections.ICollection.SyncRoot%2A>for den <xref:System.Collections.ReadOnlyCollectionBase>-objektet ikke direkte på den <xref:System.Collections.ReadOnlyCollectionBase>objektet.</xref:System.Collections.ReadOnlyCollectionBase> </xref:System.Collections.ReadOnlyCollectionBase> </xref:System.Collections.ICollection.SyncRoot%2A> Dette sikrer ordentlig med samlinger som er avledet fra andre objekter. Nærmere bestemt den opprettholder riktig synkronisering med andre tråder som kan være samtidig endring av <xref:System.Collections.ReadOnlyCollectionBase>objektet.</xref:System.Collections.ReadOnlyCollectionBase>       Lister opp i en samling vil si gjelder ikke sikker. Selv når en samling synkroniseres, kan andre tråder fortsatt endre samlingen, som fører til at enumeratoren til Iverksett et unntak. For å garantere tråd sikkerhetsnivået under opplisting, kan du låse samlingen under hele opplistingen eller opp unntak som er et resultat av endringer foretatt av andre tråder."
  example:
  - "The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.  \n  \n [!code-cpp[System.Collections.ReadOnlyCollectionBase#2](~/add/codesnippet/cpp/87c3d4a6-47b9-4735-a8a0-_1.cpp)]\n [!code-cs[System.Collections.ReadOnlyCollectionBase#2](~/add/codesnippet/csharp/87c3d4a6-47b9-4735-a8a0-_1.cs)]\n [!code-vb[System.Collections.ReadOnlyCollectionBase#2](~/add/codesnippet/visualbasic/87c3d4a6-47b9-4735-a8a0-_1.vb)]  \n  \n Retrieving the value of this property is an O(1) operation."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Et objekt som kan brukes til å synkronisere tilgang til den <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> objektet."
  overload: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Collections.ReadOnlyCollectionBase.#ctor
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: ReadOnlyCollectionBase()
  nameWithType: ReadOnlyCollectionBase.ReadOnlyCollectionBase()
  fullName: System.Collections.ReadOnlyCollectionBase.ReadOnlyCollectionBase()
- uid: System.Collections.ReadOnlyCollectionBase.Count
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: Count
  nameWithType: ReadOnlyCollectionBase.Count
  fullName: System.Collections.ReadOnlyCollectionBase.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ReadOnlyCollectionBase.GetEnumerator
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: GetEnumerator()
  nameWithType: ReadOnlyCollectionBase.GetEnumerator()
  fullName: System.Collections.ReadOnlyCollectionBase.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.ReadOnlyCollectionBase.InnerList
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: InnerList
  nameWithType: ReadOnlyCollectionBase.InnerList
  fullName: System.Collections.ReadOnlyCollectionBase.InnerList
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ReadOnlyCollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.ReadOnlyCollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ReadOnlyCollectionBase.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.ReadOnlyCollectionBase.System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ReadOnlyCollectionBase.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.ReadOnlyCollectionBase.System.Collections.ICollection.SyncRoot
- uid: System.Collections.ReadOnlyCollectionBase.#ctor*
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: ReadOnlyCollectionBase
  nameWithType: ReadOnlyCollectionBase.ReadOnlyCollectionBase
- uid: System.Collections.ReadOnlyCollectionBase.Count*
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: Count
  nameWithType: ReadOnlyCollectionBase.Count
- uid: System.Collections.ReadOnlyCollectionBase.GetEnumerator*
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: GetEnumerator
  nameWithType: ReadOnlyCollectionBase.GetEnumerator
- uid: System.Collections.ReadOnlyCollectionBase.InnerList*
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: InnerList
  nameWithType: ReadOnlyCollectionBase.InnerList
- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo*
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ReadOnlyCollectionBase.System.Collections.ICollection.CopyTo
- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized*
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ReadOnlyCollectionBase.System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot*
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ReadOnlyCollectionBase.System.Collections.ICollection.SyncRoot
