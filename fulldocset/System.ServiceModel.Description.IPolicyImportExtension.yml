### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.IPolicyImportExtension
  id: IPolicyImportExtension
  children:
  - System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  langs:
  - csharp
  name: IPolicyImportExtension
  nameWithType: IPolicyImportExtension
  fullName: System.ServiceModel.Description.IPolicyImportExtension
  type: Interface
  summary: "Definerer en metode for objekter som importere egendefinerte policydeklarasjon om bindinger."
  remarks: "Implementere grensesnittet IPolicyImportExtension Hvis du vil søke WSDL-informasjon som vises av et bestemt sluttpunkt for egendefinert policydeklarasjon om endpoint funksjoner eller krav. Vanligvis en policy importer søker etter en bestemt deklarasjon og enten setter inn et bindingselement, konfigurerer et bindingselement eller endrer kontrakten til støtter kravene for deklarasjonen.       I motsetning til motparten, <xref:System.ServiceModel.Description.IPolicyExportExtension>, IPolicyImportExtension krever ikke implementering av en <xref:System.ServiceModel.Channels.BindingElement>objekt; du kan laste den ved hjelp av klientkonfigurasjonsdelen vises i delen Eksempler eller programmatisk ved å legge den til den <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName>konstruktør.</xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> </xref:System.ServiceModel.Channels.BindingElement> </xref:System.ServiceModel.Description.IPolicyExportExtension>       [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]sender to objekter til <xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A>metoden, en <xref:System.ServiceModel.Description.MetadataImporter>og <xref:System.ServiceModel.Description.PolicyConversionContext>.</xref:System.ServiceModel.Description.PolicyConversionContext> </xref:System.ServiceModel.Description.MetadataImporter> </xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A> Vanligvis av <xref:System.ServiceModel.Description.PolicyConversionContext>objektet inneholder allerede policydeklarasjon for hvert bindingen omfang.</xref:System.ServiceModel.Description.PolicyConversionContext>       Implementering av IPolicyImportExtension utfører følgende: 1.  Finner egendefinert policy-deklarasjon som den er ansvarlig ved å kalle enten den <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, eller <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A>metoder, avhengig av omfanget.</xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>      2.  Fjerner policy-deklarasjon fra samlingen deklarasjon. Den <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>finner, returnerer, og fjerner deklarasjonen i ett trinn.</xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>      3.  Endre bindingen stakken eller kontrakten ved å legge til en obligatorisk egendefinert <xref:System.ServiceModel.Channels.BindingElement>til den <xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A>egenskapen eller ved å endre den <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName>egenskapen.</xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A> </xref:System.ServiceModel.Channels.BindingElement>       Trinn 2 er viktig. Etter at alle policy import er kalt, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] søker etter at det finnes policydeklarasjon som gjenstår. Hvis det finnes en [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] antar at policyen importen var mislykket og ikke importere den tilknyttede bindingen.      > [!IMPORTANT] > Skadelig metadata leverandør kan forsøker å sende feil utformet XML som en del av metadata i et forsøk på å utnytte importer en policy. Det anbefales at egendefinert policy import være robust til alle skjemaer i XML-filen som kan sendes til den.       Egendefinert <xref:System.ServiceModel.Description.MetadataImporter>implementeringer må implementere sine egne <xref:System.ServiceModel.Description.PolicyConversionContext>objektet til å trekke ut policydeklarasjon koblet til egendefinerte Metadataformat.</xref:System.ServiceModel.Description.PolicyConversionContext> </xref:System.ServiceModel.Description.MetadataImporter>       Hvis du vil eksportere og importere egendefinerte WSDL-elementer som ikke er policydeklarasjon, kan du se <xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=fullName>og <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName>.</xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> </xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=fullName>      > [!NOTE] > Du kan bruke egendefinerte policyen import- og eksportprogrammer med den [ServiceModel Metadata verktøyet verktøyet (Svcutil.exe)](~/add/includes/ajax-current-ext-md.md) ved hjelp av de samme konfigurasjon elementene i en konfigurasjonsfil og `/svcutilConfig:<configFile>` alternativet."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName> method to locate, return, and remove the assertion in one step.  \n  \n [!code-cs[CustomPolicySample#1](~/add/codesnippet/csharp/custompolicysample.client/policyimporter.cs#1)]\n [!code-vb[CustomPolicySample#1](~/add/codesnippet/visualbasic/custompolicysample.client/policyimporter.vb#1)]  \n  \n The following code example shows the client application configuration file to load the custom policy importer when the <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=fullName> is invoked.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and resolve metadata into description objects.  \n  \n [!code-vb[CustomPolicySample#10](~/add/codesnippet/visualbasic/custompolicysample.client/client.vb#10)]\n [!code-cs[CustomPolicySample#10](~/add/codesnippet/csharp/custompolicysample.client/client.cs#10)]"
  syntax:
    content: public interface IPolicyImportExtension
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  id: ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Description.IPolicyImportExtension
  langs:
  - csharp
  name: ImportPolicy(MetadataImporter,PolicyConversionContext)
  nameWithType: IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
  fullName: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Definerer en metode som kan importere egendefinerte policydeklarasjon og legge til elementer for implementering binding."
  remarks: "Implementer den `ImportPolicy` metode for å hente policydeklarasjon og utføre noen endring av importerte kontrakten eller bindingen for å støtte av deklarasjon. Importer en policy svarer vanligvis til å finne en egendefinert policy-deklarasjon ved konfigurasjon eller sette inn et bindingselement til bindingen blir importert.       [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]sender to objekter til metoden ImportPolicy et <xref:System.ServiceModel.Description.MetadataImporter>og <xref:System.ServiceModel.Description.PolicyConversionContext>.</xref:System.ServiceModel.Description.PolicyConversionContext> </xref:System.ServiceModel.Description.MetadataImporter> Vanligvis av <xref:System.ServiceModel.Description.PolicyConversionContext>objektet inneholder allerede policydeklarasjon for hvert bindingen omfang.</xref:System.ServiceModel.Description.PolicyConversionContext>       En <xref:System.ServiceModel.Description.IPolicyImportExtension>implementering utfører følgende: 1.</xref:System.ServiceModel.Description.IPolicyImportExtension>  Finner egendefinert policy-deklarasjon som den er ansvarlig ved å kalle enten den <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, eller <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A>metoder, avhengig av omfanget.</xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>      2.  Fjerner policy-deklarasjon fra samlingen deklarasjon. Den <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>finner, returnerer, og fjerner deklarasjonen i ett trinn.</xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>      3.  Endrer bindingen stakken eller kontrakten ved å legge til en obligatorisk egendefinert <xref:System.ServiceModel.Channels.BindingElement>til den <xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A>egenskapen eller ved å endre den <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName>egenskapen.</xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A> </xref:System.ServiceModel.Channels.BindingElement>       Trinn 2 er viktig. Etter at alle policy import er kalt, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] søker etter at det finnes policydeklarasjon som gjenstår. Hvis det finnes en [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] antar at policyen importen var mislykket og ikke importere den tilknyttede bindingen."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName> method to locate, return, and remove the assertion in one step.  \n  \n [!code-cs[CustomPolicySample#1](~/add/codesnippet/csharp/custompolicysample.client/policyimporter.cs#1)]\n [!code-vb[CustomPolicySample#1](~/add/codesnippet/visualbasic/custompolicysample.client/policyimporter.vb#1)]  \n  \n The following code example shows the client application configuration file to load the custom policy importer when the <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=fullName> is invoked.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and resolve metadata into description objects.  \n  \n [!code-vb[CustomPolicySample#10](~/add/codesnippet/visualbasic/custompolicysample.client/client.vb#10)]\n [!code-cs[CustomPolicySample#10](~/add/codesnippet/csharp/custompolicysample.client/client.cs#10)]"
  syntax:
    content: public void ImportPolicy (System.ServiceModel.Description.MetadataImporter importer, System.ServiceModel.Description.PolicyConversionContext context);
    parameters:
    - id: importer
      type: System.ServiceModel.Description.MetadataImporter
      description: "Den <xref href=&quot;System.ServiceModel.Description.MetadataImporter&quot;> </xref> objektet i bruk."
    - id: context
      type: System.ServiceModel.Description.PolicyConversionContext
      description: "Den <xref href=&quot;System.ServiceModel.Description.PolicyConversionContext&quot;> </xref> som inneholder både policydeklarasjon som kan importeres og samlinger av binding elementer som implementerer bindingen elementer kan legges til."
  overload: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Description.IPolicyImportExtension
  isExternal: false
  name: ImportPolicy(MetadataImporter,PolicyConversionContext)
  nameWithType: IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
  fullName: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
- uid: System.ServiceModel.Description.MetadataImporter
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataImporter
  nameWithType: MetadataImporter
  fullName: System.ServiceModel.Description.MetadataImporter
- uid: System.ServiceModel.Description.PolicyConversionContext
  parent: System.ServiceModel.Description
  isExternal: false
  name: PolicyConversionContext
  nameWithType: PolicyConversionContext
  fullName: System.ServiceModel.Description.PolicyConversionContext
- uid: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy*
  parent: System.ServiceModel.Description.IPolicyImportExtension
  isExternal: false
  name: ImportPolicy
  nameWithType: IPolicyImportExtension.ImportPolicy
