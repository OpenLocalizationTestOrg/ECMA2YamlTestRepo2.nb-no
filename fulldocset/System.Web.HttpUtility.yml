### YamlMime:ManagedReference
items:
- uid: System.Web.HttpUtility
  id: HttpUtility
  children:
  - System.Web.HttpUtility.#ctor
  - System.Web.HttpUtility.HtmlAttributeEncode(System.String)
  - System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)
  - System.Web.HttpUtility.HtmlDecode(System.String)
  - System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)
  - System.Web.HttpUtility.HtmlEncode(System.Object)
  - System.Web.HttpUtility.HtmlEncode(System.String)
  - System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)
  - System.Web.HttpUtility.JavaScriptStringEncode(System.String)
  - System.Web.HttpUtility.JavaScriptStringEncode(System.String,System.Boolean)
  - System.Web.HttpUtility.ParseQueryString(System.String)
  - System.Web.HttpUtility.ParseQueryString(System.String,System.Text.Encoding)
  - System.Web.HttpUtility.UrlDecode(System.String)
  - System.Web.HttpUtility.UrlDecode(System.Byte[],System.Text.Encoding)
  - System.Web.HttpUtility.UrlDecode(System.String,System.Text.Encoding)
  - System.Web.HttpUtility.UrlDecode(System.Byte[],System.Int32,System.Int32,System.Text.Encoding)
  - System.Web.HttpUtility.UrlDecodeToBytes(System.Byte[])
  - System.Web.HttpUtility.UrlDecodeToBytes(System.String)
  - System.Web.HttpUtility.UrlDecodeToBytes(System.String,System.Text.Encoding)
  - System.Web.HttpUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)
  - System.Web.HttpUtility.UrlEncode(System.Byte[])
  - System.Web.HttpUtility.UrlEncode(System.String)
  - System.Web.HttpUtility.UrlEncode(System.String,System.Text.Encoding)
  - System.Web.HttpUtility.UrlEncode(System.Byte[],System.Int32,System.Int32)
  - System.Web.HttpUtility.UrlEncodeToBytes(System.Byte[])
  - System.Web.HttpUtility.UrlEncodeToBytes(System.String)
  - System.Web.HttpUtility.UrlEncodeToBytes(System.String,System.Text.Encoding)
  - System.Web.HttpUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)
  - System.Web.HttpUtility.UrlEncodeUnicode(System.String)
  - System.Web.HttpUtility.UrlEncodeUnicodeToBytes(System.String)
  - System.Web.HttpUtility.UrlPathEncode(System.String)
  langs:
  - csharp
  name: HttpUtility
  nameWithType: HttpUtility
  fullName: System.Web.HttpUtility
  type: Class
  summary: "Inneholder metoder for koding og dekoding URL-adresser under behandling av webforespørsler. Denne klassen kan ikke arves."
  remarks: "Klassen HttpUtility er brukt internt av den <xref:System.Web.HttpServerUtility>klasse, der metoder og egenskaper som er vises gjennom indre ASP.NET <xref:System.Web.HttpContext.Server%2A>objektet.</xref:System.Web.HttpContext.Server%2A> </xref:System.Web.HttpServerUtility> I tillegg inneholder klassen HttpUtility koding og dekoding verktøyet metodene som ikke er tilgjengelig fra <xref:System.Web.HttpContext.Server%2A>.</xref:System.Web.HttpContext.Server%2A>       Hvis du vil kode eller dekode verdier utenfor et webprogram, kan du bruke <xref:System.Net.WebUtility>klasse.</xref:System.Net.WebUtility>"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.HttpUtility.UrlEncode%2A>, <xref:System.Web.HttpUtility.UrlDecode%2A> and <xref:System.Web.HttpUtility.ParseQueryString%2A> methods of the HttpUtility class.  \n  \n [!code-cs[HttpUtilityExample#1](~/add/codesnippet/csharp/t-system.web.httputility_1.aspx)]\n [!code-vb[HttpUtilityExample#1](~/add/codesnippet/visualbasic/t-system.web.httputility_1.aspx)]"
  syntax:
    content: public sealed class HttpUtility
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.HttpUtility.#ctor
  id: '#ctor'
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: HttpUtility()
  nameWithType: HttpUtility.HttpUtility()
  fullName: System.Web.HttpUtility.HttpUtility()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.HttpUtility&quot;> </xref> klasse."
  remarks: "Den <xref:System.Web.HttpUtility>klassen viser metodene for koding og dekoding streng basert URL-adresser, URL-adressen tokener og baner.</xref:System.Web.HttpUtility> <xref:System.Web.HttpUtility>Er brukt internt av <xref:System.Web.HttpServerUtility>klasse.</xref:System.Web.HttpServerUtility> </xref:System.Web.HttpUtility>"
  syntax:
    content: public HttpUtility ();
    parameters: []
  overload: System.Web.HttpUtility.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.HtmlAttributeEncode(System.String)
  id: HtmlAttributeEncode(System.String)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: HtmlAttributeEncode(String)
  nameWithType: HttpUtility.HtmlAttributeEncode(String)
  fullName: System.Web.HttpUtility.HtmlAttributeEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Minimalt konverterer til en HTML-kodet streng."
  remarks: "Metoden HtmlAttributeEncode koder tegn som er nødvendig for innsetting i en HTML-attributtverdi.       Strengresultat av metoden HtmlAttributeEncode bør brukes bare for attributter med doble anførselstegn. Sikkerhetsproblemer som kan oppstå når du bruker metoden HtmlAttributeEncode med enkle anførselstegn attributter."
  syntax:
    content: public static string HtmlAttributeEncode (string s);
    parameters:
    - id: s
      type: System.String
      description: "Strengen som kode."
    return:
      type: System.String
      description: "En kodet streng."
  overload: System.Web.HttpUtility.HtmlAttributeEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)
  id: HtmlAttributeEncode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: HtmlAttributeEncode(String,TextWriter)
  nameWithType: HttpUtility.HtmlAttributeEncode(String,TextWriter)
  fullName: System.Web.HttpUtility.HtmlAttributeEncode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Konverterer en streng til en HTML-kodet streng minimalt og sender kodet streng til en <xref:System.IO.TextWriter>utdata dataflyten.</xref:System.IO.TextWriter>"
  remarks: "Metoden HtmlAttributeEncode konverterer bare anførselstegn (&quot;) &-tegn (&), og venstre vinkelen hakeparenteser (<) to equivalent character entities. to=&quot;&quot; equivalent=&quot;&quot; character=&quot;&quot;></) to equivalent character entities.> Det er betydelig raskere enn den <xref:System.Web.HttpUtility.HtmlEncode%2A>metoden.</xref:System.Web.HttpUtility.HtmlEncode%2A>       Strengresultat av metoden HtmlAttributeEncode bør brukes bare for attributter med doble anførselstegn. Sikkerhetsproblemer som kan oppstå når du bruker metoden HtmlAttributeEncode med enkle anførselstegn attributter."
  syntax:
    content: public static void HtmlAttributeEncode (string s, System.IO.TextWriter output);
    parameters:
    - id: s
      type: System.String
      description: "Strengen som skal kodes"
    - id: output
      type: System.IO.TextWriter
      description: "En <xref:System.IO.TextWriter>utdata dataflyten.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpUtility.HtmlAttributeEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.HtmlDecode(System.String)
  id: HtmlDecode(System.String)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: HtmlDecode(String)
  nameWithType: HttpUtility.HtmlDecode(String)
  fullName: System.Web.HttpUtility.HtmlDecode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Konverterer en streng som er HTML-kodet for HTTP-overføring til en dekodede streng."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding. For example, when embedded in a block of text, the characters \\< and > are encoded as &lt; and &gt; for HTTP transmission.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  example:
  - "The following code example demonstrates the <xref:System.Web.HttpUtility.HtmlEncode%2A> and HtmlDecode methods of the <xref:System.Web.HttpUtility> class. The input string is encoded using the <xref:System.Web.HttpUtility.HtmlEncode%2A> method. The encoded string obtained is then decoded using the HtmlDecode method.  \n  \n [!code-vb[HttpUtility_HtmlDecode#1](~/add/codesnippet/visualbasic/m-system.web.httputility_2_1.vb)]\n [!code-cs[HttpUtility_HtmlDecode#1](~/add/codesnippet/csharp/m-system.web.httputility_2_1.cs)]"
  syntax:
    content: public static string HtmlDecode (string s);
    parameters:
    - id: s
      type: System.String
      description: "Strengen som dekoding."
    return:
      type: System.String
      description: "En dekodede streng."
  overload: System.Web.HttpUtility.HtmlDecode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)
  id: HtmlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: HtmlDecode(String,TextWriter)
  nameWithType: HttpUtility.HtmlDecode(String,TextWriter)
  fullName: System.Web.HttpUtility.HtmlDecode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Konverterer en streng som er HTML-kodet til en dekodede streng, og sender dekodede strengen til en <xref:System.IO.TextWriter>utdata dataflyten.</xref:System.IO.TextWriter>"
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding. For example, when embedded in a block of text, the characters \\< and > are encoded as &lt; and &gt; for HTTP transmission.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static void HtmlDecode (string s, System.IO.TextWriter output);
    parameters:
    - id: s
      type: System.String
      description: "Strengen som dekoding."
    - id: output
      type: System.IO.TextWriter
      description: "En <xref:System.IO.TextWriter>dataflyten for utdata.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpUtility.HtmlDecode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.HtmlEncode(System.Object)
  id: HtmlEncode(System.Object)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: HtmlEncode(Object)
  nameWithType: HttpUtility.HtmlEncode(Object)
  fullName: System.Web.HttpUtility.HtmlEncode(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Konverterer et objekts strengrepresentasjon til en HTML-kodet streng, og returnerer kodet streng."
  remarks: "Hvis du vil kode eller dekode verdier utenfor et webprogram, kan du bruke <xref:System.Net.WebUtility>klasse.</xref:System.Net.WebUtility>"
  syntax:
    content: public static string HtmlEncode (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Et objekt."
    return:
      type: System.String
      description: "En kodet streng."
  overload: System.Web.HttpUtility.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.HtmlEncode(System.String)
  id: HtmlEncode(System.String)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: HtmlEncode(String)
  nameWithType: HttpUtility.HtmlEncode(String)
  fullName: System.Web.HttpUtility.HtmlEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Konverterer en streng til en HTML-kodet streng."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding. For example, when embedded in a block of text, the characters \\< and > are encoded as &lt; and &gt; for HTTP transmission.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  example:
  - "The following code example demonstrates the HtmlEncode and <xref:System.Web.HttpUtility.HtmlDecode%2A> methods of the <xref:System.Web.HttpUtility> class. The input string is encoded using the HtmlEncode method. The encoded string obtained is then decoded using the <xref:System.Web.HttpUtility.HtmlDecode%2A> method.  \n  \n [!code-vb[HttpUtility_HtmlDecode#1](~/add/codesnippet/visualbasic/m-system.web.httputility_0_1.vb)]\n [!code-cs[HttpUtility_HtmlDecode#1](~/add/codesnippet/csharp/m-system.web.httputility_0_1.cs)]"
  syntax:
    content: public static string HtmlEncode (string s);
    parameters:
    - id: s
      type: System.String
      description: "Strengen som kode."
    return:
      type: System.String
      description: "En kodet streng."
  overload: System.Web.HttpUtility.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)
  id: HtmlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: HtmlEncode(String,TextWriter)
  nameWithType: HttpUtility.HtmlEncode(String,TextWriter)
  fullName: System.Web.HttpUtility.HtmlEncode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Konverterer en streng til en HTML-kodet streng, og returnerer resultatet som en <xref:System.IO.TextWriter>dataflyten for utdata.</xref:System.IO.TextWriter>"
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding. For example, when embedded in a block of text, the characters \\< and >, are encoded as &lt; and &gt; for HTTP transmission.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static void HtmlEncode (string s, System.IO.TextWriter output);
    parameters:
    - id: s
      type: System.String
      description: "Strengen som skal kodes"
    - id: output
      type: System.IO.TextWriter
      description: "En <xref:System.IO.TextWriter>utdata dataflyten.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpUtility.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.JavaScriptStringEncode(System.String)
  id: JavaScriptStringEncode(System.String)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: JavaScriptStringEncode(String)
  nameWithType: HttpUtility.JavaScriptStringEncode(String)
  fullName: System.Web.HttpUtility.JavaScriptStringEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Koder en streng."
  syntax:
    content: public static string JavaScriptStringEncode (string value);
    parameters:
    - id: value
      type: System.String
      description: "En tekststreng til kode."
    return:
      type: System.String
      description: "En kodet streng."
  overload: System.Web.HttpUtility.JavaScriptStringEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.JavaScriptStringEncode(System.String,System.Boolean)
  id: JavaScriptStringEncode(System.String,System.Boolean)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: JavaScriptStringEncode(String,Boolean)
  nameWithType: HttpUtility.JavaScriptStringEncode(String,Boolean)
  fullName: System.Web.HttpUtility.JavaScriptStringEncode(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Koder en streng."
  syntax:
    content: public static string JavaScriptStringEncode (string value, bool addDoubleQuotes);
    parameters:
    - id: value
      type: System.String
      description: "En tekststreng til kode."
    - id: addDoubleQuotes
      type: System.Boolean
      description: "En verdi som angir om det skal være med doble anførselstegn rundt kodet streng."
    return:
      type: System.String
      description: "En kodet streng."
  overload: System.Web.HttpUtility.JavaScriptStringEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.ParseQueryString(System.String)
  id: ParseQueryString(System.String)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: ParseQueryString(String)
  nameWithType: HttpUtility.ParseQueryString(String)
  fullName: System.Web.HttpUtility.ParseQueryString(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Analyserer en spørringsstreng til en <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> ved hjelp av <xref:System.Text.Encoding.UTF8*>koding.</xref:System.Text.Encoding.UTF8*>"
  remarks: "Metoden ParseQueryString bruker <xref:System.Text.Encoding.UTF8%2A>format for å analysere spørringsstrengen i det returnerte <xref:System.Collections.Specialized.NameValueCollection>, URL-kodede tegn dekodes og flere forekomster av den samme parameteren i spørringsstrengen er oppført som en enkelt oppføring med et komma som skiller hver verdi.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Text.Encoding.UTF8%2A>      > [!IMPORTANT] > For ParseQueryString metoden bruker spørringsstrenger som kan inneholde brukerinndata, som er en potensiell sikkerhetsrisiko. Som standard validere ASP.NET Web pages at brukerinndata ikke inneholder skript eller HTML-elementer. Hvis du vil ha mer informasjon, se [skriptet utnytter oversikt over](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the ParseQueryString method. Multiple occurrences of the same query string variable are consolidated in one entry of the returned <xref:System.Collections.Specialized.NameValueCollection>.  \n  \n [!code-cs[HttpUtility_ParseQueryString#1](~/add/codesnippet/csharp/m-system.web.httputility_1_1.aspx)]\n [!code-vb[HttpUtility_ParseQueryString#1](~/add/codesnippet/visualbasic/m-system.web.httputility_1_1.aspx)]"
  syntax:
    content: public static System.Collections.Specialized.NameValueCollection ParseQueryString (string query);
    parameters:
    - id: query
      type: System.String
      description: "Spørringsstrengen å analysere."
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "En <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> av spørringsparametere og verdier."
  overload: System.Web.HttpUtility.ParseQueryString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>query</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpUtility.ParseQueryString(System.String,System.Text.Encoding)
  id: ParseQueryString(System.String,System.Text.Encoding)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: ParseQueryString(String,Encoding)
  nameWithType: HttpUtility.ParseQueryString(String,Encoding)
  fullName: System.Web.HttpUtility.ParseQueryString(String,Encoding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Analyserer en spørringsstreng til en <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> ved hjelp av den angitte <xref:System.Text.Encoding>.</xref:System.Text.Encoding>"
  remarks: "I det returnerte <xref:System.Collections.Specialized.NameValueCollection>, URL-kodede tegn dekodes og flere forekomster av den samme parameteren i spørringsstrengen er oppført som en enkelt oppføring med et komma som skiller hver verdi.</xref:System.Collections.Specialized.NameValueCollection>      > [!IMPORTANT] > For ParseQueryString metoden bruker spørringsstrenger som kan inneholde brukerinndata, som er en potensiell sikkerhetsrisiko. Som standard validere ASP.NET Web pages at brukerinndata ikke inneholder skript eller HTML-elementer. Hvis du vil ha mer informasjon, se [skriptet utnytter oversikt over](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.Collections.Specialized.NameValueCollection ParseQueryString (string query, System.Text.Encoding encoding);
    parameters:
    - id: query
      type: System.String
      description: "Spørringsstrengen å analysere."
    - id: encoding
      type: System.Text.Encoding
      description: "Den <xref:System.Text.Encoding>skal brukes.</xref:System.Text.Encoding>"
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "En <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> av spørringsparametere og verdier."
  overload: System.Web.HttpUtility.ParseQueryString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>query</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>encoding</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlDecode(System.String)
  id: UrlDecode(System.String)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlDecode(String)
  nameWithType: HttpUtility.UrlDecode(String)
  fullName: System.Web.HttpUtility.UrlDecode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Konverterer en streng som er kodet for overføring i en URL-adresse til en dekodede streng."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when embedded in a block of text to be transmitted in a URL, the characters \\< and > are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static string UrlDecode (string str);
    parameters:
    - id: str
      type: System.String
      description: "Strengen som dekoding."
    return:
      type: System.String
      description: "En dekodede streng."
  overload: System.Web.HttpUtility.UrlDecode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlDecode(System.Byte[],System.Text.Encoding)
  id: UrlDecode(System.Byte[],System.Text.Encoding)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlDecode(Byte[],Encoding)
  nameWithType: HttpUtility.UrlDecode(Byte[],Encoding)
  fullName: System.Web.HttpUtility.UrlDecode(Byte[],Encoding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Konverterer en URL-kodede bytematrise til en dekodede streng med det angitte dekoding objektet."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when embedded in a block of text to be transmitted in a URL, the characters \\< and > are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static string UrlDecode (byte[] bytes, System.Text.Encoding e);
    parameters:
    - id: bytes
      type: System.Byte[]
      description: "Bytematrise til dekoding."
    - id: e
      type: System.Text.Encoding
      description: "Den <xref:System.Text.Encoding>som angir dekoding skjemaet.</xref:System.Text.Encoding>"
    return:
      type: System.String
      description: "En dekodede streng."
  overload: System.Web.HttpUtility.UrlDecode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlDecode(System.String,System.Text.Encoding)
  id: UrlDecode(System.String,System.Text.Encoding)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlDecode(String,Encoding)
  nameWithType: HttpUtility.UrlDecode(String,Encoding)
  fullName: System.Web.HttpUtility.UrlDecode(String,Encoding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Konverterer en URL-kodet streng til en dekodede streng, ved hjelp av angitt koding objektet."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when embedded in a block of text to be transmitted in a URL, the characters \\< and > are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static string UrlDecode (string str, System.Text.Encoding e);
    parameters:
    - id: str
      type: System.String
      description: "Strengen som dekoding."
    - id: e
      type: System.Text.Encoding
      description: "Den <xref:System.Text.Encoding>som angir dekoding skjemaet.</xref:System.Text.Encoding>"
    return:
      type: System.String
      description: "En dekodede streng."
  overload: System.Web.HttpUtility.UrlDecode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlDecode(System.Byte[],System.Int32,System.Int32,System.Text.Encoding)
  id: UrlDecode(System.Byte[],System.Int32,System.Int32,System.Text.Encoding)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlDecode(Byte[],Int32,Int32,Encoding)
  nameWithType: HttpUtility.UrlDecode(Byte[],Int32,Int32,Encoding)
  fullName: System.Web.HttpUtility.UrlDecode(Byte[],Int32,Int32,Encoding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Konverterer en URL-kodede bytematrise til en dekodede streng ved hjelp av angitt koding objektet, med Start fra den angitte posisjonen i matrisen og fortsetter for det angitte antallet byte."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when embedded in a block of text to be transmitted in a URL the characters \\< and > are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static string UrlDecode (byte[] bytes, int offset, int count, System.Text.Encoding e);
    parameters:
    - id: bytes
      type: System.Byte[]
      description: "Bytematrise til dekoding."
    - id: offset
      type: System.Int32
      description: "Plasseringen i byte for å starte dekoding."
    - id: count
      type: System.Int32
      description: "Antall byte ikke dekode."
    - id: e
      type: System.Text.Encoding
      description: "Den <xref:System.Text.Encoding>objekt som angir dekoding skjemaet.</xref:System.Text.Encoding>"
    return:
      type: System.String
      description: "En dekodede streng."
  overload: System.Web.HttpUtility.UrlDecode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>bytes</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, but <code>count</code> does not equal <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref> or greater than the length of the <code>bytes</code> array.  \n  \n \\- or -  \n  \n <code>count</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref>, or <code>count</code> + <code>offset</code> is greater than the length of the <code>bytes</code> array."
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlDecodeToBytes(System.Byte[])
  id: UrlDecodeToBytes(System.Byte[])
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlDecodeToBytes(Byte[])
  nameWithType: HttpUtility.UrlDecodeToBytes(Byte[])
  fullName: System.Web.HttpUtility.UrlDecodeToBytes(Byte[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Konverterer en URL-kodede bytematrise til dekodede bytematrise."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when embedded in a block of text to be transmitted in a URL, the characters \\< and > are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static byte[] UrlDecodeToBytes (byte[] bytes);
    parameters:
    - id: bytes
      type: System.Byte[]
      description: "Bytematrise til dekoding."
    return:
      type: System.Byte[]
      description: "En dekodede bytematrise."
  overload: System.Web.HttpUtility.UrlDecodeToBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlDecodeToBytes(System.String)
  id: UrlDecodeToBytes(System.String)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlDecodeToBytes(String)
  nameWithType: HttpUtility.UrlDecodeToBytes(String)
  fullName: System.Web.HttpUtility.UrlDecodeToBytes(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Konverterer en URL-kodet streng til en dekodede bytematrise."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when embedded in a block of text to be transmitted in a URL, the characters \\< and > are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static byte[] UrlDecodeToBytes (string str);
    parameters:
    - id: str
      type: System.String
      description: "Strengen som dekoding."
    return:
      type: System.Byte[]
      description: "En dekodede bytematrise."
  overload: System.Web.HttpUtility.UrlDecodeToBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlDecodeToBytes(System.String,System.Text.Encoding)
  id: UrlDecodeToBytes(System.String,System.Text.Encoding)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlDecodeToBytes(String,Encoding)
  nameWithType: HttpUtility.UrlDecodeToBytes(String,Encoding)
  fullName: System.Web.HttpUtility.UrlDecodeToBytes(String,Encoding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Konverterer en URL-kodet streng til en dekodede bytematrise med det angitte dekoding objektet."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when embedded in a block of text to be transmitted in a URL, the characters \\< and > are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static byte[] UrlDecodeToBytes (string str, System.Text.Encoding e);
    parameters:
    - id: str
      type: System.String
      description: "Strengen som dekoding."
    - id: e
      type: System.Text.Encoding
      description: "Den <xref:System.Text.Encoding>objekt som angir dekoding skjemaet.</xref:System.Text.Encoding>"
    return:
      type: System.Byte[]
      description: "En dekodede bytematrise."
  overload: System.Web.HttpUtility.UrlDecodeToBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)
  id: UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlDecodeToBytes(Byte[],Int32,Int32)
  nameWithType: HttpUtility.UrlDecodeToBytes(Byte[],Int32,Int32)
  fullName: System.Web.HttpUtility.UrlDecodeToBytes(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Konverterer en URL-kodede bytematrise til en dekodede bytematrise som starter på den angitte posisjonen i matrisen og fortsetter for det angitte antallet byte."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when embedded in a block of text to be transmitted in a URL, the characters \\< and > are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static byte[] UrlDecodeToBytes (byte[] bytes, int offset, int count);
    parameters:
    - id: bytes
      type: System.Byte[]
      description: "Bytematrise til dekoding."
    - id: offset
      type: System.Int32
      description: "Plasseringen i bytematrise vil starte dekoding."
    - id: count
      type: System.Int32
      description: "Antall byte ikke dekode."
    return:
      type: System.Byte[]
      description: "En dekodede bytematrise."
  overload: System.Web.HttpUtility.UrlDecodeToBytes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>bytes</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, but <code>count</code> does not equal <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref> or greater than the length of the <code>bytes</code> array.  \n  \n \\- or -  \n  \n <code>count</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref>, or <code>count</code> + <code>offset</code> is greater than the length of the <code>bytes</code> array."
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlEncode(System.Byte[])
  id: UrlEncode(System.Byte[])
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlEncode(Byte[])
  nameWithType: HttpUtility.UrlEncode(Byte[])
  fullName: System.Web.HttpUtility.UrlEncode(Byte[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Konverterer en bytematrise til en URL-kodet streng."
  remarks: "The UrlEncode method can be used to encode the entire URL, including query-string values. If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when the characters \\< and > are embedded in a block of text to be transmitted in a URL, they are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static string UrlEncode (byte[] bytes);
    parameters:
    - id: bytes
      type: System.Byte[]
      description: "Bytematrise til kode."
    return:
      type: System.String
      description: "En kodet streng."
  overload: System.Web.HttpUtility.UrlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlEncode(System.String)
  id: UrlEncode(System.String)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlEncode(String)
  nameWithType: HttpUtility.UrlEncode(String)
  fullName: System.Web.HttpUtility.UrlEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Koder en URL-streng."
  remarks: "The UrlEncode method can be used to encode the entire URL, including query-string values. If characters such as blanks and punctuation are passed in an HTTP stream without encoding, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when the characters \\< and > are embedded in a block of text to be transmitted in a URL, they are encoded as %3c and %3e.  \n  \n You can encode a URL using with the UrlEncode method or the <xref:System.Web.HttpUtility.UrlPathEncode%2A> method. However, the methods return different results. The UrlEncode method converts each space character to a plus character (+). The <xref:System.Web.HttpUtility.UrlPathEncode%2A> method converts each space character into the string \"%20\", which represents a space in hexadecimal notation. Use the <xref:System.Web.HttpUtility.UrlPathEncode%2A> method when you encode the path portion of a URL in order to guarantee a consistent decoded URL, regardless of which platform or browser performs the decoding.  \n  \n The UrlEncode method uses UTF-8 encoding by default. Therefore, using the UrlEncode method provides the same results as using the <xref:System.Web.HttpUtility.UrlEncode%2A> method and specifying <xref:System.Text.Encoding.UTF8%2A> as the second parameter.  \n  \n <xref:System.Web.HttpServerUtility.UrlEncode%2A> is a convenient way to access the UrlEncode method at run time from an ASP.NET application. Internally, <xref:System.Web.HttpServerUtility.UrlEncode%2A> uses the UrlEncode method to encode strings.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static string UrlEncode (string str);
    parameters:
    - id: str
      type: System.String
      description: "Teksten som kode."
    return:
      type: System.String
      description: "En kodet streng."
  overload: System.Web.HttpUtility.UrlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlEncode(System.String,System.Text.Encoding)
  id: UrlEncode(System.String,System.Text.Encoding)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlEncode(String,Encoding)
  nameWithType: HttpUtility.UrlEncode(String,Encoding)
  fullName: System.Web.HttpUtility.UrlEncode(String,Encoding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Koder en URL-strengen ved hjelp av angitt koding objektet."
  remarks: "This method can be used to encode the entire URL, including query-string values. If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when the characters \\< and > are embedded in a block of text to be transmitted in a URL, they are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static string UrlEncode (string str, System.Text.Encoding e);
    parameters:
    - id: str
      type: System.String
      description: "Teksten som kode."
    - id: e
      type: System.Text.Encoding
      description: "Den <xref:System.Text.Encoding>objekt som angir kodingen skjemaet.</xref:System.Text.Encoding>"
    return:
      type: System.String
      description: "En kodet streng."
  overload: System.Web.HttpUtility.UrlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlEncode(System.Byte[],System.Int32,System.Int32)
  id: UrlEncode(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlEncode(Byte[],Int32,Int32)
  nameWithType: HttpUtility.UrlEncode(Byte[],Int32,Int32)
  fullName: System.Web.HttpUtility.UrlEncode(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Konverterer en bytematrise til en URL-kodet streng, med Start fra den angitte posisjonen i matrisen og fortsetter for det angitte antallet byte."
  remarks: "The <xref:System.Web.HttpUtility.UrlEncode%28System.String%29> method can be used to encode the entire URL, including query-string values. If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when the characters \\< and > are embedded in a block of text to be transmitted in a URL, they are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static string UrlEncode (byte[] bytes, int offset, int count);
    parameters:
    - id: bytes
      type: System.Byte[]
      description: "Bytematrise til kode."
    - id: offset
      type: System.Int32
      description: "Plasseringen i bytematrise vil starte koding."
    - id: count
      type: System.Int32
      description: "Antall byte som kode."
    return:
      type: System.String
      description: "En kodet streng."
  overload: System.Web.HttpUtility.UrlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlEncodeToBytes(System.Byte[])
  id: UrlEncodeToBytes(System.Byte[])
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlEncodeToBytes(Byte[])
  nameWithType: HttpUtility.UrlEncodeToBytes(Byte[])
  fullName: System.Web.HttpUtility.UrlEncodeToBytes(Byte[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Konverterer en bytematrise til en URL-kodede bytematrise."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when embedded in a block of text to be transmitted in a URL, the characters \\< and > are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static byte[] UrlEncodeToBytes (byte[] bytes);
    parameters:
    - id: bytes
      type: System.Byte[]
      description: "Bytematrise til kode."
    return:
      type: System.Byte[]
      description: "En kodet bytematrise."
  overload: System.Web.HttpUtility.UrlEncodeToBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlEncodeToBytes(System.String)
  id: UrlEncodeToBytes(System.String)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlEncodeToBytes(String)
  nameWithType: HttpUtility.UrlEncodeToBytes(String)
  fullName: System.Web.HttpUtility.UrlEncodeToBytes(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Konverterer en streng i en URL-kodede bytematrise."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when embedded in a block of text to be transmitted in a URL, the characters \\< and > are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static byte[] UrlEncodeToBytes (string str);
    parameters:
    - id: str
      type: System.String
      description: "Strengen som kode."
    return:
      type: System.Byte[]
      description: "En kodet bytematrise."
  overload: System.Web.HttpUtility.UrlEncodeToBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlEncodeToBytes(System.String,System.Text.Encoding)
  id: UrlEncodeToBytes(System.String,System.Text.Encoding)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlEncodeToBytes(String,Encoding)
  nameWithType: HttpUtility.UrlEncodeToBytes(String,Encoding)
  fullName: System.Web.HttpUtility.UrlEncodeToBytes(String,Encoding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Konverterer en streng i en URL-kodede bytematrise ved hjelp av angitt koding objektet."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when embedded in a block of text to be transmitted in a URL, the characters \\< and > are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static byte[] UrlEncodeToBytes (string str, System.Text.Encoding e);
    parameters:
    - id: str
      type: System.String
      description: "Strengen som skal kodes"
    - id: e
      type: System.Text.Encoding
      description: "Den <xref:System.Text.Encoding>som angir kodingen skjemaet.</xref:System.Text.Encoding>"
    return:
      type: System.Byte[]
      description: "En kodet bytematrise."
  overload: System.Web.HttpUtility.UrlEncodeToBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)
  id: UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlEncodeToBytes(Byte[],Int32,Int32)
  nameWithType: HttpUtility.UrlEncodeToBytes(Byte[],Int32,Int32)
  fullName: System.Web.HttpUtility.UrlEncodeToBytes(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Konverterer en bytematrise til en URL-kodede bytematrise som starter på den angitte posisjonen i matrisen og fortsetter for det angitte antallet byte."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when embedded in a block of text to be transmitted in a URL, the characters \\< and > are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static byte[] UrlEncodeToBytes (byte[] bytes, int offset, int count);
    parameters:
    - id: bytes
      type: System.Byte[]
      description: "Bytematrise til kode."
    - id: offset
      type: System.Int32
      description: "Plasseringen i bytematrise vil starte koding."
    - id: count
      type: System.Int32
      description: "Antall byte som kode."
    return:
      type: System.Byte[]
      description: "En kodet bytematrise."
  overload: System.Web.HttpUtility.UrlEncodeToBytes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>bytes</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, but <code>count</code> does not equal <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref> or greater than the length of the <code>bytes</code> array.  \n  \n \\- or -  \n  \n <code>count</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref>, or <code>count</code> + <code>offset</code> is greater than the length of the <code>bytes</code> array."
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlEncodeUnicode(System.String)
  id: UrlEncodeUnicode(System.String)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlEncodeUnicode(String)
  nameWithType: HttpUtility.UrlEncodeUnicode(String)
  fullName: System.Web.HttpUtility.UrlEncodeUnicode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Konverterer en streng i en Unicode-streng."
  remarks: "Hvis tegn, for eksempel tomme og tegnsetting sendes i en HTTP-dataflyten, kan de feiltolkes på mottakersiden. URL-koding konverterer tegn som ikke er gyldig i en URL-adresse til tegn enheten mest; URL-dekoding opphever kodingen. For eksempel når innebygd i en blokk med tekst som skal sendes i en URL-adresse, tegnene \\< og > kodes som %3 c og %&3;e."
  syntax:
    content: public static string UrlEncodeUnicode (string str);
    parameters:
    - id: str
      type: System.String
      description: "Strengen som skal endres."
    return:
      type: System.String
      description: "En Unicode-streng i %<code> UnicodeValue </code> notasjon."
  overload: System.Web.HttpUtility.UrlEncodeUnicode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlEncodeUnicodeToBytes(System.String)
  id: UrlEncodeUnicodeToBytes(System.String)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlEncodeUnicodeToBytes(String)
  nameWithType: HttpUtility.UrlEncodeUnicodeToBytes(String)
  fullName: System.Web.HttpUtility.UrlEncodeUnicodeToBytes(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Konverterer en Unicode-streng til en bytematrise."
  remarks: "Hvis tegn, for eksempel tomme og tegnsetting sendes i en HTTP-dataflyten, kan de feiltolkes på mottakersiden. URL-koding konverterer tegn som ikke er gyldig i en URL-adresse til tegn enheten mest; URL-dekoding opphever kodingen. For eksempel når innebygd i en blokk med tekst som skal sendes i en URL-adresse, tegnene \\< og > kodes som %3 c og %&3;e."
  syntax:
    content: public static byte[] UrlEncodeUnicodeToBytes (string str);
    parameters:
    - id: str
      type: System.String
      description: "Strengen som skal endres."
    return:
      type: System.Byte[]
      description: "En bytematrise."
  overload: System.Web.HttpUtility.UrlEncodeUnicodeToBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlPathEncode(System.String)
  id: UrlPathEncode(System.String)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlPathEncode(String)
  nameWithType: HttpUtility.UrlPathEncode(String)
  fullName: System.Web.HttpUtility.UrlPathEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ikke bruk; bare beregnet for nettleseren kompatibilitetsnivå. Bruk <xref:System.Web.HttpUtility.UrlEncode*>.</xref:System.Web.HttpUtility.UrlEncode*>"
  syntax:
    content: public static string UrlPathEncode (string str);
    parameters:
    - id: str
      type: System.String
      description: "Teksten som kode."
    return:
      type: System.String
      description: "Kodet teksten."
  overload: System.Web.HttpUtility.UrlPathEncode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.HttpUtility.#ctor
  parent: System.Web.HttpUtility
  isExternal: false
  name: HttpUtility()
  nameWithType: HttpUtility.HttpUtility()
  fullName: System.Web.HttpUtility.HttpUtility()
- uid: System.Web.HttpUtility.HtmlAttributeEncode(System.String)
  parent: System.Web.HttpUtility
  isExternal: false
  name: HtmlAttributeEncode(String)
  nameWithType: HttpUtility.HtmlAttributeEncode(String)
  fullName: System.Web.HttpUtility.HtmlAttributeEncode(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpUtility
  isExternal: false
  name: HtmlAttributeEncode(String,TextWriter)
  nameWithType: HttpUtility.HtmlAttributeEncode(String,TextWriter)
  fullName: System.Web.HttpUtility.HtmlAttributeEncode(String,TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.HttpUtility.HtmlDecode(System.String)
  parent: System.Web.HttpUtility
  isExternal: false
  name: HtmlDecode(String)
  nameWithType: HttpUtility.HtmlDecode(String)
  fullName: System.Web.HttpUtility.HtmlDecode(String)
- uid: System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpUtility
  isExternal: false
  name: HtmlDecode(String,TextWriter)
  nameWithType: HttpUtility.HtmlDecode(String,TextWriter)
  fullName: System.Web.HttpUtility.HtmlDecode(String,TextWriter)
- uid: System.Web.HttpUtility.HtmlEncode(System.Object)
  parent: System.Web.HttpUtility
  isExternal: false
  name: HtmlEncode(Object)
  nameWithType: HttpUtility.HtmlEncode(Object)
  fullName: System.Web.HttpUtility.HtmlEncode(Object)
- uid: System.Web.HttpUtility.HtmlEncode(System.String)
  parent: System.Web.HttpUtility
  isExternal: false
  name: HtmlEncode(String)
  nameWithType: HttpUtility.HtmlEncode(String)
  fullName: System.Web.HttpUtility.HtmlEncode(String)
- uid: System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpUtility
  isExternal: false
  name: HtmlEncode(String,TextWriter)
  nameWithType: HttpUtility.HtmlEncode(String,TextWriter)
  fullName: System.Web.HttpUtility.HtmlEncode(String,TextWriter)
- uid: System.Web.HttpUtility.JavaScriptStringEncode(System.String)
  parent: System.Web.HttpUtility
  isExternal: false
  name: JavaScriptStringEncode(String)
  nameWithType: HttpUtility.JavaScriptStringEncode(String)
  fullName: System.Web.HttpUtility.JavaScriptStringEncode(String)
- uid: System.Web.HttpUtility.JavaScriptStringEncode(System.String,System.Boolean)
  parent: System.Web.HttpUtility
  isExternal: false
  name: JavaScriptStringEncode(String,Boolean)
  nameWithType: HttpUtility.JavaScriptStringEncode(String,Boolean)
  fullName: System.Web.HttpUtility.JavaScriptStringEncode(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpUtility.ParseQueryString(System.String)
  parent: System.Web.HttpUtility
  isExternal: false
  name: ParseQueryString(String)
  nameWithType: HttpUtility.ParseQueryString(String)
  fullName: System.Web.HttpUtility.ParseQueryString(String)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.HttpUtility.ParseQueryString(System.String,System.Text.Encoding)
  parent: System.Web.HttpUtility
  isExternal: false
  name: ParseQueryString(String,Encoding)
  nameWithType: HttpUtility.ParseQueryString(String,Encoding)
  fullName: System.Web.HttpUtility.ParseQueryString(String,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Web.HttpUtility.UrlDecode(System.String)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlDecode(String)
  nameWithType: HttpUtility.UrlDecode(String)
  fullName: System.Web.HttpUtility.UrlDecode(String)
- uid: System.Web.HttpUtility.UrlDecode(System.Byte[],System.Text.Encoding)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlDecode(Byte[],Encoding)
  nameWithType: HttpUtility.UrlDecode(Byte[],Encoding)
  fullName: System.Web.HttpUtility.UrlDecode(Byte[],Encoding)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpUtility.UrlDecode(System.String,System.Text.Encoding)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlDecode(String,Encoding)
  nameWithType: HttpUtility.UrlDecode(String,Encoding)
  fullName: System.Web.HttpUtility.UrlDecode(String,Encoding)
- uid: System.Web.HttpUtility.UrlDecode(System.Byte[],System.Int32,System.Int32,System.Text.Encoding)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlDecode(Byte[],Int32,Int32,Encoding)
  nameWithType: HttpUtility.UrlDecode(Byte[],Int32,Int32,Encoding)
  fullName: System.Web.HttpUtility.UrlDecode(Byte[],Int32,Int32,Encoding)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.HttpUtility.UrlDecodeToBytes(System.Byte[])
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlDecodeToBytes(Byte[])
  nameWithType: HttpUtility.UrlDecodeToBytes(Byte[])
  fullName: System.Web.HttpUtility.UrlDecodeToBytes(Byte[])
- uid: System.Web.HttpUtility.UrlDecodeToBytes(System.String)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlDecodeToBytes(String)
  nameWithType: HttpUtility.UrlDecodeToBytes(String)
  fullName: System.Web.HttpUtility.UrlDecodeToBytes(String)
- uid: System.Web.HttpUtility.UrlDecodeToBytes(System.String,System.Text.Encoding)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlDecodeToBytes(String,Encoding)
  nameWithType: HttpUtility.UrlDecodeToBytes(String,Encoding)
  fullName: System.Web.HttpUtility.UrlDecodeToBytes(String,Encoding)
- uid: System.Web.HttpUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlDecodeToBytes(Byte[],Int32,Int32)
  nameWithType: HttpUtility.UrlDecodeToBytes(Byte[],Int32,Int32)
  fullName: System.Web.HttpUtility.UrlDecodeToBytes(Byte[],Int32,Int32)
- uid: System.Web.HttpUtility.UrlEncode(System.Byte[])
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncode(Byte[])
  nameWithType: HttpUtility.UrlEncode(Byte[])
  fullName: System.Web.HttpUtility.UrlEncode(Byte[])
- uid: System.Web.HttpUtility.UrlEncode(System.String)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncode(String)
  nameWithType: HttpUtility.UrlEncode(String)
  fullName: System.Web.HttpUtility.UrlEncode(String)
- uid: System.Web.HttpUtility.UrlEncode(System.String,System.Text.Encoding)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncode(String,Encoding)
  nameWithType: HttpUtility.UrlEncode(String,Encoding)
  fullName: System.Web.HttpUtility.UrlEncode(String,Encoding)
- uid: System.Web.HttpUtility.UrlEncode(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncode(Byte[],Int32,Int32)
  nameWithType: HttpUtility.UrlEncode(Byte[],Int32,Int32)
  fullName: System.Web.HttpUtility.UrlEncode(Byte[],Int32,Int32)
- uid: System.Web.HttpUtility.UrlEncodeToBytes(System.Byte[])
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncodeToBytes(Byte[])
  nameWithType: HttpUtility.UrlEncodeToBytes(Byte[])
  fullName: System.Web.HttpUtility.UrlEncodeToBytes(Byte[])
- uid: System.Web.HttpUtility.UrlEncodeToBytes(System.String)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncodeToBytes(String)
  nameWithType: HttpUtility.UrlEncodeToBytes(String)
  fullName: System.Web.HttpUtility.UrlEncodeToBytes(String)
- uid: System.Web.HttpUtility.UrlEncodeToBytes(System.String,System.Text.Encoding)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncodeToBytes(String,Encoding)
  nameWithType: HttpUtility.UrlEncodeToBytes(String,Encoding)
  fullName: System.Web.HttpUtility.UrlEncodeToBytes(String,Encoding)
- uid: System.Web.HttpUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncodeToBytes(Byte[],Int32,Int32)
  nameWithType: HttpUtility.UrlEncodeToBytes(Byte[],Int32,Int32)
  fullName: System.Web.HttpUtility.UrlEncodeToBytes(Byte[],Int32,Int32)
- uid: System.Web.HttpUtility.UrlEncodeUnicode(System.String)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncodeUnicode(String)
  nameWithType: HttpUtility.UrlEncodeUnicode(String)
  fullName: System.Web.HttpUtility.UrlEncodeUnicode(String)
- uid: System.Web.HttpUtility.UrlEncodeUnicodeToBytes(System.String)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncodeUnicodeToBytes(String)
  nameWithType: HttpUtility.UrlEncodeUnicodeToBytes(String)
  fullName: System.Web.HttpUtility.UrlEncodeUnicodeToBytes(String)
- uid: System.Web.HttpUtility.UrlPathEncode(System.String)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlPathEncode(String)
  nameWithType: HttpUtility.UrlPathEncode(String)
  fullName: System.Web.HttpUtility.UrlPathEncode(String)
- uid: System.Web.HttpUtility.#ctor*
  parent: System.Web.HttpUtility
  isExternal: false
  name: HttpUtility
  nameWithType: HttpUtility.HttpUtility
- uid: System.Web.HttpUtility.HtmlAttributeEncode*
  parent: System.Web.HttpUtility
  isExternal: false
  name: HtmlAttributeEncode
  nameWithType: HttpUtility.HtmlAttributeEncode
- uid: System.Web.HttpUtility.HtmlDecode*
  parent: System.Web.HttpUtility
  isExternal: false
  name: HtmlDecode
  nameWithType: HttpUtility.HtmlDecode
- uid: System.Web.HttpUtility.HtmlEncode*
  parent: System.Web.HttpUtility
  isExternal: false
  name: HtmlEncode
  nameWithType: HttpUtility.HtmlEncode
- uid: System.Web.HttpUtility.JavaScriptStringEncode*
  parent: System.Web.HttpUtility
  isExternal: false
  name: JavaScriptStringEncode
  nameWithType: HttpUtility.JavaScriptStringEncode
- uid: System.Web.HttpUtility.ParseQueryString*
  parent: System.Web.HttpUtility
  isExternal: false
  name: ParseQueryString
  nameWithType: HttpUtility.ParseQueryString
- uid: System.Web.HttpUtility.UrlDecode*
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlDecode
  nameWithType: HttpUtility.UrlDecode
- uid: System.Web.HttpUtility.UrlDecodeToBytes*
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlDecodeToBytes
  nameWithType: HttpUtility.UrlDecodeToBytes
- uid: System.Web.HttpUtility.UrlEncode*
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncode
  nameWithType: HttpUtility.UrlEncode
- uid: System.Web.HttpUtility.UrlEncodeToBytes*
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncodeToBytes
  nameWithType: HttpUtility.UrlEncodeToBytes
- uid: System.Web.HttpUtility.UrlEncodeUnicode*
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncodeUnicode
  nameWithType: HttpUtility.UrlEncodeUnicode
- uid: System.Web.HttpUtility.UrlEncodeUnicodeToBytes*
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncodeUnicodeToBytes
  nameWithType: HttpUtility.UrlEncodeUnicodeToBytes
- uid: System.Web.HttpUtility.UrlPathEncode*
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlPathEncode
  nameWithType: HttpUtility.UrlPathEncode
