### YamlMime:ManagedReference
items:
- uid: System.Web.UI.IDataSource
  id: IDataSource
  children:
  - System.Web.UI.IDataSource.DataSourceChanged
  - System.Web.UI.IDataSource.GetView(System.String)
  - System.Web.UI.IDataSource.GetViewNames
  langs:
  - csharp
  name: IDataSource
  nameWithType: IDataSource
  fullName: System.Web.UI.IDataSource
  type: Interface
  summary: "Representerer en abstrakt datakilde databundet Kontroller bindes til."
  remarks: "ASP.NET støtter en arkitektur med kontrollen databinding som aktiverer webkontroller server til å binde til data i en konsekvent måte. Webserverkontroller binde til data kalles databundet kontroller og klassene som gjør det mulig at bindingen kalles datakilde-kontroller. Kontroller kilde kan representere en datakilde: en relasjonsdatabase, en fil, en dataflyt, et objekt for business og så videre. Datakilden kontrollerer finnes data på en konsekvent måte til databindingselementer kontroller, uavhengig av kilde- eller formatet for de underliggende dataene.       Du kan implementere grensesnittet IDataSource når du vil implementere dine egne egendefinerte ASP.NET datakilde-kontroll.       Klassen som implementerer grensesnittet IDataSource er en datakilde-kontroll. Grensesnittet IDataSource som fungerer som grunnlag for alle ASP.NET-datakilden kontroller, og som definerer en av de grunnleggende databinding arkitektur konseptene med de to måter: den <xref:System.Web.UI.IDataSource.GetView%2A>metoden og <xref:System.Web.UI.IDataSource.GetViewNames%2A>metode.</xref:System.Web.UI.IDataSource.GetViewNames%2A> </xref:System.Web.UI.IDataSource.GetView%2A> Denne begrep er at alle datakildekontroller støtter én eller flere navngitte visninger for dataene. Vis datakildeobjektet er lik den <xref:System.Data.DataView>abstrakt i den <xref:System.Data>navneområde: et data-kan bindes, tilpasset visning av dataene for sortering, filtrering og andre dataoperasjoner som definerer visningen.</xref:System.Data> </xref:System.Data.DataView> Kjernen i en datakilde kontrollere gjøre noe mer enn hente visninger for dataene.       En datakildekontroll kan ha ett eller flere tilknyttede datakilde visningen objekter. Noen datakilde kontroller, inkludert de som representerer relasjonsdatabaser eksempel <xref:System.Web.UI.WebControls.SqlDataSource>og <xref:System.Web.UI.WebControls.AccessDataSource>, støtter bare én visning.</xref:System.Web.UI.WebControls.AccessDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> Andre datakilde kontroller, inkludert hierarkisk kilde Kontroller eksempel <xref:System.Web.UI.WebControls.SiteMapDataSource>, støtter mange visninger.</xref:System.Web.UI.WebControls.SiteMapDataSource> Datakildevisningen definerer mulighetene for en datakilde og operasjoner som støttes.       Sammendrag av, kilden Kontroller implementere grensesnittet IDataSource, støtter én eller flere navngitte visninger for dataene de representerer og støtter always henting av data fra datakilden de representerer. Kilden Kontroller alltid datahenting ved behov, for eksempel når `DataBind` kalles på en databundet-kontroll."
  example:
  - "The following code example demonstrates how a class can implement the methods defined by the IDataSource interface to provide data to data-bound controls. The data source control in this example acts as a data source on a comma-separated value file, and can be used by any data-bound control to display comma-separated file data. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/add/codesnippet/csharp/t-system.web.ui.idatasou_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.idatasou_1.vb)]"
  syntax:
    content: public interface IDataSource
  implements: []
  platform:
  - net462
- uid: System.Web.UI.IDataSource.DataSourceChanged
  id: DataSourceChanged
  parent: System.Web.UI.IDataSource
  langs:
  - csharp
  name: DataSourceChanged
  nameWithType: IDataSource.DataSourceChanged
  fullName: System.Web.UI.IDataSource.DataSourceChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Forekommer når en kilde-kontroll for data er endret på en måte som påvirker databindingselementer kontroller."
  remarks: "DataSourceChanged denne hendelsen oppstår når egenskaper for en databundet kontroll eller de underliggende dataene er endret på en måte som påvirker databindingene mellom en databundet kontroll og dataene. For eksempel hendelsen oppstår hvis et filnavn egenskapen som det <xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A>egenskapen endres på en filbaserte datakilde-kontroll.</xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A>       Du finner mer informasjon om behandling av hendelser [NIB: bruker hendelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler DataSourceChanged;
    return:
      type: System.EventHandler
      description: "Som skal legges til."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.IDataSource.GetView(System.String)
  id: GetView(System.String)
  parent: System.Web.UI.IDataSource
  langs:
  - csharp
  name: GetView(String)
  nameWithType: IDataSource.GetView(String)
  fullName: System.Web.UI.IDataSource.GetView(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Henter navngitt datakildevisningen tilknyttet datakildekontrollen."
  remarks: "Datakilde kontrollen klasser støtter én eller flere visninger i de underliggende dataene. Disse visningene representeres av forekomster av <xref:System.Web.UI.DataSourceView>klassen.</xref:System.Web.UI.DataSourceView> Datakildevisningen definerer mulighetene for en kilde-kontroll for data og utfører alle arbeid som er nødvendig for å hente data fra underliggende datalager og utføre operasjoner, for eksempel sortering, innsetting, sletting og oppdatering.       Datakilde-kontrollen klasser som implementerer <xref:System.Web.UI.IDataSource>grensesnittet implementere GetView-metoden til å returnere forespørselsparameter av sterk type Vis objekter som er tilknyttet klassen.</xref:System.Web.UI.IDataSource>"
  example:
  - "The following code example demonstrates how a data source control class that implements the <xref:System.Web.UI.IDataSource> interface implements the GetView method, returning a strongly typed instance of the <xref:System.Web.UI.DataSourceView> class. Because the data source control supports only one view, it ignores the name and returns a view named with the default view name. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/add/codesnippet/csharp/m-system.web.ui.idatasou_0_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/add/codesnippet/visualbasic/m-system.web.ui.idatasou_0_1.vb)]"
  syntax:
    content: public System.Web.UI.DataSourceView GetView (string viewName);
    parameters:
    - id: viewName
      type: System.String
      description: "Navnet på visningen for å hente."
    return:
      type: System.Web.UI.DataSourceView
      description: "Returnerer den navngitte <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> knyttet til den <xref href=&quot;System.Web.UI.IDataSource&quot;> </xref>."
  overload: System.Web.UI.IDataSource.GetView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.IDataSource.GetViewNames
  id: GetViewNames
  parent: System.Web.UI.IDataSource
  langs:
  - csharp
  name: GetViewNames()
  nameWithType: IDataSource.GetViewNames()
  fullName: System.Web.UI.IDataSource.GetViewNames()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Henter en samling navn som representerer listen over Vis objekter som er knyttet til den <xref href=&quot;System.Web.UI.IDataSource&quot;> </xref> grensesnitt."
  remarks: "Datakilde kontrollen klasser støtter én eller flere navngitte visninger i de underliggende dataene. Metoden GetViewNames returnerer en samling av visningsnavn som er tilknyttet kontroll av datakildeforekomst. Brukere kan gå gjennom samlingen av visningsnavn og hente individuelle <xref:System.Web.UI.DataSourceView>objekter med den <xref:System.Web.UI.IDataSource.GetView%2A>metoden.</xref:System.Web.UI.IDataSource.GetView%2A> </xref:System.Web.UI.DataSourceView>       Datakilden kontrollerer klasser som implementerer <xref:System.Web.UI.IDataSource>grensesnittet Implementer GetViewNames-metoden til å returnere en samling navn som representerer alle datakilden vise objekter som er tilknyttet klassen. datakilde kontroll</xref:System.Web.UI.IDataSource>"
  example:
  - "The following code example demonstrates how a data source control that implements the <xref:System.Web.UI.IDataSource> interface implements the GetViewNames method, returning an <xref:System.Collections.ICollection> collection of names. Because the data source supports only one view, the method returns a collection of one element using the default name for the view. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/add/codesnippet/csharp/m-system.web.ui.idatasou_1_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/add/codesnippet/visualbasic/m-system.web.ui.idatasou_1_1.vb)]"
  syntax:
    content: public System.Collections.ICollection GetViewNames ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "En <xref:System.Collections.ICollection>som inneholder navnene på visninger som er knyttet til den <xref href=&quot;System.Web.UI.IDataSource&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Web.UI.IDataSource.GetViewNames*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.IDataSource.DataSourceChanged
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: DataSourceChanged
  nameWithType: IDataSource.DataSourceChanged
  fullName: System.Web.UI.IDataSource.DataSourceChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.IDataSource.GetView(System.String)
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: GetView(String)
  nameWithType: IDataSource.GetView(String)
  fullName: System.Web.UI.IDataSource.GetView(String)
- uid: System.Web.UI.DataSourceView
  parent: System.Web.UI
  isExternal: false
  name: DataSourceView
  nameWithType: DataSourceView
  fullName: System.Web.UI.DataSourceView
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.IDataSource.GetViewNames
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: GetViewNames()
  nameWithType: IDataSource.GetViewNames()
  fullName: System.Web.UI.IDataSource.GetViewNames()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.IDataSource.GetView*
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: GetView
  nameWithType: IDataSource.GetView
- uid: System.Web.UI.IDataSource.GetViewNames*
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: GetViewNames
  nameWithType: IDataSource.GetViewNames
