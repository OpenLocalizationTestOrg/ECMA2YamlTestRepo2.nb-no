### YamlMime:ManagedReference
items:
- uid: System.Data.DataRowCollection
  id: DataRowCollection
  children:
  - System.Data.DataRowCollection.Add(System.Data.DataRow)
  - System.Data.DataRowCollection.Add(System.Object[])
  - System.Data.DataRowCollection.Clear
  - System.Data.DataRowCollection.Contains(System.Object)
  - System.Data.DataRowCollection.Contains(System.Object[])
  - System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)
  - System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)
  - System.Data.DataRowCollection.Count
  - System.Data.DataRowCollection.Find(System.Object)
  - System.Data.DataRowCollection.Find(System.Object[])
  - System.Data.DataRowCollection.GetEnumerator
  - System.Data.DataRowCollection.IndexOf(System.Data.DataRow)
  - System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)
  - System.Data.DataRowCollection.Item(System.Int32)
  - System.Data.DataRowCollection.Remove(System.Data.DataRow)
  - System.Data.DataRowCollection.RemoveAt(System.Int32)
  langs:
  - csharp
  name: DataRowCollection
  nameWithType: DataRowCollection
  fullName: System.Data.DataRowCollection
  type: Class
  summary: "Representerer en samling av rader for en <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  remarks: "DataRowCollection er en større komponent i <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Mens den <xref:System.Data.DataColumnCollection>definerer skjemaet DataRowCollection inneholder de faktiske dataene for tabellen i tabellen, der hver <xref:System.Data.DataRow>representerer én rad i DataRowCollection.</xref:System.Data.DataRow> </xref:System.Data.DataColumnCollection>       Du kan ringe det <xref:System.Data.DataRowCollection.Add%2A>og <xref:System.Data.DataRowCollection.Remove%2A>metoder innsetting og sletting <xref:System.Data.DataRow>objekter fra DataRowCollection.</xref:System.Data.DataRow> </xref:System.Data.DataRowCollection.Remove%2A> </xref:System.Data.DataRowCollection.Add%2A> Du kan også kalle den <xref:System.Data.DataRowCollection.Find%2A>metode til å søke etter <xref:System.Data.DataRow>objekter som inneholder bestemte verdier i primærnøkkelkolonnene, og <xref:System.Data.DataRowCollection.Contains%2A>metode for å søke tegnbasert-data for én ord eller uttrykk.</xref:System.Data.DataRowCollection.Contains%2A> </xref:System.Data.DataRow> </xref:System.Data.DataRowCollection.Find%2A>       For andre operasjoner, for eksempel sortering eller filtrering DataRowCollection, kan du bruke metoder på den DataRowCollection tilknyttede <xref:System.Data.DataTable>.</xref:System.Data.DataTable>"
  example:
  - "The first example in this section prints the value of column 1 for every row in a DataRowCollection. The second example adds a new row created by using the <xref:System.Data.DataTable.NewRow%2A> method to the DataRowCollection.  \n  \n [!code-cs[Classic WebData DataRowCollection Example#1](~/add/codesnippet/csharp/t-system.data.datarowcol_1.cs)]\n [!code-vb[Classic WebData DataRowCollection Example#1](~/add/codesnippet/visualbasic/t-system.data.datarowcol_1.vb)]"
  syntax:
    content: 'public sealed class DataRowCollection : System.Data.InternalDataCollectionBase'
  inheritance:
  - System.Object
  - System.Data.InternalDataCollectionBase
  implements: []
  inheritedMembers:
  - System.Data.InternalDataCollectionBase.IsReadOnly
  - System.Data.InternalDataCollectionBase.IsSynchronized
  - System.Data.InternalDataCollectionBase.List
  - System.Data.InternalDataCollectionBase.SyncRoot
  platform:
  - net462
- uid: System.Data.DataRowCollection.Add(System.Data.DataRow)
  id: Add(System.Data.DataRow)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Add(DataRow)
  nameWithType: DataRowCollection.Add(DataRow)
  fullName: System.Data.DataRowCollection.Add(DataRow)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Legger til den angitte <xref href=&quot;System.Data.DataRow&quot;> </xref> til den <xref href=&quot;System.Data.DataRowCollection&quot;> </xref> objektet."
  remarks: "Opprette en ny <xref:System.Data.DataRow>må du bruke <xref:System.Data.DataTable.NewRow%2A>metode for <xref:System.Data.DataTable>klasse.</xref:System.Data.DataTable> </xref:System.Data.DataTable.NewRow%2A> </xref:System.Data.DataRow> Når du bruker <xref:System.Data.DataTable.NewRow%2A>metoden, en ny <xref:System.Data.DataRow>objekt returneres med skjemaet for overordnede <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataRow> </xref:System.Data.DataTable.NewRow%2A> Når du har opprettet i <xref:System.Data.DataRow>objekt og angi verdier for hver av kolonnene, Bruk Add-metode til å legge til objektet i samlingen.</xref:System.Data.DataRow>       Genererer et unntak hvis brukeren genererer et unntak i den <xref:System.Data.DataTable.RowChanging>hendelsen.</xref:System.Data.DataTable.RowChanging> Hvis det oppstår et unntak, legges ikke raden i tabellen."
  example:
  - "The following example uses the Add method to add a new <xref:System.Data.DataRow> to a <xref:System.Data.DataRowCollection> object.  \n  \n [!code-cs[Classic WebData DataRowCollection.Add Example#1](~/add/codesnippet/csharp/m-system.data.datarowcol_2_1.cs)]\n [!code-vb[Classic WebData DataRowCollection.Add Example#1](~/add/codesnippet/visualbasic/m-system.data.datarowcol_2_1.vb)]"
  syntax:
    content: public void Add (System.Data.DataRow row);
    parameters:
    - id: row
      type: System.Data.DataRow
      description: "The <xref href=&quot;System.Data.DataRow&quot;></xref> to add."
  overload: System.Data.DataRowCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Raden er null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Raden tilhører en annen tabell eller tilhører allerede denne tabellen."
  - type: System.Data.ConstraintException
    commentId: T:System.Data.ConstraintException
    description: "I tillegg ugyldiggjøres en begrensning."
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: "I tillegg prøver å sette en null-verdi en <xref href=&quot;System.Data.DataColumn&quot;> </xref> der <xref:System.Data.DataColumn.AllowDBNull*>er USANN.</xref:System.Data.DataColumn.AllowDBNull*>"
  platform:
  - net462
- uid: System.Data.DataRowCollection.Add(System.Object[])
  id: Add(System.Object[])
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Add(Object[])
  nameWithType: DataRowCollection.Add(Object[])
  fullName: System.Data.DataRowCollection.Add(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Oppretter en rad som bruker angitte verdiene og legger det til den <xref href=&quot;System.Data.DataRowCollection&quot;> </xref>."
  remarks: "Hvis en <xref:System.Data.DataColumn>objektet har den <xref:System.Data.DataColumn.AutoIncrement%2A>satt til True, null må være angitt for å få standardverdien for kolonnen.</xref:System.Data.DataColumn.AutoIncrement%2A> </xref:System.Data.DataColumn>       Unntak kan også skje hvis du genererer et unntak under enten en <xref:System.Data.DataTable.ColumnChanging>eller <xref:System.Data.DataTable.RowChanging>hendelsen.</xref:System.Data.DataTable.RowChanging> </xref:System.Data.DataTable.ColumnChanging> Hvis det oppstår et unntak, legges ikke raden i tabellen."
  example:
  - "The following example uses the <xref:System.Data.DataRowCollection.Add%2A> method to create and add a new <xref:System.Data.DataRow> object to a <xref:System.Data.DataRowCollection>.  \n  \n [!code-cs[Classic WebData DataRowCollection.Add1 Example#1](~/add/codesnippet/csharp/m-system.data.datarowcol_5_1.cs)]\n [!code-vb[Classic WebData DataRowCollection.Add1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarowcol_5_1.vb)]"
  syntax:
    content: public System.Data.DataRow Add (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Matrisen med verdier som brukes til å opprette ny rad."
    return:
      type: System.Data.DataRow
      description: "Ingen."
  overload: System.Data.DataRowCollection.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Matrisen er større enn antallet kolonner i tabellen."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "En verdi samsvarer ikke med den tilsvarende kolonnetypen."
  - type: System.Data.ConstraintException
    commentId: T:System.Data.ConstraintException
    description: "Legge til raden ugyldiggjøres en begrensning."
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: "Forsøk på å sette en null-verdi i en kolonne der <xref:System.Data.DataColumn.AllowDBNull*>er USANN.</xref:System.Data.DataColumn.AllowDBNull*>"
  platform:
  - net462
- uid: System.Data.DataRowCollection.Clear
  id: Clear
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: DataRowCollection.Clear()
  fullName: System.Data.DataRowCollection.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Fjerner samlingen av alle rader."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Data.DataRowCollection.Clear*
  exceptions:
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "En <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref> gjennomført på den <xref href=&quot;System.Data.DataRowCollection&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRowCollection.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: DataRowCollection.Contains(Object)
  fullName: System.Data.DataRowCollection.Contains(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Henter en verdi som angir om primærnøkkel for en rad i samlingen inneholder den angitte verdien."
  remarks: "Å bruke metoden inneholder den <xref:System.Data.DataTable>objektet som den <xref:System.Data.DataRowCollection>objektet tilhører må ha minst én kolonne som er angitt som en primærnøkkelkolonne.</xref:System.Data.DataRowCollection> </xref:System.Data.DataTable> Se den <xref:System.Data.DataTable.PrimaryKey%2A>egenskapen for mer informasjon om hvordan du oppretter en primærnøkkelkolonne.</xref:System.Data.DataTable.PrimaryKey%2A>       Når du har fastslått at en rad inneholder den angitte verdien, kan du bruke den <xref:System.Data.DataRowCollection.Find%2A>metode til å returnere angitt <xref:System.Data.DataRow>objektet som har verdien.</xref:System.Data.DataRow> </xref:System.Data.DataRowCollection.Find%2A>"
  example:
  - "The following Visual Basic example uses the Contains method to determine whether a <xref:System.Data.DataRowCollection> object contains a specific value.  \n  \n [!code-vb[Classic WebData DataRowCollection.Contains Example#1](~/add/codesnippet/visualbasic/m-system.data.datarowcol_7_1.vb)]"
  syntax:
    content: public bool Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: "Verdien for den primære nøkkelen til å teste."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis samlingen inneholder en <xref href=&quot;System.Data.DataRow&quot;> </xref> med den angitte primærnøkkelverdien; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRowCollection.Contains*
  exceptions:
  - type: System.Data.MissingPrimaryKeyException
    commentId: T:System.Data.MissingPrimaryKeyException
    description: "Tabellen har en primærnøkkel."
  platform:
  - net462
- uid: System.Data.DataRowCollection.Contains(System.Object[])
  id: Contains(System.Object[])
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Contains(Object[])
  nameWithType: DataRowCollection.Contains(Object[])
  fullName: System.Data.DataRowCollection.Contains(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Henter en verdi som angir om primærnøkkelkolonnene for alle rader i samlingen inneholder verdiene som er angitt i matrisen for objektet."
  remarks: "Du bruker den <xref:System.Data.DataRowCollection.Contains%2A>metode med en matrise med verdier, den <xref:System.Data.DataTable>objektet som den <xref:System.Data.DataRowCollection>objekt tilhører kan har en matrise med kolonner som er angitt som primærnøkler.</xref:System.Data.DataRowCollection> </xref:System.Data.DataTable> </xref:System.Data.DataRowCollection.Contains%2A> Se den <xref:System.Data.DataTable.PrimaryKey%2A>egenskapen for mer informasjon om hvordan du oppretter en matrise av primærnøkkelkolonnene.</xref:System.Data.DataTable.PrimaryKey%2A> Antallet matriseelementer må samsvare med antall primærnøkkelkolonner i <xref:System.Data.DataTable>.</xref:System.Data.DataTable>       Når du har fastslått at en rad inneholder den angitte verdien, kan du bruke den <xref:System.Data.DataRowCollection.Find%2A>metode til å returnere angitt <xref:System.Data.DataRow>objektet som har verdien.</xref:System.Data.DataRow> </xref:System.Data.DataRowCollection.Find%2A>"
  example:
  - "The following Visual Basic example uses the <xref:System.Data.DataRowCollection.Contains%2A> method to find a particular row in a <xref:System.Data.DataRowCollection> object. The example creates an array of values, one element for each primary key in the table, and then passes the array to the method to return a `true` or `false`.  \n  \n [!code-vb[Classic WebData DataRowCollection.Contains1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarowcol_4_1.vb)]"
  syntax:
    content: public bool Contains (object[] keys);
    parameters:
    - id: keys
      type: System.Object[]
      description: "En matrise med primære nøkkelverdiene til å teste."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis den <xref href=&quot;System.Data.DataRowCollection&quot;> </xref> inneholder en <xref href=&quot;System.Data.DataRow&quot;> </xref> med de angitte nøkkelverdiene; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRowCollection.Contains*
  exceptions:
  - type: System.Data.MissingPrimaryKeyException
    commentId: T:System.Data.MissingPrimaryKeyException
    description: "Tabellen har en primærnøkkel."
  platform:
  - net462
- uid: System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: DataRowCollection.CopyTo(Array,Int32)
  fullName: System.Data.DataRowCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kopierer alle de <xref href=&quot;System.Data.DataRow&quot;> </xref> objekter fra samlingen i den angitte matrisen, med Start fra angitte målet matriseindeksen."
  syntax:
    content: public override void CopyTo (Array ar, int index);
    parameters:
    - id: ar
      type: System.Array
      description: "Endimensjonal matrise som er målet for elementene kopieres fra den <xref uid=&quot;langword_csharp_DataRowCollection&quot; name=&quot;DataRowCollection&quot; href=&quot;&quot;> </xref>. Matrisen må ha nullbasert indeksering."
    - id: index
      type: System.Int32
      description: "Starter den nullbaserte indeksen i matrisen på som kopiering."
  overload: System.Data.DataRowCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)
  id: CopyTo(System.Data.DataRow[],System.Int32)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: CopyTo(DataRow[],Int32)
  nameWithType: DataRowCollection.CopyTo(DataRow[],Int32)
  fullName: System.Data.DataRowCollection.CopyTo(DataRow[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kopierer alle de <xref href=&quot;System.Data.DataRow&quot;> </xref> objekter fra samlingen i den angitte matrisen, med Start fra angitte målet matriseindeksen."
  syntax:
    content: public void CopyTo (System.Data.DataRow[] array, int index);
    parameters:
    - id: array
      type: System.Data.DataRow[]
      description: "Endimensjonal matrise som er målet for elementene kopieres fra den <xref uid=&quot;langword_csharp_DataRowCollection&quot; name=&quot;DataRowCollection&quot; href=&quot;&quot;> </xref>. Matrisen må ha nullbasert indeksering."
    - id: index
      type: System.Int32
      description: "Starter den nullbaserte indeksen i matrisen på som kopiering."
  overload: System.Data.DataRowCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRowCollection.Count
  id: Count
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Count
  nameWithType: DataRowCollection.Count
  fullName: System.Data.DataRowCollection.Count
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Henter antall <xref href=&quot;System.Data.DataRow&quot;> </xref> objekter i denne samlingen."
  syntax:
    content: public override int Count { get; }
    return:
      type: System.Int32
      description: "Totalt antall <xref href=&quot;System.Data.DataRow&quot;> </xref> objekter i denne samlingen."
  overload: System.Data.DataRowCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRowCollection.Find(System.Object)
  id: Find(System.Object)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Find(Object)
  nameWithType: DataRowCollection.Find(Object)
  fullName: System.Data.DataRowCollection.Find(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Henter rad som er angitt av primærnøkkelverdien."
  remarks: "Å bruke den `Find` metoden, den <xref:System.Data.DataTable>objektet som den <xref:System.Data.DataRowCollection>objekt tilhører må ha minst én kolonne som er angitt som en primærnøkkelkolonne.</xref:System.Data.DataRowCollection> </xref:System.Data.DataTable> Se den <xref:System.Data.DataTable.PrimaryKey%2A>egenskapen for mer informasjon om hvordan du oppretter en primærnøkkelkolonne.</xref:System.Data.DataTable.PrimaryKey%2A>"
  example:
  - "The following example uses the Find method to find the primary key value \"2\" in a collection of <xref:System.Data.DataRow> objects. The method returns the specific <xref:System.Data.DataRow> object letting you change its values, as needed.  \n  \n [!code-vb[Classic WebData DataRowCollection.Find Example#1](~/add/codesnippet/visualbasic/m-system.data.datarowcol_0_1.vb)]\n [!code-cs[Classic WebData DataRowCollection.Find Example#1](~/add/codesnippet/csharp/m-system.data.datarowcol_0_1.cs)]"
  syntax:
    content: public System.Data.DataRow Find (object key);
    parameters:
    - id: key
      type: System.Object
      description: "Primærnøkkelverdi av den <xref href=&quot;System.Data.DataRow&quot;> </xref> til å finne."
    return:
      type: System.Data.DataRow
      description: "En <xref href=&quot;System.Data.DataRow&quot;> </xref> som inneholder primærnøkkelverdi angitt; hvis en null verdi hvis verdien til primære nøkkelen ikke finnes i den <xref href=&quot;System.Data.DataRowCollection&quot;> </xref>."
  overload: System.Data.DataRowCollection.Find*
  exceptions:
  - type: System.Data.MissingPrimaryKeyException
    commentId: T:System.Data.MissingPrimaryKeyException
    description: "Tabellen har en primærnøkkel."
  platform:
  - net462
- uid: System.Data.DataRowCollection.Find(System.Object[])
  id: Find(System.Object[])
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Find(Object[])
  nameWithType: DataRowCollection.Find(Object[])
  fullName: System.Data.DataRowCollection.Find(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Henter raden som inneholder de angitte primære nøkkelverdiene."
  remarks: "Å bruke den <xref:System.Data.DataRowCollection.Find%2A>metoden, den <xref:System.Data.DataTable>objektet som den <xref:System.Data.DataRowCollection>objekt tilhører må ha minst én kolonne som er angitt som en primærnøkkelkolonne.</xref:System.Data.DataRowCollection> </xref:System.Data.DataTable> </xref:System.Data.DataRowCollection.Find%2A> Når to eller flere rader, har den samme primærnøkkelverdien, returneres den første raden finnes. Dette skjer når <xref:System.Data.DataSet.EnforceConstraints%2A>er satt til false.</xref:System.Data.DataSet.EnforceConstraints%2A> Se den <xref:System.Data.DataTable.PrimaryKey%2A>egenskapen for mer informasjon om hvordan du oppretter en <xref:System.Data.DataTable.PrimaryKey%2A>kolonne eller en matrise av <xref:System.Data.DataColumn>objekter når tabellen har mer enn én primærnøkkel.</xref:System.Data.DataColumn> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.DataTable.PrimaryKey%2A>"
  example:
  - "The following example uses the values of an array to find a specific row in a collection of <xref:System.Data.DataRow> objects. The method assumes that a <xref:System.Data.DataTable> exists with three primary key columns. After creating an array of the values, the code uses the <xref:System.Data.DataRowCollection.Find%2A> method with the array to get the particular object that you want.  \n  \n [!code-cs[Classic WebData DataRowCollection.Find1 Example#1](~/add/codesnippet/csharp/m-system.data.datarowcol_6_1.cs)]\n [!code-vb[Classic WebData DataRowCollection.Find1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarowcol_6_1.vb)]"
  syntax:
    content: public System.Data.DataRow Find (object[] keys);
    parameters:
    - id: keys
      type: System.Object[]
      description: "En matrise med primære nøkkelverdiene til å finne. Matrisen er <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Data.DataRow
      description: "En <xref href=&quot;System.Data.DataRow&quot;> </xref> objekt som inneholder de primære nøkkelverdiene er angitt, ellers null verdi hvis verdien til primære nøkkelen ikke finnes i den <xref href=&quot;System.Data.DataRowCollection&quot;> </xref>."
  overload: System.Data.DataRowCollection.Find*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Ingen rad tilsvarer som indeksverdi."
  - type: System.Data.MissingPrimaryKeyException
    commentId: T:System.Data.MissingPrimaryKeyException
    description: "Tabellen har en primærnøkkel."
  platform:
  - net462
- uid: System.Data.DataRowCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DataRowCollection.GetEnumerator()
  fullName: System.Data.DataRowCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Henter en <xref:System.Collections.IEnumerator>for denne samlingen.</xref:System.Collections.IEnumerator>"
  syntax:
    content: public override System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "En <xref:System.Collections.IEnumerator>for denne samlingen.</xref:System.Collections.IEnumerator>"
  overload: System.Data.DataRowCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRowCollection.IndexOf(System.Data.DataRow)
  id: IndexOf(System.Data.DataRow)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: IndexOf(DataRow)
  nameWithType: DataRowCollection.IndexOf(DataRow)
  fullName: System.Data.DataRowCollection.IndexOf(DataRow)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Henter indeksen for den angitte <xref href=&quot;System.Data.DataRow&quot;> </xref> objektet."
  syntax:
    content: public int IndexOf (System.Data.DataRow row);
    parameters:
    - id: row
      type: System.Data.DataRow
      description: "Den <xref uid=&quot;langword_csharp_DataRow&quot; name=&quot;DataRow&quot; href=&quot;&quot;> </xref> til å søke etter."
    return:
      type: System.Int32
      description: "Den nullbaserte indeksen for raden eller -1 Hvis raden ikke finnes i samlingen."
  overload: System.Data.DataRowCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)
  id: InsertAt(System.Data.DataRow,System.Int32)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: InsertAt(DataRow,Int32)
  nameWithType: DataRowCollection.InsertAt(DataRow,Int32)
  fullName: System.Data.DataRowCollection.InsertAt(DataRow,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Setter inn en ny rad i samlingen på den angitte plasseringen."
  remarks: "Plasseringen angitt av InsertAt gjenspeiles av radene i den <xref:System.Data.DataRowCollection>bare.</xref:System.Data.DataRowCollection> Hvis mer enn én rad returneres i et <xref:System.Data.DataRow>matrise, satt inn raden kan ikke returneres på plasseringen angitt av InsertAt.</xref:System.Data.DataRow> For eksempel den <xref:System.Data.DataTable.Rows%2A>egenskapen returnerer raden i posisjon angitte insert.</xref:System.Data.DataTable.Rows%2A> <xref:System.Data.DataTable.Select%2A>og <xref:System.Data.DataRow.GetChildRows%2A>kan ikke.</xref:System.Data.DataRow.GetChildRows%2A></xref:System.Data.DataTable.Select%2A> Når du skriver innholdet i den <xref:System.Data.DataRowCollection>som XML, for eksempel <xref:System.Data.DataSet.WriteXml%2A>skrives radene i henhold til rekkefølgen som angis av <xref:System.Data.DataRowCollection>.</xref:System.Data.DataRowCollection> </xref:System.Data.DataSet.WriteXml%2A> </xref:System.Data.DataRowCollection>       Hvis den angitte verdien for den `pos` parameteren er større enn antall rader i samlingen, den nye raden legges til slutten."
  syntax:
    content: public void InsertAt (System.Data.DataRow row, int pos);
    parameters:
    - id: row
      type: System.Data.DataRow
      description: "The <xref href=&quot;System.Data.DataRow&quot;></xref> to add."
    - id: pos
      type: System.Int32
      description: "(Nullbasert) plasseringen i samlingen der du vil legge til den <xref uid=&quot;langword_csharp_DataRow&quot; name=&quot;DataRow&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRowCollection.InsertAt*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRowCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataRowCollection.Item(Int32)
  fullName: System.Data.DataRowCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Henter raden i den angitte indeksen."
  remarks: "Bruk av <xref:System.Data.DataRowCollection.Contains%2A>metode for å fastslå om det finnes en bestemt verdi i nøkkelkolonnen i en rad.</xref:System.Data.DataRowCollection.Contains%2A>"
  example:
  - "The following example prints the value of column 1 of each row in a <xref:System.Data.DataRowCollection>.  \n  \n [!code-vb[Classic WebData DataRowCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.data.datarowcol_1.vb)]\n [!code-cs[Classic WebData DataRowCollection.this Example#1](~/add/codesnippet/csharp/p-system.data.datarowcol_1.cs)]"
  syntax:
    content: public System.Data.DataRow this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Den nullbaserte indeksen for raden som skal returneres."
    return:
      type: System.Data.DataRow
      description: "Den angitte <xref href=&quot;System.Data.DataRow&quot;> </xref>."
  overload: System.Data.DataRowCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Indeksverdien for er større enn antallet elementer i samlingen."
  platform:
  - net462
- uid: System.Data.DataRowCollection.Remove(System.Data.DataRow)
  id: Remove(System.Data.DataRow)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Remove(DataRow)
  nameWithType: DataRowCollection.Remove(DataRow)
  fullName: System.Data.DataRowCollection.Remove(DataRow)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Fjerner det angitte <xref href=&quot;System.Data.DataRow&quot;> </xref> fra samlingen."
  remarks: "Når en rad er fjernet, vil alle data i denne raden går tapt. Du kan også kalle den <xref:System.Data.DataRow.Delete%2A>metoden for den <xref:System.Data.DataRow>klassen til å merke en rad for fjerning.</xref:System.Data.DataRow> </xref:System.Data.DataRow.Delete%2A> Kaller `Remove` er lik kall <xref:System.Data.DataRow.Delete%2A>og kaller deretter <xref:System.Data.DataRow.AcceptChanges%2A>.</xref:System.Data.DataRow.AcceptChanges%2A> </xref:System.Data.DataRow.Delete%2A>       Fjern skal ikke kalles i en foreach løkke under gjentakelse en <xref:System.Data.DataRowCollection>objektet.</xref:System.Data.DataRowCollection> Fjern endrer statusen til samlingen.       Du kan også bruke den <xref:System.Data.DataRowCollection.Clear%2A>metode for å fjerne alle medlemmer i samlingen om gangen.</xref:System.Data.DataRowCollection.Clear%2A>"
  example:
  - "The following example uses the Remove method to delete a found row in a <xref:System.Data.DataRowCollection> object. The example first uses the <xref:System.Data.DataRowCollection.Contains%2A> method to determine whether the rows collection contains a row. If it does, the <xref:System.Data.DataRowCollection.Find%2A> method is used to find the specific row, and the Remove method is then used to remove the row.  \n  \n [!code-vb[Classic WebData DataRowCollection.Remove Example#1](~/add/codesnippet/visualbasic/m-system.data.datarowcol_1_1.vb)]"
  syntax:
    content: public void Remove (System.Data.DataRow row);
    parameters:
    - id: row
      type: System.Data.DataRow
      description: "Den <xref href=&quot;System.Data.DataRow&quot;> </xref> fjerne."
  overload: System.Data.DataRowCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRowCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: DataRowCollection.RemoveAt(Int32)
  fullName: System.Data.DataRowCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Fjerner raden i den angitte indeksen fra samlingen."
  remarks: "Når en rad er fjernet, vil alle data i denne raden går tapt. Du kan også kalle den <xref:System.Data.DataRow.Delete%2A>metoden for den <xref:System.Data.DataRow>klassen til å merke en rad for fjerning.</xref:System.Data.DataRow> </xref:System.Data.DataRow.Delete%2A> Kaller `RemoveAt` er lik kall <xref:System.Data.DataRow.Delete%2A>og kaller deretter <xref:System.Data.DataRow.AcceptChanges%2A>.</xref:System.Data.DataRow.AcceptChanges%2A> </xref:System.Data.DataRow.Delete%2A>       Du kan bruke den <xref:System.Data.DataRowCollection.Clear%2A>metode for å fjerne alle medlemmer i samlingen om gangen.</xref:System.Data.DataRowCollection.Clear%2A>"
  example:
  - "The following example removes the last row in a <xref:System.Data.DataRowCollection> by calling the RemoveAt method.  \n  \n [!code-vb[Classic WebData DataRowCollection.RemoveAt Example#1](~/add/codesnippet/visualbasic/m-system.data.datarowcol_3_1.vb)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Indeksen i raden til å fjerne."
  overload: System.Data.DataRowCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.InternalDataCollectionBase
  isExternal: false
  name: System.Data.InternalDataCollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.ConstraintException
  parent: System.Data
  isExternal: false
  name: ConstraintException
  nameWithType: ConstraintException
  fullName: System.Data.ConstraintException
- uid: System.Data.NoNullAllowedException
  parent: System.Data
  isExternal: false
  name: NoNullAllowedException
  nameWithType: NoNullAllowedException
  fullName: System.Data.NoNullAllowedException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Data.InvalidConstraintException
  parent: System.Data
  isExternal: false
  name: InvalidConstraintException
  nameWithType: InvalidConstraintException
  fullName: System.Data.InvalidConstraintException
- uid: System.Data.MissingPrimaryKeyException
  parent: System.Data
  isExternal: false
  name: MissingPrimaryKeyException
  nameWithType: MissingPrimaryKeyException
  fullName: System.Data.MissingPrimaryKeyException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataRowCollection.Add(System.Data.DataRow)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Add(DataRow)
  nameWithType: DataRowCollection.Add(DataRow)
  fullName: System.Data.DataRowCollection.Add(DataRow)
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.DataRowCollection.Add(System.Object[])
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Add(Object[])
  nameWithType: DataRowCollection.Add(Object[])
  fullName: System.Data.DataRowCollection.Add(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRowCollection.Clear
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Clear()
  nameWithType: DataRowCollection.Clear()
  fullName: System.Data.DataRowCollection.Clear()
- uid: System.Data.DataRowCollection.Contains(System.Object)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Contains(Object)
  nameWithType: DataRowCollection.Contains(Object)
  fullName: System.Data.DataRowCollection.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.DataRowCollection.Contains(System.Object[])
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Contains(Object[])
  nameWithType: DataRowCollection.Contains(Object[])
  fullName: System.Data.DataRowCollection.Contains(Object[])
- uid: System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: DataRowCollection.CopyTo(Array,Int32)
  fullName: System.Data.DataRowCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: CopyTo(DataRow[],Int32)
  nameWithType: DataRowCollection.CopyTo(DataRow[],Int32)
  fullName: System.Data.DataRowCollection.CopyTo(DataRow[],Int32)
- uid: System.Data.DataRow[]
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow[]
  spec.csharp:
  - uid: System.Data.DataRow
    name: DataRow
    nameWithType: DataRow
    fullName: DataRow[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRowCollection.Count
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Count
  nameWithType: DataRowCollection.Count
  fullName: System.Data.DataRowCollection.Count
- uid: System.Data.DataRowCollection.Find(System.Object)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Find(Object)
  nameWithType: DataRowCollection.Find(Object)
  fullName: System.Data.DataRowCollection.Find(Object)
- uid: System.Data.DataRowCollection.Find(System.Object[])
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Find(Object[])
  nameWithType: DataRowCollection.Find(Object[])
  fullName: System.Data.DataRowCollection.Find(Object[])
- uid: System.Data.DataRowCollection.GetEnumerator
  parent: System.Data.DataRowCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: DataRowCollection.GetEnumerator()
  fullName: System.Data.DataRowCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.DataRowCollection.IndexOf(System.Data.DataRow)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: IndexOf(DataRow)
  nameWithType: DataRowCollection.IndexOf(DataRow)
  fullName: System.Data.DataRowCollection.IndexOf(DataRow)
- uid: System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: InsertAt(DataRow,Int32)
  nameWithType: DataRowCollection.InsertAt(DataRow,Int32)
  fullName: System.Data.DataRowCollection.InsertAt(DataRow,Int32)
- uid: System.Data.DataRowCollection.Item(System.Int32)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataRowCollection.Item(Int32)
  fullName: System.Data.DataRowCollection.Item(Int32)
- uid: System.Data.DataRowCollection.Remove(System.Data.DataRow)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Remove(DataRow)
  nameWithType: DataRowCollection.Remove(DataRow)
  fullName: System.Data.DataRowCollection.Remove(DataRow)
- uid: System.Data.DataRowCollection.RemoveAt(System.Int32)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: DataRowCollection.RemoveAt(Int32)
  fullName: System.Data.DataRowCollection.RemoveAt(Int32)
- uid: System.Data.DataRowCollection.Add*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Add
  nameWithType: DataRowCollection.Add
- uid: System.Data.DataRowCollection.Clear*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Clear
  nameWithType: DataRowCollection.Clear
- uid: System.Data.DataRowCollection.Contains*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Contains
  nameWithType: DataRowCollection.Contains
- uid: System.Data.DataRowCollection.CopyTo*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataRowCollection.CopyTo
- uid: System.Data.DataRowCollection.Count*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Count
  nameWithType: DataRowCollection.Count
- uid: System.Data.DataRowCollection.Find*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Find
  nameWithType: DataRowCollection.Find
- uid: System.Data.DataRowCollection.GetEnumerator*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: DataRowCollection.GetEnumerator
- uid: System.Data.DataRowCollection.IndexOf*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: IndexOf
  nameWithType: DataRowCollection.IndexOf
- uid: System.Data.DataRowCollection.InsertAt*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: InsertAt
  nameWithType: DataRowCollection.InsertAt
- uid: System.Data.DataRowCollection.Item*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Item
  nameWithType: DataRowCollection.Item
- uid: System.Data.DataRowCollection.Remove*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Remove
  nameWithType: DataRowCollection.Remove
- uid: System.Data.DataRowCollection.RemoveAt*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: RemoveAt
  nameWithType: DataRowCollection.RemoveAt
