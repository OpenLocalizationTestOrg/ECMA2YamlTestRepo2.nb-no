### YamlMime:ManagedReference
items:
- uid: System.Web.Script.Serialization.JavaScriptSerializer
  id: JavaScriptSerializer
  children:
  - System.Web.Script.Serialization.JavaScriptSerializer.#ctor
  - System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)
  - System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)
  - System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)
  - System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)
  - System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)
  - System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)
  - System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
  - System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
  - System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})
  - System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)
  - System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)
  langs:
  - csharp
  name: JavaScriptSerializer
  nameWithType: JavaScriptSerializer
  fullName: System.Web.Script.Serialization.JavaScriptSerializer
  type: Class
  summary: '[Json.NET](http://www.newtonsoft.com/json) må være brukte serialisering og deserialisering. Gir serialiseringen og Deserialiseringen funksjonaliteten for AJAX-aktiverte programmer.'
  remarks: "The JavaScriptSerializer class is used internally by the asynchronous communication layer to serialize and deserialize the data that is passed between the browser and the Web server. You cannot access that instance of the serializer. However, this class exposes a public API. Therefore, you can use the class when you want to work with JavaScript Object Notation (JSON) in managed code.  \n  \n To serialize an object, use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> method. To deserialize a JSON string, use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> or <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> methods. To serialize and deserialize types that are not natively supported by JavaScriptSerializer, implement custom converters by using the <xref:System.Web.Script.Serialization.JavaScriptConverter> class. Then register the converters by using the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method.  \n  \n## Mapping Between Managed Types and JSON  \n The following table shows the mapping between managed types and JSON for the serialization process. These managed types are natively supported by JavaScriptSerializer. When you are deserializing from a JSON string to a managed type, the same mapping applies. However, deserialization can be asymmetric; not all serializable managed types can be deserialized from JSON.  \n  \n> [!NOTE]\n>  A multidimensional array is serialized as a one-dimensional array, and you should use it as a flat array.  \n  \n|Managed type|JSON equivalent|  \n|------------------|---------------------|  \n|<xref:System.String> (UTF-8 encoding only).|String|  \n|<xref:System.Char>|String|  \n|Single null char (such as, \\0 )|Null|  \n|<xref:System.Boolean>|Boolean. Represented in JSON as `true` or `false`|  \n|`null` (`null` object references and <xref:System.Nullable> value types).|A string value of null|  \n|<xref:System.DBNull>|A string value of null|  \n|Primitive numeric (or numeric-compatible) types: <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Double>, and <xref:System.Single>. The culture-invariant string representation is used.|Number|  \n|<xref:System.DateTime>|Date object, represented in JSON as \"\\\\/Date(number of ticks)\\\\/\". The number of ticks is a positive or negative long value that indicates the number of ticks (milliseconds) that have elapsed since midnight 01 January, 1970 UTC.<br /><br /> The maximum supported date value is <xref:System.DateTime.MaxValue> (12/31/9999 11:59:59 PM) and the minimum supported date value is <xref:System.DateTime.MinValue> (1/1/0001 12:00:00 AM).|  \n|Enumerations of integer type|Integer equivalent of the enumeration value|  \n|Types that implement <xref:System.Collections.IEnumerable> or <xref:System.Collections.Generic.IEnumerable%601?displayProperty=fullName> that are not also implementations of <xref:System.Collections.IDictionary> or <xref:System.Collections.Generic.IDictionary%602?displayProperty=fullName>. This includes types such as <xref:System.Array>, <xref:System.Collections.ArrayList>, and <xref:System.Collections.Generic.List%601>.|Array that uses JSON array syntax|  \n|Types that implement <xref:System.Collections.IDictionary> or <xref:System.Collections.Generic.IDictionary%602?displayProperty=fullName>. This includes types such as <xref:System.Collections.Generic.Dictionary%602> and <xref:System.Collections.Hashtable>.|JavaScript object that uses JSON dictionary syntax|  \n|Custom concrete (non-abstract) types that have public instance properties that have get accessors or public instance fields.<br /><br /> Note that public write-only properties, public property or public field attributes marked with <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>, and public indexed properties in these types are ignored.|JavaScript object that uses JSON dictionary syntax. A special metadata property named \"__type\" is included to ensure correct deserialization. Make sure that public instance properties have get and set accessors to ensure correct deserialization.|  \n|<xref:System.Guid>|String representation of a GUID|  \n|<xref:System.Uri>|String representation of the return value of <xref:System.Uri.GetComponents%2A>|"
  example:
  - "The first example provides a simple illustration of how to serialize and deserialize data objects. It requires a class names Person which is shown below.  \n  \n [!code-cs[System.Web.Script.Serialization.JavaScriptSerializer#1](~/add/codesnippet/csharp/t-system.web.script.seri_1_1.cs)]\n [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#1](~/add/codesnippet/visualbasic/t-system.web.script.seri_1_1.vb)]  \n  \n [!code-cs[System.Web.Script.Serialization.JavaScriptSerializer#2](~/add/codesnippet/csharp/t-system.web.script.seri_1_2.cs)]\n [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#2](~/add/codesnippet/visualbasic/t-system.web.script.seri_1_2.vb)]  \n  \n The next example shows a more complicated and complete project that uses the JavaScriptSerializer class to save and restore the state of an object by using JSON serialization. This code uses a custom converter that is provided for the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.  \n  \n [!code-vb[System.Web.Script.Serialization#4](~/add/codesnippet/visualbasic/t-system.web.script.seri_1_3.aspx)]\n [!code-cs[System.Web.Script.Serialization#4](~/add/codesnippet/csharp/t-system.web.script.seri_1_3.aspx)]"
  syntax:
    content: public class JavaScriptSerializer
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor
  id: '#ctor'
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: JavaScriptSerializer()
  nameWithType: JavaScriptSerializer.JavaScriptSerializer()
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> klasse som ikke har ingen type-Løsningsprogram."
  remarks: "En forekomst av den <xref:System.Web.Script.Serialization.JavaScriptSerializer>klasse uten et type-Løsningsprogram ikke omfatter metadata for typeegenskaper (navnet &quot;__type&quot;) i serialisert JSON-strengen.</xref:System.Web.Script.Serialization.JavaScriptSerializer> En type metadataegenskapen brukes av den <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>og <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A>metoder for å bestemme den aktuelle administrerte typen til JSON-strengen skal konverteres.</xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> Du finner informasjon om typen omgjørere i <xref:System.Web.Script.Serialization.JavaScriptTypeResolver>klasse.</xref:System.Web.Script.Serialization.JavaScriptTypeResolver>"
  syntax:
    content: public JavaScriptSerializer ();
    parameters: []
  overload: System.Web.Script.Serialization.JavaScriptSerializer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)
  id: '#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)'
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: JavaScriptSerializer(JavaScriptTypeResolver)
  nameWithType: JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> klasse som ikke har et egendefinert type-Løsningsprogram."
  remarks: "Når den er serialisering av et objekt av <xref:System.Web.Script.Serialization.JavaScriptSerializer>klasse bruker den `resolver` parameter for å fastsette riktig verdi skal tas med i den serialiserte JSON-strengen for egenskapen type metadata (&quot;__type&quot;).</xref:System.Web.Script.Serialization.JavaScriptSerializer> På samme måte, når den <xref:System.Web.Script.Serialization.JavaScriptSerializer>klassen er deserialisering av et JSON-streng, den løser typeverdi for metadata-egenskapen til den aktuelle administrerte typen ved bruk av Løsningsprogrammet-forekomsten.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       Du kan angi den `resolver` parameter `null`, som tilsvarer kaller den <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A>konstruktør.</xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A>       Forekomsten av <xref:System.Web.Script.Serialization.JavaScriptSerializer>som brukes av asynkron kommunikasjonslaget for aktivering av webtjenester fra klienten skriptet bruker et bestemt type-Løsningsprogram.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Denne typen Løsningsprogrammet begrenser typer som kan deserialiseres definert i tjenesten Web Metodesignaturen eller de som har den <xref:System.Web.Script.Services.GenerateScriptTypeAttribute>brukes.</xref:System.Web.Script.Services.GenerateScriptTypeAttribute> Du kan ikke endre denne innebygd type Løsningsprogrammet programmatisk.      > [!IMPORTANT] > Med en forekomst av dette objektet initialisert med et egendefinert type-Løsningsprogram kan utgjøre en risiko. Bruk dette objektet bare med klarert. Hvis du vil ha mer informasjon, se [uklarerte Data sikkerhetsrisiko](http://go.microsoft.com/fwlink/?LinkId=330378)."
  syntax:
    content: public JavaScriptSerializer (System.Web.Script.Serialization.JavaScriptTypeResolver resolver);
    parameters:
    - id: resolver
      type: System.Web.Script.Serialization.JavaScriptTypeResolver
      description: "Egendefinerte type-Løsningsprogram-objekt."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)
  id: ConvertToType(System.Object,System.Type)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: ConvertToType(Object,Type)
  nameWithType: JavaScriptSerializer.ConvertToType(Object,Type)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object,Type)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Konverterer det angitte objektet til den angitte typen."
  remarks: "Når den <xref:System.Web.Script.Serialization.JavaScriptSerializer>forekomsten er serialisering av en type som et egendefinert konverteringsprogram er registrert, kall serialisering av <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>metode for å hente ordliste for navn/verdi-parene som blir konvertert til en streng som JSON-formatert.</xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer>       Den <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>metoden også throw unntak hvis diagrammet objektet er for kompleks, eller hvis registrert forekomster av <xref:System.Web.Script.Serialization.JavaScriptConverter>har forårsaket konverteringsprogram rekursjon.</xref:System.Web.Script.Serialization.JavaScriptConverter> </xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>"
  syntax:
    content: public object ConvertToType (object obj, Type targetType);
    parameters:
    - id: obj
      type: System.Object
      description: "Objektet som skal konverteres."
    - id: targetType
      type: System.Type
      description: "Typen konvertere til."
    return:
      type: System.Object
      description: "Den serialiserte JSON-strengen."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "JSON-formatert Resultatstrengen overskrider verdien av <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.</xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>       - eller - <code> obj </code> inneholder en sirkelreferanse. En sirkelreferanse oppstår når et underordnet objekt har en referanse til et overordnet objekt, og det overordnede objektet har en referanse til det underordnede objektet."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Rekursjon grensen som er definert av <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>ble overskredet.</xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>"
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)
  id: ConvertToType``1(System.Object)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: ConvertToType(Object)
  nameWithType: JavaScriptSerializer.ConvertToType(Object)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  syntax:
    content: public T ConvertToType<T> (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Som skal legges til."
    return:
      type: T
      description: "Som skal legges til."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)
  id: Deserialize(System.String,System.Type)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: Deserialize(String,Type)
  nameWithType: JavaScriptSerializer.Deserialize(String,Type)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String,Type)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Konverterer JSON-formatert til et objekt av den angitte typen."
  remarks: "Denne metoden for deserialisering ikke prøver å endre roten av objektet diagrammet til en spesifikk type, på samme måte som den <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>metoden samsvarer.</xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>"
  syntax:
    content: public object Deserialize (string input, Type targetType);
    parameters:
    - id: input
      type: System.String
      description: "JSON-strengen deserialisering."
    - id: targetType
      type: System.Type
      description: "Objekttypen den resulterende."
    return:
      type: System.Object
      description: "Deserialisert objektet."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Lengden på <code> input </code> overskrider verdien av <> </> *>.       - eller - rekursjon grensen som er definert av <> </> *> ble overskredet.       - eller - <code> input </code> inneholder et uventet tegnsekvensen.       - eller - <code> input </code> er en ordliste og verdien for en ikke-streng ble oppdaget.       - eller - <code> input </code> inneholder definisjoner for medlem som ikke er tilgjengelig på måltypen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>input</code>inneholder en &quot;__type&quot;-egenskap som angir en egendefinert type, men av typen løseren som er knyttet til serialiseringen ikke finner en tilsvarende behandlede typen.       - eller - <code>input</code> inneholder en &quot;__type&quot;-egenskap som angir en egendefinert type, men resultatet av deserialisering av den tilsvarende JSON-strengen ikke kan tilordnes til den forventede måltypen.       - eller - <code>input</code> inneholder en &quot;__type&quot;-egenskap som angir enten <xref:System.Object> eller ikke instantiable av typen (for eksempel en abstrakt type eller et grensesnitt).       - eller - ble gjort forsøk på å konvertere en JSON-matrise til en matrise som behandlede typen som ikke støttes for bruk som et JSON deserialisering mål.       - eller - det er ikke mulig å konvertere <code>input</code> til måltypen."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)
  id: Deserialize``1(System.String)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: Deserialize(String)
  nameWithType: JavaScriptSerializer.Deserialize(String)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  syntax:
    content: public T Deserialize<T> (string input);
    parameters:
    - id: input
      type: System.String
      description: "Som skal legges til."
    return:
      type: T
      description: "Som skal legges til."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)
  id: DeserializeObject(System.String)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: DeserializeObject(String)
  nameWithType: JavaScriptSerializer.DeserializeObject(String)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Konverterer den angitte JSON-strengen til en."
  remarks: "Denne metoden for deserialisering ikke prøver å endre roten av objektet diagrammet til en spesifikk type som med den <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>metoden.</xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>"
  syntax:
    content: public object DeserializeObject (string input);
    parameters:
    - id: input
      type: System.String
      description: "JSON-strengen deserialiseres."
    return:
      type: System.Object
      description: "Deserialisert objektet."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> input </code> lengden overstiger verdien for <> </> *>.       - eller - rekursjon grensen som er definert av <> </> *> ble overskredet.       - eller - <code> input </code> inneholder et uventet tegnsekvensen.       - eller - <code> input </code> er en ordliste og verdien for en ikke-streng ble oppdaget.       - eller - <code> input </code> inneholder definisjoner for medlem som ikke er tilgjengelig på måltypen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>input</code>inneholder en &quot;__type&quot;-egenskap som angir en egendefinert type, men av typen løseren som er knyttet til serialiseringen ikke finner en tilsvarende behandlede typen.       - eller - <code>input</code> inneholder en &quot;__type&quot;-egenskap som angir en egendefinert type, men resultatet av deserialisering av den tilsvarende JSON-strengen ikke kan tilordnes til den forventede måltypen.       - eller - <code>input</code> inneholder en &quot;__type&quot;-egenskap som angir enten <xref:System.Object> eller ikke instantiable av typen (for eksempel en abstrakt type eller et grensesnitt).       - eller - ble gjort forsøk på å konvertere en JSON-matrise til en matrise som behandlede typen som ikke støttes for bruk som et JSON deserialisering mål.       - eller - det er ikke mulig å konvertere <code>input</code> til måltypen."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
  id: MaxJsonLength
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: MaxJsonLength
  nameWithType: JavaScriptSerializer.MaxJsonLength
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Henter eller angir den maksimale lengden på JSON-strenger som godtas av den <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> klasse."
  remarks: 'Verdien for egenskapen MaxJsonLength gjelder bare når du eksplisitt opprette en forekomst av <xref:System.Web.Script.Serialization.JavaScriptSerializer>klassen.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Bruk av `jsonSerialization` elementet i konfigurasjonsfilen for å angi den maksimale lengden for intern serialisering-forekomsten som brukes av asynkron kommunikasjonslaget. Du finner mer informasjon om konfigurasjon-elementer for serialisering [slik: Konfigurer ASP.NET-tjenester i Microsoft Ajax](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public int MaxJsonLength { get; set; }
    return:
      type: System.Int32
      description: "Den maksimale lengden av strenger for JSON. Standard er 2097152 tegn, som tilsvarer 4 MB datamengder Unicode-streng."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Egenskapen er satt til en verdi som er mindre enn&1;."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
  id: RecursionLimit
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: RecursionLimit
  nameWithType: JavaScriptSerializer.RecursionLimit
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Henter eller angir grensen for å sette en betingelse antallet nivåer som objektet til å behandle."
  remarks: "Egenskapen RecursionLimit refererer til antallet nivåer i objekthierarkiet som <xref:System.Web.Script.Serialization.JavaScriptSerializer>behandler i følgende situasjoner: – når den <xref:System.Web.Script.Serialization.JavaScriptSerializer>klassen er deserialisering av et JSON-streng.</xref:System.Web.Script.Serialization.JavaScriptSerializer> </xref:System.Web.Script.Serialization.JavaScriptSerializer>      -Når den <xref:System.Web.Script.Serialization.JavaScriptSerializer>klassen går en under serialisering.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       Verdien for RecursionLimit gjelder bare når du eksplisitt opprette en forekomst av <xref:System.Web.Script.Serialization.JavaScriptSerializer>klassen.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Bruk av `jsonSerialization` elementet i konfigurasjonsfilen for å angi antallet for objektet som skal behandles for den interne serialisering-forekomsten som brukes av asynkron kommunikasjonslaget. Du finner mer informasjon om konfigurasjon-elementer for serialisering [slik: Konfigurer ASP.NET-tjenester i Microsoft Ajax](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public int RecursionLimit { get; set; }
    return:
      type: System.Int32
      description: "Antall nivåer for objektet. Standarden er 100."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Egenskapen er satt til en verdi som er mindre enn&1;."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})
  id: RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: RegisterConverters(IEnumerable<JavaScriptConverter>)
  nameWithType: JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Registrerer en egendefinert konverteringsprogram med den <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> forekomsten."
  remarks: "Du kan registrere en eller flere egendefinerte konverteringsprogrammer med en <xref:System.Web.Script.Serialization.JavaScriptSerializer>forekomst ved hjelp av metoden RegisterConverters.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Når egendefinerte konverteringsprogrammer er registrert, <xref:System.Web.Script.Serialization.JavaScriptSerializer>bruker konverteringsprogrammene til å serialisere forvaltede typer og ikke deserialisere JSON strenger til administrerte typer.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       Flere konverteringsprogrammer kan registreres med samme <xref:System.Web.Script.Serialization.JavaScriptSerializer>forekomsten, og disse konverteringsprogrammer kan angi støtte for samme type.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Resultatet er den siste konverteringen som er registrert for en bestemt som skal brukes av <xref:System.Web.Script.Serialization.JavaScriptSerializer>til å serialisere typen.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       Hvis du vil ha mer informasjon om egendefinerte konverteringsprogrammer, kan du se <xref:System.Web.Script.Serialization.JavaScriptConverter>klasse.</xref:System.Web.Script.Serialization.JavaScriptConverter>"
  example:
  - "The following example shows how to register a custom converter with a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance. This code example is part of a larger example provided for the <xref:System.Web.Script.Serialization.JavaScriptSerializer>class.  \n  \n [!code-vb[System.Web.Script.Serialization#1](~/add/codesnippet/visualbasic/0b038c1f-1fc5-4957-9daf-_1.aspx)]\n [!code-cs[System.Web.Script.Serialization#1](~/add/codesnippet/csharp/0b038c1f-1fc5-4957-9daf-_1.aspx)]"
  syntax:
    content: public void RegisterConverters (System.Collections.Generic.IEnumerable<System.Web.Script.Serialization.JavaScriptConverter> converters);
    parameters:
    - id: converters
      type: System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter}
      description: "En matrise som inneholder de egendefinerte konverteringsprogrammene som skal registreres."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>converters</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)
  id: Serialize(System.Object)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: Serialize(Object)
  nameWithType: JavaScriptSerializer.Serialize(Object)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Konverterer et objekt til en JSON-streng."
  remarks: "Når den <xref:System.Web.Script.Serialization.JavaScriptSerializer>forekomsten er serialisering av en type som et egendefinert konverteringsprogram er registrert, kall serialisering av <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>metode for å hente ordliste for navn/verdi-parene som blir konvertert til en JSON-streng.</xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer>       Metoden serialisert kan også throw unntak hvis diagrammet objektet er for kompleks, eller hvis registrert forekomster av <xref:System.Web.Script.Serialization.JavaScriptConverter>har forårsaket konverteringsprogram rekursjon.</xref:System.Web.Script.Serialization.JavaScriptConverter>"
  example:
  - "The following example provides a simple illustration of how to serialize and deserialize data objects. It requires a class names Person which is shown below.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string Serialize (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Objektet til å serialisere."
    return:
      type: System.String
      description: "Den serialiserte JSON-strengen."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.Serialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "JSON-Resultatstrengen overskrider verdien av <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.</xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>       - eller - <code> obj </code> inneholder en sirkelreferanse. En sirkelreferanse oppstår når et underordnet objekt har en referanse til et overordnet objekt, og det overordnede objektet har en referanse til det underordnede objektet."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Rekursjon grensen som er definert av <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>ble overskredet.</xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>"
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)
  id: Serialize(System.Object,System.Text.StringBuilder)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: Serialize(Object,StringBuilder)
  nameWithType: JavaScriptSerializer.Serialize(Object,StringBuilder)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object,StringBuilder)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Serializes et objekt og skriver Resultatstrengen JSON til den angitte <xref:System.Text.StringBuilder>objektet.</xref:System.Text.StringBuilder>"
  remarks: "Når den <xref:System.Web.Script.Serialization.JavaScriptSerializer>forekomsten er serialisering av en type som et egendefinert konverteringsprogram er registrert, kall serialisering av <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>metode for å hente ordliste for navn/verdi-parene som blir konvertert til en JSON-streng.</xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer>       Den <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>metoden også throw unntak hvis diagrammet objektet er for kompleks, eller hvis registrert forekomster av <xref:System.Web.Script.Serialization.JavaScriptConverter>har forårsaket konverteringsprogram rekursjon.</xref:System.Web.Script.Serialization.JavaScriptConverter> </xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>"
  syntax:
    content: public void Serialize (object obj, System.Text.StringBuilder output);
    parameters:
    - id: obj
      type: System.Object
      description: "Objektet til å serialisere."
    - id: output
      type: System.Text.StringBuilder
      description: "Den <xref:System.Text.StringBuilder>objektet som brukes til å skrive JSON-streng.</xref:System.Text.StringBuilder>"
  overload: System.Web.Script.Serialization.JavaScriptSerializer.Serialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "JSON-Resultatstrengen overskrider verdien av <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.</xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>       - eller - <code> obj </code> inneholder en sirkelreferanse. En sirkelreferanse oppstår når et underordnet objekt har en referanse til et overordnet objekt, og det overordnede objektet har en referanse til det underordnede objektet."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Rekursjon grensen som er definert av <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>ble overskredet.</xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>output</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: JavaScriptSerializer()
  nameWithType: JavaScriptSerializer.JavaScriptSerializer()
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer()
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: JavaScriptSerializer(JavaScriptTypeResolver)
  nameWithType: JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver
  parent: System.Web.Script.Serialization
  isExternal: false
  name: JavaScriptTypeResolver
  nameWithType: JavaScriptTypeResolver
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: ConvertToType(Object,Type)
  nameWithType: JavaScriptSerializer.ConvertToType(Object,Type)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: ConvertToType(Object)
  nameWithType: JavaScriptSerializer.ConvertToType(Object)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Deserialize(String,Type)
  nameWithType: JavaScriptSerializer.Deserialize(String,Type)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String,Type)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Deserialize(String)
  nameWithType: JavaScriptSerializer.Deserialize(String)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String)
- uid: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: DeserializeObject(String)
  nameWithType: JavaScriptSerializer.DeserializeObject(String)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(String)
- uid: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: MaxJsonLength
  nameWithType: JavaScriptSerializer.MaxJsonLength
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: RecursionLimit
  nameWithType: JavaScriptSerializer.RecursionLimit
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: RegisterConverters(IEnumerable<JavaScriptConverter>)
  nameWithType: JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)
- uid: System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<JavaScriptConverter>
  nameWithType: IEnumerable<JavaScriptConverter>
  fullName: System.Collections.Generic.IEnumerable<System.Web.Script.Serialization.JavaScriptConverter>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Web.Script.Serialization.JavaScriptConverter>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.Script.Serialization.JavaScriptConverter
    name: JavaScriptConverter
    nameWithType: JavaScriptConverter
    fullName: JavaScriptConverter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Serialize(Object)
  nameWithType: JavaScriptSerializer.Serialize(Object)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object)
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Serialize(Object,StringBuilder)
  nameWithType: JavaScriptSerializer.Serialize(Object,StringBuilder)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object,StringBuilder)
- uid: System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: JavaScriptSerializer
  nameWithType: JavaScriptSerializer.JavaScriptSerializer
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: ConvertToType
  nameWithType: JavaScriptSerializer.ConvertToType
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType<T>*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: ConvertToType<T>
  nameWithType: JavaScriptSerializer.ConvertToType<T>
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Deserialize
  nameWithType: JavaScriptSerializer.Deserialize
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize<T>*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Deserialize<T>
  nameWithType: JavaScriptSerializer.Deserialize<T>
- uid: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: DeserializeObject
  nameWithType: JavaScriptSerializer.DeserializeObject
- uid: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: MaxJsonLength
  nameWithType: JavaScriptSerializer.MaxJsonLength
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: RecursionLimit
  nameWithType: JavaScriptSerializer.RecursionLimit
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: RegisterConverters
  nameWithType: JavaScriptSerializer.RegisterConverters
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Serialize
  nameWithType: JavaScriptSerializer.Serialize
