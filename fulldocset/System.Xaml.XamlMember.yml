### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlMember
  id: XamlMember
  children:
  - System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  - System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)
  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  - System.Xaml.XamlMember.DeclaringType
  - System.Xaml.XamlMember.DeferringLoader
  - System.Xaml.XamlMember.DependsOn
  - System.Xaml.XamlMember.Equals(System.Object)
  - System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)
  - System.Xaml.XamlMember.GetHashCode
  - System.Xaml.XamlMember.GetXamlNamespaces
  - System.Xaml.XamlMember.Invoker
  - System.Xaml.XamlMember.IsAmbient
  - System.Xaml.XamlMember.IsAttachable
  - System.Xaml.XamlMember.IsDirective
  - System.Xaml.XamlMember.IsEvent
  - System.Xaml.XamlMember.IsNameValid
  - System.Xaml.XamlMember.IsReadOnly
  - System.Xaml.XamlMember.IsReadPublic
  - System.Xaml.XamlMember.IsUnknown
  - System.Xaml.XamlMember.IsWriteOnly
  - System.Xaml.XamlMember.IsWritePublic
  - System.Xaml.XamlMember.LookupCustomAttributeProvider
  - System.Xaml.XamlMember.LookupDeferringLoader
  - System.Xaml.XamlMember.LookupDependsOn
  - System.Xaml.XamlMember.LookupInvoker
  - System.Xaml.XamlMember.LookupIsAmbient
  - System.Xaml.XamlMember.LookupIsEvent
  - System.Xaml.XamlMember.LookupIsReadOnly
  - System.Xaml.XamlMember.LookupIsReadPublic
  - System.Xaml.XamlMember.LookupIsUnknown
  - System.Xaml.XamlMember.LookupIsWriteOnly
  - System.Xaml.XamlMember.LookupIsWritePublic
  - System.Xaml.XamlMember.LookupTargetType
  - System.Xaml.XamlMember.LookupType
  - System.Xaml.XamlMember.LookupTypeConverter
  - System.Xaml.XamlMember.LookupUnderlyingGetter
  - System.Xaml.XamlMember.LookupUnderlyingMember
  - System.Xaml.XamlMember.LookupUnderlyingSetter
  - System.Xaml.XamlMember.LookupValueSerializer
  - System.Xaml.XamlMember.Name
  - System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  - System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  - System.Xaml.XamlMember.PreferredXamlNamespace
  - System.Xaml.XamlMember.SerializationVisibility
  - System.Xaml.XamlMember.TargetType
  - System.Xaml.XamlMember.ToString
  - System.Xaml.XamlMember.Type
  - System.Xaml.XamlMember.TypeConverter
  - System.Xaml.XamlMember.UnderlyingMember
  - System.Xaml.XamlMember.ValueSerializer
  langs:
  - csharp
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
  type: Class
  summary: "Gir XAML system typeidentifikatoren for medlemmer av XAML typer. Identifikatoren brukes av XAML lesere og XAML skrivere under behandling av medlem noder (når XAML-leseren er plassert på en <xref href=&quot;System.Xaml.XamlNodeType&quot;> </xref>) og også for generell XAML typen logikken."
  remarks: "XamlMember kan bruke tre metoder for å returnere informasjon om medlem XAML: standard common language runtime (CLR) gjenspeiling; en bare referanse gjenspeiling metode kaller intern APIene som Bruk optimalisert-biters flagg; eller kaller til virtuelle overstyrer av den `Lookup*` API som tilbys av mulig XamlMember underklasser. For de fleste brukere av .NET Framework XAML Services API-er og XamlMember-API, kan du bruke standard XAML skjemaet konteksten. Standard XAML skjemaet konteksten for .NET Framework XAML Services bruker sikkerhetskopiering for typen system CLR. Dette aktiverer XAML lesere og XAML forfattere du arbeider med en annen type eller medlem som er definert i, eller hvis tilgjengelige, CLR og de gjenspeiling teknikkene.      ## Oppslag * API-er og XamlMember avledede klasser XamlMember definerer flere virtuelle medlemmer som avledede klasser kan overstyre. Disse medlemmene har navn som begynner alltid med strengen `Lookup`. Resten av API navn deretter referanser egenskapen metoden virtuelle påvirker. For eksempel kan en XamlMember avledet klasse overstyre <xref:System.Xaml.XamlMember.LookupTargetType%2A>å påvirke hvilke av base brukerdefinert egenskapen <xref:System.Xaml.XamlMember.TargetType%2A>returnerer i en avledet klasse.</xref:System.Xaml.XamlMember.TargetType%2A> </xref:System.Xaml.XamlMember.LookupTargetType%2A> Du kan forutse returverdier for slike egenskaper i XamlMember eller eksisterende avledede klasser ved å lese i dokumentasjonen for den aktuelle `Lookup*` metoder.       Formålet med den `Lookup*` metoder er å gi en XAML typen system utvidelsen-metode som omfatter XamlMember basisklassen. Avledes fra XamlMember og overstyrer den `Lookup` virtuelle medlemmer, kan du definere uttrykket medlem XAML for XAML skjema i et XAML typen system uten er knyttet til detaljer om sikkerhetskopiering typen system eller teknologi. Du kan også bruke en angitt XAML skjemaet kontekst under denne planen og returnere fortsatt de ønskede resultatene.       For eksempel Vurder egenskapen XamlMember <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</xref:System.Xaml.XamlMember.IsWritePublic%2A> Denne egenskapen informerer brukere som operasjoner, for eksempel ved hjelp av en <xref:System.Xaml.XamlWriter>for serialisering kan skrive en verdi for dette medlemmet på en målobjektet.</xref:System.Xaml.XamlWriter> Standard-implementering gjøres fastsettelse om medlemmet er skrivbar via gjenspeiling teknikker mot sikkerhetskopiering CLR <xref:System.Type>og medlemmene (den <xref:System.Reflection.MemberInfo>).</xref:System.Reflection.MemberInfo> </xref:System.Type> Derfor som standard avhenger XAML typen systemet av systemet for CLR-typen. Du kan imidlertid fjerne denne avhengigheten for din XAML typen system rapportering av <xref:System.Xaml.XamlMember.IsWritePublic%2A>ved å overstyre API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>.</xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> </xref:System.Xaml.XamlMember.IsWritePublic%2A> Du kan bruke andre fastsettelser, for eksempel metadata som er spesifikk for din teknologi, en master oppslagstabell som er optimalisert for en fast XAML ordforråd eller en rekke andre strategier for å fastslå om medlem XAML er skrivbar i vokabularet XAML i override.      ## Konstruksjon XamlMember uten XAML skjemaet konteksten mest konstruktører for XamlMember krever en <xref:System.Xaml.XamlSchemaContext>som en del av deres initialisering.</xref:System.Xaml.XamlSchemaContext> Den <xref:System.Xaml.XamlSchemaContext>kreves også for mange intern <xref:System.Xaml.XamlSchemaContext>operasjoner, for eksempel henting av informasjon som videresendes fra typen sikkerhetskopiering.</xref:System.Xaml.XamlSchemaContext> </xref:System.Xaml.XamlSchemaContext> Når du jobber med XamlMember-API, vanligvis har en <xref:System.Xaml.XamlSchemaContext>som er tilgjengelig fra en omkringliggende konstruksjon som <xref:System.Xaml.XamlWriter>.</xref:System.Xaml.XamlWriter> </xref:System.Xaml.XamlSchemaContext> I dette tilfellet kan du sende den <xref:System.Xaml.XamlSchemaContext>referere til alle XAML typen system kaller som krever en XAML skjemaet kontekst.</xref:System.Xaml.XamlSchemaContext>       En bestemt konstruktør, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>krever ikke <xref:System.Xaml.XamlSchemaContext>.</xref:System.Xaml.XamlSchemaContext> </xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> Imidlertid en XamlMember konstruert med de <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>signatur returnerer `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>       For en Last inn bane som involverer <xref:System.Xaml.XamlObjectWriter>, slikt medlem kan ikke skrive til en.</xref:System.Xaml.XamlObjectWriter> Ved hjelp av .NET Framework XAML services implementeringen av <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>kall kaster en <xref:System.Xaml.XamlObjectWriterException>når den relevante XamlMember rapporter `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlObjectWriterException> </xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>       Du kan ikke konstruere XamlMember som har en `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>Hvis implementeringen din kan håndtere unntak fra <xref:System.Xaml.XamlObjectWriter>, eller du har andre måter å justere den <xref:System.Xaml.XamlObjectWriter>virkemåte.</xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlMember.IsUnknown%2A> For eksempel én eller flere av følgende kan være true i implementeringen:-egenskapen XAML skjemaet kontekst er tilgjengelig senere.      -Du bruke et mønster for medlemmet anroperen.      -Du med hensikt overstyre <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>i en egendefinert XAML-skriveren.</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>"
  syntax:
    content: 'public class XamlMember : IEquatable<System.Xaml.XamlMember>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Xaml.XamlMember>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(EventInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klasse ved hjelp av CLR-typen system <xref:System.Reflection.EventInfo>og en <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>.</xref:System.Reflection.EventInfo>"
  remarks: "Bruk denne konstruktøren Hvis medlemmet representerer en hendelse (hendelsen behandlingsprogrammet tilkoblingspunktet egenskapen)."
  syntax:
    content: public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: eventInfo
      type: System.Reflection.EventInfo
      description: "CLR-typen systemet <xref:System.Reflection.EventInfo>som representerer medlemmet hendelsen.</xref:System.Reflection.EventInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "Den <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> sammenheng som kvalifiserer medlemmet."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(PropertyInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klasse ved hjelp av CLR-typen system <xref:System.Reflection.PropertyInfo>og en <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>.</xref:System.Reflection.PropertyInfo>"
  remarks: "Bruk denne konstruktøren Hvis medlemmet representerer en egenskap (og spesifikt er ikke koblet til denne hendelsen behandlingsprogram)."
  syntax:
    content: public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: propertyInfo
      type: System.Reflection.PropertyInfo
      description: "CLR-typen systemet <xref:System.Reflection.PropertyInfo>som representerer egenskapsmedlemmet.</xref:System.Reflection.PropertyInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "Den <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> sammenheng som kvalifiserer medlemmet."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  id: '#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klasse ved hjelp av CLR-typen system <xref:System.Reflection.EventInfo>og en <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>, inkludert <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> informasjon.</xref:System.Reflection.EventInfo>"
  remarks: "Bruk denne konstruktøren Hvis medlemmet representerer en hendelse (eller en hendelse behandlingsprogrammet tilkoblingspunktet egenskap)."
  syntax:
    content: public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);
    parameters:
    - id: eventInfo
      type: System.Reflection.EventInfo
      description: "CLR-typen systemet <xref:System.Reflection.EventInfo>som representerer medlemmet hendelsen.</xref:System.Reflection.EventInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "Den <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> sammenheng som kvalifiserer medlemmet."
    - id: invoker
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "Den <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> implementering som behandler kjøretid gjenspeiling kaller mot den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  id: '#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klasse ved hjelp av gjenspeiling <xref:System.Reflection.PropertyInfo>og en <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>, inkludert <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> informasjon.</xref:System.Reflection.PropertyInfo>"
  remarks: "Bruk denne konstruktøren Hvis medlemmet representerer en egenskap, og hvis det ikke er en hendelse behandlingsprogrammet tilkobling."
  syntax:
    content: public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);
    parameters:
    - id: propertyInfo
      type: System.Reflection.PropertyInfo
      description: "CLR-typen systemet <xref:System.Reflection.PropertyInfo>som representerer egenskapsmedlemmet.</xref:System.Reflection.PropertyInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "Den <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> sammenheng som kvalifiserer medlemmet."
    - id: invoker
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "Den <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> implementering som behandler kjøretid aktivering kaller mot den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,MethodInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klasse en <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> som representerer en kan legges ved hendelse."
  remarks: "Bruk denne konstruktøren Hvis medlemmet representerer et medlem som kan legges ved hendelser."
  syntax:
    content: public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: attachableEventName
      type: System.String
      description: "Streng-navnet på kan legges ved hendelsen."
    - id: adder
      type: System.Reflection.MethodInfo
      description: "CLR-typen systemet <xref:System.Reflection.MethodInfo>for behandlingsprogrammet <xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;> </xref> -metoden til medlemmet kan legges ved sikkerhetskopiering for implementering.</xref:System.Reflection.MethodInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "Den <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> sammenheng som kvalifiserer medlemmet."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)
  id: '#ctor(System.String,System.Xaml.XamlType,System.Boolean)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,XamlType,Boolean)
  nameWithType: XamlMember.XamlMember(String,XamlType,Boolean)
  fullName: System.Xaml.XamlMember.XamlMember(String,XamlType,Boolean)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klasse ved hjelp av et navn på tilkoblingsstrengen og deklarerer <xref href=&quot;System.Xaml.XamlType&quot;> </xref> informasjon. En <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> som er laget med denne signaturen har betydelige begrensninger; se kommentarer."
  remarks: "En <xref:System.Xaml.XamlMember>som bygges med XamlMember signatur returnerer `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember>       For en Last inn bane som involverer <xref:System.Xaml.XamlObjectWriter>, slikt medlem kan ikke skrive til en.</xref:System.Xaml.XamlObjectWriter> Ved hjelp av .NET Framework XAML Services-implementering av <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>kall kaster en <xref:System.Xaml.XamlObjectWriterException>når den aktuelle <xref:System.Xaml.XamlMember>rapporter `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlObjectWriterException> </xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>       Du kan ikke konstruere et <xref:System.Xaml.XamlMember>med <xref:System.Xaml.XamlMember.IsUnknown%2A> `true` med mindre implementeringen din kan håndtere unntak fra <xref:System.Xaml.XamlObjectWriter>, eller du har andre måter å justere den <xref:System.Xaml.XamlObjectWriter>virkemåte.</xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember> For eksempel én eller flere av følgende kan være true i implementeringen:-egenskapen XAML skjemaet kontekst er tilgjengelig senere.      -Du bruke et mønster for medlemmet anroperen.      -Du med hensikt overstyre <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>i en egendefinert XAML-skriveren.</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>"
  syntax:
    content: public XamlMember (string name, System.Xaml.XamlType declaringType, bool isAttachable);
    parameters:
    - id: name
      type: System.String
      description: "Streng-navnet for medlemmet."
    - id: declaringType
      type: System.Xaml.XamlType
      description: "Den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> informasjon for den deklarerende typen."
    - id: isAttachable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>som viser at medlemmet kan legges ved; Ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>or <code>declaringType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klasse en <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> som representerer en kan legges ved egenskap."
  remarks: "Bruk denne konstruktøren Hvis medlemmet representerer en kan legges ved egenskap."
  syntax:
    content: public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: attachablePropertyName
      type: System.String
      description: "Streng-navnet på egenskapen kan legges ved."
    - id: getter
      type: System.Reflection.MethodInfo
      description: "CLR-typen systemet <xref:System.Reflection.MethodInfo>for den <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> aksessor for medlem som kan legges ved sikkerhetskopiering for implementering.</xref:System.Reflection.MethodInfo>"
    - id: setter
      type: System.Reflection.MethodInfo
      description: "CLR-typen systemet <xref:System.Reflection.MethodInfo>for den <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> aksessor for medlem som kan legges ved sikkerhetskopiering for implementering.</xref:System.Reflection.MethodInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "Den <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> sammenheng som kvalifiserer medlemmet."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klasse en <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> som representerer en kan legges ved hendelse, inkludert <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> informasjon."
  remarks: "Bruk denne konstruktøren Hvis medlemmet representerer et medlem som kan legges ved hendelser."
  syntax:
    content: public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);
    parameters:
    - id: attachableEventName
      type: System.String
      description: "Streng-navnet på kan legges ved hendelsen."
    - id: adder
      type: System.Reflection.MethodInfo
      description: "CLR-typen systemet <xref:System.Reflection.MethodInfo>for behandlingsprogrammet <xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;> </xref> -metoden til medlemmet kan legges ved sikkerhetskopiering for implementering.</xref:System.Reflection.MethodInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "Den <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> sammenheng som kvalifiserer medlemmet."
    - id: invoker
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "Den <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> implementering som behandler kjøretid aktivering kaller mot den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initialiserer en ny forekomst av den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klasse en <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> som representerer en kan legges ved egenskap, inkludert <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> informasjon."
  remarks: "Bruk denne konstruktøren Hvis medlemmet representerer et kan legges ved egenskapen medlem."
  syntax:
    content: public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);
    parameters:
    - id: attachablePropertyName
      type: System.String
      description: "Streng-navnet på egenskapen kan legges ved."
    - id: getter
      type: System.Reflection.MethodInfo
      description: "CLR-typen systemet <xref:System.Reflection.MethodInfo>for den <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> aksessor for medlem som kan legges ved sikkerhetskopiering for implementering.</xref:System.Reflection.MethodInfo>"
    - id: setter
      type: System.Reflection.MethodInfo
      description: "CLR-typen systemet <xref:System.Reflection.MethodInfo>for den <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> aksessor for medlem som kan legges ved sikkerhetskopiering for implementering.</xref:System.Reflection.MethodInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "Den <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> sammenheng som kvalifiserer medlemmet."
    - id: invoker
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "Den <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> implementering som behandler kjøretid aktivering kaller mot den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.DeclaringType
  id: DeclaringType
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: DeclaringType
  nameWithType: XamlMember.DeclaringType
  fullName: System.Xaml.XamlMember.DeclaringType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> for typen som deklarerer medlemmet som er knyttet til dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Denne verdien settes vanligvis under initialisering og vanligvis ikke `null`.      > [!IMPORTANT] > DeclaringType informasjonen kan sendes i av konstruktører for initialisering. Av kaller direkte til basistabellen konstruktører eller initialisering for <xref:System.Xaml.XamlMember>avledede klasser kan utelate noen verdi-database som er gjort i basistabellen klassen.</xref:System.Xaml.XamlMember> Avledede initialiseringen kan derfor endre rapporterte typemedlemmet Relasjonsinformasjonen for et medlem som XAML slik at det er ikke lenger justert på en måte som forventet til typen system-informasjon for den underliggende CLR-deklareringen. Bruk underliggende CLR-typen i stedet for en security-kritiske kontroll av deklarerer typeinformasjonen."
  syntax:
    content: public System.Xaml.XamlType DeclaringType { get; }
    return:
      type: System.Xaml.XamlType
      description: "Den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> for typen som deklarerer medlemmet som er knyttet til dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.DeferringLoader
  id: DeferringLoader
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: DeferringLoader
  nameWithType: XamlMember.DeferringLoader
  fullName: System.Xaml.XamlMember.DeferringLoader
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; -objektet som brukes for utsatt innlasting av XAML deklarert objekter."
  remarks: "Kaller DeferringLoader aktiverer <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A>eller en bestemt overstyring av denne metoden.</xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> Dette skjer i tilfeller der første intern gjenspeiling logikken ikke har allerede har definert informasjonen."
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> DeferringLoader { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
      description: "En &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; med <xref href=&quot;System.Xaml.XamlDeferringLoader&quot;> </xref> begrensning i generisk."
  overload: System.Xaml.XamlMember.DeferringLoader*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.DependsOn
  id: DependsOn
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: DependsOn
  nameWithType: XamlMember.DependsOn
  fullName: System.Xaml.XamlMember.DependsOn
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en liste over <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objekter. Disse rapporterer medlemmer der for initialisering ordren finnes i forhold til dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Kaller DependsOn aktiverer <xref:System.Xaml.XamlMember.LookupDependsOn%2A>eller en bestemt overstyring av denne metoden.</xref:System.Xaml.XamlMember.LookupDependsOn%2A> Dette skjer i tilfeller der første intern gjenspeiling logikken ikke har allerede har definert informasjonen.       Den `DependsOn` mønsteret kan brukes i objektet modelltilfeller som avviker med hensikt XAML regel. XAML-regel er medlemmer av en type som ikke ble sendt som initialisering tekst (eller av en fabrikken-metoden i XAML 2009) må være kan tilordnes i en rekkefølge. Ved å bruke en `DependsOn` mønsteret til et medlem, kan du angi XAML forfattere til å behandle alltid refererte medlemmet før dette medlemmet. Du kan bruke dette mønsteret i tilfeller der verdien for gjeldende medlem krever kontekst eller annen informasjon som er bare tilgjengelig når det andre medlemmet er angitt.       Den `DependsOn` mønsteret bør brukes Persienner og reservert for egenskapen scenarioer der den har en arkitektur formål. Stort antall avhengigheter har potensielle tregere XAML behandling. Det er også mulig å lage sirkelavhengigheter, da XAML behandling virkemåten er ikke definert.       Eksempel `DependsOn` scenarier fra WPF inkluderer enkelte egenskaper på <xref:System.Windows.Controls.ControlTemplate>og <xref:System.Windows.DataTemplate>, på <xref:System.Windows.Trigger>, og <xref:System.Windows.Setter>.</xref:System.Windows.Setter> </xref:System.Windows.Trigger> </xref:System.Windows.DataTemplate> </xref:System.Windows.Controls.ControlTemplate>"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.XamlMember> DependsOn { get; }
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlMember}
      description: "En liste over <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objekter."
  overload: System.Xaml.XamlMember.DependsOn*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: XamlMember.Equals(Object)
  fullName: System.Xaml.XamlMember.Equals(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Angir om det gjeldende objektet er lik et annet objekt."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Objektet som skal sammenlignes med dette objektet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis det gjeldende objektet er lik den <code> obj </code> parameteren; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)
  id: Equals(System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Equals(XamlMember)
  nameWithType: XamlMember.Equals(XamlMember)
  fullName: System.Xaml.XamlMember.Equals(XamlMember)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Angir om det gjeldende objektet er lik et annet objekt av samme type."
  syntax:
    content: public bool Equals (System.Xaml.XamlMember other);
    parameters:
    - id: other
      type: System.Xaml.XamlMember
      description: "Et objekt som skal sammenlignes med dette objektet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis det gjeldende objektet er lik den <code> other </code> parameteren; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.GetHashCode
  id: GetHashCode
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: XamlMember.GetHashCode()
  fullName: System.Xaml.XamlMember.GetHashCode()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer hashkoden for dette objektet."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Et heltall hash-kode."
  overload: System.Xaml.XamlMember.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.GetXamlNamespaces
  id: GetXamlNamespaces
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: GetXamlNamespaces()
  nameWithType: XamlMember.GetXamlNamespaces()
  fullName: System.Xaml.XamlMember.GetXamlNamespaces()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en liste over XAML navneområder der dette XAML-medlemmet kan finnes."
  remarks: "Standard implementering returnerer <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName>kall resultat <xref:System.Xaml.XamlMember.DeclaringType%2A>som er knyttet til denne <xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlMember.DeclaringType%2A> fra</xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName>"
  syntax:
    content: public virtual System.Collections.Generic.IList<string> GetXamlNamespaces ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "En liste over XAML navneområdet identifikatorer som strenger."
  overload: System.Xaml.XamlMember.GetXamlNamespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Invoker
  id: Invoker
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Invoker
  nameWithType: XamlMember.Invoker
  fullName: System.Xaml.XamlMember.Invoker
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter den <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> implementering som er forbundet med denne <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Den `Invoker` mønsteret er en avansert XAML typen system utvidelsen metode. Den `Invoker` mønsteret gjør det mulig å sende inn virkemåte for forskjellige skjemaet typen tilordning når du bruker fortsatt XAML typedefinisjoner system fra .NET Framework XAML Services.       Hvis en <xref:System.Xaml.XamlMember.LookupInvoker%2A>overstyre returnerer `null`, eller hvis standard implementering returnerer `null` fordi den mangler <xref:System.Xaml.XamlMember.UnderlyingMember%2A>for denne <xref:System.Xaml.XamlMember>returnerer egenskapen anroperen <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName>.</xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> </xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlMember.UnderlyingMember%2A> </xref:System.Xaml.XamlMember.LookupInvoker%2A>       <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName>er standard.</xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> Dette gjelder for de fleste operasjoner som bruker .NET Framework XAML tjenester og standard XAML skjemaet konteksten, og der ingen overstyre `Invoker` mønstrene som er sendt for konstruksjon av XAML typen systemenheter.       Kaller anroperen aktiverer <xref:System.Xaml.XamlMember.LookupInvoker%2A>eller en bestemt overstyring av denne metoden.</xref:System.Xaml.XamlMember.LookupInvoker%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlMemberInvoker Invoker { get; }
    return:
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "Den <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> implementering som er forbundet med denne <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.Invoker*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsAmbient
  id: IsAmbient
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsAmbient
  nameWithType: XamlMember.IsAmbient
  fullName: System.Xaml.XamlMember.IsAmbient
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> rapporteres som en omkringliggende egenskap."
  remarks: "Kaller IsAmbient aktiverer <xref:System.Xaml.XamlMember.LookupIsAmbient%2A>eller en bestemt overstyring av denne metoden.</xref:System.Xaml.XamlMember.LookupIsAmbient%2A> Dette skjer i implementeringer der første intern gjenspeiling logikken ikke har allerede har definert informasjonen.       Kontroll for omsluttende egenskaper er er vanligvis en del av XAML behandling logic og kontroller at objekter og verdiene som avhenger av omkringliggende bruken av typen kvalifisering kan fungere på riktig måte. .NET Framework XAML Services API-er og standard XAML skjemaet konteksten fyller ut denne verdien som er basert på partikkelattributtering med <xref:System.Windows.Markup.AmbientAttribute>.</xref:System.Windows.Markup.AmbientAttribute> Standard implementering av <xref:System.Xaml.XamlMember.LookupIsAmbient%2A>bruker denne eksisterende <xref:System.Windows.Markup.AmbientAttribute>metode, og returnerer `true` Hvis <xref:System.Windows.Markup.AmbientAttribute>finnes i en medlem-deklarasjon.</xref:System.Windows.Markup.AmbientAttribute> </xref:System.Windows.Markup.AmbientAttribute> </xref:System.Xaml.XamlMember.LookupIsAmbient%2A>       <xref:System.Windows.Markup.AmbientAttribute>finnes i medlemmer av flere WPF-typer, blant annet <xref:System.Windows.Application>, <xref:System.Windows.Setter>, og <xref:System.Windows.Style>.</xref:System.Windows.Style> </xref:System.Windows.Setter> </xref:System.Windows.Application></xref:System.Windows.Markup.AmbientAttribute> Det finnes også i den <xref:System.Windows.ResourceDictionary>type som connotes som et medlem som bruker <xref:System.Windows.ResourceDictionary>som filtypen anses omkringliggende selv om medlemmet ikke er spesifikt attributt.</xref:System.Windows.ResourceDictionary> </xref:System.Windows.ResourceDictionary>"
  syntax:
    content: public bool IsAmbient { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> er rapportert som en omkringliggende egenskap; ellers, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsAmbient*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsAttachable
  id: IsAttachable
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsAttachable
  nameWithType: XamlMember.IsAttachable
  fullName: System.Xaml.XamlMember.IsAttachable
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> er et kan legges ved medlem."
  remarks: "Verdien for IsAttachable er initialisert basert på konstruktøren som ble brukt til å lage en <xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember>"
  syntax:
    content: public bool IsAttachable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> er et medlem som kan legges ved; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsAttachable*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsDirective
  id: IsDirective
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsDirective
  nameWithType: XamlMember.IsDirective
  fullName: System.Xaml.XamlMember.IsDirective
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> er en XAML-direktivet."
  remarks: "Verdien for IsDirective er initialisert basert på konstruktøren som ble brukt til å lage en <xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember> Grunntallet <xref:System.Xaml.XamlMember>konstruktører initialisere slik at IsDirective `false`.</xref:System.Xaml.XamlMember> Imidlertid den <xref:System.Xaml.XamlDirective>klassen (en <xref:System.Xaml.XamlMember>avledede klassen) initialiserer slik at IsDirective `true`.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlDirective>       Hvis du vil rapportere IsDirective som `true` til brukere av en egendefinert XAML skjemaet klasse for XAML medlemmer, kontroller at du avledes fra <xref:System.Xaml.XamlDirective>fordi det er bare mulig å aktivere denne virkemåten.</xref:System.Xaml.XamlDirective>"
  syntax:
    content: public bool IsDirective { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> er en XAML direktivet; ellers, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsDirective*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsEvent
  id: IsEvent
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsEvent
  nameWithType: XamlMember.IsEvent
  fullName: System.Xaml.XamlMember.IsEvent
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerer et medlem av hendelsen."
  remarks: "Kaller IsEvent aktiverer <xref:System.Xaml.XamlMember.LookupIsEvent%2A>eller en bestemt overstyring av denne metoden.</xref:System.Xaml.XamlMember.LookupIsEvent%2A>"
  syntax:
    content: public bool IsEvent { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerer en hendelse; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsNameValid
  id: IsNameValid
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsNameValid
  nameWithType: XamlMember.IsNameValid
  fullName: System.Xaml.XamlMember.IsNameValid
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> initialiseres med en gyldig <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> streng som den <xref:System.Xaml.XamlMember.Name*>.</xref:System.Xaml.XamlMember.Name*>"
  syntax:
    content: public bool IsNameValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> initialiseres med en gyldig <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> streng; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsNameValid*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsReadOnly
  id: IsReadOnly
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: XamlMember.IsReadOnly
  fullName: System.Xaml.XamlMember.IsReadOnly
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerer medlem skrivebeskyttet."
  remarks: "Kaller IsReadOnly aktiverer <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A>eller en bestemt overstyring av denne metoden.</xref:System.Xaml.XamlMember.LookupIsReadOnly%2A>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerer medlem skrivebeskyttet; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsReadPublic
  id: IsReadPublic
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsReadPublic
  nameWithType: XamlMember.IsReadPublic
  fullName: System.Xaml.XamlMember.IsReadPublic
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerer et medlem med en kalles opp offentlig <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> aksessor."
  remarks: "IsReadPublic verdi kontrollerer om den <xref:System.Xaml.XamlMember.DeclaringType%2A>er felles.</xref:System.Xaml.XamlMember.DeclaringType%2A> Hvis <xref:System.Xaml.XamlMember.DeclaringType%2A>er ikke-offentlig, den `get` aksessor er ikke kalles på en praktisk måte, og returnerer IsReadPublic `false`.</xref:System.Xaml.XamlMember.DeclaringType%2A>       Kaller IsReadPublic aktiverer <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A>eller en bestemt overstyring av denne metoden.</xref:System.Xaml.XamlMember.LookupIsReadPublic%2A>      > [!IMPORTANT] > Den <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A>metoden er virtuelle, og derfor kan overstyres.</xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> Overstyringen er mulighet til å endre (med onde hensikter eller ellers) rapporterte tilgangsinformasjon for et medlem som XAML slik at det er ikke lenger justert på en måte som forventet til systemet tilgang typeinformasjonen for den underliggende CLR-deklareringen. Bruk underliggende CLR-typen i stedet for en security-kritiske kontroll av tilgangsnivåene."
  syntax:
    content: public bool IsReadPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerer en kalles opp offentlig <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> aksessor; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsReadPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsUnknown
  id: IsUnknown
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsUnknown
  nameWithType: XamlMember.IsUnknown
  fullName: System.Xaml.XamlMember.IsUnknown
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om medlemmet ikke er kan løses ved sikkerhetskopiering systemet som brukes for å kunne løses type og medlem."
  remarks: "En <xref:System.Xaml.XamlMember>som er konstruert med de <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>signatur returnerer `true` for IsUnknown.</xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> </xref:System.Xaml.XamlMember>       For en Last inn bane som involverer <xref:System.Xaml.XamlObjectWriter>, en <xref:System.Xaml.XamlMember>med `true` for IsUnknown ikke kan skrive til en.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlObjectWriter> Under standard implementeringer i .NET Framework XAML Services APIer den <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>kall kaster en <xref:System.Xaml.XamlObjectWriterException>når den aktuelle <xref:System.Xaml.XamlMember>rapporter `true` for IsUnknown.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlObjectWriterException> </xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>       Du kan ikke konstruere et <xref:System.Xaml.XamlMember>som har en verdi for `true` for IsUnknown Hvis implementeringen din kan håndtere unntak fra <xref:System.Xaml.XamlObjectWriter>, eller du har andre måter å justere den <xref:System.Xaml.XamlObjectWriter>virkemåte.</xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlMember>       Kaller IsUnknown aktiverer <xref:System.Xaml.XamlMember.LookupIsUnknown%2A>eller en bestemt overstyring av denne metoden.</xref:System.Xaml.XamlMember.LookupIsUnknown%2A>"
  syntax:
    content: public bool IsUnknown { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis medlemmet ikke er kan løses; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> hvis Medlemmet kan løses."
  overload: System.Xaml.XamlMember.IsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsWriteOnly
  id: IsWriteOnly
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsWriteOnly
  nameWithType: XamlMember.IsWriteOnly
  fullName: System.Xaml.XamlMember.IsWriteOnly
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerer medlem lesebeskyttet."
  remarks: "Kaller IsWriteOnly aktiverer <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A>eller en bestemt overstyring av denne metoden.</xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A>"
  syntax:
    content: public bool IsWriteOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerer medlem lesebeskyttet; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsWriteOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsWritePublic
  id: IsWritePublic
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsWritePublic
  nameWithType: XamlMember.IsWritePublic
  fullName: System.Xaml.XamlMember.IsWritePublic
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en verdi som angir om dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerer et medlem som har en kalles opp offentlig <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> aksessor."
  remarks: "Verdien for IsWritePublic vurderer om den <xref:System.Xaml.XamlMember.DeclaringType%2A>felles som en del av fastsettelse.</xref:System.Xaml.XamlMember.DeclaringType%2A> Hvis <xref:System.Xaml.XamlMember.DeclaringType%2A>er ikke-offentlig, den `set` aksessor er ikke kalles på en praktisk måte, og returnerer IsWritePublic `false`.</xref:System.Xaml.XamlMember.DeclaringType%2A>       Kaller IsWritePublic aktiverer <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>eller en bestemt overstyring av denne metoden.</xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>      > [!IMPORTANT] > Den <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>metoden er virtuelle, og derfor kan overstyres.</xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> Overstyringen er mulighet til å endre (med onde hensikter eller ellers) rapporterte tilgangsinformasjon for et medlem som XAML slik at det er ikke lenger justert på en måte som forventet til systemet tilgang typeinformasjonen for den underliggende CLR-deklareringen. Bruk underliggende CLR-typen i stedet for en security-kritiske kontroll av tilgangsnivåene."
  syntax:
    content: public bool IsWritePublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerer en kalles opp offentlig <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> aksessor; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsWritePublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupCustomAttributeProvider
  id: LookupCustomAttributeProvider
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupCustomAttributeProvider()
  nameWithType: XamlMember.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlMember.LookupCustomAttributeProvider()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Når implementert i en avledet klasse, returnerer en <xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref> implementering."
  remarks: "Overstyre denne metoden for å angi intern gjenspeilingen med en annen måte å hente CLR-attributtverdier. I finnes overstyringer bruker den interne Reflektoren vanlige CLR gjenspeiling logikken for eksempel kall til <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>       Standard implementering returnerer `null`."
  syntax:
    content: protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();
    parameters: []
    return:
      type: System.Reflection.ICustomAttributeProvider
      description: "En <xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref> implementering."
  overload: System.Xaml.XamlMember.LookupCustomAttributeProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupDeferringLoader
  id: LookupDeferringLoader
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupDeferringLoader()
  nameWithType: XamlMember.LookupDeferringLoader()
  fullName: System.Xaml.XamlMember.LookupDeferringLoader()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; -objektet som brukes for utsatt innlasting av XAML deklarert objekter."
  remarks: "Denne metoden aktiveres når en oppringer henter en verdi fra den <xref:System.Xaml.XamlMember.DeferringLoader%2A>egenskapen.</xref:System.Xaml.XamlMember.DeferringLoader%2A> Overstyre denne metoden hvis du vil <xref:System.Xaml.XamlMember.DeferringLoader%2A>vil returnere en verdi som er forskjellig fra verdien som er aktivert som standard intern gjenspeiling, og hvis du har også egendefinerte <xref:System.Xaml.Schema.XamlMemberInvoker>informasjon.</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.XamlMember.DeferringLoader%2A>       Standard implementering returnerer et objekt som lesing <xref:System.Windows.Markup.XamlDeferLoadAttribute>eller bruke en <xref:System.Xaml.XamlDeferringLoader>fra den deklarerende typen.</xref:System.Xaml.XamlDeferringLoader> </xref:System.Windows.Markup.XamlDeferLoadAttribute> Hvis verken objektet er tilgjengelig, denne metoden kan returnere `null`."
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> LookupDeferringLoader ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
      description: "En &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; som har en <xref href=&quot;System.Xaml.XamlDeferringLoader&quot;> </xref> begrensning i generisk."
  overload: System.Xaml.XamlMember.LookupDeferringLoader*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupDependsOn
  id: LookupDependsOn
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupDependsOn()
  nameWithType: XamlMember.LookupDependsOn()
  fullName: System.Xaml.XamlMember.LookupDependsOn()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en liste over <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objekter. Elementene i listen rapporterer medlemmer der for initialisering ordren finnes i forhold til dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Denne metoden aktiveres når en oppringer henter en verdi fra den <xref:System.Xaml.XamlMember.DependsOn%2A>egenskapen.</xref:System.Xaml.XamlMember.DependsOn%2A> Overstyre denne metoden hvis du vil <xref:System.Xaml.XamlMember.DependsOn%2A>vil returnere en verdi som er forskjellig fra verdien som er aktivert som standard intern gjenspeiling, og hvis du har også egendefinerte <xref:System.Xaml.Schema.XamlMemberInvoker>informasjon.</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.XamlMember.DependsOn%2A>       WPF XAML leseren og writer implementeringer attributt dette tilfellet med <xref:System.Windows.Markup.DependsOnAttribute>.</xref:System.Windows.Markup.DependsOnAttribute> Standard implementering bruker denne eksisterende <xref:System.Windows.Markup.DependsOnAttribute>metode.</xref:System.Windows.Markup.DependsOnAttribute>       Overstyre denne metoden hvis du ikke bruker <xref:System.Windows.Markup.DependsOnAttribute>for dette formål og har tenkt å erstatte den metoden for å angi egenskapen behandler ordren med din egen metode.</xref:System.Windows.Markup.DependsOnAttribute> Hvis du ikke har tenkt å støtte en egenskapen behandlingsrekkefølge, kan du bruke standard implementering fordi den returnerer ingen resultater som er riktig.       Listen er skrivebeskyttet."
  syntax:
    content: protected virtual System.Collections.Generic.IList<System.Xaml.XamlMember> LookupDependsOn ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlMember}
      description: "En liste over <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objekter."
  overload: System.Xaml.XamlMember.LookupDependsOn*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupInvoker
  id: LookupInvoker
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupInvoker()
  nameWithType: XamlMember.LookupInvoker()
  fullName: System.Xaml.XamlMember.LookupInvoker()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> som er knyttet til dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Denne metoden aktiveres ved kall til <xref:System.Xaml.XamlMember.Invoker%2A>.</xref:System.Xaml.XamlMember.Invoker%2A>       Standard implementering krever ikke som en <xref:System.Xaml.XamlMember>konstrueres ved hjelp av konstruktører som sendes en opprinnelig <xref:System.Xaml.Schema.XamlMemberInvoker>.</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.XamlMember> Imidlertid en <xref:System.Xaml.XamlMember.UnderlyingMember%2A>verdi må finnes for den <xref:System.Xaml.XamlMember>; ellers standard implementering returnerer `null`.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Overstyre denne metoden hvis du også avledes fra <xref:System.Xaml.Schema.XamlMemberInvoker>og har tenkt å returnere den utledede klassen.</xref:System.Xaml.Schema.XamlMemberInvoker> Hvis du går tilbake `null`, <xref:System.Xaml.XamlMember.Invoker%2A>returnerer <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName>til brukere.</xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> </xref:System.Xaml.XamlMember.Invoker%2A>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "The <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;></xref> information for this <xref href=&quot;System.Xaml.XamlMember&quot;></xref>; or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.XamlMember.LookupInvoker*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsAmbient
  id: LookupIsAmbient
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsAmbient()
  nameWithType: XamlMember.LookupIsAmbient()
  fullName: System.Xaml.XamlMember.LookupIsAmbient()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer om dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> rapporteres som en omkringliggende egenskap."
  remarks: "Intern anrop som se etter omkringliggende XAML egenskapsinformasjon kalle denne metoden. Omkringliggende egenskap er inkludert i felles API-virkemåten for XAML lesere og XAML skrivere. Intern kall som refererer til LookupIsAmbient er vanligvis en del av XAML behandling logic og kontroller at objekter og verdiene som avhenger av omkringliggende bruken av typen kvalifisering kan fungere på riktig måte. Standard .NET Framework XAML Services implementering bruker CLR attributing for å få denne informasjonen fra gjenspeiling over sikkerhetskopiering typer. Nærmere bestemt standard implementering søker etter <xref:System.Windows.Markup.AmbientAttribute>og returnerer `true` for LookupIsAmbient Hvis <xref:System.Windows.Markup.AmbientAttribute>finnes på en medlemsdefinisjon.</xref:System.Windows.Markup.AmbientAttribute> </xref:System.Windows.Markup.AmbientAttribute>       Overstyre denne metoden hvis du ikke bruker <xref:System.Windows.Markup.AmbientAttribute>for dette formål og har tenkt å erstatte som metode for å angi omsluttende XAML egenskaper med din egen metode.</xref:System.Windows.Markup.AmbientAttribute>       Eksemplet APIene fra WPF attributtet med <xref:System.Windows.Markup.AmbientAttribute>og <xref:System.Windows.Trigger.Property%2A?displayProperty=fullName> <xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName>.</xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName> </xref:System.Windows.Trigger.Property%2A?displayProperty=fullName> </xref:System.Windows.Markup.AmbientAttribute>"
  syntax:
    content: protected virtual bool LookupIsAmbient ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>å rapportere dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> som en omkringliggende egenskap; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsAmbient*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsEvent
  id: LookupIsEvent
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsEvent()
  nameWithType: XamlMember.LookupIsEvent()
  fullName: System.Xaml.XamlMember.LookupIsEvent()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer om dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerer en hendelse."
  remarks: "Standard implementering kontrollerer om <xref:System.Xaml.XamlMember.UnderlyingMember%2A>er av typen <xref:System.Reflection.EventInfo>, og hvis den, returnerer `true`.</xref:System.Reflection.EventInfo> </xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Denne metoden aktiveres når en oppringer henter en verdi fra <xref:System.Xaml.XamlMember.IsEvent%2A>.</xref:System.Xaml.XamlMember.IsEvent%2A> Overstyre denne metoden hvis du vil rapportere uniform resultater for en hel <xref:System.Xaml.XamlMember>avledede klassen, eller hvis du har spesialiserte metadata tilgjengelig som kan tolkes for å finne ut XAML typen system representasjoner fra per tilfelle.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual bool LookupIsEvent ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>rapporten som denne <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerer en hendelse; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsReadOnly
  id: LookupIsReadOnly
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsReadOnly()
  nameWithType: XamlMember.LookupIsReadOnly()
  fullName: System.Xaml.XamlMember.LookupIsReadOnly()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer om dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerer en tiltenkte skrivebeskyttet egenskap."
  remarks: "Standard implementering returnerer `true` Hvis <xref:System.Xaml.XamlMember.UnderlyingMember%2A>finnes, men en offentlig `set` aksessor finnes ikke for, i henhold til intern gjenspeiling.</xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Denne metoden aktiveres når en oppringer henter en verdi fra <xref:System.Xaml.XamlMember.IsReadOnly%2A>.</xref:System.Xaml.XamlMember.IsReadOnly%2A> Overstyre denne metoden hvis du vil rapportere uniform resultater for en hel <xref:System.Xaml.XamlMember>avledede klassen, eller hvis du har spesialiserte metadata tilgjengelig som kan tolkes for å finne ut XAML typen system representasjoner fra per tilfelle.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual bool LookupIsReadOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>å rapportere dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> som en tiltenkte skrivebeskyttet egenskap; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsReadPublic
  id: LookupIsReadPublic
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsReadPublic()
  nameWithType: XamlMember.LookupIsReadPublic()
  fullName: System.Xaml.XamlMember.LookupIsReadPublic()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer om dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerer en egenskap som er en offentlig <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> aksessor."
  remarks: "Standard implementering returnerer resultater basert på interne gjenspeiling eller negering på <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, behandling i denne rekkefølgen.</xref:System.Xaml.XamlMember.IsWriteOnly%2A>       LookupIsReadPublic returnerer om selve medlemmet er felleskø. Returnerer `true` for et offentlig medlem på et nonpublic deklarerer type. Bruk <xref:System.Xaml.XamlMember.IsReadPublic%2A>i stedet hvis du også ønsker å vurdere synligheten for den deklarerende typen.</xref:System.Xaml.XamlMember.IsReadPublic%2A>       Denne metoden aktiveres når en oppringer henter en verdi fra <xref:System.Xaml.XamlMember.IsReadPublic%2A>.</xref:System.Xaml.XamlMember.IsReadPublic%2A> Overstyre denne metoden hvis du vil rapportere uniform resultater for en hel <xref:System.Xaml.XamlMember>avledede klassen, eller hvis du har spesialiserte metadata som er tilgjengelig til å bestemme denne fra per tilfelle.</xref:System.Xaml.XamlMember>      > [!IMPORTANT] > For LookupIsReadPublic metoden er virtuelle, og derfor kan overstyres. Overstyringen er mulighet til å endre (med onde hensikter eller ellers) rapporterte tilgangsinformasjon for et medlem som XAML slik at det er ikke lenger justert på en måte som forventet til systemet tilgang typeinformasjonen for den underliggende CLR-deklareringen. Bruk underliggende CLR-typen i stedet for en security-kritiske kontroll av tilgangsnivåene."
  syntax:
    content: protected virtual bool LookupIsReadPublic ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerer en egenskap som er en offentlig <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> aksessor; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsReadPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsUnknown
  id: LookupIsUnknown
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsUnknown()
  nameWithType: XamlMember.LookupIsUnknown()
  fullName: System.Xaml.XamlMember.LookupIsUnknown()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer om dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerer et medlem som ikke kan løses ved sikkerhetskopiering systemet som brukes for å kunne løses type og medlem."
  remarks: "Denne metoden kan aktiveres når en oppringer henter en verdi fra <xref:System.Xaml.XamlMember.IsUnknown%2A>.</xref:System.Xaml.XamlMember.IsUnknown%2A> Standard implementering returnerer resultater som er basert på enten intern gjenspeiling eller undersøker for en `null` verdien <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, behandling i denne rekkefølgen.</xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Overstyre denne metoden hvis du vil rapportere uniform resultater for en hel <xref:System.Xaml.XamlMember>avledede klassen, eller hvis du har spesialiserte metadata som er tilgjengelig til å bestemme denne fra per tilfelle.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual bool LookupIsUnknown ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerer medlem ikke kan løses; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsWriteOnly
  id: LookupIsWriteOnly
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsWriteOnly()
  nameWithType: XamlMember.LookupIsWriteOnly()
  fullName: System.Xaml.XamlMember.LookupIsWriteOnly()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer om dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerer et medlem som er en offentlig <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> aksessor, men ikke et felles <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> aksessor."
  remarks: "Standard implementering returnerer `true` Hvis en <xref:System.Xaml.XamlMember.UnderlyingMember%2A>finnes som har en offentlig `set` aksessor og en nonpublic `get` aksessor, i henhold til intern gjenspeiling.</xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Denne metoden aktiveres når en oppringer henter en verdi fra <xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</xref:System.Xaml.XamlMember.IsWriteOnly%2A> Overstyre denne metoden hvis du vil rapportere uniform resultater for en hel <xref:System.Xaml.XamlMember>avledede klassen, eller hvis du har spesialiserte metadata som er tilgjengelig til å bestemme denne fra per tilfelle.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual bool LookupIsWriteOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerer medlem lesebeskyttet; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsWriteOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsWritePublic
  id: LookupIsWritePublic
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsWritePublic()
  nameWithType: XamlMember.LookupIsWritePublic()
  fullName: System.Xaml.XamlMember.LookupIsWritePublic()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer om dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerer et medlem som er en offentlig <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> aksessor."
  remarks: "Standard implementering returnerer resultater basert intern gjenspeiling eller negering på <xref:System.Xaml.XamlMember.IsReadOnly%2A>, behandling i denne rekkefølgen.</xref:System.Xaml.XamlMember.IsReadOnly%2A>       Denne metoden aktiveres når en oppringer henter en verdi fra <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</xref:System.Xaml.XamlMember.IsWritePublic%2A> Overstyre denne metoden hvis du vil rapportere uniform resultater for en hel <xref:System.Xaml.XamlMember>avledede klassen, eller hvis du har spesialiserte metadata som er tilgjengelig til å bestemme denne fra per tilfelle.</xref:System.Xaml.XamlMember>      > [!IMPORTANT] > For LookupIsWritePublic metoden er virtuelle, og derfor kan overstyres. Overstyringen er mulighet til å endre (med onde hensikter eller ellers) rapporterte tilgangsinformasjon for et medlem som XAML slik at det er ikke lenger justert på en måte som forventet til systemet tilgang typeinformasjonen for den underliggende CLR-deklareringen. Bruk underliggende CLR-typen i stedet for en security-kritiske kontroll av tilgangsnivåene."
  syntax:
    content: protected virtual bool LookupIsWritePublic ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerer medlem skrivbar; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsWritePublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupTargetType
  id: LookupTargetType
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupTargetType()
  nameWithType: XamlMember.LookupTargetType()
  fullName: System.Xaml.XamlMember.LookupTargetType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> av typen der den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> kan finnes."
  remarks: "Standard implementering skiller mellom kan legges ved og ikke kan legges ved medlemmer. Hvis du ikke kan legges ved medlemmer returnerer LookupTargetType alltid <xref:System.Xaml.XamlMember.DeclaringType%2A>.</xref:System.Xaml.XamlMember.DeclaringType%2A> For kan legges ved medlemmer LookupTargetType returnerer et resultat som er basert på undersøker den <xref:System.Xaml.XamlMember.UnderlyingMember%2A>aksessor Parametertypen og tolker at typen basert på XAML skjemaet kontekst.</xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Denne metoden aktiveres når en oppringer henter en verdi fra <xref:System.Xaml.XamlMember.TargetType%2A>.</xref:System.Xaml.XamlMember.TargetType%2A> Overstyre denne metoden hvis du vil rapportere uniform resultater for en hel <xref:System.Xaml.XamlMember>avledede klassen, eller hvis du har spesialiserte metadata som er tilgjengelig til å bestemme denne fra per tilfelle.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupTargetType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "Typen der den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> kan finnes. Se kommentarer."
  overload: System.Xaml.XamlMember.LookupTargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupType
  id: LookupType
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupType()
  nameWithType: XamlMember.LookupType()
  fullName: System.Xaml.XamlMember.LookupType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> av typen som brukes av medlemmet. Se kommentarer."
  remarks: "Denne metoden aktiveres når en oppringer henter en verdi fra <xref:System.Xaml.XamlMember.Type%2A>.</xref:System.Xaml.XamlMember.Type%2A> Overstyre denne metoden hvis du vil <xref:System.Xaml.XamlMember.Type%2A>vil returnere en verdi som er forskjellig fra verdien som er aktivert som standard intern gjenspeiling, og hvis du har også egendefinerte <xref:System.Xaml.Schema.XamlMemberInvoker>informasjon.</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.XamlMember.Type%2A>       Standard implementering bruker annen kodebaner og begrepsmodellen betydning for den returnerte <xref:System.Xaml.XamlType>som er basert på om dette <xref:System.Xaml.XamlMember>representerer en egenskap, metoden eller hendelse.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlType>      -For en egenskap, den returnerte <xref:System.Xaml.XamlType>er av typen som angir egenskapen eller returneres av egenskapen.</xref:System.Xaml.XamlType>      -For en hendelse, den returnerte <xref:System.Xaml.XamlType>er obligatorisk Hendelsesbehandlingstypen (representant i en CLR-implementering).</xref:System.Xaml.XamlType>      -For en metode <xref:System.Xaml.XamlType>er Returtypen.</xref:System.Xaml.XamlType>       I hvert enkelt tilfelle brukes XAML skjemaet konteksten til å evaluere XAML typen fra underliggende systemtype.       Denne metoden aktiveres når en oppringer henter en verdi fra <xref:System.Xaml.XamlMember.Type%2A>.</xref:System.Xaml.XamlMember.Type%2A> Overstyre denne metoden hvis du vil rapportere uniform resultater for en hel <xref:System.Xaml.XamlMember>avledede klassen, eller hvis du har spesialiserte metadata som er tilgjengelig til å bestemme denne fra per tilfelle.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "Den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> av typen som brukes av medlemmet. Se kommentarer."
  overload: System.Xaml.XamlMember.LookupType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupTypeConverter
  id: LookupTypeConverter
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupTypeConverter()
  nameWithType: XamlMember.LookupTypeConverter()
  fullName: System.Xaml.XamlMember.LookupTypeConverter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en type konverteringsprogram implementering som er forbundet med denne <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Standard implementering bruker følgende logikken og behandler ordren: – Hvis attributing finnes på medlemsnivå (<xref:System.ComponentModel.TypeConverterAttribute>), informasjonen attributtet brukes for et kall til <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A>mot XAML skjemaet konteksten.</xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> </xref:System.ComponentModel.TypeConverterAttribute>      -Hvis <xref:System.Xaml.XamlMember.Type%2A>er gyldig, returneres et konverteringsprogram for typen som er forbundet med typen.</xref:System.Xaml.XamlMember.Type%2A>      -Hvis medlemmet er en hendelse, returneres en hendelse-spesifikk type konverteringsprogram.       Denne metoden aktiveres når en oppringer henter en verdi fra <xref:System.Xaml.XamlMember.TypeConverter%2A>.</xref:System.Xaml.XamlMember.TypeConverter%2A> Overstyre denne metoden hvis du vil rapportere uniform resultater for en hel <xref:System.Xaml.XamlMember>avledede klassen, eller hvis du har spesialiserte metadata som er tilgjengelig til å bestemme denne fra per tilfelle.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> LookupTypeConverter ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "En &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; serverforekomsten med <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> begrensningen; eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupTypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupUnderlyingGetter
  id: LookupUnderlyingGetter
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupUnderlyingGetter()
  nameWithType: XamlMember.LookupUnderlyingGetter()
  fullName: System.Xaml.XamlMember.LookupUnderlyingGetter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> aksessor som er forbundet med denne <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Standard implementering tolker den <xref:System.Xaml.XamlMember.UnderlyingMember%2A>egenskapen som <xref:System.Reflection.PropertyInfo>og returnerer verdien for <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName>(med parameteren som er angitt til `true`), som betyr at metoden returnerte kan være ikke-offentlig.</xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName> </xref:System.Reflection.PropertyInfo> </xref:System.Xaml.XamlMember.UnderlyingMember%2A> Dette kan føre til `null` for enkelte tilfeller. inkludert tilfeller der det finnes ingen tilknyttede aksessor eller medlemmet er ikke en egenskap.       Denne metoden aktiveres når en oppringer henter en verdi fra <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A>en tilknyttet <xref:System.Xaml.Schema.XamlMemberInvoker>.</xref:System.Xaml.Schema.XamlMemberInvoker> -egenskapen</xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> Overstyre denne metoden hvis du vil rapportere uniform resultater for en hel <xref:System.Xaml.XamlMember>avledede klassen, eller hvis du har spesialiserte metadata som er tilgjengelig til å bestemme denne fra per tilfelle.</xref:System.Xaml.XamlMember> Sørg for å implementere LookupUnderlyingGetter, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, og <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>slik at de alle returnerer samsvarende resultater.</xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> </xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>"
  syntax:
    content: protected virtual System.Reflection.MethodInfo LookupUnderlyingGetter ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "Den <xref:System.Reflection.MethodInfo>for den tilknyttede <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> aksessor; eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Xaml.XamlMember.LookupUnderlyingGetter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupUnderlyingMember
  id: LookupUnderlyingMember
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupUnderlyingMember()
  nameWithType: XamlMember.LookupUnderlyingMember()
  fullName: System.Xaml.XamlMember.LookupUnderlyingMember()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer et CLR-typen system <xref:System.Reflection.MemberInfo>som er knyttet til dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>.</xref:System.Reflection.MemberInfo>"
  remarks: "Standard implementering returnerer underliggende medlemsinformasjon, som er basert på konstruksjon. Hvis det <xref:System.Reflection.MemberInfo>objektet er konstruert med en signatur som ikke har nok informasjon til å angi det underliggende medlemmet, metoden returnerer `null`.</xref:System.Reflection.MemberInfo>       Hvis det underliggende medlemmet ble angitt under konstruksjon, bør du ikke vil kalle denne metoden.       Denne metoden aktiveres når en oppringer henter en verdi fra <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</xref:System.Xaml.XamlMember.UnderlyingMember%2A> Overstyre denne metoden hvis du vil rapportere uniform resultater for en hel <xref:System.Xaml.XamlMember>avledede klassen, eller hvis du har spesialiserte metadata som er tilgjengelig til å bestemme denne fra per tilfelle.</xref:System.Xaml.XamlMember> Sørg for å implementere <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, og LookupUnderlyingMember slik at de alle returnerer samsvarende resultater.</xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> </xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>"
  syntax:
    content: protected virtual System.Reflection.MemberInfo LookupUnderlyingMember ();
    parameters: []
    return:
      type: System.Reflection.MemberInfo
      description: "Systemet en CLR-typen <xref:System.Reflection.MemberInfo>objektet som er forbundet med denne <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>; eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MemberInfo>"
  overload: System.Xaml.XamlMember.LookupUnderlyingMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupUnderlyingSetter
  id: LookupUnderlyingSetter
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupUnderlyingSetter()
  nameWithType: XamlMember.LookupUnderlyingSetter()
  fullName: System.Xaml.XamlMember.LookupUnderlyingSetter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> aksessor som er forbundet med denne <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Standard implementering tolker <xref:System.Xaml.XamlMember.UnderlyingMember%2A>som <xref:System.Reflection.PropertyInfo>og returnerer verdien for <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName>(med parameteren som er angitt til `true`), som betyr at metoden returnerte kan være ikke-offentlig.</xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName> </xref:System.Reflection.PropertyInfo> </xref:System.Xaml.XamlMember.UnderlyingMember%2A> Dette kan føre til `null` for enkelte tilfeller, inkludert tilfeller der det er ingen slik aksessor eller medlemmet er ikke en egenskap.       Denne metoden aktiveres når en oppringer henter en verdi fra <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>på en tilknyttet <xref:System.Xaml.Schema.XamlMemberInvoker>. Overstyre denne metoden hvis du vil rapportere uniform resultater for en hel <xref:System.Xaml.XamlMember>avledede klassen, eller hvis du har spesialiserte metadata som er tilgjengelig til å bestemme denne fra per tilfelle.</xref:System.Xaml.XamlMember> </xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> Sørg for å implementere <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, LookupUnderlyingSetter, og <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>slik at de alle returnerer korrelaterte resultater.</xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> </xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>"
  syntax:
    content: protected virtual System.Reflection.MethodInfo LookupUnderlyingSetter ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "Den <xref:System.Reflection.MethodInfo>for den tilknyttede <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> aksessor; eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Xaml.XamlMember.LookupUnderlyingSetter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupValueSerializer
  id: LookupValueSerializer
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupValueSerializer()
  nameWithType: XamlMember.LookupValueSerializer()
  fullName: System.Xaml.XamlMember.LookupValueSerializer()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en verdi serialisering implementering som er forbundet med denne <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Standard implementering bruker følgende logikken og behandler ordren: – Hvis attributing finnes på medlemsnivå (<xref:System.Windows.Markup.ValueSerializerAttribute>), informasjonen attributtet brukes for et kall til <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A>mot XAML skjemaet konteksten.</xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> </xref:System.Windows.Markup.ValueSerializerAttribute>      -Hvis <xref:System.Xaml.XamlMember.Type%2A>er gyldig, returneres et konverteringsprogram for verdien som er forbundet med typen.</xref:System.Xaml.XamlMember.Type%2A>      -Hvis betingelsene ikke gjelder, `null` returneres.       Denne metoden aktiveres når en oppringer henter en verdi fra <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</xref:System.Xaml.XamlMember.ValueSerializer%2A> Overstyre denne metoden hvis du vil rapportere uniform resultater for en hel <xref:System.Xaml.XamlMember>avledede klassen, eller hvis du har spesialiserte metadata som er tilgjengelig til å bestemme denne fra per tilfelle.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> LookupValueSerializer ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
      description: "En &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; serverforekomsten med <xref:System.Windows.Markup.ValueSerializer>begrensningen, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Markup.ValueSerializer>"
  overload: System.Xaml.XamlMember.LookupValueSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Name
  id: Name
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Name
  nameWithType: XamlMember.Name
  fullName: System.Xaml.XamlMember.Name
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter den <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> navn streng som deklarerer dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Denne verdien er alltid angitt under oppretting av. Konstruktører implementeres av <xref:System.Xaml.XamlMember>vanligvis throw et unntak hvis det første navnet ikke er angitt; derfor forventer ikke denne egenskapen skal `null` eller en tom streng, hvis du bruker standard .NET Framework XAML Services implementeringer.</xref:System.Xaml.XamlMember>       [XamlName grammatikk](~/add/includes/ajax-current-ext-md.md) og reglene for CLR-typen og medlemmer er ikke en nøyaktig intersect. Det er mulig å deklarere et medlemsnavn er tillatt under CLR men ugyldig under XAML navngi. Du kan unngå denne situasjonen hvis mulig."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Den <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> navn streng som deklarerer dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  id: op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: op_Equality(XamlMember,XamlMember)
  nameWithType: XamlMember.op_Equality(XamlMember,XamlMember)
  fullName: System.Xaml.XamlMember.op_Equality(XamlMember,XamlMember)
  type: Operator
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Bestemmer om to angitt <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objekter har samme verdi."
  syntax:
    content: public static bool op_Equality (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);
    parameters:
    - id: xamlMember1
      type: System.Xaml.XamlMember
      description: "A <xref href=&quot;System.Xaml.XamlMember&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: xamlMember2
      type: System.Xaml.XamlMember
      description: "A <xref href=&quot;System.Xaml.XamlMember&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis verdien for <code> xamlMember1 </code> er lik verdien for <code> xamlMember2 </code>; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  id: op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: op_Inequality(XamlMember,XamlMember)
  nameWithType: XamlMember.op_Inequality(XamlMember,XamlMember)
  fullName: System.Xaml.XamlMember.op_Inequality(XamlMember,XamlMember)
  type: Operator
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Bestemmer om to angitt <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objekter har forskjellige verdier."
  syntax:
    content: public static bool op_Inequality (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);
    parameters:
    - id: xamlMember1
      type: System.Xaml.XamlMember
      description: "A <xref href=&quot;System.Xaml.XamlMember&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: xamlMember2
      type: System.Xaml.XamlMember
      description: "A <xref href=&quot;System.Xaml.XamlMember&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Hvis verdien for <code> xamlMember1 </code> er forskjellig fra verdien for <code> xamlMember2 </code>; ellers <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.PreferredXamlNamespace
  id: PreferredXamlNamespace
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: PreferredXamlNamespace
  nameWithType: XamlMember.PreferredXamlNamespace
  fullName: System.Xaml.XamlMember.PreferredXamlNamespace
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter enkelt XAML navneområdet URI-adresse som identifiserer navneområdet primære XAML for dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Egenskapen PreferredXamlNamespace gir samme verdi som kaller <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A>og henter den første Verdistrengen fra den returnerte listen.</xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> Navneområdet for foretrukne XAML skal brukes under skriving av medlemmet tilbake til tekst eller andre representasjoner som Bevar XAML navneområde."
  syntax:
    content: public string PreferredXamlNamespace { get; }
    return:
      type: System.String
      description: "Identifikatoren for det primære XAML-navneområdet for dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>, som en streng."
  overload: System.Xaml.XamlMember.PreferredXamlNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.SerializationVisibility
  id: SerializationVisibility
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: SerializationVisibility
  nameWithType: XamlMember.SerializationVisibility
  fullName: System.Xaml.XamlMember.SerializationVisibility
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en <xref href=&quot;System.ComponentModel.DesignerSerializationVisibility&quot;> </xref> -verdi som angir hvordan visuelle utformeren skal behandle medlemmet."
  syntax:
    content: public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }
    return:
      type: System.ComponentModel.DesignerSerializationVisibility
      description: "Verdien av <xref href=&quot;System.ComponentModel.DesignerSerializationVisibility&quot;> </xref> opplisting. Standard <xref href=&quot;System.ComponentModel.DesignerSerializationVisibility&quot;> </xref>."
  overload: System.Xaml.XamlMember.SerializationVisibility*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.TargetType
  id: TargetType
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: TargetType
  nameWithType: XamlMember.TargetType
  fullName: System.Xaml.XamlMember.TargetType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> av typen der den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> kan finnes."
  remarks: "Den returnerte verdien er forskjellig kan legges ved og ikke kan legges ved medlemmer. Hvis du ikke kan legges ved medlemmer returnerer TargetType <xref:System.Xaml.XamlMember.DeclaringType%2A>.</xref:System.Xaml.XamlMember.DeclaringType%2A> For kan legges ved medlemmer <xref:System.Xaml.XamlMember.LookupTargetType%2A>returnerer et resultat som er basert på denne logikken: – Hvis gjenspeiling ikke kan løse en sikkerhetskopiering (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), denne metoden returnerer en intern konstant som representerer en generell objekttype.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember.LookupTargetType%2A>      -Hvis den forrige ikke gjelder, <xref:System.Xaml.XamlMember.LookupTargetType%2A>kalles.</xref:System.Xaml.XamlMember.LookupTargetType%2A> Standard implementering returnerer en <xref:System.Xaml.XamlType>som er basert på undersøker metodene som implementerer den `get` og `set` aksessorer.</xref:System.Xaml.XamlType> En klasse kan overstyre <xref:System.Xaml.XamlMember.LookupTargetType%2A>å bruke en annen virkemåte som andre metadata danner som kan rapportere måltyper for kan legges ved medlemmer.</xref:System.Xaml.XamlMember.LookupTargetType%2A>"
  syntax:
    content: public System.Xaml.XamlType TargetType { get; }
    return:
      type: System.Xaml.XamlType
      description: "Typen der den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> kan finnes. Se kommentarer."
  overload: System.Xaml.XamlMember.TargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.ToString
  id: ToString
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: ToString()
  nameWithType: XamlMember.ToString()
  fullName: System.Xaml.XamlMember.ToString()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerer en strengrepresentasjon av dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Denne implementeringen returnerer <xref:System.Xaml.XamlMember.Name%2A>.</xref:System.Xaml.XamlMember.Name%2A>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "En strengrepresentasjon av dette <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Type
  id: Type
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Type
  nameWithType: XamlMember.Type
  fullName: System.Xaml.XamlMember.Type
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> av typen som brukes av medlemmet."
  remarks: "Kaller typen aktiverer <xref:System.Xaml.XamlMember.LookupType%2A>eller en bestemt overstyring av denne metoden.</xref:System.Xaml.XamlMember.LookupType%2A> Dette skjer når første intern gjenspeiling logikken ikke allerede har definert informasjonen.       I standardvirkemåten (ingen <xref:System.Xaml.XamlMember.LookupType%2A>overstyre), den returnerte <xref:System.Xaml.XamlType>kan ha forskjellige begrepsmodellen betydning.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlMember.LookupType%2A> Hvilken betydning gjelder avhenger av om dette <xref:System.Xaml.XamlMember>representerer en egenskap, metoden eller hendelsen som følgende liste viser: – For en egenskap, den returnerte <xref:System.Xaml.XamlType>er av typen som angir egenskapen eller returneres av egenskapen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlMember>      -For en hendelse, den returnerte <xref:System.Xaml.XamlType>er obligatorisk Hendelsesbehandlingstypen (representant i en CLR-implementering).</xref:System.Xaml.XamlType>      -For en metode <xref:System.Xaml.XamlType>er Returtypen for denne metoden kan være `null`.</xref:System.Xaml.XamlType>       I hvert enkelt tilfelle brukes XAML skjemaet konteksten til å evaluere XAML typen fra typen sikkerhetskopiering."
  syntax:
    content: public System.Xaml.XamlType Type { get; }
    return:
      type: System.Xaml.XamlType
      description: "Den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> av typen som brukes av medlemmet. Se kommentarer."
  overload: System.Xaml.XamlMember.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.TypeConverter
  id: TypeConverter
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: TypeConverter
  nameWithType: XamlMember.TypeConverter
  fullName: System.Xaml.XamlMember.TypeConverter
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; -objektet som kan brukes for typen konvertering konstruksjon av XAML deklarert objekter."
  remarks: "Kaller TypeConverter aktiverer <xref:System.Xaml.XamlMember.LookupTypeConverter%2A>eller en bestemt overstyring av denne metoden.</xref:System.Xaml.XamlMember.LookupTypeConverter%2A> Dette skjer når første intern gjenspeiling logikken ikke allerede har definert informasjonen.       Implementeringer som returnerer en egenskapsverdi som ikke er null for TypeConverter er ikke nødvendigvis fungerer <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter> Følgende er en liste over mulige returverdier for ikke-null for TypeConverter og disse verdiene representerer:-verdien som returneres rapporter konverteringsprogram en type som er attribuert spesielt medlemmet eller mer generelt måltypen for konverteringen. Dette skjer vanligvis hvilke de fleste XAML typen systemer og XAML prosessorer ser etter for å starte et typen konverteringsprogram og starte metodene.      -Verdien som returneres rapporter et innebygd verdien konverteringsprogram. Disse konverteringsprogrammer finnes for bestemte intern operasjoner som utføres av XAML forfatter. Disse innebygde verdien konverteringsprogrammer konvertere spesielt raw attributtet strengverdier til XAML språket som primitivene. .NET Framework XAML Services-implementering videresende disse innebygd type konverteringer ofte til en type konvertering som er definert i systemsamlingen. For eksempel en konvertering for en <xref:System.Int32>verdien har innebygd videresendt konverteringen, og derfor <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A>verdien referanser <xref:System.ComponentModel.Int32Converter>.</xref:System.ComponentModel.Int32Converter> </xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> </xref:System.Int32>      -Verdien som returneres rapporter spesiell forekomst av en ubegrensede objektmodell; Det vil si den <xref:System.Xaml.XamlMember>har en <xref:System.Xaml.XamlMember.Type%2A>verdi av <xref:System.Object>.</xref:System.Object> </xref:System.Xaml.XamlMember.Type%2A> </xref:System.Xaml.XamlMember> I dette tilfellet den <xref:System.Xaml.Schema.XamlValueConverter%601>rapporterer at det <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName>er {`Object}`.</xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName> </xref:System.Xaml.Schema.XamlValueConverter%601> Imidlertid <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>er `null` fordi ingen faktisk type eller forekomst er klart til å utføre denne konverteringen.</xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> I stedet kan ikke fastsettes objektet modellen virkemåten til kjøretid når kjøretiden for den bestemte teknologien bestemmer håndtering av den objektet diagrammet.       Hvis du har tilgang til en fungerende <xref:System.ComponentModel.TypeConverter>fra <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, kan du aktivere konverteringsmetoder.</xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> </xref:System.ComponentModel.TypeConverter> Mange konverteringsmetoder avhenger imidlertid av service-konteksten. Hvis du ikke har samme tjenestekontekst tilgjengelig som typen konverteringsprogram forventer for vanlige rolle for skriving av objekter for objektet diagrammer, kan metodene konverteringsprogram Iverksett unntak."
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> TypeConverter { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "En &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; verdi, med en <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> begrensning i generisk. Se kommentarer."
  overload: System.Xaml.XamlMember.TypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.UnderlyingMember
  id: UnderlyingMember
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: UnderlyingMember
  nameWithType: XamlMember.UnderlyingMember
  fullName: System.Xaml.XamlMember.UnderlyingMember
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter CLR-typen systemet <xref:System.Reflection.MemberInfo>som er tilgjengelig for et medlem som er laget av <xref:System.Reflection.PropertyInfo>, <xref:System.Reflection.MethodInfo>, eller <xref:System.Reflection.EventInfo>.</xref:System.Reflection.EventInfo> </xref:System.Reflection.MethodInfo> </xref:System.Reflection.PropertyInfo> </xref:System.Reflection.MemberInfo>"
  remarks: "Kaller UnderlyingMember aktiverer <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>eller en bestemt overstyring av denne metoden.</xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>"
  syntax:
    content: public System.Reflection.MemberInfo UnderlyingMember { get; }
    return:
      type: System.Reflection.MemberInfo
      description: "CLR-typen system <xref:System.Reflection.MemberInfo>informasjon som endringen fra første konstruktøren parameterne.</xref:System.Reflection.MemberInfo> En <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> som bygges med den &lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt; signatur returnerer <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.UnderlyingMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.ValueSerializer
  id: ValueSerializer
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: ValueSerializer
  nameWithType: XamlMember.ValueSerializer
  fullName: System.Xaml.XamlMember.ValueSerializer
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Henter en &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; -objektet som brukes for verdien serialisering av XAML deklarert objekter."
  remarks: "Kaller ValueSerializer aktiverer <xref:System.Xaml.XamlMember.LookupValueSerializer%2A>eller en bestemt overstyring av denne metoden.</xref:System.Xaml.XamlMember.LookupValueSerializer%2A> Dette skjer når første intern gjenspeiling logikken ikke allerede har definert informasjonen.       Ikke alle tilfellene som returnerer en egenskapsverdi som ikke er null for ValueSerializer er nødvendigvis fungerer <xref:System.Windows.Markup.ValueSerializer>.</xref:System.Windows.Markup.ValueSerializer> Se merknader i <xref:System.Xaml.XamlMember.TypeConverter%2A>; til samme vurderinger gjelder ValueSerializer.</xref:System.Xaml.XamlMember.TypeConverter%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> ValueSerializer { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
      description: "En &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; med <xref:System.Windows.Markup.ValueSerializer>begrensning i generisk.</xref:System.Windows.Markup.ValueSerializer>"
  overload: System.Xaml.XamlMember.ValueSerializer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(EventInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext)
- uid: System.Reflection.EventInfo
  parent: System.Reflection
  isExternal: true
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo
- uid: System.Xaml.XamlSchemaContext
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(PropertyInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
- uid: System.Xaml.Schema.XamlMemberInvoker
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlMemberInvoker
  nameWithType: XamlMemberInvoker
  fullName: System.Xaml.Schema.XamlMemberInvoker
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,MethodInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,XamlType,Boolean)
  nameWithType: XamlMember.XamlMember(String,XamlType,Boolean)
  fullName: System.Xaml.XamlMember.XamlMember(String,XamlType,Boolean)
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
- uid: System.Xaml.XamlMember.DeclaringType
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DeclaringType
  nameWithType: XamlMember.DeclaringType
  fullName: System.Xaml.XamlMember.DeclaringType
- uid: System.Xaml.XamlMember.DeferringLoader
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DeferringLoader
  nameWithType: XamlMember.DeferringLoader
  fullName: System.Xaml.XamlMember.DeferringLoader
- uid: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<XamlDeferringLoader>
  nameWithType: XamlValueConverter<XamlDeferringLoader>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.Xaml.XamlDeferringLoader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlDeferringLoader
    name: XamlDeferringLoader
    nameWithType: XamlDeferringLoader
    fullName: XamlDeferringLoader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.DependsOn
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DependsOn
  nameWithType: XamlMember.DependsOn
  fullName: System.Xaml.XamlMember.DependsOn
- uid: System.Collections.Generic.IList{System.Xaml.XamlMember}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<XamlMember>
  nameWithType: IList<XamlMember>
  fullName: System.Collections.Generic.IList<System.Xaml.XamlMember>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Xaml.XamlMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlMember
    name: XamlMember
    nameWithType: XamlMember
    fullName: XamlMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.Equals(System.Object)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Equals(Object)
  nameWithType: XamlMember.Equals(Object)
  fullName: System.Xaml.XamlMember.Equals(Object)
- uid: System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Equals(XamlMember)
  nameWithType: XamlMember.Equals(XamlMember)
  fullName: System.Xaml.XamlMember.Equals(XamlMember)
- uid: System.Xaml.XamlMember
  parent: System.Xaml
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
- uid: System.Xaml.XamlMember.GetHashCode
  parent: System.Xaml.XamlMember
  isExternal: false
  name: GetHashCode()
  nameWithType: XamlMember.GetHashCode()
  fullName: System.Xaml.XamlMember.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xaml.XamlMember.GetXamlNamespaces
  parent: System.Xaml.XamlMember
  isExternal: false
  name: GetXamlNamespaces()
  nameWithType: XamlMember.GetXamlNamespaces()
  fullName: System.Xaml.XamlMember.GetXamlNamespaces()
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.Invoker
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Invoker
  nameWithType: XamlMember.Invoker
  fullName: System.Xaml.XamlMember.Invoker
- uid: System.Xaml.XamlMember.IsAmbient
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsAmbient
  nameWithType: XamlMember.IsAmbient
  fullName: System.Xaml.XamlMember.IsAmbient
- uid: System.Xaml.XamlMember.IsAttachable
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsAttachable
  nameWithType: XamlMember.IsAttachable
  fullName: System.Xaml.XamlMember.IsAttachable
- uid: System.Xaml.XamlMember.IsDirective
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsDirective
  nameWithType: XamlMember.IsDirective
  fullName: System.Xaml.XamlMember.IsDirective
- uid: System.Xaml.XamlMember.IsEvent
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsEvent
  nameWithType: XamlMember.IsEvent
  fullName: System.Xaml.XamlMember.IsEvent
- uid: System.Xaml.XamlMember.IsNameValid
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsNameValid
  nameWithType: XamlMember.IsNameValid
  fullName: System.Xaml.XamlMember.IsNameValid
- uid: System.Xaml.XamlMember.IsReadOnly
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsReadOnly
  nameWithType: XamlMember.IsReadOnly
  fullName: System.Xaml.XamlMember.IsReadOnly
- uid: System.Xaml.XamlMember.IsReadPublic
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsReadPublic
  nameWithType: XamlMember.IsReadPublic
  fullName: System.Xaml.XamlMember.IsReadPublic
- uid: System.Xaml.XamlMember.IsUnknown
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsUnknown
  nameWithType: XamlMember.IsUnknown
  fullName: System.Xaml.XamlMember.IsUnknown
- uid: System.Xaml.XamlMember.IsWriteOnly
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsWriteOnly
  nameWithType: XamlMember.IsWriteOnly
  fullName: System.Xaml.XamlMember.IsWriteOnly
- uid: System.Xaml.XamlMember.IsWritePublic
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsWritePublic
  nameWithType: XamlMember.IsWritePublic
  fullName: System.Xaml.XamlMember.IsWritePublic
- uid: System.Xaml.XamlMember.LookupCustomAttributeProvider
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupCustomAttributeProvider()
  nameWithType: XamlMember.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlMember.LookupCustomAttributeProvider()
- uid: System.Reflection.ICustomAttributeProvider
  parent: System.Reflection
  isExternal: false
  name: ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
- uid: System.Xaml.XamlMember.LookupDeferringLoader
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupDeferringLoader()
  nameWithType: XamlMember.LookupDeferringLoader()
  fullName: System.Xaml.XamlMember.LookupDeferringLoader()
- uid: System.Xaml.XamlMember.LookupDependsOn
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupDependsOn()
  nameWithType: XamlMember.LookupDependsOn()
  fullName: System.Xaml.XamlMember.LookupDependsOn()
- uid: System.Xaml.XamlMember.LookupInvoker
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupInvoker()
  nameWithType: XamlMember.LookupInvoker()
  fullName: System.Xaml.XamlMember.LookupInvoker()
- uid: System.Xaml.XamlMember.LookupIsAmbient
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsAmbient()
  nameWithType: XamlMember.LookupIsAmbient()
  fullName: System.Xaml.XamlMember.LookupIsAmbient()
- uid: System.Xaml.XamlMember.LookupIsEvent
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsEvent()
  nameWithType: XamlMember.LookupIsEvent()
  fullName: System.Xaml.XamlMember.LookupIsEvent()
- uid: System.Xaml.XamlMember.LookupIsReadOnly
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsReadOnly()
  nameWithType: XamlMember.LookupIsReadOnly()
  fullName: System.Xaml.XamlMember.LookupIsReadOnly()
- uid: System.Xaml.XamlMember.LookupIsReadPublic
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsReadPublic()
  nameWithType: XamlMember.LookupIsReadPublic()
  fullName: System.Xaml.XamlMember.LookupIsReadPublic()
- uid: System.Xaml.XamlMember.LookupIsUnknown
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsUnknown()
  nameWithType: XamlMember.LookupIsUnknown()
  fullName: System.Xaml.XamlMember.LookupIsUnknown()
- uid: System.Xaml.XamlMember.LookupIsWriteOnly
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsWriteOnly()
  nameWithType: XamlMember.LookupIsWriteOnly()
  fullName: System.Xaml.XamlMember.LookupIsWriteOnly()
- uid: System.Xaml.XamlMember.LookupIsWritePublic
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsWritePublic()
  nameWithType: XamlMember.LookupIsWritePublic()
  fullName: System.Xaml.XamlMember.LookupIsWritePublic()
- uid: System.Xaml.XamlMember.LookupTargetType
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupTargetType()
  nameWithType: XamlMember.LookupTargetType()
  fullName: System.Xaml.XamlMember.LookupTargetType()
- uid: System.Xaml.XamlMember.LookupType
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupType()
  nameWithType: XamlMember.LookupType()
  fullName: System.Xaml.XamlMember.LookupType()
- uid: System.Xaml.XamlMember.LookupTypeConverter
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupTypeConverter()
  nameWithType: XamlMember.LookupTypeConverter()
  fullName: System.Xaml.XamlMember.LookupTypeConverter()
- uid: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<TypeConverter>
  nameWithType: XamlValueConverter<TypeConverter>
  fullName: System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.ComponentModel.TypeConverter>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.TypeConverter
    name: TypeConverter
    nameWithType: TypeConverter
    fullName: TypeConverter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.LookupUnderlyingGetter
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingGetter()
  nameWithType: XamlMember.LookupUnderlyingGetter()
  fullName: System.Xaml.XamlMember.LookupUnderlyingGetter()
- uid: System.Xaml.XamlMember.LookupUnderlyingMember
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingMember()
  nameWithType: XamlMember.LookupUnderlyingMember()
  fullName: System.Xaml.XamlMember.LookupUnderlyingMember()
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Xaml.XamlMember.LookupUnderlyingSetter
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingSetter()
  nameWithType: XamlMember.LookupUnderlyingSetter()
  fullName: System.Xaml.XamlMember.LookupUnderlyingSetter()
- uid: System.Xaml.XamlMember.LookupValueSerializer
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupValueSerializer()
  nameWithType: XamlMember.LookupValueSerializer()
  fullName: System.Xaml.XamlMember.LookupValueSerializer()
- uid: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<ValueSerializer>
  nameWithType: XamlValueConverter<ValueSerializer>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.Windows.Markup.ValueSerializer>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.ValueSerializer
    name: ValueSerializer
    nameWithType: ValueSerializer
    fullName: ValueSerializer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.Name
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Name
  nameWithType: XamlMember.Name
  fullName: System.Xaml.XamlMember.Name
- uid: System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: op_Equality(XamlMember,XamlMember)
  nameWithType: XamlMember.op_Equality(XamlMember,XamlMember)
  fullName: System.Xaml.XamlMember.op_Equality(XamlMember,XamlMember)
- uid: System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: op_Inequality(XamlMember,XamlMember)
  nameWithType: XamlMember.op_Inequality(XamlMember,XamlMember)
  fullName: System.Xaml.XamlMember.op_Inequality(XamlMember,XamlMember)
- uid: System.Xaml.XamlMember.PreferredXamlNamespace
  parent: System.Xaml.XamlMember
  isExternal: false
  name: PreferredXamlNamespace
  nameWithType: XamlMember.PreferredXamlNamespace
  fullName: System.Xaml.XamlMember.PreferredXamlNamespace
- uid: System.Xaml.XamlMember.SerializationVisibility
  parent: System.Xaml.XamlMember
  isExternal: false
  name: SerializationVisibility
  nameWithType: XamlMember.SerializationVisibility
  fullName: System.Xaml.XamlMember.SerializationVisibility
- uid: System.ComponentModel.DesignerSerializationVisibility
  parent: System.ComponentModel
  isExternal: false
  name: DesignerSerializationVisibility
  nameWithType: DesignerSerializationVisibility
  fullName: System.ComponentModel.DesignerSerializationVisibility
- uid: System.Xaml.XamlMember.TargetType
  parent: System.Xaml.XamlMember
  isExternal: false
  name: TargetType
  nameWithType: XamlMember.TargetType
  fullName: System.Xaml.XamlMember.TargetType
- uid: System.Xaml.XamlMember.ToString
  parent: System.Xaml.XamlMember
  isExternal: false
  name: ToString()
  nameWithType: XamlMember.ToString()
  fullName: System.Xaml.XamlMember.ToString()
- uid: System.Xaml.XamlMember.Type
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Type
  nameWithType: XamlMember.Type
  fullName: System.Xaml.XamlMember.Type
- uid: System.Xaml.XamlMember.TypeConverter
  parent: System.Xaml.XamlMember
  isExternal: false
  name: TypeConverter
  nameWithType: XamlMember.TypeConverter
  fullName: System.Xaml.XamlMember.TypeConverter
- uid: System.Xaml.XamlMember.UnderlyingMember
  parent: System.Xaml.XamlMember
  isExternal: false
  name: UnderlyingMember
  nameWithType: XamlMember.UnderlyingMember
  fullName: System.Xaml.XamlMember.UnderlyingMember
- uid: System.Xaml.XamlMember.ValueSerializer
  parent: System.Xaml.XamlMember
  isExternal: false
  name: ValueSerializer
  nameWithType: XamlMember.ValueSerializer
  fullName: System.Xaml.XamlMember.ValueSerializer
- uid: System.Xaml.XamlMember.#ctor*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember.XamlMember
- uid: System.Xaml.XamlMember.DeclaringType*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DeclaringType
  nameWithType: XamlMember.DeclaringType
- uid: System.Xaml.XamlMember.DeferringLoader*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DeferringLoader
  nameWithType: XamlMember.DeferringLoader
- uid: System.Xaml.XamlMember.DependsOn*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DependsOn
  nameWithType: XamlMember.DependsOn
- uid: System.Xaml.XamlMember.Equals*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Equals
  nameWithType: XamlMember.Equals
- uid: System.Xaml.XamlMember.GetHashCode*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: GetHashCode
  nameWithType: XamlMember.GetHashCode
- uid: System.Xaml.XamlMember.GetXamlNamespaces*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: GetXamlNamespaces
  nameWithType: XamlMember.GetXamlNamespaces
- uid: System.Xaml.XamlMember.Invoker*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Invoker
  nameWithType: XamlMember.Invoker
- uid: System.Xaml.XamlMember.IsAmbient*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsAmbient
  nameWithType: XamlMember.IsAmbient
- uid: System.Xaml.XamlMember.IsAttachable*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsAttachable
  nameWithType: XamlMember.IsAttachable
- uid: System.Xaml.XamlMember.IsDirective*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsDirective
  nameWithType: XamlMember.IsDirective
- uid: System.Xaml.XamlMember.IsEvent*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsEvent
  nameWithType: XamlMember.IsEvent
- uid: System.Xaml.XamlMember.IsNameValid*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsNameValid
  nameWithType: XamlMember.IsNameValid
- uid: System.Xaml.XamlMember.IsReadOnly*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsReadOnly
  nameWithType: XamlMember.IsReadOnly
- uid: System.Xaml.XamlMember.IsReadPublic*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsReadPublic
  nameWithType: XamlMember.IsReadPublic
- uid: System.Xaml.XamlMember.IsUnknown*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsUnknown
  nameWithType: XamlMember.IsUnknown
- uid: System.Xaml.XamlMember.IsWriteOnly*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsWriteOnly
  nameWithType: XamlMember.IsWriteOnly
- uid: System.Xaml.XamlMember.IsWritePublic*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsWritePublic
  nameWithType: XamlMember.IsWritePublic
- uid: System.Xaml.XamlMember.LookupCustomAttributeProvider*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupCustomAttributeProvider
  nameWithType: XamlMember.LookupCustomAttributeProvider
- uid: System.Xaml.XamlMember.LookupDeferringLoader*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupDeferringLoader
  nameWithType: XamlMember.LookupDeferringLoader
- uid: System.Xaml.XamlMember.LookupDependsOn*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupDependsOn
  nameWithType: XamlMember.LookupDependsOn
- uid: System.Xaml.XamlMember.LookupInvoker*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupInvoker
  nameWithType: XamlMember.LookupInvoker
- uid: System.Xaml.XamlMember.LookupIsAmbient*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsAmbient
  nameWithType: XamlMember.LookupIsAmbient
- uid: System.Xaml.XamlMember.LookupIsEvent*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsEvent
  nameWithType: XamlMember.LookupIsEvent
- uid: System.Xaml.XamlMember.LookupIsReadOnly*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsReadOnly
  nameWithType: XamlMember.LookupIsReadOnly
- uid: System.Xaml.XamlMember.LookupIsReadPublic*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsReadPublic
  nameWithType: XamlMember.LookupIsReadPublic
- uid: System.Xaml.XamlMember.LookupIsUnknown*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsUnknown
  nameWithType: XamlMember.LookupIsUnknown
- uid: System.Xaml.XamlMember.LookupIsWriteOnly*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsWriteOnly
  nameWithType: XamlMember.LookupIsWriteOnly
- uid: System.Xaml.XamlMember.LookupIsWritePublic*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsWritePublic
  nameWithType: XamlMember.LookupIsWritePublic
- uid: System.Xaml.XamlMember.LookupTargetType*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupTargetType
  nameWithType: XamlMember.LookupTargetType
- uid: System.Xaml.XamlMember.LookupType*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupType
  nameWithType: XamlMember.LookupType
- uid: System.Xaml.XamlMember.LookupTypeConverter*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupTypeConverter
  nameWithType: XamlMember.LookupTypeConverter
- uid: System.Xaml.XamlMember.LookupUnderlyingGetter*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingGetter
  nameWithType: XamlMember.LookupUnderlyingGetter
- uid: System.Xaml.XamlMember.LookupUnderlyingMember*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingMember
  nameWithType: XamlMember.LookupUnderlyingMember
- uid: System.Xaml.XamlMember.LookupUnderlyingSetter*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingSetter
  nameWithType: XamlMember.LookupUnderlyingSetter
- uid: System.Xaml.XamlMember.LookupValueSerializer*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupValueSerializer
  nameWithType: XamlMember.LookupValueSerializer
- uid: System.Xaml.XamlMember.Name*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Name
  nameWithType: XamlMember.Name
- uid: System.Xaml.XamlMember.op_Equality*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: op_Equality
  nameWithType: XamlMember.op_Equality
- uid: System.Xaml.XamlMember.op_Inequality*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: op_Inequality
  nameWithType: XamlMember.op_Inequality
- uid: System.Xaml.XamlMember.PreferredXamlNamespace*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: PreferredXamlNamespace
  nameWithType: XamlMember.PreferredXamlNamespace
- uid: System.Xaml.XamlMember.SerializationVisibility*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: SerializationVisibility
  nameWithType: XamlMember.SerializationVisibility
- uid: System.Xaml.XamlMember.TargetType*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: TargetType
  nameWithType: XamlMember.TargetType
- uid: System.Xaml.XamlMember.ToString*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: ToString
  nameWithType: XamlMember.ToString
- uid: System.Xaml.XamlMember.Type*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Type
  nameWithType: XamlMember.Type
- uid: System.Xaml.XamlMember.TypeConverter*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: TypeConverter
  nameWithType: XamlMember.TypeConverter
- uid: System.Xaml.XamlMember.UnderlyingMember*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: UnderlyingMember
  nameWithType: XamlMember.UnderlyingMember
- uid: System.Xaml.XamlMember.ValueSerializer*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: ValueSerializer
  nameWithType: XamlMember.ValueSerializer
