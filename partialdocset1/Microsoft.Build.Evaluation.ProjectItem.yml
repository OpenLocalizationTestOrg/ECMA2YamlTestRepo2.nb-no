### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Evaluation.ProjectItem
  id: ProjectItem
  children:
  - Microsoft.Build.Evaluation.ProjectItem.DirectMetadata
  - Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount
  - Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude
  - Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)
  - Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)
  - Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)
  - Microsoft.Build.Evaluation.ProjectItem.IsImported
  - Microsoft.Build.Evaluation.ProjectItem.ItemType
  - Microsoft.Build.Evaluation.ProjectItem.Metadata
  - Microsoft.Build.Evaluation.ProjectItem.MetadataCount
  - Microsoft.Build.Evaluation.ProjectItem.Project
  - Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)
  - Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)
  - Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)
  - Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude
  - Microsoft.Build.Evaluation.ProjectItem.Xml
  langs:
  - csharp
  name: ProjectItem
  nameWithType: ProjectItem
  fullName: Microsoft.Build.Evaluation.ProjectItem
  type: Class
  summary: "Representerer en evaluerte utformingen prosjektelement."
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{ItemType}={EvaluatedInclude} [{UnevaluatedInclude}] #DirectMetadata={DirectMetadataCount}")]

      public class ProjectItem
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata
  id: DirectMetadata
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: DirectMetadata
  nameWithType: ProjectItem.DirectMetadata
  fullName: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter en opplisting over alle element-metadata."
  remarks: "Inneholder ikke metadata fra elementet definisjoner. Inneholder ikke innebygde metadata, for eksempel &quot;FullPath&quot;."
  syntax:
    content: public System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectMetadata> DirectMetadata { get; }
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectMetadata}
      description: "Returnerer en opplisting over alle element-metadata, som kan ikke være null."
  overload: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount
  id: DirectMetadataCount
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: DirectMetadataCount
  nameWithType: ProjectItem.DirectMetadataCount
  fullName: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter antall metadataene for dette elementet."
  remarks: "Inneholder ikke metadata fra elementet definisjoner. Inneholder ikke innebygde metadata, for eksempel &quot;FullPath&quot;."
  syntax:
    content: public int DirectMetadataCount { get; }
    return:
      type: System.Int32
      description: "Returnerer antall metadataene for dette elementet."
  overload: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude
  id: EvaluatedInclude
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: EvaluatedInclude
  nameWithType: ProjectItem.EvaluatedInclude
  fullName: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter evaluerte verdien for Include-attributtet."
  remarks: "Det finnes ikke escape-tegn."
  syntax:
    content: public string EvaluatedInclude { get; }
    return:
      type: System.String
      description: "Returnerer den evaluerte verdien for Include-attributtet."
  overload: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)
  id: GetMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: GetMetadata(String)
  nameWithType: ProjectItem.GetMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.GetMetadata(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter evaluerte verdien for de angitte metadataene for dette elementet."
  remarks: "Kan inneholde metadata fra en definisjon for elementet. Inneholder ikke innebygde metadata, for eksempel &quot;FullPath&quot;."
  syntax:
    content: public Microsoft.Build.Evaluation.ProjectMetadata GetMetadata (string name);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på metadataene der verdiene hentes."
    return:
      type: Microsoft.Build.Evaluation.ProjectMetadata
      description: "Henter evaluerte verdien for de angitte metadataene for dette elementet. Returnerer null hvis det finnes ingen metadata med det angitte navnet."
  overload: Microsoft.Build.Evaluation.ProjectItem.GetMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)
  id: GetMetadataValue(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: GetMetadataValue(String)
  nameWithType: ProjectItem.GetMetadataValue(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Få evaluerte verdien for de angitte metadataene for dette elementet, inkludert metadata opprinnelig fra en definisjon for elementet."
  remarks: "For å finne ut om det finnes metadata om den har en verdi eller ikke, Bruk <xref:Microsoft.Build.Evaluation.ProjectItem.HasMetadata%2A>.</xref:Microsoft.Build.Evaluation.ProjectItem.HasMetadata%2A>       Denne metoden kan brukes til å få tilgang til innebygde metadata, for eksempel &quot;FullPath&quot;."
  syntax:
    content: public string GetMetadataValue (string name);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på metadataene der verdiene hentes."
    return:
      type: System.String
      description: "Returnerer den evaluerte verdien av de angitte metadataene for dette elementet, inkludert metadata opprinnelig fra en definisjon for elementet. Returnerer en tom streng hvis det finnes ingen metadata med det angitte navnet."
  overload: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)
  id: HasMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: HasMetadata(String)
  nameWithType: ProjectItem.HasMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.HasMetadata(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bestemmer om metadata med det angitte navnet er definert for dette elementet."
  remarks: "Inneholder innebygde metadataene og metadataene som er hentet fra elementet definisjoner."
  syntax:
    content: public bool HasMetadata (string name);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på metadataene skal søkes etter."
    return:
      type: System.Boolean
      description: "Returnerer true Hvis metadata med det angitte navnet er definert i dette elementet; False ellers."
  overload: Microsoft.Build.Evaluation.ProjectItem.HasMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.IsImported
  id: IsImported
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: IsImported
  nameWithType: ProjectItem.IsImported
  fullName: Microsoft.Build.Evaluation.ProjectItem.IsImported
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bestemmer om elementet kommer fra en importert fil."
  syntax:
    content: public bool IsImported { get; }
    return:
      type: System.Boolean
      description: "Returner true Hvis elementet kommer fra en importerte fil. False ellers."
  overload: Microsoft.Build.Evaluation.ProjectItem.IsImported*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.ItemType
  id: ItemType
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: ItemType
  nameWithType: ProjectItem.ItemType
  fullName: Microsoft.Build.Evaluation.ProjectItem.ItemType
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter eller angir typen for dette elementet."
  syntax:
    content: public string ItemType { get; set; }
    return:
      type: System.String
      description: "Returnerer elementtypen."
  overload: Microsoft.Build.Evaluation.ProjectItem.ItemType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.Metadata
  id: Metadata
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: Metadata
  nameWithType: ProjectItem.Metadata
  fullName: Microsoft.Build.Evaluation.ProjectItem.Metadata
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter alle metadataene for dette elementet, inkludert metadata som er hentet fra elementet definisjoner."
  remarks: "Inneholder ikke innebygde metadata, for eksempel &quot;FullPath&quot;.       Hvis du vil legge til, fjerne eller endre verdiene i den innebygde metadataene, kan du bruke <xref:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue%2A>og <xref:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue%2A>.</xref:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue%2A> </xref:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue%2A>"
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata> Metadata { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectMetadata}
      description: "Returnerer alle metadataene for dette elementet, inkludert metadata som er hentet fra elementet definisjoner."
  overload: Microsoft.Build.Evaluation.ProjectItem.Metadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.MetadataCount
  id: MetadataCount
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: MetadataCount
  nameWithType: ProjectItem.MetadataCount
  fullName: Microsoft.Build.Evaluation.ProjectItem.MetadataCount
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter antall metadataene for dette elementet, inkludert eventuelle metadata som stammer fra elementet definisjoner, og eventuelle innebygde metadata."
  syntax:
    content: public int MetadataCount { get; }
    return:
      type: System.Int32
      description: "Returnerer antall metadataene for dette elementet, inkludert eventuelle metadata som stammer fra elementet definisjoner, og eventuelle innebygd metadata."
  overload: Microsoft.Build.Evaluation.ProjectItem.MetadataCount*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.Project
  id: Project
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: Project
  nameWithType: ProjectItem.Project
  fullName: Microsoft.Build.Evaluation.ProjectItem.Project
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter prosjektet som inneholder denne prosjektelement."
  remarks: "Elementer er alltid finnes i et prosjekt."
  syntax:
    content: public Microsoft.Build.Evaluation.Project Project { get; }
    return:
      type: Microsoft.Build.Evaluation.Project
      description: "Returnerer prosjektet som inneholder denne prosjektelement."
  overload: Microsoft.Build.Evaluation.ProjectItem.Project*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)
  id: RemoveMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: RemoveMetadata(String)
  nameWithType: ProjectItem.RemoveMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Fjerner alle metadata med det angitte navnet."
  remarks: "Oppstår InvalidArgumentException Hvis Metadatanavnet refererer til innebygde metadataene som &quot;FullPath&quot;.       Oppstår InvalidOperationException Hvis Metadatanavnet refererer til metadata som kommer fra en definisjon for elementet."
  syntax:
    content: public bool RemoveMetadata (string name);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på metadata for å fjerne."
    return:
      type: System.Boolean
      description: "Returnerer true Hvis metadata med det angitte navnet finnes før fjerning av; False ellers."
  overload: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)
  id: Rename(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: Rename(String)
  nameWithType: ProjectItem.Rename(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.Rename(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Navnet elementet til det angitte navnet."
  remarks: "Tilsvarer innstillingen av <xref:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude%2A>verdi.</xref:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude%2A> Vanligvis oppstår ingen evalueringen, fordi dette kan føre til flere elementer som har ingen betydning i konteksten til gir ett element. Imidlertid Hvis elementet trenger ikke å deles, og den nye verdien evalueres til nøyaktig ett element deretter det evaluerte Include-attributtet er oppdatert med den evaluerte verdien."
  syntax:
    content: public void Rename (string name);
    parameters:
    - id: name
      type: System.String
      description: "Det nye navnet på elementet."
  overload: Microsoft.Build.Evaluation.ProjectItem.Rename*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)
  id: SetMetadataValue(System.String,System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: SetMetadataValue(String,String)
  nameWithType: ProjectItem.SetMetadataValue(String,String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Legger til metadata for det angitte navnet og unevaluated verdien til elementet."
  remarks: "Oppdaterer verdien for eksisterende metadata Hvis metadata allerede finnes med det angitte navnet på elementet, så lenge det ikke kommer fra en definisjon for elementet. Oppdaterer evaluerte prosjektet, men påvirker ikke noe annet i prosjektet før ny vurdering.       For eksempel hvis en del av metadata navnet &quot;m&quot; er lagt til i element av typen &quot;i&quot;, den påvirker ikke &quot;j&quot; som er evaluert fra &quot;@(j-> % (m))&quot; før ny vurdering. Også hvis unevaluated verdien &quot;m&quot; er satt til noe som er endret av evaluering, for eksempel &quot;$(p)&quot;, settes evaluerte verdien til bokstavelig &quot;$(p)&quot; før ny vurdering.       Spesialtegn i unevaluated verdien skal konverteres til escape-tegn."
  syntax:
    content: public Microsoft.Build.Evaluation.ProjectMetadata SetMetadataValue (string name, string unevaluatedValue);
    parameters:
    - id: name
      type: System.String
      description: "Navnet på metadata for å legge til."
    - id: unevaluatedValue
      type: System.String
      description: "Unevaluated verdien av metadata for å legge til."
    return:
      type: Microsoft.Build.Evaluation.ProjectMetadata
      description: "Returnerer de nye metadataene. Hvis metadata med det angitte navnet finnes allerede, returnerer disse metadataene."
  overload: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude
  id: UnevaluatedInclude
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: UnevaluatedInclude
  nameWithType: ProjectItem.UnevaluatedInclude
  fullName: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter eller angir unevaluated verdien for Include-attributtet."
  syntax:
    content: public string UnevaluatedInclude { get; set; }
    return:
      type: System.String
      description: "Returnerer unevaluated verdien for Include-attributtet."
  overload: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.Xml
  id: Xml
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: Xml
  nameWithType: ProjectItem.Xml
  fullName: Microsoft.Build.Evaluation.ProjectItem.Xml
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter elementet elementet som er knyttet til dette elementet."
  syntax:
    content: public Microsoft.Build.Construction.ProjectItemElement Xml { get; }
    return:
      type: Microsoft.Build.Construction.ProjectItemElement
      description: "Returnerer elementet element som er knyttet til dette elementet ikke kan være null."
  overload: Microsoft.Build.Evaluation.ProjectItem.Xml*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: DirectMetadata
  nameWithType: ProjectItem.DirectMetadata
  fullName: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata
- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectMetadata}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ProjectMetadata>
  nameWithType: IEnumerable<ProjectMetadata>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectMetadata>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.Build.Evaluation.ProjectMetadata>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Evaluation.ProjectMetadata
    name: ProjectMetadata
    nameWithType: ProjectMetadata
    fullName: ProjectMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: DirectMetadataCount
  nameWithType: ProjectItem.DirectMetadataCount
  fullName: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: EvaluatedInclude
  nameWithType: ProjectItem.EvaluatedInclude
  fullName: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: GetMetadata(String)
  nameWithType: ProjectItem.GetMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.GetMetadata(String)
- uid: Microsoft.Build.Evaluation.ProjectMetadata
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectMetadata
  nameWithType: ProjectMetadata
  fullName: Microsoft.Build.Evaluation.ProjectMetadata
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: GetMetadataValue(String)
  nameWithType: ProjectItem.GetMetadataValue(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(String)
- uid: Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: HasMetadata(String)
  nameWithType: ProjectItem.HasMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.HasMetadata(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Evaluation.ProjectItem.IsImported
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: IsImported
  nameWithType: ProjectItem.IsImported
  fullName: Microsoft.Build.Evaluation.ProjectItem.IsImported
- uid: Microsoft.Build.Evaluation.ProjectItem.ItemType
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: ItemType
  nameWithType: ProjectItem.ItemType
  fullName: Microsoft.Build.Evaluation.ProjectItem.ItemType
- uid: Microsoft.Build.Evaluation.ProjectItem.Metadata
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Metadata
  nameWithType: ProjectItem.Metadata
  fullName: Microsoft.Build.Evaluation.ProjectItem.Metadata
- uid: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectMetadata}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<ProjectMetadata>
  nameWithType: ICollection<ProjectMetadata>
  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<Microsoft.Build.Evaluation.ProjectMetadata>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Evaluation.ProjectMetadata
    name: ProjectMetadata
    nameWithType: ProjectMetadata
    fullName: ProjectMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.ProjectItem.MetadataCount
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: MetadataCount
  nameWithType: ProjectItem.MetadataCount
  fullName: Microsoft.Build.Evaluation.ProjectItem.MetadataCount
- uid: Microsoft.Build.Evaluation.ProjectItem.Project
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Project
  nameWithType: ProjectItem.Project
  fullName: Microsoft.Build.Evaluation.ProjectItem.Project
- uid: Microsoft.Build.Evaluation.Project
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: Project
  nameWithType: Project
  fullName: Microsoft.Build.Evaluation.Project
- uid: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: RemoveMetadata(String)
  nameWithType: ProjectItem.RemoveMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(String)
- uid: Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Rename(String)
  nameWithType: ProjectItem.Rename(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.Rename(String)
- uid: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: SetMetadataValue(String,String)
  nameWithType: ProjectItem.SetMetadataValue(String,String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(String,String)
- uid: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: UnevaluatedInclude
  nameWithType: ProjectItem.UnevaluatedInclude
  fullName: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude
- uid: Microsoft.Build.Evaluation.ProjectItem.Xml
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Xml
  nameWithType: ProjectItem.Xml
  fullName: Microsoft.Build.Evaluation.ProjectItem.Xml
- uid: Microsoft.Build.Construction.ProjectItemElement
  parent: Microsoft.Build.Construction
  isExternal: false
  name: ProjectItemElement
  nameWithType: ProjectItemElement
  fullName: Microsoft.Build.Construction.ProjectItemElement
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: DirectMetadata
  nameWithType: ProjectItem.DirectMetadata
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: DirectMetadataCount
  nameWithType: ProjectItem.DirectMetadataCount
- uid: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: EvaluatedInclude
  nameWithType: ProjectItem.EvaluatedInclude
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadata*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: GetMetadata
  nameWithType: ProjectItem.GetMetadata
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: GetMetadataValue
  nameWithType: ProjectItem.GetMetadataValue
- uid: Microsoft.Build.Evaluation.ProjectItem.HasMetadata*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: HasMetadata
  nameWithType: ProjectItem.HasMetadata
- uid: Microsoft.Build.Evaluation.ProjectItem.IsImported*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: IsImported
  nameWithType: ProjectItem.IsImported
- uid: Microsoft.Build.Evaluation.ProjectItem.ItemType*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: ItemType
  nameWithType: ProjectItem.ItemType
- uid: Microsoft.Build.Evaluation.ProjectItem.Metadata*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Metadata
  nameWithType: ProjectItem.Metadata
- uid: Microsoft.Build.Evaluation.ProjectItem.MetadataCount*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: MetadataCount
  nameWithType: ProjectItem.MetadataCount
- uid: Microsoft.Build.Evaluation.ProjectItem.Project*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Project
  nameWithType: ProjectItem.Project
- uid: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: RemoveMetadata
  nameWithType: ProjectItem.RemoveMetadata
- uid: Microsoft.Build.Evaluation.ProjectItem.Rename*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Rename
  nameWithType: ProjectItem.Rename
- uid: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: SetMetadataValue
  nameWithType: ProjectItem.SetMetadataValue
- uid: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: UnevaluatedInclude
  nameWithType: ProjectItem.UnevaluatedInclude
- uid: Microsoft.Build.Evaluation.ProjectItem.Xml*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Xml
  nameWithType: ProjectItem.Xml
