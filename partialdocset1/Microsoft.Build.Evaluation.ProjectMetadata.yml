### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Evaluation.ProjectMetadata
  id: ProjectMetadata
  children:
  - Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation
  - Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue
  - Microsoft.Build.Evaluation.ProjectMetadata.IsImported
  - Microsoft.Build.Evaluation.ProjectMetadata.ItemType
  - Microsoft.Build.Evaluation.ProjectMetadata.Location
  - Microsoft.Build.Evaluation.ProjectMetadata.Name
  - Microsoft.Build.Evaluation.ProjectMetadata.Predecessor
  - Microsoft.Build.Evaluation.ProjectMetadata.Project
  - Microsoft.Build.Evaluation.ProjectMetadata.System#IEquatable{Microsoft#Build#Evaluation#ProjectMetadata}#Equals(Microsoft.Build.Evaluation.ProjectMetadata)
  - Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue
  - Microsoft.Build.Evaluation.ProjectMetadata.Xml
  langs:
  - csharp
  name: ProjectMetadata
  nameWithType: ProjectMetadata
  fullName: Microsoft.Build.Evaluation.ProjectMetadata
  type: Class
  summary: "Representerer evalueres utformingen metadata."
  remarks: "Aldri brukt til å representere innebygde metadata, som % (filnavn). Metadataene er alltid knyttet til kildekode for prosjektet.       Metadataene inneholder som en <xref:Microsoft.Build.Evaluation.ProjectItemDefinition>eller <xref:Microsoft.Build.Evaluation.ProjectItem>.</xref:Microsoft.Build.Evaluation.ProjectItem> </xref:Microsoft.Build.Evaluation.ProjectItemDefinition>"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{Name}={EvaluatedValue} [{xml.Value}]")]

      public class ProjectMetadata : IEquatable<Microsoft.Build.Evaluation.ProjectMetadata>
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<Microsoft.Build.Evaluation.ProjectMetadata>
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation
  id: ConditionLocation
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  langs:
  - csharp
  name: ConditionLocation
  nameWithType: ProjectMetadata.ConditionLocation
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Plasseringen av attributtet betingelse."
  syntax:
    content: public Microsoft.Build.Construction.ElementLocation ConditionLocation { get; }
    return:
      type: Microsoft.Build.Construction.ElementLocation
      description: "Returnerer betingelse attributtet plassering."
  overload: Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue
  id: EvaluatedValue
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  langs:
  - csharp
  name: EvaluatedValue
  nameWithType: ProjectMetadata.EvaluatedValue
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter den evaluerte metadata-verdien."
  remarks: 'Kan ikke angis direkte: bare unevaluated verdien kan angis.'
  syntax:
    content: public string EvaluatedValue { get; }
    return:
      type: System.String
      description: "Returnerer evaluerte metadataverdi som ikke er null."
  overload: Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectMetadata.IsImported
  id: IsImported
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  langs:
  - csharp
  name: IsImported
  nameWithType: ProjectMetadata.IsImported
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.IsImported
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bestemmer om metadataene kommer fra en importert fil."
  syntax:
    content: public bool IsImported { get; }
    return:
      type: System.Boolean
      description: "Returnerer true Hvis metadataene kommer fra en importerte fil. False ellers."
  overload: Microsoft.Build.Evaluation.ProjectMetadata.IsImported*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectMetadata.ItemType
  id: ItemType
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  langs:
  - csharp
  name: ItemType
  nameWithType: ProjectMetadata.ItemType
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.ItemType
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter elementtypen inneholdende definisjon for elementet eller elementet."
  syntax:
    content: public string ItemType { get; }
    return:
      type: System.String
      description: "Returnerer elementtypen som inneholder definisjon for elementet eller elementet."
  overload: Microsoft.Build.Evaluation.ProjectMetadata.ItemType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Location
  id: Location
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  langs:
  - csharp
  name: Location
  nameWithType: ProjectMetadata.Location
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.Location
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Plasseringen av elementet."
  syntax:
    content: public Microsoft.Build.Construction.ElementLocation Location { get; }
    return:
      type: Microsoft.Build.Construction.ElementLocation
      description: "Returnerer plasseringen for elementet."
  overload: Microsoft.Build.Evaluation.ProjectMetadata.Location*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Name
  id: Name
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  langs:
  - csharp
  name: Name
  nameWithType: ProjectMetadata.Name
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.Name
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter navnet på metadataene."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Returnerer navnet på metadataene."
  overload: Microsoft.Build.Evaluation.ProjectMetadata.Name*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Predecessor
  id: Predecessor
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  langs:
  - csharp
  name: Predecessor
  nameWithType: ProjectMetadata.Predecessor
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.Predecessor
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter siste metadataene (fra en definisjon for elementet eller elementet) som ble overskrevet av disse metadataene under evalueringen."
  remarks: "Denne metoden søker etter alle metadataene med samme navn som ligger over i logiske prosjektfilen, og som finnes i elementet definisjoner av samme elementtypen og der betingelser evalueres til true. Hvis metadataene inneholder et element, søker denne metoden for eventuelle tidligere metadata med samme navn og elementet som betingelse evalueres til true. Elementet definisjoner søkes før elementer.       Hvis prosjektet ikke er reevaluated siden siste endring, vil denne verdien kan være feil."
  syntax:
    content: public Microsoft.Build.Evaluation.ProjectMetadata Predecessor { get; }
    return:
      type: Microsoft.Build.Evaluation.ProjectMetadata
      description: "Returnerer siste metadataene (fra en definisjon for elementet eller elementet) som har en verdi ble overskrevet av disse metadataene under evalueringen. Returnerer null hvis metadataene ikke er overstyrt."
  overload: Microsoft.Build.Evaluation.ProjectMetadata.Predecessor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Project
  id: Project
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  langs:
  - csharp
  name: Project
  nameWithType: ProjectMetadata.Project
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.Project
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter prosjektet som inneholder disse metadataene."
  syntax:
    content: public Microsoft.Build.Evaluation.Project Project { get; }
    return:
      type: Microsoft.Build.Evaluation.Project
      description: "Returnerer prosjektet som inneholder disse metadataene som aldri er null."
  overload: Microsoft.Build.Evaluation.ProjectMetadata.Project*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectMetadata.System#IEquatable{Microsoft#Build#Evaluation#ProjectMetadata}#Equals(Microsoft.Build.Evaluation.ProjectMetadata)
  id: System#IEquatable{Microsoft#Build#Evaluation#ProjectMetadata}#Equals(Microsoft.Build.Evaluation.ProjectMetadata)
  isEii: true
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  langs:
  - csharp
  name: System.IEquatable(ProjectMetadata)
  nameWithType: ProjectMetadata.System.IEquatable(ProjectMetadata)
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.System.IEquatable(ProjectMetadata)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  syntax:
    content: bool IEquatable<ProjectMetadata>.Equals (Microsoft.Build.Evaluation.ProjectMetadata other);
    parameters:
    - id: other
      type: Microsoft.Build.Evaluation.ProjectMetadata
      description: "Som skal legges til."
    return:
      type: System.Boolean
      description: "Som skal legges til."
  overload: Microsoft.Build.Evaluation.ProjectMetadata.System#IEquatable<Microsoft#Build#Evaluation#ProjectMetadata>#Equals*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue
  id: UnevaluatedValue
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  langs:
  - csharp
  name: UnevaluatedValue
  nameWithType: ProjectMetadata.UnevaluatedValue
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter eller angir verdien unevaluated metadata."
  remarks: "Metoden aksesamlingen oppdaterer både unevaluated verdien og verdien som er evaluert, men påvirker ikke noe annet i prosjektet før ny vurdering.       For eksempel--hvis en del av metadata navnet &quot;m&quot; er endret i element av typen &quot;i&quot;, den påvirker ikke &quot;j&quot; som er evaluert fra &quot;@(j-> % (m))&quot; før ny vurdering. --Hvis unevaluated verdien &quot;m&quot; er satt til noe som er endret av evaluering, for eksempel &quot;$(p)&quot;, evaluerte verdien settes til &quot;$(p)&quot; før ny vurdering.       Angi metadata via en <xref:Microsoft.Build.Evaluation.ProjectItem>kan føre til det tilknyttede <xref:Microsoft.Build.Construction.ProjectItemElement>som skal deles, hvis elementet elementet kommer fra et element-listen, jokertegn eller semikolon uttrykk.</xref:Microsoft.Build.Construction.ProjectItemElement> </xref:Microsoft.Build.Evaluation.ProjectItem> fordi den antyder en har tenkt å påvirke bare bestemt element.       Angi metadata via ProjectMetadata fører ikke til en deling, fordi den antyder en har tenkt å påvirke alle elementer ved hjelp av den underliggende <xref:Microsoft.Build.Construction.ProjectMetadataElement>.</xref:Microsoft.Build.Construction.ProjectMetadataElement>       Med prosjektet er merket som endret. Unevaluated verdiene brukes til å inneholde escape-tegn tegnsekvenser etter behov.       Denne metoden kan ikke prosjektet selvbetjeningsportal konsekvente."
  syntax:
    content: public string UnevaluatedValue { get; set; }
    return:
      type: System.String
      description: "Returnerer verdien for unevaluated metadata."
  overload: Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Xml
  id: Xml
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  langs:
  - csharp
  name: Xml
  nameWithType: ProjectMetadata.Xml
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.Xml
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter den tilknyttede prosjektelement metadata."
  syntax:
    content: public Microsoft.Build.Construction.ProjectMetadataElement Xml { get; }
    return:
      type: Microsoft.Build.Construction.ProjectMetadataElement
      description: "Returnerer den tilknyttede metadataene prosjektelement, som ikke kan være null."
  overload: Microsoft.Build.Evaluation.ProjectMetadata.Xml*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: ConditionLocation
  nameWithType: ProjectMetadata.ConditionLocation
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation
- uid: Microsoft.Build.Construction.ElementLocation
  parent: Microsoft.Build.Construction
  isExternal: false
  name: ElementLocation
  nameWithType: ElementLocation
  fullName: Microsoft.Build.Construction.ElementLocation
- uid: Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: EvaluatedValue
  nameWithType: ProjectMetadata.EvaluatedValue
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Evaluation.ProjectMetadata.IsImported
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: IsImported
  nameWithType: ProjectMetadata.IsImported
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.IsImported
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Evaluation.ProjectMetadata.ItemType
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: ItemType
  nameWithType: ProjectMetadata.ItemType
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.ItemType
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Location
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: Location
  nameWithType: ProjectMetadata.Location
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.Location
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Name
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: Name
  nameWithType: ProjectMetadata.Name
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.Name
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Predecessor
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: Predecessor
  nameWithType: ProjectMetadata.Predecessor
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.Predecessor
- uid: Microsoft.Build.Evaluation.ProjectMetadata
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectMetadata
  nameWithType: ProjectMetadata
  fullName: Microsoft.Build.Evaluation.ProjectMetadata
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Project
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: Project
  nameWithType: ProjectMetadata.Project
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.Project
- uid: Microsoft.Build.Evaluation.Project
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: Project
  nameWithType: Project
  fullName: Microsoft.Build.Evaluation.Project
- uid: Microsoft.Build.Evaluation.ProjectMetadata.System#IEquatable{Microsoft#Build#Evaluation#ProjectMetadata}#Equals(Microsoft.Build.Evaluation.ProjectMetadata)
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: System.IEquatable(ProjectMetadata)
  nameWithType: ProjectMetadata.System.IEquatable(ProjectMetadata)
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.System.IEquatable(ProjectMetadata)
- uid: Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: UnevaluatedValue
  nameWithType: ProjectMetadata.UnevaluatedValue
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Xml
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: Xml
  nameWithType: ProjectMetadata.Xml
  fullName: Microsoft.Build.Evaluation.ProjectMetadata.Xml
- uid: Microsoft.Build.Construction.ProjectMetadataElement
  parent: Microsoft.Build.Construction
  isExternal: false
  name: ProjectMetadataElement
  nameWithType: ProjectMetadataElement
  fullName: Microsoft.Build.Construction.ProjectMetadataElement
- uid: Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation*
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: ConditionLocation
  nameWithType: ProjectMetadata.ConditionLocation
- uid: Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue*
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: EvaluatedValue
  nameWithType: ProjectMetadata.EvaluatedValue
- uid: Microsoft.Build.Evaluation.ProjectMetadata.IsImported*
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: IsImported
  nameWithType: ProjectMetadata.IsImported
- uid: Microsoft.Build.Evaluation.ProjectMetadata.ItemType*
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: ItemType
  nameWithType: ProjectMetadata.ItemType
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Location*
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: Location
  nameWithType: ProjectMetadata.Location
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Name*
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: Name
  nameWithType: ProjectMetadata.Name
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Predecessor*
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: Predecessor
  nameWithType: ProjectMetadata.Predecessor
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Project*
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: Project
  nameWithType: ProjectMetadata.Project
- uid: Microsoft.Build.Evaluation.ProjectMetadata.System#IEquatable<Microsoft#Build#Evaluation#ProjectMetadata>#Equals*
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: System.IEquatable<Microsoft.Build.Evaluation.ProjectMetadata>.Equals
  nameWithType: ProjectMetadata.System.IEquatable<Microsoft.Build.Evaluation.ProjectMetadata>.Equals
- uid: Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue*
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: UnevaluatedValue
  nameWithType: ProjectMetadata.UnevaluatedValue
- uid: Microsoft.Build.Evaluation.ProjectMetadata.Xml*
  parent: Microsoft.Build.Evaluation.ProjectMetadata
  isExternal: false
  name: Xml
  nameWithType: ProjectMetadata.Xml
