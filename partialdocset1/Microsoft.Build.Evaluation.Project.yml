### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Evaluation.Project
  id: Project
  children:
  - Microsoft.Build.Evaluation.Project.#ctor
  - Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement)
  - Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)
  - Microsoft.Build.Evaluation.Project.#ctor(System.String)
  - Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)
  - Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  - Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  - Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  - Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  - Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  - Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  - Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  - Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  - Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  - Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  - Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  - Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  - Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  - Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)
  - Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  - Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)
  - Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  - Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata
  - Microsoft.Build.Evaluation.Project.AllEvaluatedItems
  - Microsoft.Build.Evaluation.Project.AllEvaluatedProperties
  - Microsoft.Build.Evaluation.Project.Build
  - Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)
  - Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  - Microsoft.Build.Evaluation.Project.Build(System.String)
  - Microsoft.Build.Evaluation.Project.Build(System.String[])
  - Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  - Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  - Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  - Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  - Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  - Microsoft.Build.Evaluation.Project.ConditionedProperties
  - Microsoft.Build.Evaluation.Project.CreateProjectInstance
  - Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)
  - Microsoft.Build.Evaluation.Project.DirectoryPath
  - Microsoft.Build.Evaluation.Project.DisableMarkDirty
  - Microsoft.Build.Evaluation.Project.EvaluationCounter
  - Microsoft.Build.Evaluation.Project.ExpandString(System.String)
  - Microsoft.Build.Evaluation.Project.FullPath
  - Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)
  - Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)
  - Microsoft.Build.Evaluation.Project.GetItems(System.String)
  - Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)
  - Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)
  - Microsoft.Build.Evaluation.Project.GetLogicalProject
  - Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)
  - Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)
  - Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)
  - Microsoft.Build.Evaluation.Project.GetProperty(System.String)
  - Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)
  - Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)
  - Microsoft.Build.Evaluation.Project.GlobalProperties
  - Microsoft.Build.Evaluation.Project.Imports
  - Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates
  - Microsoft.Build.Evaluation.Project.IsBuildEnabled
  - Microsoft.Build.Evaluation.Project.IsDirty
  - Microsoft.Build.Evaluation.Project.ItemDefinitions
  - Microsoft.Build.Evaluation.Project.Items
  - Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition
  - Microsoft.Build.Evaluation.Project.ItemTypes
  - Microsoft.Build.Evaluation.Project.MarkDirty
  - Microsoft.Build.Evaluation.Project.ProjectCollection
  - Microsoft.Build.Evaluation.Project.ProjectFileLocation
  - Microsoft.Build.Evaluation.Project.Properties
  - Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary
  - Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)
  - Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)
  - Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})
  - Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)
  - Microsoft.Build.Evaluation.Project.Save
  - Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)
  - Microsoft.Build.Evaluation.Project.Save(System.String)
  - Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)
  - Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)
  - Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)
  - Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)
  - Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)
  - Microsoft.Build.Evaluation.Project.SkipEvaluation
  - Microsoft.Build.Evaluation.Project.SubToolsetVersion
  - Microsoft.Build.Evaluation.Project.Targets
  - Microsoft.Build.Evaluation.Project.ToolsVersion
  - Microsoft.Build.Evaluation.Project.Xml
  langs:
  - csharp
  name: Project
  nameWithType: Project
  fullName: Microsoft.Build.Evaluation.Project
  type: Class
  summary: "Representerer et prosjekt med utformingen nÃ¥ semantikk. Denne klassen kan laste inn prosjektfiler, redigere elementer og egenskaper og bygge prosjekter."
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{FullPath} EffectiveToolsVersion={ToolsVersion} #GlobalProperties={data.globalProperties.Count} #Properties={data.Properties.Count} #ItemTypes={data.ItemTypes.Count} #ItemDefinitions={data.ItemDefinitions.Count} #Items={data.Items.Count} #Targets={data.Targets.Count}")]

      public class Project
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor
  id: '#ctor'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project()
  nameWithType: Project.Project()
  fullName: Microsoft.Build.Evaluation.Project.Project()
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger et tomt prosjekt ved hjelp av globalt prosjekt samlingen globale egenskaper og standardversjon."
  remarks: "Dette prosjektet er lagt til i samlingen globalt prosjekt nÃ¥r det er angitt den fullstendige banen til kildefilen prosjektet vanligvis ved Ã¥ lagre prosjektet."
  syntax:
    content: public Project ();
    parameters: []
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement)
  id: '#ctor(Microsoft.Build.Construction.ProjectRootElement)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(ProjectRootElement)
  nameWithType: Project.Project(ProjectRootElement)
  fullName: Microsoft.Build.Evaluation.Project.Project(ProjectRootElement)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger et tomt prosjekt og evaluerer den ved hjelp av angitte prosjektet roten og globalt prosjekt samlingen globale egenskaper og standard verktÃ¸y versjon."
  remarks: "Dette prosjektet er lagt til samlingen globalt prosjekt nÃ¥r dette prosjektet eller gitt prosjekt roten er angitt fullstendig bane til kildefilen for prosjektet.       OppstÃ¥r InvalidProjectFileException hvis evalueringen mislykkes. Viser InvalidOperationException Hvis det finnes allerede en tilsvarende prosjektet lastes inn i samlingen prosjektet."
  syntax:
    content: public Project (Microsoft.Build.Construction.ProjectRootElement xml);
    parameters:
    - id: xml
      type: Microsoft.Build.Construction.ProjectRootElement
      description: "ProjectRootElement skal brukes for evaluering."
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)
  id: '#ctor(Microsoft.Build.Evaluation.ProjectCollection)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(ProjectCollection)
  nameWithType: Project.Project(ProjectCollection)
  fullName: Microsoft.Build.Evaluation.Project.Project(ProjectCollection)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger et tomt prosjekt ved hjelp av angitte prosjektet samlingen globale egenskaper og standardversjon."
  remarks: "Dette prosjektet er lagt til i samlingen gitt prosjekt nÃ¥r det er angitt den fullstendige banen til kildefilen prosjektet vanligvis ved Ã¥ lagre prosjektet."
  syntax:
    content: public Project (Microsoft.Build.Evaluation.ProjectCollection projectCollection);
    parameters:
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "Samlingen prosjekt som det nye prosjektet er lagt til."
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(String)
  nameWithType: Project.Project(String)
  fullName: Microsoft.Build.Evaluation.Project.Project(String)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger et prosjekt og evaluerer det angitte prosjektet kildefilen og med globalt prosjekt samlingen globale egenskaper og verktÃ¸y for standardversjonen."
  remarks: "Prosjektet er lagt til i samlingen globalt prosjekt.       OppstÃ¥r InvalidOperationException Hvis det finnes allerede et prosjekt i samlingen prosjektet som returnerer denne kildefilen for prosjektet. Kan Iverksett i/u-relaterte unntak."
  syntax:
    content: public Project (string projectFile);
    parameters:
    - id: projectFile
      type: System.String
      description: "Prosjektet kildefilen som skal evalueres."
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions:
  - type: Microsoft.Build.Exceptions.InvalidProjectFileException
    commentId: T:Microsoft.Build.Exceptions.InvalidProjectFileException
    description: "Hvis evalueringen mislykkes."
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)
  id: '#ctor(System.Xml.XmlReader)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(XmlReader)
  nameWithType: Project.Project(XmlReader)
  fullName: Microsoft.Build.Evaluation.Project.Project(XmlReader)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger et prosjekt og evaluerer kildekode fra den gitte XML-leseren. Kildekoden evalueres med globalt prosjekt samlingen globale egenskaper og standardversjon."
  remarks: "Dette prosjektet er lagt til i samlingen globalt prosjekt nÃ¥r det er angitt den fullstendige banen til kildefilen prosjektet vanligvis ved Ã¥ lagre prosjektet.       OppstÃ¥r InvalidProjectFileException hvis evalueringen mislykkes. Viser InvalidOperationException Hvis det finnes allerede en tilsvarende prosjektet lastes inn i samlingen prosjektet."
  syntax:
    content: public Project (System.Xml.XmlReader xmlReader);
    parameters:
    - id: xmlReader
      type: System.Xml.XmlReader
      description: "XML-leseren til Ã¥ lese prosjektet kildekode fra."
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  id: '#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(ProjectRootElement,IDictionary<String,String>,String)
  nameWithType: Project.Project(ProjectRootElement,IDictionary<String,String>,String)
  fullName: Microsoft.Build.Evaluation.Project.Project(ProjectRootElement,IDictionary<String,String>,String)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger et tomt prosjekt og evaluerer den ved hjelp av den angitte prosjekt roten og med de angitte globale egenskapene og angitt versjon."
  remarks: "Dette prosjektet er lagt til samlingen globalt prosjekt nÃ¥r dette prosjektet eller gitt prosjekt roten er angitt fullstendig bane til kildefilen for prosjektet.       OppstÃ¥r InvalidProjectFileException hvis evalueringen mislykkes. Viser InvalidOperationException Hvis det finnes allerede en tilsvarende prosjektet lastes inn i samlingen prosjektet."
  syntax:
    content: public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion);
    parameters:
    - id: xml
      type: Microsoft.Build.Construction.ProjectRootElement
      description: "Prosjektet root skal brukes for evaluering."
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Globale egenskapene som skal evalueres med. Kan vÃ¦re null i som tilfelle inneholdende prosjektet-samlingens global egenskapene vil bli brukt."
    - id: toolsVersion
      type: System.String
      description: "VerktÃ¸y versjonen for Ã¥ evaluere med. Kan vÃ¦re null."
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  id: '#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(IDictionary<String,String>,String,ProjectCollection)
  nameWithType: Project.Project(IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Evaluation.Project.Project(IDictionary<String,String>,String,ProjectCollection)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger et tomt prosjekt for Ã¥ bli evaluert med gitt prosjekt-samlingen og med de angitte globale egenskapene og gitt versjon."
  remarks: "Prosjektet legges til den angitte samlingen nÃ¥r det er angitt den fullstendige banen til kildefilen prosjektet vanligvis ved Ã¥ lagre prosjektet."
  syntax:
    content: public Project (System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);
    parameters:
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Globale egenskapene som skal evalueres med. Kan vÃ¦re null i som tilfelle inneholdende prosjektet-samlingens global egenskapene vil bli brukt."
    - id: toolsVersion
      type: System.String
      description: "VerktÃ¸y-versjonen som brukes til Ã¥ evaluere prosjektet. Kan vÃ¦re null."
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "Samlingen prosjektet nytt prosjekt legges til."
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(String,IDictionary<String,String>,String)
  nameWithType: Project.Project(String,IDictionary<String,String>,String)
  fullName: Microsoft.Build.Evaluation.Project.Project(String,IDictionary<String,String>,String)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger et prosjekt og evaluerer den fra prosjektfilen gitt kilde og med de angitte globale egenskapene og angitt versjon."
  remarks: "Prosjektet er lagt til i samlingen globalt prosjekt.       OppstÃ¥r InvalidProjectFileException hvis evalueringen mislykkes. Viser InvalidOperationException Hvis det finnes allerede en tilsvarende prosjektet lastes inn i samlingen prosjektet. Kan Iverksett i/u-relaterte unntak."
  syntax:
    content: public Project (string projectFile, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion);
    parameters:
    - id: projectFile
      type: System.String
      description: "Banen til prosjektet kildefilen som skal evalueres."
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Globale egenskapene som skal evalueres med. Kan vÃ¦re null i som tilfelle inneholdende prosjektet-samlingens global egenskapene vil bli brukt."
    - id: toolsVersion
      type: System.String
      description: "VerktÃ¸y versjonen for Ã¥ evaluere med. Kan vÃ¦re null."
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  id: '#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(XmlReader,IDictionary<String,String>,String)
  nameWithType: Project.Project(XmlReader,IDictionary<String,String>,String)
  fullName: Microsoft.Build.Evaluation.Project.Project(XmlReader,IDictionary<String,String>,String)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger et prosjekt og evaluerer kildekode fra den gitte XML-leseren. Kildekoden, er evaluert med de angitte globale egenskapene og versjon."
  remarks: "Dette prosjektet er lagt til i samlingen globalt prosjekt nÃ¥r det er angitt den fullstendige banen til kildefilen prosjektet vanligvis ved Ã¥ lagre prosjektet.       OppstÃ¥r InvalidProjectFileException hvis evalueringen mislykkes. Viser InvalidOperationException Hvis det finnes allerede en tilsvarende prosjektet lastes inn i samlingen prosjektet."
  syntax:
    content: public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion);
    parameters:
    - id: xmlReader
      type: System.Xml.XmlReader
      description: "XML-leseren til Ã¥ lese prosjektet kildekode fra."
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Globale egenskapene som skal evalueres med. Kan vÃ¦re null i som tilfelle inneholdende prosjektet-samlingens global egenskapene vil bli brukt."
    - id: toolsVersion
      type: System.String
      description: "VerktÃ¸y versjonen for Ã¥ evaluere med. Kan vÃ¦re null."
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  id: '#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
  nameWithType: Project.Project(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Evaluation.Project.Project(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger et prosjekt og evaluerer den ved hjelp av den angitte prosjekt roten og med de angitte globale egenskapene og angitt versjon."
  remarks: "Dette prosjektet legges til samlingen gitt prosjekt nÃ¥r dette prosjektet eller gitt prosjekt roten gis den fullstendige banen til kildefilen for prosjektet.       OppstÃ¥r InvalidProjectFileException hvis evalueringen mislykkes. Viser InvalidOperationException Hvis det finnes allerede en tilsvarende prosjektet lastes inn i samlingen prosjektet."
  syntax:
    content: public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);
    parameters:
    - id: xml
      type: Microsoft.Build.Construction.ProjectRootElement
      description: "Prosjektet root skal brukes for evaluering."
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Globale egenskapene som skal evalueres med. Kan vÃ¦re null i som tilfelle inneholdende prosjektet-samlingens global egenskapene vil bli brukt."
    - id: toolsVersion
      type: System.String
      description: "VerktÃ¸y versjonen for Ã¥ evaluere med. Kan vÃ¦re null."
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "Samlingen prosjektet prosjektet legges til."
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(String,IDictionary<String,String>,String,ProjectCollection)
  nameWithType: Project.Project(String,IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Evaluation.Project.Project(String,IDictionary<String,String>,String,ProjectCollection)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger et prosjekt og evaluerer den fra prosjektfilen gitt kilde og med de angitte globale egenskapene og angitt versjon."
  remarks: "Prosjektet er lagt til i samlingen gitt prosjekt.       OppstÃ¥r InvalidProjectFileException hvis evalueringen mislykkes. Viser InvalidOperationException Hvis det finnes allerede en tilsvarende prosjektet lastes inn i samlingen prosjektet. Kan Iverksett i/u-relaterte unntak."
  syntax:
    content: public Project (string projectFile, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);
    parameters:
    - id: projectFile
      type: System.String
      description: "Banen til prosjektet kildefilen som skal evalueres."
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Globale egenskaper. Kan vÃ¦re null."
    - id: toolsVersion
      type: System.String
      description: "VerktÃ¸y-versjonen. Kan vÃ¦re null."
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "Samlingen prosjektet prosjektet legges til. Kan ikke vÃ¦re null."
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  id: '#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(XmlReader,IDictionary<String,String>,String,ProjectCollection)
  nameWithType: Project.Project(XmlReader,IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Evaluation.Project.Project(XmlReader,IDictionary<String,String>,String,ProjectCollection)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger et prosjekt og evaluerer kildekode fra den gitte XML-leseren. Kildekoden, er evaluert med de angitte globale egenskapene og versjon."
  remarks: "Dette prosjektet legges til samlingen gitt prosjekt nÃ¥r dette prosjektet eller gitt prosjekt roten gis den fullstendige banen til kildefilen for prosjektet.       OppstÃ¥r InvalidProjectFileException hvis evalueringen mislykkes. Viser InvalidOperationException Hvis det finnes allerede en tilsvarende prosjektet lastes inn i samlingen prosjektet."
  syntax:
    content: public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);
    parameters:
    - id: xmlReader
      type: System.Xml.XmlReader
      description: "XML-leseren til Ã¥ lese prosjektet kildekode fra."
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Globale egenskapene som skal evalueres med. Kan vÃ¦re null i som tilfelle inneholdende prosjektet-samlingens global egenskapene vil bli brukt."
    - id: toolsVersion
      type: System.String
      description: "VerktÃ¸y versjonen for Ã¥ evaluere med. Kan vÃ¦re null."
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "Samlingen prosjektet prosjektet legges til. Kan ikke vÃ¦re null."
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  id: '#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  nameWithType: Project.Project(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  fullName: Microsoft.Build.Evaluation.Project.Project(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger et prosjekt og evaluerer den ved hjelp av den angitte prosjekt roten med de angitte globale egenskapene angitt versjon, og gitt innstillingene for innlasting."
  remarks: "Dette prosjektet legges til samlingen gitt prosjekt nÃ¥r dette prosjektet eller gitt prosjekt roten gis den fullstendige banen til kildefilen for prosjektet.       OppstÃ¥r InvalidProjectFileException hvis evalueringen mislykkes. Viser InvalidOperationException Hvis det finnes allerede en tilsvarende prosjektet lastes inn i samlingen prosjektet."
  syntax:
    content: public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);
    parameters:
    - id: xml
      type: Microsoft.Build.Construction.ProjectRootElement
      description: "Prosjektet root skal brukes for evaluering."
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Globale egenskapene som skal evalueres med. Kan vÃ¦re null i som tilfelle inneholdende prosjektet-samlingens global egenskapene vil bli brukt."
    - id: toolsVersion
      type: System.String
      description: "VerktÃ¸y versjonen for Ã¥ evaluere med. Kan vÃ¦re null."
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "Samlingen prosjektet prosjektet legges til. Kan ikke vÃ¦re null."
    - id: loadSettings
      type: Microsoft.Build.Evaluation.ProjectLoadSettings
      description: "Last inn innstillingene som skal brukes for evaluering."
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(String,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  nameWithType: Project.Project(String,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  fullName: Microsoft.Build.Evaluation.Project.Project(String,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger et prosjekt og evaluerer det angitte prosjektet kildefilen og med de angitte globale egenskapene angitt versjon, og gitt innstillingene for innlasting."
  remarks: "Prosjektet er lagt til i samlingen gitt prosjekt.       OppstÃ¥r InvalidProjectFileException hvis evalueringen mislykkes. Viser InvalidOperationException Hvis det finnes allerede en tilsvarende prosjektet lastes inn i samlingen prosjektet. Kan Iverksett i/u-relaterte unntak."
  syntax:
    content: public Project (string projectFile, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);
    parameters:
    - id: projectFile
      type: System.String
      description: "Banen til prosjektet kildefilen som skal evalueres."
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Globale egenskapene som skal evalueres med. Kan vÃ¦re null i som tilfelle inneholdende prosjektet-samlingens global egenskapene vil bli brukt."
    - id: toolsVersion
      type: System.String
      description: "VerktÃ¸y-versjonen. Kan vÃ¦re null."
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "Samlingen prosjektet prosjektet legges til. Kan ikke vÃ¦re null."
    - id: loadSettings
      type: Microsoft.Build.Evaluation.ProjectLoadSettings
      description: "Last inn innstillingene som skal brukes for evaluering."
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  id: '#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(XmlReader,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  nameWithType: Project.Project(XmlReader,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  fullName: Microsoft.Build.Evaluation.Project.Project(XmlReader,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger et prosjekt og evaluerer kildekode fra den gitte XML-leseren. Kildekoden, er evaluert med de angitte globale egenskapene og versjon."
  remarks: "Dette prosjektet legges til samlingen gitt prosjekt nÃ¥r dette prosjektet eller gitt prosjekt roten gis den fullstendige banen til kildefilen for prosjektet.       OppstÃ¥r InvalidProjectFileException hvis evalueringen mislykkes. Viser InvalidOperationException Hvis det finnes allerede en tilsvarende prosjektet lastes inn i samlingen prosjektet."
  syntax:
    content: public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);
    parameters:
    - id: xmlReader
      type: System.Xml.XmlReader
      description: "XML-leseren som kan lese prosjektkode kilde."
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Globale egenskapene som skal evalueres med. Kan vÃ¦re null i som tilfelle inneholdende prosjektet-samlingens global egenskapene vil bli brukt."
    - id: toolsVersion
      type: System.String
      description: "VerktÃ¸y versjonen for Ã¥ evaluere med. Kan vÃ¦re null."
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "Samlingen prosjektet prosjektet legges til. Kan ikke vÃ¦re null."
    - id: loadSettings
      type: Microsoft.Build.Evaluation.ProjectLoadSettings
      description: "Last inn innstillingene som skal brukes for evaluering."
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  id: '#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  nameWithType: Project.Project(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  fullName: Microsoft.Build.Evaluation.Project.Project(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger et prosjekt og evaluerer den ved hjelp av den angitte prosjekt roten med den angitte globale egenskaper, verktÃ¸y og sub verktÃ¸ysettet versjoner project samlingen og laste inn innstillingene."
  remarks: "Dette prosjektet legges til samlingen gitt prosjekt nÃ¥r dette prosjektet eller gitt prosjekt roten gis den fullstendige banen til kildefilen for prosjektet.       OppstÃ¥r InvalidProjectFileException hvis evalueringen mislykkes. Viser InvalidOperationException Hvis det finnes allerede en tilsvarende prosjektet lastes inn i samlingen prosjektet."
  syntax:
    content: public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);
    parameters:
    - id: xml
      type: Microsoft.Build.Construction.ProjectRootElement
      description: "Prosjektet root skal brukes for evaluering."
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Globale egenskapene som skal evalueres med. Kan vÃ¦re null i som tilfelle inneholdende prosjektet-samlingens global egenskapene vil bli brukt."
    - id: toolsVersion
      type: System.String
      description: "VerktÃ¸y versjonen for Ã¥ evaluere med. Kan vÃ¦re null."
    - id: subToolsetVersion
      type: System.String
      description: "Sub verktÃ¸ysettet versjonen ikke evaluere med. Kan vÃ¦re null."
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "Samlingen prosjektet prosjektet legges til. Kan ikke vÃ¦re null."
    - id: loadSettings
      type: Microsoft.Build.Evaluation.ProjectLoadSettings
      description: "Last inn innstillingene som skal brukes for evaluering."
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(String,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  nameWithType: Project.Project(String,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  fullName: Microsoft.Build.Evaluation.Project.Project(String,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger et prosjekt og evaluerer det angitte prosjektet kildefilen og med den angitte globale egenskaper, verktÃ¸y og sub verktÃ¸ysettet versjoner prosjektet samlingen og innstillingene for innlasting."
  remarks: "Prosjektet er lagt til i samlingen gitt prosjekt.       OppstÃ¥r InvalidProjectFileException hvis evalueringen mislykkes. Viser InvalidOperationException Hvis det finnes allerede en tilsvarende prosjektet lastes inn i samlingen prosjektet. Kan Iverksett i/u-relaterte unntak."
  syntax:
    content: public Project (string projectFile, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);
    parameters:
    - id: projectFile
      type: System.String
      description: "Banen til prosjektet kildefilen som skal evalueres."
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Globale egenskapene som skal evalueres med. Kan vÃ¦re null i som tilfelle inneholdende prosjektet-samlingens global egenskapene vil bli brukt."
    - id: toolsVersion
      type: System.String
      description: "VerktÃ¸y-versjonen. Kan vÃ¦re null."
    - id: subToolsetVersion
      type: System.String
      description: "Sub verktÃ¸ysettet versjonen. Kan vÃ¦re null."
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "Samlingen prosjektet prosjektet legges til. Kan ikke vÃ¦re null."
    - id: loadSettings
      type: Microsoft.Build.Evaluation.ProjectLoadSettings
      description: "Last inn innstillingene som skal brukes for evaluering."
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  id: '#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)'
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Project(XmlReader,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  nameWithType: Project.Project(XmlReader,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  fullName: Microsoft.Build.Evaluation.Project.Project(XmlReader,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger et prosjekt og evaluerer kildekode fra den gitte XML-leseren. Kildekoden evalueres med den angitte globale egenskaper, verktÃ¸y og sub verktÃ¸ysettet versjoner prosjektet samlingen og innstillingene for innlasting."
  remarks: "Dette prosjektet legges til samlingen gitt prosjekt nÃ¥r dette prosjektet eller gitt prosjekt roten gis den fullstendige banen til kildefilen for prosjektet.       OppstÃ¥r InvalidProjectFileException hvis evalueringen mislykkes. Viser InvalidOperationException Hvis det finnes allerede en tilsvarende prosjektet lastes inn i samlingen prosjektet."
  syntax:
    content: public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);
    parameters:
    - id: xmlReader
      type: System.Xml.XmlReader
      description: "XML-leseren til Ã¥ lese prosjektet kildekode fra."
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Globale egenskapene som skal evalueres med. Kan vÃ¦re null i som tilfelle inneholdende prosjektet-samlingens global egenskapene vil bli brukt."
    - id: toolsVersion
      type: System.String
      description: "VerktÃ¸y versjonen for Ã¥ evaluere med. Kan vÃ¦re null."
    - id: subToolsetVersion
      type: System.String
      description: "Sub verktÃ¸ysettet versjonen ikke evaluere med. Kan vÃ¦re null."
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "Samlingen prosjektet prosjektet legges til. Kan ikke vÃ¦re null."
    - id: loadSettings
      type: Microsoft.Build.Evaluation.ProjectLoadSettings
      description: "Last inn innstillingene som skal brukes for evaluering."
  overload: Microsoft.Build.Evaluation.Project.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)
  id: AddItem(System.String,System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: AddItem(String,String)
  nameWithType: Project.AddItem(String,String)
  fullName: Microsoft.Build.Evaluation.Project.AddItem(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Legger til et element med ingen metadata i prosjektet."
  remarks: "Eventuelle metadata kan legges til senere. Endrer ikke prosjektet kilden hvis et uttrykk med jokertegn allerede inneholder nytt element.       Evalueringen foregÃ¥r pÃ¥ basis beste forsÃ¸k. Elementer som er definert i prosjektet kilden etter nye elementet kan brukes for evaluering. Bare dette elementet skal evalueres. Andre elementer som kanskje er avhengige av den pÃ¥virkes ikke."
  syntax:
    content: public System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem> AddItem (string itemType, string unevaluatedInclude);
    parameters:
    - id: itemType
      type: System.String
      description: "Elementtypen for tillagt elementet."
    - id: unevaluatedInclude
      type: System.String
      description: "Inkluder for elementet som skal legges til."
    return:
      type: System.Collections.Generic.IList{Microsoft.Build.Evaluation.ProjectItem}
      description: "Returnerer det lagt til elementet."
  overload: Microsoft.Build.Evaluation.Project.AddItem*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  id: AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  nameWithType: Project.AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  fullName: Microsoft.Build.Evaluation.Project.AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Legger til et element med de angitte metadataene i prosjektet."
  remarks: "Metadataene kan vÃ¦re null, noe som angir ingen metadata.       Evalueringen foregÃ¥r pÃ¥ basis beste forsÃ¸k. Elementer som er definert i prosjektet kilden etter nye elementet kan brukes for evaluering. Bare dette elementet skal evalueres. Andre elementer som kanskje er avhengige av den pÃ¥virkes ikke."
  syntax:
    content: public System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem> AddItem (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,string>> metadata);
    parameters:
    - id: itemType
      type: System.String
      description: "Elementtypen for tillagt elementet."
    - id: unevaluatedInclude
      type: System.String
      description: "Inkluder for elementet som skal legges til."
    - id: metadata
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
      description: "Metadata for tillagt elementet."
    return:
      type: System.Collections.Generic.IList{Microsoft.Build.Evaluation.ProjectItem}
      description: "Returnerer det lagt til elementet."
  overload: Microsoft.Build.Evaluation.Project.AddItem*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)
  id: AddItemFast(System.String,System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: AddItemFast(String,String)
  nameWithType: Project.AddItemFast(String,String)
  fullName: Microsoft.Build.Evaluation.Project.AddItemFast(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Legger til et element med ingen metadata i prosjektet.  GjÃ¸r ingen arbeid for Ã¥ se om en eksisterende jokertegn allerede samsvarer med det nye elementet med mindre det er det fÃ¸rste elementet i en gruppe.  GjÃ¸r ingen arbeid for Ã¥ finne det nye elementet nÃ¦r like elementer."
  remarks: "FÃ¸yer til elementet i den fÃ¸rste gruppen element som ikke har en betingelse og har enten ikke underordnede eller som fÃ¸rste underordnede er et element av samme type.       Evaluerer pÃ¥ beste forsÃ¸k basis:-utvides med alle elementer. Elementer som er definert i XML-under ny elementet kan brukes, selv om en virkelig Evalueringsfeil de vil ikke.       Bare dette elementet skal evalueres. Andre elementer som kanskje er avhengige av den pÃ¥virkes ikke.       Dette er en tjeneste som er den forstÃ¥tt samsvarer ikke nÃ¸dvendigvis la prosjektet helt selvbetjeningsportal konsekvente fÃ¸r ny vurdering."
  syntax:
    content: public System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem> AddItemFast (string itemType, string unevaluatedInclude);
    parameters:
    - id: itemType
      type: System.String
      description: "Elementtypen som skal legges til."
    - id: unevaluatedInclude
      type: System.String
      description: "Unevaluated Inkluder attributtet som skal legges til elementet."
    return:
      type: System.Collections.Generic.IList{Microsoft.Build.Evaluation.ProjectItem}
      description: "Returnerer en liste med prosjektelementer som er lagt til."
  overload: Microsoft.Build.Evaluation.Project.AddItemFast*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  id: AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: AddItemFast(String,String,IEnumerable<KeyValuePair<String,String>>)
  nameWithType: Project.AddItemFast(String,String,IEnumerable<KeyValuePair<String,String>>)
  fullName: Microsoft.Build.Evaluation.Project.AddItemFast(String,String,IEnumerable<KeyValuePair<String,String>>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Legger til et element med metadata i prosjektet. Metadataene kan vÃ¦re null, som angir ingen metadata. GjÃ¸r ingen arbeid for Ã¥ se om en eksisterende jokertegn allerede samsvarer med det nye elementet med mindre det er det fÃ¸rste elementet i en gruppe. GjÃ¸r ingen arbeid for Ã¥ finne det nye elementet nÃ¦r like elementer."
  remarks: "FÃ¸yer til elementet i den fÃ¸rste gruppen element som ikke har en betingelse og har enten ikke underordnede eller som fÃ¸rste underordnede er et element av samme type.       Evaluerer pÃ¥ beste forsÃ¸k basis:-utvides med alle elementer. Elementer som er definert i XML-under ny elementet kan brukes, selv om en virkelig Evalueringsfeil de vil ikke.       Bare dette elementet skal evalueres. Andre elementer som kanskje er avhengige av den pÃ¥virkes ikke.       Dette er en tjeneste som er den forstÃ¥tt samsvarer ikke nÃ¸dvendigvis la prosjektet helt selvbetjeningsportal konsekvente fÃ¸r ny vurdering."
  syntax:
    content: public System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem> AddItemFast (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,string>> metadata);
    parameters:
    - id: itemType
      type: System.String
      description: "Elementtypen som skal legges til."
    - id: unevaluatedInclude
      type: System.String
      description: "Unevaluated Inkluder attributtet som skal legges til elementet."
    - id: metadata
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
      description: "Metadataene som skal legges til."
    return:
      type: System.Collections.Generic.IList{Microsoft.Build.Evaluation.ProjectItem}
      description: "Returnerer en liste med prosjektelementer som er lagt til."
  overload: Microsoft.Build.Evaluation.Project.AddItemFast*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata
  id: AllEvaluatedItemDefinitionMetadata
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: AllEvaluatedItemDefinitionMetadata
  nameWithType: Project.AllEvaluatedItemDefinitionMetadata
  fullName: Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter alle elementet definisjon metadata ble funnet under evaluering."
  remarks: "Element-metadata leses under andre evalueringen trinnet. I motsetning til metadata som returneres av egenskapen ItemDefinitions, disse metadataene er i, og inkluderer eventuelle metadata senere overstyres med samme navn og elementtype."
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata> AllEvaluatedItemDefinitionMetadata { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectMetadata}
      description: "Returnerer alle elementet definisjon metadata ble funnet under evaluering. Dette omfatter ikke noen elementer som betingelser ikke kan evalueres til true eller eventuelle elementet definisjon metadata lagt siden siste evalueringen."
  overload: Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedItems
  id: AllEvaluatedItems
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: AllEvaluatedItems
  nameWithType: Project.AllEvaluatedItems
  fullName: Microsoft.Build.Evaluation.Project.AllEvaluatedItems
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter en opplisting over alle elementer som ble funnet under evaluering. Disse leses under tredje evalueringen trinnet."
  remarks: "I motsetning til elementene som er returnert av egenskapen elementer, disse er ordnet i rekkefÃ¸lge med hensyn til alle andre elementer som ble funnet under evaluering, ikke bare ordnet i forhold til elementer med samme elementtype.       I noen programmer kan denne fullfÃ¸rt gjensidig rekkefÃ¸lge er viktig, og slik vert bruke denne egenskapen.       Opplistingen inneholder ikke noen elementer som betingelser ikke kan evalueres til true, og heller ikke inneholder den elementer lagt siden siste evalueringen."
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem> AllEvaluatedItems { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectItem}
      description: "Returnerer en opplisting over alle elementer som ble funnet under evaluering. Disse leses under tredje evalueringen trinnet."
  overload: Microsoft.Build.Evaluation.Project.AllEvaluatedItems*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedProperties
  id: AllEvaluatedProperties
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: AllEvaluatedProperties
  nameWithType: Project.AllEvaluatedProperties
  fullName: Microsoft.Build.Evaluation.Project.AllEvaluatedProperties
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter alle egenskapene som ble funnet under evaluering."
  remarks: "Disse egenskapene leses under fÃ¸rste trinnet i evalueringen. I motsetning til egenskaper som er returnert av egenskapen Properties disse sorteres og inkluderer egenskaper senere overstyres med samme navn."
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectProperty> AllEvaluatedProperties { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectProperty}
      description: "Returnerer alle egenskapene som ble funnet under evaluering. Dette omfatter ikke egenskaper som betingelser ikke kan evalueres til true eller egenskaper lagt siden siste evalueringen."
  overload: Microsoft.Build.Evaluation.Project.AllEvaluatedProperties*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Build
  id: Build
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Build()
  nameWithType: Project.Build()
  fullName: Microsoft.Build.Evaluation.Project.Build()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger dette prosjektet med standardmÃ¥l."
  remarks: "Angi eller hente virtuelle elementer kompilering formÃ¥lene, klone en forekomst av prosjektet eksplisitt og bygge som. Denne metoden ikke endre objektet prosjektet."
  syntax:
    content: public bool Build ();
    parameters: []
    return:
      type: System.Boolean
      description: "Returnerer true pÃ¥ vellykket; False ellers."
  overload: Microsoft.Build.Evaluation.Project.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)
  id: Build(Microsoft.Build.Framework.ILogger)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Build(ILogger)
  nameWithType: Project.Build(ILogger)
  fullName: Microsoft.Build.Evaluation.Project.Build(ILogger)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger prosjektet, ved hjelp av standardmÃ¥l og angitte meldingslogging."
  remarks: "Angi eller hente virtuelle elementer kompilering formÃ¥lene, klone en forekomst av prosjektet eksplisitt og bygge som. Denne metoden ikke endre objektet prosjektet."
  syntax:
    content: public bool Build (Microsoft.Build.Framework.ILogger logger);
    parameters:
    - id: logger
      type: Microsoft.Build.Framework.ILogger
      description: "Transaksjonslogging som skal brukes under byggingen."
    return:
      type: System.Boolean
      description: "Returnerer true pÃ¥ vellykket; False ellers."
  overload: Microsoft.Build.Evaluation.Project.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  id: Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Build(IEnumerable<ILogger>)
  nameWithType: Project.Build(IEnumerable<ILogger>)
  fullName: Microsoft.Build.Evaluation.Project.Build(IEnumerable<ILogger>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger prosjektet, ved hjelp av standardmÃ¥l og angitte tastetrykkregistratorer."
  remarks: "Angi eller hente virtuelle elementer kompilering formÃ¥lene, klone en forekomst av prosjektet eksplisitt og bygge som. Denne metoden ikke endre objektet prosjektet."
  syntax:
    content: public bool Build (System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers);
    parameters:
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "En opplisting over alle tastetrykkregistratorer som skal brukes under byggingen."
    return:
      type: System.Boolean
      description: "Returnerer true pÃ¥ vellykket; False ellers."
  overload: Microsoft.Build.Evaluation.Project.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Build(System.String)
  id: Build(System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Build(String)
  nameWithType: Project.Build(String)
  fullName: Microsoft.Build.Evaluation.Project.Build(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger dette prosjektet bygging av det angitte mÃ¥let."
  remarks: "Angi eller hente virtuelle elementer kompilering formÃ¥lene, klone en forekomst av prosjektet eksplisitt og bygge som. Denne metoden ikke endre objektet prosjektet."
  syntax:
    content: public bool Build (string target);
    parameters:
    - id: target
      type: System.String
      description: "MÃ¥let som skal bygges."
    return:
      type: System.Boolean
      description: "Returnerer true pÃ¥ vellykket; False ellers."
  overload: Microsoft.Build.Evaluation.Project.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Build(System.String[])
  id: Build(System.String[])
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Build(String[])
  nameWithType: Project.Build(String[])
  fullName: Microsoft.Build.Evaluation.Project.Build(String[])
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger dette prosjektet bygging av de angitte mÃ¥l."
  remarks: "Angi eller hente virtuelle elementer kompilering formÃ¥lene, klone en forekomst av prosjektet eksplisitt og bygge som. Denne metoden ikke endre objektet prosjektet."
  syntax:
    content: public bool Build (string[] targets);
    parameters:
    - id: targets
      type: System.String[]
      description: "En matrise med mÃ¥l som skal bygges."
    return:
      type: System.Boolean
      description: "Returnerer true pÃ¥ vellykket; False ellers."
  overload: Microsoft.Build.Evaluation.Project.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  id: Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: Project.Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Evaluation.Project.Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger dette prosjektet med standardmÃ¥l og angitte tastetrykkregistratorer og eksterne tastetrykkregistratorer."
  remarks: "Angi eller hente virtuelle elementer kompilering formÃ¥lene, klone en forekomst av prosjektet eksplisitt og bygge som. Denne metoden ikke endre objektet prosjektet."
  syntax:
    content: public bool Build (System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers);
    parameters:
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "Tastetrykkregistratorer som skal brukes under byggingen."
    - id: remoteLoggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}
      description: "De eksterne tastetrykkregistratorer som skal brukes under byggingen."
    return:
      type: System.Boolean
      description: "Returnerer true pÃ¥ vellykket; False ellers."
  overload: Microsoft.Build.Evaluation.Project.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  id: Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Build(String,IEnumerable<ILogger>)
  nameWithType: Project.Build(String,IEnumerable<ILogger>)
  fullName: Microsoft.Build.Evaluation.Project.Build(String,IEnumerable<ILogger>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger dette prosjektet bygge angitte mÃ¥let og bruke de angitte tastetrykkregistratorer."
  remarks: "Angi eller hente virtuelle elementer kompilering formÃ¥lene, klone en forekomst av prosjektet eksplisitt og bygge som. Denne metoden ikke endre objektet prosjektet."
  syntax:
    content: public bool Build (string target, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers);
    parameters:
    - id: target
      type: System.String
      description: "MÃ¥let som skal bygges."
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "Tastetrykkregistratorer som skal brukes under byggingen."
    return:
      type: System.Boolean
      description: "Returnerer true pÃ¥ vellykket; False ellers."
  overload: Microsoft.Build.Evaluation.Project.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  id: Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Build(String[],IEnumerable<ILogger>)
  nameWithType: Project.Build(String[],IEnumerable<ILogger>)
  fullName: Microsoft.Build.Evaluation.Project.Build(String[],IEnumerable<ILogger>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger dette prosjektet bygge angitte mÃ¥lene og bruke de angitte tastetrykkregistratorer."
  remarks: "Angi eller hente virtuelle elementer kompilering formÃ¥lene, klone en forekomst av prosjektet eksplisitt og bygge som. Denne metoden ikke endre objektet prosjektet."
  syntax:
    content: public bool Build (string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers);
    parameters:
    - id: targets
      type: System.String[]
      description: "MÃ¥lene som skal bygges."
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "Tastetrykkregistratorer som skal brukes under byggingen."
    return:
      type: System.Boolean
      description: "Returnerer true pÃ¥ vellykket; False ellers."
  overload: Microsoft.Build.Evaluation.Project.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  id: Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: Project.Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Evaluation.Project.Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger dette prosjektet bygging angitte mÃ¥let og ved hjelp av angitte tastetrykkregistratorer og eksterne tastetrykkregistratorer."
  remarks: "Angi eller hente virtuelle elementer kompilering formÃ¥lene, klone en forekomst av prosjektet eksplisitt og bygge som. Denne metoden ikke endre objektet prosjektet."
  syntax:
    content: public bool Build (string target, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers);
    parameters:
    - id: target
      type: System.String
      description: "MÃ¥let som skal bygges."
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "Tastetrykkregistratorer som skal brukes under byggingen."
    - id: remoteLoggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}
      description: "De eksterne tastetrykkregistratorer som skal brukes under byggingen."
    return:
      type: System.Boolean
      description: "Returnerer true pÃ¥ vellykket; False ellers."
  overload: Microsoft.Build.Evaluation.Project.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  id: Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: Project.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Evaluation.Project.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Bygger dette prosjektet bygging av de angitte mÃ¥lene og bruke angitte tastetrykkregistratorer og eksterne tastetrykkregistratorer."
  remarks: "Angi eller hente virtuelle elementer kompilering formÃ¥lene, klone en forekomst av prosjektet eksplisitt og bygge som. Denne metoden ikke endre objektet prosjektet."
  syntax:
    content: public bool Build (string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers);
    parameters:
    - id: targets
      type: System.String[]
      description: "MÃ¥lene som skal bygges."
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "Tastetrykkregistratorer som skal brukes under byggingen."
    - id: remoteLoggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}
      description: "De eksterne tastetrykkregistratorer som skal brukes under byggingen."
    return:
      type: System.Boolean
      description: "Returnerer true pÃ¥ vellykket; False ellers."
  overload: Microsoft.Build.Evaluation.Project.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.ConditionedProperties
  id: ConditionedProperties
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: ConditionedProperties
  nameWithType: Project.ConditionedProperties
  fullName: Microsoft.Build.Evaluation.Project.ConditionedProperties
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter en samling med mulige verdier for egenskapene som brukes til Ã¥ evaluere betingelser som er funnet pÃ¥ Egenskaper-egenskapsgrupper, importerer, og nÃ¥r."
  remarks: 'For example, if the following conditions existed on properties in a project: Condition="''$(Configuration)&#124;$(Platform)'' == ''Debug&#124;x86''" Condition="''$(Configuration)'' == ''Release''" the table would be populated with { "Configuration", { "Debug", "Release" }} { "Platform", { "x86" }} This collection is used by Visual Studio to determine the configurations defined in the project'
  syntax:
    content: public System.Collections.Generic.IDictionary<string,System.Collections.Generic.List<string>> ConditionedProperties { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.List{System.String}}
      description: "Returnerer en samling med mulige verdier for egenskapene som brukes til Ã¥ evaluere betingelser som er funnet pÃ¥ Egenskaper-egenskapsgrupper, importerer, og nÃ¥r. Samlingen er i kanoniske form. Navnet pÃ¥ oppfÃ¸ringen er navnet pÃ¥ egenskapen som skal evalueres, og verdien er en liste med mulige verdier."
  overload: Microsoft.Build.Evaluation.Project.ConditionedProperties*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.CreateProjectInstance
  id: CreateProjectInstance
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: CreateProjectInstance()
  nameWithType: Project.CreateProjectInstance()
  fullName: Microsoft.Build.Evaluation.Project.CreateProjectInstance()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Oppretter en forekomst av prosjektet basert pÃ¥ dette prosjektet, men helt koblet fra den."
  remarks: "Kan brukes til Ã¥ bygge uavhengig. Det opprinnelige prosjektet evalueres fÃ¸r du oppretter forekomsten, hvis nÃ¸dvendig, slik at det opprinnelige prosjektet er merket som uendret."
  syntax:
    content: public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance ();
    parameters: []
    return:
      type: Microsoft.Build.Execution.ProjectInstance
      description: "Returnerer forekomsten av prosjektet."
  overload: Microsoft.Build.Evaluation.Project.CreateProjectInstance*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)
  id: CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: CreateProjectInstance(ProjectInstanceSettings)
  nameWithType: Project.CreateProjectInstance(ProjectInstanceSettings)
  fullName: Microsoft.Build.Evaluation.Project.CreateProjectInstance(ProjectInstanceSettings)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Oppretter en forekomst av prosjektet basert pÃ¥ dette prosjektet, men helt koblet fra den."
  remarks: "Kan brukes til Ã¥ bygge uavhengig. Det opprinnelige prosjektet evalueres fÃ¸r du oppretter forekomsten, hvis nÃ¸dvendig, slik at det opprinnelige prosjektet er merket som uendret."
  syntax:
    content: public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance (Microsoft.Build.Execution.ProjectInstanceSettings settings);
    parameters:
    - id: settings
      type: Microsoft.Build.Execution.ProjectInstanceSettings
      description: "Bestemmer om opprettede prosjektet forekomsten er uforanderlig og om den inneholder en slÃ¥ opp tabell for Ã¥ forbedre ytelsen."
    return:
      type: Microsoft.Build.Execution.ProjectInstance
      description: "Returnerer forekomsten av prosjektet."
  overload: Microsoft.Build.Evaluation.Project.CreateProjectInstance*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.DirectoryPath
  id: DirectoryPath
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: DirectoryPath
  nameWithType: Project.DirectoryPath
  fullName: Microsoft.Build.Evaluation.Project.DirectoryPath
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter rotmappe for dette prosjektet."
  syntax:
    content: public string DirectoryPath { get; }
    return:
      type: System.String
      description: "Returnerer rotmappe for dette prosjektet. Rotmappen er aldri null. i minnet prosjekter bruker gjeldende mappe ved innlasting av prosjektet."
  overload: Microsoft.Build.Evaluation.Project.DirectoryPath*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.DisableMarkDirty
  id: DisableMarkDirty
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: DisableMarkDirty
  nameWithType: Project.DisableMarkDirty
  fullName: Microsoft.Build.Evaluation.Project.DisableMarkDirty
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter eller angir et flagg i bestemmer om <xref:Microsoft.Build.Evaluation.Project.MarkDirty*>er midlertidig deaktivert.</xref:Microsoft.Build.Evaluation.Project.MarkDirty*> Dette kan for eksempel en global egenskap angis uten prosjektet henting merket endret for ny vurdering navnet."
  syntax:
    content: public bool DisableMarkDirty { get; set; }
    return:
      type: System.Boolean
      description: "Returnerer et flagg i bestemmer om <xref uid=&quot;langword_csharp_MarkDirty&quot; name=&quot;MarkDirty&quot; href=&quot;&quot;> </xref> er midlertidig deaktivert."
  overload: Microsoft.Build.Evaluation.Project.DisableMarkDirty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.EvaluationCounter
  id: EvaluationCounter
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: EvaluationCounter
  nameWithType: Project.EvaluationCounter
  fullName: Microsoft.Build.Evaluation.Project.EvaluationCounter
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter et tall som Ã¸kes hver gang prosjektet er evaluert pÃ¥ nytt."
  remarks: "Denne verdien skal sammenlignes med tidligere verdiene for Ã¥ se om prosjektet er evaluert pÃ¥ nytt. Det mÃ¥ ikke brukes til Ã¥ finne ut hvor mange ganger prosjektet er evaluert pÃ¥ nytt fordi den kanskje Ã¸kes med mer enn Ã©n for en gitt ny evaluering."
  syntax:
    content: public int EvaluationCounter { get; }
    return:
      type: System.Int32
      description: "Returnerer verdien for intervallet."
  overload: Microsoft.Build.Evaluation.Project.EvaluationCounter*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.ExpandString(System.String)
  id: ExpandString(System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: ExpandString(String)
  nameWithType: Project.ExpandString(String)
  fullName: Microsoft.Build.Evaluation.Project.ExpandString(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Returnerer den angitte strengen ved Ã¥ utvide elementer og egenskaper. Strengen evalueres som om det ble funnet helt pÃ¥ slutten av prosjektfilen."
  remarks: "Denne metoden kan brukes nÃ¥r beste forsÃ¸k evalueringen er tilstrekkelig."
  syntax:
    content: public string ExpandString (string unexpandedValue);
    parameters:
    - id: unexpandedValue
      type: System.String
      description: "Strengen som skal evalueres."
    return:
      type: System.String
      description: "Returnerer evaluerte strengen."
  overload: Microsoft.Build.Evaluation.Project.ExpandString*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.FullPath
  id: FullPath
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: FullPath
  nameWithType: Project.FullPath
  fullName: Microsoft.Build.Evaluation.Project.FullPath
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter eller angir den fullstendige banen til kildefilen prosjektet."
  remarks: "Angi denne egenskapen for et prosjekt i en samling som prosjektet endrer navn pÃ¥ prosjektet."
  syntax:
    content: public string FullPath { get; set; }
    return:
      type: System.String
      description: "Returnerer den fullstendige banen til kildefilen prosjektet. Returnerer en tom streng hvis prosjektet ikke ble lastet inn fra disk."
  overload: Microsoft.Build.Evaluation.Project.FullPath*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)
  id: GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: GetEvaluatedItemIncludeEscaped(ProjectItem)
  nameWithType: Project.GetEvaluatedItemIncludeEscaped(ProjectItem)
  fullName: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(ProjectItem)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter evalueres, verdien til attributtet Inkluder angitte punktene i anfÃ¸rselstegn."
  syntax:
    content: public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItem item);
    parameters:
    - id: item
      type: Microsoft.Build.Evaluation.ProjectItem
      description: "Elementet som skal evalueres og escape-tegn."
    return:
      type: System.String
      description: "Returnerer den evaluerte escape-tegn verdien til attributtet Inkluder angitte punktene."
  overload: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)
  id: GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: GetEvaluatedItemIncludeEscaped(ProjectItemDefinition)
  nameWithType: Project.GetEvaluatedItemIncludeEscaped(ProjectItemDefinition)
  fullName: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(ProjectItemDefinition)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter evaluerte, escape-verdien til attributtet Inkluder definisjonen for det angitte elementet."
  syntax:
    content: public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item);
    parameters:
    - id: item
      type: Microsoft.Build.Evaluation.ProjectItemDefinition
      description: "Element-definisjon som skal evalueres og escape-tegn."
    return:
      type: System.String
      description: "Returnerer verdien for Include-attributtet."
  overload: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.GetItems(System.String)
  id: GetItems(System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: GetItems(String)
  nameWithType: Project.GetItems(String)
  fullName: Microsoft.Build.Evaluation.Project.GetItems(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter alle elementer i den angitte elementtypen-prosjektet. Hvis det ingen finnes, returnerer en tom liste. Bruk AddItem eller RemoveItem-metoden til Ã¥ endre elementer i dette prosjektet."
  remarks: "Bruk AddItem eller RemoveItem-metoden til Ã¥ endre elementer i dette prosjektet."
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem> GetItems (string itemType);
    parameters:
    - id: itemType
      type: System.String
      description: "Elementtypen som skal hentes."
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectItem}
      description: "Returnerer alle elementer i den angitte elementtypen-prosjektet. Returnerer en tom liste Hvis det finnes ingen elementer med navnet pÃ¥ angitte elementet."
  overload: Microsoft.Build.Evaluation.Project.GetItems*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)
  id: GetItemsByEvaluatedInclude(System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: GetItemsByEvaluatedInclude(String)
  nameWithType: Project.GetItemsByEvaluatedInclude(String)
  fullName: Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter alle elementer som har gitt evaluerte Include-attributtet."
  remarks: "Denne metoden kan for eksempel returnere alle elementer som er evaluert Inkluder attributtet &quot;component.cpp&quot;. Vanligvis returneres null eller en elementer. Det kan imidlertid vÃ¦re flere elementer med samme bane og annen elementtyper eller med samme elementtyper."
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem> GetItemsByEvaluatedInclude (string evaluatedInclude);
    parameters:
    - id: evaluatedInclude
      type: System.String
      description: "Det evaluerte Include-attributtet."
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectItem}
      description: "Returnerer alle elementer som har gitt evaluerte Include-attributtet."
  overload: Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)
  id: GetItemsIgnoringCondition(System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: GetItemsIgnoringCondition(String)
  nameWithType: Project.GetItemsIgnoringCondition(String)
  fullName: Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: 'Henter alle elementer i den angitte typen-prosjektet hvorvidt attributtet til betingelse evalueres til true. Dette er en skrivebeskyttet liste: Bruk AddItem eller RemoveItem-metoden til Ã¥ endre elementer i dette prosjektet.'
  remarks: "Dette er en skrivebeskyttet liste. Bruk AddItem eller RemoveItem-metoden til Ã¥ endre elementer i dette prosjektet."
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem> GetItemsIgnoringCondition (string itemType);
    parameters:
    - id: itemType
      type: System.String
      description: "Elementtypen som skal hentes."
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectItem}
      description: "Returnerer alle elementer i den angitte typen-prosjektet hvorvidt attributtet til betingelse evalueres til true."
  overload: Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.GetLogicalProject
  id: GetLogicalProject
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: GetLogicalProject()
  nameWithType: Project.GetLogicalProject()
  fullName: Microsoft.Build.Evaluation.Project.GetLogicalProject()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter en opplisting over alle elementer i &quot;logiske prosjektet&quot;. Logisk prosjektet er definert som unevaluated prosjektet hentet fra Ã©n MSBuild-filen som er resultatet av inlining teksten for alle Importer i den opprinnelige MSBuild manifest prosjektfilen."
  remarks: "Logisk prosjektet er definert som unevaluated prosjektet hentes fra det enkelt MSBuild-fil som er resultatet av inkludert innebygde teksten for alle Importer i den opprinnelige MSBuild manifest prosjektfilen."
  syntax:
    content: public System.Collections.Generic.IEnumerable<Microsoft.Build.Construction.ProjectElement> GetLogicalProject ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Construction.ProjectElement}
      description: "Returnerer en opplisting over alle elementer i &quot;logiske prosjektet&quot;."
  overload: Microsoft.Build.Evaluation.Project.GetLogicalProject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)
  id: GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: GetMetadataValueEscaped(ProjectMetadata)
  nameWithType: Project.GetMetadataValueEscaped(ProjectMetadata)
  fullName: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(ProjectMetadata)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter mellom skilletegn verdien for den angitte metadatum."
  syntax:
    content: public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectMetadata metadatum);
    parameters:
    - id: metadatum
      type: Microsoft.Build.Evaluation.ProjectMetadata
      description: "Metadatum ha escape-tegn."
    return:
      type: System.String
      description: "Henter mellom skilletegn verdien for den angitte metadatum."
  overload: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)
  id: GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: GetMetadataValueEscaped(ProjectItem,String)
  nameWithType: Project.GetMetadataValueEscaped(ProjectItem,String)
  fullName: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(ProjectItem,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter mellom skilletegn verdien for metadatum med det angitte navnet pÃ¥ det angitte elementet."
  syntax:
    content: public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItem item, string name);
    parameters:
    - id: item
      type: Microsoft.Build.Evaluation.ProjectItem
      description: "Elementet med metadataene er ha escape-tegn."
    - id: name
      type: System.String
      description: "Navnet pÃ¥ metadataene ha escape-tegn."
    return:
      type: System.String
      description: "Henter mellom skilletegn verdien for metadatum med det angitte navnet pÃ¥ det angitte elementet."
  overload: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)
  id: GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: GetMetadataValueEscaped(ProjectItemDefinition,String)
  nameWithType: Project.GetMetadataValueEscaped(ProjectItemDefinition,String)
  fullName: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(ProjectItemDefinition,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter mellom skilletegn verdien for metadatum med det angitte navnet pÃ¥ den angitte elementet definisjonen."
  syntax:
    content: public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item, string name);
    parameters:
    - id: item
      type: Microsoft.Build.Evaluation.ProjectItemDefinition
      description: "Elementet definisjonen der metadataene er ha escape-tegn."
    - id: name
      type: System.String
      description: "Navnet pÃ¥ metadataene ha escape-tegn."
    return:
      type: System.String
      description: "Verdien mellom skilletegn for metadatum med det angitte navnet pÃ¥ den angitte elementet definisjonen."
  overload: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.GetProperty(System.String)
  id: GetProperty(System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: GetProperty(String)
  nameWithType: Project.GetProperty(String)
  fullName: Microsoft.Build.Evaluation.Project.GetProperty(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter en egenskap i prosjektet med det angitte navnet."
  syntax:
    content: public Microsoft.Build.Evaluation.ProjectProperty GetProperty (string name);
    parameters:
    - id: name
      type: System.String
      description: "Navnet pÃ¥ egenskapen som skal hentes."
    return:
      type: Microsoft.Build.Evaluation.ProjectProperty
      description: "Returnerer en egenskap i prosjektet med det angitte navnet. Returnerer null hvis ingen egenskap med dette navnet finnes."
  overload: Microsoft.Build.Evaluation.Project.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)
  id: GetPropertyValue(System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: GetPropertyValue(String)
  nameWithType: Project.GetPropertyValue(String)
  fullName: Microsoft.Build.Evaluation.Project.GetPropertyValue(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter verdien for den angitte egenskapen i dette prosjektet."
  remarks: "En egenskap med en tom streng-verdi og ingen egenskap skiller i det hele tatt ikke mellom av denne metoden. Bruk GetProperty(name) til Ã¥ fastslÃ¥ om en egenskap er angitt i det hele tatt i prosjektet."
  syntax:
    content: public string GetPropertyValue (string name);
    parameters:
    - id: name
      type: System.String
      description: "Navnet pÃ¥ egenskapen der verdiene hentes."
    return:
      type: System.String
      description: "Returnerer verdien for den angitte egenskapen i dette prosjektet. Returner en tom streng hvis det finnes ingen egenskap med dette navnet. Avbruddssekvenser konverteres fÃ¸r den returnerer en streng."
  overload: Microsoft.Build.Evaluation.Project.GetPropertyValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)
  id: GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: GetPropertyValueEscaped(ProjectProperty)
  nameWithType: Project.GetPropertyValueEscaped(ProjectProperty)
  fullName: Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(ProjectProperty)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Hent escape-verdien for den angitte egenskapen."
  syntax:
    content: public static string GetPropertyValueEscaped (Microsoft.Build.Evaluation.ProjectProperty property);
    parameters:
    - id: property
      type: Microsoft.Build.Evaluation.ProjectProperty
      description: "Egenskapen ha escape-tegn."
    return:
      type: System.String
      description: "Verdien mellom skilletegn for den angitte egenskapen."
  overload: Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.GlobalProperties
  id: GlobalProperties
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: GlobalProperties
  nameWithType: Project.GlobalProperties
  fullName: Microsoft.Build.Evaluation.Project.GlobalProperties
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter en ordliste for de globale egenskapene som brukes for evaluering av prosjektet."
  remarks: "This is the publicly exposed getter, that translates into a read-only dead IDictionary\\<string, string>.  \n  \n In order to easily tell when we're dirtied, setting and removing global properties is done with <xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A> and <xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A>."
  syntax:
    content: public System.Collections.Generic.IDictionary<string,string> GlobalProperties { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Returnerer en ordliste for de globale egenskapene som brukes for evaluering av prosjektet."
  overload: Microsoft.Build.Evaluation.Project.GlobalProperties*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Imports
  id: Imports
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Imports
  nameWithType: Project.Imports
  fullName: Microsoft.Build.Evaluation.Project.Imports
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter en liste over alle filer som bidro i evalueringen av prosjektet."
  remarks: "Prosjektet roten av dette prosjektet er ikke inkludert."
  syntax:
    content: public System.Collections.Generic.IList<Microsoft.Build.Evaluation.ResolvedImport> Imports { get; }
    return:
      type: System.Collections.Generic.IList{Microsoft.Build.Evaluation.ResolvedImport}
      description: "Returnerer en liste over alle filer som bidro til evalueringen av prosjektet.       Navnet pÃ¥ hvert element er Import-element som fÃ¸rte til filen som skal importeres. Verdien for hvert element er prosjektet roten av importerte prosjektet. Importer elementer som betingelse evalueres til false attributtet ikke er inkludert."
  overload: Microsoft.Build.Evaluation.Project.Imports*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates
  id: ImportsIncludingDuplicates
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: ImportsIncludingDuplicates
  nameWithType: Project.ImportsIncludingDuplicates
  fullName: Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter en liste over dupliserte importerer Hvis en import er importert flere ganger. Bare fÃ¸rste importen ble imidlertid brukes i evalueringen."
  syntax:
    content: public System.Collections.Generic.IList<Microsoft.Build.Evaluation.ResolvedImport> ImportsIncludingDuplicates { get; }
    return:
      type: System.Collections.Generic.IList{Microsoft.Build.Evaluation.ResolvedImport}
      description: "Returnerer en liste med dupliserte importerer."
  overload: Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.IsBuildEnabled
  id: IsBuildEnabled
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: IsBuildEnabled
  nameWithType: Project.IsBuildEnabled
  fullName: Microsoft.Build.Evaluation.Project.IsBuildEnabled
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter eller angir en egenskap som velger om skadelige mÃ¥l og oppgaver for dette prosjektet kan bygges."
  remarks: "Kan brukes av sikkerhetsgrunner. Som standard har et nytt prosjekt samme IsBuildEnabled innstilling som den overordnede prosjekt samlingen som inneholder den. NÃ¥r IsBuildEnabled er USANN, mislykkes Build-metoden pÃ¥ dette prosjektet."
  syntax:
    content: public bool IsBuildEnabled { get; set; }
    return:
      type: System.Boolean
      description: "Returnerer true Hvis mÃ¥l og oppgaver for dette prosjektet kan bygges; False ellers."
  overload: Microsoft.Build.Evaluation.Project.IsBuildEnabled*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.IsDirty
  id: IsDirty
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: IsDirty
  nameWithType: Project.IsDirty
  fullName: Microsoft.Build.Evaluation.Project.IsDirty
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter en egenskap som angir om dette prosjektet har blitt endret slik at den mÃ¥ evaluerast."
  remarks: "Et prosjekt er endret, og mÃ¥ evaluerast nÃ¥r den underliggende datakilden prosjektkode, inkludert endringer importert filer. Et prosjekt endres ogsÃ¥ mÃ¥ evaluerast Hvis verktÃ¸yet prosjektet angitt endringer."
  syntax:
    content: public bool IsDirty { get; }
    return:
      type: System.Boolean
      description: "Returnerer en egenskap som angir om dette prosjektet har blitt endret slik at den mÃ¥ evaluerast."
  overload: Microsoft.Build.Evaluation.Project.IsDirty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.ItemDefinitions
  id: ItemDefinitions
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: ItemDefinitions
  nameWithType: Project.ItemDefinitions
  fullName: Microsoft.Build.Evaluation.Project.ItemDefinitions
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter en ordliste for elementer definisjoner i dette prosjektet rettet etter elementtype."
  syntax:
    content: public System.Collections.Generic.IDictionary<string,Microsoft.Build.Evaluation.ProjectItemDefinition> ItemDefinitions { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Evaluation.ProjectItemDefinition}
      description: "Returnerer en ordliste for elementer definisjoner i dette prosjektet rettet etter elementtype."
  overload: Microsoft.Build.Evaluation.Project.ItemDefinitions*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Items
  id: Items
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Items
  nameWithType: Project.Items
  fullName: Microsoft.Build.Evaluation.Project.Items
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter en opplisting over alle elementer i dette prosjektet ordnet i grupper av elementtyper."
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem> Items { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectItem}
      description: "Returnerer en opplisting over alle elementer i dette prosjektet ordnet i grupper av elementtyper."
  overload: Microsoft.Build.Evaluation.Project.Items*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition
  id: ItemsIgnoringCondition
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: ItemsIgnoringCondition
  nameWithType: Project.ItemsIgnoringCondition
  fullName: Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter en opplisting over alle elementer i dette prosjektet ordnet i grupper av elementtyper."
  remarks: "Kan brukes til Ã¥ vise alle elementene, selv om de ikke er en del av kompilering i den gjeldende konfigurasjonen."
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem> ItemsIgnoringCondition { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectItem}
      description: "Returnerer en opplisting over alle elementer i dette prosjektet., ordnet i grupper av elementtyper, inkludert elementer som betingelser evalueres til false eller befinner seg i grupper som betingelse evalueres til false."
  overload: Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.ItemTypes
  id: ItemTypes
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: ItemTypes
  nameWithType: Project.ItemTypes
  fullName: Microsoft.Build.Evaluation.Project.ItemTypes
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter en opplisting over alle elementtyper i dette prosjektet."
  syntax:
    content: public System.Collections.Generic.ICollection<string> ItemTypes { get; }
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: "Returnerer en opplisting over alle elementtyper i dette prosjektet. Dette er en sortert samling."
  overload: Microsoft.Build.Evaluation.Project.ItemTypes*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.MarkDirty
  id: MarkDirty
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: MarkDirty()
  nameWithType: Project.MarkDirty()
  fullName: Microsoft.Build.Evaluation.Project.MarkDirty()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Merker dette prosjektet som endres."
  remarks: "Det er sjelden nÃ¸dvendig Ã¥ kalle denne metoden eksplisitt, fordi alle endringer som har innvirkning pÃ¥ et prosjekt automatisk merker det som endres.       Noen ganger, men mÃ¥ denne metoden kalles. Et prosjekt kan for eksempel ha et importelement som feilen er avhengig av en fil som finnes pÃ¥ en disk. Hvis denne filen finnes ikke pÃ¥ evalueringen tidspunktet, og den er opprettet etter evalueringen mÃ¥ deretter prosjektet vÃ¦re eksplisitt merket som endret.       Den <xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A>metoden bruker denne egenskapen til Ã¥ finne ut om en evaluering er nÃ¸dvendig.</xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A>"
  syntax:
    content: public void MarkDirty ();
    parameters: []
  overload: Microsoft.Build.Evaluation.Project.MarkDirty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.ProjectCollection
  id: ProjectCollection
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: ProjectCollection
  nameWithType: Project.ProjectCollection
  fullName: Microsoft.Build.Evaluation.Project.ProjectCollection
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter prosjektet samlingen som inneholder dette prosjektet."
  syntax:
    content: public Microsoft.Build.Evaluation.ProjectCollection ProjectCollection { get; }
    return:
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "Returnerer prosjektet samlingen som inneholder dette prosjektet som aldri er null."
  overload: Microsoft.Build.Evaluation.Project.ProjectCollection*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.ProjectFileLocation
  id: ProjectFileLocation
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: ProjectFileLocation
  nameWithType: Project.ProjectFileLocation
  fullName: Microsoft.Build.Evaluation.Project.ProjectFileLocation
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Plasseringen av den opprinnelig filen seg selv, ikke bestemte innhold i den. Hvis filen ikke har fÃ¥tt et navn, er en tom plassering. Dette er en legitim tilfellet for har ingen plassering."
  syntax:
    content: public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }
    return:
      type: Microsoft.Build.Construction.ElementLocation
      description: "Returnerer den opprinnelige filplasseringen eller en tom plassering."
  overload: Microsoft.Build.Evaluation.Project.ProjectFileLocation*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Properties
  id: Properties
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Properties
  nameWithType: Project.Properties
  fullName: Microsoft.Build.Evaluation.Project.Properties
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter en opplisting over alle egenskapene i dette prosjektet. Dette er en usortert samling."
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectProperty> Properties { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectProperty}
      description: "Returnerer en opplisting over alle egenskapene i dette prosjektet. Siden Egenskaper vurderes som de vises, er dette en usortert samling."
  overload: Microsoft.Build.Evaluation.Project.Properties*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary
  id: ReevaluateIfNecessary
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: ReevaluateIfNecessary()
  nameWithType: Project.ReevaluateIfNecessary()
  fullName: Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Reevaluates prosjektet for Ã¥ ta med eventuelle endringer."
  remarks: "Prosjektet er reevaluated bare hvis den er merket som endret. Ny vurdering inkluderer alle endringer til kildekode prosjektet.       OppstÃ¥r InvalidProjectFileException hvis evalueringen mislykkes."
  syntax:
    content: public void ReevaluateIfNecessary ();
    parameters: []
  overload: Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)
  id: RemoveGlobalProperty(System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: RemoveGlobalProperty(String)
  nameWithType: Project.RemoveGlobalProperty(String)
  fullName: Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Fjerner en global egenskap, og merker prosjektet som endres."
  syntax:
    content: public bool RemoveGlobalProperty (string name);
    parameters:
    - id: name
      type: System.String
      description: "Navnet pÃ¥ egenskapen globale som skal fjernes."
    return:
      type: System.Boolean
      description: "Returnerer true Hvis verdien for egenskapen globale ble angitt."
  overload: Microsoft.Build.Evaluation.Project.RemoveGlobalProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)
  id: RemoveItem(Microsoft.Build.Evaluation.ProjectItem)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: RemoveItem(ProjectItem)
  nameWithType: Project.RemoveItem(ProjectItem)
  fullName: Microsoft.Build.Evaluation.Project.RemoveItem(ProjectItem)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Fjerner et element fra prosjektet. Elementet som skal fjernes mÃ¥ vÃ¦re til stede i prosjektet, og mÃ¥ ikke stammer fra en importert fil."
  remarks: "Hvis elementgruppen som inneholder elementet er tomt, fjernes ogsÃ¥ den.       Hvis elementet kommer fra en jokertegn eller et atskilt med semikolon uttrykk, utvides uttrykket fÃ¸rst til flere elementer.       Prosjektet er oppdatert, men ingen ytterligere evalueringen forekommer fÃ¸r ny vurdering. For eksempel hvis et element av typen &quot;i&quot; er fjernet, &quot;j&quot; som er evaluert fra &quot;@(i)&quot; er ikke endret til ny vurdering."
  syntax:
    content: public bool RemoveItem (Microsoft.Build.Evaluation.ProjectItem item);
    parameters:
    - id: item
      type: Microsoft.Build.Evaluation.ProjectItem
      description: "Elementet som skal fjernes."
    return:
      type: System.Boolean
      description: "Returnerer true Hvis elementet finnes i dette evaluerte prosjektet. Ellers false. Metoden returnerer vanligvis SANN, etter at hvis det forespurte elementet ikke finnes, metoden oppstÃ¥r det et unntak. Hvis elementet finnes i samlingen ItemsIgnoringCondition, men returnerer metoden false."
  overload: Microsoft.Build.Evaluation.Project.RemoveItem*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})
  id: RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: RemoveItems(IEnumerable<ProjectItem>)
  nameWithType: Project.RemoveItems(IEnumerable<ProjectItem>)
  fullName: Microsoft.Build.Evaluation.Project.RemoveItems(IEnumerable<ProjectItem>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Fjerner alle angitte elementene fra prosjektet, med mindre de kommer fra en importerte prosjektet."
  remarks: "Hvis et element kommer fra en importerte prosjektet, er det enkelt hoppet over."
  syntax:
    content: public void RemoveItems (System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectItem> items);
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem}
      description: "Elementene som skal fjernes."
  overload: Microsoft.Build.Evaluation.Project.RemoveItems*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)
  id: RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: RemoveProperty(ProjectProperty)
  nameWithType: Project.RemoveProperty(ProjectProperty)
  fullName: Microsoft.Build.Evaluation.Project.RemoveProperty(ProjectProperty)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Fjerner en egenskap fra prosjektet. Egenskapen som skal fjernes mÃ¥ vÃ¦re til stede i prosjektet, og mÃ¥ ikke stammer fra en importert fil."
  remarks: "Egenskapsgruppen som inneholder egenskapen er tom, er ogsÃ¥ fjernes.       Prosjektet er oppdatert, men ingen ytterligere evalueringen forekommer fÃ¸r ny vurdering. For eksempel hvis &quot;p&quot; er fjernet, er &quot;q&quot; som beregnes fra &quot;$(p)&quot; ikke endret til ny vurdering."
  syntax:
    content: public bool RemoveProperty (Microsoft.Build.Evaluation.ProjectProperty property);
    parameters:
    - id: property
      type: Microsoft.Build.Evaluation.ProjectProperty
      description: "Til Ã¥ fjerne."
    return:
      type: System.Boolean
      description: "Returnerer true Hvis egenskapen er til stede i dette evaluerte prosjektet. Ellers false."
  overload: Microsoft.Build.Evaluation.Project.RemoveProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Save
  id: Save
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Save()
  nameWithType: Project.Save()
  fullName: Microsoft.Build.Evaluation.Project.Save()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Lagrer prosjektet i filsystemet hvis endret, ved hjelp av tegnet standardkodingen."
  syntax:
    content: public void Save ();
    parameters: []
  overload: Microsoft.Build.Evaluation.Project.Save*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)
  id: Save(System.IO.TextWriter)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Save(TextWriter)
  nameWithType: Project.Save(TextWriter)
  fullName: Microsoft.Build.Evaluation.Project.Save(TextWriter)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Lagrer prosjektet til den angitte tekstskriver hvorvidt prosjektet er endret. Bruker tegnkodingen for teksten skriveren, og merker prosjektet som uendret."
  syntax:
    content: public void Save (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "Tekstskriver lagre prosjektet til."
  overload: Microsoft.Build.Evaluation.Project.Save*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Save(System.String)
  id: Save(System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Save(String)
  nameWithType: Project.Save(String)
  fullName: Microsoft.Build.Evaluation.Project.Save(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Lagrer prosjektet i filsystemet hvis endret, eller hvis banen til kildekode prosjektet endres, bruker du tegn standardkodingen."
  syntax:
    content: public void Save (string path);
    parameters:
    - id: path
      type: System.String
      description: "Banen til kildekode prosjektet."
  overload: Microsoft.Build.Evaluation.Project.Save*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)
  id: Save(System.Text.Encoding)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Save(Encoding)
  nameWithType: Project.Save(Encoding)
  fullName: Microsoft.Build.Evaluation.Project.Save(Encoding)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Lagrer prosjektet til filsystemet, hvis endret, ved hjelp av det angitte tegnkoding."
  syntax:
    content: public void Save (System.Text.Encoding encoding);
    parameters:
    - id: encoding
      type: System.Text.Encoding
      description: "Tegnkodingen brukes til Ã¥ lagre prosjektet."
  overload: Microsoft.Build.Evaluation.Project.Save*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)
  id: Save(System.String,System.Text.Encoding)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Save(String,Encoding)
  nameWithType: Project.Save(String,Encoding)
  fullName: Microsoft.Build.Evaluation.Project.Save(String,Encoding)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Lagrer prosjektet til filsystemet, hvis endret, eller hvis banen til kildekode prosjektet endres, bruker du det angitte tegnkoding."
  syntax:
    content: public void Save (string path, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "Banen til kildekode prosjektet."
    - id: encoding
      type: System.Text.Encoding
      description: "Tegnkodingen brukes til Ã¥ lagre prosjektet."
  overload: Microsoft.Build.Evaluation.Project.Save*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)
  id: SaveLogicalProject(System.IO.TextWriter)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: SaveLogicalProject(TextWriter)
  nameWithType: Project.SaveLogicalProject(TextWriter)
  fullName: Microsoft.Build.Evaluation.Project.SaveLogicalProject(TextWriter)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Lagrer en &quot;logiske&quot; eller &quot;forhÃ¥ndsbehandlede&quot; prosjektfilen, som inkluderer alle importerte filer som om de utformet Ã©n fil."
  syntax:
    content: public void SaveLogicalProject (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "Skriveren som lagrer prosjektfilen."
  overload: Microsoft.Build.Evaluation.Project.SaveLogicalProject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)
  id: SetGlobalProperty(System.String,System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: SetGlobalProperty(String,String)
  nameWithType: Project.SetGlobalProperty(String,String)
  fullName: Microsoft.Build.Evaluation.Project.SetGlobalProperty(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Angir en global egenskap nÃ¥r prosjektet er evaluert. Hvis verdien endres, er prosjektet merket for Ã¥ kreve ny vurdering."
  syntax:
    content: public bool SetGlobalProperty (string name, string escapedValue);
    parameters:
    - id: name
      type: System.String
      description: "Navnet pÃ¥ den globale til Ã¥ angi."
    - id: escapedValue
      type: System.String
      description: "Den nye verdien for egenskapen globale."
    return:
      type: System.Boolean
      description: "Returnerer <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Hvis verdien endres, hvis ikke, returneres <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Build.Evaluation.Project.SetGlobalProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)
  id: SetProperty(System.String,System.String)
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: SetProperty(String,String)
  nameWithType: Project.SetProperty(String,String)
  fullName: Microsoft.Build.Evaluation.Project.SetProperty(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Angir eller legger til en egenskap med det angitte navnet og verdien i prosjektet. Overskriver verdien for en egenskap med samme navn hvis den ikke ble opprettet i en importert fil."
  remarks: "Hvis det er ingen egenskap med angitt navn, oppdaterer siste eksisterende egenskap med angitt navn som ikke har noen betingelse for seg selv eller egenskapen gruppen, med mindre den oppsto i en importert fil.       Hvis ikke, legger du til en ny egenskap i den fÃ¸rste egenskapsgruppen uten en betingelse oppretting av en egenskapsgruppe eventuelt etter siste eksisterende egenskapsgruppen andre ved starten av prosjektet.       Evalueringen foregÃ¥r pÃ¥ basis beste forsÃ¸k. Egenskaper som er definert i prosjektet kilden etter den nye egenskapen kan brukes for evaluering. Bare denne egenskapen skal evalueres. Andre egenskaper som kan avhengig pÃ¥virkes ikke."
  syntax:
    content: public Microsoft.Build.Evaluation.ProjectProperty SetProperty (string name, string unevaluatedValue);
    parameters:
    - id: name
      type: System.String
      description: "Navnet pÃ¥ egenskapen som angis."
    - id: unevaluatedValue
      type: System.String
      description: "Den nye unevaluated verdien for egenskapen."
    return:
      type: Microsoft.Build.Evaluation.ProjectProperty
      description: "Returnerer egenskapen."
  overload: Microsoft.Build.Evaluation.Project.SetProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.SkipEvaluation
  id: SkipEvaluation
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: SkipEvaluation
  nameWithType: Project.SkipEvaluation
  fullName: Microsoft.Build.Evaluation.Project.SkipEvaluation
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter eller angir et flagg i bestemmer om ReevaluateIfNecessary er midlertidig deaktivert. Dette er nyttig nÃ¥r verten forventer foreta et antall leseoperasjoner og skriver til prosjektet, og Ã¸nsker Ã¥ ofre midlertidig korrekt for ytelsen."
  syntax:
    content: public bool SkipEvaluation { get; set; }
    return:
      type: System.Boolean
      description: "Returnerer et flagg i bestemmer om ReevaluateIfNecessary er midlertidig deaktivert."
  overload: Microsoft.Build.Evaluation.Project.SkipEvaluation*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.SubToolsetVersion
  id: SubToolsetVersion
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: SubToolsetVersion
  nameWithType: Project.SubToolsetVersion
  fullName: Microsoft.Build.Evaluation.Project.SubToolsetVersion
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter verdien til attributtet SubToolsetVersion eventuell. Denne verdien ble kombineres med verdien av attributtet ToolsVersion til Ã¥ finne ut hvilke egenskaper verktÃ¸ysettet for dette prosjektet."
  syntax:
    content: public string SubToolsetVersion { get; }
    return:
      type: System.String
      description: "Returnerer attributtverdien SubToolsetVersion. Returnerer en tom streng hvis attributtet ikke finnes."
  overload: Microsoft.Build.Evaluation.Project.SubToolsetVersion*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Targets
  id: Targets
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Targets
  nameWithType: Project.Targets
  fullName: Microsoft.Build.Evaluation.Project.Targets
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter en ordliste for alle mÃ¥l i dette prosjektet rettet av mÃ¥lnavn."
  syntax:
    content: public System.Collections.Generic.IDictionary<string,Microsoft.Build.Execution.ProjectTargetInstance> Targets { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.ProjectTargetInstance}
      description: "Returnerer en liste over alle mÃ¥l i dette prosjektet rettet av mÃ¥lnavn. Overstyrte mÃ¥l er ikke inkludert i denne samlingen. Denne ordlisten er skrivebeskyttet."
  overload: Microsoft.Build.Evaluation.Project.Targets*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.ToolsVersion
  id: ToolsVersion
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: ToolsVersion
  nameWithType: Project.ToolsVersion
  fullName: Microsoft.Build.Evaluation.Project.ToolsVersion
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter verktÃ¸y-versjonen som dette prosjektet ble evaluert med eventuell."
  remarks: "Angi ved konstruktÃ¸ren. Dette er ikke nÃ¸dvendigvis det samme som versjonen verktÃ¸y i koden prosjektet eventuell; Det har blitt eksternt angitt, for eksempel med et /tv bryteren pÃ¥ kommandolinjen. Den faktiske versjonen for prosjektet-koden kan hente fra <xref:Microsoft.Build.Evaluation.Project.Xml%2A>.</xref:Microsoft.Build.Evaluation.Project.Xml%2A> VerktÃ¸y-versjonen kan ikke endres nÃ¥r prosjektet er opprettet."
  syntax:
    content: public string ToolsVersion { get; }
    return:
      type: System.String
      description: "Henter verktÃ¸y-versjonen som dette prosjektet ble evaluert med eventuell."
  overload: Microsoft.Build.Evaluation.Project.ToolsVersion*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.Project.Xml
  id: Xml
  parent: Microsoft.Build.Evaluation.Project
  langs:
  - csharp
  name: Xml
  nameWithType: Project.Xml
  fullName: Microsoft.Build.Evaluation.Project.Xml
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Henter root-prosjekt som er knyttet til dette prosjektet. Kan ikke vÃ¦re null"
  remarks: "Det er ikke mulig Ã¥ angi denne egenskapen. Hvis du har en ny prosjektet rot, evalueres til et nytt prosjekt."
  syntax:
    content: public Microsoft.Build.Construction.ProjectRootElement Xml { get; }
    return:
      type: Microsoft.Build.Construction.ProjectRootElement
      description: "Returnerer root-prosjekt som er knyttet til dette prosjektet ikke kan vÃ¦re null."
  overload: Microsoft.Build.Evaluation.Project.Xml*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.Exceptions.InvalidProjectFileException
  parent: Microsoft.Build.Exceptions
  isExternal: false
  name: InvalidProjectFileException
  nameWithType: InvalidProjectFileException
  fullName: Microsoft.Build.Exceptions.InvalidProjectFileException
- uid: Microsoft.Build.Evaluation.Project.#ctor
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project()
  nameWithType: Project.Project()
  fullName: Microsoft.Build.Evaluation.Project.Project()
- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(ProjectRootElement)
  nameWithType: Project.Project(ProjectRootElement)
  fullName: Microsoft.Build.Evaluation.Project.Project(ProjectRootElement)
- uid: Microsoft.Build.Construction.ProjectRootElement
  parent: Microsoft.Build.Construction
  isExternal: false
  name: ProjectRootElement
  nameWithType: ProjectRootElement
  fullName: Microsoft.Build.Construction.ProjectRootElement
- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(ProjectCollection)
  nameWithType: Project.Project(ProjectCollection)
  fullName: Microsoft.Build.Evaluation.Project.Project(ProjectCollection)
- uid: Microsoft.Build.Evaluation.ProjectCollection
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectCollection
  nameWithType: ProjectCollection
  fullName: Microsoft.Build.Evaluation.ProjectCollection
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(String)
  nameWithType: Project.Project(String)
  fullName: Microsoft.Build.Evaluation.Project.Project(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(XmlReader)
  nameWithType: Project.Project(XmlReader)
  fullName: Microsoft.Build.Evaluation.Project.Project(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(ProjectRootElement,IDictionary<String,String>,String)
  nameWithType: Project.Project(ProjectRootElement,IDictionary<String,String>,String)
  fullName: Microsoft.Build.Evaluation.Project.Project(ProjectRootElement,IDictionary<String,String>,String)
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(IDictionary<String,String>,String,ProjectCollection)
  nameWithType: Project.Project(IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Evaluation.Project.Project(IDictionary<String,String>,String,ProjectCollection)
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(String,IDictionary<String,String>,String)
  nameWithType: Project.Project(String,IDictionary<String,String>,String)
  fullName: Microsoft.Build.Evaluation.Project.Project(String,IDictionary<String,String>,String)
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(XmlReader,IDictionary<String,String>,String)
  nameWithType: Project.Project(XmlReader,IDictionary<String,String>,String)
  fullName: Microsoft.Build.Evaluation.Project.Project(XmlReader,IDictionary<String,String>,String)
- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
  nameWithType: Project.Project(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Evaluation.Project.Project(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(String,IDictionary<String,String>,String,ProjectCollection)
  nameWithType: Project.Project(String,IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Evaluation.Project.Project(String,IDictionary<String,String>,String,ProjectCollection)
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(XmlReader,IDictionary<String,String>,String,ProjectCollection)
  nameWithType: Project.Project(XmlReader,IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Evaluation.Project.Project(XmlReader,IDictionary<String,String>,String,ProjectCollection)
- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  nameWithType: Project.Project(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  fullName: Microsoft.Build.Evaluation.Project.Project(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
- uid: Microsoft.Build.Evaluation.ProjectLoadSettings
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectLoadSettings
  nameWithType: ProjectLoadSettings
  fullName: Microsoft.Build.Evaluation.ProjectLoadSettings
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(String,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  nameWithType: Project.Project(String,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  fullName: Microsoft.Build.Evaluation.Project.Project(String,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(XmlReader,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  nameWithType: Project.Project(XmlReader,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
  fullName: Microsoft.Build.Evaluation.Project.Project(XmlReader,IDictionary<String,String>,String,ProjectCollection,ProjectLoadSettings)
- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  nameWithType: Project.Project(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  fullName: Microsoft.Build.Evaluation.Project.Project(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(String,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  nameWithType: Project.Project(String,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  fullName: Microsoft.Build.Evaluation.Project.Project(String,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project(XmlReader,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  nameWithType: Project.Project(XmlReader,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
  fullName: Microsoft.Build.Evaluation.Project.Project(XmlReader,IDictionary<String,String>,String,String,ProjectCollection,ProjectLoadSettings)
- uid: Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: AddItem(String,String)
  nameWithType: Project.AddItem(String,String)
  fullName: Microsoft.Build.Evaluation.Project.AddItem(String,String)
- uid: System.Collections.Generic.IList{Microsoft.Build.Evaluation.ProjectItem}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<ProjectItem>
  nameWithType: IList<ProjectItem>
  fullName: System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<Microsoft.Build.Evaluation.ProjectItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Evaluation.ProjectItem
    name: ProjectItem
    nameWithType: ProjectItem
    fullName: ProjectItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  nameWithType: Project.AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  fullName: Microsoft.Build.Evaluation.Project.AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<KeyValuePair<String,String>>
  nameWithType: IEnumerable<KeyValuePair<String,String>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.String>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.String>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: AddItemFast(String,String)
  nameWithType: Project.AddItemFast(String,String)
  fullName: Microsoft.Build.Evaluation.Project.AddItemFast(String,String)
- uid: Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: AddItemFast(String,String,IEnumerable<KeyValuePair<String,String>>)
  nameWithType: Project.AddItemFast(String,String,IEnumerable<KeyValuePair<String,String>>)
  fullName: Microsoft.Build.Evaluation.Project.AddItemFast(String,String,IEnumerable<KeyValuePair<String,String>>)
- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: AllEvaluatedItemDefinitionMetadata
  nameWithType: Project.AllEvaluatedItemDefinitionMetadata
  fullName: Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata
- uid: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectMetadata}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<ProjectMetadata>
  nameWithType: ICollection<ProjectMetadata>
  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<Microsoft.Build.Evaluation.ProjectMetadata>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Evaluation.ProjectMetadata
    name: ProjectMetadata
    nameWithType: ProjectMetadata
    fullName: ProjectMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedItems
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: AllEvaluatedItems
  nameWithType: Project.AllEvaluatedItems
  fullName: Microsoft.Build.Evaluation.Project.AllEvaluatedItems
- uid: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectItem}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<ProjectItem>
  nameWithType: ICollection<ProjectItem>
  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<Microsoft.Build.Evaluation.ProjectItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Evaluation.ProjectItem
    name: ProjectItem
    nameWithType: ProjectItem
    fullName: ProjectItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedProperties
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: AllEvaluatedProperties
  nameWithType: Project.AllEvaluatedProperties
  fullName: Microsoft.Build.Evaluation.Project.AllEvaluatedProperties
- uid: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectProperty}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<ProjectProperty>
  nameWithType: ICollection<ProjectProperty>
  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectProperty>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<Microsoft.Build.Evaluation.ProjectProperty>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Evaluation.ProjectProperty
    name: ProjectProperty
    nameWithType: ProjectProperty
    fullName: ProjectProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.Build
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Build()
  nameWithType: Project.Build()
  fullName: Microsoft.Build.Evaluation.Project.Build()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Build(ILogger)
  nameWithType: Project.Build(ILogger)
  fullName: Microsoft.Build.Evaluation.Project.Build(ILogger)
- uid: Microsoft.Build.Framework.ILogger
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Build.Framework.ILogger
- uid: Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Build(IEnumerable<ILogger>)
  nameWithType: Project.Build(IEnumerable<ILogger>)
  fullName: Microsoft.Build.Evaluation.Project.Build(IEnumerable<ILogger>)
- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ILogger>
  nameWithType: IEnumerable<ILogger>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.Build.Framework.ILogger>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Framework.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.Build(System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Build(String)
  nameWithType: Project.Build(String)
  fullName: Microsoft.Build.Evaluation.Project.Build(String)
- uid: Microsoft.Build.Evaluation.Project.Build(System.String[])
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Build(String[])
  nameWithType: Project.Build(String[])
  fullName: Microsoft.Build.Evaluation.Project.Build(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: Project.Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Evaluation.Project.Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ForwardingLoggerRecord>
  nameWithType: IEnumerable<ForwardingLoggerRecord>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Logging.ForwardingLoggerRecord
    name: ForwardingLoggerRecord
    nameWithType: ForwardingLoggerRecord
    fullName: ForwardingLoggerRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Build(String,IEnumerable<ILogger>)
  nameWithType: Project.Build(String,IEnumerable<ILogger>)
  fullName: Microsoft.Build.Evaluation.Project.Build(String,IEnumerable<ILogger>)
- uid: Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Build(String[],IEnumerable<ILogger>)
  nameWithType: Project.Build(String[],IEnumerable<ILogger>)
  fullName: Microsoft.Build.Evaluation.Project.Build(String[],IEnumerable<ILogger>)
- uid: Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: Project.Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Evaluation.Project.Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
- uid: Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: Project.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Evaluation.Project.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
- uid: Microsoft.Build.Evaluation.Project.ConditionedProperties
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ConditionedProperties
  nameWithType: Project.ConditionedProperties
  fullName: Microsoft.Build.Evaluation.Project.ConditionedProperties
- uid: System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.List{System.String}}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,List<String>>
  nameWithType: IDictionary<String,List<String>>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Collections.Generic.List<System.String>>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Collections.Generic.List<System.String>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.CreateProjectInstance
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: CreateProjectInstance()
  nameWithType: Project.CreateProjectInstance()
  fullName: Microsoft.Build.Evaluation.Project.CreateProjectInstance()
- uid: Microsoft.Build.Execution.ProjectInstance
  parent: Microsoft.Build.Execution
  isExternal: false
  name: ProjectInstance
  nameWithType: ProjectInstance
  fullName: Microsoft.Build.Execution.ProjectInstance
- uid: Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: CreateProjectInstance(ProjectInstanceSettings)
  nameWithType: Project.CreateProjectInstance(ProjectInstanceSettings)
  fullName: Microsoft.Build.Evaluation.Project.CreateProjectInstance(ProjectInstanceSettings)
- uid: Microsoft.Build.Execution.ProjectInstanceSettings
  parent: Microsoft.Build.Execution
  isExternal: false
  name: ProjectInstanceSettings
  nameWithType: ProjectInstanceSettings
  fullName: Microsoft.Build.Execution.ProjectInstanceSettings
- uid: Microsoft.Build.Evaluation.Project.DirectoryPath
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: DirectoryPath
  nameWithType: Project.DirectoryPath
  fullName: Microsoft.Build.Evaluation.Project.DirectoryPath
- uid: Microsoft.Build.Evaluation.Project.DisableMarkDirty
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: DisableMarkDirty
  nameWithType: Project.DisableMarkDirty
  fullName: Microsoft.Build.Evaluation.Project.DisableMarkDirty
- uid: Microsoft.Build.Evaluation.Project.EvaluationCounter
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: EvaluationCounter
  nameWithType: Project.EvaluationCounter
  fullName: Microsoft.Build.Evaluation.Project.EvaluationCounter
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Build.Evaluation.Project.ExpandString(System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ExpandString(String)
  nameWithType: Project.ExpandString(String)
  fullName: Microsoft.Build.Evaluation.Project.ExpandString(String)
- uid: Microsoft.Build.Evaluation.Project.FullPath
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: FullPath
  nameWithType: Project.FullPath
  fullName: Microsoft.Build.Evaluation.Project.FullPath
- uid: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetEvaluatedItemIncludeEscaped(ProjectItem)
  nameWithType: Project.GetEvaluatedItemIncludeEscaped(ProjectItem)
  fullName: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(ProjectItem)
- uid: Microsoft.Build.Evaluation.ProjectItem
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectItem
  nameWithType: ProjectItem
  fullName: Microsoft.Build.Evaluation.ProjectItem
- uid: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetEvaluatedItemIncludeEscaped(ProjectItemDefinition)
  nameWithType: Project.GetEvaluatedItemIncludeEscaped(ProjectItemDefinition)
  fullName: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(ProjectItemDefinition)
- uid: Microsoft.Build.Evaluation.ProjectItemDefinition
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectItemDefinition
  nameWithType: ProjectItemDefinition
  fullName: Microsoft.Build.Evaluation.ProjectItemDefinition
- uid: Microsoft.Build.Evaluation.Project.GetItems(System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetItems(String)
  nameWithType: Project.GetItems(String)
  fullName: Microsoft.Build.Evaluation.Project.GetItems(String)
- uid: Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetItemsByEvaluatedInclude(String)
  nameWithType: Project.GetItemsByEvaluatedInclude(String)
  fullName: Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(String)
- uid: Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetItemsIgnoringCondition(String)
  nameWithType: Project.GetItemsIgnoringCondition(String)
  fullName: Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(String)
- uid: Microsoft.Build.Evaluation.Project.GetLogicalProject
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetLogicalProject()
  nameWithType: Project.GetLogicalProject()
  fullName: Microsoft.Build.Evaluation.Project.GetLogicalProject()
- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Construction.ProjectElement}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ProjectElement>
  nameWithType: IEnumerable<ProjectElement>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Construction.ProjectElement>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.Build.Construction.ProjectElement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Construction.ProjectElement
    name: ProjectElement
    nameWithType: ProjectElement
    fullName: ProjectElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetMetadataValueEscaped(ProjectMetadata)
  nameWithType: Project.GetMetadataValueEscaped(ProjectMetadata)
  fullName: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(ProjectMetadata)
- uid: Microsoft.Build.Evaluation.ProjectMetadata
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectMetadata
  nameWithType: ProjectMetadata
  fullName: Microsoft.Build.Evaluation.ProjectMetadata
- uid: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetMetadataValueEscaped(ProjectItem,String)
  nameWithType: Project.GetMetadataValueEscaped(ProjectItem,String)
  fullName: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(ProjectItem,String)
- uid: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetMetadataValueEscaped(ProjectItemDefinition,String)
  nameWithType: Project.GetMetadataValueEscaped(ProjectItemDefinition,String)
  fullName: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(ProjectItemDefinition,String)
- uid: Microsoft.Build.Evaluation.Project.GetProperty(System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetProperty(String)
  nameWithType: Project.GetProperty(String)
  fullName: Microsoft.Build.Evaluation.Project.GetProperty(String)
- uid: Microsoft.Build.Evaluation.ProjectProperty
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectProperty
  nameWithType: ProjectProperty
  fullName: Microsoft.Build.Evaluation.ProjectProperty
- uid: Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetPropertyValue(String)
  nameWithType: Project.GetPropertyValue(String)
  fullName: Microsoft.Build.Evaluation.Project.GetPropertyValue(String)
- uid: Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetPropertyValueEscaped(ProjectProperty)
  nameWithType: Project.GetPropertyValueEscaped(ProjectProperty)
  fullName: Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(ProjectProperty)
- uid: Microsoft.Build.Evaluation.Project.GlobalProperties
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GlobalProperties
  nameWithType: Project.GlobalProperties
  fullName: Microsoft.Build.Evaluation.Project.GlobalProperties
- uid: Microsoft.Build.Evaluation.Project.Imports
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Imports
  nameWithType: Project.Imports
  fullName: Microsoft.Build.Evaluation.Project.Imports
- uid: System.Collections.Generic.IList{Microsoft.Build.Evaluation.ResolvedImport}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<ResolvedImport>
  nameWithType: IList<ResolvedImport>
  fullName: System.Collections.Generic.IList<Microsoft.Build.Evaluation.ResolvedImport>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<Microsoft.Build.Evaluation.ResolvedImport>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Evaluation.ResolvedImport
    name: ResolvedImport
    nameWithType: ResolvedImport
    fullName: ResolvedImport
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ImportsIncludingDuplicates
  nameWithType: Project.ImportsIncludingDuplicates
  fullName: Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates
- uid: Microsoft.Build.Evaluation.Project.IsBuildEnabled
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: IsBuildEnabled
  nameWithType: Project.IsBuildEnabled
  fullName: Microsoft.Build.Evaluation.Project.IsBuildEnabled
- uid: Microsoft.Build.Evaluation.Project.IsDirty
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: IsDirty
  nameWithType: Project.IsDirty
  fullName: Microsoft.Build.Evaluation.Project.IsDirty
- uid: Microsoft.Build.Evaluation.Project.ItemDefinitions
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ItemDefinitions
  nameWithType: Project.ItemDefinitions
  fullName: Microsoft.Build.Evaluation.Project.ItemDefinitions
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Evaluation.ProjectItemDefinition}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,ProjectItemDefinition>
  nameWithType: IDictionary<String,ProjectItemDefinition>
  fullName: System.Collections.Generic.IDictionary<System.String,Microsoft.Build.Evaluation.ProjectItemDefinition>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,Microsoft.Build.Evaluation.ProjectItemDefinition>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.Build.Evaluation.ProjectItemDefinition
    name: ProjectItemDefinition
    nameWithType: ProjectItemDefinition
    fullName: ProjectItemDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.Items
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Items
  nameWithType: Project.Items
  fullName: Microsoft.Build.Evaluation.Project.Items
- uid: Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ItemsIgnoringCondition
  nameWithType: Project.ItemsIgnoringCondition
  fullName: Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition
- uid: Microsoft.Build.Evaluation.Project.ItemTypes
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ItemTypes
  nameWithType: Project.ItemTypes
  fullName: Microsoft.Build.Evaluation.Project.ItemTypes
- uid: System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.MarkDirty
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: MarkDirty()
  nameWithType: Project.MarkDirty()
  fullName: Microsoft.Build.Evaluation.Project.MarkDirty()
- uid: Microsoft.Build.Evaluation.Project.ProjectCollection
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ProjectCollection
  nameWithType: Project.ProjectCollection
  fullName: Microsoft.Build.Evaluation.Project.ProjectCollection
- uid: Microsoft.Build.Evaluation.Project.ProjectFileLocation
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ProjectFileLocation
  nameWithType: Project.ProjectFileLocation
  fullName: Microsoft.Build.Evaluation.Project.ProjectFileLocation
- uid: Microsoft.Build.Construction.ElementLocation
  parent: Microsoft.Build.Construction
  isExternal: false
  name: ElementLocation
  nameWithType: ElementLocation
  fullName: Microsoft.Build.Construction.ElementLocation
- uid: Microsoft.Build.Evaluation.Project.Properties
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Properties
  nameWithType: Project.Properties
  fullName: Microsoft.Build.Evaluation.Project.Properties
- uid: Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ReevaluateIfNecessary()
  nameWithType: Project.ReevaluateIfNecessary()
  fullName: Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary()
- uid: Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: RemoveGlobalProperty(String)
  nameWithType: Project.RemoveGlobalProperty(String)
  fullName: Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(String)
- uid: Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: RemoveItem(ProjectItem)
  nameWithType: Project.RemoveItem(ProjectItem)
  fullName: Microsoft.Build.Evaluation.Project.RemoveItem(ProjectItem)
- uid: Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: RemoveItems(IEnumerable<ProjectItem>)
  nameWithType: Project.RemoveItems(IEnumerable<ProjectItem>)
  fullName: Microsoft.Build.Evaluation.Project.RemoveItems(IEnumerable<ProjectItem>)
- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ProjectItem>
  nameWithType: IEnumerable<ProjectItem>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectItem>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.Build.Evaluation.ProjectItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Evaluation.ProjectItem
    name: ProjectItem
    nameWithType: ProjectItem
    fullName: ProjectItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: RemoveProperty(ProjectProperty)
  nameWithType: Project.RemoveProperty(ProjectProperty)
  fullName: Microsoft.Build.Evaluation.Project.RemoveProperty(ProjectProperty)
- uid: Microsoft.Build.Evaluation.Project.Save
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Save()
  nameWithType: Project.Save()
  fullName: Microsoft.Build.Evaluation.Project.Save()
- uid: Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Save(TextWriter)
  nameWithType: Project.Save(TextWriter)
  fullName: Microsoft.Build.Evaluation.Project.Save(TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: Microsoft.Build.Evaluation.Project.Save(System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Save(String)
  nameWithType: Project.Save(String)
  fullName: Microsoft.Build.Evaluation.Project.Save(String)
- uid: Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Save(Encoding)
  nameWithType: Project.Save(Encoding)
  fullName: Microsoft.Build.Evaluation.Project.Save(Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Save(String,Encoding)
  nameWithType: Project.Save(String,Encoding)
  fullName: Microsoft.Build.Evaluation.Project.Save(String,Encoding)
- uid: Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: SaveLogicalProject(TextWriter)
  nameWithType: Project.SaveLogicalProject(TextWriter)
  fullName: Microsoft.Build.Evaluation.Project.SaveLogicalProject(TextWriter)
- uid: Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: SetGlobalProperty(String,String)
  nameWithType: Project.SetGlobalProperty(String,String)
  fullName: Microsoft.Build.Evaluation.Project.SetGlobalProperty(String,String)
- uid: Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: SetProperty(String,String)
  nameWithType: Project.SetProperty(String,String)
  fullName: Microsoft.Build.Evaluation.Project.SetProperty(String,String)
- uid: Microsoft.Build.Evaluation.Project.SkipEvaluation
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: SkipEvaluation
  nameWithType: Project.SkipEvaluation
  fullName: Microsoft.Build.Evaluation.Project.SkipEvaluation
- uid: Microsoft.Build.Evaluation.Project.SubToolsetVersion
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: SubToolsetVersion
  nameWithType: Project.SubToolsetVersion
  fullName: Microsoft.Build.Evaluation.Project.SubToolsetVersion
- uid: Microsoft.Build.Evaluation.Project.Targets
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Targets
  nameWithType: Project.Targets
  fullName: Microsoft.Build.Evaluation.Project.Targets
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.ProjectTargetInstance}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,ProjectTargetInstance>
  nameWithType: IDictionary<String,ProjectTargetInstance>
  fullName: System.Collections.Generic.IDictionary<System.String,Microsoft.Build.Execution.ProjectTargetInstance>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,Microsoft.Build.Execution.ProjectTargetInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.Build.Execution.ProjectTargetInstance
    name: ProjectTargetInstance
    nameWithType: ProjectTargetInstance
    fullName: ProjectTargetInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Project.ToolsVersion
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ToolsVersion
  nameWithType: Project.ToolsVersion
  fullName: Microsoft.Build.Evaluation.Project.ToolsVersion
- uid: Microsoft.Build.Evaluation.Project.Xml
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Xml
  nameWithType: Project.Xml
  fullName: Microsoft.Build.Evaluation.Project.Xml
- uid: Microsoft.Build.Evaluation.Project.#ctor*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Project
  nameWithType: Project.Project
- uid: Microsoft.Build.Evaluation.Project.AddItem*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: AddItem
  nameWithType: Project.AddItem
- uid: Microsoft.Build.Evaluation.Project.AddItemFast*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: AddItemFast
  nameWithType: Project.AddItemFast
- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: AllEvaluatedItemDefinitionMetadata
  nameWithType: Project.AllEvaluatedItemDefinitionMetadata
- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedItems*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: AllEvaluatedItems
  nameWithType: Project.AllEvaluatedItems
- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedProperties*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: AllEvaluatedProperties
  nameWithType: Project.AllEvaluatedProperties
- uid: Microsoft.Build.Evaluation.Project.Build*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Build
  nameWithType: Project.Build
- uid: Microsoft.Build.Evaluation.Project.ConditionedProperties*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ConditionedProperties
  nameWithType: Project.ConditionedProperties
- uid: Microsoft.Build.Evaluation.Project.CreateProjectInstance*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: CreateProjectInstance
  nameWithType: Project.CreateProjectInstance
- uid: Microsoft.Build.Evaluation.Project.DirectoryPath*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: DirectoryPath
  nameWithType: Project.DirectoryPath
- uid: Microsoft.Build.Evaluation.Project.DisableMarkDirty*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: DisableMarkDirty
  nameWithType: Project.DisableMarkDirty
- uid: Microsoft.Build.Evaluation.Project.EvaluationCounter*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: EvaluationCounter
  nameWithType: Project.EvaluationCounter
- uid: Microsoft.Build.Evaluation.Project.ExpandString*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ExpandString
  nameWithType: Project.ExpandString
- uid: Microsoft.Build.Evaluation.Project.FullPath*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: FullPath
  nameWithType: Project.FullPath
- uid: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetEvaluatedItemIncludeEscaped
  nameWithType: Project.GetEvaluatedItemIncludeEscaped
- uid: Microsoft.Build.Evaluation.Project.GetItems*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetItems
  nameWithType: Project.GetItems
- uid: Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetItemsByEvaluatedInclude
  nameWithType: Project.GetItemsByEvaluatedInclude
- uid: Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetItemsIgnoringCondition
  nameWithType: Project.GetItemsIgnoringCondition
- uid: Microsoft.Build.Evaluation.Project.GetLogicalProject*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetLogicalProject
  nameWithType: Project.GetLogicalProject
- uid: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetMetadataValueEscaped
  nameWithType: Project.GetMetadataValueEscaped
- uid: Microsoft.Build.Evaluation.Project.GetProperty*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetProperty
  nameWithType: Project.GetProperty
- uid: Microsoft.Build.Evaluation.Project.GetPropertyValue*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetPropertyValue
  nameWithType: Project.GetPropertyValue
- uid: Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GetPropertyValueEscaped
  nameWithType: Project.GetPropertyValueEscaped
- uid: Microsoft.Build.Evaluation.Project.GlobalProperties*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: GlobalProperties
  nameWithType: Project.GlobalProperties
- uid: Microsoft.Build.Evaluation.Project.Imports*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Imports
  nameWithType: Project.Imports
- uid: Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ImportsIncludingDuplicates
  nameWithType: Project.ImportsIncludingDuplicates
- uid: Microsoft.Build.Evaluation.Project.IsBuildEnabled*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: IsBuildEnabled
  nameWithType: Project.IsBuildEnabled
- uid: Microsoft.Build.Evaluation.Project.IsDirty*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: IsDirty
  nameWithType: Project.IsDirty
- uid: Microsoft.Build.Evaluation.Project.ItemDefinitions*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ItemDefinitions
  nameWithType: Project.ItemDefinitions
- uid: Microsoft.Build.Evaluation.Project.Items*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Items
  nameWithType: Project.Items
- uid: Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ItemsIgnoringCondition
  nameWithType: Project.ItemsIgnoringCondition
- uid: Microsoft.Build.Evaluation.Project.ItemTypes*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ItemTypes
  nameWithType: Project.ItemTypes
- uid: Microsoft.Build.Evaluation.Project.MarkDirty*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: MarkDirty
  nameWithType: Project.MarkDirty
- uid: Microsoft.Build.Evaluation.Project.ProjectCollection*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ProjectCollection
  nameWithType: Project.ProjectCollection
- uid: Microsoft.Build.Evaluation.Project.ProjectFileLocation*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ProjectFileLocation
  nameWithType: Project.ProjectFileLocation
- uid: Microsoft.Build.Evaluation.Project.Properties*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Properties
  nameWithType: Project.Properties
- uid: Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ReevaluateIfNecessary
  nameWithType: Project.ReevaluateIfNecessary
- uid: Microsoft.Build.Evaluation.Project.RemoveGlobalProperty*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: RemoveGlobalProperty
  nameWithType: Project.RemoveGlobalProperty
- uid: Microsoft.Build.Evaluation.Project.RemoveItem*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: RemoveItem
  nameWithType: Project.RemoveItem
- uid: Microsoft.Build.Evaluation.Project.RemoveItems*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: RemoveItems
  nameWithType: Project.RemoveItems
- uid: Microsoft.Build.Evaluation.Project.RemoveProperty*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: RemoveProperty
  nameWithType: Project.RemoveProperty
- uid: Microsoft.Build.Evaluation.Project.Save*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Save
  nameWithType: Project.Save
- uid: Microsoft.Build.Evaluation.Project.SaveLogicalProject*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: SaveLogicalProject
  nameWithType: Project.SaveLogicalProject
- uid: Microsoft.Build.Evaluation.Project.SetGlobalProperty*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: SetGlobalProperty
  nameWithType: Project.SetGlobalProperty
- uid: Microsoft.Build.Evaluation.Project.SetProperty*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: SetProperty
  nameWithType: Project.SetProperty
- uid: Microsoft.Build.Evaluation.Project.SkipEvaluation*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: SkipEvaluation
  nameWithType: Project.SkipEvaluation
- uid: Microsoft.Build.Evaluation.Project.SubToolsetVersion*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: SubToolsetVersion
  nameWithType: Project.SubToolsetVersion
- uid: Microsoft.Build.Evaluation.Project.Targets*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Targets
  nameWithType: Project.Targets
- uid: Microsoft.Build.Evaluation.Project.ToolsVersion*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: ToolsVersion
  nameWithType: Project.ToolsVersion
- uid: Microsoft.Build.Evaluation.Project.Xml*
  parent: Microsoft.Build.Evaluation.Project
  isExternal: false
  name: Xml
  nameWithType: Project.Xml
